{
	"metadata": {
		"type": "App"
	},
	"project": {
		"vr": false,
		"cache": true,
		"editable": false,
		"debugMode": true,
		"shadows": true
	},
	"javascripts": [
		{
			"name": "watch.js",
			"source": "\"/**\\n * DEVELOPED BY\\n * GIL LOPES BUENO\\n * gilbueno.mail@gmail.com\\n *\\n * WORKS WITH:\\n * IE8*, IE 9+, FF 4+, SF 5+, WebKit, CH 7+, OP 12+, BESEN, Rhino 1.7+\\n * For IE8 (and other legacy browsers) WatchJS will use dirty checking  \\n *\\n * FORK:\\n * https://github.com/melanke/Watch.JS\\n *\\n * LICENSE: MIT\\n */\\n\\n\\\"use strict\\\";\\n(function (factory) {\\n    if (typeof exports === 'object') {\\n        // Node. Does not work with strict CommonJS, but\\n        // only CommonJS-like enviroments that support module.exports,\\n        // like Node.\\n        module.exports = factory();\\n    } else if (typeof define === 'function' && define.amd) {\\n        // AMD. Register as an anonymous module.\\n        define(factory);\\n    } else {\\n        // Browser globals\\n        window.WatchJS = factory();\\n        window.watch = window.WatchJS.watch;\\n        window.unwatch = window.WatchJS.unwatch;\\n        window.callWatchers = window.WatchJS.callWatchers;\\n    }\\n}(function () {\\n\\n    var WatchJS = {\\n        noMore: false,        // use WatchJS.suspend(obj) instead\\n        useDirtyCheck: false, // use only dirty checking to track changes.\\n        preserveExistingSetters: false\\n    },\\n    lengthsubjects = [];\\n    \\n    var dirtyChecklist = [];\\n    var pendingChanges = []; // used coalesce changes from defineProperty and __defineSetter__\\n    \\n    var supportDefineProperty = false;\\n    try {\\n        supportDefineProperty = Object.defineProperty && Object.defineProperty({},'x', {});\\n    } catch(ex) {  /* not supported */  }\\n\\n    var isFunction = function (functionToCheck) {\\n        var getType = {};\\n        return functionToCheck && getType.toString.call(functionToCheck) == '[object Function]';\\n    };\\n\\n    var isInt = function (x) {\\n        return x % 1 === 0;\\n    };\\n\\n    var isArray = function(obj) {\\n        return Object.prototype.toString.call(obj) === '[object Array]';\\n    };\\n\\n    var isObject = function(obj) {\\n        return {}.toString.apply(obj) === '[object Object]';\\n    };\\n    \\n    var getObjDiff = function(a, b){\\n        var aplus = [],\\n        bplus = [];\\n\\n        if(!(typeof a == \\\"string\\\") && !(typeof b == \\\"string\\\")){\\n\\n            if (isArray(a) && b) {\\n                for (var i=0; i<a.length; i++) {\\n                    if (b[i] === undefined) aplus.push(i);\\n                }\\n            } else {\\n                for(var i in a){\\n                    if (a.hasOwnProperty(i)) {\\n                        if(b && !b.hasOwnProperty(i)) {\\n                            aplus.push(i);\\n                        }\\n                    }\\n                }\\n            }\\n\\n            if (isArray(b) && a) {\\n                for (var j=0; j<b.length; j++) {\\n                    if (a[j] === undefined) bplus.push(j);\\n                }\\n            } else {\\n                for(var j in b){\\n                    if (b.hasOwnProperty(j)) {\\n                        if(a && !a.hasOwnProperty(j)) {\\n                            bplus.push(j);\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n\\n        return {\\n            added: aplus,\\n            removed: bplus\\n        }\\n    };\\n\\n    var clone = function(obj){\\n\\n        if (null == obj || \\\"object\\\" != typeof obj) {\\n            return obj;\\n        }\\n\\n        var copy = obj.constructor();\\n\\n        for (var attr in obj) {\\n            copy[attr] = obj[attr];\\n        }\\n\\n        return copy;        \\n\\n    }\\n\\n    var getExistingSetter = function (obj, propName) {\\n        if (WatchJS.preserveExistingSetters) {\\n            var existing = Object.getOwnPropertyDescriptor(obj, propName);\\n            return existing.set;\\n        }\\n\\n        return undefined;\\n    }\\n\\n    var defineGetAndSet = function (obj, propName, getter, setter) {\\n        try {\\n            var existingSetter = getExistingSetter(obj, propName);\\n            Object.defineProperty(obj, propName, {\\n                get: getter,\\n                set: function(value) {\\n                    setter.call(this, value, true); // coalesce changes\\n                    if (existingSetter) {\\n                        existingSetter(value);\\n                    }\\n                },\\n                enumerable: true,\\n                configurable: true\\n            });\\n        }\\n        catch(e1) {\\n            try{\\n                Object.prototype.__defineGetter__.call(obj, propName, getter);\\n                Object.prototype.__defineSetter__.call(obj, propName, function(value) {\\n                    setter.call(this,value,true); // coalesce changes\\n                });\\n            }\\n            catch(e2) {\\n                observeDirtyChanges(obj,propName,setter);\\n                //throw new Error(\\\"watchJS error: browser not supported :/\\\")\\n            }\\n        }\\n\\n    };\\n\\n    var defineProp = function (obj, propName, value) {\\n        try {\\n            Object.defineProperty(obj, propName, {\\n                enumerable: false,\\n                configurable: true,\\n                writable: false,\\n                value: value\\n            });\\n        } catch(error) {\\n            obj[propName] = value;\\n        }\\n    };\\n\\n    var observeDirtyChanges = function(obj,propName,setter) {\\n        dirtyChecklist[dirtyChecklist.length] = {\\n            prop:       propName,\\n            object:     obj,\\n            orig:       clone(obj[propName]),\\n            callback:   setter\\n        }        \\n    }\\n    \\n    var watch = function () {\\n\\n        if (isFunction(arguments[1])) {\\n            watchAll.apply(this, arguments);\\n        } else if (isArray(arguments[1])) {\\n            watchMany.apply(this, arguments);\\n        } else {\\n            watchOne.apply(this, arguments);\\n        }\\n\\n    };\\n\\n\\n    var watchAll = function (obj, watcher, level, addNRemove) {\\n\\n        if ((typeof obj == \\\"string\\\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\\n            return;\\n        }\\n\\n        if(isArray(obj)) {\\n            defineWatcher(obj, \\\"__watchall__\\\", watcher, level); // watch all changes on the array\\n            if (level===undefined||level > 0) {\\n                for (var prop = 0; prop < obj.length; prop++) { // watch objects in array\\n                   watchAll(obj[prop],watcher,level, addNRemove);\\n                }\\n            }\\n        } \\n        else {\\n            var prop,props = [];\\n            for (prop in obj) { //for each attribute if obj is an object\\n                if (prop == \\\"$val\\\" || (!supportDefineProperty && prop === 'watchers')) {\\n                    continue;\\n                }\\n\\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\\n                    props.push(prop); //put in the props\\n                }\\n            }\\n            watchMany(obj, props, watcher, level, addNRemove); //watch all items of the props\\n        }\\n\\n\\n        if (addNRemove) {\\n            pushToLengthSubjects(obj, \\\"$$watchlengthsubjectroot\\\", watcher, level);\\n        }\\n    };\\n\\n\\n    var watchMany = function (obj, props, watcher, level, addNRemove) {\\n\\n        if ((typeof obj == \\\"string\\\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\\n            return;\\n        }\\n\\n        for (var i=0; i<props.length; i++) { //watch each property\\n            var prop = props[i];\\n            watchOne(obj, prop, watcher, level, addNRemove);\\n        }\\n\\n    };\\n\\n    var watchOne = function (obj, prop, watcher, level, addNRemove) {\\n        if ((typeof obj == \\\"string\\\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\\n            return;\\n        }\\n\\n        if(isFunction(obj[prop])) { //dont watch if it is a function\\n            return;\\n        }\\n        if(obj[prop] != null && (level === undefined || level > 0)){\\n            watchAll(obj[prop], watcher, level!==undefined? level-1 : level); //recursively watch all attributes of this\\n        }\\n\\n        defineWatcher(obj, prop, watcher, level);\\n\\n        if(addNRemove && (level === undefined || level > 0)){\\n            pushToLengthSubjects(obj, prop, watcher, level);\\n        }\\n\\n    };\\n\\n    var unwatch = function () {\\n\\n        if (isFunction(arguments[1])) {\\n            unwatchAll.apply(this, arguments);\\n        } else if (isArray(arguments[1])) {\\n            unwatchMany.apply(this, arguments);\\n        } else {\\n            unwatchOne.apply(this, arguments);\\n        }\\n\\n    };\\n\\n    var unwatchAll = function (obj, watcher) {\\n\\n        if (obj instanceof String || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\\n            return;\\n        }\\n\\n        if (isArray(obj)) {\\n            var props = ['__watchall__'];\\n            for (var prop = 0; prop < obj.length; prop++) { //for each item if obj is an array\\n                props.push(prop); //put in the props\\n            }\\n            unwatchMany(obj, props, watcher); //watch all itens of the props\\n        } else {\\n            var unwatchPropsInObject = function (obj2) {\\n                var props = [];\\n                for (var prop2 in obj2) { //for each attribute if obj is an object\\n                    if (obj2.hasOwnProperty(prop2)) {\\n                        if (obj2[prop2] instanceof Object) {\\n                            unwatchPropsInObject(obj2[prop2]); //recurs into object props\\n                        } else {\\n                            props.push(prop2); //put in the props\\n                        }\\n                    }\\n                }\\n                unwatchMany(obj2, props, watcher); //unwatch all of the props\\n            };\\n            unwatchPropsInObject(obj);\\n        }\\n    };\\n\\n\\n    var unwatchMany = function (obj, props, watcher) {\\n\\n        for (var prop2 in props) { //watch each attribute of \\\"props\\\" if is an object\\n            if (props.hasOwnProperty(prop2)) {\\n                unwatchOne(obj, props[prop2], watcher);\\n            }\\n        }\\n    };\\n\\n    var timeouts = [],\\n        timerID = null;\\n    function clearTimerID() {\\n        timerID = null;\\n        for(var i=0; i< timeouts.length; i++) {\\n            timeouts[i]();\\n        }\\n        timeouts.length = 0;\\n    }\\n    var getTimerID= function () {\\n        if (!timerID)  {\\n            timerID = setTimeout(clearTimerID);\\n        }\\n        return timerID;\\n    }\\n    var registerTimeout = function(fn) { // register function to be called on timeout\\n        if (timerID==null) getTimerID();\\n        timeouts[timeouts.length] = fn;\\n    }\\n    \\n    // Track changes made to an array, object or an object's property \\n    // and invoke callback with a single change object containing type, value, oldvalue and array splices\\n    // Syntax: \\n    //      trackChange(obj, callback, recursive, addNRemove)\\n    //      trackChange(obj, prop, callback, recursive, addNRemove)\\n    var trackChange = function() {\\n        var fn = (isFunction(arguments[2])) ? trackProperty : trackObject ;\\n        fn.apply(this,arguments);\\n    }\\n\\n    // track changes made to an object and invoke callback with a single change object containing type, value and array splices\\n    var trackObject= function(obj, callback, recursive, addNRemove) {\\n        var change = null,lastTimerID = -1;\\n        var isArr = isArray(obj);\\n        var level,fn = function(prop, action, newValue, oldValue) {\\n            var timerID = getTimerID();\\n            if (lastTimerID!==timerID) { // check if timer has changed since last update\\n                lastTimerID = timerID;\\n                change = {\\n                    type: 'update'\\n                }\\n                change['value'] = obj;\\n                change['splices'] = null;\\n                registerTimeout(function() {\\n                    callback.call(this,change);\\n                    change = null;\\n                });\\n            }\\n            // create splices for array changes\\n            if (isArr && obj === this && change !== null)  {                \\n                if (action==='pop'||action==='shift') {\\n                    newValue = [];\\n                    oldValue = [oldValue];\\n                }\\n                else if (action==='push'||action==='unshift') {\\n                    newValue = [newValue];\\n                    oldValue = [];\\n                }\\n                else if (action!=='splice') { \\n                    return; // return here - for reverse and sort operations we don't need to return splices. a simple update will do\\n                }\\n                if (!change.splices) change.splices = [];\\n                change.splices[change.splices.length] = {\\n                    index: prop,\\n                    deleteCount: oldValue ? oldValue.length : 0,\\n                    addedCount: newValue ? newValue.length : 0,\\n                    added: newValue,\\n                    deleted: oldValue\\n                };\\n            }\\n\\n        }  \\n        level = (recursive==true) ? undefined : 0;        \\n        watchAll(obj,fn, level, addNRemove);\\n    }\\n    \\n    // track changes made to the property of an object and invoke callback with a single change object containing type, value, oldvalue and splices\\n    var trackProperty = function(obj,prop,callback,recursive, addNRemove) { \\n        if (obj && prop) {\\n            watchOne(obj,prop,function(prop, action, newvalue, oldvalue) {\\n                var change = {\\n                    type: 'update'\\n                }\\n                change['value'] = newvalue;\\n                change['oldvalue'] = oldvalue;\\n                if (recursive && isObject(newvalue)||isArray(newvalue)) {\\n                    trackObject(newvalue,callback,recursive, addNRemove);\\n                }               \\n                callback.call(this,change);\\n            },0)\\n            \\n            if (recursive && isObject(obj[prop])||isArray(obj[prop])) {\\n                trackObject(obj[prop],callback,recursive, addNRemove);\\n            }                           \\n        }\\n    }\\n    \\n    \\n    var defineWatcher = function (obj, prop, watcher, level) {\\n        var newWatcher = false;\\n        var isArr = isArray(obj);\\n        \\n        if (!obj.watchers) {\\n            defineProp(obj, \\\"watchers\\\", {});\\n            if (isArr) {\\n                // watch array functions\\n                watchFunctions(obj, function(index,action,newValue, oldValue) {\\n                    addPendingChange(obj, index, action,newValue, oldValue);\\n                    if (level !== 0 && newValue && (isObject(newValue) || isArray(newValue))) {\\n                        var i,n, ln, wAll, watchList = obj.watchers[prop];\\n                        if ((wAll = obj.watchers['__watchall__'])) {\\n                            watchList = watchList ? watchList.concat(wAll) : wAll;\\n                        }\\n                        ln = watchList ?  watchList.length : 0;\\n                        for (i = 0; i<ln; i++) {\\n                            if (action!=='splice') {\\n                                watchAll(newValue, watchList[i], (level===undefined)?level:level-1);\\n                            }\\n                            else {\\n                                // watch spliced values\\n                                for(n=0; n < newValue.length; n++) {\\n                                    watchAll(newValue[n], watchList[i], (level===undefined)?level:level-1);\\n                                }\\n                            }\\n                        }\\n                    }\\n                });\\n            }\\n        }\\n\\n        if (!obj.watchers[prop]) {\\n            obj.watchers[prop] = [];\\n            if (!isArr) newWatcher = true;\\n        }\\n\\n        for (var i=0; i<obj.watchers[prop].length; i++) {\\n            if(obj.watchers[prop][i] === watcher){\\n                return;\\n            }\\n        }\\n\\n        obj.watchers[prop].push(watcher); //add the new watcher to the watchers array\\n\\n        if (newWatcher) {\\n            var val = obj[prop];            \\n            var getter = function () {\\n                return val;                        \\n            };\\n\\n            var setter = function (newval, delayWatcher) {\\n                var oldval = val;\\n                val = newval;                \\n                if (level !== 0 \\n                    && obj[prop] && (isObject(obj[prop]) || isArray(obj[prop]))\\n                    && !obj[prop].watchers) {\\n                    // watch sub properties\\n                    var i,ln = obj.watchers[prop].length; \\n                    for(i=0; i<ln; i++) {\\n                        watchAll(obj[prop], obj.watchers[prop][i], (level===undefined)?level:level-1);\\n                    }\\n                }\\n\\n                //watchFunctions(obj, prop);\\n                \\n                if (isSuspended(obj, prop)) {\\n                    resume(obj, prop);\\n                    return;\\n                }\\n\\n                if (!WatchJS.noMore){ // this does not work with Object.observe\\n                    //if (JSON.stringify(oldval) !== JSON.stringify(newval)) {\\n                    if (oldval !== newval) {\\n                        if (!delayWatcher) {\\n                            callWatchers(obj, prop, \\\"set\\\", newval, oldval);\\n                        }\\n                        else {\\n                            addPendingChange(obj, prop, \\\"set\\\", newval, oldval);\\n                        }\\n                        WatchJS.noMore = false;\\n                    }\\n                }\\n            };\\n\\n            if (WatchJS.useDirtyCheck) {\\n                observeDirtyChanges(obj,prop,setter);\\n            }\\n            else {\\n                defineGetAndSet(obj, prop, getter, setter);\\n            }\\n        }\\n\\n    };\\n\\n    var callWatchers = function (obj, prop, action, newval, oldval) {\\n        if (prop !== undefined) {\\n            var ln, wl, watchList = obj.watchers[prop];\\n            if ((wl = obj.watchers['__watchall__'])) {\\n                watchList = watchList ? watchList.concat(wl) : wl;\\n            }\\n            ln = watchList ? watchList.length : 0;\\n            for (var wr=0; wr< ln; wr++) {\\n                watchList[wr].call(obj, prop, action, newval, oldval);\\n            }\\n        } else {\\n            for (var prop in obj) {//call all\\n                if (obj.hasOwnProperty(prop)) {\\n                    callWatchers(obj, prop, action, newval, oldval);\\n                }\\n            }\\n        }\\n    };\\n\\n    var methodNames = ['pop', 'push', 'reverse', 'shift', 'sort', 'slice', 'unshift', 'splice'];\\n    var defineArrayMethodWatcher = function (obj, original, methodName, callback) {\\n        defineProp(obj, methodName, function () {\\n            var index = 0;\\n            var i,newValue, oldValue, response;                        \\n            // get values before splicing array \\n            if (methodName === 'splice') {\\n               var start = arguments[0];\\n               var end = start + arguments[1];\\n               oldValue = obj.slice(start,end);\\n               newValue = [];\\n               for(i=2;i<arguments.length;i++) {\\n                   newValue[i-2] = arguments[i];\\n               }\\n               index = start;\\n            } \\n            else {\\n                newValue = arguments.length > 0 ? arguments[0] : undefined;\\n            } \\n\\n            response = original.apply(obj, arguments);\\n            if (methodName !== 'slice') {\\n                if (methodName === 'pop') {\\n                    oldValue = response;\\n                    index = obj.length;\\n                }\\n                else if (methodName === 'push') {\\n                    index = obj.length-1;\\n                }\\n                else if (methodName === 'shift') {\\n                    oldValue = response;\\n                }\\n                else if (methodName !== 'unshift' && newValue===undefined) {\\n                    newValue = response;\\n                }\\n                callback.call(obj, index, methodName,newValue, oldValue)\\n            }\\n            return response;\\n        });\\n    };\\n\\n    var watchFunctions = function(obj, callback) {\\n\\n        if (!isFunction(callback) || !obj || (obj instanceof String) || (!isArray(obj))) {\\n            return;\\n        }\\n\\n        for (var i = methodNames.length, methodName; i--;) {\\n            methodName = methodNames[i];\\n            defineArrayMethodWatcher(obj, obj[methodName], methodName, callback);\\n        }\\n\\n    };\\n\\n    var unwatchOne = function (obj, prop, watcher) {\\n        if (prop) {\\n            if (obj.watchers && obj.watchers[prop]) {\\n                if (watcher === undefined) {\\n                    delete obj.watchers[prop]; // remove all property watchers\\n                }\\n                else {\\n                    for (var i = 0; i < obj.watchers[prop].length; i++) {\\n                        var w = obj.watchers[prop][i];\\n                        if (w == watcher) {\\n                            obj.watchers[prop].splice(i, 1);\\n                        }\\n                    }\\n                }\\n            }\\n        } else {\\n            delete obj.watchers;\\n        }\\n\\n        removeFromLengthSubjects(obj, prop, watcher);\\n        removeFromDirtyChecklist(obj, prop);\\n    };\\n    \\n    // suspend watchers until next update cycle\\n    var suspend = function(obj, prop) {\\n        if (obj.watchers) {\\n            var name = '__wjs_suspend__'+(prop!==undefined ? prop : '');\\n            obj.watchers[name] = true;\\n        }\\n    }\\n    \\n    var isSuspended = function(obj, prop) {\\n        return obj.watchers \\n               && (obj.watchers['__wjs_suspend__'] || \\n                   obj.watchers['__wjs_suspend__'+prop]);\\n    }\\n    \\n    // resumes preivously suspended watchers\\n    var resume = function(obj, prop) {\\n        registerTimeout(function() {\\n            delete obj.watchers['__wjs_suspend__'];\\n            delete obj.watchers['__wjs_suspend__'+prop];\\n        })\\n    }\\n\\n    var pendingTimerID = null;\\n    var addPendingChange = function(obj,prop, mode, newval, oldval) {\\n        pendingChanges[pendingChanges.length] = {\\n            obj:obj,\\n            prop: prop,\\n            mode: mode,\\n            newval: newval,\\n            oldval: oldval\\n        };\\n        if (pendingTimerID===null) {\\n            pendingTimerID = setTimeout(applyPendingChanges);\\n        }\\n    };\\n    \\n    \\n    var applyPendingChanges = function()  {\\n        // apply pending changes\\n        var change = null;\\n        pendingTimerID = null;\\n        for(var i=0;i < pendingChanges.length;i++) {\\n            change = pendingChanges[i];\\n            callWatchers(change.obj, change.prop, change.mode, change.newval, change.oldval);\\n        }\\n        if (change) {\\n            pendingChanges = [];\\n            change = null;\\n        }        \\n    }\\n\\n    var loop = function(){\\n\\n        // check for new or deleted props\\n        for(var i=0; i<lengthsubjects.length; i++) {\\n\\n            var subj = lengthsubjects[i];\\n\\n            if (subj.prop === \\\"$$watchlengthsubjectroot\\\") {\\n\\n                var difference = getObjDiff(subj.obj, subj.actual);\\n\\n                if(difference.added.length || difference.removed.length){\\n                    if(difference.added.length){\\n                        watchMany(subj.obj, difference.added, subj.watcher, subj.level - 1, true);\\n                    }\\n\\n                    subj.watcher.call(subj.obj, \\\"root\\\", \\\"differentattr\\\", difference, subj.actual);\\n                }\\n                subj.actual = clone(subj.obj);\\n\\n\\n            } else {\\n\\n                var difference = getObjDiff(subj.obj[subj.prop], subj.actual);\\n\\n                if(difference.added.length || difference.removed.length){\\n                    if(difference.added.length){\\n                        for (var j=0; j<subj.obj.watchers[subj.prop].length; j++) {\\n                            watchMany(subj.obj[subj.prop], difference.added, subj.obj.watchers[subj.prop][j], subj.level - 1, true);\\n                        }\\n                    }\\n\\n                    callWatchers(subj.obj, subj.prop, \\\"differentattr\\\", difference, subj.actual);\\n                }\\n\\n                subj.actual = clone(subj.obj[subj.prop]);\\n\\n            }\\n\\n        }\\n        \\n        // start dirty check\\n        var n, value;\\n        if (dirtyChecklist.length > 0) {\\n            for (var i = 0; i < dirtyChecklist.length; i++) {\\n                n = dirtyChecklist[i];\\n                value = n.object[n.prop];\\n                if (!compareValues(n.orig, value)) {\\n                    n.orig = clone(value);\\n                    n.callback(value);\\n                }\\n            }\\n        }\\n\\n    };\\n\\n    var compareValues =  function(a,b) {\\n        var i, state = true;\\n        if (a!==b)  {\\n            if (isObject(a)) {\\n                for(i in a) {\\n                    if (!supportDefineProperty && i==='watchers') continue;\\n                    if (a[i]!==b[i]) {\\n                        state = false;\\n                        break;\\n                    };\\n                }\\n            }\\n            else {\\n                state = false;\\n            }\\n        }\\n        return state;\\n    }\\n    \\n    var pushToLengthSubjects = function(obj, prop, watcher, level){\\n\\n        var actual;\\n\\n        if (prop === \\\"$$watchlengthsubjectroot\\\") {\\n            actual =  clone(obj);\\n        } else {\\n            actual = clone(obj[prop]);\\n        }\\n\\n        lengthsubjects.push({\\n            obj: obj,\\n            prop: prop,\\n            actual: actual,\\n            watcher: watcher,\\n            level: level\\n        });\\n    };\\n\\n    var removeFromLengthSubjects = function(obj, prop, watcher){\\n        for (var i=0; i<lengthsubjects.length; i++) {\\n            var subj = lengthsubjects[i];\\n\\n            if (subj.obj == obj) {\\n                if (!prop || subj.prop == prop) {\\n                    if (!watcher || subj.watcher == watcher) {\\n                        // if we splice off one item at position i\\n                        // we need to decrement i as the array is one item shorter\\n                        // so when we increment i in the loop statement we\\n                        // will land at the correct index.\\n                        // if it's not decremented, you won't delete all length subjects\\n                        lengthsubjects.splice(i--, 1);\\n                    }\\n                }\\n            }\\n        }\\n\\n    };\\n    \\n    var removeFromDirtyChecklist = function(obj, prop){\\n        var notInUse;\\n        for (var i=0; i<dirtyChecklist.length; i++) {\\n            var n = dirtyChecklist[i];\\n            var watchers = n.object.watchers;\\n            notInUse = (\\n                n.object == obj \\n                && (!prop || n.prop == prop)\\n                && watchers\\n                && (!prop || !watchers[prop] || watchers[prop].length == 0 )\\n            );\\n            if (notInUse)  {\\n                // we use the same syntax as in removeFromLengthSubjects\\n                dirtyChecklist.splice(i--, 1);\\n            }\\n        }\\n\\n    };    \\n\\n    setInterval(loop, 50);\\n\\n    WatchJS.watch = watch;\\n    WatchJS.unwatch = unwatch;\\n    WatchJS.callWatchers = callWatchers;\\n    WatchJS.suspend = suspend; // suspend watchers    \\n    WatchJS.onChange = trackChange;  // track changes made to object or  it's property and return a single change object\\n\\n    return WatchJS;\\n\\n}));\\n\""
		},
		{
			"name": "command.js",
			"source": "\"\\r\\n/*\\r\\n     * @author dforrer / https://github.com/dforrer\\r\\n     * Developed as part of a project at University of Applied Sciences and Arts Northwestern Switzerland (www.fhnw.ch)\\r\\n*/\\r\\n\\r\\n/*\\r\\n     * @param editorRef pointer to main editor object used to initialize\\r\\n     *        each command object with a reference to the editor\\r\\n     * @constructor\\r\\n*/\\r\\n\\r\\n    var Command = function ( editorReference ) {\\r\\n\\r\\n        this.id = - 1;\\r\\n        this.inMemory = false;\\r\\n        this.updatable = false;\\r\\n        this.type = \\\"\\\";\\r\\n        this.name = \\\"\\\";\\r\\n\\r\\n    //    if ( editorReference !== undefined ) {\\r\\n\\r\\n    //        Command.editor = editorReference;\\r\\n\\r\\n    //    }\\r\\n\\r\\n    //    this.editor = Command.editor;\\r\\n\\r\\n    };\\r\\n\\r\\n    Command.prototype.toJSON = function () {\\r\\n\\r\\n        var output = {};\\r\\n        output.type = this.type;\\r\\n        output.id = this.id;\\r\\n        output.name = this.name;\\r\\n        return output;\\r\\n\\r\\n    };\\r\\n\\r\\n    Command.prototype.fromJSON = function ( json ) {\\r\\n\\r\\n        this.inMemory = true;\\r\\n        this.type = json.type;\\r\\n        this.id = json.id;\\r\\n        this.name = json.name;\\r\\n\\r\\n    };\\r\\n\""
		},
		{
			"name": "Objectid.js",
			"source": "\"/*\\r\\n*\\r\\n* Copyright (c) 2011-2014- Justin Dearing (zippy1981@gmail.com)\\r\\n* Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)\\r\\n* and GPL (http://www.opensource.org/licenses/gpl-license.php) version 2 licenses.\\r\\n* This software is not distributed under version 3 or later of the GPL.\\r\\n*\\r\\n* Version 1.0.2\\r\\n*\\r\\n*/\\r\\n\\r\\nif (!document) var document = { cookie: '' }; // fix crashes on node\\r\\n\\r\\n/**\\r\\n * Javascript class that mimics how WCF serializes a object of type MongoDB.Bson.ObjectId\\r\\n * and converts between that format and the standard 24 character representation.\\r\\n*/\\r\\nObjectId = (function () {\\r\\n    var increment = Math.floor(Math.random() * (16777216));\\r\\n    var pid = Math.floor(Math.random() * (65536));\\r\\n    var machine = Math.floor(Math.random() * (16777216));\\r\\n\\r\\n    var setMachineCookie = function() {\\r\\n        var cookieList = document.cookie.split('; ');\\r\\n        for (var i in cookieList) {\\r\\n            var cookie = cookieList[i].split('=');\\r\\n            var cookieMachineId = parseInt(cookie[1], 10);\\r\\n            if (cookie[0] == 'mongoMachineId' && cookieMachineId && cookieMachineId >= 0 && cookieMachineId <= 16777215) {\\r\\n                machine = cookieMachineId;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        document.cookie = 'mongoMachineId=' + machine + ';expires=Tue, 19 Jan 2038 05:00:00 GMT;path=/';\\r\\n    };\\r\\n    if (typeof (localStorage) != 'undefined') {\\r\\n        try {\\r\\n            var mongoMachineId = parseInt(localStorage['mongoMachineId']);\\r\\n            if (mongoMachineId >= 0 && mongoMachineId <= 16777215) {\\r\\n                machine = Math.floor(localStorage['mongoMachineId']);\\r\\n            }\\r\\n            // Just always stick the value in.\\r\\n            localStorage['mongoMachineId'] = machine;\\r\\n        } catch (e) {\\r\\n            setMachineCookie();\\r\\n        }\\r\\n    }\\r\\n    else {\\r\\n        setMachineCookie();\\r\\n    }\\r\\n\\r\\n    function ObjId() {\\r\\n        if (!(this instanceof ObjectId)) {\\r\\n            return new ObjectId(arguments[0], arguments[1], arguments[2], arguments[3]).toString();\\r\\n        }\\r\\n\\r\\n        if (typeof (arguments[0]) == 'object') {\\r\\n            this.timestamp = arguments[0].timestamp;\\r\\n            this.machine = arguments[0].machine;\\r\\n            this.pid = arguments[0].pid;\\r\\n            this.increment = arguments[0].increment;\\r\\n        }\\r\\n        else if (typeof (arguments[0]) == 'string' && arguments[0].length == 24) {\\r\\n            this.timestamp = Number('0x' + arguments[0].substr(0, 8)),\\r\\n            this.machine = Number('0x' + arguments[0].substr(8, 6)),\\r\\n            this.pid = Number('0x' + arguments[0].substr(14, 4)),\\r\\n            this.increment = Number('0x' + arguments[0].substr(18, 6))\\r\\n        }\\r\\n        else if (arguments.length == 4 && arguments[0] != null) {\\r\\n            this.timestamp = arguments[0];\\r\\n            this.machine = arguments[1];\\r\\n            this.pid = arguments[2];\\r\\n            this.increment = arguments[3];\\r\\n        }\\r\\n        else {\\r\\n            this.timestamp = Math.floor(new Date().valueOf() / 1000);\\r\\n            this.machine = machine;\\r\\n            this.pid = pid;\\r\\n            this.increment = increment++;\\r\\n            if (increment > 0xffffff) {\\r\\n                increment = 0;\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    return ObjId;\\r\\n})();\\r\\n\\r\\nObjectId.prototype.getDate = function () {\\r\\n    return new Date(this.timestamp * 1000);\\r\\n};\\r\\n\\r\\nObjectId.prototype.toArray = function () {\\r\\n    var strOid = this.toString();\\r\\n    var array = [];\\r\\n    var i;\\r\\n    for(i = 0; i < 12; i++) {\\r\\n        array[i] = parseInt(strOid.slice(i*2, i*2+2), 16);\\r\\n    }\\r\\n    return array;\\r\\n};\\r\\n\\r\\n/**\\r\\n* Turns a WCF representation of a BSON ObjectId into a 24 character string representation.\\r\\n*/\\r\\nObjectId.prototype.toString = function () {\\r\\n    if (this.timestamp === undefined\\r\\n        || this.machine === undefined\\r\\n        || this.pid === undefined\\r\\n        || this.increment === undefined) {\\r\\n        return 'Invalid ObjectId';\\r\\n    }\\r\\n\\r\\n    var timestamp = this.timestamp.toString(16);\\r\\n    var machine = this.machine.toString(16);\\r\\n    var pid = this.pid.toString(16);\\r\\n    var increment = this.increment.toString(16);\\r\\n    return '00000000'.substr(0, 8 - timestamp.length) + timestamp +\\r\\n           '000000'.substr(0, 6 - machine.length) + machine +\\r\\n           '0000'.substr(0, 4 - pid.length) + pid +\\r\\n           '000000'.substr(0, 6 - increment.length) + increment;\\r\\n};\\r\\n\""
		},
		{
			"name": "jquery.min.js",
			"source": "\"/*! jQuery v2.1.3 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */\\r\\n!function(a,b){\\\"object\\\"==typeof module&&\\\"object\\\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\\\"jQuery requires a window with a document\\\");return b(a)}:b(a)}(\\\"undefined\\\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\\\"2.1.3\\\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g,p=/^-ms-/,q=/-([\\\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\\\"\\\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\\\"boolean\\\"==typeof g&&(j=g,g=arguments[h]||{},h++),\\\"object\\\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\\\"jQuery\\\"+(m+Math.random()).replace(/\\\\D/g,\\\"\\\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\\\"function\\\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return\\\"object\\\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\\\"isPrototypeOf\\\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\\\"\\\":\\\"object\\\"==typeof a||\\\"function\\\"==typeof a?h[i.call(a)]||\\\"object\\\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\\\"use strict\\\")?(b=l.createElement(\\\"script\\\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\\\"ms-\\\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\\\"\\\":(a+\\\"\\\").replace(o,\\\"\\\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\\\"string\\\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\\\"string\\\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\\\"Boolean Number String Function Array Date RegExp Object Error\\\".split(\\\" \\\"),function(a,b){h[\\\"[object \\\"+b+\\\"]\\\"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return\\\"function\\\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\\\"array\\\"===c||0===b||\\\"number\\\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\\\"sizzle\\\"+1*new Date,v=a.document,w=0,x=0,y=hb(),z=hb(),A=hb(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K=\\\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\\\",L=\\\"[\\\\\\\\x20\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\f]\\\",M=\\\"(?:\\\\\\\\\\\\\\\\.|[\\\\\\\\w-]|[^\\\\\\\\x00-\\\\\\\\xa0])+\\\",N=M.replace(\\\"w\\\",\\\"w#\\\"),O=\\\"\\\\\\\\[\\\"+L+\\\"*(\\\"+M+\\\")(?:\\\"+L+\\\"*([*^$|!~]?=)\\\"+L+\\\"*(?:'((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\"|(\\\"+N+\\\"))|)\\\"+L+\\\"*\\\\\\\\]\\\",P=\\\":(\\\"+M+\\\")(?:\\\\\\\\((('((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\")|((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\()[\\\\\\\\]]|\\\"+O+\\\")*)|.*)\\\\\\\\)|)\\\",Q=new RegExp(L+\\\"+\\\",\\\"g\\\"),R=new RegExp(\\\"^\\\"+L+\\\"+|((?:^|[^\\\\\\\\\\\\\\\\])(?:\\\\\\\\\\\\\\\\.)*)\\\"+L+\\\"+$\\\",\\\"g\\\"),S=new RegExp(\\\"^\\\"+L+\\\"*,\\\"+L+\\\"*\\\"),T=new RegExp(\\\"^\\\"+L+\\\"*([>+~]|\\\"+L+\\\")\\\"+L+\\\"*\\\"),U=new RegExp(\\\"=\\\"+L+\\\"*([^\\\\\\\\]'\\\\\\\"]*?)\\\"+L+\\\"*\\\\\\\\]\\\",\\\"g\\\"),V=new RegExp(P),W=new RegExp(\\\"^\\\"+N+\\\"$\\\"),X={ID:new RegExp(\\\"^#(\\\"+M+\\\")\\\"),CLASS:new RegExp(\\\"^\\\\\\\\.(\\\"+M+\\\")\\\"),TAG:new RegExp(\\\"^(\\\"+M.replace(\\\"w\\\",\\\"w*\\\")+\\\")\\\"),ATTR:new RegExp(\\\"^\\\"+O),PSEUDO:new RegExp(\\\"^\\\"+P),CHILD:new RegExp(\\\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\\\\\(\\\"+L+\\\"*(even|odd|(([+-]|)(\\\\\\\\d*)n|)\\\"+L+\\\"*(?:([+-]|)\\\"+L+\\\"*(\\\\\\\\d+)|))\\\"+L+\\\"*\\\\\\\\)|)\\\",\\\"i\\\"),bool:new RegExp(\\\"^(?:\\\"+K+\\\")$\\\",\\\"i\\\"),needsContext:new RegExp(\\\"^\\\"+L+\\\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\\\\\(\\\"+L+\\\"*((?:-\\\\\\\\d)?\\\\\\\\d*)\\\"+L+\\\"*\\\\\\\\)|)(?=[^-]|$)\\\",\\\"i\\\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\\\d$/i,$=/^[^{]+\\\\{\\\\s*\\\\[native \\\\w/,_=/^(?:#([\\\\w-]+)|(\\\\w+)|\\\\.([\\\\w-]+))$/,ab=/[+~]/,bb=/'|\\\\\\\\/g,cb=new RegExp(\\\"\\\\\\\\\\\\\\\\([\\\\\\\\da-f]{1,6}\\\"+L+\\\"?|(\\\"+L+\\\")|.)\\\",\\\"ig\\\"),db=function(a,b,c){var d=\\\"0x\\\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},eb=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fb){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function gb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,\\\"string\\\"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&\\\"object\\\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\\\"id\\\"))?s=r.replace(bb,\\\"\\\\\\\\$&\\\"):b.setAttribute(\\\"id\\\",s),s=\\\"[id='\\\"+s+\\\"'] \\\",l=o.length;while(l--)o[l]=s+rb(o[l]);w=ab.test(a)&&pb(b.parentNode)||b,x=o.join(\\\",\\\")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\\\"id\\\")}}}return i(a.replace(R,\\\"$1\\\"),b,d,e)}function hb(){var a=[];function b(c,e){return a.push(c+\\\" \\\")>d.cacheLength&&delete b[a.shift()],b[c+\\\" \\\"]=e}return b}function ib(a){return a[u]=!0,a}function jb(a){var b=n.createElement(\\\"div\\\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function kb(a,b){var c=a.split(\\\"|\\\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function lb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return\\\"input\\\"===c&&b.type===a}}function nb(a){return function(b){var c=b.nodeName.toLowerCase();return(\\\"input\\\"===c||\\\"button\\\"===c)&&b.type===a}}function ob(a){return ib(function(b){return b=+b,ib(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pb(a){return a&&\\\"undefined\\\"!=typeof a.getElementsByTagName&&a}c=gb.support={},f=gb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\\\"HTML\\\"!==b.nodeName:!1},m=gb.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener(\\\"unload\\\",eb,!1):e.attachEvent&&e.attachEvent(\\\"onunload\\\",eb)),p=!f(g),c.attributes=jb(function(a){return a.className=\\\"i\\\",!a.getAttribute(\\\"className\\\")}),c.getElementsByTagName=jb(function(a){return a.appendChild(g.createComment(\\\"\\\")),!a.getElementsByTagName(\\\"*\\\").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=jb(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\\\"undefined\\\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute(\\\"id\\\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=\\\"undefined\\\"!=typeof a.getAttributeNode&&a.getAttributeNode(\\\"id\\\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\\\"undefined\\\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\\\"*\\\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(jb(function(a){o.appendChild(a).innerHTML=\\\"<a id='\\\"+u+\\\"'></a><select id='\\\"+u+\\\"-\\\\f]' msallowcapture=''><option selected=''></option></select>\\\",a.querySelectorAll(\\\"[msallowcapture^='']\\\").length&&q.push(\\\"[*^$]=\\\"+L+\\\"*(?:''|\\\\\\\"\\\\\\\")\\\"),a.querySelectorAll(\\\"[selected]\\\").length||q.push(\\\"\\\\\\\\[\\\"+L+\\\"*(?:value|\\\"+K+\\\")\\\"),a.querySelectorAll(\\\"[id~=\\\"+u+\\\"-]\\\").length||q.push(\\\"~=\\\"),a.querySelectorAll(\\\":checked\\\").length||q.push(\\\":checked\\\"),a.querySelectorAll(\\\"a#\\\"+u+\\\"+*\\\").length||q.push(\\\".#.+[+~]\\\")}),jb(function(a){var b=g.createElement(\\\"input\\\");b.setAttribute(\\\"type\\\",\\\"hidden\\\"),a.appendChild(b).setAttribute(\\\"name\\\",\\\"D\\\"),a.querySelectorAll(\\\"[name=d]\\\").length&&q.push(\\\"name\\\"+L+\\\"*[*^$|!~]?=\\\"),a.querySelectorAll(\\\":enabled\\\").length||q.push(\\\":enabled\\\",\\\":disabled\\\"),a.querySelectorAll(\\\"*,:x\\\"),q.push(\\\",.*:\\\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&jb(function(a){c.disconnectedMatch=s.call(a,\\\"div\\\"),s.call(a,\\\"[s!='']:x\\\"),r.push(\\\"!=\\\",P)}),q=q.length&&new RegExp(q.join(\\\"|\\\")),r=r.length&&new RegExp(r.join(\\\"|\\\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return lb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?lb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},gb.matches=function(a,b){return gb(a,null,null,b)},gb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\\\"='$1']\\\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return gb(b,n,null,[a]).length>0},gb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},gb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},gb.error=function(a){throw new Error(\\\"Syntax error, unrecognized expression: \\\"+a)},gb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=gb.getText=function(a){var b,c=\\\"\\\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\\\"string\\\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=gb.selectors={cacheLength:50,createPseudo:ib,match:X,attrHandle:{},find:{},relative:{\\\">\\\":{dir:\\\"parentNode\\\",first:!0},\\\" \\\":{dir:\\\"parentNode\\\"},\\\"+\\\":{dir:\\\"previousSibling\\\",first:!0},\\\"~\\\":{dir:\\\"previousSibling\\\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||\\\"\\\").replace(cb,db),\\\"~=\\\"===a[2]&&(a[3]=\\\" \\\"+a[3]+\\\" \\\"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\\\"nth\\\"===a[1].slice(0,3)?(a[3]||gb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\\\"even\\\"===a[3]||\\\"odd\\\"===a[3])),a[5]=+(a[7]+a[8]||\\\"odd\\\"===a[3])):a[3]&&gb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\\\"\\\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\\\")\\\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return\\\"*\\\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\\\" \\\"];return b||(b=new RegExp(\\\"(^|\\\"+L+\\\")\\\"+a+\\\"(\\\"+L+\\\"|$)\\\"))&&y(a,function(a){return b.test(\\\"string\\\"==typeof a.className&&a.className||\\\"undefined\\\"!=typeof a.getAttribute&&a.getAttribute(\\\"class\\\")||\\\"\\\")})},ATTR:function(a,b,c){return function(d){var e=gb.attr(d,a);return null==e?\\\"!=\\\"===b:b?(e+=\\\"\\\",\\\"=\\\"===b?e===c:\\\"!=\\\"===b?e!==c:\\\"^=\\\"===b?c&&0===e.indexOf(c):\\\"*=\\\"===b?c&&e.indexOf(c)>-1:\\\"$=\\\"===b?c&&e.slice(-c.length)===c:\\\"~=\\\"===b?(\\\" \\\"+e.replace(Q,\\\" \\\")+\\\" \\\").indexOf(c)>-1:\\\"|=\\\"===b?e===c||e.slice(0,c.length+1)===c+\\\"-\\\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\\\"nth\\\"!==a.slice(0,3),g=\\\"last\\\"!==a.slice(-4),h=\\\"of-type\\\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\\\"nextSibling\\\":\\\"previousSibling\\\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\\\"only\\\"===a&&!o&&\\\"nextSibling\\\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||gb.error(\\\"unsupported pseudo: \\\"+a);return e[u]?e(b):e.length>1?(c=[a,a,\\\"\\\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ib(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ib(function(a){var b=[],c=[],d=h(a.replace(R,\\\"$1\\\"));return d[u]?ib(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ib(function(a){return function(b){return gb(a,b).length>0}}),contains:ib(function(a){return a=a.replace(cb,db),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ib(function(a){return W.test(a||\\\"\\\")||gb.error(\\\"unsupported lang: \\\"+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\\\"xml:lang\\\")||b.getAttribute(\\\"lang\\\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\\\"-\\\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\\\"input\\\"===b&&!!a.checked||\\\"option\\\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\\\"input\\\"===b&&\\\"button\\\"===a.type||\\\"button\\\"===b},text:function(a){var b;return\\\"input\\\"===a.nodeName.toLowerCase()&&\\\"text\\\"===a.type&&(null==(b=a.getAttribute(\\\"type\\\"))||\\\"text\\\"===b.toLowerCase())},first:ob(function(){return[0]}),last:ob(function(a,b){return[b-1]}),eq:ob(function(a,b,c){return[0>c?c+b:c]}),even:ob(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:ob(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:ob(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:ob(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=mb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=nb(b);function qb(){}qb.prototype=d.filters=d.pseudos,d.setFilters=new qb,g=gb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\\\" \\\"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\\\" \\\")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?gb.error(a):z(a,i).slice(0)};function rb(a){for(var b=0,c=a.length,d=\\\"\\\";c>b;b++)d+=a[b].value;return d}function sb(a,b,c){var d=b.dir,e=c&&\\\"parentNode\\\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function tb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ub(a,b,c){for(var d=0,e=b.length;e>d;d++)gb(a,b[d],c);return c}function vb(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wb(a,b,c,d,e,f){return d&&!d[u]&&(d=wb(d)),e&&!e[u]&&(e=wb(e,f)),ib(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ub(b||\\\"*\\\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:vb(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=vb(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=vb(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\\\" \\\"],i=g?1:0,k=sb(function(a){return a===b},h,!0),l=sb(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sb(tb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wb(i>1&&tb(m),i>1&&rb(a.slice(0,i-1).concat({value:\\\" \\\"===a[i-2].type?\\\"*\\\":\\\"\\\"})).replace(R,\\\"$1\\\"),c,e>i&&xb(a.slice(i,e)),f>e&&xb(a=a.slice(e)),f>e&&rb(a))}m.push(c)}return tb(m)}function yb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\\\"0\\\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\\\"*\\\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=vb(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&gb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ib(f):f}return h=gb.compile=function(a,b){var c,d=[],e=[],f=A[a+\\\" \\\"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,yb(e,d)),f.selector=a}return f},i=gb.select=function(a,b,e,f){var i,j,k,l,m,n=\\\"function\\\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\\\"ID\\\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&pb(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&rb(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&pb(b.parentNode)||b),e},c.sortStable=u.split(\\\"\\\").sort(B).join(\\\"\\\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=jb(function(a){return 1&a.compareDocumentPosition(n.createElement(\\\"div\\\"))}),jb(function(a){return a.innerHTML=\\\"<a href='#'></a>\\\",\\\"#\\\"===a.firstChild.getAttribute(\\\"href\\\")})||kb(\\\"type|href|height|width\\\",function(a,b,c){return c?void 0:a.getAttribute(b,\\\"type\\\"===b.toLowerCase()?1:2)}),c.attributes&&jb(function(a){return a.innerHTML=\\\"<input/>\\\",a.firstChild.setAttribute(\\\"value\\\",\\\"\\\"),\\\"\\\"===a.firstChild.getAttribute(\\\"value\\\")})||kb(\\\"value\\\",function(a,b,c){return c||\\\"input\\\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),jb(function(a){return null==a.getAttribute(\\\"disabled\\\")})||kb(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),gb}(a);n.find=t,n.expr=t.selectors,n.expr[\\\":\\\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\\\w+)\\\\s*\\\\/?>(?:<\\\\/\\\\1>|)$/,w=/^.[^:#\\\\[\\\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\\\"string\\\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\\\":not(\\\"+a+\\\")\\\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\\\"string\\\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\\\" \\\"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\\\"string\\\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\\\s*(<[\\\\w\\\\W]+>)[^>]*|#([\\\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\\\"string\\\"==typeof a){if(c=\\\"<\\\"===a[0]&&\\\">\\\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\\\"undefined\\\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\\\"string\\\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\\\"string\\\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\\\"parentNode\\\")},parentsUntil:function(a,b,c){return n.dir(a,\\\"parentNode\\\",c)},next:function(a){return D(a,\\\"nextSibling\\\")},prev:function(a){return D(a,\\\"previousSibling\\\")},nextAll:function(a){return n.dir(a,\\\"nextSibling\\\")},prevAll:function(a){return n.dir(a,\\\"previousSibling\\\")},nextUntil:function(a,b,c){return n.dir(a,\\\"nextSibling\\\",c)},prevUntil:function(a,b,c){return n.dir(a,\\\"previousSibling\\\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\\\"Until\\\"!==a.slice(-5)&&(d=c),d&&\\\"string\\\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\\\"string\\\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\\\"function\\\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\\\"string\\\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\\\"resolve\\\",\\\"done\\\",n.Callbacks(\\\"once memory\\\"),\\\"resolved\\\"],[\\\"reject\\\",\\\"fail\\\",n.Callbacks(\\\"once memory\\\"),\\\"rejected\\\"],[\\\"notify\\\",\\\"progress\\\",n.Callbacks(\\\"memory\\\")]],c=\\\"pending\\\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\\\"With\\\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\\\"With\\\"](this===e?d:this,arguments),this},e[f[0]+\\\"With\\\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\\\"ready\\\"),n(l).off(\\\"ready\\\"))))}});function I(){l.removeEventListener(\\\"DOMContentLoaded\\\",I,!1),a.removeEventListener(\\\"load\\\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\\\"complete\\\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\\\"DOMContentLoaded\\\",I,!1),a.addEventListener(\\\"load\\\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\\\"object\\\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\\\"string\\\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\\\"string\\\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\\\{[\\\\w\\\\W]*\\\\}|\\\\[[\\\\w\\\\W]*\\\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\\\"data-\\\"+b.replace(O,\\\"-$1\\\").toLowerCase(),c=a.getAttribute(d),\\\"string\\\"==typeof c){try{c=\\\"true\\\"===c?!0:\\\"false\\\"===c?!1:\\\"null\\\"===c?null:+c+\\\"\\\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)\\r\\n},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\\\"hasDataAttrs\\\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\\\"data-\\\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\\\"hasDataAttrs\\\",!0)}return e}return\\\"object\\\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\\\"-\\\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\\\"fx\\\")+\\\"queue\\\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\\\"fx\\\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\\\"inprogress\\\"===e&&(e=c.shift(),d--),e&&(\\\"fx\\\"===b&&c.unshift(\\\"inprogress\\\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\\\"queueHooks\\\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\\\"once memory\\\").add(function(){L.remove(a,[b+\\\"queue\\\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\\\"string\\\"!=typeof a&&(b=a,a=\\\"fx\\\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\\\"fx\\\"===a&&\\\"inprogress\\\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\\\"fx\\\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\\\"string\\\"!=typeof a&&(b=a,a=void 0),a=a||\\\"fx\\\";while(g--)c=L.get(f[g],a+\\\"queueHooks\\\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\\\d*\\\\.|)\\\\d+(?:[eE][+-]?\\\\d+|)/.source,R=[\\\"Top\\\",\\\"Right\\\",\\\"Bottom\\\",\\\"Left\\\"],S=function(a,b){return a=b||a,\\\"none\\\"===n.css(a,\\\"display\\\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\\\"div\\\")),c=l.createElement(\\\"input\\\");c.setAttribute(\\\"type\\\",\\\"radio\\\"),c.setAttribute(\\\"checked\\\",\\\"checked\\\"),c.setAttribute(\\\"name\\\",\\\"t\\\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\\\"<textarea>x</textarea>\\\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\\\"undefined\\\";k.focusinBubbles=\\\"onfocusin\\\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\\\"\\\").match(E)||[\\\"\\\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\\\"\\\").split(\\\".\\\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\\\".\\\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\\\"\\\").match(E)||[\\\"\\\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\\\"\\\").split(\\\".\\\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\\\"(^|\\\\\\\\.)\\\"+p.join(\\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\")+\\\"(\\\\\\\\.|$)\\\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\\\"**\\\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\\\"events\\\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\\\"type\\\")?b.type:b,r=j.call(b,\\\"namespace\\\")?b.namespace.split(\\\".\\\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\\\".\\\")>=0&&(r=q.split(\\\".\\\"),q=r.shift(),r.sort()),k=q.indexOf(\\\":\\\")<0&&\\\"on\\\"+q,b=b[n.expando]?b:new n.Event(q,\\\"object\\\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\\\".\\\"),b.namespace_re=b.namespace?new RegExp(\\\"(^|\\\\\\\\.)\\\"+r.join(\\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\")+\\\"(\\\\\\\\.|$)\\\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\\\"events\\\")||{})[b.type]&&L.get(g,\\\"handle\\\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\\\"events\\\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\\\"click\\\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\\\"click\\\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\\\" \\\",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\\\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\\\".split(\\\" \\\"),fixHooks:{},keyHooks:{props:\\\"char charCode key keyCode\\\".split(\\\" \\\"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\\\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\\\".split(\\\" \\\"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\\\"focusin\\\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\\\"focusout\\\"},click:{trigger:function(){return\\\"checkbox\\\"===this.type&&this.click&&n.nodeName(this,\\\"input\\\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\\\"a\\\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\\\"mouseover\\\",mouseleave:\\\"mouseout\\\",pointerenter:\\\"pointerover\\\",pointerleave:\\\"pointerout\\\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\\\"focusin\\\",blur:\\\"focusout\\\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\\\"object\\\"==typeof a){\\\"string\\\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\\\"string\\\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\\\".\\\"+d.namespace:d.origType,d.selector,d.handler),this;if(\\\"object\\\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\\\"function\\\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\\\w:]+)[^>]*)\\\\/>/gi,bb=/<([\\\\w:]+)/,cb=/<|&#?\\\\w+;/,db=/<(?:script|style|link)/i,eb=/checked\\\\s*(?:[^=]|=\\\\s*.checked.)/i,fb=/^$|\\\\/(?:java|ecma)script/i,gb=/^true\\\\/(.*)/,hb=/^\\\\s*<!(?:\\\\[CDATA\\\\[|--)|(?:\\\\]\\\\]|--)>\\\\s*$/g,ib={option:[1,\\\"<select multiple='multiple'>\\\",\\\"</select>\\\"],thead:[1,\\\"<table>\\\",\\\"</table>\\\"],col:[2,\\\"<table><colgroup>\\\",\\\"</colgroup></table>\\\"],tr:[2,\\\"<table><tbody>\\\",\\\"</tbody></table>\\\"],td:[3,\\\"<table><tbody><tr>\\\",\\\"</tr></tbody></table>\\\"],_default:[0,\\\"\\\",\\\"\\\"]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,\\\"table\\\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\\\"tr\\\")?a.getElementsByTagName(\\\"tbody\\\")[0]||a.appendChild(a.ownerDocument.createElement(\\\"tbody\\\")):a}function kb(a){return a.type=(null!==a.getAttribute(\\\"type\\\"))+\\\"/\\\"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\\\"type\\\"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\\\"globalEval\\\",!b||L.get(b[c],\\\"globalEval\\\"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\\\"*\\\"):a.querySelectorAll?a.querySelectorAll(b||\\\"*\\\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();\\\"input\\\"===c&&T.test(a.type)?b.checked=a.checked:(\\\"input\\\"===c||\\\"textarea\\\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,\\\"script\\\"),g.length>0&&mb(g,!i&&ob(a,\\\"script\\\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\\\"object\\\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement(\\\"div\\\")),g=(bb.exec(e)||[\\\"\\\",\\\"\\\"])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,\\\"<$1></$2>\\\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\\\"\\\"}else l.push(b.createTextNode(e));k.textContent=\\\"\\\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),\\\"script\\\"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||\\\"\\\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,\\\"script\\\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent=\\\"\\\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\\\"string\\\"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||[\\\"\\\",\\\"\\\"])[1].toLowerCase()]){a=a.replace(ab,\\\"<$1></$2>\\\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\\\"string\\\"==typeof p&&!k.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,\\\"script\\\"),kb),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,\\\"script\\\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||\\\"\\\")&&!L.access(h,\\\"globalEval\\\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,\\\"\\\")))}return this}}),n.each({appendTo:\\\"append\\\",prependTo:\\\"prepend\\\",insertBefore:\\\"before\\\",insertAfter:\\\"after\\\",replaceAll:\\\"replaceWith\\\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\\\"display\\\");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),\\\"none\\\"!==c&&c||(qb=(qb||n(\\\"<iframe frameborder='0' width='0' height='0'/>\\\")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp(\\\"^(\\\"+Q+\\\")(?!px)[a-z%]+$\\\",\\\"i\\\"),wb=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\\\"\\\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\\\"\\\":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\\\"div\\\"),f=l.createElement(\\\"div\\\");if(f.style){f.style.backgroundClip=\\\"content-box\\\",f.cloneNode(!0).style.backgroundClip=\\\"\\\",k.clearCloneStyle=\\\"content-box\\\"===f.style.backgroundClip,e.style.cssText=\\\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\\\",e.appendChild(f);function g(){f.style.cssText=\\\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\\\",f.innerHTML=\\\"\\\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\\\"1%\\\"!==g.top,c=\\\"4px\\\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\\\"div\\\"));return c.style.cssText=f.style.cssText=\\\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\\\",c.style.marginRight=c.style.width=\\\"0\\\",f.style.width=\\\"1px\\\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp(\\\"^(\\\"+Q+\\\")(.*)$\\\",\\\"i\\\"),Bb=new RegExp(\\\"^([+-])=(\\\"+Q+\\\")\\\",\\\"i\\\"),Cb={position:\\\"absolute\\\",visibility:\\\"hidden\\\",display:\\\"block\\\"},Db={letterSpacing:\\\"0\\\",fontWeight:\\\"400\\\"},Eb=[\\\"Webkit\\\",\\\"O\\\",\\\"Moz\\\",\\\"ms\\\"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\\\"px\\\"):b}function Hb(a,b,c,d,e){for(var f=c===(d?\\\"border\\\":\\\"content\\\")?4:\\\"width\\\"===b?1:0,g=0;4>f;f+=2)\\\"margin\\\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\\\"content\\\"===c&&(g-=n.css(a,\\\"padding\\\"+R[f],!0,e)),\\\"margin\\\"!==c&&(g-=n.css(a,\\\"border\\\"+R[f]+\\\"Width\\\",!0,e))):(g+=n.css(a,\\\"padding\\\"+R[f],!0,e),\\\"padding\\\"!==c&&(g+=n.css(a,\\\"border\\\"+R[f]+\\\"Width\\\",!0,e)));return g}function Ib(a,b,c){var d=!0,e=\\\"width\\\"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g=\\\"border-box\\\"===n.css(a,\\\"boxSizing\\\",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?\\\"border\\\":\\\"content\\\"),d,f)+\\\"px\\\"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\\\"olddisplay\\\"),c=d.style.display,b?(f[g]||\\\"none\\\"!==c||(d.style.display=\\\"\\\"),\\\"\\\"===d.style.display&&S(d)&&(f[g]=L.access(d,\\\"olddisplay\\\",tb(d.nodeName)))):(e=S(d),\\\"none\\\"===c&&e||L.set(d,\\\"olddisplay\\\",e?c:n.css(d,\\\"display\\\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\\\"none\\\"!==d.style.display&&\\\"\\\"!==d.style.display||(d.style.display=b?f[g]||\\\"\\\":\\\"none\\\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,\\\"opacity\\\");return\\\"\\\"===c?\\\"1\\\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\\\"float\\\":\\\"cssFloat\\\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\\\"get\\\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\\\"string\\\"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\\\"number\\\"),null!=c&&c===c&&(\\\"number\\\"!==f||n.cssNumber[h]||(c+=\\\"px\\\"),k.clearCloneStyle||\\\"\\\"!==c||0!==b.indexOf(\\\"background\\\")||(i[b]=\\\"inherit\\\"),g&&\\\"set\\\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\\\"get\\\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),\\\"normal\\\"===e&&b in Db&&(e=Db[b]),\\\"\\\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\\\"height\\\",\\\"width\\\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,\\\"display\\\"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,\\\"border-box\\\"===n.css(a,\\\"boxSizing\\\",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\\\"inline-block\\\"},xb,[a,\\\"marginRight\\\"]):void 0}),n.each({margin:\\\"\\\",padding:\\\"\\\",border:\\\"Width\\\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\\\"string\\\"==typeof c?c.split(\\\" \\\"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return\\\"boolean\\\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\\\"swing\\\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\\\"\\\":\\\"px\\\")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\\\"\\\"),b&&\\\"auto\\\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp(\\\"^(?:([+-])=|)(\\\"+Q+\\\")([a-z%]*)$\\\",\\\"i\\\"),Pb=/queueHooks$/,Qb=[Vb],Rb={\\\"*\\\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?\\\"\\\":\\\"px\\\"),g=(n.cssNumber[a]||\\\"px\\\"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\\\".5\\\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\\\"margin\\\"+c]=e[\\\"padding\\\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb[\\\"*\\\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\\\"fxshow\\\");c.queue||(h=n._queueHooks(a,\\\"fx\\\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\\\"fx\\\").length||h.empty.fire()})})),1===a.nodeType&&(\\\"height\\\"in b||\\\"width\\\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\\\"display\\\"),k=\\\"none\\\"===j?L.get(a,\\\"olddisplay\\\")||tb(a.nodeName):j,\\\"inline\\\"===k&&\\\"none\\\"===n.css(a,\\\"float\\\")&&(o.display=\\\"inline-block\\\")),c.overflow&&(o.overflow=\\\"hidden\\\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||\\\"toggle\\\"===e,e===(p?\\\"hide\\\":\\\"show\\\")){if(\\\"show\\\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\\\"inline\\\"===(\\\"none\\\"===j?tb(a.nodeName):j)&&(o.display=j);else{q?\\\"hidden\\\"in q&&(p=q.hidden):q=L.access(a,\\\"fxshow\\\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\\\"fxshow\\\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\\\"width\\\"===d||\\\"height\\\"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\\\"expand\\\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\\\"*\\\"]):a=a.split(\\\" \\\");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&\\\"object\\\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\\\"number\\\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\\\"fx\\\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\\\"opacity\\\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,\\\"finish\\\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\\\"string\\\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\\\"fx\\\",[]),this.each(function(){var b=!0,e=null!=a&&a+\\\"queueHooks\\\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\\\"fx\\\"),this.each(function(){var b,c=L.get(this),d=c[a+\\\"queue\\\"],e=c[a+\\\"queueHooks\\\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\\\"toggle\\\",\\\"show\\\",\\\"hide\\\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\\\"boolean\\\"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb(\\\"show\\\"),slideUp:Tb(\\\"hide\\\"),slideToggle:Tb(\\\"toggle\\\"),fadeIn:{opacity:\\\"show\\\"},fadeOut:{opacity:\\\"hide\\\"},fadeToggle:{opacity:\\\"toggle\\\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\\\"fx\\\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\\\"input\\\"),b=l.createElement(\\\"select\\\"),c=b.appendChild(l.createElement(\\\"option\\\"));a.type=\\\"checkbox\\\",k.checkOn=\\\"\\\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\\\"input\\\"),a.value=\\\"t\\\",a.type=\\\"radio\\\",k.radioValue=\\\"t\\\"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&\\\"get\\\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\\\"set\\\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\\\"\\\"),c):void n.removeAttr(a,b))\\r\\n},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\\\"radio\\\"===b&&n.nodeName(a,\\\"input\\\")){var c=a.value;return a.setAttribute(\\\"type\\\",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\\\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\\\"for\\\":\\\"htmlFor\\\",\\\"class\\\":\\\"className\\\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\\\"set\\\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\\\"get\\\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\\\"tabindex\\\")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\\\"tabIndex\\\",\\\"readOnly\\\",\\\"maxLength\\\",\\\"cellSpacing\\\",\\\"cellPadding\\\",\\\"rowSpan\\\",\\\"colSpan\\\",\\\"useMap\\\",\\\"frameBorder\\\",\\\"contentEditable\\\"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\\\\t\\\\r\\\\n\\\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\\\"string\\\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\\\"\\\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\\\" \\\"+c.className+\\\" \\\").replace(ac,\\\" \\\"):\\\" \\\")){f=0;while(e=b[f++])d.indexOf(\\\" \\\"+e+\\\" \\\")<0&&(d+=e+\\\" \\\");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\\\"string\\\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\\\"\\\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\\\" \\\"+c.className+\\\" \\\").replace(ac,\\\" \\\"):\\\"\\\")){f=0;while(e=b[f++])while(d.indexOf(\\\" \\\"+e+\\\" \\\")>=0)d=d.replace(\\\" \\\"+e+\\\" \\\",\\\" \\\");g=a?n.trim(d):\\\"\\\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\\\"boolean\\\"==typeof b&&\\\"string\\\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\\\"string\\\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\\\"boolean\\\"===c)&&(this.className&&L.set(this,\\\"__className__\\\",this.className),this.className=this.className||a===!1?\\\"\\\":L.get(this,\\\"__className__\\\")||\\\"\\\")})},hasClass:function(a){for(var b=\\\" \\\"+a+\\\" \\\",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\\\" \\\"+this[c].className+\\\" \\\").replace(ac,\\\" \\\").indexOf(b)>=0)return!0;return!1}});var bc=/\\\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\\\"\\\":\\\"number\\\"==typeof e?e+=\\\"\\\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\\\"\\\":a+\\\"\\\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\\\"set\\\"in b&&void 0!==b.set(this,e,\\\"value\\\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\\\"get\\\"in b&&void 0!==(c=b.get(e,\\\"value\\\"))?c:(c=e.value,\\\"string\\\"==typeof c?c.replace(bc,\\\"\\\"):null==c?\\\"\\\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\\\"value\\\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\\\"select-one\\\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\\\"disabled\\\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\\\"optgroup\\\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\\\"radio\\\",\\\"checkbox\\\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\\\"value\\\")?\\\"on\\\":a.value})}),n.each(\\\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\\\".split(\\\" \\\"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\\\"**\\\"):this.off(b,a||\\\"**\\\",c)}});var cc=n.now(),dc=/\\\\?/;n.parseJSON=function(a){return JSON.parse(a+\\\"\\\")},n.parseXML=function(a){var b,c;if(!a||\\\"string\\\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\\\"text/xml\\\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\\\"parsererror\\\").length)&&n.error(\\\"Invalid XML: \\\"+a),b};var ec=/#.*$/,fc=/([?&])_=[^&]*/,gc=/^(.*?):[ \\\\t]*([^\\\\r\\\\n]*)$/gm,hc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ic=/^(?:GET|HEAD)$/,jc=/^\\\\/\\\\//,kc=/^([\\\\w.+-]+:)(?:\\\\/\\\\/(?:[^\\\\/?#]*@|)([^\\\\/?#:]*)(?::(\\\\d+)|)|)/,lc={},mc={},nc=\\\"*/\\\".concat(\\\"*\\\"),oc=a.location.href,pc=kc.exec(oc.toLowerCase())||[];function qc(a){return function(b,c){\\\"string\\\"!=typeof b&&(c=b,b=\\\"*\\\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\\\"+\\\"===d[0]?(d=d.slice(1)||\\\"*\\\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rc(a,b,c,d){var e={},f=a===mc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\\\"string\\\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\\\"*\\\"]&&g(\\\"*\\\")}function sc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\\\"*\\\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\\\"Content-Type\\\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\\\" \\\"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function uc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\\\"*\\\"===f)f=i;else if(\\\"*\\\"!==i&&i!==f){if(g=j[i+\\\" \\\"+f]||j[\\\"* \\\"+f],!g)for(e in j)if(h=e.split(\\\" \\\"),h[1]===f&&(g=j[i+\\\" \\\"+h[0]]||j[\\\"* \\\"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\\\"throws\\\"])b=g(b);else try{b=g(b)}catch(l){return{state:\\\"parsererror\\\",error:g?l:\\\"No conversion from \\\"+i+\\\" to \\\"+f}}}return{state:\\\"success\\\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:oc,type:\\\"GET\\\",isLocal:hc.test(pc[1]),global:!0,processData:!0,async:!0,contentType:\\\"application/x-www-form-urlencoded; charset=UTF-8\\\",accepts:{\\\"*\\\":nc,text:\\\"text/plain\\\",html:\\\"text/html\\\",xml:\\\"application/xml, text/xml\\\",json:\\\"application/json, text/javascript\\\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\\\"responseXML\\\",text:\\\"responseText\\\",json:\\\"responseJSON\\\"},converters:{\\\"* text\\\":String,\\\"text html\\\":!0,\\\"text json\\\":n.parseJSON,\\\"text xml\\\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sc(sc(a,n.ajaxSettings),b):sc(n.ajaxSettings,a)},ajaxPrefilter:qc(lc),ajaxTransport:qc(mc),ajax:function(a,b){\\\"object\\\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\\\"once memory\\\"),q=k.statusCode||{},r={},s={},t=0,u=\\\"canceled\\\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gc.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||oc)+\\\"\\\").replace(ec,\\\"\\\").replace(jc,pc[1]+\\\"//\\\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\\\"*\\\").toLowerCase().match(E)||[\\\"\\\"],null==k.crossDomain&&(h=kc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pc[1]&&h[2]===pc[2]&&(h[3]||(\\\"http:\\\"===h[1]?\\\"80\\\":\\\"443\\\"))===(pc[3]||(\\\"http:\\\"===pc[1]?\\\"80\\\":\\\"443\\\")))),k.data&&k.processData&&\\\"string\\\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rc(lc,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger(\\\"ajaxStart\\\"),k.type=k.type.toUpperCase(),k.hasContent=!ic.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?\\\"&\\\":\\\"?\\\")+k.data,delete k.data),k.cache===!1&&(k.url=fc.test(d)?d.replace(fc,\\\"$1_=\\\"+cc++):d+(dc.test(d)?\\\"&\\\":\\\"?\\\")+\\\"_=\\\"+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\\\"If-Modified-Since\\\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\\\"If-None-Match\\\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\\\"Content-Type\\\",k.contentType),v.setRequestHeader(\\\"Accept\\\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\\\"*\\\"!==k.dataTypes[0]?\\\", \\\"+nc+\\\"; q=0.01\\\":\\\"\\\"):k.accepts[\\\"*\\\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\\\"abort\\\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rc(mc,k,b,v)){v.readyState=1,i&&m.trigger(\\\"ajaxSend\\\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\\\"timeout\\\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\\\"No Transport\\\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\\\"\\\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tc(k,v,f)),u=uc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\\\"Last-Modified\\\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\\\"etag\\\"),w&&(n.etag[d]=w)),204===a||\\\"HEAD\\\"===k.type?x=\\\"nocontent\\\":304===a?x=\\\"notmodified\\\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\\\"error\\\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\\\"\\\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\\\"ajaxSuccess\\\":\\\"ajaxError\\\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\\\"ajaxComplete\\\",[v,k]),--n.active||n.event.trigger(\\\"ajaxStop\\\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\\\"json\\\")},getScript:function(a,b){return n.get(a,void 0,b,\\\"script\\\")}}),n.each([\\\"get\\\",\\\"post\\\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:\\\"GET\\\",dataType:\\\"script\\\",async:!1,global:!1,\\\"throws\\\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\\\"body\\\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vc=/%20/g,wc=/\\\\[\\\\]$/,xc=/\\\\r?\\\\n/g,yc=/^(?:submit|button|image|reset|file)$/i,zc=/^(?:input|select|textarea|keygen)/i;function Ac(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wc.test(a)?d(a,e):Ac(a+\\\"[\\\"+(\\\"object\\\"==typeof e?b:\\\"\\\")+\\\"]\\\",e,c,d)});else if(c||\\\"object\\\"!==n.type(b))d(a,b);else for(e in b)Ac(a+\\\"[\\\"+e+\\\"]\\\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\\\"\\\":b,d[d.length]=encodeURIComponent(a)+\\\"=\\\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ac(c,a[c],b,e);return d.join(\\\"&\\\").replace(vc,\\\"+\\\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\\\"elements\\\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\\\":disabled\\\")&&zc.test(this.nodeName)&&!yc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xc,\\\"\\\\r\\\\n\\\")}}):{name:b.name,value:c.replace(xc,\\\"\\\\r\\\\n\\\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bc=0,Cc={},Dc={0:200,1223:204},Ec=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent(\\\"onunload\\\",function(){for(var a in Cc)Cc[a]()}),k.cors=!!Ec&&\\\"withCredentials\\\"in Ec,k.ajax=Ec=!!Ec,n.ajaxTransport(function(a){var b;return k.cors||Ec&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\\\"X-Requested-With\\\"]||(c[\\\"X-Requested-With\\\"]=\\\"XMLHttpRequest\\\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cc[g],b=f.onload=f.onerror=null,\\\"abort\\\"===a?f.abort():\\\"error\\\"===a?d(f.status,f.statusText):d(Dc[f.status]||f.status,f.statusText,\\\"string\\\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\\\"error\\\"),b=Cc[g]=b(\\\"abort\\\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\\\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\\\"},contents:{script:/(?:java|ecma)script/},converters:{\\\"text script\\\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\\\"script\\\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\\\"GET\\\")}),n.ajaxTransport(\\\"script\\\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\\\"<script>\\\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\\\"load error\\\",c=function(a){b.remove(),c=null,a&&e(\\\"error\\\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fc=[],Gc=/(=)\\\\?(?=&|$)|\\\\?\\\\?/;n.ajaxSetup({jsonp:\\\"callback\\\",jsonpCallback:function(){var a=Fc.pop()||n.expando+\\\"_\\\"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter(\\\"json jsonp\\\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gc.test(b.url)?\\\"url\\\":\\\"string\\\"==typeof b.data&&!(b.contentType||\\\"\\\").indexOf(\\\"application/x-www-form-urlencoded\\\")&&Gc.test(b.data)&&\\\"data\\\");return h||\\\"jsonp\\\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gc,\\\"$1\\\"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?\\\"&\\\":\\\"?\\\")+b.jsonp+\\\"=\\\"+e),b.converters[\\\"script json\\\"]=function(){return g||n.error(e+\\\" was not called\\\"),g[0]},b.dataTypes[0]=\\\"json\\\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\\\"script\\\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\\\"string\\\"!=typeof a)return null;\\\"boolean\\\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hc=n.fn.load;n.fn.load=function(a,b,c){if(\\\"string\\\"!=typeof a&&Hc)return Hc.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\\\" \\\");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\\\"object\\\"==typeof b&&(e=\\\"POST\\\"),g.length>0&&n.ajax({url:a,type:e,dataType:\\\"html\\\",data:b}).done(function(a){f=arguments,g.html(d?n(\\\"<div>\\\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each([\\\"ajaxStart\\\",\\\"ajaxStop\\\",\\\"ajaxComplete\\\",\\\"ajaxError\\\",\\\"ajaxSuccess\\\",\\\"ajaxSend\\\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ic=a.document.documentElement;function Jc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\\\"position\\\"),l=n(a),m={};\\\"static\\\"===k&&(a.style.position=\\\"relative\\\"),h=l.offset(),f=n.css(a,\\\"top\\\"),i=n.css(a,\\\"left\\\"),j=(\\\"absolute\\\"===k||\\\"fixed\\\"===k)&&(f+i).indexOf(\\\"auto\\\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\\\"using\\\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\\\"fixed\\\"===n.css(c,\\\"position\\\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\\\"html\\\")||(d=a.offset()),d.top+=n.css(a[0],\\\"borderTopWidth\\\",!0),d.left+=n.css(a[0],\\\"borderLeftWidth\\\",!0)),{top:b.top-d.top-n.css(c,\\\"marginTop\\\",!0),left:b.left-d.left-n.css(c,\\\"marginLeft\\\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ic;while(a&&!n.nodeName(a,\\\"html\\\")&&\\\"static\\\"===n.css(a,\\\"position\\\"))a=a.offsetParent;return a||Ic})}}),n.each({scrollLeft:\\\"pageXOffset\\\",scrollTop:\\\"pageYOffset\\\"},function(b,c){var d=\\\"pageYOffset\\\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\\\"top\\\",\\\"left\\\"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+\\\"px\\\":c):void 0})}),n.each({Height:\\\"height\\\",Width:\\\"width\\\"},function(a,b){n.each({padding:\\\"inner\\\"+a,content:b,\\\"\\\":\\\"outer\\\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\\\"boolean\\\"!=typeof d),g=c||(d===!0||e===!0?\\\"margin\\\":\\\"border\\\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\\\"client\\\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\\\"scroll\\\"+a],e[\\\"scroll\\\"+a],b.body[\\\"offset\\\"+a],e[\\\"offset\\\"+a],e[\\\"client\\\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\\\"function\\\"==typeof define&&define.amd&&define(\\\"jquery\\\",[],function(){return n});var Kc=a.jQuery,Lc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lc),b&&a.jQuery===n&&(a.jQuery=Kc),n},typeof b===U&&(a.jQuery=a.$=n),n});\\r\\n\""
		},
		{
			"name": "rawdeflate.js",
			"source": "\"/*\\r\\n * $Id: rawdeflate.js,v 0.5 2013/04/09 14:25:38 dankogai Exp dankogai $\\r\\n *\\r\\n * GNU General Public License, version 2 (GPL-2.0)\\r\\n *   http://opensource.org/licenses/GPL-2.0\\r\\n * Original:\\r\\n *  http://www.onicos.com/staff/iz/amuse/javascript/expert/deflate.txt\\r\\n */\\r\\n\\r\\n(function(ctx){\\r\\n\\r\\n/* Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\\r\\n * Version: 1.0.1\\r\\n * LastModified: Dec 25 1999\\r\\n */\\r\\n\\r\\n/* Interface:\\r\\n * data = zip_deflate(src);\\r\\n */\\r\\n\\r\\n/* constant parameters */\\r\\nvar zip_WSIZE = 32768;\\t\\t// Sliding Window size\\r\\nvar zip_STORED_BLOCK = 0;\\r\\nvar zip_STATIC_TREES = 1;\\r\\nvar zip_DYN_TREES    = 2;\\r\\n\\r\\n/* for deflate */\\r\\nvar zip_DEFAULT_LEVEL = 6;\\r\\nvar zip_FULL_SEARCH = true;\\r\\nvar zip_INBUFSIZ = 32768;\\t// Input buffer size\\r\\nvar zip_INBUF_EXTRA = 64;\\t// Extra buffer\\r\\nvar zip_OUTBUFSIZ = 1024 * 8;\\r\\nvar zip_window_size = 2 * zip_WSIZE;\\r\\nvar zip_MIN_MATCH = 3;\\r\\nvar zip_MAX_MATCH = 258;\\r\\nvar zip_BITS = 16;\\r\\n// for SMALL_MEM\\r\\nvar zip_LIT_BUFSIZE = 0x2000;\\r\\nvar zip_HASH_BITS = 13;\\r\\n// for MEDIUM_MEM\\r\\n// var zip_LIT_BUFSIZE = 0x4000;\\r\\n// var zip_HASH_BITS = 14;\\r\\n// for BIG_MEM\\r\\n// var zip_LIT_BUFSIZE = 0x8000;\\r\\n// var zip_HASH_BITS = 15;\\r\\nif(zip_LIT_BUFSIZE > zip_INBUFSIZ)\\r\\n    alert(\\\"error: zip_INBUFSIZ is too small\\\");\\r\\nif((zip_WSIZE<<1) > (1<<zip_BITS))\\r\\n    alert(\\\"error: zip_WSIZE is too large\\\");\\r\\nif(zip_HASH_BITS > zip_BITS-1)\\r\\n    alert(\\\"error: zip_HASH_BITS is too large\\\");\\r\\nif(zip_HASH_BITS < 8 || zip_MAX_MATCH != 258)\\r\\n    alert(\\\"error: Code too clever\\\");\\r\\nvar zip_DIST_BUFSIZE = zip_LIT_BUFSIZE;\\r\\nvar zip_HASH_SIZE = 1 << zip_HASH_BITS;\\r\\nvar zip_HASH_MASK = zip_HASH_SIZE - 1;\\r\\nvar zip_WMASK = zip_WSIZE - 1;\\r\\nvar zip_NIL = 0; // Tail of hash chains\\r\\nvar zip_TOO_FAR = 4096;\\r\\nvar zip_MIN_LOOKAHEAD = zip_MAX_MATCH + zip_MIN_MATCH + 1;\\r\\nvar zip_MAX_DIST = zip_WSIZE - zip_MIN_LOOKAHEAD;\\r\\nvar zip_SMALLEST = 1;\\r\\nvar zip_MAX_BITS = 15;\\r\\nvar zip_MAX_BL_BITS = 7;\\r\\nvar zip_LENGTH_CODES = 29;\\r\\nvar zip_LITERALS =256;\\r\\nvar zip_END_BLOCK = 256;\\r\\nvar zip_L_CODES = zip_LITERALS + 1 + zip_LENGTH_CODES;\\r\\nvar zip_D_CODES = 30;\\r\\nvar zip_BL_CODES = 19;\\r\\nvar zip_REP_3_6 = 16;\\r\\nvar zip_REPZ_3_10 = 17;\\r\\nvar zip_REPZ_11_138 = 18;\\r\\nvar zip_HEAP_SIZE = 2 * zip_L_CODES + 1;\\r\\nvar zip_H_SHIFT = parseInt((zip_HASH_BITS + zip_MIN_MATCH - 1) /\\r\\n\\t\\t\\t   zip_MIN_MATCH);\\r\\n\\r\\n/* variables */\\r\\nvar zip_free_queue;\\r\\nvar zip_qhead, zip_qtail;\\r\\nvar zip_initflag;\\r\\nvar zip_outbuf = null;\\r\\nvar zip_outcnt, zip_outoff;\\r\\nvar zip_complete;\\r\\nvar zip_window;\\r\\nvar zip_d_buf;\\r\\nvar zip_l_buf;\\r\\nvar zip_prev;\\r\\nvar zip_bi_buf;\\r\\nvar zip_bi_valid;\\r\\nvar zip_block_start;\\r\\nvar zip_ins_h;\\r\\nvar zip_hash_head;\\r\\nvar zip_prev_match;\\r\\nvar zip_match_available;\\r\\nvar zip_match_length;\\r\\nvar zip_prev_length;\\r\\nvar zip_strstart;\\r\\nvar zip_match_start;\\r\\nvar zip_eofile;\\r\\nvar zip_lookahead;\\r\\nvar zip_max_chain_length;\\r\\nvar zip_max_lazy_match;\\r\\nvar zip_compr_level;\\r\\nvar zip_good_match;\\r\\nvar zip_nice_match;\\r\\nvar zip_dyn_ltree;\\r\\nvar zip_dyn_dtree;\\r\\nvar zip_static_ltree;\\r\\nvar zip_static_dtree;\\r\\nvar zip_bl_tree;\\r\\nvar zip_l_desc;\\r\\nvar zip_d_desc;\\r\\nvar zip_bl_desc;\\r\\nvar zip_bl_count;\\r\\nvar zip_heap;\\r\\nvar zip_heap_len;\\r\\nvar zip_heap_max;\\r\\nvar zip_depth;\\r\\nvar zip_length_code;\\r\\nvar zip_dist_code;\\r\\nvar zip_base_length;\\r\\nvar zip_base_dist;\\r\\nvar zip_flag_buf;\\r\\nvar zip_last_lit;\\r\\nvar zip_last_dist;\\r\\nvar zip_last_flags;\\r\\nvar zip_flags;\\r\\nvar zip_flag_bit;\\r\\nvar zip_opt_len;\\r\\nvar zip_static_len;\\r\\nvar zip_deflate_data;\\r\\nvar zip_deflate_pos;\\r\\n\\r\\n/* objects (deflate) */\\r\\n\\r\\nvar zip_DeflateCT = function() {\\r\\n    this.fc = 0; // frequency count or bit string\\r\\n    this.dl = 0; // father node in Huffman tree or length of bit string\\r\\n}\\r\\n\\r\\nvar zip_DeflateTreeDesc = function() {\\r\\n    this.dyn_tree = null;\\t// the dynamic tree\\r\\n    this.static_tree = null;\\t// corresponding static tree or NULL\\r\\n    this.extra_bits = null;\\t// extra bits for each code or NULL\\r\\n    this.extra_base = 0;\\t// base index for extra_bits\\r\\n    this.elems = 0;\\t\\t// max number of elements in the tree\\r\\n    this.max_length = 0;\\t// max bit length for the codes\\r\\n    this.max_code = 0;\\t\\t// largest code with non zero frequency\\r\\n}\\r\\n\\r\\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\\r\\n * the desired pack level (0..9). The values given below have been tuned to\\r\\n * exclude worst case performance for pathological files. Better values may be\\r\\n * found for specific files.\\r\\n */\\r\\nvar zip_DeflateConfiguration = function(a, b, c, d) {\\r\\n    this.good_length = a; // reduce lazy search above this match length\\r\\n    this.max_lazy = b;    // do not perform lazy search above this match length\\r\\n    this.nice_length = c; // quit search above this match length\\r\\n    this.max_chain = d;\\r\\n}\\r\\n\\r\\nvar zip_DeflateBuffer = function() {\\r\\n    this.next = null;\\r\\n    this.len = 0;\\r\\n    this.ptr = new Array(zip_OUTBUFSIZ);\\r\\n    this.off = 0;\\r\\n}\\r\\n\\r\\n/* constant tables */\\r\\nvar zip_extra_lbits = new Array(\\r\\n    0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0);\\r\\nvar zip_extra_dbits = new Array(\\r\\n    0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13);\\r\\nvar zip_extra_blbits = new Array(\\r\\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7);\\r\\nvar zip_bl_order = new Array(\\r\\n    16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15);\\r\\nvar zip_configuration_table = new Array(\\r\\n\\tnew zip_DeflateConfiguration(0,    0,   0,    0),\\r\\n\\tnew zip_DeflateConfiguration(4,    4,   8,    4),\\r\\n\\tnew zip_DeflateConfiguration(4,    5,  16,    8),\\r\\n\\tnew zip_DeflateConfiguration(4,    6,  32,   32),\\r\\n\\tnew zip_DeflateConfiguration(4,    4,  16,   16),\\r\\n\\tnew zip_DeflateConfiguration(8,   16,  32,   32),\\r\\n\\tnew zip_DeflateConfiguration(8,   16, 128,  128),\\r\\n\\tnew zip_DeflateConfiguration(8,   32, 128,  256),\\r\\n\\tnew zip_DeflateConfiguration(32, 128, 258, 1024),\\r\\n\\tnew zip_DeflateConfiguration(32, 258, 258, 4096));\\r\\n\\r\\n\\r\\n/* routines (deflate) */\\r\\n\\r\\nvar zip_deflate_start = function(level) {\\r\\n    var i;\\r\\n\\r\\n    if(!level)\\r\\n\\tlevel = zip_DEFAULT_LEVEL;\\r\\n    else if(level < 1)\\r\\n\\tlevel = 1;\\r\\n    else if(level > 9)\\r\\n\\tlevel = 9;\\r\\n\\r\\n    zip_compr_level = level;\\r\\n    zip_initflag = false;\\r\\n    zip_eofile = false;\\r\\n    if(zip_outbuf != null)\\r\\n\\treturn;\\r\\n\\r\\n    zip_free_queue = zip_qhead = zip_qtail = null;\\r\\n    zip_outbuf = new Array(zip_OUTBUFSIZ);\\r\\n    zip_window = new Array(zip_window_size);\\r\\n    zip_d_buf = new Array(zip_DIST_BUFSIZE);\\r\\n    zip_l_buf = new Array(zip_INBUFSIZ + zip_INBUF_EXTRA);\\r\\n    zip_prev = new Array(1 << zip_BITS);\\r\\n    zip_dyn_ltree = new Array(zip_HEAP_SIZE);\\r\\n    for(i = 0; i < zip_HEAP_SIZE; i++)\\r\\n\\tzip_dyn_ltree[i] = new zip_DeflateCT();\\r\\n    zip_dyn_dtree = new Array(2*zip_D_CODES+1);\\r\\n    for(i = 0; i < 2*zip_D_CODES+1; i++)\\r\\n\\tzip_dyn_dtree[i] = new zip_DeflateCT();\\r\\n    zip_static_ltree = new Array(zip_L_CODES+2);\\r\\n    for(i = 0; i < zip_L_CODES+2; i++)\\r\\n\\tzip_static_ltree[i] = new zip_DeflateCT();\\r\\n    zip_static_dtree = new Array(zip_D_CODES);\\r\\n    for(i = 0; i < zip_D_CODES; i++)\\r\\n\\tzip_static_dtree[i] = new zip_DeflateCT();\\r\\n    zip_bl_tree = new Array(2*zip_BL_CODES+1);\\r\\n    for(i = 0; i < 2*zip_BL_CODES+1; i++)\\r\\n\\tzip_bl_tree[i] = new zip_DeflateCT();\\r\\n    zip_l_desc = new zip_DeflateTreeDesc();\\r\\n    zip_d_desc = new zip_DeflateTreeDesc();\\r\\n    zip_bl_desc = new zip_DeflateTreeDesc();\\r\\n    zip_bl_count = new Array(zip_MAX_BITS+1);\\r\\n    zip_heap = new Array(2*zip_L_CODES+1);\\r\\n    zip_depth = new Array(2*zip_L_CODES+1);\\r\\n    zip_length_code = new Array(zip_MAX_MATCH-zip_MIN_MATCH+1);\\r\\n    zip_dist_code = new Array(512);\\r\\n    zip_base_length = new Array(zip_LENGTH_CODES);\\r\\n    zip_base_dist = new Array(zip_D_CODES);\\r\\n    zip_flag_buf = new Array(parseInt(zip_LIT_BUFSIZE / 8));\\r\\n}\\r\\n\\r\\nvar zip_deflate_end = function() {\\r\\n    zip_free_queue = zip_qhead = zip_qtail = null;\\r\\n    zip_outbuf = null;\\r\\n    zip_window = null;\\r\\n    zip_d_buf = null;\\r\\n    zip_l_buf = null;\\r\\n    zip_prev = null;\\r\\n    zip_dyn_ltree = null;\\r\\n    zip_dyn_dtree = null;\\r\\n    zip_static_ltree = null;\\r\\n    zip_static_dtree = null;\\r\\n    zip_bl_tree = null;\\r\\n    zip_l_desc = null;\\r\\n    zip_d_desc = null;\\r\\n    zip_bl_desc = null;\\r\\n    zip_bl_count = null;\\r\\n    zip_heap = null;\\r\\n    zip_depth = null;\\r\\n    zip_length_code = null;\\r\\n    zip_dist_code = null;\\r\\n    zip_base_length = null;\\r\\n    zip_base_dist = null;\\r\\n    zip_flag_buf = null;\\r\\n}\\r\\n\\r\\nvar zip_reuse_queue = function(p) {\\r\\n    p.next = zip_free_queue;\\r\\n    zip_free_queue = p;\\r\\n}\\r\\n\\r\\nvar zip_new_queue = function() {\\r\\n    var p;\\r\\n\\r\\n    if(zip_free_queue != null)\\r\\n    {\\r\\n\\tp = zip_free_queue;\\r\\n\\tzip_free_queue = zip_free_queue.next;\\r\\n    }\\r\\n    else\\r\\n\\tp = new zip_DeflateBuffer();\\r\\n    p.next = null;\\r\\n    p.len = p.off = 0;\\r\\n\\r\\n    return p;\\r\\n}\\r\\n\\r\\nvar zip_head1 = function(i) {\\r\\n    return zip_prev[zip_WSIZE + i];\\r\\n}\\r\\n\\r\\nvar zip_head2 = function(i, val) {\\r\\n    return zip_prev[zip_WSIZE + i] = val;\\r\\n}\\r\\n\\r\\n/* put_byte is used for the compressed output, put_ubyte for the\\r\\n * uncompressed output. However unlzw() uses window for its\\r\\n * suffix table instead of its output buffer, so it does not use put_ubyte\\r\\n * (to be cleaned up).\\r\\n */\\r\\nvar zip_put_byte = function(c) {\\r\\n    zip_outbuf[zip_outoff + zip_outcnt++] = c;\\r\\n    if(zip_outoff + zip_outcnt == zip_OUTBUFSIZ)\\r\\n\\tzip_qoutbuf();\\r\\n}\\r\\n\\r\\n/* Output a 16 bit value, lsb first */\\r\\nvar zip_put_short = function(w) {\\r\\n    w &= 0xffff;\\r\\n    if(zip_outoff + zip_outcnt < zip_OUTBUFSIZ - 2) {\\r\\n\\tzip_outbuf[zip_outoff + zip_outcnt++] = (w & 0xff);\\r\\n\\tzip_outbuf[zip_outoff + zip_outcnt++] = (w >>> 8);\\r\\n    } else {\\r\\n\\tzip_put_byte(w & 0xff);\\r\\n\\tzip_put_byte(w >>> 8);\\r\\n    }\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Insert string s in the dictionary and set match_head to the previous head\\r\\n * of the hash chain (the most recent string with same hash key). Return\\r\\n * the previous length of the hash chain.\\r\\n * IN  assertion: all calls to to INSERT_STRING are made with consecutive\\r\\n *    input characters and the first MIN_MATCH bytes of s are valid\\r\\n *    (except for the last MIN_MATCH-1 bytes of the input file).\\r\\n */\\r\\nvar zip_INSERT_STRING = function() {\\r\\n    zip_ins_h = ((zip_ins_h << zip_H_SHIFT)\\r\\n\\t\\t ^ (zip_window[zip_strstart + zip_MIN_MATCH - 1] & 0xff))\\r\\n\\t& zip_HASH_MASK;\\r\\n    zip_hash_head = zip_head1(zip_ins_h);\\r\\n    zip_prev[zip_strstart & zip_WMASK] = zip_hash_head;\\r\\n    zip_head2(zip_ins_h, zip_strstart);\\r\\n}\\r\\n\\r\\n/* Send a code of the given tree. c and tree must not have side effects */\\r\\nvar zip_SEND_CODE = function(c, tree) {\\r\\n    zip_send_bits(tree[c].fc, tree[c].dl);\\r\\n}\\r\\n\\r\\n/* Mapping from a distance to a distance code. dist is the distance - 1 and\\r\\n * must not have side effects. dist_code[256] and dist_code[257] are never\\r\\n * used.\\r\\n */\\r\\nvar zip_D_CODE = function(dist) {\\r\\n    return (dist < 256 ? zip_dist_code[dist]\\r\\n\\t    : zip_dist_code[256 + (dist>>7)]) & 0xff;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Compares to subtrees, using the tree depth as tie breaker when\\r\\n * the subtrees have equal frequency. This minimizes the worst case length.\\r\\n */\\r\\nvar zip_SMALLER = function(tree, n, m) {\\r\\n    return tree[n].fc < tree[m].fc ||\\r\\n      (tree[n].fc == tree[m].fc && zip_depth[n] <= zip_depth[m]);\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * read string data\\r\\n */\\r\\nvar zip_read_buff = function(buff, offset, n) {\\r\\n    var i;\\r\\n    for(i = 0; i < n && zip_deflate_pos < zip_deflate_data.length; i++)\\r\\n\\tbuff[offset + i] =\\r\\n\\t    zip_deflate_data.charCodeAt(zip_deflate_pos++) & 0xff;\\r\\n    return i;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Initialize the \\\"longest match\\\" routines for a new file\\r\\n */\\r\\nvar zip_lm_init = function() {\\r\\n    var j;\\r\\n\\r\\n    /* Initialize the hash table. */\\r\\n    for(j = 0; j < zip_HASH_SIZE; j++)\\r\\n//\\tzip_head2(j, zip_NIL);\\r\\n\\tzip_prev[zip_WSIZE + j] = 0;\\r\\n    /* prev will be initialized on the fly */\\r\\n\\r\\n    /* Set the default configuration parameters:\\r\\n     */\\r\\n    zip_max_lazy_match = zip_configuration_table[zip_compr_level].max_lazy;\\r\\n    zip_good_match     = zip_configuration_table[zip_compr_level].good_length;\\r\\n    if(!zip_FULL_SEARCH)\\r\\n\\tzip_nice_match = zip_configuration_table[zip_compr_level].nice_length;\\r\\n    zip_max_chain_length = zip_configuration_table[zip_compr_level].max_chain;\\r\\n\\r\\n    zip_strstart = 0;\\r\\n    zip_block_start = 0;\\r\\n\\r\\n    zip_lookahead = zip_read_buff(zip_window, 0, 2 * zip_WSIZE);\\r\\n    if(zip_lookahead <= 0) {\\r\\n\\tzip_eofile = true;\\r\\n\\tzip_lookahead = 0;\\r\\n\\treturn;\\r\\n    }\\r\\n    zip_eofile = false;\\r\\n    /* Make sure that we always have enough lookahead. This is important\\r\\n     * if input comes from a device such as a tty.\\r\\n     */\\r\\n    while(zip_lookahead < zip_MIN_LOOKAHEAD && !zip_eofile)\\r\\n\\tzip_fill_window();\\r\\n\\r\\n    /* If lookahead < MIN_MATCH, ins_h is garbage, but this is\\r\\n     * not important since only literal bytes will be emitted.\\r\\n     */\\r\\n    zip_ins_h = 0;\\r\\n    for(j = 0; j < zip_MIN_MATCH - 1; j++) {\\r\\n//      UPDATE_HASH(ins_h, window[j]);\\r\\n\\tzip_ins_h = ((zip_ins_h << zip_H_SHIFT) ^ (zip_window[j] & 0xff)) & zip_HASH_MASK;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Set match_start to the longest match starting at the given string and\\r\\n * return its length. Matches shorter or equal to prev_length are discarded,\\r\\n * in which case the result is equal to prev_length and match_start is\\r\\n * garbage.\\r\\n * IN assertions: cur_match is the head of the hash chain for the current\\r\\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\\r\\n */\\r\\nvar zip_longest_match = function(cur_match) {\\r\\n    var chain_length = zip_max_chain_length; // max hash chain length\\r\\n    var scanp = zip_strstart; // current string\\r\\n    var matchp;\\t\\t// matched string\\r\\n    var len;\\t\\t// length of current match\\r\\n    var best_len = zip_prev_length;\\t// best match length so far\\r\\n\\r\\n    /* Stop when cur_match becomes <= limit. To simplify the code,\\r\\n     * we prevent matches with the string of window index 0.\\r\\n     */\\r\\n    var limit = (zip_strstart > zip_MAX_DIST ? zip_strstart - zip_MAX_DIST : zip_NIL);\\r\\n\\r\\n    var strendp = zip_strstart + zip_MAX_MATCH;\\r\\n    var scan_end1 = zip_window[scanp + best_len - 1];\\r\\n    var scan_end  = zip_window[scanp + best_len];\\r\\n\\r\\n    /* Do not waste too much time if we already have a good match: */\\r\\n    if(zip_prev_length >= zip_good_match)\\r\\n\\tchain_length >>= 2;\\r\\n\\r\\n//  Assert(encoder->strstart <= window_size-MIN_LOOKAHEAD, \\\"insufficient lookahead\\\");\\r\\n\\r\\n    do {\\r\\n//    Assert(cur_match < encoder->strstart, \\\"no future\\\");\\r\\n\\tmatchp = cur_match;\\r\\n\\r\\n\\t/* Skip to next match if the match length cannot increase\\r\\n\\t    * or if the match length is less than 2:\\r\\n\\t*/\\r\\n\\tif(zip_window[matchp + best_len]\\t!= scan_end  ||\\r\\n\\t   zip_window[matchp + best_len - 1]\\t!= scan_end1 ||\\r\\n\\t   zip_window[matchp]\\t\\t\\t!= zip_window[scanp] ||\\r\\n\\t   zip_window[++matchp]\\t\\t\\t!= zip_window[scanp + 1]) {\\r\\n\\t    continue;\\r\\n\\t}\\r\\n\\r\\n\\t/* The check at best_len-1 can be removed because it will be made\\r\\n         * again later. (This heuristic is not always a win.)\\r\\n         * It is not necessary to compare scan[2] and match[2] since they\\r\\n         * are always equal when the other bytes match, given that\\r\\n         * the hash keys are equal and that HASH_BITS >= 8.\\r\\n         */\\r\\n\\tscanp += 2;\\r\\n\\tmatchp++;\\r\\n\\r\\n\\t/* We check for insufficient lookahead only every 8th comparison;\\r\\n         * the 256th check will be made at strstart+258.\\r\\n         */\\r\\n\\tdo {\\r\\n\\t} while(zip_window[++scanp] == zip_window[++matchp] &&\\r\\n\\t\\tzip_window[++scanp] == zip_window[++matchp] &&\\r\\n\\t\\tzip_window[++scanp] == zip_window[++matchp] &&\\r\\n\\t\\tzip_window[++scanp] == zip_window[++matchp] &&\\r\\n\\t\\tzip_window[++scanp] == zip_window[++matchp] &&\\r\\n\\t\\tzip_window[++scanp] == zip_window[++matchp] &&\\r\\n\\t\\tzip_window[++scanp] == zip_window[++matchp] &&\\r\\n\\t\\tzip_window[++scanp] == zip_window[++matchp] &&\\r\\n\\t\\tscanp < strendp);\\r\\n\\r\\n      len = zip_MAX_MATCH - (strendp - scanp);\\r\\n      scanp = strendp - zip_MAX_MATCH;\\r\\n\\r\\n      if(len > best_len) {\\r\\n\\t  zip_match_start = cur_match;\\r\\n\\t  best_len = len;\\r\\n\\t  if(zip_FULL_SEARCH) {\\r\\n\\t      if(len >= zip_MAX_MATCH) break;\\r\\n\\t  } else {\\r\\n\\t      if(len >= zip_nice_match) break;\\r\\n\\t  }\\r\\n\\r\\n\\t  scan_end1  = zip_window[scanp + best_len-1];\\r\\n\\t  scan_end   = zip_window[scanp + best_len];\\r\\n      }\\r\\n    } while((cur_match = zip_prev[cur_match & zip_WMASK]) > limit\\r\\n\\t    && --chain_length != 0);\\r\\n\\r\\n    return best_len;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Fill the window when the lookahead becomes insufficient.\\r\\n * Updates strstart and lookahead, and sets eofile if end of input file.\\r\\n * IN assertion: lookahead < MIN_LOOKAHEAD && strstart + lookahead > 0\\r\\n * OUT assertions: at least one byte has been read, or eofile is set;\\r\\n *    file reads are performed for at least two bytes (required for the\\r\\n *    translate_eol option).\\r\\n */\\r\\nvar zip_fill_window = function() {\\r\\n    var n, m;\\r\\n\\r\\n    // Amount of free space at the end of the window.\\r\\n    var more = zip_window_size - zip_lookahead - zip_strstart;\\r\\n\\r\\n    /* If the window is almost full and there is insufficient lookahead,\\r\\n     * move the upper half to the lower one to make room in the upper half.\\r\\n     */\\r\\n    if(more == -1) {\\r\\n\\t/* Very unlikely, but possible on 16 bit machine if strstart == 0\\r\\n         * and lookahead == 1 (input done one byte at time)\\r\\n         */\\r\\n\\tmore--;\\r\\n    } else if(zip_strstart >= zip_WSIZE + zip_MAX_DIST) {\\r\\n\\t/* By the IN assertion, the window is not empty so we can't confuse\\r\\n         * more == 0 with more == 64K on a 16 bit machine.\\r\\n         */\\r\\n//\\tAssert(window_size == (ulg)2*WSIZE, \\\"no sliding with BIG_MEM\\\");\\r\\n\\r\\n//\\tSystem.arraycopy(window, WSIZE, window, 0, WSIZE);\\r\\n\\tfor(n = 0; n < zip_WSIZE; n++)\\r\\n\\t    zip_window[n] = zip_window[n + zip_WSIZE];\\r\\n      \\r\\n\\tzip_match_start -= zip_WSIZE;\\r\\n\\tzip_strstart    -= zip_WSIZE; /* we now have strstart >= MAX_DIST: */\\r\\n\\tzip_block_start -= zip_WSIZE;\\r\\n\\r\\n\\tfor(n = 0; n < zip_HASH_SIZE; n++) {\\r\\n\\t    m = zip_head1(n);\\r\\n\\t    zip_head2(n, m >= zip_WSIZE ? m - zip_WSIZE : zip_NIL);\\r\\n\\t}\\r\\n\\tfor(n = 0; n < zip_WSIZE; n++) {\\r\\n\\t    /* If n is not on any hash chain, prev[n] is garbage but\\r\\n\\t     * its value will never be used.\\r\\n\\t     */\\r\\n\\t    m = zip_prev[n];\\r\\n\\t    zip_prev[n] = (m >= zip_WSIZE ? m - zip_WSIZE : zip_NIL);\\r\\n\\t}\\r\\n\\tmore += zip_WSIZE;\\r\\n    }\\r\\n    // At this point, more >= 2\\r\\n    if(!zip_eofile) {\\r\\n\\tn = zip_read_buff(zip_window, zip_strstart + zip_lookahead, more);\\r\\n\\tif(n <= 0)\\r\\n\\t    zip_eofile = true;\\r\\n\\telse\\r\\n\\t    zip_lookahead += n;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Processes a new input file and return its compressed length. This\\r\\n * function does not perform lazy evaluationof matches and inserts\\r\\n * new strings in the dictionary only for unmatched strings or for short\\r\\n * matches. It is used only for the fast compression options.\\r\\n */\\r\\nvar zip_deflate_fast = function() {\\r\\n    while(zip_lookahead != 0 && zip_qhead == null) {\\r\\n\\tvar flush; // set if current block must be flushed\\r\\n\\r\\n\\t/* Insert the string window[strstart .. strstart+2] in the\\r\\n\\t * dictionary, and set hash_head to the head of the hash chain:\\r\\n\\t */\\r\\n\\tzip_INSERT_STRING();\\r\\n\\r\\n\\t/* Find the longest match, discarding those <= prev_length.\\r\\n\\t * At this point we have always match_length < MIN_MATCH\\r\\n\\t */\\r\\n\\tif(zip_hash_head != zip_NIL &&\\r\\n\\t   zip_strstart - zip_hash_head <= zip_MAX_DIST) {\\r\\n\\t    /* To simplify the code, we prevent matches with the string\\r\\n\\t     * of window index 0 (in particular we have to avoid a match\\r\\n\\t     * of the string with itself at the start of the input file).\\r\\n\\t     */\\r\\n\\t    zip_match_length = zip_longest_match(zip_hash_head);\\r\\n\\t    /* longest_match() sets match_start */\\r\\n\\t    if(zip_match_length > zip_lookahead)\\r\\n\\t\\tzip_match_length = zip_lookahead;\\r\\n\\t}\\r\\n\\tif(zip_match_length >= zip_MIN_MATCH) {\\r\\n//\\t    check_match(strstart, match_start, match_length);\\r\\n\\r\\n\\t    flush = zip_ct_tally(zip_strstart - zip_match_start,\\r\\n\\t\\t\\t\\t zip_match_length - zip_MIN_MATCH);\\r\\n\\t    zip_lookahead -= zip_match_length;\\r\\n\\r\\n\\t    /* Insert new strings in the hash table only if the match length\\r\\n\\t     * is not too large. This saves time but degrades compression.\\r\\n\\t     */\\r\\n\\t    if(zip_match_length <= zip_max_lazy_match) {\\r\\n\\t\\tzip_match_length--; // string at strstart already in hash table\\r\\n\\t\\tdo {\\r\\n\\t\\t    zip_strstart++;\\r\\n\\t\\t    zip_INSERT_STRING();\\r\\n\\t\\t    /* strstart never exceeds WSIZE-MAX_MATCH, so there are\\r\\n\\t\\t     * always MIN_MATCH bytes ahead. If lookahead < MIN_MATCH\\r\\n\\t\\t     * these bytes are garbage, but it does not matter since\\r\\n\\t\\t     * the next lookahead bytes will be emitted as literals.\\r\\n\\t\\t     */\\r\\n\\t\\t} while(--zip_match_length != 0);\\r\\n\\t\\tzip_strstart++;\\r\\n\\t    } else {\\r\\n\\t\\tzip_strstart += zip_match_length;\\r\\n\\t\\tzip_match_length = 0;\\r\\n\\t\\tzip_ins_h = zip_window[zip_strstart] & 0xff;\\r\\n//\\t\\tUPDATE_HASH(ins_h, window[strstart + 1]);\\r\\n\\t\\tzip_ins_h = ((zip_ins_h<<zip_H_SHIFT) ^ (zip_window[zip_strstart + 1] & 0xff)) & zip_HASH_MASK;\\r\\n\\r\\n//#if MIN_MATCH != 3\\r\\n//\\t\\tCall UPDATE_HASH() MIN_MATCH-3 more times\\r\\n//#endif\\r\\n\\r\\n\\t    }\\r\\n\\t} else {\\r\\n\\t    /* No match, output a literal byte */\\r\\n\\t    flush = zip_ct_tally(0, zip_window[zip_strstart] & 0xff);\\r\\n\\t    zip_lookahead--;\\r\\n\\t    zip_strstart++;\\r\\n\\t}\\r\\n\\tif(flush) {\\r\\n\\t    zip_flush_block(0);\\r\\n\\t    zip_block_start = zip_strstart;\\r\\n\\t}\\r\\n\\r\\n\\t/* Make sure that we always have enough lookahead, except\\r\\n\\t * at the end of the input file. We need MAX_MATCH bytes\\r\\n\\t * for the next match, plus MIN_MATCH bytes to insert the\\r\\n\\t * string following the next match.\\r\\n\\t */\\r\\n\\twhile(zip_lookahead < zip_MIN_LOOKAHEAD && !zip_eofile)\\r\\n\\t    zip_fill_window();\\r\\n    }\\r\\n}\\r\\n\\r\\nvar zip_deflate_better = function() {\\r\\n    /* Process the input block. */\\r\\n    while(zip_lookahead != 0 && zip_qhead == null) {\\r\\n\\t/* Insert the string window[strstart .. strstart+2] in the\\r\\n\\t * dictionary, and set hash_head to the head of the hash chain:\\r\\n\\t */\\r\\n\\tzip_INSERT_STRING();\\r\\n\\r\\n\\t/* Find the longest match, discarding those <= prev_length.\\r\\n\\t */\\r\\n\\tzip_prev_length = zip_match_length;\\r\\n\\tzip_prev_match = zip_match_start;\\r\\n\\tzip_match_length = zip_MIN_MATCH - 1;\\r\\n\\r\\n\\tif(zip_hash_head != zip_NIL &&\\r\\n\\t   zip_prev_length < zip_max_lazy_match &&\\r\\n\\t   zip_strstart - zip_hash_head <= zip_MAX_DIST) {\\r\\n\\t    /* To simplify the code, we prevent matches with the string\\r\\n\\t     * of window index 0 (in particular we have to avoid a match\\r\\n\\t     * of the string with itself at the start of the input file).\\r\\n\\t     */\\r\\n\\t    zip_match_length = zip_longest_match(zip_hash_head);\\r\\n\\t    /* longest_match() sets match_start */\\r\\n\\t    if(zip_match_length > zip_lookahead)\\r\\n\\t\\tzip_match_length = zip_lookahead;\\r\\n\\r\\n\\t    /* Ignore a length 3 match if it is too distant: */\\r\\n\\t    if(zip_match_length == zip_MIN_MATCH &&\\r\\n\\t       zip_strstart - zip_match_start > zip_TOO_FAR) {\\r\\n\\t\\t/* If prev_match is also MIN_MATCH, match_start is garbage\\r\\n\\t\\t * but we will ignore the current match anyway.\\r\\n\\t\\t */\\r\\n\\t\\tzip_match_length--;\\r\\n\\t    }\\r\\n\\t}\\r\\n\\t/* If there was a match at the previous step and the current\\r\\n\\t * match is not better, output the previous match:\\r\\n\\t */\\r\\n\\tif(zip_prev_length >= zip_MIN_MATCH &&\\r\\n\\t   zip_match_length <= zip_prev_length) {\\r\\n\\t    var flush; // set if current block must be flushed\\r\\n\\r\\n//\\t    check_match(strstart - 1, prev_match, prev_length);\\r\\n\\t    flush = zip_ct_tally(zip_strstart - 1 - zip_prev_match,\\r\\n\\t\\t\\t\\t zip_prev_length - zip_MIN_MATCH);\\r\\n\\r\\n\\t    /* Insert in hash table all strings up to the end of the match.\\r\\n\\t     * strstart-1 and strstart are already inserted.\\r\\n\\t     */\\r\\n\\t    zip_lookahead -= zip_prev_length - 1;\\r\\n\\t    zip_prev_length -= 2;\\r\\n\\t    do {\\r\\n\\t\\tzip_strstart++;\\r\\n\\t\\tzip_INSERT_STRING();\\r\\n\\t\\t/* strstart never exceeds WSIZE-MAX_MATCH, so there are\\r\\n\\t\\t * always MIN_MATCH bytes ahead. If lookahead < MIN_MATCH\\r\\n\\t\\t * these bytes are garbage, but it does not matter since the\\r\\n\\t\\t * next lookahead bytes will always be emitted as literals.\\r\\n\\t\\t */\\r\\n\\t    } while(--zip_prev_length != 0);\\r\\n\\t    zip_match_available = 0;\\r\\n\\t    zip_match_length = zip_MIN_MATCH - 1;\\r\\n\\t    zip_strstart++;\\r\\n\\t    if(flush) {\\r\\n\\t\\tzip_flush_block(0);\\r\\n\\t\\tzip_block_start = zip_strstart;\\r\\n\\t    }\\r\\n\\t} else if(zip_match_available != 0) {\\r\\n\\t    /* If there was no match at the previous position, output a\\r\\n\\t     * single literal. If there was a match but the current match\\r\\n\\t     * is longer, truncate the previous match to a single literal.\\r\\n\\t     */\\r\\n\\t    if(zip_ct_tally(0, zip_window[zip_strstart - 1] & 0xff)) {\\r\\n\\t\\tzip_flush_block(0);\\r\\n\\t\\tzip_block_start = zip_strstart;\\r\\n\\t    }\\r\\n\\t    zip_strstart++;\\r\\n\\t    zip_lookahead--;\\r\\n\\t} else {\\r\\n\\t    /* There is no previous match to compare with, wait for\\r\\n\\t     * the next step to decide.\\r\\n\\t     */\\r\\n\\t    zip_match_available = 1;\\r\\n\\t    zip_strstart++;\\r\\n\\t    zip_lookahead--;\\r\\n\\t}\\r\\n\\r\\n\\t/* Make sure that we always have enough lookahead, except\\r\\n\\t * at the end of the input file. We need MAX_MATCH bytes\\r\\n\\t * for the next match, plus MIN_MATCH bytes to insert the\\r\\n\\t * string following the next match.\\r\\n\\t */\\r\\n\\twhile(zip_lookahead < zip_MIN_LOOKAHEAD && !zip_eofile)\\r\\n\\t    zip_fill_window();\\r\\n    }\\r\\n}\\r\\n\\r\\nvar zip_init_deflate = function() {\\r\\n    if(zip_eofile)\\r\\n\\treturn;\\r\\n    zip_bi_buf = 0;\\r\\n    zip_bi_valid = 0;\\r\\n    zip_ct_init();\\r\\n    zip_lm_init();\\r\\n\\r\\n    zip_qhead = null;\\r\\n    zip_outcnt = 0;\\r\\n    zip_outoff = 0;\\r\\n    zip_match_available = 0;\\r\\n\\r\\n    if(zip_compr_level <= 3)\\r\\n    {\\r\\n\\tzip_prev_length = zip_MIN_MATCH - 1;\\r\\n\\tzip_match_length = 0;\\r\\n    }\\r\\n    else\\r\\n    {\\r\\n\\tzip_match_length = zip_MIN_MATCH - 1;\\r\\n\\tzip_match_available = 0;\\r\\n        zip_match_available = 0;\\r\\n    }\\r\\n\\r\\n    zip_complete = false;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Same as above, but achieves better compression. We use a lazy\\r\\n * evaluation for matches: a match is finally adopted only if there is\\r\\n * no better match at the next window position.\\r\\n */\\r\\nvar zip_deflate_internal = function(buff, off, buff_size) {\\r\\n    var n;\\r\\n\\r\\n    if(!zip_initflag)\\r\\n    {\\r\\n\\tzip_init_deflate();\\r\\n\\tzip_initflag = true;\\r\\n\\tif(zip_lookahead == 0) { // empty\\r\\n\\t    zip_complete = true;\\r\\n\\t    return 0;\\r\\n\\t}\\r\\n    }\\r\\n\\r\\n    if((n = zip_qcopy(buff, off, buff_size)) == buff_size)\\r\\n\\treturn buff_size;\\r\\n\\r\\n    if(zip_complete)\\r\\n\\treturn n;\\r\\n\\r\\n    if(zip_compr_level <= 3) // optimized for speed\\r\\n\\tzip_deflate_fast();\\r\\n    else\\r\\n\\tzip_deflate_better();\\r\\n    if(zip_lookahead == 0) {\\r\\n\\tif(zip_match_available != 0)\\r\\n\\t    zip_ct_tally(0, zip_window[zip_strstart - 1] & 0xff);\\r\\n\\tzip_flush_block(1);\\r\\n\\tzip_complete = true;\\r\\n    }\\r\\n    return n + zip_qcopy(buff, n + off, buff_size - n);\\r\\n}\\r\\n\\r\\nvar zip_qcopy = function(buff, off, buff_size) {\\r\\n    var n, i, j;\\r\\n\\r\\n    n = 0;\\r\\n    while(zip_qhead != null && n < buff_size)\\r\\n    {\\r\\n\\ti = buff_size - n;\\r\\n\\tif(i > zip_qhead.len)\\r\\n\\t    i = zip_qhead.len;\\r\\n//      System.arraycopy(qhead.ptr, qhead.off, buff, off + n, i);\\r\\n\\tfor(j = 0; j < i; j++)\\r\\n\\t    buff[off + n + j] = zip_qhead.ptr[zip_qhead.off + j];\\r\\n\\t\\r\\n\\tzip_qhead.off += i;\\r\\n\\tzip_qhead.len -= i;\\r\\n\\tn += i;\\r\\n\\tif(zip_qhead.len == 0) {\\r\\n\\t    var p;\\r\\n\\t    p = zip_qhead;\\r\\n\\t    zip_qhead = zip_qhead.next;\\r\\n\\t    zip_reuse_queue(p);\\r\\n\\t}\\r\\n    }\\r\\n\\r\\n    if(n == buff_size)\\r\\n\\treturn n;\\r\\n\\r\\n    if(zip_outoff < zip_outcnt) {\\r\\n\\ti = buff_size - n;\\r\\n\\tif(i > zip_outcnt - zip_outoff)\\r\\n\\t    i = zip_outcnt - zip_outoff;\\r\\n\\t// System.arraycopy(outbuf, outoff, buff, off + n, i);\\r\\n\\tfor(j = 0; j < i; j++)\\r\\n\\t    buff[off + n + j] = zip_outbuf[zip_outoff + j];\\r\\n\\tzip_outoff += i;\\r\\n\\tn += i;\\r\\n\\tif(zip_outcnt == zip_outoff)\\r\\n\\t    zip_outcnt = zip_outoff = 0;\\r\\n    }\\r\\n    return n;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Allocate the match buffer, initialize the various tables and save the\\r\\n * location of the internal file attribute (ascii/binary) and method\\r\\n * (DEFLATE/STORE).\\r\\n */\\r\\nvar zip_ct_init = function() {\\r\\n    var n;\\t// iterates over tree elements\\r\\n    var bits;\\t// bit counter\\r\\n    var length;\\t// length value\\r\\n    var code;\\t// code value\\r\\n    var dist;\\t// distance index\\r\\n\\r\\n    if(zip_static_dtree[0].dl != 0) return; // ct_init already called\\r\\n\\r\\n    zip_l_desc.dyn_tree\\t\\t= zip_dyn_ltree;\\r\\n    zip_l_desc.static_tree\\t= zip_static_ltree;\\r\\n    zip_l_desc.extra_bits\\t= zip_extra_lbits;\\r\\n    zip_l_desc.extra_base\\t= zip_LITERALS + 1;\\r\\n    zip_l_desc.elems\\t\\t= zip_L_CODES;\\r\\n    zip_l_desc.max_length\\t= zip_MAX_BITS;\\r\\n    zip_l_desc.max_code\\t\\t= 0;\\r\\n\\r\\n    zip_d_desc.dyn_tree\\t\\t= zip_dyn_dtree;\\r\\n    zip_d_desc.static_tree\\t= zip_static_dtree;\\r\\n    zip_d_desc.extra_bits\\t= zip_extra_dbits;\\r\\n    zip_d_desc.extra_base\\t= 0;\\r\\n    zip_d_desc.elems\\t\\t= zip_D_CODES;\\r\\n    zip_d_desc.max_length\\t= zip_MAX_BITS;\\r\\n    zip_d_desc.max_code\\t\\t= 0;\\r\\n\\r\\n    zip_bl_desc.dyn_tree\\t= zip_bl_tree;\\r\\n    zip_bl_desc.static_tree\\t= null;\\r\\n    zip_bl_desc.extra_bits\\t= zip_extra_blbits;\\r\\n    zip_bl_desc.extra_base\\t= 0;\\r\\n    zip_bl_desc.elems\\t\\t= zip_BL_CODES;\\r\\n    zip_bl_desc.max_length\\t= zip_MAX_BL_BITS;\\r\\n    zip_bl_desc.max_code\\t= 0;\\r\\n\\r\\n    // Initialize the mapping length (0..255) -> length code (0..28)\\r\\n    length = 0;\\r\\n    for(code = 0; code < zip_LENGTH_CODES-1; code++) {\\r\\n\\tzip_base_length[code] = length;\\r\\n\\tfor(n = 0; n < (1<<zip_extra_lbits[code]); n++)\\r\\n\\t    zip_length_code[length++] = code;\\r\\n    }\\r\\n    // Assert (length == 256, \\\"ct_init: length != 256\\\");\\r\\n\\r\\n    /* Note that the length 255 (match length 258) can be represented\\r\\n     * in two different ways: code 284 + 5 bits or code 285, so we\\r\\n     * overwrite length_code[255] to use the best encoding:\\r\\n     */\\r\\n    zip_length_code[length-1] = code;\\r\\n\\r\\n    /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\\r\\n    dist = 0;\\r\\n    for(code = 0 ; code < 16; code++) {\\r\\n\\tzip_base_dist[code] = dist;\\r\\n\\tfor(n = 0; n < (1<<zip_extra_dbits[code]); n++) {\\r\\n\\t    zip_dist_code[dist++] = code;\\r\\n\\t}\\r\\n    }\\r\\n    // Assert (dist == 256, \\\"ct_init: dist != 256\\\");\\r\\n    dist >>= 7; // from now on, all distances are divided by 128\\r\\n    for( ; code < zip_D_CODES; code++) {\\r\\n\\tzip_base_dist[code] = dist << 7;\\r\\n\\tfor(n = 0; n < (1<<(zip_extra_dbits[code]-7)); n++)\\r\\n\\t    zip_dist_code[256 + dist++] = code;\\r\\n    }\\r\\n    // Assert (dist == 256, \\\"ct_init: 256+dist != 512\\\");\\r\\n\\r\\n    // Construct the codes of the static literal tree\\r\\n    for(bits = 0; bits <= zip_MAX_BITS; bits++)\\r\\n\\tzip_bl_count[bits] = 0;\\r\\n    n = 0;\\r\\n    while(n <= 143) { zip_static_ltree[n++].dl = 8; zip_bl_count[8]++; }\\r\\n    while(n <= 255) { zip_static_ltree[n++].dl = 9; zip_bl_count[9]++; }\\r\\n    while(n <= 279) { zip_static_ltree[n++].dl = 7; zip_bl_count[7]++; }\\r\\n    while(n <= 287) { zip_static_ltree[n++].dl = 8; zip_bl_count[8]++; }\\r\\n    /* Codes 286 and 287 do not exist, but we must include them in the\\r\\n     * tree construction to get a canonical Huffman tree (longest code\\r\\n     * all ones)\\r\\n     */\\r\\n    zip_gen_codes(zip_static_ltree, zip_L_CODES + 1);\\r\\n\\r\\n    /* The static distance tree is trivial: */\\r\\n    for(n = 0; n < zip_D_CODES; n++) {\\r\\n\\tzip_static_dtree[n].dl = 5;\\r\\n\\tzip_static_dtree[n].fc = zip_bi_reverse(n, 5);\\r\\n    }\\r\\n\\r\\n    // Initialize the first block of the first file:\\r\\n    zip_init_block();\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Initialize a new block.\\r\\n */\\r\\nvar zip_init_block = function() {\\r\\n    var n; // iterates over tree elements\\r\\n\\r\\n    // Initialize the trees.\\r\\n    for(n = 0; n < zip_L_CODES;  n++) zip_dyn_ltree[n].fc = 0;\\r\\n    for(n = 0; n < zip_D_CODES;  n++) zip_dyn_dtree[n].fc = 0;\\r\\n    for(n = 0; n < zip_BL_CODES; n++) zip_bl_tree[n].fc = 0;\\r\\n\\r\\n    zip_dyn_ltree[zip_END_BLOCK].fc = 1;\\r\\n    zip_opt_len = zip_static_len = 0;\\r\\n    zip_last_lit = zip_last_dist = zip_last_flags = 0;\\r\\n    zip_flags = 0;\\r\\n    zip_flag_bit = 1;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Restore the heap property by moving down the tree starting at node k,\\r\\n * exchanging a node with the smallest of its two sons if necessary, stopping\\r\\n * when the heap property is re-established (each father smaller than its\\r\\n * two sons).\\r\\n */\\r\\nvar zip_pqdownheap = function(\\r\\n    tree,\\t// the tree to restore\\r\\n    k) {\\t// node to move down\\r\\n    var v = zip_heap[k];\\r\\n    var j = k << 1;\\t// left son of k\\r\\n\\r\\n    while(j <= zip_heap_len) {\\r\\n\\t// Set j to the smallest of the two sons:\\r\\n\\tif(j < zip_heap_len &&\\r\\n\\t   zip_SMALLER(tree, zip_heap[j + 1], zip_heap[j]))\\r\\n\\t    j++;\\r\\n\\r\\n\\t// Exit if v is smaller than both sons\\r\\n\\tif(zip_SMALLER(tree, v, zip_heap[j]))\\r\\n\\t    break;\\r\\n\\r\\n\\t// Exchange v with the smallest son\\r\\n\\tzip_heap[k] = zip_heap[j];\\r\\n\\tk = j;\\r\\n\\r\\n\\t// And continue down the tree, setting j to the left son of k\\r\\n\\tj <<= 1;\\r\\n    }\\r\\n    zip_heap[k] = v;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Compute the optimal bit lengths for a tree and update the total bit length\\r\\n * for the current block.\\r\\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\\r\\n *    above are the tree nodes sorted by increasing frequency.\\r\\n * OUT assertions: the field len is set to the optimal bit length, the\\r\\n *     array bl_count contains the frequencies for each bit length.\\r\\n *     The length opt_len is updated; static_len is also updated if stree is\\r\\n *     not null.\\r\\n */\\r\\nvar zip_gen_bitlen = function(desc) { // the tree descriptor\\r\\n    var tree\\t\\t= desc.dyn_tree;\\r\\n    var extra\\t\\t= desc.extra_bits;\\r\\n    var base\\t\\t= desc.extra_base;\\r\\n    var max_code\\t= desc.max_code;\\r\\n    var max_length\\t= desc.max_length;\\r\\n    var stree\\t\\t= desc.static_tree;\\r\\n    var h;\\t\\t// heap index\\r\\n    var n, m;\\t\\t// iterate over the tree elements\\r\\n    var bits;\\t\\t// bit length\\r\\n    var xbits;\\t\\t// extra bits\\r\\n    var f;\\t\\t// frequency\\r\\n    var overflow = 0;\\t// number of elements with bit length too large\\r\\n\\r\\n    for(bits = 0; bits <= zip_MAX_BITS; bits++)\\r\\n\\tzip_bl_count[bits] = 0;\\r\\n\\r\\n    /* In a first pass, compute the optimal bit lengths (which may\\r\\n     * overflow in the case of the bit length tree).\\r\\n     */\\r\\n    tree[zip_heap[zip_heap_max]].dl = 0; // root of the heap\\r\\n\\r\\n    for(h = zip_heap_max + 1; h < zip_HEAP_SIZE; h++) {\\r\\n\\tn = zip_heap[h];\\r\\n\\tbits = tree[tree[n].dl].dl + 1;\\r\\n\\tif(bits > max_length) {\\r\\n\\t    bits = max_length;\\r\\n\\t    overflow++;\\r\\n\\t}\\r\\n\\ttree[n].dl = bits;\\r\\n\\t// We overwrite tree[n].dl which is no longer needed\\r\\n\\r\\n\\tif(n > max_code)\\r\\n\\t    continue; // not a leaf node\\r\\n\\r\\n\\tzip_bl_count[bits]++;\\r\\n\\txbits = 0;\\r\\n\\tif(n >= base)\\r\\n\\t    xbits = extra[n - base];\\r\\n\\tf = tree[n].fc;\\r\\n\\tzip_opt_len += f * (bits + xbits);\\r\\n\\tif(stree != null)\\r\\n\\t    zip_static_len += f * (stree[n].dl + xbits);\\r\\n    }\\r\\n    if(overflow == 0)\\r\\n\\treturn;\\r\\n\\r\\n    // This happens for example on obj2 and pic of the Calgary corpus\\r\\n\\r\\n    // Find the first bit length which could increase:\\r\\n    do {\\r\\n\\tbits = max_length - 1;\\r\\n\\twhile(zip_bl_count[bits] == 0)\\r\\n\\t    bits--;\\r\\n\\tzip_bl_count[bits]--;\\t\\t// move one leaf down the tree\\r\\n\\tzip_bl_count[bits + 1] += 2;\\t// move one overflow item as its brother\\r\\n\\tzip_bl_count[max_length]--;\\r\\n\\t/* The brother of the overflow item also moves one step up,\\r\\n\\t * but this does not affect bl_count[max_length]\\r\\n\\t */\\r\\n\\toverflow -= 2;\\r\\n    } while(overflow > 0);\\r\\n\\r\\n    /* Now recompute all bit lengths, scanning in increasing frequency.\\r\\n     * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\\r\\n     * lengths instead of fixing only the wrong ones. This idea is taken\\r\\n     * from 'ar' written by Haruhiko Okumura.)\\r\\n     */\\r\\n    for(bits = max_length; bits != 0; bits--) {\\r\\n\\tn = zip_bl_count[bits];\\r\\n\\twhile(n != 0) {\\r\\n\\t    m = zip_heap[--h];\\r\\n\\t    if(m > max_code)\\r\\n\\t\\tcontinue;\\r\\n\\t    if(tree[m].dl != bits) {\\r\\n\\t\\tzip_opt_len += (bits - tree[m].dl) * tree[m].fc;\\r\\n\\t\\ttree[m].fc = bits;\\r\\n\\t    }\\r\\n\\t    n--;\\r\\n\\t}\\r\\n    }\\r\\n}\\r\\n\\r\\n  /* ==========================================================================\\r\\n   * Generate the codes for a given tree and bit counts (which need not be\\r\\n   * optimal).\\r\\n   * IN assertion: the array bl_count contains the bit length statistics for\\r\\n   * the given tree and the field len is set for all tree elements.\\r\\n   * OUT assertion: the field code is set for all tree elements of non\\r\\n   *     zero code length.\\r\\n   */\\r\\nvar zip_gen_codes = function(tree,\\t// the tree to decorate\\r\\n\\t\\t   max_code) {\\t// largest code with non zero frequency\\r\\n    var next_code = new Array(zip_MAX_BITS+1); // next code value for each bit length\\r\\n    var code = 0;\\t\\t// running code value\\r\\n    var bits;\\t\\t\\t// bit index\\r\\n    var n;\\t\\t\\t// code index\\r\\n\\r\\n    /* The distribution counts are first used to generate the code values\\r\\n     * without bit reversal.\\r\\n     */\\r\\n    for(bits = 1; bits <= zip_MAX_BITS; bits++) {\\r\\n\\tcode = ((code + zip_bl_count[bits-1]) << 1);\\r\\n\\tnext_code[bits] = code;\\r\\n    }\\r\\n\\r\\n    /* Check that the bit counts in bl_count are consistent. The last code\\r\\n     * must be all ones.\\r\\n     */\\r\\n//    Assert (code + encoder->bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\\r\\n//\\t    \\\"inconsistent bit counts\\\");\\r\\n//    Tracev((stderr,\\\"\\\\ngen_codes: max_code %d \\\", max_code));\\r\\n\\r\\n    for(n = 0; n <= max_code; n++) {\\r\\n\\tvar len = tree[n].dl;\\r\\n\\tif(len == 0)\\r\\n\\t    continue;\\r\\n\\t// Now reverse the bits\\r\\n\\ttree[n].fc = zip_bi_reverse(next_code[len]++, len);\\r\\n\\r\\n//      Tracec(tree != static_ltree, (stderr,\\\"\\\\nn %3d %c l %2d c %4x (%x) \\\",\\r\\n//\\t  n, (isgraph(n) ? n : ' '), len, tree[n].fc, next_code[len]-1));\\r\\n    }\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Construct one Huffman tree and assigns the code bit strings and lengths.\\r\\n * Update the total bit length for the current block.\\r\\n * IN assertion: the field freq is set for all tree elements.\\r\\n * OUT assertions: the fields len and code are set to the optimal bit length\\r\\n *     and corresponding code. The length opt_len is updated; static_len is\\r\\n *     also updated if stree is not null. The field max_code is set.\\r\\n */\\r\\nvar zip_build_tree = function(desc) { // the tree descriptor\\r\\n    var tree\\t= desc.dyn_tree;\\r\\n    var stree\\t= desc.static_tree;\\r\\n    var elems\\t= desc.elems;\\r\\n    var n, m;\\t\\t// iterate over heap elements\\r\\n    var max_code = -1;\\t// largest code with non zero frequency\\r\\n    var node = elems;\\t// next internal node of the tree\\r\\n\\r\\n    /* Construct the initial heap, with least frequent element in\\r\\n     * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\\r\\n     * heap[0] is not used.\\r\\n     */\\r\\n    zip_heap_len = 0;\\r\\n    zip_heap_max = zip_HEAP_SIZE;\\r\\n\\r\\n    for(n = 0; n < elems; n++) {\\r\\n\\tif(tree[n].fc != 0) {\\r\\n\\t    zip_heap[++zip_heap_len] = max_code = n;\\r\\n\\t    zip_depth[n] = 0;\\r\\n\\t} else\\r\\n\\t    tree[n].dl = 0;\\r\\n    }\\r\\n\\r\\n    /* The pkzip format requires that at least one distance code exists,\\r\\n     * and that at least one bit should be sent even if there is only one\\r\\n     * possible code. So to avoid special checks later on we force at least\\r\\n     * two codes of non zero frequency.\\r\\n     */\\r\\n    while(zip_heap_len < 2) {\\r\\n\\tvar xnew = zip_heap[++zip_heap_len] = (max_code < 2 ? ++max_code : 0);\\r\\n\\ttree[xnew].fc = 1;\\r\\n\\tzip_depth[xnew] = 0;\\r\\n\\tzip_opt_len--;\\r\\n\\tif(stree != null)\\r\\n\\t    zip_static_len -= stree[xnew].dl;\\r\\n\\t// new is 0 or 1 so it does not have extra bits\\r\\n    }\\r\\n    desc.max_code = max_code;\\r\\n\\r\\n    /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\\r\\n     * establish sub-heaps of increasing lengths:\\r\\n     */\\r\\n    for(n = zip_heap_len >> 1; n >= 1; n--)\\r\\n\\tzip_pqdownheap(tree, n);\\r\\n\\r\\n    /* Construct the Huffman tree by repeatedly combining the least two\\r\\n     * frequent nodes.\\r\\n     */\\r\\n    do {\\r\\n\\tn = zip_heap[zip_SMALLEST];\\r\\n\\tzip_heap[zip_SMALLEST] = zip_heap[zip_heap_len--];\\r\\n\\tzip_pqdownheap(tree, zip_SMALLEST);\\r\\n\\r\\n\\tm = zip_heap[zip_SMALLEST];  // m = node of next least frequency\\r\\n\\r\\n\\t// keep the nodes sorted by frequency\\r\\n\\tzip_heap[--zip_heap_max] = n;\\r\\n\\tzip_heap[--zip_heap_max] = m;\\r\\n\\r\\n\\t// Create a new node father of n and m\\r\\n\\ttree[node].fc = tree[n].fc + tree[m].fc;\\r\\n//\\tdepth[node] = (char)(MAX(depth[n], depth[m]) + 1);\\r\\n\\tif(zip_depth[n] > zip_depth[m] + 1)\\r\\n\\t    zip_depth[node] = zip_depth[n];\\r\\n\\telse\\r\\n\\t    zip_depth[node] = zip_depth[m] + 1;\\r\\n\\ttree[n].dl = tree[m].dl = node;\\r\\n\\r\\n\\t// and insert the new node in the heap\\r\\n\\tzip_heap[zip_SMALLEST] = node++;\\r\\n\\tzip_pqdownheap(tree, zip_SMALLEST);\\r\\n\\r\\n    } while(zip_heap_len >= 2);\\r\\n\\r\\n    zip_heap[--zip_heap_max] = zip_heap[zip_SMALLEST];\\r\\n\\r\\n    /* At this point, the fields freq and dad are set. We can now\\r\\n     * generate the bit lengths.\\r\\n     */\\r\\n    zip_gen_bitlen(desc);\\r\\n\\r\\n    // The field len is now set, we can generate the bit codes\\r\\n    zip_gen_codes(tree, max_code);\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Scan a literal or distance tree to determine the frequencies of the codes\\r\\n * in the bit length tree. Updates opt_len to take into account the repeat\\r\\n * counts. (The contribution of the bit length codes will be added later\\r\\n * during the construction of bl_tree.)\\r\\n */\\r\\nvar zip_scan_tree = function(tree,// the tree to be scanned\\r\\n\\t\\t       max_code) {  // and its largest code of non zero frequency\\r\\n    var n;\\t\\t\\t// iterates over all tree elements\\r\\n    var prevlen = -1;\\t\\t// last emitted length\\r\\n    var curlen;\\t\\t\\t// length of current code\\r\\n    var nextlen = tree[0].dl;\\t// length of next code\\r\\n    var count = 0;\\t\\t// repeat count of the current code\\r\\n    var max_count = 7;\\t\\t// max repeat count\\r\\n    var min_count = 4;\\t\\t// min repeat count\\r\\n\\r\\n    if(nextlen == 0) {\\r\\n\\tmax_count = 138;\\r\\n\\tmin_count = 3;\\r\\n    }\\r\\n    tree[max_code + 1].dl = 0xffff; // guard\\r\\n\\r\\n    for(n = 0; n <= max_code; n++) {\\r\\n\\tcurlen = nextlen;\\r\\n\\tnextlen = tree[n + 1].dl;\\r\\n\\tif(++count < max_count && curlen == nextlen)\\r\\n\\t    continue;\\r\\n\\telse if(count < min_count)\\r\\n\\t    zip_bl_tree[curlen].fc += count;\\r\\n\\telse if(curlen != 0) {\\r\\n\\t    if(curlen != prevlen)\\r\\n\\t\\tzip_bl_tree[curlen].fc++;\\r\\n\\t    zip_bl_tree[zip_REP_3_6].fc++;\\r\\n\\t} else if(count <= 10)\\r\\n\\t    zip_bl_tree[zip_REPZ_3_10].fc++;\\r\\n\\telse\\r\\n\\t    zip_bl_tree[zip_REPZ_11_138].fc++;\\r\\n\\tcount = 0; prevlen = curlen;\\r\\n\\tif(nextlen == 0) {\\r\\n\\t    max_count = 138;\\r\\n\\t    min_count = 3;\\r\\n\\t} else if(curlen == nextlen) {\\r\\n\\t    max_count = 6;\\r\\n\\t    min_count = 3;\\r\\n\\t} else {\\r\\n\\t    max_count = 7;\\r\\n\\t    min_count = 4;\\r\\n\\t}\\r\\n    }\\r\\n}\\r\\n\\r\\n  /* ==========================================================================\\r\\n   * Send a literal or distance tree in compressed form, using the codes in\\r\\n   * bl_tree.\\r\\n   */\\r\\nvar zip_send_tree = function(tree, // the tree to be scanned\\r\\n\\t\\t   max_code) { // and its largest code of non zero frequency\\r\\n    var n;\\t\\t\\t// iterates over all tree elements\\r\\n    var prevlen = -1;\\t\\t// last emitted length\\r\\n    var curlen;\\t\\t\\t// length of current code\\r\\n    var nextlen = tree[0].dl;\\t// length of next code\\r\\n    var count = 0;\\t\\t// repeat count of the current code\\r\\n    var max_count = 7;\\t\\t// max repeat count\\r\\n    var min_count = 4;\\t\\t// min repeat count\\r\\n\\r\\n    /* tree[max_code+1].dl = -1; */  /* guard already set */\\r\\n    if(nextlen == 0) {\\r\\n      max_count = 138;\\r\\n      min_count = 3;\\r\\n    }\\r\\n\\r\\n    for(n = 0; n <= max_code; n++) {\\r\\n\\tcurlen = nextlen;\\r\\n\\tnextlen = tree[n+1].dl;\\r\\n\\tif(++count < max_count && curlen == nextlen) {\\r\\n\\t    continue;\\r\\n\\t} else if(count < min_count) {\\r\\n\\t    do { zip_SEND_CODE(curlen, zip_bl_tree); } while(--count != 0);\\r\\n\\t} else if(curlen != 0) {\\r\\n\\t    if(curlen != prevlen) {\\r\\n\\t\\tzip_SEND_CODE(curlen, zip_bl_tree);\\r\\n\\t\\tcount--;\\r\\n\\t    }\\r\\n\\t    // Assert(count >= 3 && count <= 6, \\\" 3_6?\\\");\\r\\n\\t    zip_SEND_CODE(zip_REP_3_6, zip_bl_tree);\\r\\n\\t    zip_send_bits(count - 3, 2);\\r\\n\\t} else if(count <= 10) {\\r\\n\\t    zip_SEND_CODE(zip_REPZ_3_10, zip_bl_tree);\\r\\n\\t    zip_send_bits(count-3, 3);\\r\\n\\t} else {\\r\\n\\t    zip_SEND_CODE(zip_REPZ_11_138, zip_bl_tree);\\r\\n\\t    zip_send_bits(count-11, 7);\\r\\n\\t}\\r\\n\\tcount = 0;\\r\\n\\tprevlen = curlen;\\r\\n\\tif(nextlen == 0) {\\r\\n\\t    max_count = 138;\\r\\n\\t    min_count = 3;\\r\\n\\t} else if(curlen == nextlen) {\\r\\n\\t    max_count = 6;\\r\\n\\t    min_count = 3;\\r\\n\\t} else {\\r\\n\\t    max_count = 7;\\r\\n\\t    min_count = 4;\\r\\n\\t}\\r\\n    }\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Construct the Huffman tree for the bit lengths and return the index in\\r\\n * bl_order of the last bit length code to send.\\r\\n */\\r\\nvar zip_build_bl_tree = function() {\\r\\n    var max_blindex;  // index of last bit length code of non zero freq\\r\\n\\r\\n    // Determine the bit length frequencies for literal and distance trees\\r\\n    zip_scan_tree(zip_dyn_ltree, zip_l_desc.max_code);\\r\\n    zip_scan_tree(zip_dyn_dtree, zip_d_desc.max_code);\\r\\n\\r\\n    // Build the bit length tree:\\r\\n    zip_build_tree(zip_bl_desc);\\r\\n    /* opt_len now includes the length of the tree representations, except\\r\\n     * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\\r\\n     */\\r\\n\\r\\n    /* Determine the number of bit length codes to send. The pkzip format\\r\\n     * requires that at least 4 bit length codes be sent. (appnote.txt says\\r\\n     * 3 but the actual value used is 4.)\\r\\n     */\\r\\n    for(max_blindex = zip_BL_CODES-1; max_blindex >= 3; max_blindex--) {\\r\\n\\tif(zip_bl_tree[zip_bl_order[max_blindex]].dl != 0) break;\\r\\n    }\\r\\n    /* Update opt_len to include the bit length tree and counts */\\r\\n    zip_opt_len += 3*(max_blindex+1) + 5+5+4;\\r\\n//    Tracev((stderr, \\\"\\\\ndyn trees: dyn %ld, stat %ld\\\",\\r\\n//\\t    encoder->opt_len, encoder->static_len));\\r\\n\\r\\n    return max_blindex;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Send the header for a block using dynamic Huffman trees: the counts, the\\r\\n * lengths of the bit length codes, the literal tree and the distance tree.\\r\\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\\r\\n */\\r\\nvar zip_send_all_trees = function(lcodes, dcodes, blcodes) { // number of codes for each tree\\r\\n    var rank; // index in bl_order\\r\\n\\r\\n//    Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \\\"not enough codes\\\");\\r\\n//    Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\\r\\n//\\t    \\\"too many codes\\\");\\r\\n//    Tracev((stderr, \\\"\\\\nbl counts: \\\"));\\r\\n    zip_send_bits(lcodes-257, 5); // not +255 as stated in appnote.txt\\r\\n    zip_send_bits(dcodes-1,   5);\\r\\n    zip_send_bits(blcodes-4,  4); // not -3 as stated in appnote.txt\\r\\n    for(rank = 0; rank < blcodes; rank++) {\\r\\n//      Tracev((stderr, \\\"\\\\nbl code %2d \\\", bl_order[rank]));\\r\\n\\tzip_send_bits(zip_bl_tree[zip_bl_order[rank]].dl, 3);\\r\\n    }\\r\\n\\r\\n    // send the literal tree\\r\\n    zip_send_tree(zip_dyn_ltree,lcodes-1);\\r\\n\\r\\n    // send the distance tree\\r\\n    zip_send_tree(zip_dyn_dtree,dcodes-1);\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Determine the best encoding for the current block: dynamic trees, static\\r\\n * trees or store, and output the encoded block to the zip file.\\r\\n */\\r\\nvar zip_flush_block = function(eof) { // true if this is the last block for a file\\r\\n    var opt_lenb, static_lenb; // opt_len and static_len in bytes\\r\\n    var max_blindex;\\t// index of last bit length code of non zero freq\\r\\n    var stored_len;\\t// length of input block\\r\\n\\r\\n    stored_len = zip_strstart - zip_block_start;\\r\\n    zip_flag_buf[zip_last_flags] = zip_flags; // Save the flags for the last 8 items\\r\\n\\r\\n    // Construct the literal and distance trees\\r\\n    zip_build_tree(zip_l_desc);\\r\\n//    Tracev((stderr, \\\"\\\\nlit data: dyn %ld, stat %ld\\\",\\r\\n//\\t    encoder->opt_len, encoder->static_len));\\r\\n\\r\\n    zip_build_tree(zip_d_desc);\\r\\n//    Tracev((stderr, \\\"\\\\ndist data: dyn %ld, stat %ld\\\",\\r\\n//\\t    encoder->opt_len, encoder->static_len));\\r\\n    /* At this point, opt_len and static_len are the total bit lengths of\\r\\n     * the compressed block data, excluding the tree representations.\\r\\n     */\\r\\n\\r\\n    /* Build the bit length tree for the above two trees, and get the index\\r\\n     * in bl_order of the last bit length code to send.\\r\\n     */\\r\\n    max_blindex = zip_build_bl_tree();\\r\\n\\r\\n    // Determine the best encoding. Compute first the block length in bytes\\r\\n    opt_lenb\\t= (zip_opt_len   +3+7)>>3;\\r\\n    static_lenb = (zip_static_len+3+7)>>3;\\r\\n\\r\\n//    Trace((stderr, \\\"\\\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u dist %u \\\",\\r\\n//\\t   opt_lenb, encoder->opt_len,\\r\\n//\\t   static_lenb, encoder->static_len, stored_len,\\r\\n//\\t   encoder->last_lit, encoder->last_dist));\\r\\n\\r\\n    if(static_lenb <= opt_lenb)\\r\\n\\topt_lenb = static_lenb;\\r\\n    if(stored_len + 4 <= opt_lenb // 4: two words for the lengths\\r\\n       && zip_block_start >= 0) {\\r\\n\\tvar i;\\r\\n\\r\\n\\t/* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\\r\\n\\t * Otherwise we can't have processed more than WSIZE input bytes since\\r\\n\\t * the last block flush, because compression would have been\\r\\n\\t * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\\r\\n\\t * transform a block into a stored block.\\r\\n\\t */\\r\\n\\tzip_send_bits((zip_STORED_BLOCK<<1)+eof, 3);  /* send block type */\\r\\n\\tzip_bi_windup();\\t\\t /* align on byte boundary */\\r\\n\\tzip_put_short(stored_len);\\r\\n\\tzip_put_short(~stored_len);\\r\\n\\r\\n      // copy block\\r\\n/*\\r\\n      p = &window[block_start];\\r\\n      for(i = 0; i < stored_len; i++)\\r\\n\\tput_byte(p[i]);\\r\\n*/\\r\\n\\tfor(i = 0; i < stored_len; i++)\\r\\n\\t    zip_put_byte(zip_window[zip_block_start + i]);\\r\\n\\r\\n    } else if(static_lenb == opt_lenb) {\\r\\n\\tzip_send_bits((zip_STATIC_TREES<<1)+eof, 3);\\r\\n\\tzip_compress_block(zip_static_ltree, zip_static_dtree);\\r\\n    } else {\\r\\n\\tzip_send_bits((zip_DYN_TREES<<1)+eof, 3);\\r\\n\\tzip_send_all_trees(zip_l_desc.max_code+1,\\r\\n\\t\\t\\t   zip_d_desc.max_code+1,\\r\\n\\t\\t\\t   max_blindex+1);\\r\\n\\tzip_compress_block(zip_dyn_ltree, zip_dyn_dtree);\\r\\n    }\\r\\n\\r\\n    zip_init_block();\\r\\n\\r\\n    if(eof != 0)\\r\\n\\tzip_bi_windup();\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Save the match info and tally the frequency counts. Return true if\\r\\n * the current block must be flushed.\\r\\n */\\r\\nvar zip_ct_tally = function(\\r\\n\\tdist, // distance of matched string\\r\\n\\tlc) { // match length-MIN_MATCH or unmatched char (if dist==0)\\r\\n    zip_l_buf[zip_last_lit++] = lc;\\r\\n    if(dist == 0) {\\r\\n\\t// lc is the unmatched char\\r\\n\\tzip_dyn_ltree[lc].fc++;\\r\\n    } else {\\r\\n\\t// Here, lc is the match length - MIN_MATCH\\r\\n\\tdist--;\\t\\t    // dist = match distance - 1\\r\\n//      Assert((ush)dist < (ush)MAX_DIST &&\\r\\n//\\t     (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\\r\\n//\\t     (ush)D_CODE(dist) < (ush)D_CODES,  \\\"ct_tally: bad match\\\");\\r\\n\\r\\n\\tzip_dyn_ltree[zip_length_code[lc]+zip_LITERALS+1].fc++;\\r\\n\\tzip_dyn_dtree[zip_D_CODE(dist)].fc++;\\r\\n\\r\\n\\tzip_d_buf[zip_last_dist++] = dist;\\r\\n\\tzip_flags |= zip_flag_bit;\\r\\n    }\\r\\n    zip_flag_bit <<= 1;\\r\\n\\r\\n    // Output the flags if they fill a byte\\r\\n    if((zip_last_lit & 7) == 0) {\\r\\n\\tzip_flag_buf[zip_last_flags++] = zip_flags;\\r\\n\\tzip_flags = 0;\\r\\n\\tzip_flag_bit = 1;\\r\\n    }\\r\\n    // Try to guess if it is profitable to stop the current block here\\r\\n    if(zip_compr_level > 2 && (zip_last_lit & 0xfff) == 0) {\\r\\n\\t// Compute an upper bound for the compressed length\\r\\n\\tvar out_length = zip_last_lit * 8;\\r\\n\\tvar in_length = zip_strstart - zip_block_start;\\r\\n\\tvar dcode;\\r\\n\\r\\n\\tfor(dcode = 0; dcode < zip_D_CODES; dcode++) {\\r\\n\\t    out_length += zip_dyn_dtree[dcode].fc * (5 + zip_extra_dbits[dcode]);\\r\\n\\t}\\r\\n\\tout_length >>= 3;\\r\\n//      Trace((stderr,\\\"\\\\nlast_lit %u, last_dist %u, in %ld, out ~%ld(%ld%%) \\\",\\r\\n//\\t     encoder->last_lit, encoder->last_dist, in_length, out_length,\\r\\n//\\t     100L - out_length*100L/in_length));\\r\\n\\tif(zip_last_dist < parseInt(zip_last_lit/2) &&\\r\\n\\t   out_length < parseInt(in_length/2))\\r\\n\\t    return true;\\r\\n    }\\r\\n    return (zip_last_lit == zip_LIT_BUFSIZE-1 ||\\r\\n\\t    zip_last_dist == zip_DIST_BUFSIZE);\\r\\n    /* We avoid equality with LIT_BUFSIZE because of wraparound at 64K\\r\\n     * on 16 bit machines and because stored blocks are restricted to\\r\\n     * 64K-1 bytes.\\r\\n     */\\r\\n}\\r\\n\\r\\n  /* ==========================================================================\\r\\n   * Send the block data compressed using the given Huffman trees\\r\\n   */\\r\\nvar zip_compress_block = function(\\r\\n\\tltree,\\t// literal tree\\r\\n\\tdtree) {\\t// distance tree\\r\\n    var dist;\\t\\t// distance of matched string\\r\\n    var lc;\\t\\t// match length or unmatched char (if dist == 0)\\r\\n    var lx = 0;\\t\\t// running index in l_buf\\r\\n    var dx = 0;\\t\\t// running index in d_buf\\r\\n    var fx = 0;\\t\\t// running index in flag_buf\\r\\n    var flag = 0;\\t// current flags\\r\\n    var code;\\t\\t// the code to send\\r\\n    var extra;\\t\\t// number of extra bits to send\\r\\n\\r\\n    if(zip_last_lit != 0) do {\\r\\n\\tif((lx & 7) == 0)\\r\\n\\t    flag = zip_flag_buf[fx++];\\r\\n\\tlc = zip_l_buf[lx++] & 0xff;\\r\\n\\tif((flag & 1) == 0) {\\r\\n\\t    zip_SEND_CODE(lc, ltree); /* send a literal byte */\\r\\n//\\tTracecv(isgraph(lc), (stderr,\\\" '%c' \\\", lc));\\r\\n\\t} else {\\r\\n\\t    // Here, lc is the match length - MIN_MATCH\\r\\n\\t    code = zip_length_code[lc];\\r\\n\\t    zip_SEND_CODE(code+zip_LITERALS+1, ltree); // send the length code\\r\\n\\t    extra = zip_extra_lbits[code];\\r\\n\\t    if(extra != 0) {\\r\\n\\t\\tlc -= zip_base_length[code];\\r\\n\\t\\tzip_send_bits(lc, extra); // send the extra length bits\\r\\n\\t    }\\r\\n\\t    dist = zip_d_buf[dx++];\\r\\n\\t    // Here, dist is the match distance - 1\\r\\n\\t    code = zip_D_CODE(dist);\\r\\n//\\tAssert (code < D_CODES, \\\"bad d_code\\\");\\r\\n\\r\\n\\t    zip_SEND_CODE(code, dtree);\\t  // send the distance code\\r\\n\\t    extra = zip_extra_dbits[code];\\r\\n\\t    if(extra != 0) {\\r\\n\\t\\tdist -= zip_base_dist[code];\\r\\n\\t\\tzip_send_bits(dist, extra);   // send the extra distance bits\\r\\n\\t    }\\r\\n\\t} // literal or match pair ?\\r\\n\\tflag >>= 1;\\r\\n    } while(lx < zip_last_lit);\\r\\n\\r\\n    zip_SEND_CODE(zip_END_BLOCK, ltree);\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Send a value on a given number of bits.\\r\\n * IN assertion: length <= 16 and value fits in length bits.\\r\\n */\\r\\nvar zip_Buf_size = 16; // bit size of bi_buf\\r\\nvar zip_send_bits = function(\\r\\n\\tvalue,\\t// value to send\\r\\n\\tlength) {\\t// number of bits\\r\\n    /* If not enough room in bi_buf, use (valid) bits from bi_buf and\\r\\n     * (16 - bi_valid) bits from value, leaving (width - (16-bi_valid))\\r\\n     * unused bits in value.\\r\\n     */\\r\\n    if(zip_bi_valid > zip_Buf_size - length) {\\r\\n\\tzip_bi_buf |= (value << zip_bi_valid);\\r\\n\\tzip_put_short(zip_bi_buf);\\r\\n\\tzip_bi_buf = (value >> (zip_Buf_size - zip_bi_valid));\\r\\n\\tzip_bi_valid += length - zip_Buf_size;\\r\\n    } else {\\r\\n\\tzip_bi_buf |= value << zip_bi_valid;\\r\\n\\tzip_bi_valid += length;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Reverse the first len bits of a code, using straightforward code (a faster\\r\\n * method would use a table)\\r\\n * IN assertion: 1 <= len <= 15\\r\\n */\\r\\nvar zip_bi_reverse = function(\\r\\n\\tcode,\\t// the value to invert\\r\\n\\tlen) {\\t// its bit length\\r\\n    var res = 0;\\r\\n    do {\\r\\n\\tres |= code & 1;\\r\\n\\tcode >>= 1;\\r\\n\\tres <<= 1;\\r\\n    } while(--len > 0);\\r\\n    return res >> 1;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\n * Write out any remaining bits in an incomplete byte.\\r\\n */\\r\\nvar zip_bi_windup = function() {\\r\\n    if(zip_bi_valid > 8) {\\r\\n\\tzip_put_short(zip_bi_buf);\\r\\n    } else if(zip_bi_valid > 0) {\\r\\n\\tzip_put_byte(zip_bi_buf);\\r\\n    }\\r\\n    zip_bi_buf = 0;\\r\\n    zip_bi_valid = 0;\\r\\n}\\r\\n\\r\\nvar zip_qoutbuf = function() {\\r\\n    if(zip_outcnt != 0) {\\r\\n\\tvar q, i;\\r\\n\\tq = zip_new_queue();\\r\\n\\tif(zip_qhead == null)\\r\\n\\t    zip_qhead = zip_qtail = q;\\r\\n\\telse\\r\\n\\t    zip_qtail = zip_qtail.next = q;\\r\\n\\tq.len = zip_outcnt - zip_outoff;\\r\\n//      System.arraycopy(zip_outbuf, zip_outoff, q.ptr, 0, q.len);\\r\\n\\tfor(i = 0; i < q.len; i++)\\r\\n\\t    q.ptr[i] = zip_outbuf[zip_outoff + i];\\r\\n\\tzip_outcnt = zip_outoff = 0;\\r\\n    }\\r\\n}\\r\\n\\r\\nvar zip_deflate = function(str, level) {\\r\\n    var i, j;\\r\\n\\r\\n    zip_deflate_data = str;\\r\\n    zip_deflate_pos = 0;\\r\\n    if(typeof level == \\\"undefined\\\")\\r\\n\\tlevel = zip_DEFAULT_LEVEL;\\r\\n    zip_deflate_start(level);\\r\\n\\r\\n    var buff = new Array(1024);\\r\\n    var aout = [];\\r\\n    while((i = zip_deflate_internal(buff, 0, buff.length)) > 0) {\\r\\n\\tvar cbuf = new Array(i);\\r\\n\\tfor(j = 0; j < i; j++){\\r\\n\\t    cbuf[j] = String.fromCharCode(buff[j]);\\r\\n\\t}\\r\\n\\taout[aout.length] = cbuf.join(\\\"\\\");\\r\\n    }\\r\\n    zip_deflate_data = null; // G.C.\\r\\n    return aout.join(\\\"\\\");\\r\\n}\\r\\n\\r\\nif (! ctx.RawDeflate) ctx.RawDeflate = {};\\r\\nctx.RawDeflate.deflate = zip_deflate;\\r\\n\\r\\n})(this);\\r\\n\""
		},
		{
			"name": "rawinflate.js",
			"source": "\"/*\\r\\n * $Id: rawinflate.js,v 0.3 2013/04/09 14:25:38 dankogai Exp dankogai $\\r\\n *\\r\\n * GNU General Public License, version 2 (GPL-2.0)\\r\\n *   http://opensource.org/licenses/GPL-2.0\\r\\n * original:\\r\\n *   http://www.onicos.com/staff/iz/amuse/javascript/expert/inflate.txt\\r\\n */\\r\\n\\r\\n(function(ctx){\\r\\n\\r\\n/* Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\\r\\n * Version: 1.0.0.1\\r\\n * LastModified: Dec 25 1999\\r\\n */\\r\\n\\r\\n/* Interface:\\r\\n * data = zip_inflate(src);\\r\\n */\\r\\n\\r\\n/* constant parameters */\\r\\nvar zip_WSIZE = 32768;\\t\\t// Sliding Window size\\r\\nvar zip_STORED_BLOCK = 0;\\r\\nvar zip_STATIC_TREES = 1;\\r\\nvar zip_DYN_TREES    = 2;\\r\\n\\r\\n/* for inflate */\\r\\nvar zip_lbits = 9; \\t\\t// bits in base literal/length lookup table\\r\\nvar zip_dbits = 6; \\t\\t// bits in base distance lookup table\\r\\nvar zip_INBUFSIZ = 32768;\\t// Input buffer size\\r\\nvar zip_INBUF_EXTRA = 64;\\t// Extra buffer\\r\\n\\r\\n/* variables (inflate) */\\r\\nvar zip_slide;\\r\\nvar zip_wp;\\t\\t\\t// current position in slide\\r\\nvar zip_fixed_tl = null;\\t// inflate static\\r\\nvar zip_fixed_td;\\t\\t// inflate static\\r\\nvar zip_fixed_bl, zip_fixed_bd;\\t// inflate static\\r\\nvar zip_bit_buf;\\t\\t// bit buffer\\r\\nvar zip_bit_len;\\t\\t// bits in bit buffer\\r\\nvar zip_method;\\r\\nvar zip_eof;\\r\\nvar zip_copy_leng;\\r\\nvar zip_copy_dist;\\r\\nvar zip_tl, zip_td;\\t// literal/length and distance decoder tables\\r\\nvar zip_bl, zip_bd;\\t// number of bits decoded by tl and td\\r\\n\\r\\nvar zip_inflate_data;\\r\\nvar zip_inflate_pos;\\r\\n\\r\\n\\r\\n/* constant tables (inflate) */\\r\\nvar zip_MASK_BITS = new Array(\\r\\n    0x0000,\\r\\n    0x0001, 0x0003, 0x0007, 0x000f, 0x001f, 0x003f, 0x007f, 0x00ff,\\r\\n    0x01ff, 0x03ff, 0x07ff, 0x0fff, 0x1fff, 0x3fff, 0x7fff, 0xffff);\\r\\n// Tables for deflate from PKZIP's appnote.txt.\\r\\nvar zip_cplens = new Array( // Copy lengths for literal codes 257..285\\r\\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\\r\\n    35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0);\\r\\n/* note: see note #13 above about the 258 in this list. */\\r\\nvar zip_cplext = new Array( // Extra bits for literal codes 257..285\\r\\n    0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2,\\r\\n    3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 99, 99); // 99==invalid\\r\\nvar zip_cpdist = new Array( // Copy offsets for distance codes 0..29\\r\\n    1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\\r\\n    257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\\r\\n    8193, 12289, 16385, 24577);\\r\\nvar zip_cpdext = new Array( // Extra bits for distance codes\\r\\n    0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,\\r\\n    7, 7, 8, 8, 9, 9, 10, 10, 11, 11,\\r\\n    12, 12, 13, 13);\\r\\nvar zip_border = new Array(  // Order of the bit length code lengths\\r\\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15);\\r\\n/* objects (inflate) */\\r\\n\\r\\nvar zip_HuftList = function() {\\r\\n    this.next = null;\\r\\n    this.list = null;\\r\\n}\\r\\n\\r\\nvar zip_HuftNode = function() {\\r\\n    this.e = 0; // number of extra bits or operation\\r\\n    this.b = 0; // number of bits in this code or subcode\\r\\n\\r\\n    // union\\r\\n    this.n = 0; // literal, length base, or distance base\\r\\n    this.t = null; // (zip_HuftNode) pointer to next level of table\\r\\n}\\r\\n\\r\\nvar zip_HuftBuild = function(b,\\t// code lengths in bits (all assumed <= BMAX)\\r\\n\\t\\t       n,\\t// number of codes (assumed <= N_MAX)\\r\\n\\t\\t       s,\\t// number of simple-valued codes (0..s-1)\\r\\n\\t\\t       d,\\t// list of base values for non-simple codes\\r\\n\\t\\t       e,\\t// list of extra bits for non-simple codes\\r\\n\\t\\t       mm\\t// maximum lookup bits\\r\\n\\t\\t   ) {\\r\\n    this.BMAX = 16;   // maximum bit length of any code\\r\\n    this.N_MAX = 288; // maximum number of codes in any set\\r\\n    this.status = 0;\\t// 0: success, 1: incomplete table, 2: bad input\\r\\n    this.root = null;\\t// (zip_HuftList) starting table\\r\\n    this.m = 0;\\t\\t// maximum lookup bits, returns actual\\r\\n\\r\\n/* Given a list of code lengths and a maximum table size, make a set of\\r\\n   tables to decode that set of codes.\\tReturn zero on success, one if\\r\\n   the given code set is incomplete (the tables are still built in this\\r\\n   case), two if the input is invalid (all zero length codes or an\\r\\n   oversubscribed set of lengths), and three if not enough memory.\\r\\n   The code with value 256 is special, and the tables are constructed\\r\\n   so that no bits beyond that code are fetched when that code is\\r\\n   decoded. */\\r\\n    {\\r\\n\\tvar a;\\t\\t\\t// counter for codes of length k\\r\\n\\tvar c = new Array(this.BMAX+1);\\t// bit length count table\\r\\n\\tvar el;\\t\\t\\t// length of EOB code (value 256)\\r\\n\\tvar f;\\t\\t\\t// i repeats in table every f entries\\r\\n\\tvar g;\\t\\t\\t// maximum code length\\r\\n\\tvar h;\\t\\t\\t// table level\\r\\n\\tvar i;\\t\\t\\t// counter, current code\\r\\n\\tvar j;\\t\\t\\t// counter\\r\\n\\tvar k;\\t\\t\\t// number of bits in current code\\r\\n\\tvar lx = new Array(this.BMAX+1);\\t// stack of bits per table\\r\\n\\tvar p;\\t\\t\\t// pointer into c[], b[], or v[]\\r\\n\\tvar pidx;\\t\\t// index of p\\r\\n\\tvar q;\\t\\t\\t// (zip_HuftNode) points to current table\\r\\n\\tvar r = new zip_HuftNode(); // table entry for structure assignment\\r\\n\\tvar u = new Array(this.BMAX); // zip_HuftNode[BMAX][]  table stack\\r\\n\\tvar v = new Array(this.N_MAX); // values in order of bit length\\r\\n\\tvar w;\\r\\n\\tvar x = new Array(this.BMAX+1);// bit offsets, then code stack\\r\\n\\tvar xp;\\t\\t\\t// pointer into x or c\\r\\n\\tvar y;\\t\\t\\t// number of dummy codes added\\r\\n\\tvar z;\\t\\t\\t// number of entries in current table\\r\\n\\tvar o;\\r\\n\\tvar tail;\\t\\t// (zip_HuftList)\\r\\n\\r\\n\\ttail = this.root = null;\\r\\n\\tfor(i = 0; i < c.length; i++)\\r\\n\\t    c[i] = 0;\\r\\n\\tfor(i = 0; i < lx.length; i++)\\r\\n\\t    lx[i] = 0;\\r\\n\\tfor(i = 0; i < u.length; i++)\\r\\n\\t    u[i] = null;\\r\\n\\tfor(i = 0; i < v.length; i++)\\r\\n\\t    v[i] = 0;\\r\\n\\tfor(i = 0; i < x.length; i++)\\r\\n\\t    x[i] = 0;\\r\\n\\r\\n\\t// Generate counts for each bit length\\r\\n\\tel = n > 256 ? b[256] : this.BMAX; // set length of EOB code, if any\\r\\n\\tp = b; pidx = 0;\\r\\n\\ti = n;\\r\\n\\tdo {\\r\\n\\t    c[p[pidx]]++;\\t// assume all entries <= BMAX\\r\\n\\t    pidx++;\\r\\n\\t} while(--i > 0);\\r\\n\\tif(c[0] == n) {\\t// null input--all zero length codes\\r\\n\\t    this.root = null;\\r\\n\\t    this.m = 0;\\r\\n\\t    this.status = 0;\\r\\n\\t    return;\\r\\n\\t}\\r\\n\\r\\n\\t// Find minimum and maximum length, bound *m by those\\r\\n\\tfor(j = 1; j <= this.BMAX; j++)\\r\\n\\t    if(c[j] != 0)\\r\\n\\t\\tbreak;\\r\\n\\tk = j;\\t\\t\\t// minimum code length\\r\\n\\tif(mm < j)\\r\\n\\t    mm = j;\\r\\n\\tfor(i = this.BMAX; i != 0; i--)\\r\\n\\t    if(c[i] != 0)\\r\\n\\t\\tbreak;\\r\\n\\tg = i;\\t\\t\\t// maximum code length\\r\\n\\tif(mm > i)\\r\\n\\t    mm = i;\\r\\n\\r\\n\\t// Adjust last length count to fill out codes, if needed\\r\\n\\tfor(y = 1 << j; j < i; j++, y <<= 1)\\r\\n\\t    if((y -= c[j]) < 0) {\\r\\n\\t\\tthis.status = 2;\\t// bad input: more codes than bits\\r\\n\\t\\tthis.m = mm;\\r\\n\\t\\treturn;\\r\\n\\t    }\\r\\n\\tif((y -= c[i]) < 0) {\\r\\n\\t    this.status = 2;\\r\\n\\t    this.m = mm;\\r\\n\\t    return;\\r\\n\\t}\\r\\n\\tc[i] += y;\\r\\n\\r\\n\\t// Generate starting offsets into the value table for each length\\r\\n\\tx[1] = j = 0;\\r\\n\\tp = c;\\r\\n\\tpidx = 1;\\r\\n\\txp = 2;\\r\\n\\twhile(--i > 0)\\t\\t// note that i == g from above\\r\\n\\t    x[xp++] = (j += p[pidx++]);\\r\\n\\r\\n\\t// Make a table of values in order of bit lengths\\r\\n\\tp = b; pidx = 0;\\r\\n\\ti = 0;\\r\\n\\tdo {\\r\\n\\t    if((j = p[pidx++]) != 0)\\r\\n\\t\\tv[x[j]++] = i;\\r\\n\\t} while(++i < n);\\r\\n\\tn = x[g];\\t\\t\\t// set n to length of v\\r\\n\\r\\n\\t// Generate the Huffman codes and for each, make the table entries\\r\\n\\tx[0] = i = 0;\\t\\t// first Huffman code is zero\\r\\n\\tp = v; pidx = 0;\\t\\t// grab values in bit order\\r\\n\\th = -1;\\t\\t\\t// no tables yet--level -1\\r\\n\\tw = lx[0] = 0;\\t\\t// no bits decoded yet\\r\\n\\tq = null;\\t\\t\\t// ditto\\r\\n\\tz = 0;\\t\\t\\t// ditto\\r\\n\\r\\n\\t// go through the bit lengths (k already is bits in shortest code)\\r\\n\\tfor(; k <= g; k++) {\\r\\n\\t    a = c[k];\\r\\n\\t    while(a-- > 0) {\\r\\n\\t\\t// here i is the Huffman code of length k bits for value p[pidx]\\r\\n\\t\\t// make tables up to required level\\r\\n\\t\\twhile(k > w + lx[1 + h]) {\\r\\n\\t\\t    w += lx[1 + h]; // add bits already decoded\\r\\n\\t\\t    h++;\\r\\n\\r\\n\\t\\t    // compute minimum size table less than or equal to *m bits\\r\\n\\t\\t    z = (z = g - w) > mm ? mm : z; // upper limit\\r\\n\\t\\t    if((f = 1 << (j = k - w)) > a + 1) { // try a k-w bit table\\r\\n\\t\\t\\t// too few codes for k-w bit table\\r\\n\\t\\t\\tf -= a + 1;\\t// deduct codes from patterns left\\r\\n\\t\\t\\txp = k;\\r\\n\\t\\t\\twhile(++j < z) { // try smaller tables up to z bits\\r\\n\\t\\t\\t    if((f <<= 1) <= c[++xp])\\r\\n\\t\\t\\t\\tbreak;\\t// enough codes to use up j bits\\r\\n\\t\\t\\t    f -= c[xp];\\t// else deduct codes from patterns\\r\\n\\t\\t\\t}\\r\\n\\t\\t    }\\r\\n\\t\\t    if(w + j > el && w < el)\\r\\n\\t\\t\\tj = el - w;\\t// make EOB code end at table\\r\\n\\t\\t    z = 1 << j;\\t// table entries for j-bit table\\r\\n\\t\\t    lx[1 + h] = j; // set table size in stack\\r\\n\\r\\n\\t\\t    // allocate and link in new table\\r\\n\\t\\t    q = new Array(z);\\r\\n\\t\\t    for(o = 0; o < z; o++) {\\r\\n\\t\\t\\tq[o] = new zip_HuftNode();\\r\\n\\t\\t    }\\r\\n\\r\\n\\t\\t    if(tail == null)\\r\\n\\t\\t\\ttail = this.root = new zip_HuftList();\\r\\n\\t\\t    else\\r\\n\\t\\t\\ttail = tail.next = new zip_HuftList();\\r\\n\\t\\t    tail.next = null;\\r\\n\\t\\t    tail.list = q;\\r\\n\\t\\t    u[h] = q;\\t// table starts after link\\r\\n\\r\\n\\t\\t    /* connect to last table, if there is one */\\r\\n\\t\\t    if(h > 0) {\\r\\n\\t\\t\\tx[h] = i;\\t\\t// save pattern for backing up\\r\\n\\t\\t\\tr.b = lx[h];\\t// bits to dump before this table\\r\\n\\t\\t\\tr.e = 16 + j;\\t// bits in this table\\r\\n\\t\\t\\tr.t = q;\\t\\t// pointer to this table\\r\\n\\t\\t\\tj = (i & ((1 << w) - 1)) >> (w - lx[h]);\\r\\n\\t\\t\\tu[h-1][j].e = r.e;\\r\\n\\t\\t\\tu[h-1][j].b = r.b;\\r\\n\\t\\t\\tu[h-1][j].n = r.n;\\r\\n\\t\\t\\tu[h-1][j].t = r.t;\\r\\n\\t\\t    }\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// set up table entry in r\\r\\n\\t\\tr.b = k - w;\\r\\n\\t\\tif(pidx >= n)\\r\\n\\t\\t    r.e = 99;\\t\\t// out of values--invalid code\\r\\n\\t\\telse if(p[pidx] < s) {\\r\\n\\t\\t    r.e = (p[pidx] < 256 ? 16 : 15); // 256 is end-of-block code\\r\\n\\t\\t    r.n = p[pidx++];\\t// simple code is just the value\\r\\n\\t\\t} else {\\r\\n\\t\\t    r.e = e[p[pidx] - s];\\t// non-simple--look up in lists\\r\\n\\t\\t    r.n = d[p[pidx++] - s];\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// fill code-like entries with r //\\r\\n\\t\\tf = 1 << (k - w);\\r\\n\\t\\tfor(j = i >> w; j < z; j += f) {\\r\\n\\t\\t    q[j].e = r.e;\\r\\n\\t\\t    q[j].b = r.b;\\r\\n\\t\\t    q[j].n = r.n;\\r\\n\\t\\t    q[j].t = r.t;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// backwards increment the k-bit code i\\r\\n\\t\\tfor(j = 1 << (k - 1); (i & j) != 0; j >>= 1)\\r\\n\\t\\t    i ^= j;\\r\\n\\t\\ti ^= j;\\r\\n\\r\\n\\t\\t// backup over finished tables\\r\\n\\t\\twhile((i & ((1 << w) - 1)) != x[h]) {\\r\\n\\t\\t    w -= lx[h];\\t\\t// don't need to update q\\r\\n\\t\\t    h--;\\r\\n\\t\\t}\\r\\n\\t    }\\r\\n\\t}\\r\\n\\r\\n\\t/* return actual size of base table */\\r\\n\\tthis.m = lx[1];\\r\\n\\r\\n\\t/* Return true (1) if we were given an incomplete table */\\r\\n\\tthis.status = ((y != 0 && g != 1) ? 1 : 0);\\r\\n    } /* end of constructor */\\r\\n}\\r\\n\\r\\n\\r\\n/* routines (inflate) */\\r\\n\\r\\nvar zip_GET_BYTE = function() {\\r\\n    if(zip_inflate_data.length == zip_inflate_pos)\\r\\n\\treturn -1;\\r\\n    return zip_inflate_data.charCodeAt(zip_inflate_pos++) & 0xff;\\r\\n}\\r\\n\\r\\nvar zip_NEEDBITS = function(n) {\\r\\n    while(zip_bit_len < n) {\\r\\n\\tzip_bit_buf |= zip_GET_BYTE() << zip_bit_len;\\r\\n\\tzip_bit_len += 8;\\r\\n    }\\r\\n}\\r\\n\\r\\nvar zip_GETBITS = function(n) {\\r\\n    return zip_bit_buf & zip_MASK_BITS[n];\\r\\n}\\r\\n\\r\\nvar zip_DUMPBITS = function(n) {\\r\\n    zip_bit_buf >>= n;\\r\\n    zip_bit_len -= n;\\r\\n}\\r\\n\\r\\nvar zip_inflate_codes = function(buff, off, size) {\\r\\n    /* inflate (decompress) the codes in a deflated (compressed) block.\\r\\n       Return an error code or zero if it all goes ok. */\\r\\n    var e;\\t\\t// table entry flag/number of extra bits\\r\\n    var t;\\t\\t// (zip_HuftNode) pointer to table entry\\r\\n    var n;\\r\\n\\r\\n    if(size == 0)\\r\\n      return 0;\\r\\n\\r\\n    // inflate the coded data\\r\\n    n = 0;\\r\\n    for(;;) {\\t\\t\\t// do until end of block\\r\\n\\tzip_NEEDBITS(zip_bl);\\r\\n\\tt = zip_tl.list[zip_GETBITS(zip_bl)];\\r\\n\\te = t.e;\\r\\n\\twhile(e > 16) {\\r\\n\\t    if(e == 99)\\r\\n\\t\\treturn -1;\\r\\n\\t    zip_DUMPBITS(t.b);\\r\\n\\t    e -= 16;\\r\\n\\t    zip_NEEDBITS(e);\\r\\n\\t    t = t.t[zip_GETBITS(e)];\\r\\n\\t    e = t.e;\\r\\n\\t}\\r\\n\\tzip_DUMPBITS(t.b);\\r\\n\\r\\n\\tif(e == 16) {\\t\\t// then it's a literal\\r\\n\\t    zip_wp &= zip_WSIZE - 1;\\r\\n\\t    buff[off + n++] = zip_slide[zip_wp++] = t.n;\\r\\n\\t    if(n == size)\\r\\n\\t\\treturn size;\\r\\n\\t    continue;\\r\\n\\t}\\r\\n\\r\\n\\t// exit if end of block\\r\\n\\tif(e == 15)\\r\\n\\t    break;\\r\\n\\r\\n\\t// it's an EOB or a length\\r\\n\\r\\n\\t// get length of block to copy\\r\\n\\tzip_NEEDBITS(e);\\r\\n\\tzip_copy_leng = t.n + zip_GETBITS(e);\\r\\n\\tzip_DUMPBITS(e);\\r\\n\\r\\n\\t// decode distance of block to copy\\r\\n\\tzip_NEEDBITS(zip_bd);\\r\\n\\tt = zip_td.list[zip_GETBITS(zip_bd)];\\r\\n\\te = t.e;\\r\\n\\r\\n\\twhile(e > 16) {\\r\\n\\t    if(e == 99)\\r\\n\\t\\treturn -1;\\r\\n\\t    zip_DUMPBITS(t.b);\\r\\n\\t    e -= 16;\\r\\n\\t    zip_NEEDBITS(e);\\r\\n\\t    t = t.t[zip_GETBITS(e)];\\r\\n\\t    e = t.e;\\r\\n\\t}\\r\\n\\tzip_DUMPBITS(t.b);\\r\\n\\tzip_NEEDBITS(e);\\r\\n\\tzip_copy_dist = zip_wp - t.n - zip_GETBITS(e);\\r\\n\\tzip_DUMPBITS(e);\\r\\n\\r\\n\\t// do the copy\\r\\n\\twhile(zip_copy_leng > 0 && n < size) {\\r\\n\\t    zip_copy_leng--;\\r\\n\\t    zip_copy_dist &= zip_WSIZE - 1;\\r\\n\\t    zip_wp &= zip_WSIZE - 1;\\r\\n\\t    buff[off + n++] = zip_slide[zip_wp++]\\r\\n\\t\\t= zip_slide[zip_copy_dist++];\\r\\n\\t}\\r\\n\\r\\n\\tif(n == size)\\r\\n\\t    return size;\\r\\n    }\\r\\n\\r\\n    zip_method = -1; // done\\r\\n    return n;\\r\\n}\\r\\n\\r\\nvar zip_inflate_stored = function(buff, off, size) {\\r\\n    /* \\\"decompress\\\" an inflated type 0 (stored) block. */\\r\\n    var n;\\r\\n\\r\\n    // go to byte boundary\\r\\n    n = zip_bit_len & 7;\\r\\n    zip_DUMPBITS(n);\\r\\n\\r\\n    // get the length and its complement\\r\\n    zip_NEEDBITS(16);\\r\\n    n = zip_GETBITS(16);\\r\\n    zip_DUMPBITS(16);\\r\\n    zip_NEEDBITS(16);\\r\\n    if(n != ((~zip_bit_buf) & 0xffff))\\r\\n\\treturn -1;\\t\\t\\t// error in compressed data\\r\\n    zip_DUMPBITS(16);\\r\\n\\r\\n    // read and output the compressed data\\r\\n    zip_copy_leng = n;\\r\\n\\r\\n    n = 0;\\r\\n    while(zip_copy_leng > 0 && n < size) {\\r\\n\\tzip_copy_leng--;\\r\\n\\tzip_wp &= zip_WSIZE - 1;\\r\\n\\tzip_NEEDBITS(8);\\r\\n\\tbuff[off + n++] = zip_slide[zip_wp++] =\\r\\n\\t    zip_GETBITS(8);\\r\\n\\tzip_DUMPBITS(8);\\r\\n    }\\r\\n\\r\\n    if(zip_copy_leng == 0)\\r\\n      zip_method = -1; // done\\r\\n    return n;\\r\\n}\\r\\n\\r\\nvar zip_inflate_fixed = function(buff, off, size) {\\r\\n    /* decompress an inflated type 1 (fixed Huffman codes) block.  We should\\r\\n       either replace this with a custom decoder, or at least precompute the\\r\\n       Huffman tables. */\\r\\n\\r\\n    // if first time, set up tables for fixed blocks\\r\\n    if(zip_fixed_tl == null) {\\r\\n\\tvar i;\\t\\t\\t// temporary variable\\r\\n\\tvar l = new Array(288);\\t// length list for huft_build\\r\\n\\tvar h;\\t// zip_HuftBuild\\r\\n\\r\\n\\t// literal table\\r\\n\\tfor(i = 0; i < 144; i++)\\r\\n\\t    l[i] = 8;\\r\\n\\tfor(; i < 256; i++)\\r\\n\\t    l[i] = 9;\\r\\n\\tfor(; i < 280; i++)\\r\\n\\t    l[i] = 7;\\r\\n\\tfor(; i < 288; i++)\\t// make a complete, but wrong code set\\r\\n\\t    l[i] = 8;\\r\\n\\tzip_fixed_bl = 7;\\r\\n\\r\\n\\th = new zip_HuftBuild(l, 288, 257, zip_cplens, zip_cplext,\\r\\n\\t\\t\\t      zip_fixed_bl);\\r\\n\\tif(h.status != 0) {\\r\\n\\t    alert(\\\"HufBuild error: \\\"+h.status);\\r\\n\\t    return -1;\\r\\n\\t}\\r\\n\\tzip_fixed_tl = h.root;\\r\\n\\tzip_fixed_bl = h.m;\\r\\n\\r\\n\\t// distance table\\r\\n\\tfor(i = 0; i < 30; i++)\\t// make an incomplete code set\\r\\n\\t    l[i] = 5;\\r\\n\\tzip_fixed_bd = 5;\\r\\n\\r\\n\\th = new zip_HuftBuild(l, 30, 0, zip_cpdist, zip_cpdext, zip_fixed_bd);\\r\\n\\tif(h.status > 1) {\\r\\n\\t    zip_fixed_tl = null;\\r\\n\\t    alert(\\\"HufBuild error: \\\"+h.status);\\r\\n\\t    return -1;\\r\\n\\t}\\r\\n\\tzip_fixed_td = h.root;\\r\\n\\tzip_fixed_bd = h.m;\\r\\n    }\\r\\n\\r\\n    zip_tl = zip_fixed_tl;\\r\\n    zip_td = zip_fixed_td;\\r\\n    zip_bl = zip_fixed_bl;\\r\\n    zip_bd = zip_fixed_bd;\\r\\n    return zip_inflate_codes(buff, off, size);\\r\\n}\\r\\n\\r\\nvar zip_inflate_dynamic = function(buff, off, size) {\\r\\n    // decompress an inflated type 2 (dynamic Huffman codes) block.\\r\\n    var i;\\t\\t// temporary variables\\r\\n    var j;\\r\\n    var l;\\t\\t// last length\\r\\n    var n;\\t\\t// number of lengths to get\\r\\n    var t;\\t\\t// (zip_HuftNode) literal/length code table\\r\\n    var nb;\\t\\t// number of bit length codes\\r\\n    var nl;\\t\\t// number of literal/length codes\\r\\n    var nd;\\t\\t// number of distance codes\\r\\n    var ll = new Array(286+30); // literal/length and distance code lengths\\r\\n    var h;\\t\\t// (zip_HuftBuild)\\r\\n\\r\\n    for(i = 0; i < ll.length; i++)\\r\\n\\tll[i] = 0;\\r\\n\\r\\n    // read in table lengths\\r\\n    zip_NEEDBITS(5);\\r\\n    nl = 257 + zip_GETBITS(5);\\t// number of literal/length codes\\r\\n    zip_DUMPBITS(5);\\r\\n    zip_NEEDBITS(5);\\r\\n    nd = 1 + zip_GETBITS(5);\\t// number of distance codes\\r\\n    zip_DUMPBITS(5);\\r\\n    zip_NEEDBITS(4);\\r\\n    nb = 4 + zip_GETBITS(4);\\t// number of bit length codes\\r\\n    zip_DUMPBITS(4);\\r\\n    if(nl > 286 || nd > 30)\\r\\n      return -1;\\t\\t// bad lengths\\r\\n\\r\\n    // read in bit-length-code lengths\\r\\n    for(j = 0; j < nb; j++)\\r\\n    {\\r\\n\\tzip_NEEDBITS(3);\\r\\n\\tll[zip_border[j]] = zip_GETBITS(3);\\r\\n\\tzip_DUMPBITS(3);\\r\\n    }\\r\\n    for(; j < 19; j++)\\r\\n\\tll[zip_border[j]] = 0;\\r\\n\\r\\n    // build decoding table for trees--single level, 7 bit lookup\\r\\n    zip_bl = 7;\\r\\n    h = new zip_HuftBuild(ll, 19, 19, null, null, zip_bl);\\r\\n    if(h.status != 0)\\r\\n\\treturn -1;\\t// incomplete code set\\r\\n\\r\\n    zip_tl = h.root;\\r\\n    zip_bl = h.m;\\r\\n\\r\\n    // read in literal and distance code lengths\\r\\n    n = nl + nd;\\r\\n    i = l = 0;\\r\\n    while(i < n) {\\r\\n\\tzip_NEEDBITS(zip_bl);\\r\\n\\tt = zip_tl.list[zip_GETBITS(zip_bl)];\\r\\n\\tj = t.b;\\r\\n\\tzip_DUMPBITS(j);\\r\\n\\tj = t.n;\\r\\n\\tif(j < 16)\\t\\t// length of code in bits (0..15)\\r\\n\\t    ll[i++] = l = j;\\t// save last length in l\\r\\n\\telse if(j == 16) {\\t// repeat last length 3 to 6 times\\r\\n\\t    zip_NEEDBITS(2);\\r\\n\\t    j = 3 + zip_GETBITS(2);\\r\\n\\t    zip_DUMPBITS(2);\\r\\n\\t    if(i + j > n)\\r\\n\\t\\treturn -1;\\r\\n\\t    while(j-- > 0)\\r\\n\\t\\tll[i++] = l;\\r\\n\\t} else if(j == 17) {\\t// 3 to 10 zero length codes\\r\\n\\t    zip_NEEDBITS(3);\\r\\n\\t    j = 3 + zip_GETBITS(3);\\r\\n\\t    zip_DUMPBITS(3);\\r\\n\\t    if(i + j > n)\\r\\n\\t\\treturn -1;\\r\\n\\t    while(j-- > 0)\\r\\n\\t\\tll[i++] = 0;\\r\\n\\t    l = 0;\\r\\n\\t} else {\\t\\t// j == 18: 11 to 138 zero length codes\\r\\n\\t    zip_NEEDBITS(7);\\r\\n\\t    j = 11 + zip_GETBITS(7);\\r\\n\\t    zip_DUMPBITS(7);\\r\\n\\t    if(i + j > n)\\r\\n\\t\\treturn -1;\\r\\n\\t    while(j-- > 0)\\r\\n\\t\\tll[i++] = 0;\\r\\n\\t    l = 0;\\r\\n\\t}\\r\\n    }\\r\\n\\r\\n    // build the decoding tables for literal/length and distance codes\\r\\n    zip_bl = zip_lbits;\\r\\n    h = new zip_HuftBuild(ll, nl, 257, zip_cplens, zip_cplext, zip_bl);\\r\\n    if(zip_bl == 0)\\t// no literals or lengths\\r\\n\\th.status = 1;\\r\\n    if(h.status != 0) {\\r\\n\\tif(h.status == 1)\\r\\n\\t    ;// **incomplete literal tree**\\r\\n\\treturn -1;\\t\\t// incomplete code set\\r\\n    }\\r\\n    zip_tl = h.root;\\r\\n    zip_bl = h.m;\\r\\n\\r\\n    for(i = 0; i < nd; i++)\\r\\n\\tll[i] = ll[i + nl];\\r\\n    zip_bd = zip_dbits;\\r\\n    h = new zip_HuftBuild(ll, nd, 0, zip_cpdist, zip_cpdext, zip_bd);\\r\\n    zip_td = h.root;\\r\\n    zip_bd = h.m;\\r\\n\\r\\n    if(zip_bd == 0 && nl > 257) {   // lengths but no distances\\r\\n\\t// **incomplete distance tree**\\r\\n\\treturn -1;\\r\\n    }\\r\\n\\r\\n    if(h.status == 1) {\\r\\n\\t;// **incomplete distance tree**\\r\\n    }\\r\\n    if(h.status != 0)\\r\\n\\treturn -1;\\r\\n\\r\\n    // decompress until an end-of-block code\\r\\n    return zip_inflate_codes(buff, off, size);\\r\\n}\\r\\n\\r\\nvar zip_inflate_start = function() {\\r\\n    var i;\\r\\n\\r\\n    if(zip_slide == null)\\r\\n\\tzip_slide = new Array(2 * zip_WSIZE);\\r\\n    zip_wp = 0;\\r\\n    zip_bit_buf = 0;\\r\\n    zip_bit_len = 0;\\r\\n    zip_method = -1;\\r\\n    zip_eof = false;\\r\\n    zip_copy_leng = zip_copy_dist = 0;\\r\\n    zip_tl = null;\\r\\n}\\r\\n\\r\\nvar zip_inflate_internal = function(buff, off, size) {\\r\\n    // decompress an inflated entry\\r\\n    var n, i;\\r\\n\\r\\n    n = 0;\\r\\n    while(n < size) {\\r\\n\\tif(zip_eof && zip_method == -1)\\r\\n\\t    return n;\\r\\n\\r\\n\\tif(zip_copy_leng > 0) {\\r\\n\\t    if(zip_method != zip_STORED_BLOCK) {\\r\\n\\t\\t// STATIC_TREES or DYN_TREES\\r\\n\\t\\twhile(zip_copy_leng > 0 && n < size) {\\r\\n\\t\\t    zip_copy_leng--;\\r\\n\\t\\t    zip_copy_dist &= zip_WSIZE - 1;\\r\\n\\t\\t    zip_wp &= zip_WSIZE - 1;\\r\\n\\t\\t    buff[off + n++] = zip_slide[zip_wp++] =\\r\\n\\t\\t\\tzip_slide[zip_copy_dist++];\\r\\n\\t\\t}\\r\\n\\t    } else {\\r\\n\\t\\twhile(zip_copy_leng > 0 && n < size) {\\r\\n\\t\\t    zip_copy_leng--;\\r\\n\\t\\t    zip_wp &= zip_WSIZE - 1;\\r\\n\\t\\t    zip_NEEDBITS(8);\\r\\n\\t\\t    buff[off + n++] = zip_slide[zip_wp++] = zip_GETBITS(8);\\r\\n\\t\\t    zip_DUMPBITS(8);\\r\\n\\t\\t}\\r\\n\\t\\tif(zip_copy_leng == 0)\\r\\n\\t\\t    zip_method = -1; // done\\r\\n\\t    }\\r\\n\\t    if(n == size)\\r\\n\\t\\treturn n;\\r\\n\\t}\\r\\n\\r\\n\\tif(zip_method == -1) {\\r\\n\\t    if(zip_eof)\\r\\n\\t\\tbreak;\\r\\n\\r\\n\\t    // read in last block bit\\r\\n\\t    zip_NEEDBITS(1);\\r\\n\\t    if(zip_GETBITS(1) != 0)\\r\\n\\t\\tzip_eof = true;\\r\\n\\t    zip_DUMPBITS(1);\\r\\n\\r\\n\\t    // read in block type\\r\\n\\t    zip_NEEDBITS(2);\\r\\n\\t    zip_method = zip_GETBITS(2);\\r\\n\\t    zip_DUMPBITS(2);\\r\\n\\t    zip_tl = null;\\r\\n\\t    zip_copy_leng = 0;\\r\\n\\t}\\r\\n\\r\\n\\tswitch(zip_method) {\\r\\n\\t  case 0: // zip_STORED_BLOCK\\r\\n\\t    i = zip_inflate_stored(buff, off + n, size - n);\\r\\n\\t    break;\\r\\n\\r\\n\\t  case 1: // zip_STATIC_TREES\\r\\n\\t    if(zip_tl != null)\\r\\n\\t\\ti = zip_inflate_codes(buff, off + n, size - n);\\r\\n\\t    else\\r\\n\\t\\ti = zip_inflate_fixed(buff, off + n, size - n);\\r\\n\\t    break;\\r\\n\\r\\n\\t  case 2: // zip_DYN_TREES\\r\\n\\t    if(zip_tl != null)\\r\\n\\t\\ti = zip_inflate_codes(buff, off + n, size - n);\\r\\n\\t    else\\r\\n\\t\\ti = zip_inflate_dynamic(buff, off + n, size - n);\\r\\n\\t    break;\\r\\n\\r\\n\\t  default: // error\\r\\n\\t    i = -1;\\r\\n\\t    break;\\r\\n\\t}\\r\\n\\r\\n\\tif(i == -1) {\\r\\n\\t    if(zip_eof)\\r\\n\\t\\treturn 0;\\r\\n\\t    return -1;\\r\\n\\t}\\r\\n\\tn += i;\\r\\n    }\\r\\n    return n;\\r\\n}\\r\\n\\r\\nvar zip_inflate = function(str) {\\r\\n    var i, j;\\r\\n\\r\\n    zip_inflate_start();\\r\\n    zip_inflate_data = str;\\r\\n    zip_inflate_pos = 0;\\r\\n\\r\\n    var buff = new Array(1024);\\r\\n    var aout = [];\\r\\n    while((i = zip_inflate_internal(buff, 0, buff.length)) > 0) {\\r\\n\\tvar cbuf = new Array(i);\\r\\n\\tfor(j = 0; j < i; j++){\\r\\n\\t    cbuf[j] = String.fromCharCode(buff[j]);\\r\\n\\t}\\r\\n\\taout[aout.length] = cbuf.join(\\\"\\\");\\r\\n    }\\r\\n    zip_inflate_data = null; // G.C.\\r\\n    return aout.join(\\\"\\\");\\r\\n}\\r\\n\\r\\nif (! ctx.RawDeflate) ctx.RawDeflate = {};\\r\\nctx.RawDeflate.inflate = zip_inflate;\\r\\n\\r\\n})(this);\\r\\n\""
		},
		{
			"name": "store2.min.js",
			"source": "\"/*! store2 - v2.7.0 - 2018-03-04\\r\\n* Copyright (c) 2018 Nathan Bubna; Licensed (MIT OR GPL-3.0) */\\r\\n\\r\\n!function(a,b){var c={version:\\\"2.7.0\\\",areas:{},apis:{},inherit:function(a,b){for(var c in a)b.hasOwnProperty(c)||(b[c]=a[c]);return b},stringify:function(a){return void 0===a||\\\"function\\\"==typeof a?a+\\\"\\\":JSON.stringify(a)},parse:function(a){try{return JSON.parse(a)}catch(b){return a}},fn:function(a,b){c.storeAPI[a]=b;for(var d in c.apis)c.apis[d][a]=b},get:function(a,b){return a.getItem(b)},set:function(a,b,c){a.setItem(b,c)},remove:function(a,b){a.removeItem(b)},key:function(a,b){return a.key(b)},length:function(a){return a.length},clear:function(a){a.clear()},Store:function(a,b,d){var e=c.inherit(c.storeAPI,function(a,b,c){return 0===arguments.length?e.getAll():\\\"function\\\"==typeof b?e.transact(a,b,c):void 0!==b?e.set(a,b,c):\\\"string\\\"==typeof a||\\\"number\\\"==typeof a?e.get(a):a?e.setAll(a,b):e.clear()});e._id=a;try{b.setItem(\\\"_-bad-_\\\",\\\"wolf\\\"),e._area=b,b.removeItem(\\\"_-bad-_\\\")}catch(a){}return e._area||(e._area=c.inherit(c.storageAPI,{items:{},name:\\\"fake\\\"})),e._ns=d||\\\"\\\",c.areas[a]||(c.areas[a]=e._area),c.apis[e._ns+e._id]||(c.apis[e._ns+e._id]=e),e},storeAPI:{area:function(a,b){var d=this[a];return d&&d.area||(d=c.Store(a,b,this._ns),this[a]||(this[a]=d)),d},namespace:function(a,b){if(!a)return this._ns?this._ns.substring(0,this._ns.length-1):\\\"\\\";var d=a,e=this[d];return e&&e.namespace||(e=c.Store(this._id,this._area,this._ns+d+\\\".\\\"),this[d]||(this[d]=e),b||e.area(\\\"session\\\",c.areas.session)),e},isFake:function(){return\\\"fake\\\"===this._area.name},toString:function(){return\\\"store\\\"+(this._ns?\\\".\\\"+this.namespace():\\\"\\\")+\\\"[\\\"+this._id+\\\"]\\\"},has:function(a){return this._area.has?this._area.has(this._in(a)):!!(this._in(a)in this._area)},size:function(){return this.keys().length},each:function(a,b){for(var d=0,e=c.length(this._area);d<e;d++){var f=this._out(c.key(this._area,d));if(void 0!==f&&a.call(this,f,b||this.get(f))===!1)break;e>c.length(this._area)&&(e--,d--)}return b||this},keys:function(a){return this.each(function(a,b){b.push(a)},a||[])},get:function(a,b){var d=c.get(this._area,this._in(a));return null!==d?c.parse(d):b||d},getAll:function(a){return this.each(function(a,b){b[a]=this.get(a)},a||{})},transact:function(a,b,c){var d=this.get(a,c),e=b(d);return this.set(a,void 0===e?d:e),this},set:function(a,b,d){var e=this.get(a);return null!=e&&d===!1?b:c.set(this._area,this._in(a),c.stringify(b),d)||e},setAll:function(a,b){var c,d;for(var e in a)d=a[e],this.set(e,d,b)!==d&&(c=!0);return c},add:function(a,b){var d=this.get(a);if(d instanceof Array)b=d.concat(b);else if(null!==d){var e=typeof d;if(e===typeof b&&\\\"object\\\"===e){for(var f in b)d[f]=b[f];b=d}else b=d+b}return c.set(this._area,this._in(a),c.stringify(b)),b},remove:function(a){var b=this.get(a);return c.remove(this._area,this._in(a)),b},clear:function(){return this._ns?this.each(function(a){c.remove(this._area,this._in(a))},1):c.clear(this._area),this},clearAll:function(){var a=this._area;for(var b in c.areas)c.areas.hasOwnProperty(b)&&(this._area=c.areas[b],this.clear());return this._area=a,this},_in:function(a){return\\\"string\\\"!=typeof a&&(a=c.stringify(a)),this._ns?this._ns+a:a},_out:function(a){return this._ns?a&&0===a.indexOf(this._ns)?a.substring(this._ns.length):void 0:a}},storageAPI:{length:0,has:function(a){return this.items.hasOwnProperty(a)},key:function(a){var b=0;for(var c in this.items)if(this.has(c)&&a===b++)return c},setItem:function(a,b){this.has(a)||this.length++,this.items[a]=b},removeItem:function(a){this.has(a)&&(delete this.items[a],this.length--)},getItem:function(a){return this.has(a)?this.items[a]:null},clear:function(){for(var a in this.items)this.removeItem(a)},toString:function(){return this.length+\\\" items in \\\"+this.name+\\\"Storage\\\"}}},d=c.Store(\\\"local\\\",function(){try{return localStorage}catch(a){}}());d.local=d,d._=c,d.area(\\\"session\\\",function(){try{return sessionStorage}catch(a){}}()),\\\"function\\\"==typeof b&&void 0!==b.amd?b(\\\"store2\\\",[],function(){return d}):\\\"undefined\\\"!=typeof module&&module.exports?module.exports=d:(a.store&&(c.conflict=a.store),a.store=d)}(this,this.define);\\r\\n//# sourceMappingURL=store2.min.js.map\""
		},
		{
			"name": "system.min.js",
			"source": "\"// system.js - http://github.com/mrdoob/system.js\\r\\n'use strict';var System={browser:function(){var a=navigator.userAgent;return/Arora/i.test(a)?\\\"Arora\\\":/Opera|OPR/.test(a)?\\\"Opera\\\":/Maxthon/i.test(a)?\\\"Maxthon\\\":/Vivaldi/i.test(a)?\\\"Vivaldi\\\":/YaBrowser/i.test(a)?\\\"Yandex\\\":/Chrome/i.test(a)?\\\"Chrome\\\":/Epiphany/i.test(a)?\\\"Epiphany\\\":/Firefox/i.test(a)?\\\"Firefox\\\":/Mobile(\\\\/.*)? Safari/i.test(a)?\\\"Mobile Safari\\\":/MSIE/i.test(a)?\\\"Internet Explorer\\\":/Midori/i.test(a)?\\\"Midori\\\":/Safari/i.test(a)?\\\"Safari\\\":!1}(),os:function(){var a=navigator.userAgent;return/Android/i.test(a)?\\r\\n\\\"Android\\\":/CrOS/i.test(a)?\\\"Chrome OS\\\":/iP[ao]d|iPhone/i.test(a)?\\\"iOS\\\":/Linux/i.test(a)?\\\"Linux\\\":/Mac OS/i.test(a)?\\\"Mac OS\\\":/windows/i.test(a)?\\\"Windows\\\":!1}(),support:{canvas:!!window.CanvasRenderingContext2D,localStorage:function(){try{return!!window.localStorage.getItem}catch(a){return!1}}(),file:!!window.File&&!!window.FileReader&&!!window.FileList&&!!window.Blob,fileSystem:!!window.requestFileSystem||!!window.webkitRequestFileSystem,getUserMedia:!!window.navigator.getUserMedia||!!window.navigator.webkitGetUserMedia||\\r\\n!!window.navigator.mozGetUserMedia||!!window.navigator.msGetUserMedia,requestAnimationFrame:!!window.mozRequestAnimationFrame||!!window.webkitRequestAnimationFrame||!!window.oRequestAnimationFrame||!!window.msRequestAnimationFrame,sessionStorage:function(){try{return!!window.sessionStorage.getItem}catch(a){return!1}}(),svg:function(){try{return!!document.createElementNS&&!!document.createElementNS(\\\"http://www.w3.org/2000/svg\\\",\\\"svg\\\").createSVGRect}catch(a){return!1}}(),webgl:function(){try{return!!window.WebGLRenderingContext&&\\r\\n!!document.createElement(\\\"canvas\\\").getContext(\\\"experimental-webgl\\\")}catch(a){return!1}}(),worker:!!window.Worker}};\\r\\n\""
		},
		{
			"name": "zangodb.min.js",
			"source": "\"!function(t){if(\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module)module.exports=t();else if(\\\"function\\\"==typeof define&&define.amd)define([],t);else{(\\\"undefined\\\"!=typeof window?window:\\\"undefined\\\"!=typeof global?global:\\\"undefined\\\"!=typeof self?self:this).zango=t()}}(function(){return function t(e,n,r){function i(u,a){if(!n[u]){if(!e[u]){var s=\\\"function\\\"==typeof require&&require;if(!a&&s)return s(u,!0);if(o)return o(u,!0);var f=new Error(\\\"Cannot find module '\\\"+u+\\\"'\\\");throw f.code=\\\"MODULE_NOT_FOUND\\\",f}var c=n[u]={exports:{}};e[u][0].call(c.exports,function(t){var n=e[u][1][t];return i(n||t)},c,c.exports,t,e,n,r)}return n[u].exports}for(var o=\\\"function\\\"==typeof require&&require,u=0;u<r.length;u++)i(r[u]);return i}({1:[function(t,e,n){\\\"use strict\\\";var r=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\")}}(),i=t(\\\"./util.js\\\").unknownOp,o=t(\\\"./cursor.js\\\"),u={$match:function(t,e){return t.filter(e)},$project:function(t,e){return t.project(e)},$group:function(t,e){return t.group(e)},$unwind:function(t,e){return t.unwind(e)},$sort:function(t,e){return t.sort(e)},$skip:function(t,e){return t.skip(e)},$limit:function(t,e){return t.limit(e)}},a=function(t){var e=Object.keys(t);if(e.length>1)throw Error(\\\"stages must be passed only one operator\\\");var n=e[0],r=u[n];return r||i(n),[r,t[n]]};e.exports=function(t,e){var n=new o(t,\\\"readonly\\\"),i=!0,u=!1,s=void 0;try{for(var f,c=e[Symbol.iterator]();!(i=(f=c.next()).done);i=!0){var l=f.value,p=a(l),h=r(p,2);(0,h[0])(n,h[1])}}catch(t){u=!0,s=t}finally{try{!i&&c.return&&c.return()}finally{if(u)throw s}}return n}},{\\\"./cursor.js\\\":4,\\\"./util.js\\\":21}],2:[function(t,e,n){\\\"use strict\\\";function r(t,e){if(!(t instanceof e))throw new TypeError(\\\"Cannot call a class as a function\\\")}var i=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\\\"function\\\"==typeof Symbol&&t.constructor===Symbol?\\\"symbol\\\":typeof t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\"value\\\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),u=t(\\\"q\\\"),a=t(\\\"./util.js\\\").getIDBError,s=t(\\\"./cursor.js\\\"),f=t(\\\"./aggregate.js\\\"),c=t(\\\"./update.js\\\"),l=t(\\\"./remove.js\\\"),p=function(){function t(e,n){r(this,t),this._db=e,this._name=n,this._indexes=new Set}return o(t,[{key:\\\"_isIndexed\\\",value:function(t){return this._indexes.has(t)||\\\"_id\\\"===t}},{key:\\\"find\\\",value:function(t,e){var n=new s(this,\\\"readonly\\\");return n.filter(t),e&&n.project(e),n}},{key:\\\"findOne\\\",value:function(t,e,n){\\\"function\\\"==typeof e&&(n=e,e=null);var r=u.defer();return this.find(t,e).limit(1).toArray(function(t,e){t?r.reject(t):r.resolve(e[0])}),r.promise.nodeify(n),r.promise}},{key:\\\"aggregate\\\",value:function(t){return f(this,t)}},{key:\\\"_validate\\\",value:function(t){for(var e in t){if(\\\"$\\\"===e[0])throw Error(\\\"field name cannot start with '$'\\\");var n=t[e];if(Array.isArray(n)){var r=!0,o=!1,u=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var f=a.value;this._validate(f)}}catch(t){o=!0,u=t}finally{try{!r&&s.return&&s.return()}finally{if(o)throw u}}}else\\\"object\\\"===(void 0===n?\\\"undefined\\\":i(n))&&this._validate(n)}}},{key:\\\"insert\\\",value:function(t,e){var n=this;Array.isArray(t)||(t=[t]);var r=u.defer();return this._db._getConn(function(e,i){var o=void 0,u=n._name;try{o=i.transaction([u],\\\"readwrite\\\")}catch(e){return r.reject(e)}o.oncomplete=function(){return r.resolve()},o.onerror=function(t){return r.reject(a(t))};var s=o.objectStore(u),f=0;!function e(){var i=t[f];try{n._validate(i)}catch(t){return r.reject(t)}s.add(i).onsuccess=function(){++f<t.length&&e()}}()}),r.promise.nodeify(e),r.promise}},{key:\\\"_modify\\\",value:function(t,e,n){var r=u.defer(),i=new s(this,\\\"readwrite\\\");return i.filter(e),t(i,function(t){t?r.reject(t):r.resolve()}),r.promise.nodeify(n),r.promise}},{key:\\\"update\\\",value:function(t,e,n){return this._modify(function(t,n){return c(t,e,n)},t,n)}},{key:\\\"remove\\\",value:function(t,e){return this._modify(l,t,e)}},{key:\\\"name\\\",get:function(){return this._name}}]),t}();e.exports=p},{\\\"./aggregate.js\\\":1,\\\"./cursor.js\\\":4,\\\"./remove.js\\\":16,\\\"./update.js\\\":20,\\\"./util.js\\\":21,q:96}],3:[function(t,e,n){\\\"use strict\\\";var r=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\\\"function\\\"==typeof Symbol&&t.constructor===Symbol?\\\"symbol\\\":typeof t},i=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\")}}(),o=t(\\\"deepmerge\\\"),u=t(\\\"./util.js\\\"),a=u.hashify,s=u.getIDBError,f=t(\\\"./filter.js\\\"),c=t(\\\"./sort.js\\\"),l=t(\\\"./lang/filter.js\\\"),p=l.build,h=l.Conjunction,y=l.Disjunction,d=l.Exists,v=function(t){return t>0?\\\"next\\\":\\\"prev\\\"},g=function(t){return t.length>1?new h(t):t[0]},b=function(t){var e=t.parent,n=t.index;e.args.splice(n,1)},m=function(t,e){var n=t.col,r=t.read_pref;n._db._getConn(function(t,i){if(t)return e(t);var o=n._name;try{var u=i.transaction([o],r);u.onerror=function(t){return e(s(t))},e(null,u.objectStore(o))}catch(t){e(t)}})},w=function(t,e){var n=e.idb_key_range||null,r=e.idb_direction||\\\"next\\\",i=e.path.literal;return(\\\"_id\\\"===i?t:t.index(i)).openCursor(n,r)},_=function(t){return t.openCursor()},j=function(t){var e=[],n=!0,r=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(n=(u=a.next()).done);n=!0){var s=i(u.value,2),c=s[0],l=s[1];if(c===f){var h=p(l);if(!1===h)return;if(!h)continue;l=h}e.push([c,l])}}catch(t){r=!0,o=t}finally{try{!n&&a.return&&a.return()}finally{if(r)throw o}}return e},x=function(t){var e=t.pipeline,n=[],r=[],u=0,a=!0,s=!1,l=void 0;try{for(var p,h=e[Symbol.iterator]();!(a=(p=h.next()).done);a=!0){var y=i(p.value,2),d=y[0],v=y[1];if(d===c)r.push(v);else{if(d!==f)break;n.push(v)}u++}}catch(t){s=!0,l=t}finally{try{!a&&h.return&&h.return()}finally{if(s)throw l}}e.splice(0,u),t.pred=g(n),r.length&&(t.sort_spec=r.reduce(o,{}))},O=function(t,e){if(!e)return[];var n=[],r=[],i=!0,o=!1,u=void 0;try{for(var a,s=e.getClauses()[Symbol.iterator]();!(i=(a=s.next()).done);i=!0){var f=a.value;t._isIndexed(f.path.literal)&&(f instanceof d?r.push(f):n.push(f))}}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}return n.length?n:r},k=function(t){var e=t.col,n=t.pred;t.clauses=O(e,n)},E=function(t){if(t.hint){var e=t.clauses,n=t.hint,r=[],i=!0,o=!1,u=void 0;try{for(var a,s=e[Symbol.iterator]();!(i=(a=s.next()).done);i=!0){var f=a.value;f.path.literal===n&&r.push(f)}}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}r.length||(r=[{path:{literal:n}}]),t.clauses=r}},A=function(t){if(t.sort_spec){var e=t.clauses,n=t.sort_spec,r=t.pipeline,i=[],o=!0,u=!1,a=void 0;try{for(var s,f=e[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var l=s.value,p=l.path.literal;if(n.hasOwnProperty(p)){var h=n[p];l.idb_direction=v(h),i.push(l)}}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}i.length?t.clauses=i:r.unshift([c,n])}},S=function(t){var e=t.pred,n=t.clauses,i=t.pipeline,o=void 0;if(n.length){var u=function(){var t=n[0];if(o=function(e){return w(e,t)},!e||t===e)return{v:o};b(t)}();if(\\\"object\\\"===(void 0===u?\\\"undefined\\\":r(u)))return u.v}else if(o=_,!e)return o;return i.unshift([f,e]),o},I=function(t){var e=void 0,n=void 0,r=S(t),i=function(t){n.onsuccess=function(n){e=n.target.result,t()},n.onerror=function(e){return t(s(e))}},o=function(t){i(t),e.continue()},u=function(a){m(t,function(t,s){if(t)return a(t);n=r(s),i(function(t){e&&(u=o),a(t)})})};return function(t){return u(function(n){return t(n,e)})}},T=function(t,e){var n=t.pipeline,r=!0,o=!1,u=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var f=i(a.value,2);e=(0,f[0])(e,f[1])}}catch(t){o=!0,u=t}finally{try{!r&&s.return&&s.return()}finally{if(o)throw u}}return e},P=function(t){for(var e=[],n=t.pred.args,r=n.length-1;r>=0;r--){var i={col:t.col,read_pref:t.read_pref,pred:n[r],pipeline:[]};k(i);var o=B(i);e.push(T(i,o))}var u=new Set,s=function(t){var e=a(t._id);if(!u.has(e))return u.add(e)},f=function(){return e.pop()},l=f(),p=function(t){(l=f())?h(t):t()},h=function t(e){l(function(n,r,i){n?e(n):r?s(r)?e(null,r,i):t(e):p(e)})},y=t.sort_spec;return y&&t.pipeline.push([c,y]),h},B=function(t){var e=I(t);return function(t){e(function(e,n){n?t(null,n.value,n):t(e)})}};e.exports=function(t){var e=void 0;try{e=j(t._pipeline)}catch(t){return function(e){return e(t)}}if(!e)return function(t){return t()};var n={col:t._col,read_pref:t._read_pref,hint:t._hint,pipeline:e};x(n);var r=void 0;return n.pred instanceof y?r=P(n):(k(n),E(n),A(n),r=B(n)),T(n,r)}},{\\\"./filter.js\\\":6,\\\"./lang/filter.js\\\":11,\\\"./sort.js\\\":18,\\\"./util.js\\\":21,deepmerge:26}],4:[function(t,e,n){\\\"use strict\\\";function r(t,e){if(!(t instanceof e))throw new TypeError(\\\"Cannot call a class as a function\\\")}function i(t,e){if(!t)throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");return!e||\\\"object\\\"!=typeof e&&\\\"function\\\"!=typeof e?t:e}function o(t,e){if(\\\"function\\\"!=typeof e&&null!==e)throw new TypeError(\\\"Super expression must either be null or a function, not \\\"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var u=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\"value\\\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),a=t(\\\"events\\\"),s=t(\\\"q\\\"),f=t(\\\"./create_next_fn.js\\\"),c=t(\\\"./filter.js\\\"),l=t(\\\"./project.js\\\"),p=t(\\\"./group.js\\\"),h=t(\\\"./unwind.js\\\"),y=t(\\\"./sort.js\\\"),d=t(\\\"./skip.js\\\"),v=t(\\\"./limit.js\\\"),g=function(t){function e(t,n){r(this,e);var o=i(this,Object.getPrototypeOf(e).call(this));return o._col=t,o._read_pref=n,o._pipeline=[],o._next=o._init,o}return o(e,a),u(e,[{key:\\\"_forEach\\\",value:function(t,e){var n=this;this._next(function(r,i){i?(t(i),n.emit(\\\"data\\\",i),n._forEach(t,e)):(n.emit(\\\"end\\\"),e(r))})}},{key:\\\"forEach\\\",value:function(){var t=arguments.length<=0||void 0===arguments[0]?function(){}:arguments[0],e=arguments[1],n=s.defer();return this._forEach(t,function(t){t?n.reject(t):n.resolve()}),n.promise.nodeify(e),n.promise}},{key:\\\"_toArray\\\",value:function(t){var e=[];this._forEach(function(t){e.push(t)},function(n){return t(n,e)})}},{key:\\\"toArray\\\",value:function(t){var e=s.defer();return this._toArray(function(t,n){t?e.reject(t):e.resolve(n)}),e.promise.nodeify(t),e.promise}},{key:\\\"_assertUnopened\\\",value:function(){if(this._opened)throw Error(\\\"cursor has already been opened\\\")}},{key:\\\"hint\\\",value:function(t){if(this._assertUnopened(),!this._col._isIndexed(t))throw Error(\\\"index '\\\"+t+\\\"' does not exist\\\");return this._hint=t,this}},{key:\\\"_addStage\\\",value:function(t,e){return this._assertUnopened(),this._pipeline.push([t,e]),this}},{key:\\\"filter\\\",value:function(t){return this._addStage(c,t)}},{key:\\\"limit\\\",value:function(t){return this._addStage(v,t)}},{key:\\\"skip\\\",value:function(t){return this._addStage(d,t)}},{key:\\\"project\\\",value:function(t){return this._addStage(l,t)}},{key:\\\"group\\\",value:function(t){return this._addStage(p,t)}},{key:\\\"unwind\\\",value:function(t){return this._addStage(h,t)}},{key:\\\"sort\\\",value:function(t){return this._addStage(y,t)}},{key:\\\"_init\\\",value:function(t){this._opened=!0,this._next=f(this),this._next(t)}}]),e}();e.exports=g},{\\\"./create_next_fn.js\\\":3,\\\"./filter.js\\\":6,\\\"./group.js\\\":7,\\\"./limit.js\\\":14,\\\"./project.js\\\":15,\\\"./skip.js\\\":17,\\\"./sort.js\\\":18,\\\"./unwind.js\\\":19,events:71,q:96}],5:[function(t,e,n){\\\"use strict\\\";function r(t,e){if(!(t instanceof e))throw new TypeError(\\\"Cannot call a class as a function\\\")}function i(t,e){if(!t)throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");return!e||\\\"object\\\"!=typeof e&&\\\"function\\\"!=typeof e?t:e}function o(t,e){if(\\\"function\\\"!=typeof e&&null!==e)throw new TypeError(\\\"Super expression must either be null or a function, not \\\"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var u=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\\\"function\\\"==typeof Symbol&&t.constructor===Symbol?\\\"symbol\\\":typeof t},a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\"value\\\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),s=t(\\\"events\\\"),f=t(\\\"memoizee\\\"),c=t(\\\"q\\\"),l=t(\\\"./util.js\\\").getIDBError,p=t(\\\"./collection.js\\\"),h=function(t){function e(t,n,o){r(this,e);var a=i(this,Object.getPrototypeOf(e).call(this));if(a._name=t,\\\"object\\\"===(void 0===n?\\\"undefined\\\":u(n))?o=n:a._version=n,a._cols={},a._config={},a._initGetConn(),Array.isArray(o)){var s=!0,f=!1,c=void 0;try{for(var l,p=o[Symbol.iterator]();!(s=(l=p.next()).done);s=!0){var h=l.value;a._addCollection(h),a._config[h]=!0}}catch(t){f=!0,c=t}finally{try{!s&&p.return&&p.return()}finally{if(f)throw c}}}else for(var y in o)a._addCollection(y),a._addIndex(o[y],y);return a}return o(e,s),a(e,[{key:\\\"_addCollection\\\",value:function(t){this._cols[t]=new p(this,t)}},{key:\\\"_addIndex\\\",value:function(t,e){var n=this._config;if(!t)return n[e]=!1;if(\\\"object\\\"!==(void 0===t?\\\"undefined\\\":u(t)))return n[e]={};var r=this._cols[e];if(Array.isArray(t)){var i={},o=!0,a=!1,s=void 0;try{for(var f,c=t[Symbol.iterator]();!(o=(f=c.next()).done);o=!0){var l=f.value;i[l]=!0,r._indexes.add(l)}}catch(t){a=!0,s=t}finally{try{!o&&c.return&&c.return()}finally{if(a)throw s}}n[e]=i}else{for(var p in t)t[p]&&r._indexes.add(p);n[e]=t}}},{key:\\\"_addStore\\\",value:function(t,e){var n=t.createObjectStore(e,{keyPath:\\\"_id\\\",autoIncrement:!0}),r=this._config[e];for(var i in r)r[i]?n.createIndex(i,i,{unique:!1}):n.deleteIndex(i)}},{key:\\\"_getConn\\\",value:function(t){var e=this,n=void 0;(n=this._version?indexedDB.open(this._name,this._version):indexedDB.open(this._name)).onsuccess=function(n){var r=n.target.result;e._idb=r,e._version=r.version,e._open=!0,t(null,r)},n.onerror=function(e){return t(l(e))},n.onupgradeneeded=function(n){var r=n.target.result;for(var i in e._config)try{e._config[i]?r.objectStoreNames.contains(i)||e._addStore(r,i):r.deleteObjectStore(i)}catch(e){return t(e)}},n.onblocked=function(){return e.emit(\\\"blocked\\\")}}},{key:\\\"_initGetConn\\\",value:function(){this._getConn=f(this._getConn,{async:!0})}},{key:\\\"collection\\\",value:function(t){var e=this._cols[t];if(!e)throw Error(\\\"collection '\\\"+t+\\\"' does not exist\\\");return e}},{key:\\\"open\\\",value:function(t){var e=this,n=c.defer();return this._getConn(function(t){t?n.reject(t):n.resolve(e)}),n.promise.nodeify(t),n.promise}},{key:\\\"close\\\",value:function(){this._open&&(this._idb.close(),this._open=!1,this._initGetConn())}},{key:\\\"drop\\\",value:function(t){this.close();var e=c.defer(),n=indexedDB.deleteDatabase(this._name);return n.onsuccess=function(){return e.resolve()},n.onerror=function(t){return e.reject(l(t))},e.promise.nodeify(t),e.promise}},{key:\\\"name\\\",get:function(){return this._name}},{key:\\\"version\\\",get:function(){return this._version}}]),e}();e.exports=h},{\\\"./collection.js\\\":2,\\\"./util.js\\\":21,events:71,memoizee:81,q:96}],6:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"./lang/fields.js\\\");e.exports=function(t,e){return function(n){!function i(){t(function(t,o,u){o?e.run(new r(o))?n(null,o,u):i():n(t)})}()}}},{\\\"./lang/fields.js\\\":10}],7:[function(t,e,n){\\\"use strict\\\";function r(t,e){if(!t)throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");return!e||\\\"object\\\"!=typeof e&&\\\"function\\\"!=typeof e?t:e}function i(t,e){if(\\\"function\\\"!=typeof e&&null!==e)throw new TypeError(\\\"Super expression must either be null or a function, not \\\"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function o(t,e){if(!(t instanceof e))throw new TypeError(\\\"Cannot call a class as a function\\\")}var u=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\\\"function\\\"==typeof Symbol&&t.constructor===Symbol?\\\"symbol\\\":typeof t},a=function t(e,n,r){null===e&&(e=Function.prototype);var i=Object.getOwnPropertyDescriptor(e,n);if(void 0===i){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,r)}if(\\\"value\\\"in i)return i.value;var u=i.get;if(void 0!==u)return u.call(r)},s=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\"value\\\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),f=t(\\\"memoizee\\\"),c=t(\\\"./util.js\\\"),l=c.unknownOp,p=c.hashify,h=t(\\\"./lang/expression.js\\\"),y=t(\\\"./lang/fields.js\\\"),d=function(){function t(){o(this,t)}return s(t,[{key:\\\"getOpValueWithRefs\\\",value:function(t,e,n){var r=t.ast,i=t.fields;n(r.run(i))}},{key:\\\"value\\\",get:function(){return this._value}}],[{key:\\\"getNoRefsSteps\\\",value:function(t){return t.in_iter}},{key:\\\"getOpValue\\\",value:function(t,e){e(t.ast.run())}}]),t}(),v=function(t){function e(){o(this,e);var t=r(this,Object.getPrototypeOf(e).call(this));return t._value=0,t}return i(e,d),s(e,[{key:\\\"getOpValueWithRefs\\\",value:function(t,n,r){a(Object.getPrototypeOf(e.prototype),\\\"getOpValueWithRefs\\\",this).call(this,t,n,function(t){e._verify(t,r)})}},{key:\\\"add\\\",value:function(t){this._value+=t}}],[{key:\\\"_verify\\\",value:function(t,e){\\\"number\\\"==typeof t&&e(t)}},{key:\\\"getOpValue\\\",value:function(t,n){a(Object.getPrototypeOf(e),\\\"getOpValue\\\",this).call(this,t,function(t){return e._verify(t,n)})}}]),e}(),g=function(t){function e(){o(this,e);var t=r(this,Object.getPrototypeOf(e).call(this));return t._count=0,t}return i(e,v),s(e,[{key:\\\"add\\\",value:function(t){this._count++,a(Object.getPrototypeOf(e.prototype),\\\"add\\\",this).call(this,t)}},{key:\\\"value\\\",get:function(){return this._value/this._count||0}}]),e}(),b=function(t){function e(t){o(this,e);var n=r(this,Object.getPrototypeOf(e).call(this));return n._value=null,n._fn=t,n._add=n._add1,n}return i(e,d),s(e,[{key:\\\"_add1\\\",value:function(t){this._value=t,this._add=this._add2}},{key:\\\"_add2\\\",value:function(t){this._fn(t,this._value)&&(this._value=t)}},{key:\\\"add\\\",value:function(t){null!=t&&this._add(t)}}],[{key:\\\"getNoRefsSteps\\\",value:function(t){return t.in_end}}]),e}(),m=function(t){for(var e=arguments.length,n=Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];var i=!0,o=!1,u=void 0;try{for(var a,s=t[Symbol.iterator]();!(i=(a=s.next()).done);i=!0)a.value.apply(void 0,n)}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}},w=function(t,e){var n=!0,r=!1,i=void 0;try{for(var o,u=e[Symbol.iterator]();!(n=(o=u.next()).done);n=!0){var a=o.value;m(t,a)}}catch(t){r=!0,i=t}finally{try{!n&&u.return&&u.return()}finally{if(r)throw i}}},_=function(t,e,n,r){return function(i){var o=function(t){t||w(e,n),i(t,n)};!function e(){t(function(t,n){if(!n)return o(t);r(n),e()})}()}},j=function(t,e,n){var r=n.in_start,i=n.in_iter,o=n.in_end,u=[],a=f(function(t,e){var n={_id:e};return u.push(n),m(r,n),n},{length:1}),s=e.ast,c=function(t){return s.run(new y(t))},l=void 0;return l=i.length?function(t){var e=c(t),n=a(p(e),e);m(i,n,t)}:function(t){var e=c(t);a(p(e),e)},_(t,o,u,l)},x=function(t,e,n){if(e.has_refs)return j(t,e,n);var r=n.in_start,i=n.in_iter,o=n.in_end,a=[],s=function(){var t={_id:e.ast.run()};return m(r,t),a.push(t),t};if(i.length){var c=function(){var e=f(function(){return s()});return{v:_(t,o,a,function(t){m(i,e(),t)})}}();if(\\\"object\\\"===(void 0===c?\\\"undefined\\\":u(c)))return c.v}return function(e){t(function(t,n){n&&(s(),w(o,a)),e(t,a)})}},O={$sum:v,$avg:g,$min:function(t){function e(){return o(this,e),r(this,Object.getPrototypeOf(e).call(this,function(t,e){return t<e}))}return i(e,b),e}(),$max:function(t){function e(){return o(this,e),r(this,Object.getPrototypeOf(e).call(this,function(t,e){return t>e}))}return i(e,b),e}(),$push:function(t){function e(){o(this,e);var t=r(this,Object.getPrototypeOf(e).call(this));return t._value=[],t}return i(e,d),s(e,[{key:\\\"add\\\",value:function(t){this._value.push(t)}}]),e}(),$addToSet:function(t){function e(){o(this,e);var t=r(this,Object.getPrototypeOf(e).call(this));return t._hashes={},t}return i(e,d),s(e,[{key:\\\"add\\\",value:function(t){this._hashes[p(t)]=t}},{key:\\\"value\\\",get:function(){var t=[];for(var e in this._hashes)t.push(this._hashes[e]);return t}}],[{key:\\\"getNoRefsSteps\\\",value:function(t){return t.in_end}}]),e}()},k=function(t,e,n){var r=t.in_start,i=t.in_iter,o=t.in_end,u=Object.keys(n);if(u.length>1)throw Error(\\\"fields must have only one operator\\\");var a=u[0],s=O[a];if(!s)throw\\\"$\\\"===a[0]&&l(a),Error(\\\"unexpected field '\\\"+a+\\\"'\\\");var f=h(n[a]);r.push(function(t){t[e]=new s(f)}),f.has_refs?i.push(function(t,n){var r=new y(n);if(r.ensure(f.paths)){var i=t[e],o=Object.assign({fields:r},f);i.getOpValueWithRefs(o,n,function(t){return i.add(t)})}}):s.getOpValue(f,function(n){s.getNoRefsSteps(t).push(function(t){t[e].add(n)})}),o.push(function(t){t[e]=t[e].value})};e.exports=function(t,e){if(!e.hasOwnProperty(\\\"_id\\\"))throw Error(\\\"the '_id' field is missing\\\");var n=h(e._id),r=Object.assign({},e);delete r._id;var i={in_start:[],in_iter:[],in_end:[]};for(var o in r)k(i,o,r[o]);var u=x(t,n,i),a=function(t){u(function(e,n){e?t(e):(a=function(t){return t(null,n.pop())})(t)})};return function(t){return a(t)}}},{\\\"./lang/expression.js\\\":9,\\\"./lang/fields.js\\\":10,\\\"./util.js\\\":21,memoizee:81}],8:[function(t,e,n){\\\"use strict\\\";e.exports={Db:t(\\\"./db.js\\\")}},{\\\"./db.js\\\":5}],9:[function(t,e,n){\\\"use strict\\\";function r(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function i(t,e){if(!t)throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");return!e||\\\"object\\\"!=typeof e&&\\\"function\\\"!=typeof e?t:e}function o(t,e){if(\\\"function\\\"!=typeof e&&null!==e)throw new TypeError(\\\"Super expression must either be null or a function, not \\\"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function u(t,e){if(!(t instanceof e))throw new TypeError(\\\"Cannot call a class as a function\\\")}var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\"value\\\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),s=t(\\\"../util.js\\\").unknownOp,f=t(\\\"./missing_symbol.js\\\"),c=t(\\\"./path.js\\\"),l=function(){function t(e){u(this,t),this.value=e}return a(t,[{key:\\\"run\\\",value:function(){return this.value}},{key:\\\"ResultType\\\",get:function(){return this.constructor}}],[{key:\\\"any\\\",value:function(e){return\\\"number\\\"==typeof e?new p(e):\\\"string\\\"==typeof e?new h(e):Array.isArray(e)?new y(e):e instanceof Date?new d(e):new t(e)}},{key:\\\"literal\\\",value:function(e){return new v(t.any(e))}}]),t}(),p=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,null,[{key:\\\"isType\\\",value:function(t){return\\\"number\\\"==typeof t}}]),e}(),h=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,null,[{key:\\\"isType\\\",value:function(t){return\\\"string\\\"==typeof t}}]),e}(),y=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,null,[{key:\\\"isType\\\",value:function(t){return Array.isArray(t)}}]),e}(),d=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,null,[{key:\\\"isType\\\",value:function(t){return t instanceof Date}}]),e}(),v=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,[{key:\\\"run\\\",value:function(){return this.value.run()}},{key:\\\"ResultType\\\",get:function(){return this.value.ResultType}}]),e}(),g=function(){function t(e){u(this,t),this.path=e}return a(t,[{key:\\\"run\\\",value:function(t){var e=t.get(this.path);return e===f?null:e}}]),t}(),b=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,l),a(e,[{key:\\\"run\\\",value:function(t){var e={},n=this.value;for(var r in n)e[r]=n[r].run(t);return e}}]),e}(),m=function(){function t(){u(this,t),this.args=[]}return a(t,[{key:\\\"add\\\",value:function(t){this.args.push(t)}},{key:\\\"alt\\\",get:function(){return new l(null)}}]),t}(),w=function(t){function e(t){u(this,e);var n=i(this,Object.getPrototypeOf(e).call(this));return n.fn=t,n}return o(e,m),a(e,[{key:\\\"run\\\",value:function(t){var e=this.args,n=this.fn;return e.map(function(e){return e.run(t)}).reduce(n)}},{key:\\\"length\\\",get:function(){return 1/0}}]),e}(),_=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,w),a(e,[{key:\\\"run\\\",value:function(t){return this.fn(this.args[0].run(t))}},{key:\\\"length\\\",get:function(){return 1}}]),e}(),j=function(t,e){return function(n){function r(){return u(this,r),i(this,Object.getPrototypeOf(r).call(this,e))}return o(r,t),r}()},x=function(t,e){var n=arguments.length<=2||void 0===arguments[2]?e:arguments[2],r=function(e){function n(){return u(this,n),i(this,Object.getPrototypeOf(n).apply(this,arguments))}return o(n,t),n}();return r.prototype.InputType=e,r.prototype.ResultType=n,r},O=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(w,p)),e}(),k=function(t){return j(O,t)},E=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t+e})),e}(),A=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t-e})),e}(),S=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t*e})),e}(),I=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t/e})),e}(),T=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,k(function(t,e){return t%e})),e}(),P=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(w,p)),a(e,[{key:\\\"run\\\",value:function(t){return this.fn.apply(this,r(this.args.map(function(e){return e.run(t)})))}},{key:\\\"length\\\",get:function(){return this.fn.length}}]),e}(),B=function(t){return j(P,t)},C=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.abs)),e}(),L=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.ceil)),e}(),U=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.floor)),e}(),R=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.log)),e}(),$=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.log10)),e}(),N=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.pow)),e}(),M=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.sqrt)),e}(),D=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,B(Math.trunc)),e}(),z=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(w,h)),e}(),F=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,j(z,function(t,e){return t+e})),e}(),Y=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(_,h)),a(e,[{key:\\\"alt\\\",get:function(){return new h(\\\"\\\")}}]),e}(),q=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,j(Y,function(t){return t.toLowerCase()})),e}(),V=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,j(Y,function(t){return t.toUpperCase()})),e}(),Q=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(w,y)),e}(),K=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,j(Q,function(t,e){return t.concat(e)})),e}(),W=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,x(_,d,p)),e}(),H=function(t){return j(W,t)},J=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getDate()})),e}(),G=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCFullYear()})),e}(),X=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCMonth()+1})),e}(),Z=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCHours()})),e}(),tt=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCMinutes()})),e}(),et=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCSeconds()})),e}(),nt=function(t){function e(){return u(this,e),i(this,Object.getPrototypeOf(e).apply(this,arguments))}return o(e,H(function(t){return t.getUTCMilliseconds()})),e}(),rt=function(){function t(e,n,r){u(this,t);var i=r.InputType,o=r.alt;this.result_types=new Set([r.ResultType,o.ResultType]),this.stack=e,this.isType=i.isType,this.args=n,this.op=r,this.alt_value=o.value}return a(t,[{key:\\\"run\\\",value:function(t){var e=this.stack,n=this.isType,r=this.op,i=[],o=!0,u=!1,a=void 0;try{for(var s,f=this.args[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=s.value.run(t);if(!n(c))return this.alt_value;i.push(c)}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}for(var l=i.length-1;l>=0;l--)e.push(i[l]);return r.run(t)}}]),t}(),it=function(){function t(e){u(this,t),this.stack=e}return a(t,[{key:\\\"run\\\",value:function(){return this.stack.pop()}}]),t}(),ot={$add:E,$subtract:A,$multiply:S,$divide:I,$mod:T,$abs:C,$ceil:L,$floor:U,$ln:R,$log10:$,$pow:N,$sqrt:M,$trunc:D,$concat:F,$toLower:q,$toUpper:V,$concatArrays:K,$dayOfMonth:J,$year:G,$month:X,$hour:Z,$minute:tt,$second:et,$millisecond:nt},ut=function(t,e,n){var r=ot[e];r||s(e),Array.isArray(n)||(n=[n]);for(var i=new r,o=[],u=[],a=[],f=0;f<n.length&&f<i.length;f++){var c=st(u,n[f]);if(c.ResultType){if(c.ResultType!==i.InputType)return i.alt;i.add(c)}else{if(c instanceof rt){if(!c.result_types.has(i.InputType))return i.alt;if(1===c.result_types.size){i.add(c);continue}}o.push(c),i.add(new it(a))}}return u.length?(t.push.apply(t,u),o.length?new rt(a,o,i):i):new i.ResultType(i.run())},at=function(t,e){var n=new Set,r=new Set;for(var i in e)(\\\"$\\\"===i[0]?n:r).add(i);if(n.size>1)throw Error(\\\"objects cannot have more than one operator\\\");if(n.size){var o=!0,u=!1,a=void 0;try{for(var s,f=r[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=s.value;throw Error(\\\"unexpected field '\\\"+c+\\\"'\\\")}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}var p=!0,h=!1,y=void 0;try{for(var d,v=n[Symbol.iterator]();!(p=(d=v.next()).done);p=!0){var g=d.value;return\\\"$literal\\\"===g?l.literal(e[g]):ut(t,g,e[g])}}catch(t){h=!0,y=t}finally{try{!p&&v.return&&v.return()}finally{if(h)throw y}}}var m=[],w={};for(var _ in e)w[_]=st(m,e[_]);var j=new b(w);return m.length?(t.push.apply(t,m),j):new l(j.run())},st=function(t,e){if(\\\"string\\\"==typeof e&&\\\"$\\\"===e[0]){var n=new c(e.substring(1));return t.push(n),new g(n)}return null==e||e.constructor!==Object?l.any(e):at(t,e)};e.exports=function(t){var e=[];return{ast:st(e,t),paths:e,has_refs:!!e.length}}},{\\\"../util.js\\\":21,\\\"./missing_symbol.js\\\":12,\\\"./path.js\\\":13}],10:[function(t,e,n){\\\"use strict\\\";function r(t,e){if(!(t instanceof e))throw new TypeError(\\\"Cannot call a class as a function\\\")}var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\"value\\\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),o=t(\\\"memoizee\\\"),u=t(\\\"../util.js\\\").get,a=t(\\\"./missing_symbol.js\\\"),s=function(){function t(e){r(this,t),this._doc=e,this.get=o(this.get)}return i(t,[{key:\\\"get\\\",value:function(t){var e=a;return u(this._doc,t.pieces,function(t,n){e=t[n]}),e}},{key:\\\"ensure\\\",value:function(t){var e=!0,n=!1,r=void 0;try{for(var i,o=t[Symbol.iterator]();!(e=(i=o.next()).done);e=!0){var u=i.value;if(this.get(u)===a)return!1}}catch(t){n=!0,r=t}finally{try{!e&&o.return&&o.return()}finally{if(n)throw r}}return!0}}]),t}();e.exports=s},{\\\"../util.js\\\":21,\\\"./missing_symbol.js\\\":12,memoizee:81}],11:[function(t,e,n){\\\"use strict\\\";function r(t){return Array.isArray(t)?t:Array.from(t)}function i(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function o(t,e){if(!t)throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");return!e||\\\"object\\\"!=typeof e&&\\\"function\\\"!=typeof e?t:e}function u(t,e){if(\\\"function\\\"!=typeof e&&null!==e)throw new TypeError(\\\"Super expression must either be null or a function, not \\\"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function a(t,e){if(!(t instanceof e))throw new TypeError(\\\"Cannot call a class as a function\\\")}var s=function t(e,n,r){null===e&&(e=Function.prototype);var i=Object.getOwnPropertyDescriptor(e,n);if(void 0===i){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,r)}if(\\\"value\\\"in i)return i.value;var u=i.get;if(void 0!==u)return u.call(r)},f=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\"value\\\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),c=t(\\\"../util.js\\\"),l=c.isObject,p=c.equal,h=c.unknownOp,y=t(\\\"./missing_symbol.js\\\"),d=t(\\\"./path.js\\\"),v=t(\\\"./fields.js\\\"),g=function t(e){if(\\\"number\\\"==typeof e)return!isNaN(e);if(\\\"string\\\"==typeof e)return!0;if(\\\"boolean\\\"==typeof e)return!0;if(!e)return!1;if(e.constructor===Object)return!1;if(Array.isArray(e)){var n=!0,r=!1,i=void 0;try{for(var o,u=e[Symbol.iterator]();!(n=(o=u.next()).done);n=!0)if(!t(o.value))return!1}catch(t){r=!0,i=t}finally{try{!n&&u.return&&u.return()}finally{if(r)throw i}}return!0}return e instanceof Date&&!isNaN(e.valueOf())},b=function(){function t(){a(this,t)}return f(t,[{key:\\\"getClauses\\\",value:function(){return this.is_index_matchable?[this]:[]}}]),t}(),m=function(t){function e(t){a(this,e);var n=o(this,Object.getPrototypeOf(e).call(this));return n.args=t,n}return u(e,b),e}(),w=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,m),f(e,[{key:\\\"getClauses\\\",value:function(){for(var t=[],e=0;e<this.args.length;e++){var n=this.args[e];n instanceof m?t.push.apply(t,i(n.getClauses())):n.is_index_matchable&&(n.parent=this,n.index=e,t.push(n))}return t}},{key:\\\"run\\\",value:function(t){var e=!0,n=!1,r=void 0;try{for(var i,o=this.args[Symbol.iterator]();!(e=(i=o.next()).done);e=!0)if(!i.value.run(t))return!1}catch(t){n=!0,r=t}finally{try{!e&&o.return&&o.return()}finally{if(n)throw r}}return!0}}]),e}(),_=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,m),f(e,[{key:\\\"getClauses\\\",value:function(){return[]}},{key:\\\"run\\\",value:function(t){var e=!0,n=!1,r=void 0;try{for(var i,o=this.args[Symbol.iterator]();!(e=(i=o.next()).done);e=!0)if(i.value.run(t))return!0}catch(t){n=!0,r=t}finally{try{!e&&o.return&&o.return()}finally{if(n)throw r}}return!1}}]),e}(),j=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,w),f(e,[{key:\\\"getClauses\\\",value:function(){return[]}},{key:\\\"run\\\",value:function(t){return!s(Object.getPrototypeOf(e.prototype),\\\"run\\\",this).call(this,t)}}]),e}(),x=function(t){function e(t,n){a(this,e);var r=o(this,Object.getPrototypeOf(e).call(this));return r.path=t,r.bool=n,r}return u(e,b),f(e,[{key:\\\"run\\\",value:function(t){return t.get(this.path)!==y===this.bool}},{key:\\\"is_index_matchable\\\",get:function(){return!!this.bool}}]),e}(),O=function(t){function e(t,n){a(this,e);var r=o(this,Object.getPrototypeOf(e).call(this));return r.path=t,r.value=n,r}return u(e,b),f(e,[{key:\\\"run\\\",value:function(t){var e=t.get(this.path);return e!==y&&p(e,this.value)}},{key:\\\"is_index_matchable\\\",get:function(){return g(this.value)}},{key:\\\"idb_key_range\\\",get:function(){return IDBKeyRange.only(this.value)}}]),e}(),k=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,O),f(e,[{key:\\\"run\\\",value:function(t){return!s(Object.getPrototypeOf(e.prototype),\\\"run\\\",this).call(this,t)}},{key:\\\"is_index_matchable\\\",get:function(){return!1}}]),e}(),E=function(t){function e(t,n,r){a(this,e);var i=o(this,Object.getPrototypeOf(e).call(this));return i.path=t,i.fns=n,i.values=r,i}return u(e,b),f(e,[{key:\\\"run\\\",value:function(t){var e=t.get(this.path);if(e===y||null==e)return!1;for(var n=this.fns,r=this.values,i=0;i<n.length;i++)if(!n[i](e,r[i]))return!1;return!0}},{key:\\\"is_index_matchable\\\",get:function(){return!0}}]),e}(),A=function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return function(t){function n(t,r){return a(this,n),o(this,Object.getPrototypeOf(n).call(this,t,e,r))}return u(n,E),n}()},S=function(t,e){return t>e},I=function(t,e){return t>=e},T=function(t,e){return t<e},P=function(t,e){return t<=e},B=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(S)),f(e,[{key:\\\"idb_key_range\\\",get:function(){var t;return(t=IDBKeyRange).lowerBound.apply(t,i(this.values).concat([!0]))}}]),e}(),C=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(I)),f(e,[{key:\\\"idb_key_range\\\",get:function(){var t;return(t=IDBKeyRange).lowerBound.apply(t,i(this.values))}}]),e}(),L=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(T)),f(e,[{key:\\\"idb_key_range\\\",get:function(){var t;return(t=IDBKeyRange).upperBound.apply(t,i(this.values).concat([!0]))}}]),e}(),U=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(P)),f(e,[{key:\\\"idb_key_range\\\",get:function(){var t;return(t=IDBKeyRange).upperBound.apply(t,i(this.values))}}]),e}(),R=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(S,T)),f(e,[{key:\\\"idb_key_range\\\",get:function(){var t;return(t=IDBKeyRange).bound.apply(t,i(this.values).concat([!0,!0]))}}]),e}(),$=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(I,T)),f(e,[{key:\\\"idb_key_range\\\",get:function(){var t;return(t=IDBKeyRange).bound.apply(t,i(this.values).concat([!1,!0]))}}]),e}(),N=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(S,P)),f(e,[{key:\\\"idb_key_range\\\",get:function(){var t;return(t=IDBKeyRange).bound.apply(t,i(this.values).concat([!0,!1]))}}]),e}(),M=function(t){function e(){return a(this,e),o(this,Object.getPrototypeOf(e).apply(this,arguments))}return u(e,A(I,P)),f(e,[{key:\\\"idb_key_range\\\",get:function(){var t;return(t=IDBKeyRange).bound.apply(t,i(this.values))}}]),e}(),D=function(t){function e(t,n){a(this,e);var r=o(this,Object.getPrototypeOf(e).call(this));return r.path=t,r.op=n,r}return u(e,b),f(e,[{key:\\\"run\\\",value:function(t){var e=t.get(this.path);if(!e||!e[Symbol.iterator])return!1;var n=this.op,r=!0,i=!1,o=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done);r=!0){var s=u.value;if(l(s)&&n.run(new v(s)))return!0}}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return!1}},{key:\\\"is_index_matchable\\\",get:function(){return!1}}]),e}(),z=function(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done);r=!0){var s=u.value,f=Q(s);f&&n.push(f)}}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n.length&&t.push(new j(n)),!0},F={$and:function(t,e){var n=!0,r=!1,o=void 0;try{for(var u,a=e[Symbol.iterator]();!(n=(u=a.next()).done);n=!0){var s=u.value,f=Q(s);if(!1===f)return!1;f&&(f.constructor===w?t.push.apply(t,i(f.args)):t.push(f))}}catch(t){r=!0,o=t}finally{try{!n&&a.return&&a.return()}finally{if(r)throw o}}return!0},$or:function(t,e){var n=[],r=void 0,o=!0,u=!1,a=void 0;try{for(var s,f=e[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=s.value,l=Q(c);l?l.constructor===_?n.push.apply(n,i(l.args)):n.push(l):!1===l&&(r=!0)}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}if(n.length>1)t.push(new _(n));else if(n.length)t.push(n[0]);else if(r)return!1;return!0},$not:z,$nor:z},Y=[[R,\\\"$gt\\\",\\\"$lt\\\"],[$,\\\"$gte\\\",\\\"$lt\\\"],[N,\\\"$gt\\\",\\\"$lte\\\"],[M,\\\"$gte\\\",\\\"$lte\\\"],[B,\\\"$gt\\\"],[C,\\\"$gte\\\"],[L,\\\"$lt\\\"],[U,\\\"$lte\\\"]],q=function(t,e,n,i){var o=!0,u=!1,a=void 0;try{for(var s,f=Y[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=r(s.value),l=function(r,o){var u=[],a=!0,s=!1,f=void 0;try{for(var c,l=o[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){var p=c.value;if(!i.has(p))return;var h=n[p];if(!g(h))return!1;u.push(h)}}catch(t){s=!0,f=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw f}}return t.push(new r(e,u)),!0}(c[0],c.slice(1));if(!1===l)return;if(l){i.delete(\\\"$gt\\\"),i.delete(\\\"$gte\\\"),i.delete(\\\"$lt\\\"),i.delete(\\\"$lte\\\");break}}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}return!0},V=function(t,e,n){var r=function(){return t.push(new O(e,n)),!0};if(null==n||n.constructor!==Object)return r();var i=new Set(Object.keys(n));if(i.has(\\\"$exists\\\")&&!n.$exists)return t.push(new x(e,!1)),!0;var o=[];if(i.has(\\\"$eq\\\")&&(o.push(new O(e,n.$eq)),i.delete(\\\"$eq\\\")),i.has(\\\"$ne\\\")&&(o.push(new k(e,n.$ne)),i.delete(\\\"$ne\\\")),!q(o,e,n,i))return!1;if(i.has(\\\"$in\\\")){var u=[],a=!0,s=!1,f=void 0;try{for(var c,l=n.$in[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){var p=c.value;u.push(new O(e,p))}}catch(t){s=!0,f=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw f}}u.length>1?o.push(new _(u)):u.length&&o.push(u[0]),i.delete(\\\"$in\\\")}if(i.has(\\\"$nin\\\")){var y=!0,d=!1,v=void 0;try{for(var g,b=n.$nin[Symbol.iterator]();!(y=(g=b.next()).done);y=!0){var m=g.value;o.push(new k(e,m))}}catch(t){d=!0,v=t}finally{try{!y&&b.return&&b.return()}finally{if(d)throw v}}i.delete(\\\"$nin\\\")}if(i.has(\\\"$elemMatch\\\")){var w=Q(n.$elemMatch);w&&o.push(new D(e,w)),i.delete(\\\"$elemMatch\\\")}n.$exists&&!o.length&&(o.push(new x(e,!0)),i.delete(\\\"$exists\\\"));var j=!0,E=!1,A=void 0;try{for(var S,I=i[Symbol.iterator]();!(j=(S=I.next()).done);j=!0){var T=S.value;\\\"$\\\"===T[0]&&h(T)}}catch(t){E=!0,A=t}finally{try{!j&&I.return&&I.return()}finally{if(E)throw A}}return o.length?(t.push.apply(t,o),!0):r()},Q=function(t){var e=[];for(var n in t){var r=t[n],i=void 0;if(\\\"$\\\"!==n[0])i=V(e,new d(n),r);else{Array.isArray(r)||(r=[r]);var o=F[n];o||h(n),i=o(e,r)}if(!i)return i}if(e.length)return 1===e.length?e[0]:new w(e)};e.exports.build=Q,e.exports.Conjunction=w,e.exports.Disjunction=_,e.exports.Exists=x},{\\\"../util.js\\\":21,\\\"./fields.js\\\":10,\\\"./missing_symbol.js\\\":12,\\\"./path.js\\\":13}],12:[function(t,e,n){\\\"use strict\\\";e.exports=Symbol(\\\"missing\\\")},{}],13:[function(t,e,n){\\\"use strict\\\";function r(t,e){if(!(t instanceof e))throw new TypeError(\\\"Cannot call a class as a function\\\")}var i=t(\\\"../util.js\\\").toPathPieces;e.exports=function t(e){r(this,t),this.pieces=i(e),this.literal=e}},{\\\"../util.js\\\":21}],14:[function(t,e,n){\\\"use strict\\\";e.exports=function(t,e){var n=0;return function(r){n++<e?t(r):r()}}},{}],15:[function(t,e,n){\\\"use strict\\\";var r=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\\\"function\\\"==typeof Symbol&&t.constructor===Symbol?\\\"symbol\\\":typeof t},i=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\")}}(),o=t(\\\"./util.js\\\"),u=o.toPathPieces,a=o.set,s=o.remove2,f=o.copy,c=t(\\\"./lang/expression.js\\\"),l=t(\\\"./lang/fields.js\\\"),p=function(t,e,n){var r=!0,o=!1,u=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var f=i(a.value,2),c=f[0];(0,f[1])(t,e,c)}}catch(t){o=!0,u=t}finally{try{!r&&s.return&&s.return()}finally{if(o)throw u}}return e},h=function(t){var e=c(t),n=e.ast,i=e.paths;if(!e.has_refs){var o=function(){var t=n.run();return{v:function(e){for(var n=arguments.length,r=Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];return a.apply(void 0,r.concat([t]))}}}();if(\\\"object\\\"===(void 0===o?\\\"undefined\\\":r(o)))return o.v}return function(t){for(var e=arguments.length,r=Array(e>1?e-1:0),o=1;o<e;o++)r[o-1]=arguments[o];var u=new l(t);u.ensure(i)&&a.apply(void 0,r.concat([n.run(u)]))}};e.exports=function(t,e){var n=function(t){return!!e[t]},r=!0;e.hasOwnProperty(\\\"_id\\\")&&(r=n(\\\"_id\\\"),delete e._id);var i=[],o=[],a=!0,c=function(t){if(n(t)!==a)throw Error(\\\"cannot mix inclusions and exclusions\\\")},l=function(t){a=n(t),l=c};for(var y in e){var d=e[y],v=u(y);\\\"boolean\\\"==typeof d||1===d||0===d?(l(y),i.push(v)):o.push([v,h(d)])}var g=[];o.length&&g.push(function(t,e){return p(t,e,o)}),i.length?function(){a===r&&i.push([\\\"_id\\\"]);var t=a?f:s;g.push(function(e){return t(e,i)})}():function(){var t=void 0;t=r?function(t,e){t.hasOwnProperty(\\\"_id\\\")&&(e._id=t._id)}:function(t,e){delete e._id},g.push(function(e,n){return t(e,n),n})}();return function(e){t(function(t,n){if(!n)return e(t);var r=n,i=!0,o=!1,u=void 0;try{for(var a,s=g[Symbol.iterator]();!(i=(a=s.next()).done);i=!0)r=(0,a.value)(n,r)}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}e(null,r)})}}},{\\\"./lang/expression.js\\\":9,\\\"./lang/fields.js\\\":10,\\\"./util.js\\\":21}],16:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"./util.js\\\").getIDBError;e.exports=function(t,e){!function n(){t._next(function(t,i,o){if(!i)return e(t);var u=o.delete();u.onsuccess=n,u.onerror=function(t){return e(r(t))}})}()}},{\\\"./util.js\\\":21}],17:[function(t,e,n){\\\"use strict\\\";e.exports=function(t,e){var n=0;return function r(i){t(function(t,o){o?++n>e?i(null,o):r(i):i(t)})}}},{}],18:[function(t,e,n){\\\"use strict\\\";var r=function(){function t(t,e){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\")}}(),i=t(\\\"./util.js\\\"),o=i.toPathPieces,u=i.isObject,a=i.equal,s=function(t,e,n,r){for(var i=0;i<n.length-1;i++){var o=n[i];if(t=t[o],e=e[o],u(t)){if(u(e))continue}else if(!u(e))return null;return r}var s=n[i];if(t.hasOwnProperty(s)){if(e.hasOwnProperty(s))return t=t[s],e=e[s],a(t,e)?0:(t<e?1:-1)*r}else if(!e.hasOwnProperty(s))return null;return r};e.exports=function(t,e){var n=[];for(var i in e)n.push([o(i),e[i]]);var u=function(t,e){var i=!0,o=!1,u=void 0;try{for(var a,f=n[Symbol.iterator]();!(i=(a=f.next()).done);i=!0){var c=r(a.value,2),l=c[0],p=c[1],h=s(t,e,l,p);if(h>0||h<0)return h}}catch(t){o=!0,u=t}finally{try{!i&&f.return&&f.return()}finally{if(o)throw u}}return-p},a=[],f=function(t){return t(null,a.pop())},c=function(e){var n=function(t){if(t)return e(t);a=a.sort(u),(c=f)(e)};!function e(){t(function(t,r){if(!r)return n(t);a.push(r),e()})}()};return function(t){return c(t)}}},{\\\"./util.js\\\":21}],19:[function(t,e,n){\\\"use strict\\\";function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var i=t(\\\"./util.js\\\"),o=i.toPathPieces,u=i.get;e.exports=function(t,e){var n=o(e.substring(1)),i=[],a=function(t){return t(null,i.pop())},s=function(t,e){var o=i.length;if(u(t,n,function(t,e){var n=t[e];if(n&&n[Symbol.iterator]){var o=!0,u=!1,a=void 0;try{for(var s,f=n[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var c=s.value;i.push(r({},e,c))}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}}}),o===i.length)return f(e);a(e)},f=function(e){t(function(t,n){t?e(t):n?s(n,e):(f=a)(e)})};return function(t){return f(t)}}},{\\\"./util.js\\\":21}],20:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"./util.js\\\"),i=r.toPathPieces,o=r.get,u=r.set,a=r.modify,s=r.remove1,f=r.rename,c=r.equal,l=r.unknownOp,p=r.getIDBError,h={};h.$set=function(t,e){return function(n){u(n,t,e)}},h.$unset=function(t){return function(e){return s(e,t)}},h.$rename=function(t,e){return function(n){f(n,t,e)}};var y=function(t,e,n){return function(r){a(r,t,e,n)}},d=function(t){return function(e,n){return y(e,function(e,r){var i=e[r];\\\"number\\\"==typeof i&&(e[r]=t(n,i))},function(t,e){return t[e]=0})}};h.$inc=d(function(t,e){return t+e}),h.$mul=d(function(t,e){return t*e});var v=function(t){return function(e,n){return y(e,function(e,r){t(n,e[r])&&(e[r]=n)},function(t,e){return t[e]=n})}};h.$min=v(function(t,e){return t<e}),h.$max=v(function(t,e){return t>e}),h.$push=function(t,e){return y(t,function(t,n){var r=t[n];Array.isArray(r)&&r.push(e)},function(t,n){return t[n]=[e]})},h.$pop=function(t,e){var n=void 0;return n=e<1?function(t){return t.shift()}:function(t){return t.pop()},function(e){o(e,t,function(t,e){var r=t[e];Array.isArray(r)&&n(r)})}},h.$pullAll=function(t,e){return function(n){o(n,t,function(t,n){var r=t[n];if(Array.isArray(r)){var i=[],o=!0,u=!1,a=void 0;try{for(var s,f=r[Symbol.iterator]();!(o=(s=f.next()).done);o=!0){var l=s.value;(function(t){var n=!0,r=!1,i=void 0;try{for(var o,u=e[Symbol.iterator]();!(n=(o=u.next()).done);n=!0){var a=o.value;if(c(t,a))return!0}}catch(t){r=!0,i=t}finally{try{!n&&u.return&&u.return()}finally{if(r)throw i}}})(l)||i.push(l)}}catch(t){u=!0,a=t}finally{try{!o&&f.return&&f.return()}finally{if(u)throw a}}t[n]=i}})}},h.$pull=function(t,e){return h.$pullAll(t,[e])},h.$addToSet=function(t,e){return function(n){o(n,t,function(t,n){var r=t[n];if(Array.isArray(r)){var i=!0,o=!1,u=void 0;try{for(var a,s=r[Symbol.iterator]();!(i=(a=s.next()).done);i=!0){var f=a.value;if(c(f,e))return}}catch(t){o=!0,u=t}finally{try{!i&&s.return&&s.return()}finally{if(o)throw u}}r.push(e)}})}};var g=function(t,e,n){if(\\\"$\\\"!==e[0])return t.push(h.$set(i(e),n));var r=h[e];r||l(e);for(var o in n)t.push(r(i(o),n[o]))};e.exports=function(t,e,n){var r=[];for(var i in e)g(r,i,e[i]);if(!r.length)return n(null);!function e(){t._next(function(t,i,o){if(!i)return n(t);var u=!0,a=!1,s=void 0;try{for(var f,c=r[Symbol.iterator]();!(u=(f=c.next()).done);u=!0)(0,f.value)(i)}catch(t){a=!0,s=t}finally{try{!u&&c.return&&c.return()}finally{if(a)throw s}}var l=o.update(i);l.onsuccess=e,l.onerror=function(t){return n(p(t))}})}()}},{\\\"./util.js\\\":21}],21:[function(t,e,n){\\\"use strict\\\";var r=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\\\"function\\\"==typeof Symbol&&t.constructor===Symbol?\\\"symbol\\\":typeof t},i=t(\\\"deepmerge\\\"),o=t(\\\"clone\\\"),u=t(\\\"object-hash\\\"),a=function(t,e){for(var n=0;n<e.length-1;n++){var r=e[n];if(!t.hasOwnProperty(r))return;if(t=t[r],!c(t))return}if(t.hasOwnProperty(e[n]))return t},s=function(t,e,n){for(var r=n;r<e.length-1;r++)t[e[r]]={},t=t[e[r]];return t},f=function(t,e,n){(t=a(t,e))&&n(t,e[e.length-1])},c=function(t){return\\\"object\\\"===(void 0===t?\\\"undefined\\\":r(t))&&null!==t},l=function(t,e,n,r){var i=e[e.length-1],o=function(n){t=s(t,e,n),r(t,i)};if(!t.hasOwnProperty(e[0]))return o(0);if(e.length>1){t=t[e[0]];for(var u=1;u<e.length-1;u++){var a=e[u];if(!c(t[a]))return;if(Array.isArray(t)&&a<0)return;if(!t.hasOwnProperty(a))return o(u);t=t[a]}}n(t,i)},p=function t(e,n,r){for(var i in e)!function(i){var u=[],a=!0,s=!1,f=void 0;try{for(var c,l=r[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){var p=c.value;if(p[0]===i){if(1===p.length)return;u.push(p.slice(1))}}}catch(t){s=!0,f=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw f}}if(u.length){var h=e[i];n[i]=new h.constructor,t(h,n[i],u)}else n[i]=o(e[i])}(i)},h=function(t,e,n){for(var r=0;r<n.length-1;r++){var i=n[r];if(t=t[i],!c(t))return;e[i]=new t.constructor,e=e[i]}if(t.hasOwnProperty(n[r]))return e[n[r]]=t[n[r]],t},y=function(t){if(void 0!==t)return u(t)};e.exports.toPathPieces=function(t){return t.split(\\\".\\\")},e.exports.exists=function(t,e){return!!a(t,e)},e.exports.create=s,e.exports.get=f,e.exports.set=function(t,e,n){var r=function(t,e){return t[e]=n};l(t,e,r,r)},e.exports.isObject=c,e.exports.modify=l,e.exports.remove1=function(t,e){for(var n=0;n<e.length-1;n++)if(t=t[e[n]],!c(t))return;if(Array.isArray(t)){var r=Number.parseFloat(e[n]);Number.isInteger(r)&&t.splice(r,1)}else delete t[e[n]]},e.exports.remove2=function(t,e){var n=new t.constructor;return p(t,n,e),n},e.exports.rename=function(t,e,n){f(t,e,function(t,e){t[n]=t[e],delete t[e]})},e.exports.copy=function(t,e){var n=[],r=!0,o=!1,u=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var f=a.value,c=new t.constructor;h(t,c,f)&&n.push(c)}}catch(t){o=!0,u=t}finally{try{!r&&s.return&&s.return()}finally{if(o)throw u}}return n.reduce(i,{})},e.exports.equal=function(t,e){return y(t)===y(e)},e.exports.unknownOp=function(t){throw Error(\\\"unknown operator '\\\"+t+\\\"'\\\")},e.exports.hashify=y,e.exports.getIDBError=function(t){return Error(t.target.error.message)}},{clone:24,deepmerge:26,\\\"object-hash\\\":94}],22:[function(t,e,n){\\\"use strict\\\";function r(t){var e=t.length;if(e%4>0)throw new Error(\\\"Invalid string. Length must be a multiple of 4\\\");return\\\"=\\\"===t[e-2]?2:\\\"=\\\"===t[e-1]?1:0}function i(t){return u[t>>18&63]+u[t>>12&63]+u[t>>6&63]+u[63&t]}function o(t,e,n){for(var r,o=[],u=e;u<n;u+=3)r=(t[u]<<16)+(t[u+1]<<8)+t[u+2],o.push(i(r));return o.join(\\\"\\\")}n.byteLength=function(t){return 3*t.length/4-r(t)},n.toByteArray=function(t){var e,n,i,o,u,f=t.length;o=r(t),u=new s(3*f/4-o),n=o>0?f-4:f;var c=0;for(e=0;e<n;e+=4)i=a[t.charCodeAt(e)]<<18|a[t.charCodeAt(e+1)]<<12|a[t.charCodeAt(e+2)]<<6|a[t.charCodeAt(e+3)],u[c++]=i>>16&255,u[c++]=i>>8&255,u[c++]=255&i;return 2===o?(i=a[t.charCodeAt(e)]<<2|a[t.charCodeAt(e+1)]>>4,u[c++]=255&i):1===o&&(i=a[t.charCodeAt(e)]<<10|a[t.charCodeAt(e+1)]<<4|a[t.charCodeAt(e+2)]>>2,u[c++]=i>>8&255,u[c++]=255&i),u},n.fromByteArray=function(t){for(var e,n=t.length,r=n%3,i=\\\"\\\",a=[],s=0,f=n-r;s<f;s+=16383)a.push(o(t,s,s+16383>f?f:s+16383));return 1===r?(e=t[n-1],i+=u[e>>2],i+=u[e<<4&63],i+=\\\"==\\\"):2===r&&(e=(t[n-2]<<8)+t[n-1],i+=u[e>>10],i+=u[e>>4&63],i+=u[e<<2&63],i+=\\\"=\\\"),a.push(i),a.join(\\\"\\\")};for(var u=[],a=[],s=\\\"undefined\\\"!=typeof Uint8Array?Uint8Array:Array,f=\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\",c=0,l=f.length;c<l;++c)u[c]=f[c],a[f.charCodeAt(c)]=c;a[\\\"-\\\".charCodeAt(0)]=62,a[\\\"_\\\".charCodeAt(0)]=63},{}],23:[function(t,e,n){\\\"use strict\\\";function r(t){if(t>H)throw new RangeError(\\\"Invalid typed array length\\\");var e=new Uint8Array(t);return e.__proto__=i.prototype,e}function i(t,e,n){if(\\\"number\\\"==typeof t){if(\\\"string\\\"==typeof e)throw new Error(\\\"If encoding is specified then the first argument must be a string\\\");return s(t)}return o(t,e,n)}function o(t,e,n){if(\\\"number\\\"==typeof t)throw new TypeError('\\\"value\\\" argument must not be a number');return q(t)?l(t,e,n):\\\"string\\\"==typeof t?f(t,e):p(t)}function u(t){if(\\\"number\\\"!=typeof t)throw new TypeError('\\\"size\\\" argument must be a number');if(t<0)throw new RangeError('\\\"size\\\" argument must not be negative')}function a(t,e,n){return u(t),t<=0?r(t):void 0!==e?\\\"string\\\"==typeof n?r(t).fill(e,n):r(t).fill(e):r(t)}function s(t){return u(t),r(t<0?0:0|h(t))}function f(t,e){if(\\\"string\\\"==typeof e&&\\\"\\\"!==e||(e=\\\"utf8\\\"),!i.isEncoding(e))throw new TypeError('\\\"encoding\\\" must be a valid string encoding');var n=0|y(t,e),o=r(n),u=o.write(t,e);return u!==n&&(o=o.slice(0,u)),o}function c(t){for(var e=t.length<0?0:0|h(t.length),n=r(e),i=0;i<e;i+=1)n[i]=255&t[i];return n}function l(t,e,n){if(e<0||t.byteLength<e)throw new RangeError(\\\"'offset' is out of bounds\\\");if(t.byteLength<e+(n||0))throw new RangeError(\\\"'length' is out of bounds\\\");var r;return r=void 0===e&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,e):new Uint8Array(t,e,n),r.__proto__=i.prototype,r}function p(t){if(i.isBuffer(t)){var e=0|h(t.length),n=r(e);return 0===n.length?n:(t.copy(n,0,0,e),n)}if(t){if(V(t)||\\\"length\\\"in t)return\\\"number\\\"!=typeof t.length||Q(t.length)?r(0):c(t);if(\\\"Buffer\\\"===t.type&&Array.isArray(t.data))return c(t.data)}throw new TypeError(\\\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\\\")}function h(t){if(t>=H)throw new RangeError(\\\"Attempt to allocate Buffer larger than maximum size: 0x\\\"+H.toString(16)+\\\" bytes\\\");return 0|t}function y(t,e){if(i.isBuffer(t))return t.length;if(V(t)||q(t))return t.byteLength;\\\"string\\\"!=typeof t&&(t=\\\"\\\"+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case\\\"ascii\\\":case\\\"latin1\\\":case\\\"binary\\\":return n;case\\\"utf8\\\":case\\\"utf-8\\\":case void 0:return M(t).length;case\\\"ucs2\\\":case\\\"ucs-2\\\":case\\\"utf16le\\\":case\\\"utf-16le\\\":return 2*n;case\\\"hex\\\":return n>>>1;case\\\"base64\\\":return F(t).length;default:if(r)return M(t).length;e=(\\\"\\\"+e).toLowerCase(),r=!0}}function d(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return\\\"\\\";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return\\\"\\\";if(n>>>=0,e>>>=0,n<=e)return\\\"\\\";for(t||(t=\\\"utf8\\\");;)switch(t){case\\\"hex\\\":return T(this,e,n);case\\\"utf8\\\":case\\\"utf-8\\\":return E(this,e,n);case\\\"ascii\\\":return S(this,e,n);case\\\"latin1\\\":case\\\"binary\\\":return I(this,e,n);case\\\"base64\\\":return k(this,e,n);case\\\"ucs2\\\":case\\\"ucs-2\\\":case\\\"utf16le\\\":case\\\"utf-16le\\\":return P(this,e,n);default:if(r)throw new TypeError(\\\"Unknown encoding: \\\"+t);t=(t+\\\"\\\").toLowerCase(),r=!0}}function v(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function g(t,e,n,r,o){if(0===t.length)return-1;if(\\\"string\\\"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,Q(n)&&(n=o?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(o)return-1;n=t.length-1}else if(n<0){if(!o)return-1;n=0}if(\\\"string\\\"==typeof e&&(e=i.from(e,r)),i.isBuffer(e))return 0===e.length?-1:b(t,e,n,r,o);if(\\\"number\\\"==typeof e)return e&=255,\\\"function\\\"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):b(t,[e],n,r,o);throw new TypeError(\\\"val must be string, number or Buffer\\\")}function b(t,e,n,r,i){function o(t,e){return 1===u?t[e]:t.readUInt16BE(e*u)}var u=1,a=t.length,s=e.length;if(void 0!==r&&(\\\"ucs2\\\"===(r=String(r).toLowerCase())||\\\"ucs-2\\\"===r||\\\"utf16le\\\"===r||\\\"utf-16le\\\"===r)){if(t.length<2||e.length<2)return-1;u=2,a/=2,s/=2,n/=2}var f;if(i){var c=-1;for(f=n;f<a;f++)if(o(t,f)===o(e,-1===c?0:f-c)){if(-1===c&&(c=f),f-c+1===s)return c*u}else-1!==c&&(f-=f-c),c=-1}else for(n+s>a&&(n=a-s),f=n;f>=0;f--){for(var l=!0,p=0;p<s;p++)if(o(t,f+p)!==o(e,p)){l=!1;break}if(l)return f}return-1}function m(t,e,n,r){n=Number(n)||0;var i=t.length-n;r?(r=Number(r))>i&&(r=i):r=i;var o=e.length;if(o%2!=0)throw new TypeError(\\\"Invalid hex string\\\");r>o/2&&(r=o/2);for(var u=0;u<r;++u){var a=parseInt(e.substr(2*u,2),16);if(Q(a))return u;t[n+u]=a}return u}function w(t,e,n,r){return Y(M(e,t.length-n),t,n,r)}function _(t,e,n,r){return Y(D(e),t,n,r)}function j(t,e,n,r){return _(t,e,n,r)}function x(t,e,n,r){return Y(F(e),t,n,r)}function O(t,e,n,r){return Y(z(e,t.length-n),t,n,r)}function k(t,e,n){return 0===e&&n===t.length?K.fromByteArray(t):K.fromByteArray(t.slice(e,n))}function E(t,e,n){n=Math.min(t.length,n);for(var r=[],i=e;i<n;){var o=t[i],u=null,a=o>239?4:o>223?3:o>191?2:1;if(i+a<=n){var s,f,c,l;switch(a){case 1:o<128&&(u=o);break;case 2:128==(192&(s=t[i+1]))&&(l=(31&o)<<6|63&s)>127&&(u=l);break;case 3:s=t[i+1],f=t[i+2],128==(192&s)&&128==(192&f)&&(l=(15&o)<<12|(63&s)<<6|63&f)>2047&&(l<55296||l>57343)&&(u=l);break;case 4:s=t[i+1],f=t[i+2],c=t[i+3],128==(192&s)&&128==(192&f)&&128==(192&c)&&(l=(15&o)<<18|(63&s)<<12|(63&f)<<6|63&c)>65535&&l<1114112&&(u=l)}}null===u?(u=65533,a=1):u>65535&&(u-=65536,r.push(u>>>10&1023|55296),u=56320|1023&u),r.push(u),i+=a}return A(r)}function A(t){var e=t.length;if(e<=J)return String.fromCharCode.apply(String,t);for(var n=\\\"\\\",r=0;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=J));return n}function S(t,e,n){var r=\\\"\\\";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(127&t[i]);return r}function I(t,e,n){var r=\\\"\\\";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(t[i]);return r}function T(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var i=\\\"\\\",o=e;o<n;++o)i+=N(t[o]);return i}function P(t,e,n){for(var r=t.slice(e,n),i=\\\"\\\",o=0;o<r.length;o+=2)i+=String.fromCharCode(r[o]+256*r[o+1]);return i}function B(t,e,n){if(t%1!=0||t<0)throw new RangeError(\\\"offset is not uint\\\");if(t+e>n)throw new RangeError(\\\"Trying to access beyond buffer length\\\")}function C(t,e,n,r,o,u){if(!i.isBuffer(t))throw new TypeError('\\\"buffer\\\" argument must be a Buffer instance');if(e>o||e<u)throw new RangeError('\\\"value\\\" argument is out of bounds');if(n+r>t.length)throw new RangeError(\\\"Index out of range\\\")}function L(t,e,n,r,i,o){if(n+r>t.length)throw new RangeError(\\\"Index out of range\\\");if(n<0)throw new RangeError(\\\"Index out of range\\\")}function U(t,e,n,r,i){return e=+e,n>>>=0,i||L(t,e,n,4,3.4028234663852886e38,-3.4028234663852886e38),W.write(t,e,n,r,23,4),n+4}function R(t,e,n,r,i){return e=+e,n>>>=0,i||L(t,e,n,8,1.7976931348623157e308,-1.7976931348623157e308),W.write(t,e,n,r,52,8),n+8}function $(t){if((t=t.trim().replace(G,\\\"\\\")).length<2)return\\\"\\\";for(;t.length%4!=0;)t+=\\\"=\\\";return t}function N(t){return t<16?\\\"0\\\"+t.toString(16):t.toString(16)}function M(t,e){e=e||1/0;for(var n,r=t.length,i=null,o=[],u=0;u<r;++u){if((n=t.charCodeAt(u))>55295&&n<57344){if(!i){if(n>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(u+1===r){(e-=3)>-1&&o.push(239,191,189);continue}i=n;continue}if(n<56320){(e-=3)>-1&&o.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,n<128){if((e-=1)<0)break;o.push(n)}else if(n<2048){if((e-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error(\\\"Invalid code point\\\");if((e-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function D(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}function z(t,e){for(var n,r,i,o=[],u=0;u<t.length&&!((e-=2)<0);++u)r=(n=t.charCodeAt(u))>>8,i=n%256,o.push(i),o.push(r);return o}function F(t){return K.toByteArray($(t))}function Y(t,e,n,r){for(var i=0;i<r&&!(i+n>=e.length||i>=t.length);++i)e[i+n]=t[i];return i}function q(t){return t instanceof ArrayBuffer||null!=t&&null!=t.constructor&&\\\"ArrayBuffer\\\"===t.constructor.name&&\\\"number\\\"==typeof t.byteLength}function V(t){return\\\"function\\\"==typeof ArrayBuffer.isView&&ArrayBuffer.isView(t)}function Q(t){return t!==t}var K=t(\\\"base64-js\\\"),W=t(\\\"ieee754\\\");n.Buffer=i,n.SlowBuffer=function(t){return+t!=t&&(t=0),i.alloc(+t)},n.INSPECT_MAX_BYTES=50;var H=2147483647;n.kMaxLength=H,i.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()}catch(t){return!1}}(),i.TYPED_ARRAY_SUPPORT||\\\"undefined\\\"==typeof console||\\\"function\\\"!=typeof console.error||console.error(\\\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\\\"),\\\"undefined\\\"!=typeof Symbol&&Symbol.species&&i[Symbol.species]===i&&Object.defineProperty(i,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),i.poolSize=8192,i.from=function(t,e,n){return o(t,e,n)},i.prototype.__proto__=Uint8Array.prototype,i.__proto__=Uint8Array,i.alloc=function(t,e,n){return a(t,e,n)},i.allocUnsafe=function(t){return s(t)},i.allocUnsafeSlow=function(t){return s(t)},i.isBuffer=function(t){return null!=t&&!0===t._isBuffer},i.compare=function(t,e){if(!i.isBuffer(t)||!i.isBuffer(e))throw new TypeError(\\\"Arguments must be Buffers\\\");if(t===e)return 0;for(var n=t.length,r=e.length,o=0,u=Math.min(n,r);o<u;++o)if(t[o]!==e[o]){n=t[o],r=e[o];break}return n<r?-1:r<n?1:0},i.isEncoding=function(t){switch(String(t).toLowerCase()){case\\\"hex\\\":case\\\"utf8\\\":case\\\"utf-8\\\":case\\\"ascii\\\":case\\\"latin1\\\":case\\\"binary\\\":case\\\"base64\\\":case\\\"ucs2\\\":case\\\"ucs-2\\\":case\\\"utf16le\\\":case\\\"utf-16le\\\":return!0;default:return!1}},i.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('\\\"list\\\" argument must be an Array of Buffers');if(0===t.length)return i.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=i.allocUnsafe(e),o=0;for(n=0;n<t.length;++n){var u=t[n];if(!i.isBuffer(u))throw new TypeError('\\\"list\\\" argument must be an Array of Buffers');u.copy(r,o),o+=u.length}return r},i.byteLength=y,i.prototype._isBuffer=!0,i.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError(\\\"Buffer size must be a multiple of 16-bits\\\");for(var e=0;e<t;e+=2)v(this,e,e+1);return this},i.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError(\\\"Buffer size must be a multiple of 32-bits\\\");for(var e=0;e<t;e+=4)v(this,e,e+3),v(this,e+1,e+2);return this},i.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError(\\\"Buffer size must be a multiple of 64-bits\\\");for(var e=0;e<t;e+=8)v(this,e,e+7),v(this,e+1,e+6),v(this,e+2,e+5),v(this,e+3,e+4);return this},i.prototype.toString=function(){var t=this.length;return 0===t?\\\"\\\":0===arguments.length?E(this,0,t):d.apply(this,arguments)},i.prototype.equals=function(t){if(!i.isBuffer(t))throw new TypeError(\\\"Argument must be a Buffer\\\");return this===t||0===i.compare(this,t)},i.prototype.inspect=function(){var t=\\\"\\\",e=n.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString(\\\"hex\\\",0,e).match(/.{2}/g).join(\\\" \\\"),this.length>e&&(t+=\\\" ... \\\")),\\\"<Buffer \\\"+t+\\\">\\\"},i.prototype.compare=function(t,e,n,r,o){if(!i.isBuffer(t))throw new TypeError(\\\"Argument must be a Buffer\\\");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),e<0||n>t.length||r<0||o>this.length)throw new RangeError(\\\"out of range index\\\");if(r>=o&&e>=n)return 0;if(r>=o)return-1;if(e>=n)return 1;if(e>>>=0,n>>>=0,r>>>=0,o>>>=0,this===t)return 0;for(var u=o-r,a=n-e,s=Math.min(u,a),f=this.slice(r,o),c=t.slice(e,n),l=0;l<s;++l)if(f[l]!==c[l]){u=f[l],a=c[l];break}return u<a?-1:a<u?1:0},i.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},i.prototype.indexOf=function(t,e,n){return g(this,t,e,n,!0)},i.prototype.lastIndexOf=function(t,e,n){return g(this,t,e,n,!1)},i.prototype.write=function(t,e,n,r){if(void 0===e)r=\\\"utf8\\\",n=this.length,e=0;else if(void 0===n&&\\\"string\\\"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error(\\\"Buffer.write(string, encoding, offset[, length]) is no longer supported\\\");e>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r=\\\"utf8\\\")):(r=n,n=void 0)}var i=this.length-e;if((void 0===n||n>i)&&(n=i),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError(\\\"Attempt to write outside buffer bounds\\\");r||(r=\\\"utf8\\\");for(var o=!1;;)switch(r){case\\\"hex\\\":return m(this,t,e,n);case\\\"utf8\\\":case\\\"utf-8\\\":return w(this,t,e,n);case\\\"ascii\\\":return _(this,t,e,n);case\\\"latin1\\\":case\\\"binary\\\":return j(this,t,e,n);case\\\"base64\\\":return x(this,t,e,n);case\\\"ucs2\\\":case\\\"ucs-2\\\":case\\\"utf16le\\\":case\\\"utf-16le\\\":return O(this,t,e,n);default:if(o)throw new TypeError(\\\"Unknown encoding: \\\"+r);r=(\\\"\\\"+r).toLowerCase(),o=!0}},i.prototype.toJSON=function(){return{type:\\\"Buffer\\\",data:Array.prototype.slice.call(this._arr||this,0)}};var J=4096;i.prototype.slice=function(t,e){var n=this.length;t=~~t,e=void 0===e?n:~~e,t<0?(t+=n)<0&&(t=0):t>n&&(t=n),e<0?(e+=n)<0&&(e=0):e>n&&(e=n),e<t&&(e=t);var r=this.subarray(t,e);return r.__proto__=i.prototype,r},i.prototype.readUIntLE=function(t,e,n){t>>>=0,e>>>=0,n||B(t,e,this.length);for(var r=this[t],i=1,o=0;++o<e&&(i*=256);)r+=this[t+o]*i;return r},i.prototype.readUIntBE=function(t,e,n){t>>>=0,e>>>=0,n||B(t,e,this.length);for(var r=this[t+--e],i=1;e>0&&(i*=256);)r+=this[t+--e]*i;return r},i.prototype.readUInt8=function(t,e){return t>>>=0,e||B(t,1,this.length),this[t]},i.prototype.readUInt16LE=function(t,e){return t>>>=0,e||B(t,2,this.length),this[t]|this[t+1]<<8},i.prototype.readUInt16BE=function(t,e){return t>>>=0,e||B(t,2,this.length),this[t]<<8|this[t+1]},i.prototype.readUInt32LE=function(t,e){return t>>>=0,e||B(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},i.prototype.readUInt32BE=function(t,e){return t>>>=0,e||B(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},i.prototype.readIntLE=function(t,e,n){t>>>=0,e>>>=0,n||B(t,e,this.length);for(var r=this[t],i=1,o=0;++o<e&&(i*=256);)r+=this[t+o]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*e)),r},i.prototype.readIntBE=function(t,e,n){t>>>=0,e>>>=0,n||B(t,e,this.length);for(var r=e,i=1,o=this[t+--r];r>0&&(i*=256);)o+=this[t+--r]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*e)),o},i.prototype.readInt8=function(t,e){return t>>>=0,e||B(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},i.prototype.readInt16LE=function(t,e){t>>>=0,e||B(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},i.prototype.readInt16BE=function(t,e){t>>>=0,e||B(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},i.prototype.readInt32LE=function(t,e){return t>>>=0,e||B(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},i.prototype.readInt32BE=function(t,e){return t>>>=0,e||B(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},i.prototype.readFloatLE=function(t,e){return t>>>=0,e||B(t,4,this.length),W.read(this,t,!0,23,4)},i.prototype.readFloatBE=function(t,e){return t>>>=0,e||B(t,4,this.length),W.read(this,t,!1,23,4)},i.prototype.readDoubleLE=function(t,e){return t>>>=0,e||B(t,8,this.length),W.read(this,t,!0,52,8)},i.prototype.readDoubleBE=function(t,e){return t>>>=0,e||B(t,8,this.length),W.read(this,t,!1,52,8)},i.prototype.writeUIntLE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||C(this,t,e,n,Math.pow(2,8*n)-1,0);var i=1,o=0;for(this[e]=255&t;++o<n&&(i*=256);)this[e+o]=t/i&255;return e+n},i.prototype.writeUIntBE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||C(this,t,e,n,Math.pow(2,8*n)-1,0);var i=n-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+n},i.prototype.writeUInt8=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,1,255,0),this[e]=255&t,e+1},i.prototype.writeUInt16LE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},i.prototype.writeUInt16BE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},i.prototype.writeUInt32LE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},i.prototype.writeUInt32BE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},i.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var i=Math.pow(2,8*n-1);C(this,t,e,n,i-1,-i)}var o=0,u=1,a=0;for(this[e]=255&t;++o<n&&(u*=256);)t<0&&0===a&&0!==this[e+o-1]&&(a=1),this[e+o]=(t/u>>0)-a&255;return e+n},i.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var i=Math.pow(2,8*n-1);C(this,t,e,n,i-1,-i)}var o=n-1,u=1,a=0;for(this[e+o]=255&t;--o>=0&&(u*=256);)t<0&&0===a&&0!==this[e+o+1]&&(a=1),this[e+o]=(t/u>>0)-a&255;return e+n},i.prototype.writeInt8=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},i.prototype.writeInt16LE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},i.prototype.writeInt16BE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},i.prototype.writeInt32LE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},i.prototype.writeInt32BE=function(t,e,n){return t=+t,e>>>=0,n||C(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},i.prototype.writeFloatLE=function(t,e,n){return U(this,t,e,!0,n)},i.prototype.writeFloatBE=function(t,e,n){return U(this,t,e,!1,n)},i.prototype.writeDoubleLE=function(t,e,n){return R(this,t,e,!0,n)},i.prototype.writeDoubleBE=function(t,e,n){return R(this,t,e,!1,n)},i.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError(\\\"targetStart out of bounds\\\");if(n<0||n>=this.length)throw new RangeError(\\\"sourceStart out of bounds\\\");if(r<0)throw new RangeError(\\\"sourceEnd out of bounds\\\");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var i,o=r-n;if(this===t&&n<e&&e<r)for(i=o-1;i>=0;--i)t[i+e]=this[i+n];else if(o<1e3)for(i=0;i<o;++i)t[i+e]=this[i+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+o),e);return o},i.prototype.fill=function(t,e,n,r){if(\\\"string\\\"==typeof t){if(\\\"string\\\"==typeof e?(r=e,e=0,n=this.length):\\\"string\\\"==typeof n&&(r=n,n=this.length),1===t.length){var o=t.charCodeAt(0);o<256&&(t=o)}if(void 0!==r&&\\\"string\\\"!=typeof r)throw new TypeError(\\\"encoding must be a string\\\");if(\\\"string\\\"==typeof r&&!i.isEncoding(r))throw new TypeError(\\\"Unknown encoding: \\\"+r)}else\\\"number\\\"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError(\\\"Out of range index\\\");if(n<=e)return this;e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0);var u;if(\\\"number\\\"==typeof t)for(u=e;u<n;++u)this[u]=t;else{var a=i.isBuffer(t)?t:new i(t,r),s=a.length;for(u=0;u<n-e;++u)this[u+e]=a[u%s]}return this};var G=/[^+/0-9A-Za-z-_]/g},{\\\"base64-js\\\":22,ieee754:72}],24:[function(t,e,n){(function(t){var n=function(){\\\"use strict\\\";function e(t,e){return null!=e&&t instanceof e}function n(r,s,f,c,l){function p(r,f){if(null===r)return null;if(0===f)return r;var v,g;if(\\\"object\\\"!=typeof r)return r;if(e(r,o))v=new o;else if(e(r,u))v=new u;else if(e(r,a))v=new a(function(t,e){r.then(function(e){t(p(e,f-1))},function(t){e(p(t,f-1))})});else if(n.__isArray(r))v=[];else if(n.__isRegExp(r))v=new RegExp(r.source,i(r)),r.lastIndex&&(v.lastIndex=r.lastIndex);else if(n.__isDate(r))v=new Date(r.getTime());else{if(d&&t.isBuffer(r))return v=new t(r.length),r.copy(v),v;e(r,Error)?v=Object.create(r):void 0===c?(g=Object.getPrototypeOf(r),v=Object.create(g)):(v=Object.create(c),g=c)}if(s){var b=h.indexOf(r);if(-1!=b)return y[b];h.push(r),y.push(v)}e(r,o)&&r.forEach(function(t,e){var n=p(e,f-1),r=p(t,f-1);v.set(n,r)}),e(r,u)&&r.forEach(function(t){var e=p(t,f-1);v.add(e)});for(var m in r){var w;g&&(w=Object.getOwnPropertyDescriptor(g,m)),w&&null==w.set||(v[m]=p(r[m],f-1))}if(Object.getOwnPropertySymbols)for(var _=Object.getOwnPropertySymbols(r),m=0;m<_.length;m++){var j=_[m];(!(k=Object.getOwnPropertyDescriptor(r,j))||k.enumerable||l)&&(v[j]=p(r[j],f-1),k.enumerable||Object.defineProperty(v,j,{enumerable:!1}))}if(l)for(var x=Object.getOwnPropertyNames(r),m=0;m<x.length;m++){var O=x[m],k=Object.getOwnPropertyDescriptor(r,O);k&&k.enumerable||(v[O]=p(r[O],f-1),Object.defineProperty(v,O,{enumerable:!1}))}return v}\\\"object\\\"==typeof s&&(f=s.depth,c=s.prototype,l=s.includeNonEnumerable,s=s.circular);var h=[],y=[],d=void 0!==t;return void 0===s&&(s=!0),void 0===f&&(f=1/0),p(r,f)}function r(t){return Object.prototype.toString.call(t)}function i(t){var e=\\\"\\\";return t.global&&(e+=\\\"g\\\"),t.ignoreCase&&(e+=\\\"i\\\"),t.multiline&&(e+=\\\"m\\\"),e}var o;try{o=Map}catch(t){o=function(){}}var u;try{u=Set}catch(t){u=function(){}}var a;try{a=Promise}catch(t){a=function(){}}return n.clonePrototype=function(t){if(null===t)return null;var e=function(){};return e.prototype=t,new e},n.__objToStr=r,n.__isDate=function(t){return\\\"object\\\"==typeof t&&\\\"[object Date]\\\"===r(t)},n.__isArray=function(t){return\\\"object\\\"==typeof t&&\\\"[object Array]\\\"===r(t)},n.__isRegExp=function(t){return\\\"object\\\"==typeof t&&\\\"[object RegExp]\\\"===r(t)},n.__getRegExpFlags=i,n}();\\\"object\\\"==typeof e&&e.exports&&(e.exports=n)}).call(this,t(\\\"buffer\\\").Buffer)},{buffer:23}],25:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/object/assign\\\"),i=t(\\\"es5-ext/object/normalize-options\\\"),o=t(\\\"es5-ext/object/is-callable\\\"),u=t(\\\"es5-ext/string/#/contains\\\");(e.exports=function(t,e){var n,o,a,s,f;return arguments.length<2||\\\"string\\\"!=typeof t?(s=e,e=t,t=null):s=arguments[2],null==t?(n=a=!0,o=!1):(n=u.call(t,\\\"c\\\"),o=u.call(t,\\\"e\\\"),a=u.call(t,\\\"w\\\")),f={value:e,configurable:n,enumerable:o,writable:a},s?r(i(s),f):f}).gs=function(t,e,n){var a,s,f,c;return\\\"string\\\"!=typeof t?(f=n,n=e,e=t,t=null):f=arguments[3],null==e?e=void 0:o(e)?null==n?n=void 0:o(n)||(f=n,n=void 0):(f=e,e=n=void 0),null==t?(a=!0,s=!1):(a=u.call(t,\\\"c\\\"),s=u.call(t,\\\"e\\\")),c={get:e,set:n,configurable:a,enumerable:s},f?r(i(f),c):c}},{\\\"es5-ext/object/assign\\\":46,\\\"es5-ext/object/is-callable\\\":50,\\\"es5-ext/object/normalize-options\\\":58,\\\"es5-ext/string/#/contains\\\":61}],26:[function(t,e,n){\\\"use strict\\\";function r(t){return!!t&&\\\"object\\\"==typeof t}function i(t){var e=Object.prototype.toString.call(t);return\\\"[object RegExp]\\\"!==e&&\\\"[object Date]\\\"!==e}function o(t){return Array.isArray(t)?[]:{}}function u(t,e){return e&&!0===e.clone&&c(t)?f(o(t),t,e):t}function a(t,e,n){var r=t.slice();return e.forEach(function(e,i){void 0===r[i]?r[i]=u(e,n):c(e)?r[i]=f(t[i],e,n):-1===t.indexOf(e)&&r.push(u(e,n))}),r}function s(t,e,n){var r={};return c(t)&&Object.keys(t).forEach(function(e){r[e]=u(t[e],n)}),Object.keys(e).forEach(function(i){c(e[i])&&t[i]?r[i]=f(t[i],e[i],n):r[i]=u(e[i],n)}),r}function f(t,e,n){var r=Array.isArray(e),i=Array.isArray(t),o=n||{arrayMerge:a};return r===i?r?(o.arrayMerge||a)(t,e,n):s(t,e,n):u(e,n)}var c=function(t){return r(t)&&i(t)};f.all=function(t,e){if(!Array.isArray(t)||t.length<2)throw new Error(\\\"first argument should be an array with at least two elements\\\");return t.reduce(function(t,n){return f(t,n,e)})};var l=f;e.exports=l},{}],27:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"../../number/is-nan\\\"),i=t(\\\"../../number/to-pos-integer\\\"),o=t(\\\"../../object/valid-value\\\"),u=Array.prototype.indexOf,a=Object.prototype.hasOwnProperty,s=Math.abs,f=Math.floor;e.exports=function(t){var e,n,c,l;if(!r(t))return u.apply(this,arguments);for(n=i(o(this).length),c=arguments[1],e=c=isNaN(c)?0:c>=0?f(c):i(this.length)-f(s(c));e<n;++e)if(a.call(this,e)&&(l=this[e],r(l)))return e;return-1}},{\\\"../../number/is-nan\\\":40,\\\"../../number/to-pos-integer\\\":44,\\\"../../object/valid-value\\\":60}],28:[function(t,e,n){\\\"use strict\\\";e.exports=t(\\\"./is-implemented\\\")()?Array.from:t(\\\"./shim\\\")},{\\\"./is-implemented\\\":29,\\\"./shim\\\":30}],29:[function(t,e,n){\\\"use strict\\\";e.exports=function(){var t,e,n=Array.from;return\\\"function\\\"==typeof n&&(t=[\\\"raz\\\",\\\"dwa\\\"],e=n(t),Boolean(e&&e!==t&&\\\"dwa\\\"===e[1]))}},{}],30:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es6-symbol\\\").iterator,i=t(\\\"../../function/is-arguments\\\"),o=t(\\\"../../function/is-function\\\"),u=t(\\\"../../number/to-pos-integer\\\"),a=t(\\\"../../object/valid-callable\\\"),s=t(\\\"../../object/valid-value\\\"),f=t(\\\"../../object/is-value\\\"),c=t(\\\"../../string/is-string\\\"),l=Array.isArray,p=Function.prototype.call,h={configurable:!0,enumerable:!0,writable:!0,value:null},y=Object.defineProperty;e.exports=function(t){var e,n,d,v,g,b,m,w,_,j,x=arguments[1],O=arguments[2];if(t=Object(s(t)),f(x)&&a(x),this&&this!==Array&&o(this))e=this;else{if(!x){if(i(t))return 1!==(g=t.length)?Array.apply(null,t):(v=new Array(1),v[0]=t[0],v);if(l(t)){for(v=new Array(g=t.length),n=0;n<g;++n)v[n]=t[n];return v}}v=[]}if(!l(t))if(void 0!==(_=t[r])){for(m=a(_).call(t),e&&(v=new e),w=m.next(),n=0;!w.done;)j=x?p.call(x,O,w.value,n):w.value,e?(h.value=j,y(v,n,h)):v[n]=j,w=m.next(),++n;g=n}else if(c(t)){for(g=t.length,e&&(v=new e),n=0,d=0;n<g;++n)j=t[n],n+1<g&&(b=j.charCodeAt(0))>=55296&&b<=56319&&(j+=t[++n]),j=x?p.call(x,O,j,d):j,e?(h.value=j,y(v,d,h)):v[d]=j,++d;g=d}if(void 0===g)for(g=u(t.length),e&&(v=new e(g)),n=0;n<g;++n)j=x?p.call(x,O,t[n],n):t[n],e?(h.value=j,y(v,n,h)):v[n]=j;return e&&(h.value=null,v.length=g),v}},{\\\"../../function/is-arguments\\\":34,\\\"../../function/is-function\\\":35,\\\"../../number/to-pos-integer\\\":44,\\\"../../object/is-value\\\":52,\\\"../../object/valid-callable\\\":59,\\\"../../object/valid-value\\\":60,\\\"../../string/is-string\\\":64,\\\"es6-symbol\\\":65}],31:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"./from\\\"),i=Array.isArray;e.exports=function(t){return i(t)?t:r(t)}},{\\\"./from\\\":28}],32:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"../object/assign\\\"),i=t(\\\"../object/is-object\\\"),o=t(\\\"../object/is-value\\\"),u=Error.captureStackTrace;n=e.exports=function(t){var e=new Error(t),a=arguments[1],s=arguments[2];return o(s)||i(a)&&(s=a,a=null),o(s)&&r(e,s),o(a)&&(e.code=a),u&&u(e,n),e}},{\\\"../object/assign\\\":46,\\\"../object/is-object\\\":51,\\\"../object/is-value\\\":52}],33:[function(t,e,n){\\\"use strict\\\";var r,i,o,u,a=t(\\\"../number/to-pos-integer\\\"),s=function(t,e){return e};try{Object.defineProperty(s,\\\"length\\\",{configurable:!0,writable:!1,enumerable:!1,value:1})}catch(t){}1===s.length?(r={configurable:!0,writable:!1,enumerable:!1},i=Object.defineProperty,e.exports=function(t,e){return e=a(e),t.length===e?t:(r.value=e,i(t,\\\"length\\\",r))}):(u=t(\\\"../object/mixin\\\"),o=function(){var t=[];return function(e){var n,r=0;if(t[e])return t[e];for(n=[];e--;)n.push(\\\"a\\\"+(++r).toString(36));return new Function(\\\"fn\\\",\\\"return function (\\\"+n.join(\\\", \\\")+\\\") { return fn.apply(this, arguments); };\\\")}}(),e.exports=function(t,e){var n;if(e=a(e),t.length===e)return t;n=o(e)(t);try{u(n,t)}catch(t){}return n})},{\\\"../number/to-pos-integer\\\":44,\\\"../object/mixin\\\":57}],34:[function(t,e,n){\\\"use strict\\\";var r=Object.prototype.toString,i=r.call(function(){return arguments}());e.exports=function(t){return r.call(t)===i}},{}],35:[function(t,e,n){\\\"use strict\\\";var r=Object.prototype.toString,i=r.call(t(\\\"./noop\\\"));e.exports=function(t){return\\\"function\\\"==typeof t&&r.call(t)===i}},{\\\"./noop\\\":36}],36:[function(t,e,n){\\\"use strict\\\";e.exports=function(){}},{}],37:[function(t,e,n){\\\"use strict\\\";e.exports=t(\\\"./is-implemented\\\")()?Math.sign:t(\\\"./shim\\\")},{\\\"./is-implemented\\\":38,\\\"./shim\\\":39}],38:[function(t,e,n){\\\"use strict\\\";e.exports=function(){var t=Math.sign;return\\\"function\\\"==typeof t&&(1===t(10)&&-1===t(-20))}},{}],39:[function(t,e,n){\\\"use strict\\\";e.exports=function(t){return t=Number(t),isNaN(t)||0===t?t:t>0?1:-1}},{}],40:[function(t,e,n){\\\"use strict\\\";e.exports=t(\\\"./is-implemented\\\")()?Number.isNaN:t(\\\"./shim\\\")},{\\\"./is-implemented\\\":41,\\\"./shim\\\":42}],41:[function(t,e,n){\\\"use strict\\\";e.exports=function(){var t=Number.isNaN;return\\\"function\\\"==typeof t&&(!t({})&&t(NaN)&&!t(34))}},{}],42:[function(t,e,n){\\\"use strict\\\";e.exports=function(t){return t!==t}},{}],43:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"../math/sign\\\"),i=Math.abs,o=Math.floor;e.exports=function(t){return isNaN(t)?0:0!==(t=Number(t))&&isFinite(t)?r(t)*o(i(t)):t}},{\\\"../math/sign\\\":37}],44:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"./to-integer\\\"),i=Math.max;e.exports=function(t){return i(0,r(t))}},{\\\"./to-integer\\\":43}],45:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"./valid-callable\\\"),i=t(\\\"./valid-value\\\"),o=Function.prototype.bind,u=Function.prototype.call,a=Object.keys,s=Object.prototype.propertyIsEnumerable;e.exports=function(t,e){return function(n,f){var c,l=arguments[2],p=arguments[3];return n=Object(i(n)),r(f),c=a(n),p&&c.sort(\\\"function\\\"==typeof p?o.call(p,n):void 0),\\\"function\\\"!=typeof t&&(t=c[t]),u.call(t,c,function(t,r){return s.call(n,t)?u.call(f,l,n[t],t,n,r):e})}}},{\\\"./valid-callable\\\":59,\\\"./valid-value\\\":60}],46:[function(t,e,n){\\\"use strict\\\";e.exports=t(\\\"./is-implemented\\\")()?Object.assign:t(\\\"./shim\\\")},{\\\"./is-implemented\\\":47,\\\"./shim\\\":48}],47:[function(t,e,n){\\\"use strict\\\";e.exports=function(){var t,e=Object.assign;return\\\"function\\\"==typeof e&&(t={foo:\\\"raz\\\"},e(t,{bar:\\\"dwa\\\"},{trzy:\\\"trzy\\\"}),t.foo+t.bar+t.trzy===\\\"razdwatrzy\\\")}},{}],48:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"../keys\\\"),i=t(\\\"../valid-value\\\"),o=Math.max;e.exports=function(t,e){var n,u,a,s=o(arguments.length,2);for(t=Object(i(t)),a=function(r){try{t[r]=e[r]}catch(t){n||(n=t)}},u=1;u<s;++u)e=arguments[u],r(e).forEach(a);if(void 0!==n)throw n;return t}},{\\\"../keys\\\":53,\\\"../valid-value\\\":60}],49:[function(t,e,n){\\\"use strict\\\";e.exports=t(\\\"./_iterate\\\")(\\\"forEach\\\")},{\\\"./_iterate\\\":45}],50:[function(t,e,n){\\\"use strict\\\";e.exports=function(t){return\\\"function\\\"==typeof t}},{}],51:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"./is-value\\\"),i={function:!0,object:!0};e.exports=function(t){return r(t)&&i[typeof t]||!1}},{\\\"./is-value\\\":52}],52:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"../function/noop\\\")();e.exports=function(t){return t!==r&&null!==t}},{\\\"../function/noop\\\":36}],53:[function(t,e,n){\\\"use strict\\\";e.exports=t(\\\"./is-implemented\\\")()?Object.keys:t(\\\"./shim\\\")},{\\\"./is-implemented\\\":54,\\\"./shim\\\":55}],54:[function(t,e,n){\\\"use strict\\\";e.exports=function(){try{return Object.keys(\\\"primitive\\\"),!0}catch(t){return!1}}},{}],55:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"../is-value\\\"),i=Object.keys;e.exports=function(t){return i(r(t)?Object(t):t)}},{\\\"../is-value\\\":52}],56:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"./valid-callable\\\"),i=t(\\\"./for-each\\\"),o=Function.prototype.call;e.exports=function(t,e){var n={},u=arguments[2];return r(e),i(t,function(t,r,i,a){n[r]=o.call(e,u,t,r,i,a)}),n}},{\\\"./for-each\\\":49,\\\"./valid-callable\\\":59}],57:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"./valid-value\\\"),i=Object.defineProperty,o=Object.getOwnPropertyDescriptor,u=Object.getOwnPropertyNames,a=Object.getOwnPropertySymbols;e.exports=function(t,e){var n,s=Object(r(e));if(t=Object(r(t)),u(s).forEach(function(r){try{i(t,r,o(e,r))}catch(t){n=t}}),\\\"function\\\"==typeof a&&a(s).forEach(function(r){try{i(t,r,o(e,r))}catch(t){n=t}}),void 0!==n)throw n;return t}},{\\\"./valid-value\\\":60}],58:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"./is-value\\\"),i=Array.prototype.forEach,o=Object.create,u=function(t,e){var n;for(n in t)e[n]=t[n]};e.exports=function(t){var e=o(null);return i.call(arguments,function(t){r(t)&&u(Object(t),e)}),e}},{\\\"./is-value\\\":52}],59:[function(t,e,n){\\\"use strict\\\";e.exports=function(t){if(\\\"function\\\"!=typeof t)throw new TypeError(t+\\\" is not a function\\\");return t}},{}],60:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"./is-value\\\");e.exports=function(t){if(!r(t))throw new TypeError(\\\"Cannot use null or undefined\\\");return t}},{\\\"./is-value\\\":52}],61:[function(t,e,n){\\\"use strict\\\";e.exports=t(\\\"./is-implemented\\\")()?String.prototype.contains:t(\\\"./shim\\\")},{\\\"./is-implemented\\\":62,\\\"./shim\\\":63}],62:[function(t,e,n){\\\"use strict\\\";var r=\\\"razdwatrzy\\\";e.exports=function(){return\\\"function\\\"==typeof r.contains&&(!0===r.contains(\\\"dwa\\\")&&!1===r.contains(\\\"foo\\\"))}},{}],63:[function(t,e,n){\\\"use strict\\\";var r=String.prototype.indexOf;e.exports=function(t){return r.call(this,t,arguments[1])>-1}},{}],64:[function(t,e,n){\\\"use strict\\\";var r=Object.prototype.toString,i=r.call(\\\"\\\");e.exports=function(t){return\\\"string\\\"==typeof t||t&&\\\"object\\\"==typeof t&&(t instanceof String||r.call(t)===i)||!1}},{}],65:[function(t,e,n){\\\"use strict\\\";e.exports=t(\\\"./is-implemented\\\")()?Symbol:t(\\\"./polyfill\\\")},{\\\"./is-implemented\\\":66,\\\"./polyfill\\\":68}],66:[function(t,e,n){\\\"use strict\\\";var r={object:!0,symbol:!0};e.exports=function(){var t;if(\\\"function\\\"!=typeof Symbol)return!1;t=Symbol(\\\"test symbol\\\");try{String(t)}catch(t){return!1}return!!r[typeof Symbol.iterator]&&(!!r[typeof Symbol.toPrimitive]&&!!r[typeof Symbol.toStringTag])}},{}],67:[function(t,e,n){\\\"use strict\\\";e.exports=function(t){return!!t&&(\\\"symbol\\\"==typeof t||!!t.constructor&&(\\\"Symbol\\\"===t.constructor.name&&\\\"Symbol\\\"===t[t.constructor.toStringTag]))}},{}],68:[function(t,e,n){\\\"use strict\\\";var r,i,o,u,a=t(\\\"d\\\"),s=t(\\\"./validate-symbol\\\"),f=Object.create,c=Object.defineProperties,l=Object.defineProperty,p=Object.prototype,h=f(null);if(\\\"function\\\"==typeof Symbol){r=Symbol;try{String(r()),u=!0}catch(t){}}var y=function(){var t=f(null);return function(e){for(var n,r,i=0;t[e+(i||\\\"\\\")];)++i;return e+=i||\\\"\\\",t[e]=!0,n=\\\"@@\\\"+e,l(p,n,a.gs(null,function(t){r||(r=!0,l(this,n,a(t)),r=!1)})),n}}();o=function(t){if(this instanceof o)throw new TypeError(\\\"Symbol is not a constructor\\\");return i(t)},e.exports=i=function t(e){var n;if(this instanceof t)throw new TypeError(\\\"Symbol is not a constructor\\\");return u?r(e):(n=f(o.prototype),e=void 0===e?\\\"\\\":String(e),c(n,{__description__:a(\\\"\\\",e),__name__:a(\\\"\\\",y(e))}))},c(i,{for:a(function(t){return h[t]?h[t]:h[t]=i(String(t))}),keyFor:a(function(t){var e;s(t);for(e in h)if(h[e]===t)return e}),hasInstance:a(\\\"\\\",r&&r.hasInstance||i(\\\"hasInstance\\\")),isConcatSpreadable:a(\\\"\\\",r&&r.isConcatSpreadable||i(\\\"isConcatSpreadable\\\")),iterator:a(\\\"\\\",r&&r.iterator||i(\\\"iterator\\\")),match:a(\\\"\\\",r&&r.match||i(\\\"match\\\")),replace:a(\\\"\\\",r&&r.replace||i(\\\"replace\\\")),search:a(\\\"\\\",r&&r.search||i(\\\"search\\\")),species:a(\\\"\\\",r&&r.species||i(\\\"species\\\")),split:a(\\\"\\\",r&&r.split||i(\\\"split\\\")),toPrimitive:a(\\\"\\\",r&&r.toPrimitive||i(\\\"toPrimitive\\\")),toStringTag:a(\\\"\\\",r&&r.toStringTag||i(\\\"toStringTag\\\")),unscopables:a(\\\"\\\",r&&r.unscopables||i(\\\"unscopables\\\"))}),c(o.prototype,{constructor:a(i),toString:a(\\\"\\\",function(){return this.__name__})}),c(i.prototype,{toString:a(function(){return\\\"Symbol (\\\"+s(this).__description__+\\\")\\\"}),valueOf:a(function(){return s(this)})}),l(i.prototype,i.toPrimitive,a(\\\"\\\",function(){var t=s(this);return\\\"symbol\\\"==typeof t?t:t.toString()})),l(i.prototype,i.toStringTag,a(\\\"c\\\",\\\"Symbol\\\")),l(o.prototype,i.toStringTag,a(\\\"c\\\",i.prototype[i.toStringTag])),l(o.prototype,i.toPrimitive,a(\\\"c\\\",i.prototype[i.toPrimitive]))},{\\\"./validate-symbol\\\":69,d:25}],69:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"./is-symbol\\\");e.exports=function(t){if(!r(t))throw new TypeError(t+\\\" is not a symbol\\\");return t}},{\\\"./is-symbol\\\":67}],70:[function(t,e,n){\\\"use strict\\\";var r,i,o,u,a,s,f,c=t(\\\"d\\\"),l=t(\\\"es5-ext/object/valid-callable\\\"),p=Function.prototype.apply,h=Function.prototype.call,y=Object.create,d=Object.defineProperty,v=Object.defineProperties,g=Object.prototype.hasOwnProperty,b={configurable:!0,enumerable:!1,writable:!0};a={on:r=function(t,e){var n;return l(e),g.call(this,\\\"__ee__\\\")?n=this.__ee__:(n=b.value=y(null),d(this,\\\"__ee__\\\",b),b.value=null),n[t]?\\\"object\\\"==typeof n[t]?n[t].push(e):n[t]=[n[t],e]:n[t]=e,this},once:i=function(t,e){var n,i;return l(e),i=this,r.call(this,t,n=function(){o.call(i,t,n),p.call(e,this,arguments)}),n.__eeOnceListener__=e,this},off:o=function(t,e){var n,r,i,o;if(l(e),!g.call(this,\\\"__ee__\\\"))return this;if(!(n=this.__ee__)[t])return this;if(\\\"object\\\"==typeof(r=n[t]))for(o=0;i=r[o];++o)i!==e&&i.__eeOnceListener__!==e||(2===r.length?n[t]=r[o?0:1]:r.splice(o,1));else r!==e&&r.__eeOnceListener__!==e||delete n[t];return this},emit:u=function(t){var e,n,r,i,o;if(g.call(this,\\\"__ee__\\\")&&(i=this.__ee__[t]))if(\\\"object\\\"==typeof i){for(n=arguments.length,o=new Array(n-1),e=1;e<n;++e)o[e-1]=arguments[e];for(i=i.slice(),e=0;r=i[e];++e)p.call(r,this,o)}else switch(arguments.length){case 1:h.call(i,this);break;case 2:h.call(i,this,arguments[1]);break;case 3:h.call(i,this,arguments[1],arguments[2]);break;default:for(n=arguments.length,o=new Array(n-1),e=1;e<n;++e)o[e-1]=arguments[e];p.call(i,this,o)}}},s={on:c(r),once:c(i),off:c(o),emit:c(u)},f=v({},s),e.exports=n=function(t){return null==t?y(f):v(Object(t),s)},n.methods=a},{d:25,\\\"es5-ext/object/valid-callable\\\":59}],71:[function(t,e,n){function r(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function i(t){return\\\"function\\\"==typeof t}function o(t){return\\\"number\\\"==typeof t}function u(t){return\\\"object\\\"==typeof t&&null!==t}function a(t){return void 0===t}e.exports=r,r.EventEmitter=r,r.prototype._events=void 0,r.prototype._maxListeners=void 0,r.defaultMaxListeners=10,r.prototype.setMaxListeners=function(t){if(!o(t)||t<0||isNaN(t))throw TypeError(\\\"n must be a positive number\\\");return this._maxListeners=t,this},r.prototype.emit=function(t){var e,n,r,o,s,f;if(this._events||(this._events={}),\\\"error\\\"===t&&(!this._events.error||u(this._events.error)&&!this._events.error.length)){if((e=arguments[1])instanceof Error)throw e;var c=new Error('Uncaught, unspecified \\\"error\\\" event. ('+e+\\\")\\\");throw c.context=e,c}if(n=this._events[t],a(n))return!1;if(i(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:o=Array.prototype.slice.call(arguments,1),n.apply(this,o)}else if(u(n))for(o=Array.prototype.slice.call(arguments,1),r=(f=n.slice()).length,s=0;s<r;s++)f[s].apply(this,o);return!0},r.prototype.addListener=function(t,e){var n;if(!i(e))throw TypeError(\\\"listener must be a function\\\");return this._events||(this._events={}),this._events.newListener&&this.emit(\\\"newListener\\\",t,i(e.listener)?e.listener:e),this._events[t]?u(this._events[t])?this._events[t].push(e):this._events[t]=[this._events[t],e]:this._events[t]=e,u(this._events[t])&&!this._events[t].warned&&(n=a(this._maxListeners)?r.defaultMaxListeners:this._maxListeners)&&n>0&&this._events[t].length>n&&(this._events[t].warned=!0,console.error(\\\"(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.\\\",this._events[t].length),\\\"function\\\"==typeof console.trace&&console.trace()),this},r.prototype.on=r.prototype.addListener,r.prototype.once=function(t,e){function n(){this.removeListener(t,n),r||(r=!0,e.apply(this,arguments))}if(!i(e))throw TypeError(\\\"listener must be a function\\\");var r=!1;return n.listener=e,this.on(t,n),this},r.prototype.removeListener=function(t,e){var n,r,o,a;if(!i(e))throw TypeError(\\\"listener must be a function\\\");if(!this._events||!this._events[t])return this;if(n=this._events[t],o=n.length,r=-1,n===e||i(n.listener)&&n.listener===e)delete this._events[t],this._events.removeListener&&this.emit(\\\"removeListener\\\",t,e);else if(u(n)){for(a=o;a-- >0;)if(n[a]===e||n[a].listener&&n[a].listener===e){r=a;break}if(r<0)return this;1===n.length?(n.length=0,delete this._events[t]):n.splice(r,1),this._events.removeListener&&this.emit(\\\"removeListener\\\",t,e)}return this},r.prototype.removeAllListeners=function(t){var e,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[t]&&delete this._events[t],this;if(0===arguments.length){for(e in this._events)\\\"removeListener\\\"!==e&&this.removeAllListeners(e);return this.removeAllListeners(\\\"removeListener\\\"),this._events={},this}if(n=this._events[t],i(n))this.removeListener(t,n);else if(n)for(;n.length;)this.removeListener(t,n[n.length-1]);return delete this._events[t],this},r.prototype.listeners=function(t){return this._events&&this._events[t]?i(this._events[t])?[this._events[t]]:this._events[t].slice():[]},r.prototype.listenerCount=function(t){if(this._events){var e=this._events[t];if(i(e))return 1;if(e)return e.length}return 0},r.listenerCount=function(t,e){return t.listenerCount(e)}},{}],72:[function(t,e,n){n.read=function(t,e,n,r,i){var o,u,a=8*i-r-1,s=(1<<a)-1,f=s>>1,c=-7,l=n?i-1:0,p=n?-1:1,h=t[e+l];for(l+=p,o=h&(1<<-c)-1,h>>=-c,c+=a;c>0;o=256*o+t[e+l],l+=p,c-=8);for(u=o&(1<<-c)-1,o>>=-c,c+=r;c>0;u=256*u+t[e+l],l+=p,c-=8);if(0===o)o=1-f;else{if(o===s)return u?NaN:1/0*(h?-1:1);u+=Math.pow(2,r),o-=f}return(h?-1:1)*u*Math.pow(2,o-r)},n.write=function(t,e,n,r,i,o){var u,a,s,f=8*o-i-1,c=(1<<f)-1,l=c>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:o-1,y=r?1:-1,d=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,u=c):(u=Math.floor(Math.log(e)/Math.LN2),e*(s=Math.pow(2,-u))<1&&(u--,s*=2),(e+=u+l>=1?p/s:p*Math.pow(2,1-l))*s>=2&&(u++,s/=2),u+l>=c?(a=0,u=c):u+l>=1?(a=(e*s-1)*Math.pow(2,i),u+=l):(a=e*Math.pow(2,l-1)*Math.pow(2,i),u=0));i>=8;t[n+h]=255&a,h+=y,a/=256,i-=8);for(u=u<<i|a,f+=i;f>0;t[n+h]=255&u,h+=y,u/=256,f-=8);t[n+h-y]|=128*d}},{}],73:[function(t,e,n){e.exports=function(t){return!!t&&(\\\"object\\\"==typeof t||\\\"function\\\"==typeof t)&&\\\"function\\\"==typeof t.then}},{}],74:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/number/to-pos-integer\\\"),i=Object.create,o=Object.prototype.hasOwnProperty;e.exports=function(t){var e,n=0,u=1,a=i(null),s=i(null),f=0;return t=r(t),{hit:function(r){var i=s[r],c=++f;if(a[c]=r,s[r]=c,!i){if(++n<=t)return;return r=a[u],e(r),r}if(delete a[i],u===i)for(;!o.call(a,++u);)continue},delete:e=function(t){var e=s[t];if(e&&(delete a[e],delete s[t],--n,u===e)){if(!n)return f=0,void(u=1);for(;!o.call(a,++u);)continue}},clear:function(){n=0,u=1,a=i(null),s=i(null),f=0}}}},{\\\"es5-ext/number/to-pos-integer\\\":44}],75:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/array/from\\\"),i=t(\\\"es5-ext/object/map\\\"),o=t(\\\"es5-ext/object/mixin\\\"),u=t(\\\"es5-ext/function/_define-length\\\"),a=t(\\\"next-tick\\\"),s=Array.prototype.slice,f=Function.prototype.apply,c=Object.create,l=Object.prototype.hasOwnProperty;t(\\\"../lib/registered-extensions\\\").async=function(t,e){var n,p,h,y=c(null),d=c(null),v=e.memoized,g=e.original;e.memoized=u(function(t){var e=arguments,r=e[e.length-1];return\\\"function\\\"==typeof r&&(n=r,e=s.call(e,0,-1)),v.apply(p=this,h=e)},v);try{o(e.memoized,v)}catch(t){}e.on(\\\"get\\\",function(t){var r,i,o;if(n){if(y[t])return\\\"function\\\"==typeof y[t]?y[t]=[y[t],n]:y[t].push(n),void(n=null);r=n,i=p,o=h,n=p=h=null,a(function(){var u;l.call(d,t)?(u=d[t],e.emit(\\\"getasync\\\",t,o,i),f.call(r,u.context,u.args)):(n=r,p=i,h=o,v.apply(i,o))})}}),e.original=function(){var t,i,o,u;return n?(t=r(arguments),i=function t(n){var i,o,s=t.id;if(null!=s){if(delete t.id,i=y[s],delete y[s],i)return o=r(arguments),e.has(s)&&(n?e.delete(s):(d[s]={context:this,args:o},e.emit(\\\"setasync\\\",s,\\\"function\\\"==typeof i?1:i.length))),\\\"function\\\"==typeof i?u=f.call(i,this,o):i.forEach(function(t){u=f.call(t,this,o)},this),u}else a(f.bind(t,this,arguments))},o=n,n=p=h=null,t.push(i),u=f.call(g,this,t),i.cb=o,n=i,u):f.call(g,this,arguments)},e.on(\\\"set\\\",function(t){n?(y[t]?\\\"function\\\"==typeof y[t]?y[t]=[y[t],n.cb]:y[t].push(n.cb):y[t]=n.cb,delete n.cb,n.id=t,n=null):e.delete(t)}),e.on(\\\"delete\\\",function(t){var n;l.call(y,t)||d[t]&&(n=d[t],delete d[t],e.emit(\\\"deleteasync\\\",t,s.call(n.args,1)))}),e.on(\\\"clear\\\",function(){var t=d;d=c(null),e.emit(\\\"clearasync\\\",i(t,function(t){return s.call(t.args,1)}))})}},{\\\"../lib/registered-extensions\\\":83,\\\"es5-ext/array/from\\\":28,\\\"es5-ext/function/_define-length\\\":33,\\\"es5-ext/object/map\\\":56,\\\"es5-ext/object/mixin\\\":57,\\\"next-tick\\\":93}],76:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/object/valid-callable\\\"),i=t(\\\"es5-ext/object/for-each\\\"),o=t(\\\"../lib/registered-extensions\\\"),u=Function.prototype.apply;o.dispose=function(t,e,n){var a;if(r(t),n.async&&o.async||n.promise&&o.promise)return e.on(\\\"deleteasync\\\",a=function(e,n){u.call(t,null,n)}),void e.on(\\\"clearasync\\\",function(t){i(t,function(t,e){a(e,t)})});e.on(\\\"delete\\\",a=function(e,n){t(n)}),e.on(\\\"clear\\\",function(t){i(t,function(t,e){a(e,t)})})}},{\\\"../lib/registered-extensions\\\":83,\\\"es5-ext/object/for-each\\\":49,\\\"es5-ext/object/valid-callable\\\":59}],77:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/array/from\\\"),i=t(\\\"es5-ext/object/for-each\\\"),o=t(\\\"next-tick\\\"),u=t(\\\"is-promise\\\"),a=t(\\\"timers-ext/valid-timeout\\\"),s=t(\\\"../lib/registered-extensions\\\"),f=Function.prototype,c=Math.max,l=Math.min,p=Object.create;s.maxAge=function(t,e,n){var h,y,d,v;(t=a(t))&&(h=p(null),y=n.async&&s.async||n.promise&&s.promise?\\\"async\\\":\\\"\\\",e.on(\\\"set\\\"+y,function(n){h[n]=setTimeout(function(){e.delete(n)},t),v&&(v[n]&&\\\"nextTick\\\"!==v[n]&&clearTimeout(v[n]),v[n]=setTimeout(function(){delete v[n]},d))}),e.on(\\\"delete\\\"+y,function(t){clearTimeout(h[t]),delete h[t],v&&(\\\"nextTick\\\"!==v[t]&&clearTimeout(v[t]),delete v[t])}),n.preFetch&&(d=!0===n.preFetch||isNaN(n.preFetch)?.333:c(l(Number(n.preFetch),1),0))&&(v={},d=(1-d)*t,e.on(\\\"get\\\"+y,function(t,i,a){v[t]||(v[t]=\\\"nextTick\\\",o(function(){var o;\\\"nextTick\\\"===v[t]&&(delete v[t],e.delete(t),n.async&&(i=r(i)).push(f),o=e.memoized.apply(a,i),n.promise&&u(o)&&(\\\"function\\\"==typeof o.done?o.done(f,f):o.then(f,f)))}))})),e.on(\\\"clear\\\"+y,function(){i(h,function(t){clearTimeout(t)}),h={},v&&(i(v,function(t){\\\"nextTick\\\"!==t&&clearTimeout(t)}),v={})}))}},{\\\"../lib/registered-extensions\\\":83,\\\"es5-ext/array/from\\\":28,\\\"es5-ext/object/for-each\\\":49,\\\"is-promise\\\":73,\\\"next-tick\\\":93,\\\"timers-ext/valid-timeout\\\":98}],78:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/number/to-pos-integer\\\"),i=t(\\\"lru-queue\\\"),o=t(\\\"../lib/registered-extensions\\\");o.max=function(t,e,n){var u,a,s;(t=r(t))&&(a=i(t),u=n.async&&o.async||n.promise&&o.promise?\\\"async\\\":\\\"\\\",e.on(\\\"set\\\"+u,s=function(t){void 0!==(t=a.hit(t))&&e.delete(t)}),e.on(\\\"get\\\"+u,s),e.on(\\\"delete\\\"+u,a.delete),e.on(\\\"clear\\\"+u,a.clear))}},{\\\"../lib/registered-extensions\\\":83,\\\"es5-ext/number/to-pos-integer\\\":44,\\\"lru-queue\\\":74}],79:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/object/map\\\"),i=t(\\\"is-promise\\\"),o=t(\\\"next-tick\\\"),u=Object.create,a=Object.prototype.hasOwnProperty;t(\\\"../lib/registered-extensions\\\").promise=function(t,e){var n=u(null),s=u(null),f=u(null);e.on(\\\"set\\\",function(r,u,a){var c=!1;if(!i(a))return s[r]=a,void e.emit(\\\"setasync\\\",r,1);n[r]=1,f[r]=a;var l=function(t){var i=n[r];if(c)throw new Error(\\\"Memoizee error: Promise resolved with both failure and success, this can be result of unordered done & finally resolution.\\\\nInstead of `promise: true` consider configuring memoization via `promise: 'then'` or `promise: 'done'\\\");i&&(delete n[r],s[r]=t,e.emit(\\\"setasync\\\",r,i))},p=function(){c=!0,n[r]&&(delete n[r],delete f[r],e.delete(r))};\\\"then\\\"!==t&&\\\"function\\\"==typeof a.done?\\\"done\\\"!==t&&\\\"function\\\"==typeof a.finally?(a.done(l),a.finally(p)):a.done(l,p):a.then(function(t){o(l.bind(this,t))},function(){o(p)})}),e.on(\\\"get\\\",function(t,r,u){var a;if(n[t])++n[t];else{a=f[t];var s=function(){e.emit(\\\"getasync\\\",t,r,u)};i(a)?\\\"function\\\"==typeof a.done?a.done(s):a.then(function(){o(s)}):s()}}),e.on(\\\"delete\\\",function(t){if(delete f[t],n[t])delete n[t];else if(a.call(s,t)){var r=s[t];delete s[t],e.emit(\\\"deleteasync\\\",t,[r])}}),e.on(\\\"clear\\\",function(){var t=s;s=u(null),n=u(null),f=u(null),e.emit(\\\"clearasync\\\",r(t,function(t){return[t]}))})}},{\\\"../lib/registered-extensions\\\":83,\\\"es5-ext/object/map\\\":56,\\\"is-promise\\\":73,\\\"next-tick\\\":93}],80:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"d\\\"),i=t(\\\"../lib/registered-extensions\\\"),o=Object.create,u=Object.defineProperties;i.refCounter=function(t,e,n){var a,s;a=o(null),s=n.async&&i.async||n.promise&&i.promise?\\\"async\\\":\\\"\\\",e.on(\\\"set\\\"+s,function(t,e){a[t]=e||1}),e.on(\\\"get\\\"+s,function(t){++a[t]}),e.on(\\\"delete\\\"+s,function(t){delete a[t]}),e.on(\\\"clear\\\"+s,function(){a={}}),u(e.memoized,{deleteRef:r(function(){var t=e.get(arguments);return null===t?null:a[t]?!--a[t]&&(e.delete(t),!0):null}),getRefCount:r(function(){var t=e.get(arguments);return null===t?0:a[t]?a[t]:0})})}},{\\\"../lib/registered-extensions\\\":83,d:25}],81:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/object/normalize-options\\\"),i=t(\\\"./lib/resolve-length\\\"),o=t(\\\"./plain\\\");e.exports=function(e){var n,u=r(arguments[1]);return u.normalizer||0!==(n=u.length=i(u.length,e.length,u.async))&&(u.primitive?!1===n?u.normalizer=t(\\\"./normalizers/primitive\\\"):n>1&&(u.normalizer=t(\\\"./normalizers/get-primitive-fixed\\\")(n)):u.normalizer=!1===n?t(\\\"./normalizers/get\\\")():1===n?t(\\\"./normalizers/get-1\\\")():t(\\\"./normalizers/get-fixed\\\")(n)),u.async&&t(\\\"./ext/async\\\"),u.promise&&t(\\\"./ext/promise\\\"),u.dispose&&t(\\\"./ext/dispose\\\"),u.maxAge&&t(\\\"./ext/max-age\\\"),u.max&&t(\\\"./ext/max\\\"),u.refCounter&&t(\\\"./ext/ref-counter\\\"),o(e,u)}},{\\\"./ext/async\\\":75,\\\"./ext/dispose\\\":76,\\\"./ext/max\\\":78,\\\"./ext/max-age\\\":77,\\\"./ext/promise\\\":79,\\\"./ext/ref-counter\\\":80,\\\"./lib/resolve-length\\\":84,\\\"./normalizers/get\\\":90,\\\"./normalizers/get-1\\\":87,\\\"./normalizers/get-fixed\\\":88,\\\"./normalizers/get-primitive-fixed\\\":89,\\\"./normalizers/primitive\\\":91,\\\"./plain\\\":92,\\\"es5-ext/object/normalize-options\\\":58}],82:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/error/custom\\\"),i=t(\\\"es5-ext/function/_define-length\\\"),o=t(\\\"d\\\"),u=t(\\\"event-emitter\\\").methods,a=t(\\\"./resolve-resolve\\\"),s=t(\\\"./resolve-normalize\\\"),f=Function.prototype.apply,c=Function.prototype.call,l=Object.create,p=Object.prototype.hasOwnProperty,h=Object.defineProperties,y=u.on,d=u.emit;e.exports=function(t,e,n){var u,v,g,b,m,w,_,j,x,O,k,E,A,S,I,T=l(null);return v=!1!==e?e:isNaN(t.length)?1:t.length,n.normalizer&&(O=s(n.normalizer),g=O.get,b=O.set,m=O.delete,w=O.clear),null!=n.resolvers&&(I=a(n.resolvers)),S=g?i(function(e){var n,i,o=arguments;if(I&&(o=I(o)),null!==(n=g(o))&&p.call(T,n))return k&&u.emit(\\\"get\\\",n,o,this),T[n];if(i=1===o.length?c.call(t,this,o[0]):f.call(t,this,o),null===n){if(null!==(n=g(o)))throw r(\\\"Circular invocation\\\",\\\"CIRCULAR_INVOCATION\\\");n=b(o)}else if(p.call(T,n))throw r(\\\"Circular invocation\\\",\\\"CIRCULAR_INVOCATION\\\");return T[n]=i,E&&u.emit(\\\"set\\\",n,null,i),i},v):0===e?function(){var e;if(p.call(T,\\\"data\\\"))return k&&u.emit(\\\"get\\\",\\\"data\\\",arguments,this),T.data;if(e=arguments.length?f.call(t,this,arguments):c.call(t,this),p.call(T,\\\"data\\\"))throw r(\\\"Circular invocation\\\",\\\"CIRCULAR_INVOCATION\\\");return T.data=e,E&&u.emit(\\\"set\\\",\\\"data\\\",null,e),e}:function(e){var n,i,o=arguments;if(I&&(o=I(arguments)),i=String(o[0]),p.call(T,i))return k&&u.emit(\\\"get\\\",i,o,this),T[i];if(n=1===o.length?c.call(t,this,o[0]):f.call(t,this,o),p.call(T,i))throw r(\\\"Circular invocation\\\",\\\"CIRCULAR_INVOCATION\\\");return T[i]=n,E&&u.emit(\\\"set\\\",i,null,n),n},u={original:t,memoized:S,get:function(t){return I&&(t=I(t)),g?g(t):String(t[0])},has:function(t){return p.call(T,t)},delete:function(t){var e;p.call(T,t)&&(m&&m(t),e=T[t],delete T[t],A&&u.emit(\\\"delete\\\",t,e))},clear:function(){var t=T;w&&w(),T=l(null),u.emit(\\\"clear\\\",t)},on:function(t,e){return\\\"get\\\"===t?k=!0:\\\"set\\\"===t?E=!0:\\\"delete\\\"===t&&(A=!0),y.call(this,t,e)},emit:d,updateEnv:function(){t=u.original}},_=g?i(function(t){var e,n=arguments;I&&(n=I(n)),null!==(e=g(n))&&u.delete(e)},v):0===e?function(){return u.delete(\\\"data\\\")}:function(t){return I&&(t=I(arguments)[0]),u.delete(t)},j=i(function(){var t,e=arguments;return I&&(e=I(e)),t=g(e),T[t]}),x=i(function(){var t,e=arguments;return I&&(e=I(e)),null!==(t=g(e))&&u.has(t)}),h(S,{__memoized__:o(!0),delete:o(_),clear:o(u.clear),_get:o(j),_has:o(x)}),u}},{\\\"./resolve-normalize\\\":85,\\\"./resolve-resolve\\\":86,d:25,\\\"es5-ext/error/custom\\\":32,\\\"es5-ext/function/_define-length\\\":33,\\\"event-emitter\\\":70}],83:[function(t,e,n){\\\"use strict\\\"},{}],84:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/number/to-pos-integer\\\");e.exports=function(t,e,n){var i;return isNaN(t)?(i=e)>=0?n&&i?i-1:i:1:!1!==t&&r(t)}},{\\\"es5-ext/number/to-pos-integer\\\":44}],85:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/object/valid-callable\\\");e.exports=function(t){var e;return\\\"function\\\"==typeof t?{set:t,get:t}:(e={get:r(t.get)},void 0!==t.set?(e.set=r(t.set),t.delete&&(e.delete=r(t.delete)),t.clear&&(e.clear=r(t.clear)),e):(e.set=e.get,e))}},{\\\"es5-ext/object/valid-callable\\\":59}],86:[function(t,e,n){\\\"use strict\\\";var r,i=t(\\\"es5-ext/array/to-array\\\"),o=t(\\\"es5-ext/object/valid-callable\\\"),u=Array.prototype.slice;r=function(t){return this.map(function(e,n){return e?e(t[n]):t[n]}).concat(u.call(t,this.length))},e.exports=function(t){return(t=i(t)).forEach(function(t){null!=t&&o(t)}),r.bind(t)}},{\\\"es5-ext/array/to-array\\\":31,\\\"es5-ext/object/valid-callable\\\":59}],87:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/array/#/e-index-of\\\");e.exports=function(){var t=0,e=[],n=[];return{get:function(t){var i=r.call(e,t[0]);return-1===i?null:n[i]},set:function(r){return e.push(r[0]),n.push(++t),t},delete:function(t){var i=r.call(n,t);-1!==i&&(e.splice(i,1),n.splice(i,1))},clear:function(){e=[],n=[]}}}},{\\\"es5-ext/array/#/e-index-of\\\":27}],88:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/array/#/e-index-of\\\"),i=Object.create;e.exports=function(t){var e=0,n=[[],[]],o=i(null);return{get:function(e){for(var i,o=0,u=n;o<t-1;){if(-1===(i=r.call(u[0],e[o])))return null;u=u[1][i],++o}return-1===(i=r.call(u[0],e[o]))?null:u[1][i]||null},set:function(i){for(var u,a=0,s=n;a<t-1;)-1===(u=r.call(s[0],i[a]))&&(u=s[0].push(i[a])-1,s[1].push([[],[]])),s=s[1][u],++a;return-1===(u=r.call(s[0],i[a]))&&(u=s[0].push(i[a])-1),s[1][u]=++e,o[e]=i,e},delete:function(e){for(var i,u=0,a=n,s=[],f=o[e];u<t-1;){if(-1===(i=r.call(a[0],f[u])))return;s.push(a,i),a=a[1][i],++u}if(-1!==(i=r.call(a[0],f[u]))){for(e=a[1][i],a[0].splice(i,1),a[1].splice(i,1);!a[0].length&&s.length;)i=s.pop(),(a=s.pop())[0].splice(i,1),a[1].splice(i,1);delete o[e]}},clear:function(){n=[[],[]],o=i(null)}}}},{\\\"es5-ext/array/#/e-index-of\\\":27}],89:[function(t,e,n){\\\"use strict\\\";e.exports=function(t){return t?function(e){for(var n=String(e[0]),r=0,i=t;--i;)n+=\\\"\\u0001\\\"+e[++r];return n}:function(){return\\\"\\\"}}},{}],90:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/array/#/e-index-of\\\"),i=Object.create;e.exports=function(){var t=0,e=[],n=i(null);return{get:function(t){var n,i=0,o=e,u=t.length;if(0===u)return o[u]||null;if(o=o[u]){for(;i<u-1;){if(-1===(n=r.call(o[0],t[i])))return null;o=o[1][n],++i}return-1===(n=r.call(o[0],t[i]))?null:o[1][n]||null}return null},set:function(i){var o,u=0,a=e,s=i.length;if(0===s)a[s]=++t;else{for(a[s]||(a[s]=[[],[]]),a=a[s];u<s-1;)-1===(o=r.call(a[0],i[u]))&&(o=a[0].push(i[u])-1,a[1].push([[],[]])),a=a[1][o],++u;-1===(o=r.call(a[0],i[u]))&&(o=a[0].push(i[u])-1),a[1][o]=++t}return n[t]=i,t},delete:function(t){var i,o=0,u=e,a=n[t],s=a.length,f=[];if(0===s)delete u[s];else if(u=u[s]){for(;o<s-1;){if(-1===(i=r.call(u[0],a[o])))return;f.push(u,i),u=u[1][i],++o}if(-1===(i=r.call(u[0],a[o])))return;for(t=u[1][i],u[0].splice(i,1),u[1].splice(i,1);!u[0].length&&f.length;)i=f.pop(),(u=f.pop())[0].splice(i,1),u[1].splice(i,1)}delete n[t]},clear:function(){e=[],n=i(null)}}}},{\\\"es5-ext/array/#/e-index-of\\\":27}],91:[function(t,e,n){\\\"use strict\\\";e.exports=function(t){var e,n,r=t.length;if(!r)return\\\"\\u0002\\\";for(e=String(t[n=0]);--r;)e+=\\\"\\u0001\\\"+t[++n];return e}},{}],92:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/object/valid-callable\\\"),i=t(\\\"es5-ext/object/for-each\\\"),o=t(\\\"./lib/registered-extensions\\\"),u=t(\\\"./lib/configure-map\\\"),a=t(\\\"./lib/resolve-length\\\"),s=Object.prototype.hasOwnProperty;e.exports=function t(e){var n,f,c;if(r(e),(n=Object(arguments[1])).async&&n.promise)throw new Error(\\\"Options 'async' and 'promise' cannot be used together\\\");return s.call(e,\\\"__memoized__\\\")&&!n.force?e:(f=a(n.length,e.length,n.async&&o.async),c=u(e,f,n),i(o,function(t,e){n[e]&&t(n[e],c,n)}),t.__profiler__&&t.__profiler__(c),c.updateEnv(),c.memoized)}},{\\\"./lib/configure-map\\\":82,\\\"./lib/registered-extensions\\\":83,\\\"./lib/resolve-length\\\":84,\\\"es5-ext/object/for-each\\\":49,\\\"es5-ext/object/valid-callable\\\":59}],93:[function(t,e,n){(function(t){\\\"use strict\\\";var n,r;n=function(t){if(\\\"function\\\"!=typeof t)throw new TypeError(t+\\\" is not a function\\\");return t},r=function(t){var e,r,i=document.createTextNode(\\\"\\\"),o=0;return new t(function(){var t;if(e)r&&(e=r.concat(e));else{if(!r)return;e=r}if(r=e,e=null,\\\"function\\\"==typeof r)return t=r,r=null,void t();for(i.data=o=++o%2;r;)t=r.shift(),r.length||(r=null),t()}).observe(i,{characterData:!0}),function(t){n(t),e?\\\"function\\\"==typeof e?e=[e,t]:e.push(t):(e=t,i.data=o=++o%2)}},e.exports=function(){if(\\\"object\\\"==typeof t&&t&&\\\"function\\\"==typeof t.nextTick)return t.nextTick;if(\\\"object\\\"==typeof document&&document){if(\\\"function\\\"==typeof MutationObserver)return r(MutationObserver);if(\\\"function\\\"==typeof WebKitMutationObserver)return r(WebKitMutationObserver)}return\\\"function\\\"==typeof setImmediate?function(t){setImmediate(n(t))}:\\\"function\\\"==typeof setTimeout||\\\"object\\\"==typeof setTimeout?function(t){setTimeout(n(t),0)}:null}()}).call(this,t(\\\"_process\\\"))},{_process:95}],94:[function(t,e,n){(function(r){!function(t){if(\\\"object\\\"==typeof n)e.exports=t();else{var i;\\\"undefined\\\"!=typeof window?i=window:void 0!==r?i=r:\\\"undefined\\\"!=typeof self&&(i=self),i.objectHash=t()}}(function(){return function e(n,r,i){function o(a,s){if(!r[a]){if(!n[a]){var f=\\\"function\\\"==typeof t&&t;if(!s&&f)return f(a,!0);if(u)return u(a,!0);throw new Error(\\\"Cannot find module '\\\"+a+\\\"'\\\")}var c=r[a]={exports:{}};n[a][0].call(c.exports,function(t){var e=n[a][1][t];return o(e||t)},c,c.exports,e,n,r,i)}return r[a].exports}for(var u=\\\"function\\\"==typeof t&&t,a=0;a<i.length;a++)o(i[a]);return o}({1:[function(t,e,n){(function(r,i,o,u,a,s,f,c,l){\\\"use strict\\\";function p(t,e){return e=h(t,e),d(t,e)}function h(t,e){if(e=e||{},e.algorithm=e.algorithm||\\\"sha1\\\",e.encoding=e.encoding||\\\"hex\\\",e.excludeValues=!!e.excludeValues,e.algorithm=e.algorithm.toLowerCase(),e.encoding=e.encoding.toLowerCase(),e.ignoreUnknown=!0===e.ignoreUnknown,e.respectType=!1!==e.respectType,e.respectFunctionNames=!1!==e.respectFunctionNames,e.respectFunctionProperties=!1!==e.respectFunctionProperties,e.unorderedArrays=!0===e.unorderedArrays,e.unorderedSets=!1!==e.unorderedSets,e.replacer=e.replacer||void 0,void 0===t)throw new Error(\\\"Object argument required.\\\");for(var n=0;n<m.length;++n)m[n].toLowerCase()===e.algorithm.toLowerCase()&&(e.algorithm=m[n]);if(-1===m.indexOf(e.algorithm))throw new Error('Algorithm \\\"'+e.algorithm+'\\\"  not supported. supported values: '+m.join(\\\", \\\"));if(-1===w.indexOf(e.encoding)&&\\\"passthrough\\\"!==e.algorithm)throw new Error('Encoding \\\"'+e.encoding+'\\\"  not supported. supported values: '+w.join(\\\", \\\"));return e}function y(t){return\\\"function\\\"==typeof t&&null!=/^function\\\\s+\\\\w*\\\\s*\\\\(\\\\s*\\\\)\\\\s*{\\\\s+\\\\[native code\\\\]\\\\s+}$/i.exec(Function.prototype.toString.call(t))}function d(t,e){var n;if(void 0===(n=\\\"passthrough\\\"!==e.algorithm?b.createHash(e.algorithm):new g).write&&(n.write=n.update,n.end=n.update),v(e,n).dispatch(t),n.update||n.end(\\\"\\\"),n.digest)return n.digest(\\\"buffer\\\"===e.encoding?void 0:e.encoding);var r=n.read();return\\\"buffer\\\"===e.encoding?r:r.toString(e.encoding)}function v(t,e,n){n=n||[];var r=function(t){return e.update?e.update(t,\\\"utf8\\\"):e.write(t,\\\"utf8\\\")};return{dispatch:function(e){t.replacer&&(e=t.replacer(e));var n=typeof e;return null===e&&(n=\\\"null\\\"),this[\\\"_\\\"+n](e)},_object:function(e){var i=/\\\\[object (.*)\\\\]/i,u=Object.prototype.toString.call(e),a=i.exec(u);a=(a=a?a[1]:\\\"unknown:[\\\"+u+\\\"]\\\").toLowerCase();var s=null;if((s=n.indexOf(e))>=0)return this.dispatch(\\\"[CIRCULAR:\\\"+s+\\\"]\\\");if(n.push(e),void 0!==o&&o.isBuffer&&o.isBuffer(e))return r(\\\"buffer:\\\"),r(e);if(\\\"object\\\"===a||\\\"function\\\"===a){var f=Object.keys(e).sort();!1===t.respectType||y(e)||f.splice(0,0,\\\"prototype\\\",\\\"__proto__\\\",\\\"constructor\\\"),r(\\\"object:\\\"+f.length+\\\":\\\");var c=this;return f.forEach(function(n){c.dispatch(n),r(\\\":\\\"),t.excludeValues||c.dispatch(e[n]),r(\\\",\\\")})}if(!this[\\\"_\\\"+a]){if(t.ignoreUnknown)return r(\\\"[\\\"+a+\\\"]\\\");throw new Error('Unknown object type \\\"'+a+'\\\"')}this[\\\"_\\\"+a](e)},_array:function(e,i){i=void 0!==i?i:!1!==t.unorderedArrays;var o=this;if(r(\\\"array:\\\"+e.length+\\\":\\\"),!i||e.length<=1)return e.forEach(function(t){return o.dispatch(t)});var u=[],a=e.map(function(e){var r=new g,i=n.slice();return v(t,r,i).dispatch(e),u=u.concat(i.slice(n.length)),r.read().toString()});return n=n.concat(u),a.sort(),this._array(a,!1)},_date:function(t){return r(\\\"date:\\\"+t.toJSON())},_symbol:function(t){return r(\\\"symbol:\\\"+t.toString())},_error:function(t){return r(\\\"error:\\\"+t.toString())},_boolean:function(t){return r(\\\"bool:\\\"+t.toString())},_string:function(t){r(\\\"string:\\\"+t.length+\\\":\\\"),r(t)},_function:function(e){r(\\\"fn:\\\"),y(e)?this.dispatch(\\\"[native]\\\"):this.dispatch(e.toString()),!1!==t.respectFunctionNames&&this.dispatch(\\\"function-name:\\\"+String(e.name)),t.respectFunctionProperties&&this._object(e)},_number:function(t){return r(\\\"number:\\\"+t.toString())},_xml:function(t){return r(\\\"xml:\\\"+t.toString())},_null:function(){return r(\\\"Null\\\")},_undefined:function(){return r(\\\"Undefined\\\")},_regexp:function(t){return r(\\\"regex:\\\"+t.toString())},_uint8array:function(t){return r(\\\"uint8array:\\\"),this.dispatch(Array.prototype.slice.call(t))},_uint8clampedarray:function(t){return r(\\\"uint8clampedarray:\\\"),this.dispatch(Array.prototype.slice.call(t))},_int8array:function(t){return r(\\\"uint8array:\\\"),this.dispatch(Array.prototype.slice.call(t))},_uint16array:function(t){return r(\\\"uint16array:\\\"),this.dispatch(Array.prototype.slice.call(t))},_int16array:function(t){return r(\\\"uint16array:\\\"),this.dispatch(Array.prototype.slice.call(t))},_uint32array:function(t){return r(\\\"uint32array:\\\"),this.dispatch(Array.prototype.slice.call(t))},_int32array:function(t){return r(\\\"uint32array:\\\"),this.dispatch(Array.prototype.slice.call(t))},_float32array:function(t){return r(\\\"float32array:\\\"),this.dispatch(Array.prototype.slice.call(t))},_float64array:function(t){return r(\\\"float64array:\\\"),this.dispatch(Array.prototype.slice.call(t))},_arraybuffer:function(t){return r(\\\"arraybuffer:\\\"),this.dispatch(new Uint8Array(t))},_url:function(t){return r(\\\"url:\\\"+t.toString())},_map:function(e){r(\\\"map:\\\");var n=Array.from(e);return this._array(n,!1!==t.unorderedSets)},_set:function(e){r(\\\"set:\\\");var n=Array.from(e);return this._array(n,!1!==t.unorderedSets)},_blob:function(){if(t.ignoreUnknown)return r(\\\"[blob]\\\");throw Error('Hashing Blob objects is currently not supported\\\\n(see https://github.com/puleos/object-hash/issues/26)\\\\nUse \\\"options.replacer\\\" or \\\"options.ignoreUnknown\\\"\\\\n')},_domwindow:function(){return r(\\\"domwindow\\\")},_process:function(){return r(\\\"process\\\")},_timer:function(){return r(\\\"timer\\\")},_pipe:function(){return r(\\\"pipe\\\")},_tcp:function(){return r(\\\"tcp\\\")},_udp:function(){return r(\\\"udp\\\")},_tty:function(){return r(\\\"tty\\\")},_statwatcher:function(){return r(\\\"statwatcher\\\")},_securecontext:function(){return r(\\\"securecontext\\\")},_connection:function(){return r(\\\"connection\\\")},_zlib:function(){return r(\\\"zlib\\\")},_context:function(){return r(\\\"context\\\")},_nodescript:function(){return r(\\\"nodescript\\\")},_httpparser:function(){return r(\\\"httpparser\\\")},_dataview:function(){return r(\\\"dataview\\\")},_signal:function(){return r(\\\"signal\\\")},_fsevent:function(){return r(\\\"fsevent\\\")},_tlswrap:function(){return r(\\\"tlswrap\\\")}}}function g(){return{buf:\\\"\\\",write:function(t){this.buf+=t},end:function(t){this.buf+=t},read:function(){return this.buf}}}var b=t(\\\"crypto\\\");(n=e.exports=p).sha1=function(t){return p(t)},n.keys=function(t){return p(t,{excludeValues:!0,algorithm:\\\"sha1\\\",encoding:\\\"hex\\\"})},n.MD5=function(t){return p(t,{algorithm:\\\"md5\\\",encoding:\\\"hex\\\"})},n.keysMD5=function(t){return p(t,{algorithm:\\\"md5\\\",encoding:\\\"hex\\\",excludeValues:!0})};var m=b.getHashes?b.getHashes().slice():[\\\"sha1\\\",\\\"md5\\\"];m.push(\\\"passthrough\\\");var w=[\\\"buffer\\\",\\\"hex\\\",\\\"binary\\\",\\\"base64\\\"];n.writeToStream=function(t,e,n){return void 0===n&&(n=e,e={}),e=h(t,e),v(e,n).dispatch(t)}}).call(this,t(\\\"lYpoI2\\\"),\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{},t(\\\"buffer\\\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\\\"/fake_8c3adc78.js\\\",\\\"/\\\")},{buffer:3,crypto:5,lYpoI2:10}],2:[function(t,e,n){(function(t,e,r,i,o,u,a,s,f){var c=\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";!function(t){\\\"use strict\\\";function e(t){var e=t.charCodeAt(0);return e===r||e===s?62:e===i||e===f?63:e<o?-1:e<o+10?e-o+26+26:e<a+26?e-a:e<u+26?e-u+26:void 0}var n=\\\"undefined\\\"!=typeof Uint8Array?Uint8Array:Array,r=\\\"+\\\".charCodeAt(0),i=\\\"/\\\".charCodeAt(0),o=\\\"0\\\".charCodeAt(0),u=\\\"a\\\".charCodeAt(0),a=\\\"A\\\".charCodeAt(0),s=\\\"-\\\".charCodeAt(0),f=\\\"_\\\".charCodeAt(0);t.toByteArray=function(t){function r(t){f[l++]=t}var i,o,u,a,s,f;if(t.length%4>0)throw new Error(\\\"Invalid string. Length must be a multiple of 4\\\");var c=t.length;s=\\\"=\\\"===t.charAt(c-2)?2:\\\"=\\\"===t.charAt(c-1)?1:0,f=new n(3*t.length/4-s),u=s>0?t.length-4:t.length;var l=0;for(i=0,o=0;i<u;i+=4,o+=3)a=e(t.charAt(i))<<18|e(t.charAt(i+1))<<12|e(t.charAt(i+2))<<6|e(t.charAt(i+3)),r((16711680&a)>>16),r((65280&a)>>8),r(255&a);return 2===s?(a=e(t.charAt(i))<<2|e(t.charAt(i+1))>>4,r(255&a)):1===s&&(a=e(t.charAt(i))<<10|e(t.charAt(i+1))<<4|e(t.charAt(i+2))>>2,r(a>>8&255),r(255&a)),f},t.fromByteArray=function(t){function e(t){return c.charAt(t)}var n,r,i,o=t.length%3,u=\\\"\\\";for(n=0,i=t.length-o;n<i;n+=3)r=(t[n]<<16)+(t[n+1]<<8)+t[n+2],u+=function(t){return e(t>>18&63)+e(t>>12&63)+e(t>>6&63)+e(63&t)}(r);switch(o){case 1:u+=e((r=t[t.length-1])>>2),u+=e(r<<4&63),u+=\\\"==\\\";break;case 2:u+=e((r=(t[t.length-2]<<8)+t[t.length-1])>>10),u+=e(r>>4&63),u+=e(r<<2&63),u+=\\\"=\\\"}return u}}(void 0===n?this.base64js={}:n)}).call(this,t(\\\"lYpoI2\\\"),\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{},t(\\\"buffer\\\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\\\"/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js\\\",\\\"/node_modules/gulp-browserify/node_modules/base64-js/lib\\\")},{buffer:3,lYpoI2:10}],3:[function(t,e,n){(function(e,r,i,o,u,a,s,f,c){function i(t,e,n){if(!(this instanceof i))return new i(t,e,n);var r=typeof t;if(\\\"base64\\\"===e&&\\\"string\\\"===r)for(t=U(t);t.length%4!=0;)t+=\\\"=\\\";var o;if(\\\"number\\\"===r)o=$(t);else if(\\\"string\\\"===r)o=i.byteLength(t,e);else{if(\\\"object\\\"!==r)throw new Error(\\\"First argument needs to be a number, array or string.\\\");o=$(t.length)}var u;i._useTypedArrays?u=i._augment(new Uint8Array(o)):(u=this,u.length=o,u._isBuffer=!0);var a;if(i._useTypedArrays&&\\\"number\\\"==typeof t.byteLength)u._set(t);else if(M(t))for(a=0;a<o;a++)i.isBuffer(t)?u[a]=t.readUInt8(a):u[a]=t[a];else if(\\\"string\\\"===r)u.write(t,0,e);else if(\\\"number\\\"===r&&!i._useTypedArrays&&!n)for(a=0;a<o;a++)u[a]=0;return u}function l(t,e,n,r){n=Number(n)||0;var o=t.length-n;r?(r=Number(r))>o&&(r=o):r=o;var u=e.length;J(u%2==0,\\\"Invalid hex string\\\"),r>u/2&&(r=u/2);for(var a=0;a<r;a++){var s=parseInt(e.substr(2*a,2),16);J(!isNaN(s),\\\"Invalid hex string\\\"),t[n+a]=s}return i._charsWritten=2*a,a}function p(t,e,n,r){return i._charsWritten=V(z(e),t,n,r)}function h(t,e,n,r){return i._charsWritten=V(F(e),t,n,r)}function y(t,e,n,r){return h(t,e,n,r)}function d(t,e,n,r){return i._charsWritten=V(q(e),t,n,r)}function v(t,e,n,r){return i._charsWritten=V(Y(e),t,n,r)}function g(t,e,n){return 0===e&&n===t.length?G.fromByteArray(t):G.fromByteArray(t.slice(e,n))}function b(t,e,n){var r=\\\"\\\",i=\\\"\\\";n=Math.min(t.length,n);for(var o=e;o<n;o++)t[o]<=127?(r+=Q(i)+String.fromCharCode(t[o]),i=\\\"\\\"):i+=\\\"%\\\"+t[o].toString(16);return r+Q(i)}function m(t,e,n){var r=\\\"\\\";n=Math.min(t.length,n);for(var i=e;i<n;i++)r+=String.fromCharCode(t[i]);return r}function w(t,e,n){return m(t,e,n)}function _(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var i=\\\"\\\",o=e;o<n;o++)i+=D(t[o]);return i}function j(t,e,n){for(var r=t.slice(e,n),i=\\\"\\\",o=0;o<r.length;o+=2)i+=String.fromCharCode(r[o]+256*r[o+1]);return i}function x(t,e,n,r){r||(J(\\\"boolean\\\"==typeof n,\\\"missing or invalid endian\\\"),J(void 0!==e&&null!==e,\\\"missing offset\\\"),J(e+1<t.length,\\\"Trying to read beyond buffer length\\\"));var i=t.length;if(!(e>=i)){var o;return n?(o=t[e],e+1<i&&(o|=t[e+1]<<8)):(o=t[e]<<8,e+1<i&&(o|=t[e+1])),o}}function O(t,e,n,r){r||(J(\\\"boolean\\\"==typeof n,\\\"missing or invalid endian\\\"),J(void 0!==e&&null!==e,\\\"missing offset\\\"),J(e+3<t.length,\\\"Trying to read beyond buffer length\\\"));var i=t.length;if(!(e>=i)){var o;return n?(e+2<i&&(o=t[e+2]<<16),e+1<i&&(o|=t[e+1]<<8),o|=t[e],e+3<i&&(o+=t[e+3]<<24>>>0)):(e+1<i&&(o=t[e+1]<<16),e+2<i&&(o|=t[e+2]<<8),e+3<i&&(o|=t[e+3]),o+=t[e]<<24>>>0),o}}function k(t,e,n,r){if(r||(J(\\\"boolean\\\"==typeof n,\\\"missing or invalid endian\\\"),J(void 0!==e&&null!==e,\\\"missing offset\\\"),J(e+1<t.length,\\\"Trying to read beyond buffer length\\\")),!(e>=t.length)){var i=x(t,e,n,!0);return 32768&i?-1*(65535-i+1):i}}function E(t,e,n,r){if(r||(J(\\\"boolean\\\"==typeof n,\\\"missing or invalid endian\\\"),J(void 0!==e&&null!==e,\\\"missing offset\\\"),J(e+3<t.length,\\\"Trying to read beyond buffer length\\\")),!(e>=t.length)){var i=O(t,e,n,!0);return 2147483648&i?-1*(4294967295-i+1):i}}function A(t,e,n,r){return r||(J(\\\"boolean\\\"==typeof n,\\\"missing or invalid endian\\\"),J(e+3<t.length,\\\"Trying to read beyond buffer length\\\")),X.read(t,e,n,23,4)}function S(t,e,n,r){return r||(J(\\\"boolean\\\"==typeof n,\\\"missing or invalid endian\\\"),J(e+7<t.length,\\\"Trying to read beyond buffer length\\\")),X.read(t,e,n,52,8)}function I(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\\\"missing value\\\"),J(\\\"boolean\\\"==typeof r,\\\"missing or invalid endian\\\"),J(void 0!==n&&null!==n,\\\"missing offset\\\"),J(n+1<t.length,\\\"trying to write beyond buffer length\\\"),K(e,65535));var o=t.length;if(!(n>=o))for(var u=0,a=Math.min(o-n,2);u<a;u++)t[n+u]=(e&255<<8*(r?u:1-u))>>>8*(r?u:1-u)}function T(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\\\"missing value\\\"),J(\\\"boolean\\\"==typeof r,\\\"missing or invalid endian\\\"),J(void 0!==n&&null!==n,\\\"missing offset\\\"),J(n+3<t.length,\\\"trying to write beyond buffer length\\\"),K(e,4294967295));var o=t.length;if(!(n>=o))for(var u=0,a=Math.min(o-n,4);u<a;u++)t[n+u]=e>>>8*(r?u:3-u)&255}function P(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\\\"missing value\\\"),J(\\\"boolean\\\"==typeof r,\\\"missing or invalid endian\\\"),J(void 0!==n&&null!==n,\\\"missing offset\\\"),J(n+1<t.length,\\\"Trying to write beyond buffer length\\\"),W(e,32767,-32768)),n>=t.length||(e>=0?I(t,e,n,r,i):I(t,65535+e+1,n,r,i))}function B(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\\\"missing value\\\"),J(\\\"boolean\\\"==typeof r,\\\"missing or invalid endian\\\"),J(void 0!==n&&null!==n,\\\"missing offset\\\"),J(n+3<t.length,\\\"Trying to write beyond buffer length\\\"),W(e,2147483647,-2147483648)),n>=t.length||(e>=0?T(t,e,n,r,i):T(t,4294967295+e+1,n,r,i))}function C(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\\\"missing value\\\"),J(\\\"boolean\\\"==typeof r,\\\"missing or invalid endian\\\"),J(void 0!==n&&null!==n,\\\"missing offset\\\"),J(n+3<t.length,\\\"Trying to write beyond buffer length\\\"),H(e,3.4028234663852886e38,-3.4028234663852886e38)),n>=t.length||X.write(t,e,n,r,23,4)}function L(t,e,n,r,i){i||(J(void 0!==e&&null!==e,\\\"missing value\\\"),J(\\\"boolean\\\"==typeof r,\\\"missing or invalid endian\\\"),J(void 0!==n&&null!==n,\\\"missing offset\\\"),J(n+7<t.length,\\\"Trying to write beyond buffer length\\\"),H(e,1.7976931348623157e308,-1.7976931348623157e308)),n>=t.length||X.write(t,e,n,r,52,8)}function U(t){return t.trim?t.trim():t.replace(/^\\\\s+|\\\\s+$/g,\\\"\\\")}function R(t,e,n){return\\\"number\\\"!=typeof t?n:(t=~~t)>=e?e:t>=0?t:(t+=e)>=0?t:0}function $(t){return(t=~~Math.ceil(+t))<0?0:t}function N(t){return(Array.isArray||function(t){return\\\"[object Array]\\\"===Object.prototype.toString.call(t)})(t)}function M(t){return N(t)||i.isBuffer(t)||t&&\\\"object\\\"==typeof t&&\\\"number\\\"==typeof t.length}function D(t){return t<16?\\\"0\\\"+t.toString(16):t.toString(16)}function z(t){for(var e=[],n=0;n<t.length;n++){var r=t.charCodeAt(n);if(r<=127)e.push(t.charCodeAt(n));else{var i=n;r>=55296&&r<=57343&&n++;for(var o=encodeURIComponent(t.slice(i,n+1)).substr(1).split(\\\"%\\\"),u=0;u<o.length;u++)e.push(parseInt(o[u],16))}}return e}function F(t){for(var e=[],n=0;n<t.length;n++)e.push(255&t.charCodeAt(n));return e}function Y(t){for(var e,n,r,i=[],o=0;o<t.length;o++)e=t.charCodeAt(o),n=e>>8,r=e%256,i.push(r),i.push(n);return i}function q(t){return G.toByteArray(t)}function V(t,e,n,r){for(var i=0;i<r&&!(i+n>=e.length||i>=t.length);i++)e[i+n]=t[i];return i}function Q(t){try{return decodeURIComponent(t)}catch(t){return String.fromCharCode(65533)}}function K(t,e){J(\\\"number\\\"==typeof t,\\\"cannot write a non-number as a number\\\"),J(t>=0,\\\"specified a negative value for writing an unsigned value\\\"),J(t<=e,\\\"value is larger than maximum value for type\\\"),J(Math.floor(t)===t,\\\"value has a fractional component\\\")}function W(t,e,n){J(\\\"number\\\"==typeof t,\\\"cannot write a non-number as a number\\\"),J(t<=e,\\\"value larger than maximum allowed value\\\"),J(t>=n,\\\"value smaller than minimum allowed value\\\"),J(Math.floor(t)===t,\\\"value has a fractional component\\\")}function H(t,e,n){J(\\\"number\\\"==typeof t,\\\"cannot write a non-number as a number\\\"),J(t<=e,\\\"value larger than maximum allowed value\\\"),J(t>=n,\\\"value smaller than minimum allowed value\\\")}function J(t,e){if(!t)throw new Error(e||\\\"Failed assertion\\\")}var G=t(\\\"base64-js\\\"),X=t(\\\"ieee754\\\");n.Buffer=i,n.SlowBuffer=i,n.INSPECT_MAX_BYTES=50,i.poolSize=8192,i._useTypedArrays=function(){try{var t=new ArrayBuffer(0),e=new Uint8Array(t);return e.foo=function(){return 42},42===e.foo()&&\\\"function\\\"==typeof e.subarray}catch(t){return!1}}(),i.isEncoding=function(t){switch(String(t).toLowerCase()){case\\\"hex\\\":case\\\"utf8\\\":case\\\"utf-8\\\":case\\\"ascii\\\":case\\\"binary\\\":case\\\"base64\\\":case\\\"raw\\\":case\\\"ucs2\\\":case\\\"ucs-2\\\":case\\\"utf16le\\\":case\\\"utf-16le\\\":return!0;default:return!1}},i.isBuffer=function(t){return!(null===t||void 0===t||!t._isBuffer)},i.byteLength=function(t,e){var n;switch(t+=\\\"\\\",e||\\\"utf8\\\"){case\\\"hex\\\":n=t.length/2;break;case\\\"utf8\\\":case\\\"utf-8\\\":n=z(t).length;break;case\\\"ascii\\\":case\\\"binary\\\":case\\\"raw\\\":n=t.length;break;case\\\"base64\\\":n=q(t).length;break;case\\\"ucs2\\\":case\\\"ucs-2\\\":case\\\"utf16le\\\":case\\\"utf-16le\\\":n=2*t.length;break;default:throw new Error(\\\"Unknown encoding\\\")}return n},i.concat=function(t,e){if(J(N(t),\\\"Usage: Buffer.concat(list, [totalLength])\\\\nlist should be an Array.\\\"),0===t.length)return new i(0);if(1===t.length)return t[0];var n;if(\\\"number\\\"!=typeof e)for(e=0,n=0;n<t.length;n++)e+=t[n].length;var r=new i(e),o=0;for(n=0;n<t.length;n++){var u=t[n];u.copy(r,o),o+=u.length}return r},i.prototype.write=function(t,e,n,r){if(isFinite(e))isFinite(n)||(r=n,n=void 0);else{var i=r;r=e,e=n,n=i}e=Number(e)||0;var o=this.length-e;n?(n=Number(n))>o&&(n=o):n=o;var u;switch(r=String(r||\\\"utf8\\\").toLowerCase()){case\\\"hex\\\":u=l(this,t,e,n);break;case\\\"utf8\\\":case\\\"utf-8\\\":u=p(this,t,e,n);break;case\\\"ascii\\\":u=h(this,t,e,n);break;case\\\"binary\\\":u=y(this,t,e,n);break;case\\\"base64\\\":u=d(this,t,e,n);break;case\\\"ucs2\\\":case\\\"ucs-2\\\":case\\\"utf16le\\\":case\\\"utf-16le\\\":u=v(this,t,e,n);break;default:throw new Error(\\\"Unknown encoding\\\")}return u},i.prototype.toString=function(t,e,n){var r=this;if(t=String(t||\\\"utf8\\\").toLowerCase(),e=Number(e)||0,(n=void 0!==n?Number(n):n=r.length)===e)return\\\"\\\";var i;switch(t){case\\\"hex\\\":i=_(r,e,n);break;case\\\"utf8\\\":case\\\"utf-8\\\":i=b(r,e,n);break;case\\\"ascii\\\":i=m(r,e,n);break;case\\\"binary\\\":i=w(r,e,n);break;case\\\"base64\\\":i=g(r,e,n);break;case\\\"ucs2\\\":case\\\"ucs-2\\\":case\\\"utf16le\\\":case\\\"utf-16le\\\":i=j(r,e,n);break;default:throw new Error(\\\"Unknown encoding\\\")}return i},i.prototype.toJSON=function(){return{type:\\\"Buffer\\\",data:Array.prototype.slice.call(this._arr||this,0)}},i.prototype.copy=function(t,e,n,r){var o=this;if(n||(n=0),r||0===r||(r=this.length),e||(e=0),r!==n&&0!==t.length&&0!==o.length){J(r>=n,\\\"sourceEnd < sourceStart\\\"),J(e>=0&&e<t.length,\\\"targetStart out of bounds\\\"),J(n>=0&&n<o.length,\\\"sourceStart out of bounds\\\"),J(r>=0&&r<=o.length,\\\"sourceEnd out of bounds\\\"),r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var u=r-n;if(u<100||!i._useTypedArrays)for(var a=0;a<u;a++)t[a+e]=this[a+n];else t._set(this.subarray(n,n+u),e)}},i.prototype.slice=function(t,e){var n=this.length;if(t=R(t,n,0),e=R(e,n,n),i._useTypedArrays)return i._augment(this.subarray(t,e));for(var r=e-t,o=new i(r,void 0,!0),u=0;u<r;u++)o[u]=this[u+t];return o},i.prototype.get=function(t){return console.log(\\\".get() is deprecated. Access using array indexes instead.\\\"),this.readUInt8(t)},i.prototype.set=function(t,e){return console.log(\\\".set() is deprecated. Access using array indexes instead.\\\"),this.writeUInt8(t,e)},i.prototype.readUInt8=function(t,e){if(e||(J(void 0!==t&&null!==t,\\\"missing offset\\\"),J(t<this.length,\\\"Trying to read beyond buffer length\\\")),!(t>=this.length))return this[t]},i.prototype.readUInt16LE=function(t,e){return x(this,t,!0,e)},i.prototype.readUInt16BE=function(t,e){return x(this,t,!1,e)},i.prototype.readUInt32LE=function(t,e){return O(this,t,!0,e)},i.prototype.readUInt32BE=function(t,e){return O(this,t,!1,e)},i.prototype.readInt8=function(t,e){if(e||(J(void 0!==t&&null!==t,\\\"missing offset\\\"),J(t<this.length,\\\"Trying to read beyond buffer length\\\")),!(t>=this.length))return 128&this[t]?-1*(255-this[t]+1):this[t]},i.prototype.readInt16LE=function(t,e){return k(this,t,!0,e)},i.prototype.readInt16BE=function(t,e){return k(this,t,!1,e)},i.prototype.readInt32LE=function(t,e){return E(this,t,!0,e)},i.prototype.readInt32BE=function(t,e){return E(this,t,!1,e)},i.prototype.readFloatLE=function(t,e){return A(this,t,!0,e)},i.prototype.readFloatBE=function(t,e){return A(this,t,!1,e)},i.prototype.readDoubleLE=function(t,e){return S(this,t,!0,e)},i.prototype.readDoubleBE=function(t,e){return S(this,t,!1,e)},i.prototype.writeUInt8=function(t,e,n){n||(J(void 0!==t&&null!==t,\\\"missing value\\\"),J(void 0!==e&&null!==e,\\\"missing offset\\\"),J(e<this.length,\\\"trying to write beyond buffer length\\\"),K(t,255)),e>=this.length||(this[e]=t)},i.prototype.writeUInt16LE=function(t,e,n){I(this,t,e,!0,n)},i.prototype.writeUInt16BE=function(t,e,n){I(this,t,e,!1,n)},i.prototype.writeUInt32LE=function(t,e,n){T(this,t,e,!0,n)},i.prototype.writeUInt32BE=function(t,e,n){T(this,t,e,!1,n)},i.prototype.writeInt8=function(t,e,n){n||(J(void 0!==t&&null!==t,\\\"missing value\\\"),J(void 0!==e&&null!==e,\\\"missing offset\\\"),J(e<this.length,\\\"Trying to write beyond buffer length\\\"),W(t,127,-128)),e>=this.length||(t>=0?this.writeUInt8(t,e,n):this.writeUInt8(255+t+1,e,n))},i.prototype.writeInt16LE=function(t,e,n){P(this,t,e,!0,n)},i.prototype.writeInt16BE=function(t,e,n){P(this,t,e,!1,n)},i.prototype.writeInt32LE=function(t,e,n){B(this,t,e,!0,n)},i.prototype.writeInt32BE=function(t,e,n){B(this,t,e,!1,n)},i.prototype.writeFloatLE=function(t,e,n){C(this,t,e,!0,n)},i.prototype.writeFloatBE=function(t,e,n){C(this,t,e,!1,n)},i.prototype.writeDoubleLE=function(t,e,n){L(this,t,e,!0,n)},i.prototype.writeDoubleBE=function(t,e,n){L(this,t,e,!1,n)},i.prototype.fill=function(t,e,n){if(t||(t=0),e||(e=0),n||(n=this.length),\\\"string\\\"==typeof t&&(t=t.charCodeAt(0)),J(\\\"number\\\"==typeof t&&!isNaN(t),\\\"value is not a number\\\"),J(n>=e,\\\"end < start\\\"),n!==e&&0!==this.length){J(e>=0&&e<this.length,\\\"start out of bounds\\\"),J(n>=0&&n<=this.length,\\\"end out of bounds\\\");for(var r=e;r<n;r++)this[r]=t}},i.prototype.inspect=function(){for(var t=[],e=this.length,r=0;r<e;r++)if(t[r]=D(this[r]),r===n.INSPECT_MAX_BYTES){t[r+1]=\\\"...\\\";break}return\\\"<Buffer \\\"+t.join(\\\" \\\")+\\\">\\\"},i.prototype.toArrayBuffer=function(){if(\\\"undefined\\\"!=typeof Uint8Array){if(i._useTypedArrays)return new i(this).buffer;for(var t=new Uint8Array(this.length),e=0,n=t.length;e<n;e+=1)t[e]=this[e];return t.buffer}throw new Error(\\\"Buffer.toArrayBuffer not supported in this browser\\\")};var Z=i.prototype;i._augment=function(t){return t._isBuffer=!0,t._get=t.get,t._set=t.set,t.get=Z.get,t.set=Z.set,t.write=Z.write,t.toString=Z.toString,t.toLocaleString=Z.toString,t.toJSON=Z.toJSON,t.copy=Z.copy,t.slice=Z.slice,t.readUInt8=Z.readUInt8,t.readUInt16LE=Z.readUInt16LE,t.readUInt16BE=Z.readUInt16BE,t.readUInt32LE=Z.readUInt32LE,t.readUInt32BE=Z.readUInt32BE,t.readInt8=Z.readInt8,t.readInt16LE=Z.readInt16LE,t.readInt16BE=Z.readInt16BE,t.readInt32LE=Z.readInt32LE,t.readInt32BE=Z.readInt32BE,t.readFloatLE=Z.readFloatLE,t.readFloatBE=Z.readFloatBE,t.readDoubleLE=Z.readDoubleLE,t.readDoubleBE=Z.readDoubleBE,t.writeUInt8=Z.writeUInt8,t.writeUInt16LE=Z.writeUInt16LE,t.writeUInt16BE=Z.writeUInt16BE,t.writeUInt32LE=Z.writeUInt32LE,t.writeUInt32BE=Z.writeUInt32BE,t.writeInt8=Z.writeInt8,t.writeInt16LE=Z.writeInt16LE,t.writeInt16BE=Z.writeInt16BE,t.writeInt32LE=Z.writeInt32LE,t.writeInt32BE=Z.writeInt32BE,t.writeFloatLE=Z.writeFloatLE,t.writeFloatBE=Z.writeFloatBE,t.writeDoubleLE=Z.writeDoubleLE,t.writeDoubleBE=Z.writeDoubleBE,t.fill=Z.fill,t.inspect=Z.inspect,t.toArrayBuffer=Z.toArrayBuffer,t}}).call(this,t(\\\"lYpoI2\\\"),\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{},t(\\\"buffer\\\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\\\"/node_modules/gulp-browserify/node_modules/buffer/index.js\\\",\\\"/node_modules/gulp-browserify/node_modules/buffer\\\")},{\\\"base64-js\\\":2,buffer:3,ieee754:11,lYpoI2:10}],4:[function(t,e,n){(function(n,r,i,o,u,a,s,f,c){function l(t,e){if(t.length%h!=0){var n=t.length+(h-t.length%h);t=i.concat([t,y],n)}for(var r=[],o=e?t.readInt32BE:t.readInt32LE,u=0;u<t.length;u+=h)r.push(o.call(t,u));return r}function p(t,e,n){for(var r=new i(e),o=n?r.writeInt32BE:r.writeInt32LE,u=0;u<t.length;u++)o.call(r,t[u],4*u,!0);return r}var h=4,y=new(i=t(\\\"buffer\\\").Buffer)(h);y.fill(0);var d=8;e.exports={hash:function(t,e,n,r){return i.isBuffer(t)||(t=new i(t)),p(e(l(t,r),t.length*d),n,r)}}}).call(this,t(\\\"lYpoI2\\\"),\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{},t(\\\"buffer\\\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\\\"/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js\\\",\\\"/node_modules/gulp-browserify/node_modules/crypto-browserify\\\")},{buffer:3,lYpoI2:10}],5:[function(t,e,n){(function(e,r,i,o,u,a,s,f,c){function l(t,e,n){i.isBuffer(e)||(e=new i(e)),i.isBuffer(n)||(n=new i(n)),e.length>b?e=t(e):e.length<b&&(e=i.concat([e,m],b));for(var r=new i(b),o=new i(b),u=0;u<b;u++)r[u]=54^e[u],o[u]=92^e[u];var a=t(i.concat([r,n]));return t(i.concat([o,a]))}function p(t,e){var n=g[t=t||\\\"sha1\\\"],r=[],o=0;return n||h(\\\"algorithm:\\\",t,\\\"is not yet supported\\\"),{update:function(t){return i.isBuffer(t)||(t=new i(t)),r.push(t),o+=t.length,this},digest:function(t){var o=i.concat(r),u=e?l(n,e,o):n(o);return r=null,t?u.toString(t):u}}}function h(){var t=[].slice.call(arguments).join(\\\" \\\");throw new Error([t,\\\"we accept pull requests\\\",\\\"http://github.com/dominictarr/crypto-browserify\\\"].join(\\\"\\\\n\\\"))}var i=t(\\\"buffer\\\").Buffer,y=t(\\\"./sha\\\"),d=t(\\\"./sha256\\\"),v=t(\\\"./rng\\\"),g={sha1:y,sha256:d,md5:t(\\\"./md5\\\")},b=64,m=new i(b);m.fill(0),n.createHash=function(t){return p(t)},n.createHmac=function(t,e){return p(t,e)},n.randomBytes=function(t,e){if(!e||!e.call)return new i(v(t));try{e.call(this,void 0,new i(v(t)))}catch(t){e(t)}},function(t,e){for(var n in t)e(t[n],n)}([\\\"createCredentials\\\",\\\"createCipher\\\",\\\"createCipheriv\\\",\\\"createDecipher\\\",\\\"createDecipheriv\\\",\\\"createSign\\\",\\\"createVerify\\\",\\\"createDiffieHellman\\\",\\\"pbkdf2\\\"],function(t){n[t]=function(){h(\\\"sorry,\\\",t,\\\"is not implemented yet\\\")}})}).call(this,t(\\\"lYpoI2\\\"),\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{},t(\\\"buffer\\\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\\\"/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js\\\",\\\"/node_modules/gulp-browserify/node_modules/crypto-browserify\\\")},{\\\"./md5\\\":6,\\\"./rng\\\":7,\\\"./sha\\\":8,\\\"./sha256\\\":9,buffer:3,lYpoI2:10}],6:[function(t,e,n){(function(n,r,i,o,u,a,s,f,c){function l(t,e){t[e>>5]|=128<<e%32,t[14+(e+64>>>9<<4)]=e;for(var n=1732584193,r=-271733879,i=-1732584194,o=271733878,u=0;u<t.length;u+=16){var a=n,s=r,f=i,c=o;r=v(r=v(r=v(r=v(r=d(r=d(r=d(r=d(r=y(r=y(r=y(r=y(r=h(r=h(r=h(r=h(r,i=h(i,o=h(o,n=h(n,r,i,o,t[u+0],7,-680876936),r,i,t[u+1],12,-389564586),n,r,t[u+2],17,606105819),o,n,t[u+3],22,-1044525330),i=h(i,o=h(o,n=h(n,r,i,o,t[u+4],7,-176418897),r,i,t[u+5],12,1200080426),n,r,t[u+6],17,-1473231341),o,n,t[u+7],22,-45705983),i=h(i,o=h(o,n=h(n,r,i,o,t[u+8],7,1770035416),r,i,t[u+9],12,-1958414417),n,r,t[u+10],17,-42063),o,n,t[u+11],22,-1990404162),i=h(i,o=h(o,n=h(n,r,i,o,t[u+12],7,1804603682),r,i,t[u+13],12,-40341101),n,r,t[u+14],17,-1502002290),o,n,t[u+15],22,1236535329),i=y(i,o=y(o,n=y(n,r,i,o,t[u+1],5,-165796510),r,i,t[u+6],9,-1069501632),n,r,t[u+11],14,643717713),o,n,t[u+0],20,-373897302),i=y(i,o=y(o,n=y(n,r,i,o,t[u+5],5,-701558691),r,i,t[u+10],9,38016083),n,r,t[u+15],14,-660478335),o,n,t[u+4],20,-405537848),i=y(i,o=y(o,n=y(n,r,i,o,t[u+9],5,568446438),r,i,t[u+14],9,-1019803690),n,r,t[u+3],14,-187363961),o,n,t[u+8],20,1163531501),i=y(i,o=y(o,n=y(n,r,i,o,t[u+13],5,-1444681467),r,i,t[u+2],9,-51403784),n,r,t[u+7],14,1735328473),o,n,t[u+12],20,-1926607734),i=d(i,o=d(o,n=d(n,r,i,o,t[u+5],4,-378558),r,i,t[u+8],11,-2022574463),n,r,t[u+11],16,1839030562),o,n,t[u+14],23,-35309556),i=d(i,o=d(o,n=d(n,r,i,o,t[u+1],4,-1530992060),r,i,t[u+4],11,1272893353),n,r,t[u+7],16,-155497632),o,n,t[u+10],23,-1094730640),i=d(i,o=d(o,n=d(n,r,i,o,t[u+13],4,681279174),r,i,t[u+0],11,-358537222),n,r,t[u+3],16,-722521979),o,n,t[u+6],23,76029189),i=d(i,o=d(o,n=d(n,r,i,o,t[u+9],4,-640364487),r,i,t[u+12],11,-421815835),n,r,t[u+15],16,530742520),o,n,t[u+2],23,-995338651),i=v(i,o=v(o,n=v(n,r,i,o,t[u+0],6,-198630844),r,i,t[u+7],10,1126891415),n,r,t[u+14],15,-1416354905),o,n,t[u+5],21,-57434055),i=v(i,o=v(o,n=v(n,r,i,o,t[u+12],6,1700485571),r,i,t[u+3],10,-1894986606),n,r,t[u+10],15,-1051523),o,n,t[u+1],21,-2054922799),i=v(i,o=v(o,n=v(n,r,i,o,t[u+8],6,1873313359),r,i,t[u+15],10,-30611744),n,r,t[u+6],15,-1560198380),o,n,t[u+13],21,1309151649),i=v(i,o=v(o,n=v(n,r,i,o,t[u+4],6,-145523070),r,i,t[u+11],10,-1120210379),n,r,t[u+2],15,718787259),o,n,t[u+9],21,-343485551),n=g(n,a),r=g(r,s),i=g(i,f),o=g(o,c)}return Array(n,r,i,o)}function p(t,e,n,r,i,o){return g(b(g(g(e,t),g(r,o)),i),n)}function h(t,e,n,r,i,o,u){return p(e&n|~e&r,t,e,i,o,u)}function y(t,e,n,r,i,o,u){return p(e&r|n&~r,t,e,i,o,u)}function d(t,e,n,r,i,o,u){return p(e^n^r,t,e,i,o,u)}function v(t,e,n,r,i,o,u){return p(n^(e|~r),t,e,i,o,u)}function g(t,e){var n=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(n>>16)<<16|65535&n}function b(t,e){return t<<e|t>>>32-e}var m=t(\\\"./helpers\\\");e.exports=function(t){return m.hash(t,l,16)}}).call(this,t(\\\"lYpoI2\\\"),\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{},t(\\\"buffer\\\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\\\"/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js\\\",\\\"/node_modules/gulp-browserify/node_modules/crypto-browserify\\\")},{\\\"./helpers\\\":4,buffer:3,lYpoI2:10}],7:[function(t,e,n){(function(t,n,r,i,o,u,a,s,f){!function(){var t,n;t=function(t){for(var e,n=new Array(t),r=0;r<t;r++)0==(3&r)&&(e=4294967296*Math.random()),n[r]=e>>>((3&r)<<3)&255;return n},this.crypto&&crypto.getRandomValues&&(n=function(t){var e=new Uint8Array(t);return crypto.getRandomValues(e),e}),e.exports=n||t}()}).call(this,t(\\\"lYpoI2\\\"),\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{},t(\\\"buffer\\\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\\\"/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js\\\",\\\"/node_modules/gulp-browserify/node_modules/crypto-browserify\\\")},{buffer:3,lYpoI2:10}],8:[function(t,e,n){(function(n,r,i,o,u,a,s,f,c){function l(t,e){t[e>>5]|=128<<24-e%32,t[15+(e+64>>9<<4)]=e;for(var n=Array(80),r=1732584193,i=-271733879,o=-1732584194,u=271733878,a=-1009589776,s=0;s<t.length;s+=16){for(var f=r,c=i,l=o,v=u,g=a,b=0;b<80;b++){n[b]=b<16?t[s+b]:d(n[b-3]^n[b-8]^n[b-14]^n[b-16],1);var m=y(y(d(r,5),p(b,i,o,u)),y(y(a,n[b]),h(b)));a=u,u=o,o=d(i,30),i=r,r=m}r=y(r,f),i=y(i,c),o=y(o,l),u=y(u,v),a=y(a,g)}return Array(r,i,o,u,a)}function p(t,e,n,r){return t<20?e&n|~e&r:t<40?e^n^r:t<60?e&n|e&r|n&r:e^n^r}function h(t){return t<20?1518500249:t<40?1859775393:t<60?-1894007588:-899497514}function y(t,e){var n=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(n>>16)<<16|65535&n}function d(t,e){return t<<e|t>>>32-e}var v=t(\\\"./helpers\\\");e.exports=function(t){return v.hash(t,l,20,!0)}}).call(this,t(\\\"lYpoI2\\\"),\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{},t(\\\"buffer\\\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\\\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js\\\",\\\"/node_modules/gulp-browserify/node_modules/crypto-browserify\\\")},{\\\"./helpers\\\":4,buffer:3,lYpoI2:10}],9:[function(t,e,n){(function(n,r,i,o,u,a,s,f,c){var l=t(\\\"./helpers\\\"),p=function(t,e){var n=(65535&t)+(65535&e);return(t>>16)+(e>>16)+(n>>16)<<16|65535&n},h=function(t,e){return t>>>e|t<<32-e},y=function(t,e){return t>>>e},d=function(t,e,n){return t&e^~t&n},v=function(t,e,n){return t&e^t&n^e&n},g=function(t){return h(t,2)^h(t,13)^h(t,22)},b=function(t){return h(t,6)^h(t,11)^h(t,25)},m=function(t){return h(t,7)^h(t,18)^y(t,3)},w=function(t){return h(t,17)^h(t,19)^y(t,10)},_=function(t,e){var n,r,i,o,u,a,s,f,c,l,h=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),y=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),_=new Array(64);t[e>>5]|=128<<24-e%32,t[15+(e+64>>9<<4)]=e;for(var j=0;j<t.length;j+=16){n=y[0],r=y[1],i=y[2],o=y[3],u=y[4],a=y[5],s=y[6],f=y[7];for(var x=0;x<64;x++)_[x]=x<16?t[x+j]:p(p(p(w(_[x-2]),_[x-7]),m(_[x-15])),_[x-16]),c=p(p(p(p(f,b(u)),d(u,a,s)),h[x]),_[x]),l=p(g(n),v(n,r,i)),f=s,s=a,a=u,u=p(o,c),o=i,i=r,r=n,n=p(c,l);y[0]=p(n,y[0]),y[1]=p(r,y[1]),y[2]=p(i,y[2]),y[3]=p(o,y[3]),y[4]=p(u,y[4]),y[5]=p(a,y[5]),y[6]=p(s,y[6]),y[7]=p(f,y[7])}return y};e.exports=function(t){return l.hash(t,_,32,!0)}}).call(this,t(\\\"lYpoI2\\\"),\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{},t(\\\"buffer\\\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\\\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js\\\",\\\"/node_modules/gulp-browserify/node_modules/crypto-browserify\\\")},{\\\"./helpers\\\":4,buffer:3,lYpoI2:10}],10:[function(t,e,n){(function(t,n,r,i,o,u,a,s,f){function c(){}(t=e.exports={}).nextTick=function(){var t=\\\"undefined\\\"!=typeof window&&window.setImmediate,e=\\\"undefined\\\"!=typeof window&&window.postMessage&&window.addEventListener;if(t)return function(t){return window.setImmediate(t)};if(e){var n=[];return window.addEventListener(\\\"message\\\",function(t){var e=t.source;(e===window||null===e)&&\\\"process-tick\\\"===t.data&&(t.stopPropagation(),n.length>0)&&n.shift()()},!0),function(t){n.push(t),window.postMessage(\\\"process-tick\\\",\\\"*\\\")}}return function(t){setTimeout(t,0)}}(),t.title=\\\"browser\\\",t.browser=!0,t.env={},t.argv=[],t.on=c,t.addListener=c,t.once=c,t.off=c,t.removeListener=c,t.removeAllListeners=c,t.emit=c,t.binding=function(t){throw new Error(\\\"process.binding is not supported\\\")},t.cwd=function(){return\\\"/\\\"},t.chdir=function(t){throw new Error(\\\"process.chdir is not supported\\\")}}).call(this,t(\\\"lYpoI2\\\"),\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{},t(\\\"buffer\\\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\\\"/node_modules/gulp-browserify/node_modules/process/browser.js\\\",\\\"/node_modules/gulp-browserify/node_modules/process\\\")},{buffer:3,lYpoI2:10}],11:[function(t,e,n){(function(t,e,r,i,o,u,a,s,f){n.read=function(t,e,n,r,i){var o,u,a=8*i-r-1,s=(1<<a)-1,f=s>>1,c=-7,l=n?i-1:0,p=n?-1:1,h=t[e+l];for(l+=p,o=h&(1<<-c)-1,h>>=-c,c+=a;c>0;o=256*o+t[e+l],l+=p,c-=8);for(u=o&(1<<-c)-1,o>>=-c,c+=r;c>0;u=256*u+t[e+l],l+=p,c-=8);if(0===o)o=1-f;else{if(o===s)return u?NaN:1/0*(h?-1:1);u+=Math.pow(2,r),o-=f}return(h?-1:1)*u*Math.pow(2,o-r)},n.write=function(t,e,n,r,i,o){var u,a,s,f=8*o-i-1,c=(1<<f)-1,l=c>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:o-1,y=r?1:-1,d=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,u=c):(u=Math.floor(Math.log(e)/Math.LN2),e*(s=Math.pow(2,-u))<1&&(u--,s*=2),(e+=u+l>=1?p/s:p*Math.pow(2,1-l))*s>=2&&(u++,s/=2),u+l>=c?(a=0,u=c):u+l>=1?(a=(e*s-1)*Math.pow(2,i),u+=l):(a=e*Math.pow(2,l-1)*Math.pow(2,i),u=0));i>=8;t[n+h]=255&a,h+=y,a/=256,i-=8);for(u=u<<i|a,f+=i;f>0;t[n+h]=255&u,h+=y,u/=256,f-=8);t[n+h-y]|=128*d}}).call(this,t(\\\"lYpoI2\\\"),\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{},t(\\\"buffer\\\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\\\"/node_modules/ieee754/index.js\\\",\\\"/node_modules/ieee754\\\")},{buffer:3,lYpoI2:10}]},{},[1])(1)})}).call(this,\\\"undefined\\\"!=typeof global?global:\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{})},{}],95:[function(t,e,n){function r(){throw new Error(\\\"setTimeout has not been defined\\\")}function i(){throw new Error(\\\"clearTimeout has not been defined\\\")}function o(t){if(l===setTimeout)return setTimeout(t,0);if((l===r||!l)&&setTimeout)return l=setTimeout,setTimeout(t,0);try{return l(t,0)}catch(e){try{return l.call(null,t,0)}catch(e){return l.call(this,t,0)}}}function u(t){if(p===clearTimeout)return clearTimeout(t);if((p===i||!p)&&clearTimeout)return p=clearTimeout,clearTimeout(t);try{return p(t)}catch(e){try{return p.call(null,t)}catch(e){return p.call(this,t)}}}function a(){v&&y&&(v=!1,y.length?d=y.concat(d):g=-1,d.length&&s())}function s(){if(!v){var t=o(a);v=!0;for(var e=d.length;e;){for(y=d,d=[];++g<e;)y&&y[g].run();g=-1,e=d.length}y=null,v=!1,u(t)}}function f(t,e){this.fun=t,this.array=e}function c(){}var l,p,h=e.exports={};!function(){try{l=\\\"function\\\"==typeof setTimeout?setTimeout:r}catch(t){l=r}try{p=\\\"function\\\"==typeof clearTimeout?clearTimeout:i}catch(t){p=i}}();var y,d=[],v=!1,g=-1;h.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];d.push(new f(t,e)),1!==d.length||v||o(s)},f.prototype.run=function(){this.fun.apply(null,this.array)},h.title=\\\"browser\\\",h.browser=!0,h.env={},h.argv=[],h.version=\\\"\\\",h.versions={},h.on=c,h.addListener=c,h.once=c,h.off=c,h.removeListener=c,h.removeAllListeners=c,h.emit=c,h.prependListener=c,h.prependOnceListener=c,h.listeners=function(t){return[]},h.binding=function(t){throw new Error(\\\"process.binding is not supported\\\")},h.cwd=function(){return\\\"/\\\"},h.chdir=function(t){throw new Error(\\\"process.chdir is not supported\\\")},h.umask=function(){return 0}},{}],96:[function(t,e,n){(function(t){!function(t){\\\"use strict\\\";if(\\\"function\\\"==typeof bootstrap)bootstrap(\\\"promise\\\",t);else if(\\\"object\\\"==typeof n&&\\\"object\\\"==typeof e)e.exports=t();else if(\\\"undefined\\\"!=typeof ses){if(!ses.ok())return;ses.makeQ=t}else{if(\\\"undefined\\\"==typeof window&&\\\"undefined\\\"==typeof self)throw new Error(\\\"This environment was not anticipated by Q. Please file a bug.\\\");var r=\\\"undefined\\\"!=typeof window?window:self,i=r.Q;r.Q=t(),r.Q.noConflict=function(){return r.Q=i,this}}}(function(){\\\"use strict\\\";function e(t){return function(){return R.apply(t,arguments)}}function n(t){return t===Object(t)}function r(t){return\\\"[object StopIteration]\\\"===V(t)||t instanceof B}function i(t,e){if(T&&e.stack&&\\\"object\\\"==typeof t&&null!==t&&t.stack){for(var n=[],r=e;r;r=r.source)r.stack&&(!t.__minimumStackCounter__||t.__minimumStackCounter__>r.stackCounter)&&(F(t,\\\"__minimumStackCounter__\\\",{value:r.stackCounter,configurable:!0}),n.unshift(r.stack));n.unshift(t.stack);var i=o(n.join(\\\"\\\\n\\\"+Q+\\\"\\\\n\\\"));F(t,\\\"stack\\\",{value:i,configurable:!0})}}function o(t){for(var e=t.split(\\\"\\\\n\\\"),n=[],r=0;r<e.length;++r){var i=e[r];s(i)||u(i)||!i||n.push(i)}return n.join(\\\"\\\\n\\\")}function u(t){return-1!==t.indexOf(\\\"(module.js:\\\")||-1!==t.indexOf(\\\"(node.js:\\\")}function a(t){var e=/at .+ \\\\((.+):(\\\\d+):(?:\\\\d+)\\\\)$/.exec(t);if(e)return[e[1],Number(e[2])];var n=/at ([^ ]+):(\\\\d+):(?:\\\\d+)$/.exec(t);if(n)return[n[1],Number(n[2])];var r=/.*@(.+):(\\\\d+)$/.exec(t);return r?[r[1],Number(r[2])]:void 0}function s(t){var e=a(t);if(!e)return!1;var n=e[0],r=e[1];return n===P&&r>=C&&r<=X}function f(){if(T)try{throw new Error}catch(n){var t=n.stack.split(\\\"\\\\n\\\"),e=a(t[0].indexOf(\\\"@\\\")>0?t[1]:t[2]);if(!e)return;return P=e[0],e[1]}}function c(t){return t instanceof y?t:b(t)?O(t):x(t)}function l(){function t(t){e=t,c.longStackSupport&&T&&(o.source=t),N(n,function(e,n){c.nextTick(function(){t.promiseDispatch.apply(t,n)})},void 0),n=void 0,r=void 0}var e,n=[],r=[],i=z(l.prototype),o=z(y.prototype);if(o.promiseDispatch=function(t,i,o){var u=$(arguments);n?(n.push(u),\\\"when\\\"===i&&o[1]&&r.push(o[1])):c.nextTick(function(){e.promiseDispatch.apply(e,u)})},o.valueOf=function(){if(n)return o;var t=v(e);return g(t)&&(e=t),t},o.inspect=function(){return e?e.inspect():{state:\\\"pending\\\"}},c.longStackSupport&&T)try{throw new Error}catch(t){o.stack=t.stack.substring(t.stack.indexOf(\\\"\\\\n\\\")+1),o.stackCounter=K++}return i.promise=o,i.resolve=function(n){e||t(c(n))},i.fulfill=function(n){e||t(x(n))},i.reject=function(n){e||t(j(n))},i.notify=function(t){e||N(r,function(e,n){c.nextTick(function(){n(t)})},void 0)},i}function p(t){if(\\\"function\\\"!=typeof t)throw new TypeError(\\\"resolver must be a function.\\\");var e=l();try{t(e.resolve,e.reject,e.notify)}catch(t){e.reject(t)}return e.promise}function h(t){return p(function(e,n){for(var r=0,i=t.length;r<i;r++)c(t[r]).then(e,n)})}function y(t,e,n){void 0===e&&(e=function(t){return j(new Error(\\\"Promise does not support operation: \\\"+t))}),void 0===n&&(n=function(){return{state:\\\"unknown\\\"}});var r=z(y.prototype);if(r.promiseDispatch=function(n,i,o){var u;try{u=t[i]?t[i].apply(r,o):e.call(r,i,o)}catch(t){u=j(t)}n&&n(u)},r.inspect=n,n){var i=n();\\\"rejected\\\"===i.state&&(r.exception=i.reason),r.valueOf=function(){var t=n();return\\\"pending\\\"===t.state||\\\"rejected\\\"===t.state?r:t.value}}return r}function d(t,e,n,r){return c(t).then(e,n,r)}function v(t){if(g(t)){var e=t.inspect();if(\\\"fulfilled\\\"===e.state)return e.value}return t}function g(t){return t instanceof y}function b(t){return n(t)&&\\\"function\\\"==typeof t.then}function m(){W.length=0,H.length=0,G||(G=!0)}function w(e,n){G&&(\\\"object\\\"==typeof t&&\\\"function\\\"==typeof t.emit&&c.nextTick.runAfter(function(){-1!==M(H,e)&&(t.emit(\\\"unhandledRejection\\\",n,e),J.push(e))}),H.push(e),n&&void 0!==n.stack?W.push(n.stack):W.push(\\\"(no stack) \\\"+n))}function _(e){if(G){var n=M(H,e);-1!==n&&(\\\"object\\\"==typeof t&&\\\"function\\\"==typeof t.emit&&c.nextTick.runAfter(function(){var r=M(J,e);-1!==r&&(t.emit(\\\"rejectionHandled\\\",W[n],e),J.splice(r,1))}),H.splice(n,1),W.splice(n,1))}}function j(t){var e=y({when:function(e){return e&&_(this),e?e(t):this}},function(){return this},function(){return{state:\\\"rejected\\\",reason:t}});return w(e,t),e}function x(t){return y({when:function(){return t},get:function(e){return t[e]},set:function(e,n){t[e]=n},delete:function(e){delete t[e]},post:function(e,n){return null===e||void 0===e?t.apply(void 0,n):t[e].apply(t,n)},apply:function(e,n){return t.apply(e,n)},keys:function(){return q(t)}},void 0,function(){return{state:\\\"fulfilled\\\",value:t}})}function O(t){var e=l();return c.nextTick(function(){try{t.then(e.resolve,e.reject,e.notify)}catch(t){e.reject(t)}}),e.promise}function k(t,e,n){return c(t).spread(e,n)}function E(t,e,n){return c(t).dispatch(e,n)}function A(t){return d(t,function(t){var e=0,n=l();return N(t,function(r,i,o){var u;g(i)&&\\\"fulfilled\\\"===(u=i.inspect()).state?t[o]=u.value:(++e,d(i,function(r){t[o]=r,0==--e&&n.resolve(t)},n.reject,function(t){n.notify({index:o,value:t})}))},void 0),0===e&&n.resolve(t),n.promise})}function S(t){if(0===t.length)return c.resolve();var e=c.defer(),n=0;return N(t,function(r,i,o){var u=t[o];n++,d(u,function(t){e.resolve(t)},function(t){0==--n&&(t.message=\\\"Q can't get fulfillment value from any promise, all promises were rejected. Last error message: \\\"+t.message,e.reject(t))},function(t){e.notify({index:o,value:t})})},void 0),e.promise}function I(t){return d(t,function(t){return t=D(t,c),d(A(D(t,function(t){return d(t,L,L)})),function(){return t})})}var T=!1;try{throw new Error}catch(t){T=!!t.stack}var P,B,C=f(),L=function(){},U=function(){function e(){for(var t,e;r.next;)t=(r=r.next).task,r.task=void 0,(e=r.domain)&&(r.domain=void 0,e.enter()),n(t,e);for(;s.length;)n(t=s.pop());o=!1}function n(t,n){try{t()}catch(t){if(a)throw n&&n.exit(),setTimeout(e,0),n&&n.enter(),t;setTimeout(function(){throw t},0)}n&&n.exit()}var r={task:void 0,next:null},i=r,o=!1,u=void 0,a=!1,s=[];if(U=function(e){i=i.next={task:e,domain:a&&t.domain,next:null},o||(o=!0,u())},\\\"object\\\"==typeof t&&\\\"[object process]\\\"===t.toString()&&t.nextTick)a=!0,u=function(){t.nextTick(e)};else if(\\\"function\\\"==typeof setImmediate)u=\\\"undefined\\\"!=typeof window?setImmediate.bind(window,e):function(){setImmediate(e)};else if(\\\"undefined\\\"!=typeof MessageChannel){var f=new MessageChannel;f.port1.onmessage=function(){u=c,f.port1.onmessage=e,e()};var c=function(){f.port2.postMessage(0)};u=function(){setTimeout(e,0),c()}}else u=function(){setTimeout(e,0)};return U.runAfter=function(t){s.push(t),o||(o=!0,u())},U}(),R=Function.call,$=e(Array.prototype.slice),N=e(Array.prototype.reduce||function(t,e){var n=0,r=this.length;if(1===arguments.length)for(;;){if(n in this){e=this[n++];break}if(++n>=r)throw new TypeError}for(;n<r;n++)n in this&&(e=t(e,this[n],n));return e}),M=e(Array.prototype.indexOf||function(t){for(var e=0;e<this.length;e++)if(this[e]===t)return e;return-1}),D=e(Array.prototype.map||function(t,e){var n=this,r=[];return N(n,function(i,o,u){r.push(t.call(e,o,u,n))},void 0),r}),z=Object.create||function(t){function e(){}return e.prototype=t,new e},F=Object.defineProperty||function(t,e,n){return t[e]=n.value,t},Y=e(Object.prototype.hasOwnProperty),q=Object.keys||function(t){var e=[];for(var n in t)Y(t,n)&&e.push(n);return e},V=e(Object.prototype.toString);B=\\\"undefined\\\"!=typeof ReturnValue?ReturnValue:function(t){this.value=t};var Q=\\\"From previous event:\\\";c.resolve=c,c.nextTick=U,c.longStackSupport=!1;var K=1;\\\"object\\\"==typeof t&&t&&t.env&&t.env.Q_DEBUG&&(c.longStackSupport=!0),c.defer=l,l.prototype.makeNodeResolver=function(){var t=this;return function(e,n){e?t.reject(e):arguments.length>2?t.resolve($(arguments,1)):t.resolve(n)}},c.Promise=p,c.promise=p,p.race=h,p.all=A,p.reject=j,p.resolve=c,c.passByCopy=function(t){return t},y.prototype.passByCopy=function(){return this},c.join=function(t,e){return c(t).join(e)},y.prototype.join=function(t){return c([this,t]).spread(function(t,e){if(t===e)return t;throw new Error(\\\"Q can't join: not the same: \\\"+t+\\\" \\\"+e)})},c.race=h,y.prototype.race=function(){return this.then(c.race)},c.makePromise=y,y.prototype.toString=function(){return\\\"[object Promise]\\\"},y.prototype.then=function(t,e,n){function r(e){try{return\\\"function\\\"==typeof t?t(e):e}catch(t){return j(t)}}function o(t){if(\\\"function\\\"==typeof e){i(t,a);try{return e(t)}catch(t){return j(t)}}return j(t)}function u(t){return\\\"function\\\"==typeof n?n(t):t}var a=this,s=l(),f=!1;return c.nextTick(function(){a.promiseDispatch(function(t){f||(f=!0,s.resolve(r(t)))},\\\"when\\\",[function(t){f||(f=!0,s.resolve(o(t)))}])}),a.promiseDispatch(void 0,\\\"when\\\",[void 0,function(t){var e,n=!1;try{e=u(t)}catch(t){if(n=!0,!c.onerror)throw t;c.onerror(t)}n||s.notify(e)}]),s.promise},c.tap=function(t,e){return c(t).tap(e)},y.prototype.tap=function(t){return t=c(t),this.then(function(e){return t.fcall(e).thenResolve(e)})},c.when=d,y.prototype.thenResolve=function(t){return this.then(function(){return t})},c.thenResolve=function(t,e){return c(t).thenResolve(e)},y.prototype.thenReject=function(t){return this.then(function(){throw t})},c.thenReject=function(t,e){return c(t).thenReject(e)},c.nearer=v,c.isPromise=g,c.isPromiseAlike=b,c.isPending=function(t){return g(t)&&\\\"pending\\\"===t.inspect().state},y.prototype.isPending=function(){return\\\"pending\\\"===this.inspect().state},c.isFulfilled=function(t){return!g(t)||\\\"fulfilled\\\"===t.inspect().state},y.prototype.isFulfilled=function(){return\\\"fulfilled\\\"===this.inspect().state},c.isRejected=function(t){return g(t)&&\\\"rejected\\\"===t.inspect().state},y.prototype.isRejected=function(){return\\\"rejected\\\"===this.inspect().state};var W=[],H=[],J=[],G=!0;c.resetUnhandledRejections=m,c.getUnhandledReasons=function(){return W.slice()},c.stopUnhandledRejectionTracking=function(){m(),G=!1},m(),c.reject=j,c.fulfill=x,c.master=function(t){return y({isDef:function(){}},function(e,n){return E(t,e,n)},function(){return c(t).inspect()})},c.spread=k,y.prototype.spread=function(t,e){return this.all().then(function(e){return t.apply(void 0,e)},e)},c.async=function(t){return function(){function e(t,e){var u;if(\\\"undefined\\\"==typeof StopIteration){try{u=n[t](e)}catch(t){return j(t)}return u.done?c(u.value):d(u.value,i,o)}try{u=n[t](e)}catch(t){return r(t)?c(t.value):j(t)}return d(u,i,o)}var n=t.apply(this,arguments),i=e.bind(e,\\\"next\\\"),o=e.bind(e,\\\"throw\\\");return i()}},c.spawn=function(t){c.done(c.async(t)())},c.return=function(t){throw new B(t)},c.promised=function(t){return function(){return k([this,A(arguments)],function(e,n){return t.apply(e,n)})}},c.dispatch=E,y.prototype.dispatch=function(t,e){var n=this,r=l();return c.nextTick(function(){n.promiseDispatch(r.resolve,t,e)}),r.promise},c.get=function(t,e){return c(t).dispatch(\\\"get\\\",[e])},y.prototype.get=function(t){return this.dispatch(\\\"get\\\",[t])},c.set=function(t,e,n){return c(t).dispatch(\\\"set\\\",[e,n])},y.prototype.set=function(t,e){return this.dispatch(\\\"set\\\",[t,e])},c.del=c.delete=function(t,e){return c(t).dispatch(\\\"delete\\\",[e])},y.prototype.del=y.prototype.delete=function(t){return this.dispatch(\\\"delete\\\",[t])},c.mapply=c.post=function(t,e,n){return c(t).dispatch(\\\"post\\\",[e,n])},y.prototype.mapply=y.prototype.post=function(t,e){return this.dispatch(\\\"post\\\",[t,e])},c.send=c.mcall=c.invoke=function(t,e){return c(t).dispatch(\\\"post\\\",[e,$(arguments,2)])},y.prototype.send=y.prototype.mcall=y.prototype.invoke=function(t){return this.dispatch(\\\"post\\\",[t,$(arguments,1)])},c.fapply=function(t,e){return c(t).dispatch(\\\"apply\\\",[void 0,e])},y.prototype.fapply=function(t){return this.dispatch(\\\"apply\\\",[void 0,t])},c.try=c.fcall=function(t){return c(t).dispatch(\\\"apply\\\",[void 0,$(arguments,1)])},y.prototype.fcall=function(){return this.dispatch(\\\"apply\\\",[void 0,$(arguments)])},c.fbind=function(t){var e=c(t),n=$(arguments,1);return function(){return e.dispatch(\\\"apply\\\",[this,n.concat($(arguments))])}},y.prototype.fbind=function(){var t=this,e=$(arguments);return function(){return t.dispatch(\\\"apply\\\",[this,e.concat($(arguments))])}},c.keys=function(t){return c(t).dispatch(\\\"keys\\\",[])},y.prototype.keys=function(){return this.dispatch(\\\"keys\\\",[])},c.all=A,y.prototype.all=function(){return A(this)},c.any=S,y.prototype.any=function(){return S(this)},c.allResolved=function(t,e,n){return function(){return\\\"undefined\\\"!=typeof console&&\\\"function\\\"==typeof console.warn&&console.warn(e+\\\" is deprecated, use \\\"+n+\\\" instead.\\\",new Error(\\\"\\\").stack),t.apply(t,arguments)}}(I,\\\"allResolved\\\",\\\"allSettled\\\"),y.prototype.allResolved=function(){return I(this)},c.allSettled=function(t){return c(t).allSettled()},y.prototype.allSettled=function(){return this.then(function(t){return A(D(t,function(t){function e(){return t.inspect()}return(t=c(t)).then(e,e)}))})},c.fail=c.catch=function(t,e){return c(t).then(void 0,e)},y.prototype.fail=y.prototype.catch=function(t){return this.then(void 0,t)},c.progress=function(t,e){return c(t).then(void 0,void 0,e)},y.prototype.progress=function(t){return this.then(void 0,void 0,t)},c.fin=c.finally=function(t,e){return c(t).finally(e)},y.prototype.fin=y.prototype.finally=function(t){if(!t||\\\"function\\\"!=typeof t.apply)throw new Error(\\\"Q can't apply finally callback\\\");return t=c(t),this.then(function(e){return t.fcall().then(function(){return e})},function(e){return t.fcall().then(function(){throw e})})},c.done=function(t,e,n,r){return c(t).done(e,n,r)},y.prototype.done=function(e,n,r){var o=function(t){c.nextTick(function(){if(i(t,u),!c.onerror)throw t;c.onerror(t)})},u=e||n||r?this.then(e,n,r):this;\\\"object\\\"==typeof t&&t&&t.domain&&(o=t.domain.bind(o)),u.then(void 0,o)},c.timeout=function(t,e,n){return c(t).timeout(e,n)},y.prototype.timeout=function(t,e){var n=l(),r=setTimeout(function(){e&&\\\"string\\\"!=typeof e||((e=new Error(e||\\\"Timed out after \\\"+t+\\\" ms\\\")).code=\\\"ETIMEDOUT\\\"),n.reject(e)},t);return this.then(function(t){clearTimeout(r),n.resolve(t)},function(t){clearTimeout(r),n.reject(t)},n.notify),n.promise},c.delay=function(t,e){return void 0===e&&(e=t,t=void 0),c(t).delay(e)},y.prototype.delay=function(t){return this.then(function(e){var n=l();return setTimeout(function(){n.resolve(e)},t),n.promise})},c.nfapply=function(t,e){return c(t).nfapply(e)},y.prototype.nfapply=function(t){var e=l(),n=$(t);return n.push(e.makeNodeResolver()),this.fapply(n).fail(e.reject),e.promise},c.nfcall=function(t){var e=$(arguments,1);return c(t).nfapply(e)},y.prototype.nfcall=function(){var t=$(arguments),e=l();return t.push(e.makeNodeResolver()),this.fapply(t).fail(e.reject),e.promise},c.nfbind=c.denodeify=function(t){if(void 0===t)throw new Error(\\\"Q can't wrap an undefined function\\\");var e=$(arguments,1);return function(){var n=e.concat($(arguments)),r=l();return n.push(r.makeNodeResolver()),c(t).fapply(n).fail(r.reject),r.promise}},y.prototype.nfbind=y.prototype.denodeify=function(){var t=$(arguments);return t.unshift(this),c.denodeify.apply(void 0,t)},c.nbind=function(t,e){var n=$(arguments,2);return function(){var r=n.concat($(arguments)),i=l();return r.push(i.makeNodeResolver()),c(function(){return t.apply(e,arguments)}).fapply(r).fail(i.reject),i.promise}},y.prototype.nbind=function(){var t=$(arguments,0);return t.unshift(this),c.nbind.apply(void 0,t)},c.nmapply=c.npost=function(t,e,n){return c(t).npost(e,n)},y.prototype.nmapply=y.prototype.npost=function(t,e){var n=$(e||[]),r=l();return n.push(r.makeNodeResolver()),this.dispatch(\\\"post\\\",[t,n]).fail(r.reject),r.promise},c.nsend=c.nmcall=c.ninvoke=function(t,e){var n=$(arguments,2),r=l();return n.push(r.makeNodeResolver()),c(t).dispatch(\\\"post\\\",[e,n]).fail(r.reject),r.promise},y.prototype.nsend=y.prototype.nmcall=y.prototype.ninvoke=function(t){var e=$(arguments,1),n=l();return e.push(n.makeNodeResolver()),this.dispatch(\\\"post\\\",[t,e]).fail(n.reject),n.promise},c.nodeify=function(t,e){return c(t).nodeify(e)},y.prototype.nodeify=function(t){if(!t)return this;this.then(function(e){c.nextTick(function(){t(null,e)})},function(e){c.nextTick(function(){t(e)})})},c.noConflict=function(){throw new Error(\\\"Q.noConflict only works when Q is used as a global\\\")};var X=f();return c})}).call(this,t(\\\"_process\\\"))},{_process:95}],97:[function(t,e,n){\\\"use strict\\\";e.exports=2147483647},{}],98:[function(t,e,n){\\\"use strict\\\";var r=t(\\\"es5-ext/number/to-pos-integer\\\"),i=t(\\\"./max-timeout\\\");e.exports=function(t){if((t=r(t))>i)throw new TypeError(t+\\\" exceeds maximum possible timeout\\\");return t}},{\\\"./max-timeout\\\":97,\\\"es5-ext/number/to-pos-integer\\\":44}]},{},[8])(8)});\\r\\n//# sourceMappingURL=zangodb.min.js.map\\r\\n\""
		},
		{
			"name": "signals.min.js",
			"source": "\"/*\\r\\n     JS Signals <http://millermedeiros.github.com/js-signals/>\\r\\n     Released under the MIT license\\r\\n     Author: Miller Medeiros\\r\\n     Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)\\r\\n*/\\r\\n\\r\\n(function(i){function h(a,b,c,d,e){this._listener=b;this._isOnce=c;this.context=d;this._signal=a;this._priority=e||0}function g(a,b){if(typeof a!==\\\"function\\\")throw Error(\\\"listener is a required param of {fn}() and should be a Function.\\\".replace(\\\"{fn}\\\",b));}function e(){this._bindings=[];this._prevParams=null;var a=this;this.dispatch=function(){e.prototype.dispatch.apply(a,arguments)}}h.prototype={active:!0,params:null,execute:function(a){var b;this.active&&this._listener&&(a=this.params?this.params.concat(a):a,b=this._listener.apply(this.context,a),this._isOnce&&this.detach());return b},detach:function(){return this.isBound()?this._signal.remove(this._listener,this.context):null},isBound:function(){return!!this._signal&&!!this._listener},isOnce:function(){return this._isOnce},getListener:function(){return this._listener},getSignal:function(){return this._signal},_destroy:function(){delete this._signal;delete this._listener;delete this.context},toString:function(){return\\\"[SignalBinding isOnce:\\\"+this._isOnce+\\\", isBound:\\\"+this.isBound()+\\\", active:\\\"+this.active+\\\"]\\\"}};e.prototype={VERSION:\\\"1.0.0\\\",memorize:!1,_shouldPropagate:!0,active:!0,_registerListener:function(a,b,c,d){var e=this._indexOfListener(a,c);if(e!==-1){if(a=this._bindings[e],a.isOnce()!==b)throw Error(\\\"You cannot add\\\"+(b?\\\"\\\":\\\"Once\\\")+\\\"() then add\\\"+(!b?\\\"\\\":\\\"Once\\\")+\\\"() the same listener without removing the relationship first.\\\");}else a=new h(this,a,b,c,d),this._addBinding(a);this.memorize&&this._prevParams&&a.execute(this._prevParams);return a},_addBinding:function(a){var b=this._bindings.length;do--b;while(this._bindings[b]&&a._priority<=this._bindings[b]._priority);this._bindings.splice(b+1,0,a)},_indexOfListener:function(a,b){for(var c=this._bindings.length,d;c--;)if(d=this._bindings[c],d._listener===a&&d.context===b)return c;return-1},has:function(a,b){return this._indexOfListener(a,b)!==-1},add:function(a,b,c){g(a,\\\"add\\\");return this._registerListener(a,!1,b,c)},addOnce:function(a,b,c){g(a,\\\"addOnce\\\");return this._registerListener(a,!0,b,c)},remove:function(a,b){g(a,\\\"remove\\\");var c=this._indexOfListener(a,b);c!==-1&&(this._bindings[c]._destroy(),this._bindings.splice(c,1));return a},removeAll:function(){for(var a=this._bindings.length;a--;)this._bindings[a]._destroy();this._bindings.length=0},getNumListeners:function(){return this._bindings.length},halt:function(){this._shouldPropagate=!1},dispatch:function(a){if(this.active){var b=Array.prototype.slice.call(arguments),c=this._bindings.length,d;if(this.memorize)this._prevParams=b;if(c){d=this._bindings.slice();this._shouldPropagate=!0;do c--;while(d[c]&&this._shouldPropagate&&d[c].execute(b)!==!1)}}},forget:function(){this._prevParams=null},dispose:function(){this.removeAll();delete this._bindings;delete this._prevParams},toString:function(){return\\\"[Signal active:\\\"+this.active+\\\" numListeners:\\\"+this.getNumListeners()+\\\"]\\\"}};var f=e;f.Signal=e;typeof define===\\\"function\\\"&&define.amd?define(function(){return f}):typeof module!==\\\"undefined\\\"&&module.exports?module.exports=f:i.signals=f})(this);\\r\\n\""
		},
		{
			"name": "bootbox.min.js",
			"source": "\"/**\\r\\n * bootbox.js v4.4.0\\r\\n *\\r\\n * http://bootboxjs.com/license.txt\\r\\n */\\r\\n!function(a,b){\\\"use strict\\\";\\\"function\\\"==typeof define&&define.amd?define([\\\"jquery\\\"],b):\\\"object\\\"==typeof exports?module.exports=b(require(\\\"jquery\\\")):a.bootbox=b(a.jQuery)}(this,function a(b,c){\\\"use strict\\\";function d(a){var b=q[o.locale];return b?b[a]:q.en[a]}function e(a,c,d){a.stopPropagation(),a.preventDefault();var e=b.isFunction(d)&&d.call(c,a)===!1;e||c.modal(\\\"hide\\\")}function f(a){var b,c=0;for(b in a)c++;return c}function g(a,c){var d=0;b.each(a,function(a,b){c(a,b,d++)})}function h(a){var c,d;if(\\\"object\\\"!=typeof a)throw new Error(\\\"Please supply an object of options\\\");if(!a.message)throw new Error(\\\"Please specify a message\\\");return a=b.extend({},o,a),a.buttons||(a.buttons={}),c=a.buttons,d=f(c),g(c,function(a,e,f){if(b.isFunction(e)&&(e=c[a]={callback:e}),\\\"object\\\"!==b.type(e))throw new Error(\\\"button with key \\\"+a+\\\" must be an object\\\");e.label||(e.label=a),e.className||(e.className=2>=d&&f===d-1?\\\"btn-primary\\\":\\\"btn-default\\\")}),a}function i(a,b){var c=a.length,d={};if(1>c||c>2)throw new Error(\\\"Invalid argument length\\\");return 2===c||\\\"string\\\"==typeof a[0]?(d[b[0]]=a[0],d[b[1]]=a[1]):d=a[0],d}function j(a,c,d){return b.extend(!0,{},a,i(c,d))}function k(a,b,c,d){var e={className:\\\"bootbox-\\\"+a,buttons:l.apply(null,b)};return m(j(e,d,c),b)}function l(){for(var a={},b=0,c=arguments.length;c>b;b++){var e=arguments[b],f=e.toLowerCase(),g=e.toUpperCase();a[f]={label:d(g)}}return a}function m(a,b){var d={};return g(b,function(a,b){d[b]=!0}),g(a.buttons,function(a){if(d[a]===c)throw new Error(\\\"button key \\\"+a+\\\" is not allowed (options are \\\"+b.join(\\\"\\\\n\\\")+\\\")\\\")}),a}var n={dialog:\\\"<div class='bootbox modal' tabindex='-1' role='dialog'><div class='modal-dialog'><div class='modal-content'><div class='modal-body'><div class='bootbox-body'></div></div></div></div></div>\\\",header:\\\"<div class='modal-header'><h4 class='modal-title'></h4></div>\\\",footer:\\\"<div class='modal-footer'></div>\\\",closeButton:\\\"<button type='button' class='bootbox-close-button close' data-dismiss='modal' aria-hidden='true'>&times;</button>\\\",form:\\\"<form class='bootbox-form'></form>\\\",inputs:{text:\\\"<input class='bootbox-input bootbox-input-text form-control' autocomplete=off type=text />\\\",textarea:\\\"<textarea class='bootbox-input bootbox-input-textarea form-control'></textarea>\\\",email:\\\"<input class='bootbox-input bootbox-input-email form-control' autocomplete='off' type='email' />\\\",select:\\\"<select class='bootbox-input bootbox-input-select form-control'></select>\\\",checkbox:\\\"<div class='checkbox'><label><input class='bootbox-input bootbox-input-checkbox' type='checkbox' /></label></div>\\\",date:\\\"<input class='bootbox-input bootbox-input-date form-control' autocomplete=off type='date' />\\\",time:\\\"<input class='bootbox-input bootbox-input-time form-control' autocomplete=off type='time' />\\\",number:\\\"<input class='bootbox-input bootbox-input-number form-control' autocomplete=off type='number' />\\\",password:\\\"<input class='bootbox-input bootbox-input-password form-control' autocomplete='off' type='password' />\\\"}},o={locale:\\\"en\\\",backdrop:\\\"static\\\",animate:!0,className:null,closeButton:!0,show:!0,container:\\\"body\\\"},p={};p.alert=function(){var a;if(a=k(\\\"alert\\\",[\\\"ok\\\"],[\\\"message\\\",\\\"callback\\\"],arguments),a.callback&&!b.isFunction(a.callback))throw new Error(\\\"alert requires callback property to be a function when provided\\\");return a.buttons.ok.callback=a.onEscape=function(){return b.isFunction(a.callback)?a.callback.call(this):!0},p.dialog(a)},p.confirm=function(){var a;if(a=k(\\\"confirm\\\",[\\\"cancel\\\",\\\"confirm\\\"],[\\\"message\\\",\\\"callback\\\"],arguments),a.buttons.cancel.callback=a.onEscape=function(){return a.callback.call(this,!1)},a.buttons.confirm.callback=function(){return a.callback.call(this,!0)},!b.isFunction(a.callback))throw new Error(\\\"confirm requires a callback\\\");return p.dialog(a)},p.prompt=function(){var a,d,e,f,h,i,k;if(f=b(n.form),d={className:\\\"bootbox-prompt\\\",buttons:l(\\\"cancel\\\",\\\"confirm\\\"),value:\\\"\\\",inputType:\\\"text\\\"},a=m(j(d,arguments,[\\\"title\\\",\\\"callback\\\"]),[\\\"cancel\\\",\\\"confirm\\\"]),i=a.show===c?!0:a.show,a.message=f,a.buttons.cancel.callback=a.onEscape=function(){return a.callback.call(this,null)},a.buttons.confirm.callback=function(){var c;switch(a.inputType){case\\\"text\\\":case\\\"textarea\\\":case\\\"email\\\":case\\\"select\\\":case\\\"date\\\":case\\\"time\\\":case\\\"number\\\":case\\\"password\\\":c=h.val();break;case\\\"checkbox\\\":var d=h.find(\\\"input:checked\\\");c=[],g(d,function(a,d){c.push(b(d).val())})}return a.callback.call(this,c)},a.show=!1,!a.title)throw new Error(\\\"prompt requires a title\\\");if(!b.isFunction(a.callback))throw new Error(\\\"prompt requires a callback\\\");if(!n.inputs[a.inputType])throw new Error(\\\"invalid prompt type\\\");switch(h=b(n.inputs[a.inputType]),a.inputType){case\\\"text\\\":case\\\"textarea\\\":case\\\"email\\\":case\\\"date\\\":case\\\"time\\\":case\\\"number\\\":case\\\"password\\\":h.val(a.value);break;case\\\"select\\\":var o={};if(k=a.inputOptions||[],!b.isArray(k))throw new Error(\\\"Please pass an array of input options\\\");if(!k.length)throw new Error(\\\"prompt with select requires options\\\");g(k,function(a,d){var e=h;if(d.value===c||d.text===c)throw new Error(\\\"given options in wrong format\\\");d.group&&(o[d.group]||(o[d.group]=b(\\\"<optgroup/>\\\").attr(\\\"label\\\",d.group)),e=o[d.group]),e.append(\\\"<option value='\\\"+d.value+\\\"'>\\\"+d.text+\\\"</option>\\\")}),g(o,function(a,b){h.append(b)}),h.val(a.value);break;case\\\"checkbox\\\":var q=b.isArray(a.value)?a.value:[a.value];if(k=a.inputOptions||[],!k.length)throw new Error(\\\"prompt with checkbox requires options\\\");if(!k[0].value||!k[0].text)throw new Error(\\\"given options in wrong format\\\");h=b(\\\"<div/>\\\"),g(k,function(c,d){var e=b(n.inputs[a.inputType]);e.find(\\\"input\\\").attr(\\\"value\\\",d.value),e.find(\\\"label\\\").append(d.text),g(q,function(a,b){b===d.value&&e.find(\\\"input\\\").prop(\\\"checked\\\",!0)}),h.append(e)})}return a.placeholder&&h.attr(\\\"placeholder\\\",a.placeholder),a.pattern&&h.attr(\\\"pattern\\\",a.pattern),a.maxlength&&h.attr(\\\"maxlength\\\",a.maxlength),f.append(h),f.on(\\\"submit\\\",function(a){a.preventDefault(),a.stopPropagation(),e.find(\\\".btn-primary\\\").click()}),e=p.dialog(a),e.off(\\\"shown.bs.modal\\\"),e.on(\\\"shown.bs.modal\\\",function(){h.focus()}),i===!0&&e.modal(\\\"show\\\"),e},p.dialog=function(a){a=h(a);var d=b(n.dialog),f=d.find(\\\".modal-dialog\\\"),i=d.find(\\\".modal-body\\\"),j=a.buttons,k=\\\"\\\",l={onEscape:a.onEscape};if(b.fn.modal===c)throw new Error(\\\"$.fn.modal is not defined; please double check you have included the Bootstrap JavaScript library. See http://getbootstrap.com/javascript/ for more details.\\\");if(g(j,function(a,b){k+=\\\"<button data-bb-handler='\\\"+a+\\\"' type='button' class='btn \\\"+b.className+\\\"'>\\\"+b.label+\\\"</button>\\\",l[a]=b.callback}),i.find(\\\".bootbox-body\\\").html(a.message),a.animate===!0&&d.addClass(\\\"fade\\\"),a.className&&d.addClass(a.className),\\\"large\\\"===a.size?f.addClass(\\\"modal-lg\\\"):\\\"small\\\"===a.size&&f.addClass(\\\"modal-sm\\\"),a.title&&i.before(n.header),a.closeButton){var m=b(n.closeButton);a.title?d.find(\\\".modal-header\\\").prepend(m):m.css(\\\"margin-top\\\",\\\"-10px\\\").prependTo(i)}return a.title&&d.find(\\\".modal-title\\\").html(a.title),k.length&&(i.after(n.footer),d.find(\\\".modal-footer\\\").html(k)),d.on(\\\"hidden.bs.modal\\\",function(a){a.target===this&&d.remove()}),d.on(\\\"shown.bs.modal\\\",function(){d.find(\\\".btn-primary:first\\\").focus()}),\\\"static\\\"!==a.backdrop&&d.on(\\\"click.dismiss.bs.modal\\\",function(a){d.children(\\\".modal-backdrop\\\").length&&(a.currentTarget=d.children(\\\".modal-backdrop\\\").get(0)),a.target===a.currentTarget&&d.trigger(\\\"escape.close.bb\\\")}),d.on(\\\"escape.close.bb\\\",function(a){l.onEscape&&e(a,d,l.onEscape)}),d.on(\\\"click\\\",\\\".modal-footer button\\\",function(a){var c=b(this).data(\\\"bb-handler\\\");e(a,d,l[c])}),d.on(\\\"click\\\",\\\".bootbox-close-button\\\",function(a){e(a,d,l.onEscape)}),d.on(\\\"keyup\\\",function(a){27===a.which&&d.trigger(\\\"escape.close.bb\\\")}),b(a.container).append(d),d.modal({backdrop:a.backdrop?\\\"static\\\":!1,keyboard:!1,show:!1}),a.show&&d.modal(\\\"show\\\"),d},p.setDefaults=function(){var a={};2===arguments.length?a[arguments[0]]=arguments[1]:a=arguments[0],b.extend(o,a)},p.hideAll=function(){return b(\\\".bootbox\\\").modal(\\\"hide\\\"),p};var q={bg_BG:{OK:\\\"Ок\\\",CANCEL:\\\"Отказ\\\",CONFIRM:\\\"Потвърждавам\\\"},br:{OK:\\\"OK\\\",CANCEL:\\\"Cancelar\\\",CONFIRM:\\\"Sim\\\"},cs:{OK:\\\"OK\\\",CANCEL:\\\"Zrušit\\\",CONFIRM:\\\"Potvrdit\\\"},da:{OK:\\\"OK\\\",CANCEL:\\\"Annuller\\\",CONFIRM:\\\"Accepter\\\"},de:{OK:\\\"OK\\\",CANCEL:\\\"Abbrechen\\\",CONFIRM:\\\"Akzeptieren\\\"},el:{OK:\\\"Εντάξει\\\",CANCEL:\\\"Ακύρωση\\\",CONFIRM:\\\"Επιβεβαίωση\\\"},en:{OK:\\\"OK\\\",CANCEL:\\\"Cancel\\\",CONFIRM:\\\"OK\\\"},es:{OK:\\\"OK\\\",CANCEL:\\\"Cancelar\\\",CONFIRM:\\\"Aceptar\\\"},et:{OK:\\\"OK\\\",CANCEL:\\\"Katkesta\\\",CONFIRM:\\\"OK\\\"},fa:{OK:\\\"قبول\\\",CANCEL:\\\"لغو\\\",CONFIRM:\\\"تایید\\\"},fi:{OK:\\\"OK\\\",CANCEL:\\\"Peruuta\\\",CONFIRM:\\\"OK\\\"},fr:{OK:\\\"OK\\\",CANCEL:\\\"Annuler\\\",CONFIRM:\\\"D'accord\\\"},he:{OK:\\\"אישור\\\",CANCEL:\\\"ביטול\\\",CONFIRM:\\\"אישור\\\"},hu:{OK:\\\"OK\\\",CANCEL:\\\"Mégsem\\\",CONFIRM:\\\"Megerősít\\\"},hr:{OK:\\\"OK\\\",CANCEL:\\\"Odustani\\\",CONFIRM:\\\"Potvrdi\\\"},id:{OK:\\\"OK\\\",CANCEL:\\\"Batal\\\",CONFIRM:\\\"OK\\\"},it:{OK:\\\"OK\\\",CANCEL:\\\"Annulla\\\",CONFIRM:\\\"Conferma\\\"},ja:{OK:\\\"OK\\\",CANCEL:\\\"キャンセル\\\",CONFIRM:\\\"確認\\\"},lt:{OK:\\\"Gerai\\\",CANCEL:\\\"Atšaukti\\\",CONFIRM:\\\"Patvirtinti\\\"},lv:{OK:\\\"Labi\\\",CANCEL:\\\"Atcelt\\\",CONFIRM:\\\"Apstiprināt\\\"},nl:{OK:\\\"OK\\\",CANCEL:\\\"Annuleren\\\",CONFIRM:\\\"Accepteren\\\"},no:{OK:\\\"OK\\\",CANCEL:\\\"Avbryt\\\",CONFIRM:\\\"OK\\\"},pl:{OK:\\\"OK\\\",CANCEL:\\\"Anuluj\\\",CONFIRM:\\\"Potwierdź\\\"},pt:{OK:\\\"OK\\\",CANCEL:\\\"Cancelar\\\",CONFIRM:\\\"Confirmar\\\"},ru:{OK:\\\"OK\\\",CANCEL:\\\"Отмена\\\",CONFIRM:\\\"Применить\\\"},sq:{OK:\\\"OK\\\",CANCEL:\\\"Anulo\\\",CONFIRM:\\\"Prano\\\"},sv:{OK:\\\"OK\\\",CANCEL:\\\"Avbryt\\\",CONFIRM:\\\"OK\\\"},th:{OK:\\\"ตกลง\\\",CANCEL:\\\"ยกเลิก\\\",CONFIRM:\\\"ยืนยัน\\\"},tr:{OK:\\\"Tamam\\\",CANCEL:\\\"İptal\\\",CONFIRM:\\\"Onayla\\\"},zh_CN:{OK:\\\"OK\\\",CANCEL:\\\"取消\\\",CONFIRM:\\\"确认\\\"},zh_TW:{OK:\\\"OK\\\",CANCEL:\\\"取消\\\",CONFIRM:\\\"確認\\\"}};return p.addLocale=function(a,c){return b.each([\\\"OK\\\",\\\"CANCEL\\\",\\\"CONFIRM\\\"],function(a,b){if(!c[b])throw new Error(\\\"Please supply a translation for '\\\"+b+\\\"'\\\")}),q[a]={OK:c.OK,CANCEL:c.CANCEL,CONFIRM:c.CONFIRM},p},p.removeLocale=function(a){return delete q[a],p},p.setLocale=function(a){return p.setDefaults(\\\"locale\\\",a)},p.init=function(c){return a(c||b)},p});\""
		},
		{
			"name": "validator.min.js",
			"source": "\"/*!\\r\\n * Copyright (c) 2016 Chris O'Hara <cohara87@gmail.com>\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining\\r\\n * a copy of this software and associated documentation files (the\\r\\n * \\\"Software\\\"), to deal in the Software without restriction, including\\r\\n * without limitation the rights to use, copy, modify, merge, publish,\\r\\n * distribute, sublicense, and/or sell copies of the Software, and to\\r\\n * permit persons to whom the Software is furnished to do so, subject to\\r\\n * the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be\\r\\n * included in all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND,\\r\\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\r\\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\\r\\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\\r\\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\\r\\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\\r\\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\r\\n */\\r\\n!function(e,t){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=t():\\\"function\\\"==typeof define&&define.amd?define(t):e.validator=t()}(this,function(){\\\"use strict\\\";function f(e){if(!(\\\"string\\\"==typeof e||e instanceof String))throw new TypeError(\\\"This library (validator.js) validates strings only\\\")}function i(e){return f(e),e=Date.parse(e),isNaN(e)?null:new Date(e)}function r(e){return f(e),parseFloat(e)}var a=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\\\"function\\\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\\\"symbol\\\":typeof e};function n(e){return\\\"object\\\"===(void 0===e?\\\"undefined\\\":a(e))&&null!==e?e=\\\"function\\\"==typeof e.toString?e.toString():\\\"[object Object]\\\":(null==e||isNaN(e)&&!e.length)&&(e=\\\"\\\"),String(e)}function c(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e}function d(e,t){f(e);var r=void 0,o=void 0;\\\"object\\\"===(void 0===t?\\\"undefined\\\":a(t))?(r=t.min||0,o=t.max):(r=t,o=arguments[2]);var i=encodeURI(e).split(/%..|./).length-1;return r<=i&&(void 0===o||i<=o)}var l={require_tld:!0,allow_underscores:!1,allow_trailing_dot:!1};function p(e,t){f(e),(t=c(t,l)).allow_trailing_dot&&\\\".\\\"===e[e.length-1]&&(e=e.substring(0,e.length-1));for(var r=e.split(\\\".\\\"),o=0;o<r.length;o++)if(63<r[o].length)return!1;if(t.require_tld){var i=r.pop();if(!r.length||!/^([a-z\\\\u00a1-\\\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(i))return!1;if(/[\\\\s\\\\u2002-\\\\u200B\\\\u202F\\\\u205F\\\\u3000\\\\uFEFF\\\\uDB40\\\\uDC20]/.test(i))return!1}for(var n,a=0;a<r.length;a++){if(n=r[a],t.allow_underscores&&(n=n.replace(/_/g,\\\"\\\")),!/^[a-z\\\\u00a1-\\\\uffff0-9-]+$/i.test(n))return!1;if(/[\\\\uff01-\\\\uff5e]/.test(n))return!1;if(\\\"-\\\"===n[0]||\\\"-\\\"===n[n.length-1])return!1}return!0}var g={allow_display_name:!1,require_display_name:!1,allow_utf8_local_part:!0,require_tld:!0},A=/^[a-z\\\\d!#\\\\$%&'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\^_`{\\\\|}~\\\\.\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]+[a-z\\\\d!#\\\\$%&'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\^_`{\\\\|}~\\\\,\\\\.\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\\\\s]*<(.+)>$/i,h=/^[a-z\\\\d!#\\\\$%&'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\^_`{\\\\|}~]+$/i,v=/^([\\\\s\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x7f\\\\x21\\\\x23-\\\\x5b\\\\x5d-\\\\x7e]|(\\\\\\\\[\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0d-\\\\x7f]))*$/i,m=/^[a-z\\\\d!#\\\\$%&'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\^_`{\\\\|}~\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]+$/i,_=/^([\\\\s\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x7f\\\\x21\\\\x23-\\\\x5b\\\\x5d-\\\\x7e\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]|(\\\\\\\\[\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0d-\\\\x7f\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]))*$/i;var s=/^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$/,u=/^[0-9A-F]{1,4}$/i;function F(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\\\"\\\";if(f(e),!(t=String(t)))return F(e,4)||F(e,6);if(\\\"4\\\"===t)return!!s.test(e)&&e.split(\\\".\\\").sort(function(e,t){return e-t})[3]<=255;if(\\\"6\\\"===t){var r=e.split(\\\":\\\"),o=!1,i=F(r[r.length-1],4),n=i?7:8;if(r.length>n)return!1;if(\\\"::\\\"===e)return!0;\\\"::\\\"===e.substr(0,2)?(r.shift(),r.shift(),o=!0):\\\"::\\\"===e.substr(e.length-2)&&(r.pop(),r.pop(),o=!0);for(var a=0;a<r.length;++a)if(\\\"\\\"===r[a]&&0<a&&a<r.length-1){if(o)return!1;o=!0}else if(i&&a===r.length-1);else if(!u.test(r[a]))return!1;return o?1<=r.length:r.length===n}return!1}var $={protocols:[\\\"http\\\",\\\"https\\\",\\\"ftp\\\"],require_tld:!0,require_protocol:!1,require_host:!0,require_valid_protocol:!0,allow_underscores:!1,allow_trailing_dot:!1,allow_protocol_relative_urls:!1},S=/^\\\\[([^\\\\]]+)\\\\](?::([0-9]+))?$/;function R(e,t){for(var r=0;r<t.length;r++){var o=t[r];if(e===o||(i=o,\\\"[object RegExp]\\\"===Object.prototype.toString.call(i)&&o.test(e)))return!0}var i;return!1}var t=/^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;for(var e,o={\\\"en-US\\\":/^[A-Z]+$/i,\\\"bg-BG\\\":/^[А-Я]+$/i,\\\"cs-CZ\\\":/^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\\\"da-DK\\\":/^[A-ZÆØÅ]+$/i,\\\"de-DE\\\":/^[A-ZÄÖÜß]+$/i,\\\"el-GR\\\":/^[Α-ω]+$/i,\\\"es-ES\\\":/^[A-ZÁÉÍÑÓÚÜ]+$/i,\\\"fr-FR\\\":/^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\\\"it-IT\\\":/^[A-ZÀÉÈÌÎÓÒÙ]+$/i,\\\"nb-NO\\\":/^[A-ZÆØÅ]+$/i,\\\"nl-NL\\\":/^[A-ZÁÉËÏÓÖÜÚ]+$/i,\\\"nn-NO\\\":/^[A-ZÆØÅ]+$/i,\\\"hu-HU\\\":/^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\\\"pl-PL\\\":/^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\\\"pt-PT\\\":/^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,\\\"ru-RU\\\":/^[А-ЯЁ]+$/i,\\\"sk-SK\\\":/^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\\\"sr-RS@latin\\\":/^[A-ZČĆŽŠĐ]+$/i,\\\"sr-RS\\\":/^[А-ЯЂЈЉЊЋЏ]+$/i,\\\"sv-SE\\\":/^[A-ZÅÄÖ]+$/i,\\\"tr-TR\\\":/^[A-ZÇĞİıÖŞÜ]+$/i,\\\"uk-UA\\\":/^[А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},E={\\\"en-US\\\":/^[0-9A-Z]+$/i,\\\"bg-BG\\\":/^[0-9А-Я]+$/i,\\\"cs-CZ\\\":/^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\\\"da-DK\\\":/^[0-9A-ZÆØÅ]+$/i,\\\"de-DE\\\":/^[0-9A-ZÄÖÜß]+$/i,\\\"el-GR\\\":/^[0-9Α-ω]+$/i,\\\"es-ES\\\":/^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\\\"fr-FR\\\":/^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\\\"it-IT\\\":/^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,\\\"hu-HU\\\":/^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\\\"nb-NO\\\":/^[0-9A-ZÆØÅ]+$/i,\\\"nl-NL\\\":/^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,\\\"nn-NO\\\":/^[0-9A-ZÆØÅ]+$/i,\\\"pl-PL\\\":/^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\\\"pt-PT\\\":/^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,\\\"ru-RU\\\":/^[0-9А-ЯЁ]+$/i,\\\"sk-SK\\\":/^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\\\"sr-RS@latin\\\":/^[0-9A-ZČĆŽŠĐ]+$/i,\\\"sr-RS\\\":/^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\\\"sv-SE\\\":/^[0-9A-ZÅÄÖ]+$/i,\\\"tr-TR\\\":/^[0-9A-ZÇĞİıÖŞÜ]+$/i,\\\"uk-UA\\\":/^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},x={\\\"en-US\\\":\\\".\\\",ar:\\\"٫\\\"},M=[\\\"AU\\\",\\\"GB\\\",\\\"HK\\\",\\\"IN\\\",\\\"NZ\\\",\\\"ZA\\\",\\\"ZM\\\"],C=0;C<M.length;C++)o[e=\\\"en-\\\"+M[C]]=o[\\\"en-US\\\"],E[e]=E[\\\"en-US\\\"],x[e]=x[\\\"en-US\\\"];for(var N,w=[\\\"AE\\\",\\\"BH\\\",\\\"DZ\\\",\\\"EG\\\",\\\"IQ\\\",\\\"JO\\\",\\\"KW\\\",\\\"LB\\\",\\\"LY\\\",\\\"MA\\\",\\\"QM\\\",\\\"QA\\\",\\\"SA\\\",\\\"SD\\\",\\\"SY\\\",\\\"TN\\\",\\\"YE\\\"],T=0;T<w.length;T++)o[N=\\\"ar-\\\"+w[T]]=o.ar,E[N]=E.ar,x[N]=x.ar;for(var Z=[],B=[\\\"bg-BG\\\",\\\"cs-CZ\\\",\\\"da-DK\\\",\\\"de-DE\\\",\\\"el-GR\\\",\\\"es-ES\\\",\\\"fr-FR\\\",\\\"it-IT\\\",\\\"hu-HU\\\",\\\"nb-NO\\\",\\\"nn-NO\\\",\\\"nl-NL\\\",\\\"pl-Pl\\\",\\\"pt-PT\\\",\\\"ru-RU\\\",\\\"sr-RS@latin\\\",\\\"sr-RS\\\",\\\"sv-SE\\\",\\\"tr-TR\\\",\\\"uk-UA\\\"],I=0;I<Z.length;I++)x[Z[I]]=x[\\\"en-US\\\"];for(var L=0;L<B.length;L++)x[B[L]]=\\\",\\\";o[\\\"pt-BR\\\"]=o[\\\"pt-PT\\\"],E[\\\"pt-BR\\\"]=E[\\\"pt-PT\\\"],x[\\\"pt-BR\\\"]=x[\\\"pt-PT\\\"];var y=/^[+-]?([0-9]*[.])?[0-9]+$/;var G=/^(?:[-+]?(?:0|[1-9][0-9]*))$/,D=/^[-+]?[0-9]+$/;function O(e,t){f(e);var r=(t=t||{}).hasOwnProperty(\\\"allow_leading_zeroes\\\")&&!t.allow_leading_zeroes?G:D,o=!t.hasOwnProperty(\\\"min\\\")||e>=t.min,i=!t.hasOwnProperty(\\\"max\\\")||e<=t.max,n=!t.hasOwnProperty(\\\"lt\\\")||e<t.lt,a=!t.hasOwnProperty(\\\"gt\\\")||e>t.gt;return r.test(e)&&o&&i&&n&&a}var U=/^[\\\\x00-\\\\x7F]+$/;var b=/[^\\\\u0020-\\\\u007E\\\\uFF61-\\\\uFF9F\\\\uFFA0-\\\\uFFDC\\\\uFFE8-\\\\uFFEE0-9a-zA-Z]/;var P=/[\\\\u0020-\\\\u007E\\\\uFF61-\\\\uFF9F\\\\uFFA0-\\\\uFFDC\\\\uFFE8-\\\\uFFEE0-9a-zA-Z]/;var K=/[^\\\\x00-\\\\x7F]/;var k=/[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]/;var H={force_decimal:!1,decimal_digits:\\\"1,\\\",locale:\\\"en-US\\\"},z=[\\\"\\\",\\\"-\\\",\\\"+\\\"];var V=/^[0-9A-F]+$/i;function W(e){return f(e),V.test(e)}var Y=/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;var j=/^[A-Z]{2}[0-9A-Z]{3}\\\\d{2}\\\\d{5}$/;var J=/^[a-f0-9]{32}$/;var q={md5:32,md4:32,sha1:40,sha256:64,sha384:96,sha512:128,ripemd128:32,ripemd160:40,tiger128:32,tiger160:40,tiger192:48,crc32:8,crc32b:8};var Q={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};var X=/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\\\d{3})\\\\d{11}|6[27][0-9]{14})$/;var ee=/^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;var te=/^(?:[0-9]{9}X|[0-9]{10})$/,re=/^(?:[0-9]{13})$/,oe=[1,3];var ie=\\\"^\\\\\\\\d{4}-?\\\\\\\\d{3}[\\\\\\\\dX]$\\\";var ne={\\\"ar-AE\\\":/^((\\\\+?971)|0)?5[024568]\\\\d{7}$/,\\\"ar-DZ\\\":/^(\\\\+?213|0)(5|6|7)\\\\d{8}$/,\\\"ar-EG\\\":/^((\\\\+?20)|0)?1[012]\\\\d{8}$/,\\\"ar-JO\\\":/^(\\\\+?962|0)?7[789]\\\\d{7}$/,\\\"ar-SA\\\":/^(!?(\\\\+?966)|0)?5\\\\d{8}$/,\\\"ar-SY\\\":/^(!?(\\\\+?963)|0)?9\\\\d{8}$/,\\\"be-BY\\\":/^(\\\\+?375)?(24|25|29|33|44)\\\\d{7}$/,\\\"bg-BG\\\":/^(\\\\+?359|0)?8[789]\\\\d{7}$/,\\\"cs-CZ\\\":/^(\\\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\\\"da-DK\\\":/^(\\\\+?45)?\\\\s?\\\\d{2}\\\\s?\\\\d{2}\\\\s?\\\\d{2}\\\\s?\\\\d{2}$/,\\\"de-DE\\\":/^(\\\\+?49[ \\\\.\\\\-])?([\\\\(]{1}[0-9]{1,6}[\\\\)])?([0-9 \\\\.\\\\-\\\\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/,\\\"el-GR\\\":/^(\\\\+?30|0)?(69\\\\d{8})$/,\\\"en-AU\\\":/^(\\\\+?61|0)4\\\\d{8}$/,\\\"en-GB\\\":/^(\\\\+?44|0)7\\\\d{9}$/,\\\"en-HK\\\":/^(\\\\+?852\\\\-?)?[456789]\\\\d{3}\\\\-?\\\\d{4}$/,\\\"en-IN\\\":/^(\\\\+?91|0)?[6789]\\\\d{9}$/,\\\"en-KE\\\":/^(\\\\+?254|0)?[7]\\\\d{8}$/,\\\"en-NG\\\":/^(\\\\+?234|0)?[789]\\\\d{9}$/,\\\"en-NZ\\\":/^(\\\\+?64|0)2\\\\d{7,9}$/,\\\"en-PK\\\":/^((\\\\+92)|(0092))-{0,1}\\\\d{3}-{0,1}\\\\d{7}$|^\\\\d{11}$|^\\\\d{4}-\\\\d{7}$/,\\\"en-RW\\\":/^(\\\\+?250|0)?[7]\\\\d{8}$/,\\\"en-SG\\\":/^(\\\\+65)?[89]\\\\d{7}$/,\\\"en-TZ\\\":/^(\\\\+?255|0)?[67]\\\\d{8}$/,\\\"en-UG\\\":/^(\\\\+?256|0)?[7]\\\\d{8}$/,\\\"en-US\\\":/^(\\\\+?1)?[2-9]\\\\d{2}[2-9](?!11)\\\\d{6}$/,\\\"en-ZA\\\":/^(\\\\+?27|0)\\\\d{9}$/,\\\"en-ZM\\\":/^(\\\\+?26)?09[567]\\\\d{7}$/,\\\"es-ES\\\":/^(\\\\+?34)?(6\\\\d{1}|7[1234])\\\\d{7}$/,\\\"et-EE\\\":/^(\\\\+?372)?\\\\s?(5|8[1-4])\\\\s?([0-9]\\\\s?){6,7}$/,\\\"fa-IR\\\":/^(\\\\+?98[\\\\-\\\\s]?|0)9[0-39]\\\\d[\\\\-\\\\s]?\\\\d{3}[\\\\-\\\\s]?\\\\d{4}$/,\\\"fi-FI\\\":/^(\\\\+?358|0)\\\\s?(4(0|1|2|4|5|6)?|50)\\\\s?(\\\\d\\\\s?){4,8}\\\\d$/,\\\"fo-FO\\\":/^(\\\\+?298)?\\\\s?\\\\d{2}\\\\s?\\\\d{2}\\\\s?\\\\d{2}$/,\\\"fr-FR\\\":/^(\\\\+?33|0)[67]\\\\d{8}$/,\\\"he-IL\\\":/^(\\\\+972|0)([23489]|5[012345689]|77)[1-9]\\\\d{6}/,\\\"hu-HU\\\":/^(\\\\+?36)(20|30|70)\\\\d{7}$/,\\\"id-ID\\\":/^(\\\\+?62|0[1-9])[\\\\s|\\\\d]+$/,\\\"it-IT\\\":/^(\\\\+?39)?\\\\s?3\\\\d{2} ?\\\\d{6,7}$/,\\\"ja-JP\\\":/^(\\\\+?81|0)[789]0[ \\\\-]?[1-9]\\\\d{2}[ \\\\-]?\\\\d{5}$/,\\\"kk-KZ\\\":/^(\\\\+?7|8)?7\\\\d{9}$/,\\\"kl-GL\\\":/^(\\\\+?299)?\\\\s?\\\\d{2}\\\\s?\\\\d{2}\\\\s?\\\\d{2}$/,\\\"ko-KR\\\":/^((\\\\+?82)[ \\\\-]?)?0?1([0|1|6|7|8|9]{1})[ \\\\-]?\\\\d{3,4}[ \\\\-]?\\\\d{4}$/,\\\"lt-LT\\\":/^(\\\\+370|8)\\\\d{8}$/,\\\"ms-MY\\\":/^(\\\\+?6?01){1}(([145]{1}(\\\\-|\\\\s)?\\\\d{7,8})|([236789]{1}(\\\\s|\\\\-)?\\\\d{7}))$/,\\\"nb-NO\\\":/^(\\\\+?47)?[49]\\\\d{7}$/,\\\"nl-BE\\\":/^(\\\\+?32|0)4?\\\\d{8}$/,\\\"nn-NO\\\":/^(\\\\+?47)?[49]\\\\d{7}$/,\\\"pl-PL\\\":/^(\\\\+?48)? ?[5-8]\\\\d ?\\\\d{3} ?\\\\d{2} ?\\\\d{2}$/,\\\"pt-BR\\\":/^(\\\\+?55|0)\\\\-?[1-9]{2}\\\\-?[2-9]{1}\\\\d{3,4}\\\\-?\\\\d{4}$/,\\\"pt-PT\\\":/^(\\\\+?351)?9[1236]\\\\d{7}$/,\\\"ro-RO\\\":/^(\\\\+?4?0)\\\\s?7\\\\d{2}(\\\\/|\\\\s|\\\\.|\\\\-)?\\\\d{3}(\\\\s|\\\\.|\\\\-)?\\\\d{3}$/,\\\"ru-RU\\\":/^(\\\\+?7|8)?9\\\\d{9}$/,\\\"sk-SK\\\":/^(\\\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\\\"sr-RS\\\":/^(\\\\+3816|06)[- \\\\d]{5,9}$/,\\\"th-TH\\\":/^(\\\\+66|66|0)\\\\d{9}$/,\\\"tr-TR\\\":/^(\\\\+?90|0)?5\\\\d{9}$/,\\\"uk-UA\\\":/^(\\\\+?38|8)?0\\\\d{9}$/,\\\"vi-VN\\\":/^(\\\\+?84|0)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,\\\"zh-CN\\\":/^(\\\\+?0?86\\\\-?)?1[3456789]\\\\d{9}$/,\\\"zh-TW\\\":/^(\\\\+?886\\\\-?|0)?9\\\\d{8}$/};ne[\\\"en-CA\\\"]=ne[\\\"en-US\\\"],ne[\\\"fr-BE\\\"]=ne[\\\"nl-BE\\\"],ne[\\\"zh-HK\\\"]=ne[\\\"en-HK\\\"];var ae={symbol:\\\"$\\\",require_symbol:!1,allow_space_after_symbol:!1,symbol_after_digits:!1,allow_negatives:!0,parens_for_negatives:!1,negative_sign_before_digits:!1,negative_sign_after_digits:!1,allow_negative_sign_placeholder:!1,thousands_separator:\\\",\\\",decimal_separator:\\\".\\\",allow_decimal:!0,require_decimal:!1,digits_after_decimal:[2],allow_space_after_digits:!1};var le=/^([\\\\+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([\\\\.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([\\\\.,]\\\\d+)?)?([zZ]|([\\\\+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;var se=/([01][0-9]|2[0-3])/,ue=/[0-5][0-9]/,de=new RegExp(\\\"[-+]\\\"+se.source+\\\":\\\"+ue.source),ce=new RegExp(\\\"([zZ]|\\\"+de.source+\\\")\\\"),fe=new RegExp(se.source+\\\":\\\"+ue.source+\\\":\\\"+/([0-5][0-9]|60)/.source+/(\\\\.[0-9]+)?/.source),pe=new RegExp(/[0-9]{4}/.source+\\\"-\\\"+/(0[1-9]|1[0-2])/.source+\\\"-\\\"+/([12]\\\\d|0[1-9]|3[01])/.source),ge=new RegExp(\\\"\\\"+fe.source+ce.source),Ae=new RegExp(pe.source+\\\"[ tT]\\\"+ge.source);var he=[\\\"AD\\\",\\\"AE\\\",\\\"AF\\\",\\\"AG\\\",\\\"AI\\\",\\\"AL\\\",\\\"AM\\\",\\\"AO\\\",\\\"AQ\\\",\\\"AR\\\",\\\"AS\\\",\\\"AT\\\",\\\"AU\\\",\\\"AW\\\",\\\"AX\\\",\\\"AZ\\\",\\\"BA\\\",\\\"BB\\\",\\\"BD\\\",\\\"BE\\\",\\\"BF\\\",\\\"BG\\\",\\\"BH\\\",\\\"BI\\\",\\\"BJ\\\",\\\"BL\\\",\\\"BM\\\",\\\"BN\\\",\\\"BO\\\",\\\"BQ\\\",\\\"BR\\\",\\\"BS\\\",\\\"BT\\\",\\\"BV\\\",\\\"BW\\\",\\\"BY\\\",\\\"BZ\\\",\\\"CA\\\",\\\"CC\\\",\\\"CD\\\",\\\"CF\\\",\\\"CG\\\",\\\"CH\\\",\\\"CI\\\",\\\"CK\\\",\\\"CL\\\",\\\"CM\\\",\\\"CN\\\",\\\"CO\\\",\\\"CR\\\",\\\"CU\\\",\\\"CV\\\",\\\"CW\\\",\\\"CX\\\",\\\"CY\\\",\\\"CZ\\\",\\\"DE\\\",\\\"DJ\\\",\\\"DK\\\",\\\"DM\\\",\\\"DO\\\",\\\"DZ\\\",\\\"EC\\\",\\\"EE\\\",\\\"EG\\\",\\\"EH\\\",\\\"ER\\\",\\\"ES\\\",\\\"ET\\\",\\\"FI\\\",\\\"FJ\\\",\\\"FK\\\",\\\"FM\\\",\\\"FO\\\",\\\"FR\\\",\\\"GA\\\",\\\"GB\\\",\\\"GD\\\",\\\"GE\\\",\\\"GF\\\",\\\"GG\\\",\\\"GH\\\",\\\"GI\\\",\\\"GL\\\",\\\"GM\\\",\\\"GN\\\",\\\"GP\\\",\\\"GQ\\\",\\\"GR\\\",\\\"GS\\\",\\\"GT\\\",\\\"GU\\\",\\\"GW\\\",\\\"GY\\\",\\\"HK\\\",\\\"HM\\\",\\\"HN\\\",\\\"HR\\\",\\\"HT\\\",\\\"HU\\\",\\\"ID\\\",\\\"IE\\\",\\\"IL\\\",\\\"IM\\\",\\\"IN\\\",\\\"IO\\\",\\\"IQ\\\",\\\"IR\\\",\\\"IS\\\",\\\"IT\\\",\\\"JE\\\",\\\"JM\\\",\\\"JO\\\",\\\"JP\\\",\\\"KE\\\",\\\"KG\\\",\\\"KH\\\",\\\"KI\\\",\\\"KM\\\",\\\"KN\\\",\\\"KP\\\",\\\"KR\\\",\\\"KW\\\",\\\"KY\\\",\\\"KZ\\\",\\\"LA\\\",\\\"LB\\\",\\\"LC\\\",\\\"LI\\\",\\\"LK\\\",\\\"LR\\\",\\\"LS\\\",\\\"LT\\\",\\\"LU\\\",\\\"LV\\\",\\\"LY\\\",\\\"MA\\\",\\\"MC\\\",\\\"MD\\\",\\\"ME\\\",\\\"MF\\\",\\\"MG\\\",\\\"MH\\\",\\\"MK\\\",\\\"ML\\\",\\\"MM\\\",\\\"MN\\\",\\\"MO\\\",\\\"MP\\\",\\\"MQ\\\",\\\"MR\\\",\\\"MS\\\",\\\"MT\\\",\\\"MU\\\",\\\"MV\\\",\\\"MW\\\",\\\"MX\\\",\\\"MY\\\",\\\"MZ\\\",\\\"NA\\\",\\\"NC\\\",\\\"NE\\\",\\\"NF\\\",\\\"NG\\\",\\\"NI\\\",\\\"NL\\\",\\\"NO\\\",\\\"NP\\\",\\\"NR\\\",\\\"NU\\\",\\\"NZ\\\",\\\"OM\\\",\\\"PA\\\",\\\"PE\\\",\\\"PF\\\",\\\"PG\\\",\\\"PH\\\",\\\"PK\\\",\\\"PL\\\",\\\"PM\\\",\\\"PN\\\",\\\"PR\\\",\\\"PS\\\",\\\"PT\\\",\\\"PW\\\",\\\"PY\\\",\\\"QA\\\",\\\"RE\\\",\\\"RO\\\",\\\"RS\\\",\\\"RU\\\",\\\"RW\\\",\\\"SA\\\",\\\"SB\\\",\\\"SC\\\",\\\"SD\\\",\\\"SE\\\",\\\"SG\\\",\\\"SH\\\",\\\"SI\\\",\\\"SJ\\\",\\\"SK\\\",\\\"SL\\\",\\\"SM\\\",\\\"SN\\\",\\\"SO\\\",\\\"SR\\\",\\\"SS\\\",\\\"ST\\\",\\\"SV\\\",\\\"SX\\\",\\\"SY\\\",\\\"SZ\\\",\\\"TC\\\",\\\"TD\\\",\\\"TF\\\",\\\"TG\\\",\\\"TH\\\",\\\"TJ\\\",\\\"TK\\\",\\\"TL\\\",\\\"TM\\\",\\\"TN\\\",\\\"TO\\\",\\\"TR\\\",\\\"TT\\\",\\\"TV\\\",\\\"TW\\\",\\\"TZ\\\",\\\"UA\\\",\\\"UG\\\",\\\"UM\\\",\\\"US\\\",\\\"UY\\\",\\\"UZ\\\",\\\"VA\\\",\\\"VC\\\",\\\"VE\\\",\\\"VG\\\",\\\"VI\\\",\\\"VN\\\",\\\"VU\\\",\\\"WF\\\",\\\"WS\\\",\\\"YE\\\",\\\"YT\\\",\\\"ZA\\\",\\\"ZM\\\",\\\"ZW\\\"];var ve=[\\\"AFG\\\",\\\"ALA\\\",\\\"ALB\\\",\\\"DZA\\\",\\\"ASM\\\",\\\"AND\\\",\\\"AGO\\\",\\\"AIA\\\",\\\"ATA\\\",\\\"ATG\\\",\\\"ARG\\\",\\\"ARM\\\",\\\"ABW\\\",\\\"AUS\\\",\\\"AUT\\\",\\\"AZE\\\",\\\"BHS\\\",\\\"BHR\\\",\\\"BGD\\\",\\\"BRB\\\",\\\"BLR\\\",\\\"BEL\\\",\\\"BLZ\\\",\\\"BEN\\\",\\\"BMU\\\",\\\"BTN\\\",\\\"BOL\\\",\\\"BES\\\",\\\"BIH\\\",\\\"BWA\\\",\\\"BVT\\\",\\\"BRA\\\",\\\"IOT\\\",\\\"BRN\\\",\\\"BGR\\\",\\\"BFA\\\",\\\"BDI\\\",\\\"KHM\\\",\\\"CMR\\\",\\\"CAN\\\",\\\"CPV\\\",\\\"CYM\\\",\\\"CAF\\\",\\\"TCD\\\",\\\"CHL\\\",\\\"CHN\\\",\\\"CXR\\\",\\\"CCK\\\",\\\"COL\\\",\\\"COM\\\",\\\"COG\\\",\\\"COD\\\",\\\"COK\\\",\\\"CRI\\\",\\\"CIV\\\",\\\"HRV\\\",\\\"CUB\\\",\\\"CUW\\\",\\\"CYP\\\",\\\"CZE\\\",\\\"DNK\\\",\\\"DJI\\\",\\\"DMA\\\",\\\"DOM\\\",\\\"ECU\\\",\\\"EGY\\\",\\\"SLV\\\",\\\"GNQ\\\",\\\"ERI\\\",\\\"EST\\\",\\\"ETH\\\",\\\"FLK\\\",\\\"FRO\\\",\\\"FJI\\\",\\\"FIN\\\",\\\"FRA\\\",\\\"GUF\\\",\\\"PYF\\\",\\\"ATF\\\",\\\"GAB\\\",\\\"GMB\\\",\\\"GEO\\\",\\\"DEU\\\",\\\"GHA\\\",\\\"GIB\\\",\\\"GRC\\\",\\\"GRL\\\",\\\"GRD\\\",\\\"GLP\\\",\\\"GUM\\\",\\\"GTM\\\",\\\"GGY\\\",\\\"GIN\\\",\\\"GNB\\\",\\\"GUY\\\",\\\"HTI\\\",\\\"HMD\\\",\\\"VAT\\\",\\\"HND\\\",\\\"HKG\\\",\\\"HUN\\\",\\\"ISL\\\",\\\"IND\\\",\\\"IDN\\\",\\\"IRN\\\",\\\"IRQ\\\",\\\"IRL\\\",\\\"IMN\\\",\\\"ISR\\\",\\\"ITA\\\",\\\"JAM\\\",\\\"JPN\\\",\\\"JEY\\\",\\\"JOR\\\",\\\"KAZ\\\",\\\"KEN\\\",\\\"KIR\\\",\\\"PRK\\\",\\\"KOR\\\",\\\"KWT\\\",\\\"KGZ\\\",\\\"LAO\\\",\\\"LVA\\\",\\\"LBN\\\",\\\"LSO\\\",\\\"LBR\\\",\\\"LBY\\\",\\\"LIE\\\",\\\"LTU\\\",\\\"LUX\\\",\\\"MAC\\\",\\\"MKD\\\",\\\"MDG\\\",\\\"MWI\\\",\\\"MYS\\\",\\\"MDV\\\",\\\"MLI\\\",\\\"MLT\\\",\\\"MHL\\\",\\\"MTQ\\\",\\\"MRT\\\",\\\"MUS\\\",\\\"MYT\\\",\\\"MEX\\\",\\\"FSM\\\",\\\"MDA\\\",\\\"MCO\\\",\\\"MNG\\\",\\\"MNE\\\",\\\"MSR\\\",\\\"MAR\\\",\\\"MOZ\\\",\\\"MMR\\\",\\\"NAM\\\",\\\"NRU\\\",\\\"NPL\\\",\\\"NLD\\\",\\\"NCL\\\",\\\"NZL\\\",\\\"NIC\\\",\\\"NER\\\",\\\"NGA\\\",\\\"NIU\\\",\\\"NFK\\\",\\\"MNP\\\",\\\"NOR\\\",\\\"OMN\\\",\\\"PAK\\\",\\\"PLW\\\",\\\"PSE\\\",\\\"PAN\\\",\\\"PNG\\\",\\\"PRY\\\",\\\"PER\\\",\\\"PHL\\\",\\\"PCN\\\",\\\"POL\\\",\\\"PRT\\\",\\\"PRI\\\",\\\"QAT\\\",\\\"REU\\\",\\\"ROU\\\",\\\"RUS\\\",\\\"RWA\\\",\\\"BLM\\\",\\\"SHN\\\",\\\"KNA\\\",\\\"LCA\\\",\\\"MAF\\\",\\\"SPM\\\",\\\"VCT\\\",\\\"WSM\\\",\\\"SMR\\\",\\\"STP\\\",\\\"SAU\\\",\\\"SEN\\\",\\\"SRB\\\",\\\"SYC\\\",\\\"SLE\\\",\\\"SGP\\\",\\\"SXM\\\",\\\"SVK\\\",\\\"SVN\\\",\\\"SLB\\\",\\\"SOM\\\",\\\"ZAF\\\",\\\"SGS\\\",\\\"SSD\\\",\\\"ESP\\\",\\\"LKA\\\",\\\"SDN\\\",\\\"SUR\\\",\\\"SJM\\\",\\\"SWZ\\\",\\\"SWE\\\",\\\"CHE\\\",\\\"SYR\\\",\\\"TWN\\\",\\\"TJK\\\",\\\"TZA\\\",\\\"THA\\\",\\\"TLS\\\",\\\"TGO\\\",\\\"TKL\\\",\\\"TON\\\",\\\"TTO\\\",\\\"TUN\\\",\\\"TUR\\\",\\\"TKM\\\",\\\"TCA\\\",\\\"TUV\\\",\\\"UGA\\\",\\\"UKR\\\",\\\"ARE\\\",\\\"GBR\\\",\\\"USA\\\",\\\"UMI\\\",\\\"URY\\\",\\\"UZB\\\",\\\"VUT\\\",\\\"VEN\\\",\\\"VNM\\\",\\\"VGB\\\",\\\"VIR\\\",\\\"WLF\\\",\\\"ESH\\\",\\\"YEM\\\",\\\"ZMB\\\",\\\"ZWE\\\"];var me=/[^A-Z0-9+\\\\/=]/i;var _e=/^[a-z]+\\\\/[a-z0-9\\\\-\\\\+]+$/i,Fe=/^[a-z\\\\-]+=[a-z0-9\\\\-]+$/i,$e=/^[a-z0-9!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=\\\\-\\\\._~:@\\\\/\\\\?%\\\\s]*$/i;var Se=/^(application|audio|font|image|message|model|multipart|text|video)\\\\/[a-zA-Z0-9\\\\.\\\\-\\\\+]{1,100}$/i,Re=/^text\\\\/[a-zA-Z0-9\\\\.\\\\-\\\\+]{1,100};\\\\s?charset=(\\\"[a-zA-Z0-9\\\\.\\\\-\\\\+\\\\s]{0,70}\\\"|[a-zA-Z0-9\\\\.\\\\-\\\\+]{0,70})(\\\\s?\\\\([a-zA-Z0-9\\\\.\\\\-\\\\+\\\\s]{1,20}\\\\))?$/i,Ee=/^multipart\\\\/[a-zA-Z0-9\\\\.\\\\-\\\\+]{1,100}(;\\\\s?(boundary|charset)=(\\\"[a-zA-Z0-9\\\\.\\\\-\\\\+\\\\s]{0,70}\\\"|[a-zA-Z0-9\\\\.\\\\-\\\\+]{0,70})(\\\\s?\\\\([a-zA-Z0-9\\\\.\\\\-\\\\+\\\\s]{1,20}\\\\))?){0,2}$/i;var xe=/^\\\\(?[+-]?(90(\\\\.0+)?|[1-8]?\\\\d(\\\\.\\\\d+)?)$/,Me=/^\\\\s?[+-]?(180(\\\\.0+)?|1[0-7]\\\\d(\\\\.\\\\d+)?|\\\\d{1,2}(\\\\.\\\\d+)?)\\\\)?$/,Ce=/^\\\\d{4}$/,Ne=/^\\\\d{5}$/,we=/^\\\\d{6}$/,Te={AT:Ce,AU:Ce,BE:Ce,BG:Ce,CA:/^[ABCEGHJKLMNPRSTVXY]\\\\d[ABCEGHJ-NPRSTV-Z][\\\\s\\\\-]?\\\\d[ABCEGHJ-NPRSTV-Z]\\\\d$/i,CH:Ce,CZ:/^\\\\d{3}\\\\s?\\\\d{2}$/,DE:Ne,DK:Ce,DZ:Ne,ES:Ne,FI:Ne,FR:/^\\\\d{2}\\\\s?\\\\d{3}$/,GB:/^(gir\\\\s?0aa|[a-z]{1,2}\\\\d[\\\\da-z]?\\\\s?(\\\\d[a-z]{2})?)$/i,GR:/^\\\\d{3}\\\\s?\\\\d{2}$/,IL:Ne,IN:we,IS:/^\\\\d{3}$/,IT:Ne,JP:/^\\\\d{3}\\\\-\\\\d{4}$/,KE:Ne,LI:/^(948[5-9]|949[0-7])$/,MX:Ne,NL:/^\\\\d{4}\\\\s?[a-z]{2}$/i,NO:Ce,PL:/^\\\\d{2}\\\\-\\\\d{3}$/,PT:/^\\\\d{4}\\\\-\\\\d{3}?$/,RO:we,RU:we,SA:Ne,SE:/^\\\\d{3}\\\\s?\\\\d{2}$/,SK:/^\\\\d{3}\\\\s?\\\\d{2}$/,TW:/^\\\\d{3}(\\\\d{2})?$/,US:/^\\\\d{5}(-\\\\d{4})?$/,ZA:Ce,ZM:Ne};function Ze(e,t){f(e);var r=t?new RegExp(\\\"^[\\\"+t+\\\"]+\\\",\\\"g\\\"):/^\\\\s+/g;return e.replace(r,\\\"\\\")}function Be(e,t){f(e);for(var r=t?new RegExp(\\\"[\\\"+t+\\\"]\\\"):/\\\\s/,o=e.length-1;0<=o&&r.test(e[o]);)o--;return o<e.length?e.substr(0,o+1):e}function Ie(e,t){return f(e),e.replace(new RegExp(\\\"[\\\"+t+\\\"]+\\\",\\\"g\\\"),\\\"\\\")}var Le={all_lowercase:!0,gmail_lowercase:!0,gmail_remove_dots:!0,gmail_remove_subaddress:!0,gmail_convert_googlemaildotcom:!0,outlookdotcom_lowercase:!0,outlookdotcom_remove_subaddress:!0,yahoo_lowercase:!0,yahoo_remove_subaddress:!0,yandex_lowercase:!0,icloud_lowercase:!0,icloud_remove_subaddress:!0},ye=[\\\"icloud.com\\\",\\\"me.com\\\"],Ge=[\\\"hotmail.at\\\",\\\"hotmail.be\\\",\\\"hotmail.ca\\\",\\\"hotmail.cl\\\",\\\"hotmail.co.il\\\",\\\"hotmail.co.nz\\\",\\\"hotmail.co.th\\\",\\\"hotmail.co.uk\\\",\\\"hotmail.com\\\",\\\"hotmail.com.ar\\\",\\\"hotmail.com.au\\\",\\\"hotmail.com.br\\\",\\\"hotmail.com.gr\\\",\\\"hotmail.com.mx\\\",\\\"hotmail.com.pe\\\",\\\"hotmail.com.tr\\\",\\\"hotmail.com.vn\\\",\\\"hotmail.cz\\\",\\\"hotmail.de\\\",\\\"hotmail.dk\\\",\\\"hotmail.es\\\",\\\"hotmail.fr\\\",\\\"hotmail.hu\\\",\\\"hotmail.id\\\",\\\"hotmail.ie\\\",\\\"hotmail.in\\\",\\\"hotmail.it\\\",\\\"hotmail.jp\\\",\\\"hotmail.kr\\\",\\\"hotmail.lv\\\",\\\"hotmail.my\\\",\\\"hotmail.ph\\\",\\\"hotmail.pt\\\",\\\"hotmail.sa\\\",\\\"hotmail.sg\\\",\\\"hotmail.sk\\\",\\\"live.be\\\",\\\"live.co.uk\\\",\\\"live.com\\\",\\\"live.com.ar\\\",\\\"live.com.mx\\\",\\\"live.de\\\",\\\"live.es\\\",\\\"live.eu\\\",\\\"live.fr\\\",\\\"live.it\\\",\\\"live.nl\\\",\\\"msn.com\\\",\\\"outlook.at\\\",\\\"outlook.be\\\",\\\"outlook.cl\\\",\\\"outlook.co.il\\\",\\\"outlook.co.nz\\\",\\\"outlook.co.th\\\",\\\"outlook.com\\\",\\\"outlook.com.ar\\\",\\\"outlook.com.au\\\",\\\"outlook.com.br\\\",\\\"outlook.com.gr\\\",\\\"outlook.com.pe\\\",\\\"outlook.com.tr\\\",\\\"outlook.com.vn\\\",\\\"outlook.cz\\\",\\\"outlook.de\\\",\\\"outlook.dk\\\",\\\"outlook.es\\\",\\\"outlook.fr\\\",\\\"outlook.hu\\\",\\\"outlook.id\\\",\\\"outlook.ie\\\",\\\"outlook.in\\\",\\\"outlook.it\\\",\\\"outlook.jp\\\",\\\"outlook.kr\\\",\\\"outlook.lv\\\",\\\"outlook.my\\\",\\\"outlook.ph\\\",\\\"outlook.pt\\\",\\\"outlook.sa\\\",\\\"outlook.sg\\\",\\\"outlook.sk\\\",\\\"passport.com\\\"],De=[\\\"rocketmail.com\\\",\\\"yahoo.ca\\\",\\\"yahoo.co.uk\\\",\\\"yahoo.com\\\",\\\"yahoo.de\\\",\\\"yahoo.fr\\\",\\\"yahoo.in\\\",\\\"yahoo.it\\\",\\\"ymail.com\\\"],Oe=[\\\"yandex.ru\\\",\\\"yandex.ua\\\",\\\"yandex.kz\\\",\\\"yandex.com\\\",\\\"yandex.by\\\",\\\"ya.ru\\\"];function Ue(e){return 1<e.length?e:\\\"\\\"}return{version:\\\"10.1.0\\\",toDate:i,toFloat:r,toInt:function(e,t){return f(e),parseInt(e,t||10)},toBoolean:function(e,t){return f(e),t?\\\"1\\\"===e||\\\"true\\\"===e:\\\"0\\\"!==e&&\\\"false\\\"!==e&&\\\"\\\"!==e},equals:function(e,t){return f(e),e===t},contains:function(e,t){return f(e),0<=e.indexOf(n(t))},matches:function(e,t,r){return f(e),\\\"[object RegExp]\\\"!==Object.prototype.toString.call(t)&&(t=new RegExp(t,r)),t.test(e)},isEmail:function(e,t){if(f(e),(t=c(t,g)).require_display_name||t.allow_display_name){var r=e.match(A);if(r)e=r[1];else if(t.require_display_name)return!1}var o=e.split(\\\"@\\\"),i=o.pop(),n=o.join(\\\"@\\\"),a=i.toLowerCase();if(\\\"gmail.com\\\"!==a&&\\\"googlemail.com\\\"!==a||(n=n.toLowerCase()),!d(n,{max:64})||!d(i,{max:254}))return!1;if(!p(i,{require_tld:t.require_tld}))return!1;if('\\\"'===n[0])return n=n.slice(1,n.length-1),t.allow_utf8_local_part?_.test(n):v.test(n);for(var l=t.allow_utf8_local_part?m:h,s=n.split(\\\".\\\"),u=0;u<s.length;u++)if(!l.test(s[u]))return!1;return!0},isURL:function(e,t){if(f(e),!e||2083<=e.length||/[\\\\s<>]/.test(e))return!1;if(0===e.indexOf(\\\"mailto:\\\"))return!1;t=c(t,$);var r=void 0,o=void 0,i=void 0,n=void 0,a=void 0,l=void 0,s=void 0,u=void 0;if(1<(s=(e=(s=(e=(s=e.split(\\\"#\\\")).shift()).split(\\\"?\\\")).shift()).split(\\\"://\\\")).length){if(r=s.shift(),t.require_valid_protocol&&-1===t.protocols.indexOf(r))return!1}else{if(t.require_protocol)return!1;t.allow_protocol_relative_urls&&\\\"//\\\"===e.substr(0,2)&&(s[0]=e.substr(2))}if(\\\"\\\"===(e=s.join(\\\"://\\\")))return!1;if(\\\"\\\"===(e=(s=e.split(\\\"/\\\")).shift())&&!t.require_host)return!0;if(1<(s=e.split(\\\"@\\\")).length&&0<=(o=s.shift()).indexOf(\\\":\\\")&&2<o.split(\\\":\\\").length)return!1;u=l=null;var d=(n=s.join(\\\"@\\\")).match(S);return d?(i=\\\"\\\",u=d[1],l=d[2]||null):(i=(s=n.split(\\\":\\\")).shift(),s.length&&(l=s.join(\\\":\\\"))),!(null!==l&&(a=parseInt(l,10),!/^[0-9]+$/.test(l)||a<=0||65535<a)||!(F(i)||p(i,t)||u&&F(u,6))||(i=i||u,t.host_whitelist&&!R(i,t.host_whitelist)||t.host_blacklist&&R(i,t.host_blacklist)))},isMACAddress:function(e){return f(e),t.test(e)},isIP:F,isFQDN:p,isBoolean:function(e){return f(e),0<=[\\\"true\\\",\\\"false\\\",\\\"1\\\",\\\"0\\\"].indexOf(e)},isAlpha:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\\\"en-US\\\";if(f(e),t in o)return o[t].test(e);throw new Error(\\\"Invalid locale '\\\"+t+\\\"'\\\")},isAlphanumeric:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\\\"en-US\\\";if(f(e),t in E)return E[t].test(e);throw new Error(\\\"Invalid locale '\\\"+t+\\\"'\\\")},isNumeric:function(e){return f(e),y.test(e)},isPort:function(e){return O(e,{min:0,max:65535})},isLowercase:function(e){return f(e),e===e.toLowerCase()},isUppercase:function(e){return f(e),e===e.toUpperCase()},isAscii:function(e){return f(e),U.test(e)},isFullWidth:function(e){return f(e),b.test(e)},isHalfWidth:function(e){return f(e),P.test(e)},isVariableWidth:function(e){return f(e),b.test(e)&&P.test(e)},isMultibyte:function(e){return f(e),K.test(e)},isSurrogatePair:function(e){return f(e),k.test(e)},isInt:O,isFloat:function(e,t){f(e),t=t||{};var r=new RegExp(\\\"^(?:[-+])?(?:[0-9]+)?(?:\\\\\\\\\\\"+(t.locale?x[t.locale]:\\\".\\\")+\\\"[0-9]*)?(?:[eE][\\\\\\\\+\\\\\\\\-]?(?:[0-9]+))?$\\\");if(\\\"\\\"===e||\\\".\\\"===e||\\\"-\\\"===e||\\\"+\\\"===e)return!1;var o=parseFloat(e.replace(\\\",\\\",\\\".\\\"));return r.test(e)&&(!t.hasOwnProperty(\\\"min\\\")||o>=t.min)&&(!t.hasOwnProperty(\\\"max\\\")||o<=t.max)&&(!t.hasOwnProperty(\\\"lt\\\")||o<t.lt)&&(!t.hasOwnProperty(\\\"gt\\\")||o>t.gt)},isDecimal:function(e,t){if(f(e),(t=c(t,H)).locale in x)return!z.includes(e.replace(/ /g,\\\"\\\"))&&(r=t,new RegExp(\\\"^[-+]?([0-9]+)?(\\\\\\\\\\\"+x[r.locale]+\\\"[0-9]{\\\"+r.decimal_digits+\\\"})\\\"+(r.force_decimal?\\\"\\\":\\\"?\\\")+\\\"$\\\")).test(e);var r;throw new Error(\\\"Invalid locale '\\\"+t.locale+\\\"'\\\")},isHexadecimal:W,isDivisibleBy:function(e,t){return f(e),r(e)%parseInt(t,10)==0},isHexColor:function(e){return f(e),Y.test(e)},isISRC:function(e){return f(e),j.test(e)},isMD5:function(e){return f(e),J.test(e)},isHash:function(e,t){return f(e),new RegExp(\\\"^[a-f0-9]{\\\"+q[t]+\\\"}$\\\").test(e)},isJSON:function(e){f(e);try{var t=JSON.parse(e);return!!t&&\\\"object\\\"===(void 0===t?\\\"undefined\\\":a(t))}catch(e){}return!1},isEmpty:function(e){return f(e),0===e.length},isLength:function(e,t){f(e);var r=void 0,o=void 0;\\\"object\\\"===(void 0===t?\\\"undefined\\\":a(t))?(r=t.min||0,o=t.max):(r=t,o=arguments[2]);var i=e.match(/[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]/g)||[],n=e.length-i.length;return r<=n&&(void 0===o||n<=o)},isByteLength:d,isUUID:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\\\"all\\\";f(e);var r=Q[t];return r&&r.test(e)},isMongoId:function(e){return f(e),W(e)&&24===e.length},isAfter:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:String(new Date);f(e);var r=i(t),o=i(e);return!!(o&&r&&r<o)},isBefore:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:String(new Date);f(e);var r=i(t),o=i(e);return!!(o&&r&&o<r)},isIn:function(e,t){f(e);var r=void 0;if(\\\"[object Array]\\\"===Object.prototype.toString.call(t)){var o=[];for(r in t)({}).hasOwnProperty.call(t,r)&&(o[r]=n(t[r]));return 0<=o.indexOf(e)}return\\\"object\\\"===(void 0===t?\\\"undefined\\\":a(t))?t.hasOwnProperty(e):!(!t||\\\"function\\\"!=typeof t.indexOf)&&0<=t.indexOf(e)},isCreditCard:function(e){f(e);var t=e.replace(/[- ]+/g,\\\"\\\");if(!X.test(t))return!1;for(var r=0,o=void 0,i=void 0,n=void 0,a=t.length-1;0<=a;a--)o=t.substring(a,a+1),i=parseInt(o,10),r+=n&&10<=(i*=2)?i%10+1:i,n=!n;return!(r%10!=0||!t)},isISIN:function(e){if(f(e),!ee.test(e))return!1;for(var t=e.replace(/[A-Z]/g,function(e){return parseInt(e,36)}),r=0,o=void 0,i=void 0,n=!0,a=t.length-2;0<=a;a--)o=t.substring(a,a+1),i=parseInt(o,10),r+=n&&10<=(i*=2)?i+1:i,n=!n;return parseInt(e.substr(e.length-1),10)===(1e4-r)%10},isISBN:function e(t){var r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\\\"\\\";if(f(t),!(r=String(r)))return e(t,10)||e(t,13);var o=t.replace(/[\\\\s-]+/g,\\\"\\\"),i=0,n=void 0;if(\\\"10\\\"===r){if(!te.test(o))return!1;for(n=0;n<9;n++)i+=(n+1)*o.charAt(n);if(\\\"X\\\"===o.charAt(9)?i+=100:i+=10*o.charAt(9),i%11==0)return!!o}else if(\\\"13\\\"===r){if(!re.test(o))return!1;for(n=0;n<12;n++)i+=oe[n%2]*o.charAt(n);if(o.charAt(12)-(10-i%10)%10==0)return!!o}return!1},isISSN:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};f(e);var r=ie;if(r=t.require_hyphen?r.replace(\\\"?\\\",\\\"\\\"):r,!(r=t.case_sensitive?new RegExp(r):new RegExp(r,\\\"i\\\")).test(e))return!1;var o=e.replace(\\\"-\\\",\\\"\\\"),i=8,n=0,a=!0,l=!1,s=void 0;try{for(var u,d=o[Symbol.iterator]();!(a=(u=d.next()).done);a=!0){var c=u.value;n+=(\\\"X\\\"===c.toUpperCase()?10:+c)*i,--i}}catch(e){l=!0,s=e}finally{try{!a&&d.return&&d.return()}finally{if(l)throw s}}return n%11==0},isMobilePhone:function(e,t,r){if(f(e),r&&r.strictMode&&!e.startsWith(\\\"+\\\"))return!1;if(t in ne)return ne[t].test(e);if(\\\"any\\\"===t){for(var o in ne)if(ne.hasOwnProperty(o)&&ne[o].test(e))return!0;return!1}throw new Error(\\\"Invalid locale '\\\"+t+\\\"'\\\")},isPostalCode:function(e,t){if(f(e),t in Te)return Te[t].test(e);if(\\\"any\\\"===t){for(var r in Te)if(Te.hasOwnProperty(r)&&Te[r].test(e))return!0;return!1}throw new Error(\\\"Invalid locale '\\\"+t+\\\"'\\\")},isCurrency:function(e,t){return f(e),function(e){var r=\\\"\\\\\\\\d{\\\"+e.digits_after_decimal[0]+\\\"}\\\";e.digits_after_decimal.forEach(function(e,t){0!==t&&(r=r+\\\"|\\\\\\\\d{\\\"+e+\\\"}\\\")});var t=\\\"(\\\\\\\\\\\"+e.symbol.replace(/\\\\./g,\\\"\\\\\\\\.\\\")+\\\")\\\"+(e.require_symbol?\\\"\\\":\\\"?\\\"),o=\\\"(\\\"+[\\\"0\\\",\\\"[1-9]\\\\\\\\d*\\\",\\\"[1-9]\\\\\\\\d{0,2}(\\\\\\\\\\\"+e.thousands_separator+\\\"\\\\\\\\d{3})*\\\"].join(\\\"|\\\")+\\\")?\\\",i=\\\"(\\\\\\\\\\\"+e.decimal_separator+\\\"(\\\"+r+\\\"))\\\"+(e.require_decimal?\\\"\\\":\\\"?\\\"),n=o+(e.allow_decimal||e.require_decimal?i:\\\"\\\");return e.allow_negatives&&!e.parens_for_negatives&&(e.negative_sign_after_digits?n+=\\\"-?\\\":e.negative_sign_before_digits&&(n=\\\"-?\\\"+n)),e.allow_negative_sign_placeholder?n=\\\"( (?!\\\\\\\\-))?\\\"+n:e.allow_space_after_symbol?n=\\\" ?\\\"+n:e.allow_space_after_digits&&(n+=\\\"( (?!$))?\\\"),e.symbol_after_digits?n+=t:n=t+n,e.allow_negatives&&(e.parens_for_negatives?n=\\\"(\\\\\\\\(\\\"+n+\\\"\\\\\\\\)|\\\"+n+\\\")\\\":e.negative_sign_before_digits||e.negative_sign_after_digits||(n=\\\"-?\\\"+n)),new RegExp(\\\"^(?!-? )(?=.*\\\\\\\\d)\\\"+n+\\\"$\\\")}(t=c(t,ae)).test(e)},isISO8601:function(e){return f(e),le.test(e)},isRFC3339:function(e){return f(e),Ae.test(e)},isISO31661Alpha2:function(e){return f(e),he.includes(e.toUpperCase())},isISO31661Alpha3:function(e){return f(e),ve.includes(e.toUpperCase())},isBase64:function(e){f(e);var t=e.length;if(!t||t%4!=0||me.test(e))return!1;var r=e.indexOf(\\\"=\\\");return-1===r||r===t-1||r===t-2&&\\\"=\\\"===e[t-1]},isDataURI:function(e){f(e);var t=e.split(\\\",\\\");if(t.length<2)return!1;var r=t.shift().trim().split(\\\";\\\"),o=r.shift();if(\\\"data:\\\"!==o.substr(0,5))return!1;var i=o.substr(5);if(\\\"\\\"!==i&&!_e.test(i))return!1;for(var n=0;n<r.length;n++)if(n===r.length-1&&\\\"base64\\\"===r[n].toLowerCase());else if(!Fe.test(r[n]))return!1;for(var a=0;a<t.length;a++)if(!$e.test(t[a]))return!1;return!0},isMimeType:function(e){return f(e),Se.test(e)||Re.test(e)||Ee.test(e)},isLatLong:function(e){if(f(e),!e.includes(\\\",\\\"))return!1;var t=e.split(\\\",\\\");return xe.test(t[0])&&Me.test(t[1])},ltrim:Ze,rtrim:Be,trim:function(e,t){return Be(Ze(e,t),t)},escape:function(e){return f(e),e.replace(/&/g,\\\"&amp;\\\").replace(/\\\"/g,\\\"&quot;\\\").replace(/'/g,\\\"&#x27;\\\").replace(/</g,\\\"&lt;\\\").replace(/>/g,\\\"&gt;\\\").replace(/\\\\//g,\\\"&#x2F;\\\").replace(/\\\\\\\\/g,\\\"&#x5C;\\\").replace(/`/g,\\\"&#96;\\\")},unescape:function(e){return f(e),e.replace(/&amp;/g,\\\"&\\\").replace(/&quot;/g,'\\\"').replace(/&#x27;/g,\\\"'\\\").replace(/&lt;/g,\\\"<\\\").replace(/&gt;/g,\\\">\\\").replace(/&#x2F;/g,\\\"/\\\").replace(/&#x5C;/g,\\\"\\\\\\\\\\\").replace(/&#96;/g,\\\"`\\\")},stripLow:function(e,t){return f(e),Ie(e,t?\\\"\\\\\\\\x00-\\\\\\\\x09\\\\\\\\x0B\\\\\\\\x0C\\\\\\\\x0E-\\\\\\\\x1F\\\\\\\\x7F\\\":\\\"\\\\\\\\x00-\\\\\\\\x1F\\\\\\\\x7F\\\")},whitelist:function(e,t){return f(e),e.replace(new RegExp(\\\"[^\\\"+t+\\\"]+\\\",\\\"g\\\"),\\\"\\\")},blacklist:Ie,isWhitelisted:function(e,t){f(e);for(var r=e.length-1;0<=r;r--)if(-1===t.indexOf(e[r]))return!1;return!0},normalizeEmail:function(e,t){t=c(t,Le);var r=e.split(\\\"@\\\"),o=r.pop(),i=[r.join(\\\"@\\\"),o];if(i[1]=i[1].toLowerCase(),\\\"gmail.com\\\"===i[1]||\\\"googlemail.com\\\"===i[1]){if(t.gmail_remove_subaddress&&(i[0]=i[0].split(\\\"+\\\")[0]),t.gmail_remove_dots&&(i[0]=i[0].replace(/\\\\.+/g,Ue)),!i[0].length)return!1;(t.all_lowercase||t.gmail_lowercase)&&(i[0]=i[0].toLowerCase()),i[1]=t.gmail_convert_googlemaildotcom?\\\"gmail.com\\\":i[1]}else if(~ye.indexOf(i[1])){if(t.icloud_remove_subaddress&&(i[0]=i[0].split(\\\"+\\\")[0]),!i[0].length)return!1;(t.all_lowercase||t.icloud_lowercase)&&(i[0]=i[0].toLowerCase())}else if(~Ge.indexOf(i[1])){if(t.outlookdotcom_remove_subaddress&&(i[0]=i[0].split(\\\"+\\\")[0]),!i[0].length)return!1;(t.all_lowercase||t.outlookdotcom_lowercase)&&(i[0]=i[0].toLowerCase())}else if(~De.indexOf(i[1])){if(t.yahoo_remove_subaddress){var n=i[0].split(\\\"-\\\");i[0]=1<n.length?n.slice(0,-1).join(\\\"-\\\"):n[0]}if(!i[0].length)return!1;(t.all_lowercase||t.yahoo_lowercase)&&(i[0]=i[0].toLowerCase())}else~Oe.indexOf(i[1])?((t.all_lowercase||t.yandex_lowercase)&&(i[0]=i[0].toLowerCase()),i[1]=\\\"yandex.ru\\\"):t.all_lowercase&&(i[0]=i[0].toLowerCase());return i.join(\\\"@\\\")},toString:n}});\""
		},
		{
			"name": "bootstrap.min.js",
			"source": "\"/*!\\r\\n * Bootstrap v3.3.6 (http://getbootstrap.com)\\r\\n * Copyright 2011-2015 Twitter, Inc.\\r\\n * Licensed under the MIT license\\r\\n */\\r\\nif(\\\"undefined\\\"==typeof jQuery)throw new Error(\\\"Bootstrap's JavaScript requires jQuery\\\");+function(a){\\\"use strict\\\";var b=a.fn.jquery.split(\\\" \\\")[0].split(\\\".\\\");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1||b[0]>2)throw new Error(\\\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3\\\")}(jQuery),+function(a){\\\"use strict\\\";function b(){var a=document.createElement(\\\"bootstrap\\\"),b={WebkitTransition:\\\"webkitTransitionEnd\\\",MozTransition:\\\"transitionend\\\",OTransition:\\\"oTransitionEnd otransitionend\\\",transition:\\\"transitionend\\\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(\\\"bsTransitionEnd\\\",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var c=a(this),e=c.data(\\\"bs.alert\\\");e||c.data(\\\"bs.alert\\\",e=new d(this)),\\\"string\\\"==typeof b&&e[b].call(c)})}var c='[data-dismiss=\\\"alert\\\"]',d=function(b){a(b).on(\\\"click\\\",c,this.close)};d.VERSION=\\\"3.3.6\\\",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger(\\\"closed.bs.alert\\\").remove()}var e=a(this),f=e.attr(\\\"data-target\\\");f||(f=e.attr(\\\"href\\\"),f=f&&f.replace(/.*(?=#[^\\\\s]*$)/,\\\"\\\"));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(\\\".alert\\\")),g.trigger(b=a.Event(\\\"close.bs.alert\\\")),b.isDefaultPrevented()||(g.removeClass(\\\"in\\\"),a.support.transition&&g.hasClass(\\\"fade\\\")?g.one(\\\"bsTransitionEnd\\\",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on(\\\"click.bs.alert.data-api\\\",c,d.prototype.close)}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.button\\\"),f=\\\"object\\\"==typeof b&&b;e||d.data(\\\"bs.button\\\",e=new c(this,f)),\\\"toggle\\\"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION=\\\"3.3.6\\\",c.DEFAULTS={loadingText:\\\"loading...\\\"},c.prototype.setState=function(b){var c=\\\"disabled\\\",d=this.$element,e=d.is(\\\"input\\\")?\\\"val\\\":\\\"html\\\",f=d.data();b+=\\\"Text\\\",null==f.resetText&&d.data(\\\"resetText\\\",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),\\\"loadingText\\\"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle=\\\"buttons\\\"]');if(b.length){var c=this.$element.find(\\\"input\\\");\\\"radio\\\"==c.prop(\\\"type\\\")?(c.prop(\\\"checked\\\")&&(a=!1),b.find(\\\".active\\\").removeClass(\\\"active\\\"),this.$element.addClass(\\\"active\\\")):\\\"checkbox\\\"==c.prop(\\\"type\\\")&&(c.prop(\\\"checked\\\")!==this.$element.hasClass(\\\"active\\\")&&(a=!1),this.$element.toggleClass(\\\"active\\\")),c.prop(\\\"checked\\\",this.$element.hasClass(\\\"active\\\")),a&&c.trigger(\\\"change\\\")}else this.$element.attr(\\\"aria-pressed\\\",!this.$element.hasClass(\\\"active\\\")),this.$element.toggleClass(\\\"active\\\")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on(\\\"click.bs.button.data-api\\\",'[data-toggle^=\\\"button\\\"]',function(c){var d=a(c.target);d.hasClass(\\\"btn\\\")||(d=d.closest(\\\".btn\\\")),b.call(d,\\\"toggle\\\"),a(c.target).is('input[type=\\\"radio\\\"]')||a(c.target).is('input[type=\\\"checkbox\\\"]')||c.preventDefault()}).on(\\\"focus.bs.button.data-api blur.bs.button.data-api\\\",'[data-toggle^=\\\"button\\\"]',function(b){a(b.target).closest(\\\".btn\\\").toggleClass(\\\"focus\\\",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.carousel\\\"),f=a.extend({},c.DEFAULTS,d.data(),\\\"object\\\"==typeof b&&b),g=\\\"string\\\"==typeof b?b:f.slide;e||d.data(\\\"bs.carousel\\\",e=new c(this,f)),\\\"number\\\"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(\\\".carousel-indicators\\\"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on(\\\"keydown.bs.carousel\\\",a.proxy(this.keydown,this)),\\\"hover\\\"==this.options.pause&&!(\\\"ontouchstart\\\"in document.documentElement)&&this.$element.on(\\\"mouseenter.bs.carousel\\\",a.proxy(this.pause,this)).on(\\\"mouseleave.bs.carousel\\\",a.proxy(this.cycle,this))};c.VERSION=\\\"3.3.6\\\",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:\\\"hover\\\",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(\\\".item\\\"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d=\\\"prev\\\"==a&&0===c||\\\"next\\\"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e=\\\"prev\\\"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(\\\".item.active\\\"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one(\\\"slid.bs.carousel\\\",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?\\\"next\\\":\\\"prev\\\",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(\\\".next, .prev\\\").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide(\\\"next\\\")},c.prototype.prev=function(){return this.sliding?void 0:this.slide(\\\"prev\\\")},c.prototype.slide=function(b,d){var e=this.$element.find(\\\".item.active\\\"),f=d||this.getItemForDirection(b,e),g=this.interval,h=\\\"next\\\"==b?\\\"left\\\":\\\"right\\\",i=this;if(f.hasClass(\\\"active\\\"))return this.sliding=!1;var j=f[0],k=a.Event(\\\"slide.bs.carousel\\\",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(\\\".active\\\").removeClass(\\\"active\\\");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass(\\\"active\\\")}var m=a.Event(\\\"slid.bs.carousel\\\",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass(\\\"slide\\\")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one(\\\"bsTransitionEnd\\\",function(){f.removeClass([b,h].join(\\\" \\\")).addClass(\\\"active\\\"),e.removeClass([\\\"active\\\",h].join(\\\" \\\")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass(\\\"active\\\"),f.addClass(\\\"active\\\"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr(\\\"data-target\\\")||(d=e.attr(\\\"href\\\"))&&d.replace(/.*(?=#[^\\\\s]+$)/,\\\"\\\"));if(f.hasClass(\\\"carousel\\\")){var g=a.extend({},f.data(),e.data()),h=e.attr(\\\"data-slide-to\\\");h&&(g.interval=!1),b.call(f,g),h&&f.data(\\\"bs.carousel\\\").to(h),c.preventDefault()}};a(document).on(\\\"click.bs.carousel.data-api\\\",\\\"[data-slide]\\\",e).on(\\\"click.bs.carousel.data-api\\\",\\\"[data-slide-to]\\\",e),a(window).on(\\\"load\\\",function(){a('[data-ride=\\\"carousel\\\"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){\\\"use strict\\\";function b(b){var c,d=b.attr(\\\"data-target\\\")||(c=b.attr(\\\"href\\\"))&&c.replace(/.*(?=#[^\\\\s]+$)/,\\\"\\\");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data(\\\"bs.collapse\\\"),f=a.extend({},d.DEFAULTS,c.data(),\\\"object\\\"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data(\\\"bs.collapse\\\",e=new d(this,f)),\\\"string\\\"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle=\\\"collapse\\\"][href=\\\"#'+b.id+'\\\"],[data-toggle=\\\"collapse\\\"][data-target=\\\"#'+b.id+'\\\"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION=\\\"3.3.6\\\",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass(\\\"width\\\");return a?\\\"width\\\":\\\"height\\\"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass(\\\"in\\\")){var b,e=this.$parent&&this.$parent.children(\\\".panel\\\").children(\\\".in, .collapsing\\\");if(!(e&&e.length&&(b=e.data(\\\"bs.collapse\\\"),b&&b.transitioning))){var f=a.Event(\\\"show.bs.collapse\\\");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,\\\"hide\\\"),b||e.data(\\\"bs.collapse\\\",null));var g=this.dimension();this.$element.removeClass(\\\"collapse\\\").addClass(\\\"collapsing\\\")[g](0).attr(\\\"aria-expanded\\\",!0),this.$trigger.removeClass(\\\"collapsed\\\").attr(\\\"aria-expanded\\\",!0),this.transitioning=1;var h=function(){this.$element.removeClass(\\\"collapsing\\\").addClass(\\\"collapse in\\\")[g](\\\"\\\"),this.transitioning=0,this.$element.trigger(\\\"shown.bs.collapse\\\")};if(!a.support.transition)return h.call(this);var i=a.camelCase([\\\"scroll\\\",g].join(\\\"-\\\"));this.$element.one(\\\"bsTransitionEnd\\\",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass(\\\"in\\\")){var b=a.Event(\\\"hide.bs.collapse\\\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass(\\\"collapsing\\\").removeClass(\\\"collapse in\\\").attr(\\\"aria-expanded\\\",!1),this.$trigger.addClass(\\\"collapsed\\\").attr(\\\"aria-expanded\\\",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass(\\\"collapsing\\\").addClass(\\\"collapse\\\").trigger(\\\"hidden.bs.collapse\\\")};return a.support.transition?void this.$element[c](0).one(\\\"bsTransitionEnd\\\",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass(\\\"in\\\")?\\\"hide\\\":\\\"show\\\"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle=\\\"collapse\\\"][data-parent=\\\"'+this.options.parent+'\\\"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass(\\\"in\\\");a.attr(\\\"aria-expanded\\\",c),b.toggleClass(\\\"collapsed\\\",!c).attr(\\\"aria-expanded\\\",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on(\\\"click.bs.collapse.data-api\\\",'[data-toggle=\\\"collapse\\\"]',function(d){var e=a(this);e.attr(\\\"data-target\\\")||d.preventDefault();var f=b(e),g=f.data(\\\"bs.collapse\\\"),h=g?\\\"toggle\\\":e.data();c.call(f,h)})}(jQuery),+function(a){\\\"use strict\\\";function b(b){var c=b.attr(\\\"data-target\\\");c||(c=b.attr(\\\"href\\\"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\\\\s]*$)/,\\\"\\\"));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass(\\\"open\\\")&&(c&&\\\"click\\\"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event(\\\"hide.bs.dropdown\\\",f)),c.isDefaultPrevented()||(d.attr(\\\"aria-expanded\\\",\\\"false\\\"),e.removeClass(\\\"open\\\").trigger(a.Event(\\\"hidden.bs.dropdown\\\",f)))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data(\\\"bs.dropdown\\\");d||c.data(\\\"bs.dropdown\\\",d=new g(this)),\\\"string\\\"==typeof b&&d[b].call(c)})}var e=\\\".dropdown-backdrop\\\",f='[data-toggle=\\\"dropdown\\\"]',g=function(b){a(b).on(\\\"click.bs.dropdown\\\",this.toggle)};g.VERSION=\\\"3.3.6\\\",g.prototype.toggle=function(d){var e=a(this);if(!e.is(\\\".disabled, :disabled\\\")){var f=b(e),g=f.hasClass(\\\"open\\\");if(c(),!g){\\\"ontouchstart\\\"in document.documentElement&&!f.closest(\\\".navbar-nav\\\").length&&a(document.createElement(\\\"div\\\")).addClass(\\\"dropdown-backdrop\\\").insertAfter(a(this)).on(\\\"click\\\",c);var h={relatedTarget:this};if(f.trigger(d=a.Event(\\\"show.bs.dropdown\\\",h)),d.isDefaultPrevented())return;e.trigger(\\\"focus\\\").attr(\\\"aria-expanded\\\",\\\"true\\\"),f.toggleClass(\\\"open\\\").trigger(a.Event(\\\"shown.bs.dropdown\\\",h))}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(\\\".disabled, :disabled\\\")){var e=b(d),g=e.hasClass(\\\"open\\\");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger(\\\"focus\\\"),d.trigger(\\\"click\\\");var h=\\\" li:not(.disabled):visible a\\\",i=e.find(\\\".dropdown-menu\\\"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger(\\\"focus\\\")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on(\\\"click.bs.dropdown.data-api\\\",c).on(\\\"click.bs.dropdown.data-api\\\",\\\".dropdown form\\\",function(a){a.stopPropagation()}).on(\\\"click.bs.dropdown.data-api\\\",f,g.prototype.toggle).on(\\\"keydown.bs.dropdown.data-api\\\",f,g.prototype.keydown).on(\\\"keydown.bs.dropdown.data-api\\\",\\\".dropdown-menu\\\",g.prototype.keydown)}(jQuery),+function(a){\\\"use strict\\\";function b(b,d){return this.each(function(){var e=a(this),f=e.data(\\\"bs.modal\\\"),g=a.extend({},c.DEFAULTS,e.data(),\\\"object\\\"==typeof b&&b);f||e.data(\\\"bs.modal\\\",f=new c(this,g)),\\\"string\\\"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(\\\".modal-dialog\\\"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(\\\".modal-content\\\").load(this.options.remote,a.proxy(function(){this.$element.trigger(\\\"loaded.bs.modal\\\")},this))};c.VERSION=\\\"3.3.6\\\",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event(\\\"show.bs.modal\\\",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass(\\\"modal-open\\\"),this.escape(),this.resize(),this.$element.on(\\\"click.dismiss.bs.modal\\\",'[data-dismiss=\\\"modal\\\"]',a.proxy(this.hide,this)),this.$dialog.on(\\\"mousedown.dismiss.bs.modal\\\",function(){d.$element.one(\\\"mouseup.dismiss.bs.modal\\\",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass(\\\"fade\\\");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass(\\\"in\\\"),d.enforceFocus();var f=a.Event(\\\"shown.bs.modal\\\",{relatedTarget:b});e?d.$dialog.one(\\\"bsTransitionEnd\\\",function(){d.$element.trigger(\\\"focus\\\").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger(\\\"focus\\\").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event(\\\"hide.bs.modal\\\"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off(\\\"focusin.bs.modal\\\"),this.$element.removeClass(\\\"in\\\").off(\\\"click.dismiss.bs.modal\\\").off(\\\"mouseup.dismiss.bs.modal\\\"),this.$dialog.off(\\\"mousedown.dismiss.bs.modal\\\"),a.support.transition&&this.$element.hasClass(\\\"fade\\\")?this.$element.one(\\\"bsTransitionEnd\\\",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off(\\\"focusin.bs.modal\\\").on(\\\"focusin.bs.modal\\\",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger(\\\"focus\\\")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on(\\\"keydown.dismiss.bs.modal\\\",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off(\\\"keydown.dismiss.bs.modal\\\")},c.prototype.resize=function(){this.isShown?a(window).on(\\\"resize.bs.modal\\\",a.proxy(this.handleUpdate,this)):a(window).off(\\\"resize.bs.modal\\\")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass(\\\"modal-open\\\"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger(\\\"hidden.bs.modal\\\")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass(\\\"fade\\\")?\\\"fade\\\":\\\"\\\";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement(\\\"div\\\")).addClass(\\\"modal-backdrop \\\"+e).appendTo(this.$body),this.$element.on(\\\"click.dismiss.bs.modal\\\",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&(\\\"static\\\"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass(\\\"in\\\"),!b)return;f?this.$backdrop.one(\\\"bsTransitionEnd\\\",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass(\\\"in\\\");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass(\\\"fade\\\")?this.$backdrop.one(\\\"bsTransitionEnd\\\",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:\\\"\\\",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:\\\"\\\"})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:\\\"\\\",paddingRight:\\\"\\\"})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css(\\\"padding-right\\\")||0,10);this.originalBodyPad=document.body.style.paddingRight||\\\"\\\",this.bodyIsOverflowing&&this.$body.css(\\\"padding-right\\\",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css(\\\"padding-right\\\",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement(\\\"div\\\");a.className=\\\"modal-scrollbar-measure\\\",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on(\\\"click.bs.modal.data-api\\\",'[data-toggle=\\\"modal\\\"]',function(c){var d=a(this),e=d.attr(\\\"href\\\"),f=a(d.attr(\\\"data-target\\\")||e&&e.replace(/.*(?=#[^\\\\s]+$)/,\\\"\\\")),g=f.data(\\\"bs.modal\\\")?\\\"toggle\\\":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is(\\\"a\\\")&&c.preventDefault(),f.one(\\\"show.bs.modal\\\",function(a){a.isDefaultPrevented()||f.one(\\\"hidden.bs.modal\\\",function(){d.is(\\\":visible\\\")&&d.trigger(\\\"focus\\\")})}),b.call(f,g,this)})}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.tooltip\\\"),f=\\\"object\\\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\\\"bs.tooltip\\\",e=new c(this,f)),\\\"string\\\"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init(\\\"tooltip\\\",a,b)};c.VERSION=\\\"3.3.6\\\",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:\\\"top\\\",selector:!1,template:'<div class=\\\"tooltip\\\" role=\\\"tooltip\\\"><div class=\\\"tooltip-arrow\\\"></div><div class=\\\"tooltip-inner\\\"></div></div>',trigger:\\\"hover focus\\\",title:\\\"\\\",delay:0,html:!1,container:!1,viewport:{selector:\\\"body\\\",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error(\\\"`selector` option must be specified when initializing \\\"+this.type+\\\" on the window.document object!\\\");for(var e=this.options.trigger.split(\\\" \\\"),f=e.length;f--;){var g=e[f];if(\\\"click\\\"==g)this.$element.on(\\\"click.\\\"+this.type,this.options.selector,a.proxy(this.toggle,this));else if(\\\"manual\\\"!=g){var h=\\\"hover\\\"==g?\\\"mouseenter\\\":\\\"focusin\\\",i=\\\"hover\\\"==g?\\\"mouseleave\\\":\\\"focusout\\\";this.$element.on(h+\\\".\\\"+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+\\\".\\\"+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:\\\"manual\\\",selector:\\\"\\\"}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&\\\"number\\\"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\\\"bs.\\\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\\\"bs.\\\"+this.type,c)),b instanceof a.Event&&(c.inState[\\\"focusin\\\"==b.type?\\\"focus\\\":\\\"hover\\\"]=!0),c.tip().hasClass(\\\"in\\\")||\\\"in\\\"==c.hoverState?void(c.hoverState=\\\"in\\\"):(clearTimeout(c.timeout),c.hoverState=\\\"in\\\",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){\\\"in\\\"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\\\"bs.\\\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\\\"bs.\\\"+this.type,c)),b instanceof a.Event&&(c.inState[\\\"focusout\\\"==b.type?\\\"focus\\\":\\\"hover\\\"]=!1),c.isInStateTrue()?void 0:(clearTimeout(c.timeout),c.hoverState=\\\"out\\\",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){\\\"out\\\"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide())},c.prototype.show=function(){var b=a.Event(\\\"show.bs.\\\"+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr(\\\"id\\\",g),this.$element.attr(\\\"aria-describedby\\\",g),this.options.animation&&f.addClass(\\\"fade\\\");var h=\\\"function\\\"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\\\\s?auto?\\\\s?/i,j=i.test(h);j&&(h=h.replace(i,\\\"\\\")||\\\"top\\\"),f.detach().css({top:0,left:0,display:\\\"block\\\"}).addClass(h).data(\\\"bs.\\\"+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger(\\\"inserted.bs.\\\"+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h=\\\"bottom\\\"==h&&k.bottom+m>o.bottom?\\\"top\\\":\\\"top\\\"==h&&k.top-m<o.top?\\\"bottom\\\":\\\"right\\\"==h&&k.right+l>o.width?\\\"left\\\":\\\"left\\\"==h&&k.left-l<o.left?\\\"right\\\":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger(\\\"shown.bs.\\\"+e.type),e.hoverState=null,\\\"out\\\"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass(\\\"fade\\\")?f.one(\\\"bsTransitionEnd\\\",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css(\\\"margin-top\\\"),10),h=parseInt(d.css(\\\"margin-left\\\"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass(\\\"in\\\");var i=d[0].offsetWidth,j=d[0].offsetHeight;\\\"top\\\"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?\\\"offsetWidth\\\":\\\"offsetHeight\\\";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?\\\"left\\\":\\\"top\\\",50*(1-a/b)+\\\"%\\\").css(c?\\\"top\\\":\\\"left\\\",\\\"\\\")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(\\\".tooltip-inner\\\")[this.options.html?\\\"html\\\":\\\"text\\\"](b),a.removeClass(\\\"fade in top bottom left right\\\")},c.prototype.hide=function(b){function d(){\\\"in\\\"!=e.hoverState&&f.detach(),e.$element.removeAttr(\\\"aria-describedby\\\").trigger(\\\"hidden.bs.\\\"+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event(\\\"hide.bs.\\\"+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass(\\\"in\\\"),a.support.transition&&f.hasClass(\\\"fade\\\")?f.one(\\\"bsTransitionEnd\\\",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr(\\\"title\\\")||\\\"string\\\"!=typeof a.attr(\\\"data-original-title\\\"))&&a.attr(\\\"data-original-title\\\",a.attr(\\\"title\\\")||\\\"\\\").attr(\\\"title\\\",\\\"\\\")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d=\\\"BODY\\\"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return\\\"bottom\\\"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:\\\"top\\\"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:\\\"left\\\"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr(\\\"data-original-title\\\")||(\\\"function\\\"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+\\\" `template` option must consist of exactly 1 top-level element!\\\");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\\\".tooltip-arrow\\\")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data(\\\"bs.\\\"+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\\\"bs.\\\"+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass(\\\"in\\\")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off(\\\".\\\"+a.type).removeData(\\\"bs.\\\"+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.popover\\\"),f=\\\"object\\\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\\\"bs.popover\\\",e=new c(this,f)),\\\"string\\\"==typeof b&&e[b]())})}var c=function(a,b){this.init(\\\"popover\\\",a,b)};if(!a.fn.tooltip)throw new Error(\\\"Popover requires tooltip.js\\\");c.VERSION=\\\"3.3.6\\\",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:\\\"right\\\",trigger:\\\"click\\\",content:\\\"\\\",template:'<div class=\\\"popover\\\" role=\\\"tooltip\\\"><div class=\\\"arrow\\\"></div><h3 class=\\\"popover-title\\\"></h3><div class=\\\"popover-content\\\"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(\\\".popover-title\\\")[this.options.html?\\\"html\\\":\\\"text\\\"](b),a.find(\\\".popover-content\\\").children().detach().end()[this.options.html?\\\"string\\\"==typeof c?\\\"html\\\":\\\"append\\\":\\\"text\\\"](c),a.removeClass(\\\"fade top bottom left right in\\\"),a.find(\\\".popover-title\\\").html()||a.find(\\\".popover-title\\\").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr(\\\"data-content\\\")||(\\\"function\\\"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\\\".arrow\\\")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){\\\"use strict\\\";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||\\\"\\\")+\\\" .nav li > a\\\",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on(\\\"scroll.bs.scrollspy\\\",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data(\\\"bs.scrollspy\\\"),f=\\\"object\\\"==typeof c&&c;e||d.data(\\\"bs.scrollspy\\\",e=new b(this,f)),\\\"string\\\"==typeof c&&e[c]()})}b.VERSION=\\\"3.3.6\\\",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c=\\\"offset\\\",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c=\\\"position\\\",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data(\\\"target\\\")||b.attr(\\\"href\\\"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(\\\":visible\\\")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target=\\\"'+b+'\\\"],'+this.selector+'[href=\\\"'+b+'\\\"]',d=a(c).parents(\\\"li\\\").addClass(\\\"active\\\");\\r\\nd.parent(\\\".dropdown-menu\\\").length&&(d=d.closest(\\\"li.dropdown\\\").addClass(\\\"active\\\")),d.trigger(\\\"activate.bs.scrollspy\\\")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,\\\".active\\\").removeClass(\\\"active\\\")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on(\\\"load.bs.scrollspy.data-api\\\",function(){a('[data-spy=\\\"scroll\\\"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.tab\\\");e||d.data(\\\"bs.tab\\\",e=new c(this)),\\\"string\\\"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION=\\\"3.3.6\\\",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest(\\\"ul:not(.dropdown-menu)\\\"),d=b.data(\\\"target\\\");if(d||(d=b.attr(\\\"href\\\"),d=d&&d.replace(/.*(?=#[^\\\\s]*$)/,\\\"\\\")),!b.parent(\\\"li\\\").hasClass(\\\"active\\\")){var e=c.find(\\\".active:last a\\\"),f=a.Event(\\\"hide.bs.tab\\\",{relatedTarget:b[0]}),g=a.Event(\\\"show.bs.tab\\\",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest(\\\"li\\\"),c),this.activate(h,h.parent(),function(){e.trigger({type:\\\"hidden.bs.tab\\\",relatedTarget:b[0]}),b.trigger({type:\\\"shown.bs.tab\\\",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass(\\\"active\\\").find(\\\"> .dropdown-menu > .active\\\").removeClass(\\\"active\\\").end().find('[data-toggle=\\\"tab\\\"]').attr(\\\"aria-expanded\\\",!1),b.addClass(\\\"active\\\").find('[data-toggle=\\\"tab\\\"]').attr(\\\"aria-expanded\\\",!0),h?(b[0].offsetWidth,b.addClass(\\\"in\\\")):b.removeClass(\\\"fade\\\"),b.parent(\\\".dropdown-menu\\\").length&&b.closest(\\\"li.dropdown\\\").addClass(\\\"active\\\").end().find('[data-toggle=\\\"tab\\\"]').attr(\\\"aria-expanded\\\",!0),e&&e()}var g=d.find(\\\"> .active\\\"),h=e&&a.support.transition&&(g.length&&g.hasClass(\\\"fade\\\")||!!d.find(\\\"> .fade\\\").length);g.length&&h?g.one(\\\"bsTransitionEnd\\\",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass(\\\"in\\\")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),\\\"show\\\")};a(document).on(\\\"click.bs.tab.data-api\\\",'[data-toggle=\\\"tab\\\"]',e).on(\\\"click.bs.tab.data-api\\\",'[data-toggle=\\\"pill\\\"]',e)}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.affix\\\"),f=\\\"object\\\"==typeof b&&b;e||d.data(\\\"bs.affix\\\",e=new c(this,f)),\\\"string\\\"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on(\\\"scroll.bs.affix.data-api\\\",a.proxy(this.checkPosition,this)).on(\\\"click.bs.affix.data-api\\\",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION=\\\"3.3.6\\\",c.RESET=\\\"affix affix-top affix-bottom\\\",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&\\\"top\\\"==this.affixed)return c>e?\\\"top\\\":!1;if(\\\"bottom\\\"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:\\\"bottom\\\":a-d>=e+g?!1:\\\"bottom\\\";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=e?\\\"top\\\":null!=d&&i+j>=a-d?\\\"bottom\\\":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\\\"affix\\\");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(\\\":visible\\\")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());\\\"object\\\"!=typeof d&&(f=e=d),\\\"function\\\"==typeof e&&(e=d.top(this.$element)),\\\"function\\\"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css(\\\"top\\\",\\\"\\\");var i=\\\"affix\\\"+(h?\\\"-\\\"+h:\\\"\\\"),j=a.Event(i+\\\".bs.affix\\\");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin=\\\"bottom\\\"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\\\"affix\\\",\\\"affixed\\\")+\\\".bs.affix\\\")}\\\"bottom\\\"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on(\\\"load\\\",function(){a('[data-spy=\\\"affix\\\"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);\""
		},
		{
			"name": "DeviceDetector.js",
			"source": "\"//  Device Detector.\\r\\n\\r\\n    isMobile = ( function () {\\r\\n        var ua = navigator.userAgent,\\r\\n            apple_phone      = /iPhone/i,\\r\\n            apple_ipod       = /iPod/i,\\r\\n            apple_tablet     = /iPad/i,\\r\\n            android_phone    = /(?=.*\\\\bAndroid\\\\b)(?=.*\\\\bMobile\\\\b)/i, // Match 'Android' AND 'Mobile'\\r\\n            android_tablet   = /Android/i,\\r\\n            windows_phone    = /IEMobile/i,\\r\\n            windows_tablet   = /(?=.*\\\\bWindows\\\\b)(?=.*\\\\bARM\\\\b)/i, // Match 'Windows' AND 'ARM'\\r\\n            other_blackberry = /BlackBerry/i,\\r\\n            other_opera      = /Opera Mini/i,\\r\\n            other_firefox    = /(?=.*\\\\bFirefox\\\\b)(?=.*\\\\bMobile\\\\b)/i; // Match 'Firefox' AND 'Mobile'\\r\\n\\r\\n        if (\\r\\n\\t\\t\\tapple_phone.test( ua )      ||\\r\\n\\t\\t\\tapple_phone.test( ua )      ||\\r\\n\\t\\t\\tapple_ipod.test( ua )       ||\\r\\n\\t\\t\\tapple_tablet.test( ua )     ||\\r\\n\\t\\t\\tandroid_phone.test( ua )    ||\\r\\n\\t\\t\\tandroid_tablet.test( ua )   ||\\r\\n\\t\\t\\twindows_phone.test( ua )    ||\\r\\n\\t\\t\\twindows_tablet.test( ua )   ||\\r\\n\\t\\t\\tother_blackberry.test( ua ) ||\\r\\n\\t\\t\\tother_opera.test( ua )      ||\\r\\n\\t\\t\\tother_firefox.test( ua )\\r\\n        ){\\r\\n\\r\\n            return true;\\r\\n\\r\\n        } else {\\r\\n\\r\\n            return false;\\r\\n\\r\\n        }\\r\\n    })();\\r\\n\""
		},
		{
			"name": "MathDecimalAdjustment.js",
			"source": "\"// MathDecimalAdjustment.js\\r\\n// Closure\\r\\n(function() {\\r\\n  /**\\r\\n   * Decimal adjustment of a number.\\r\\n   *\\r\\n   * @param {String}  type  The type of adjustment.\\r\\n   * @param {Number}  value The number.\\r\\n   * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).\\r\\n   * @returns {Number} The adjusted value.\\r\\n   */\\r\\n  function decimalAdjust(type, value, exp) {\\r\\n    // If the exp is undefined or zero...\\r\\n    if (typeof exp === 'undefined' || +exp === 0) {\\r\\n      return Math[type](value);\\r\\n    }\\r\\n    value = +value;\\r\\n    exp = +exp;\\r\\n    // If the value is not a number or the exp is not an integer...\\r\\n    if (value === null || isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\\r\\n      return NaN;\\r\\n    }\\r\\n    // Shift\\r\\n    value = value.toString().split('e');\\r\\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\\r\\n    // Shift back\\r\\n    value = value.toString().split('e');\\r\\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\\r\\n  }\\r\\n\\r\\n  // Decimal round\\r\\n  if (!Math.round10) {\\r\\n    Math.round10 = function(value, exp) {\\r\\n      return decimalAdjust('round', value, exp);\\r\\n    };\\r\\n  }\\r\\n  // Decimal floor\\r\\n  if (!Math.floor10) {\\r\\n    Math.floor10 = function(value, exp) {\\r\\n      return decimalAdjust('floor', value, exp);\\r\\n    };\\r\\n  }\\r\\n  // Decimal ceil\\r\\n  if (!Math.ceil10) {\\r\\n    Math.ceil10 = function(value, exp) {\\r\\n      return decimalAdjust('ceil', value, exp);\\r\\n    };\\r\\n  }\\r\\n})();\\r\\n/*\\r\\n//  Round\\r\\n    Math.round10(55.55, -1);   // 55.6\\r\\n    Math.round10(55.549, -1);  // 55.5\\r\\n    Math.round10(55, 1);       // 60\\r\\n    Math.round10(54.9, 1);     // 50\\r\\n    Math.round10(-55.55, -1);  // -55.5 -- round works towards +8 when in-between two values\\r\\n    Math.round10(-55.551, -1); // -55.6\\r\\n    Math.round10(-55, 1);      // -50 -- round works towards +8 when in-between two values\\r\\n    Math.round10(-55.1, 1);    // -60\\r\\n    Math.round10(1.005, -2);   // 1.01 -- compare this with Math.round(1.005*100)/100 above\\r\\n    Math.round10(-1.005, -2);  // -1.0 -- round works towards +8 when exactly in-between two values\\r\\n    // Floor\\r\\n    Math.floor10(55.59, -1);   // 55.5\\r\\n    Math.floor10(59, 1);       // 50\\r\\n    Math.floor10(-55.51, -1);  // -55.6 -- floor is always lower than or equal to floored number: -55.6 < -55.51\\r\\n    Math.floor10(-51, 1);      // -60 -- ditto\\r\\n    // Ceil\\r\\n    Math.ceil10(55.51, -1);    // 55.6\\r\\n    Math.ceil10(51, 1);        // 60\\r\\n    Math.ceil10(-55.59, -1);   // -55.5 -- ceil is always equal or above ceiled number: -55.5 > -55.59\\r\\n    Math.ceil10(-59, 1);       // -59 -- ditto\\r\\n*/\\r\\n\""
		},
		{
			"name": "socketcluster.js",
			"source": "\"/**\\r\\n * SocketCluster JavaScript client v14.2.2\\r\\n */\\r\\n(function(f){if(typeof exports===\\\"object\\\"&&typeof module!==\\\"undefined\\\"){module.exports=f()}else if(typeof define===\\\"function\\\"&&define.amd){define([],f)}else{var g;if(typeof window!==\\\"undefined\\\"){g=window}else if(typeof global!==\\\"undefined\\\"){g=global}else if(typeof self!==\\\"undefined\\\"){g=self}else{g=this}g.socketCluster = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\\\"function\\\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\\\"Cannot find module '\\\"+i+\\\"'\\\");throw a.code=\\\"MODULE_NOT_FOUND\\\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\\\"function\\\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\\r\\nvar SCClientSocket = _dereq_('./lib/scclientsocket');\\r\\nvar factory = _dereq_('./lib/factory');\\r\\n\\r\\nmodule.exports.factory = factory;\\r\\nmodule.exports.SCClientSocket = SCClientSocket;\\r\\n\\r\\nmodule.exports.Emitter = _dereq_('component-emitter');\\r\\n\\r\\nmodule.exports.create = function (options) {\\r\\n  return factory.create(options);\\r\\n};\\r\\n\\r\\nmodule.exports.connect = module.exports.create;\\r\\n\\r\\nmodule.exports.destroy = function (socket) {\\r\\n  return factory.destroy(socket);\\r\\n};\\r\\n\\r\\nmodule.exports.clients = factory.clients;\\r\\n\\r\\nmodule.exports.version = '14.2.2';\\r\\n\\r\\n},{\\\"./lib/factory\\\":3,\\\"./lib/scclientsocket\\\":5,\\\"component-emitter\\\":11}],2:[function(_dereq_,module,exports){\\r\\n(function (global){\\r\\nvar AuthEngine = function () {\\r\\n  this._internalStorage = {};\\r\\n  this.isLocalStorageEnabled = this._checkLocalStorageEnabled();\\r\\n};\\r\\n\\r\\nAuthEngine.prototype._checkLocalStorageEnabled = function () {\\r\\n  var err;\\r\\n  try {\\r\\n    // Some browsers will throw an error here if localStorage is disabled.\\r\\n    global.localStorage;\\r\\n\\r\\n    // Safari, in Private Browsing Mode, looks like it supports localStorage but all calls to setItem\\r\\n    // throw QuotaExceededError. We're going to detect this and avoid hard to debug edge cases.\\r\\n    global.localStorage.setItem('__scLocalStorageTest', 1);\\r\\n    global.localStorage.removeItem('__scLocalStorageTest');\\r\\n  } catch (e) {\\r\\n    err = e;\\r\\n  }\\r\\n  return !err;\\r\\n};\\r\\n\\r\\nAuthEngine.prototype.saveToken = function (name, token, options, callback) {\\r\\n  if (this.isLocalStorageEnabled && global.localStorage) {\\r\\n    global.localStorage.setItem(name, token);\\r\\n  } else {\\r\\n    this._internalStorage[name] = token;\\r\\n  }\\r\\n  callback && callback(null, token);\\r\\n};\\r\\n\\r\\nAuthEngine.prototype.removeToken = function (name, callback) {\\r\\n  var token;\\r\\n\\r\\n  this.loadToken(name, function (err, authToken) {\\r\\n    token = authToken;\\r\\n  });\\r\\n\\r\\n  if (this.isLocalStorageEnabled && global.localStorage) {\\r\\n    global.localStorage.removeItem(name);\\r\\n  } else {\\r\\n    delete this._internalStorage[name];\\r\\n  }\\r\\n\\r\\n  callback && callback(null, token);\\r\\n};\\r\\n\\r\\nAuthEngine.prototype.loadToken = function (name, callback) {\\r\\n  var token;\\r\\n\\r\\n  if (this.isLocalStorageEnabled && global.localStorage) {\\r\\n    token = global.localStorage.getItem(name);\\r\\n  } else {\\r\\n    token = this._internalStorage[name] || null;\\r\\n  }\\r\\n  callback(null, token);\\r\\n};\\r\\n\\r\\nmodule.exports.AuthEngine = AuthEngine;\\r\\n\\r\\n}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\r\\n},{}],3:[function(_dereq_,module,exports){\\r\\n(function (global){\\r\\nvar SCClientSocket = _dereq_('./scclientsocket');\\r\\nvar scErrors = _dereq_('sc-errors');\\r\\nvar uuid = _dereq_('uuid');\\r\\nvar InvalidArgumentsError = scErrors.InvalidArgumentsError;\\r\\n\\r\\nvar _clients = {};\\r\\n\\r\\nfunction getMultiplexId(options) {\\r\\n  var protocolPrefix = options.secure ? 'https://' : 'http://';\\r\\n  var queryString = '';\\r\\n  if (options.query) {\\r\\n    if (typeof options.query === 'string') {\\r\\n      queryString = options.query;\\r\\n    } else {\\r\\n      var queryArray = [];\\r\\n      var queryMap = options.query;\\r\\n      for (var key in queryMap) {\\r\\n        if (queryMap.hasOwnProperty(key)) {\\r\\n          queryArray.push(key + '=' + queryMap[key]);\\r\\n        }\\r\\n      }\\r\\n      if (queryArray.length) {\\r\\n        queryString = '?' + queryArray.join('&');\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  var host;\\r\\n  if (options.host) {\\r\\n    host = options.host;\\r\\n  } else {\\r\\n    host = options.hostname + ':' + options.port;\\r\\n  }\\r\\n  return protocolPrefix + host + options.path + queryString;\\r\\n}\\r\\n\\r\\nfunction isUrlSecure() {\\r\\n  return global.location && location.protocol === 'https:';\\r\\n}\\r\\n\\r\\nfunction getPort(options, isSecureDefault) {\\r\\n  var isSecure = options.secure == null ? isSecureDefault : options.secure;\\r\\n  return options.port || (global.location && location.port ? location.port : isSecure ? 443 : 80);\\r\\n}\\r\\n\\r\\nfunction create(options) {\\r\\n  var self = this;\\r\\n\\r\\n  options = options || {};\\r\\n\\r\\n  if (options.host && !options.host.match(/[^:]+:\\\\d{2,5}/)) {\\r\\n    throw new InvalidArgumentsError('The host option should include both' +\\r\\n      ' the hostname and the port number in the format \\\"hostname:port\\\"');\\r\\n  }\\r\\n\\r\\n  if (options.host && options.hostname) {\\r\\n    throw new InvalidArgumentsError('The host option should already include' +\\r\\n      ' the hostname and the port number in the format \\\"hostname:port\\\"' +\\r\\n      ' - Because of this, you should never use host and hostname options together');\\r\\n  }\\r\\n\\r\\n  if (options.host && options.port) {\\r\\n    throw new InvalidArgumentsError('The host option should already include' +\\r\\n      ' the hostname and the port number in the format \\\"hostname:port\\\"' +\\r\\n      ' - Because of this, you should never use host and port options together');\\r\\n  }\\r\\n\\r\\n  var isSecureDefault = isUrlSecure();\\r\\n\\r\\n  var opts = {\\r\\n    port: getPort(options, isSecureDefault),\\r\\n    hostname: global.location && location.hostname || 'localhost',\\r\\n    path: '/socketcluster/',\\r\\n    secure: isSecureDefault,\\r\\n    autoConnect: true,\\r\\n    autoReconnect: true,\\r\\n    autoSubscribeOnConnect: true,\\r\\n    connectTimeout: 20000,\\r\\n    ackTimeout: 10000,\\r\\n    timestampRequests: false,\\r\\n    timestampParam: 't',\\r\\n    authEngine: null,\\r\\n    authTokenName: 'socketCluster.authToken',\\r\\n    binaryType: 'arraybuffer',\\r\\n    multiplex: true,\\r\\n    pubSubBatchDuration: null,\\r\\n    cloneData: false\\r\\n  };\\r\\n  for (var i in options) {\\r\\n    if (options.hasOwnProperty(i)) {\\r\\n      opts[i] = options[i];\\r\\n    }\\r\\n  }\\r\\n  opts.clientMap = _clients;\\r\\n\\r\\n  if (opts.multiplex === false) {\\r\\n    opts.clientId = uuid.v4();\\r\\n    var socket = new SCClientSocket(opts);\\r\\n    _clients[opts.clientId] = socket;\\r\\n    return socket;\\r\\n  }\\r\\n  opts.clientId = getMultiplexId(opts);\\r\\n\\r\\n  if (_clients[opts.clientId]) {\\r\\n    if (opts.autoConnect) {\\r\\n      _clients[opts.clientId].connect();\\r\\n    }\\r\\n  } else {\\r\\n    _clients[opts.clientId] = new SCClientSocket(opts);\\r\\n  }\\r\\n  return _clients[opts.clientId];\\r\\n}\\r\\n\\r\\nfunction destroy(socket) {\\r\\n  socket.destroy();\\r\\n}\\r\\n\\r\\nmodule.exports = {\\r\\n  create: create,\\r\\n  destroy: destroy,\\r\\n  clients: _clients\\r\\n};\\r\\n\\r\\n}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\r\\n},{\\\"./scclientsocket\\\":5,\\\"sc-errors\\\":20,\\\"uuid\\\":22}],4:[function(_dereq_,module,exports){\\r\\nvar scErrors = _dereq_('sc-errors');\\r\\nvar InvalidActionError = scErrors.InvalidActionError;\\r\\n\\r\\nvar Response = function (socket, id) {\\r\\n  this.socket = socket;\\r\\n  this.id = id;\\r\\n  this.sent = false;\\r\\n};\\r\\n\\r\\nResponse.prototype._respond = function (responseData) {\\r\\n  if (this.sent) {\\r\\n    throw new InvalidActionError('Response ' + this.id + ' has already been sent');\\r\\n  } else {\\r\\n    this.sent = true;\\r\\n    this.socket.send(this.socket.encode(responseData));\\r\\n  }\\r\\n};\\r\\n\\r\\nResponse.prototype.end = function (data) {\\r\\n  if (this.id) {\\r\\n    var responseData = {\\r\\n      rid: this.id\\r\\n    };\\r\\n    if (data !== undefined) {\\r\\n      responseData.data = data;\\r\\n    }\\r\\n    this._respond(responseData);\\r\\n  }\\r\\n};\\r\\n\\r\\nResponse.prototype.error = function (error, data) {\\r\\n  if (this.id) {\\r\\n    var err = scErrors.dehydrateError(error);\\r\\n\\r\\n    var responseData = {\\r\\n      rid: this.id,\\r\\n      error: err\\r\\n    };\\r\\n    if (data !== undefined) {\\r\\n      responseData.data = data;\\r\\n    }\\r\\n\\r\\n    this._respond(responseData);\\r\\n  }\\r\\n};\\r\\n\\r\\nResponse.prototype.callback = function (error, data) {\\r\\n  if (error) {\\r\\n    this.error(error, data);\\r\\n  } else {\\r\\n    this.end(data);\\r\\n  }\\r\\n};\\r\\n\\r\\nmodule.exports.Response = Response;\\r\\n\\r\\n},{\\\"sc-errors\\\":20}],5:[function(_dereq_,module,exports){\\r\\n(function (global){\\r\\nvar Emitter = _dereq_('component-emitter');\\r\\nvar SCChannel = _dereq_('sc-channel').SCChannel;\\r\\nvar Response = _dereq_('./response').Response;\\r\\nvar AuthEngine = _dereq_('./auth').AuthEngine;\\r\\nvar formatter = _dereq_('sc-formatter');\\r\\nvar SCTransport = _dereq_('./sctransport').SCTransport;\\r\\nvar querystring = _dereq_('querystring');\\r\\nvar LinkedList = _dereq_('linked-list');\\r\\nvar Buffer = _dereq_('buffer/').Buffer;\\r\\nvar clone = _dereq_('clone');\\r\\n\\r\\nvar scErrors = _dereq_('sc-errors');\\r\\nvar InvalidArgumentsError = scErrors.InvalidArgumentsError;\\r\\nvar InvalidMessageError = scErrors.InvalidMessageError;\\r\\nvar InvalidActionError = scErrors.InvalidActionError;\\r\\nvar SocketProtocolError = scErrors.SocketProtocolError;\\r\\nvar TimeoutError = scErrors.TimeoutError;\\r\\nvar BadConnectionError = scErrors.BadConnectionError;\\r\\n\\r\\nvar isBrowser = typeof window !== 'undefined';\\r\\n\\r\\n\\r\\nvar SCClientSocket = function (opts) {\\r\\n  var self = this;\\r\\n\\r\\n  Emitter.call(this);\\r\\n\\r\\n  this.id = null;\\r\\n  this.state = this.CLOSED;\\r\\n  this.authState = this.UNAUTHENTICATED;\\r\\n  this.signedAuthToken = null;\\r\\n  this.authToken = null;\\r\\n  this.pendingReconnect = false;\\r\\n  this.pendingReconnectTimeout = null;\\r\\n  this.preparingPendingSubscriptions = false;\\r\\n  this.clientId = opts.clientId;\\r\\n\\r\\n  this.connectTimeout = opts.connectTimeout;\\r\\n  this.ackTimeout = opts.ackTimeout;\\r\\n  this.channelPrefix = opts.channelPrefix || null;\\r\\n  this.disconnectOnUnload = opts.disconnectOnUnload == null ? true : opts.disconnectOnUnload;\\r\\n  this.authTokenName = opts.authTokenName;\\r\\n\\r\\n  // pingTimeout will be ackTimeout at the start, but it will\\r\\n  // be updated with values provided by the 'connect' event\\r\\n  this.pingTimeout = this.ackTimeout;\\r\\n  this.pingTimeoutDisabled = !!opts.pingTimeoutDisabled;\\r\\n  this.active = true;\\r\\n\\r\\n  this._clientMap = opts.clientMap || {};\\r\\n\\r\\n  var maxTimeout = Math.pow(2, 31) - 1;\\r\\n\\r\\n  var verifyDuration = function (propertyName) {\\r\\n    if (self[propertyName] > maxTimeout) {\\r\\n      throw new InvalidArgumentsError('The ' + propertyName +\\r\\n        ' value provided exceeded the maximum amount allowed');\\r\\n    }\\r\\n  };\\r\\n\\r\\n  verifyDuration('connectTimeout');\\r\\n  verifyDuration('ackTimeout');\\r\\n\\r\\n  this._localEvents = {\\r\\n    'connect': 1,\\r\\n    'connectAbort': 1,\\r\\n    'close': 1,\\r\\n    'disconnect': 1,\\r\\n    'message': 1,\\r\\n    'error': 1,\\r\\n    'raw': 1,\\r\\n    'kickOut': 1,\\r\\n    'subscribe': 1,\\r\\n    'unsubscribe': 1,\\r\\n    'subscribeStateChange': 1,\\r\\n    'authStateChange': 1,\\r\\n    'authenticate': 1,\\r\\n    'deauthenticate': 1,\\r\\n    'removeAuthToken': 1,\\r\\n    'subscribeRequest': 1\\r\\n  };\\r\\n\\r\\n  this.connectAttempts = 0;\\r\\n\\r\\n  this._emitBuffer = new LinkedList();\\r\\n  this.channels = {};\\r\\n\\r\\n  this.options = opts;\\r\\n\\r\\n  this._cid = 1;\\r\\n\\r\\n  this.options.callIdGenerator = function () {\\r\\n    return self._cid++;\\r\\n  };\\r\\n\\r\\n  if (this.options.autoReconnect) {\\r\\n    if (this.options.autoReconnectOptions == null) {\\r\\n      this.options.autoReconnectOptions = {};\\r\\n    }\\r\\n\\r\\n    // Add properties to the this.options.autoReconnectOptions object.\\r\\n    // We assign the reference to a reconnectOptions variable to avoid repetition.\\r\\n    var reconnectOptions = this.options.autoReconnectOptions;\\r\\n    if (reconnectOptions.initialDelay == null) {\\r\\n      reconnectOptions.initialDelay = 10000;\\r\\n    }\\r\\n    if (reconnectOptions.randomness == null) {\\r\\n      reconnectOptions.randomness = 10000;\\r\\n    }\\r\\n    if (reconnectOptions.multiplier == null) {\\r\\n      reconnectOptions.multiplier = 1.5;\\r\\n    }\\r\\n    if (reconnectOptions.maxDelay == null) {\\r\\n      reconnectOptions.maxDelay = 60000;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  if (this.options.subscriptionRetryOptions == null) {\\r\\n    this.options.subscriptionRetryOptions = {};\\r\\n  }\\r\\n\\r\\n  if (this.options.authEngine) {\\r\\n    this.auth = this.options.authEngine;\\r\\n  } else {\\r\\n    this.auth = new AuthEngine();\\r\\n  }\\r\\n\\r\\n  if (this.options.codecEngine) {\\r\\n    this.codec = this.options.codecEngine;\\r\\n  } else {\\r\\n    // Default codec engine\\r\\n    this.codec = formatter;\\r\\n  }\\r\\n\\r\\n  if (this.options.protocol) {\\r\\n    var protocolOptionError = new InvalidArgumentsError('The \\\"protocol\\\" option' +\\r\\n      ' does not affect socketcluster-client. If you want to utilize SSL/TLS' +\\r\\n      ' - use \\\"secure\\\" option instead');\\r\\n    this._onSCError(protocolOptionError);\\r\\n  }\\r\\n\\r\\n  this.options.path = this.options.path.replace(/\\\\/$/, '') + '/';\\r\\n\\r\\n  this.options.query = opts.query || {};\\r\\n  if (typeof this.options.query === 'string') {\\r\\n    this.options.query = querystring.parse(this.options.query);\\r\\n  }\\r\\n\\r\\n  this._channelEmitter = new Emitter();\\r\\n\\r\\n  this._unloadHandler = function () {\\r\\n    self.disconnect();\\r\\n  };\\r\\n\\r\\n  if (isBrowser && this.disconnectOnUnload && global.addEventListener) {\\r\\n    global.addEventListener('beforeunload', this._unloadHandler, false);\\r\\n  }\\r\\n  this._clientMap[this.clientId] = this;\\r\\n\\r\\n  if (this.options.autoConnect) {\\r\\n    this.connect();\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype = Object.create(Emitter.prototype);\\r\\n\\r\\nSCClientSocket.CONNECTING = SCClientSocket.prototype.CONNECTING = SCTransport.prototype.CONNECTING;\\r\\nSCClientSocket.OPEN = SCClientSocket.prototype.OPEN = SCTransport.prototype.OPEN;\\r\\nSCClientSocket.CLOSED = SCClientSocket.prototype.CLOSED = SCTransport.prototype.CLOSED;\\r\\n\\r\\nSCClientSocket.AUTHENTICATED = SCClientSocket.prototype.AUTHENTICATED = 'authenticated';\\r\\nSCClientSocket.UNAUTHENTICATED = SCClientSocket.prototype.UNAUTHENTICATED = 'unauthenticated';\\r\\n\\r\\nSCClientSocket.PENDING = SCClientSocket.prototype.PENDING = 'pending';\\r\\n\\r\\nSCClientSocket.ignoreStatuses = scErrors.socketProtocolIgnoreStatuses;\\r\\nSCClientSocket.errorStatuses = scErrors.socketProtocolErrorStatuses;\\r\\n\\r\\nSCClientSocket.prototype._privateEventHandlerMap = {\\r\\n  '#publish': function (data) {\\r\\n    var undecoratedChannelName = this._undecorateChannelName(data.channel);\\r\\n    var isSubscribed = this.isSubscribed(undecoratedChannelName, true);\\r\\n\\r\\n    if (isSubscribed) {\\r\\n      this._channelEmitter.emit(undecoratedChannelName, data.data);\\r\\n    }\\r\\n  },\\r\\n  '#kickOut': function (data) {\\r\\n    var undecoratedChannelName = this._undecorateChannelName(data.channel);\\r\\n    var channel = this.channels[undecoratedChannelName];\\r\\n    if (channel) {\\r\\n      Emitter.prototype.emit.call(this, 'kickOut', data.message, undecoratedChannelName);\\r\\n      channel.emit('kickOut', data.message, undecoratedChannelName);\\r\\n      this._triggerChannelUnsubscribe(channel);\\r\\n    }\\r\\n  },\\r\\n  '#setAuthToken': function (data, response) {\\r\\n    var self = this;\\r\\n\\r\\n    if (data) {\\r\\n      var triggerAuthenticate = function (err) {\\r\\n        if (err) {\\r\\n          // This is a non-fatal error, we don't want to close the connection\\r\\n          // because of this but we do want to notify the server and throw an error\\r\\n          // on the client.\\r\\n          response.error(err);\\r\\n          self._onSCError(err);\\r\\n        } else {\\r\\n          self._changeToAuthenticatedState(data.token);\\r\\n          response.end();\\r\\n        }\\r\\n      };\\r\\n\\r\\n      this.auth.saveToken(this.authTokenName, data.token, {}, triggerAuthenticate);\\r\\n    } else {\\r\\n      response.error(new InvalidMessageError('No token data provided by #setAuthToken event'));\\r\\n    }\\r\\n  },\\r\\n  '#removeAuthToken': function (data, response) {\\r\\n    var self = this;\\r\\n\\r\\n    this.auth.removeToken(this.authTokenName, function (err, oldToken) {\\r\\n      if (err) {\\r\\n        // Non-fatal error - Do not close the connection\\r\\n        response.error(err);\\r\\n        self._onSCError(err);\\r\\n      } else {\\r\\n        Emitter.prototype.emit.call(self, 'removeAuthToken', oldToken);\\r\\n        self._changeToUnauthenticatedStateAndClearTokens();\\r\\n        response.end();\\r\\n      }\\r\\n    });\\r\\n  },\\r\\n  '#disconnect': function (data) {\\r\\n    this.transport.close(data.code, data.data);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.getState = function () {\\r\\n  return this.state;\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.getBytesReceived = function () {\\r\\n  return this.transport.getBytesReceived();\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.deauthenticate = function (callback) {\\r\\n  var self = this;\\r\\n\\r\\n  this.auth.removeToken(this.authTokenName, function (err, oldToken) {\\r\\n    if (err) {\\r\\n      // Non-fatal error - Do not close the connection\\r\\n      self._onSCError(err);\\r\\n    } else {\\r\\n      Emitter.prototype.emit.call(self, 'removeAuthToken', oldToken);\\r\\n      if (self.state !== self.CLOSED) {\\r\\n        self.emit('#removeAuthToken');\\r\\n      }\\r\\n      self._changeToUnauthenticatedStateAndClearTokens();\\r\\n    }\\r\\n    callback && callback(err);\\r\\n  });\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.connect = SCClientSocket.prototype.open = function () {\\r\\n  var self = this;\\r\\n\\r\\n  if (!this.active) {\\r\\n    var error = new InvalidActionError('Cannot connect a destroyed client');\\r\\n    this._onSCError(error);\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  if (this.state === this.CLOSED) {\\r\\n    this.pendingReconnect = false;\\r\\n    this.pendingReconnectTimeout = null;\\r\\n    clearTimeout(this._reconnectTimeoutRef);\\r\\n\\r\\n    this.state = this.CONNECTING;\\r\\n    Emitter.prototype.emit.call(this, 'connecting');\\r\\n\\r\\n    if (this.transport) {\\r\\n      this.transport.off();\\r\\n    }\\r\\n\\r\\n    this.transport = new SCTransport(this.auth, this.codec, this.options);\\r\\n\\r\\n    this.transport.on('open', function (status) {\\r\\n      self.state = self.OPEN;\\r\\n      self._onSCOpen(status);\\r\\n    });\\r\\n\\r\\n    this.transport.on('error', function (err) {\\r\\n      self._onSCError(err);\\r\\n    });\\r\\n\\r\\n    this.transport.on('close', function (code, data) {\\r\\n      self.state = self.CLOSED;\\r\\n      self._onSCClose(code, data);\\r\\n    });\\r\\n\\r\\n    this.transport.on('openAbort', function (code, data) {\\r\\n      self.state = self.CLOSED;\\r\\n      self._onSCClose(code, data, true);\\r\\n    });\\r\\n\\r\\n    this.transport.on('event', function (event, data, res) {\\r\\n      self._onSCEvent(event, data, res);\\r\\n    });\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.reconnect = function (code, data) {\\r\\n  this.disconnect(code, data);\\r\\n  this.connect();\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.disconnect = function (code, data) {\\r\\n  code = code || 1000;\\r\\n\\r\\n  if (typeof code !== 'number') {\\r\\n    throw new InvalidArgumentsError('If specified, the code argument must be a number');\\r\\n  }\\r\\n\\r\\n  if (this.state === this.OPEN || this.state === this.CONNECTING) {\\r\\n    this.transport.close(code, data);\\r\\n  } else {\\r\\n    this.pendingReconnect = false;\\r\\n    this.pendingReconnectTimeout = null;\\r\\n    clearTimeout(this._reconnectTimeoutRef);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.destroy = function (code, data) {\\r\\n  if (isBrowser && global.removeEventListener) {\\r\\n    global.removeEventListener('beforeunload', this._unloadHandler, false);\\r\\n  }\\r\\n  this.active = false;\\r\\n  this.disconnect(code, data);\\r\\n  delete this._clientMap[this.clientId];\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._changeToUnauthenticatedStateAndClearTokens = function () {\\r\\n  if (this.authState !== this.UNAUTHENTICATED) {\\r\\n    var oldState = this.authState;\\r\\n    var oldSignedToken = this.signedAuthToken;\\r\\n    this.authState = this.UNAUTHENTICATED;\\r\\n    this.signedAuthToken = null;\\r\\n    this.authToken = null;\\r\\n\\r\\n    var stateChangeData = {\\r\\n      oldState: oldState,\\r\\n      newState: this.authState\\r\\n    };\\r\\n    Emitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\\r\\n    Emitter.prototype.emit.call(this, 'deauthenticate', oldSignedToken);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._changeToAuthenticatedState = function (signedAuthToken) {\\r\\n  this.signedAuthToken = signedAuthToken;\\r\\n  this.authToken = this._extractAuthTokenData(signedAuthToken);\\r\\n\\r\\n  if (this.authState !== this.AUTHENTICATED) {\\r\\n    var oldState = this.authState;\\r\\n    this.authState = this.AUTHENTICATED;\\r\\n    var stateChangeData = {\\r\\n      oldState: oldState,\\r\\n      newState: this.authState,\\r\\n      signedAuthToken: signedAuthToken,\\r\\n      authToken: this.authToken\\r\\n    };\\r\\n    if (!this.preparingPendingSubscriptions) {\\r\\n      this.processPendingSubscriptions();\\r\\n    }\\r\\n\\r\\n    Emitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\\r\\n  }\\r\\n  Emitter.prototype.emit.call(this, 'authenticate', signedAuthToken);\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.decodeBase64 = function (encodedString) {\\r\\n  return Buffer.from(encodedString, 'base64').toString('utf8');\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.encodeBase64 = function (decodedString) {\\r\\n  return Buffer.from(decodedString, 'utf8').toString('base64');\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._extractAuthTokenData = function (signedAuthToken) {\\r\\n  var tokenParts = (signedAuthToken || '').split('.');\\r\\n  var encodedTokenData = tokenParts[1];\\r\\n  if (encodedTokenData != null) {\\r\\n    var tokenData = encodedTokenData;\\r\\n    try {\\r\\n      tokenData = this.decodeBase64(tokenData);\\r\\n      return JSON.parse(tokenData);\\r\\n    } catch (e) {\\r\\n      return tokenData;\\r\\n    }\\r\\n  }\\r\\n  return null;\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.getAuthToken = function () {\\r\\n  return this.authToken;\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.getSignedAuthToken = function () {\\r\\n  return this.signedAuthToken;\\r\\n};\\r\\n\\r\\n// Perform client-initiated authentication by providing an encrypted token string.\\r\\nSCClientSocket.prototype.authenticate = function (signedAuthToken, callback) {\\r\\n  var self = this;\\r\\n\\r\\n  this.emit('#authenticate', signedAuthToken, function (err, authStatus) {\\r\\n    if (authStatus && authStatus.isAuthenticated != null) {\\r\\n      // If authStatus is correctly formatted (has an isAuthenticated property),\\r\\n      // then we will rehydrate the authError.\\r\\n      if (authStatus.authError) {\\r\\n        authStatus.authError = scErrors.hydrateError(authStatus.authError);\\r\\n      }\\r\\n    } else {\\r\\n      // Some errors like BadConnectionError and TimeoutError will not pass a valid\\r\\n      // authStatus object to the current function, so we need to create it ourselves.\\r\\n      authStatus = {\\r\\n        isAuthenticated: self.authState,\\r\\n        authError: null\\r\\n      };\\r\\n    }\\r\\n    if (err) {\\r\\n      if (err.name !== 'BadConnectionError' && err.name !== 'TimeoutError') {\\r\\n        // In case of a bad/closed connection or a timeout, we maintain the last\\r\\n        // known auth state since those errors don't mean that the token is invalid.\\r\\n\\r\\n        self._changeToUnauthenticatedStateAndClearTokens();\\r\\n      }\\r\\n      callback && callback(err, authStatus);\\r\\n    } else {\\r\\n      self.auth.saveToken(self.authTokenName, signedAuthToken, {}, function (err) {\\r\\n        if (err) {\\r\\n          self._onSCError(err);\\r\\n        }\\r\\n        if (authStatus.isAuthenticated) {\\r\\n          self._changeToAuthenticatedState(signedAuthToken);\\r\\n        } else {\\r\\n          self._changeToUnauthenticatedStateAndClearTokens();\\r\\n        }\\r\\n        callback && callback(err, authStatus);\\r\\n      });\\r\\n    }\\r\\n  });\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._tryReconnect = function (initialDelay) {\\r\\n  var self = this;\\r\\n\\r\\n  var exponent = this.connectAttempts++;\\r\\n  var reconnectOptions = this.options.autoReconnectOptions;\\r\\n  var timeout;\\r\\n\\r\\n  if (initialDelay == null || exponent > 0) {\\r\\n    var initialTimeout = Math.round(reconnectOptions.initialDelay + (reconnectOptions.randomness || 0) * Math.random());\\r\\n\\r\\n    timeout = Math.round(initialTimeout * Math.pow(reconnectOptions.multiplier, exponent));\\r\\n  } else {\\r\\n    timeout = initialDelay;\\r\\n  }\\r\\n\\r\\n  if (timeout > reconnectOptions.maxDelay) {\\r\\n    timeout = reconnectOptions.maxDelay;\\r\\n  }\\r\\n\\r\\n  clearTimeout(this._reconnectTimeoutRef);\\r\\n\\r\\n  this.pendingReconnect = true;\\r\\n  this.pendingReconnectTimeout = timeout;\\r\\n  this._reconnectTimeoutRef = setTimeout(function () {\\r\\n    self.connect();\\r\\n  }, timeout);\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._onSCOpen = function (status) {\\r\\n  var self = this;\\r\\n\\r\\n  this.preparingPendingSubscriptions = true;\\r\\n\\r\\n  if (status) {\\r\\n    this.id = status.id;\\r\\n    this.pingTimeout = status.pingTimeout;\\r\\n    this.transport.pingTimeout = this.pingTimeout;\\r\\n    if (status.isAuthenticated) {\\r\\n      this._changeToAuthenticatedState(status.authToken);\\r\\n    } else {\\r\\n      this._changeToUnauthenticatedStateAndClearTokens();\\r\\n    }\\r\\n  } else {\\r\\n    // This can happen if auth.loadToken (in sctransport.js) fails with\\r\\n    // an error - This means that the signedAuthToken cannot be loaded by\\r\\n    // the auth engine and therefore, we need to unauthenticate the client.\\r\\n    this._changeToUnauthenticatedStateAndClearTokens();\\r\\n  }\\r\\n\\r\\n  this.connectAttempts = 0;\\r\\n\\r\\n  if (this.options.autoSubscribeOnConnect) {\\r\\n    this.processPendingSubscriptions();\\r\\n  }\\r\\n\\r\\n  // If the user invokes the callback while in autoSubscribeOnConnect mode, it\\r\\n  // won't break anything.\\r\\n  Emitter.prototype.emit.call(this, 'connect', status, function () {\\r\\n    self.processPendingSubscriptions();\\r\\n  });\\r\\n\\r\\n  if (this.state === this.OPEN) {\\r\\n    this._flushEmitBuffer();\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._onSCError = function (err) {\\r\\n  var self = this;\\r\\n\\r\\n  // Throw error in different stack frame so that error handling\\r\\n  // cannot interfere with a reconnect action.\\r\\n  setTimeout(function () {\\r\\n    if (self.listeners('error').length < 1) {\\r\\n      throw err;\\r\\n    } else {\\r\\n      Emitter.prototype.emit.call(self, 'error', err);\\r\\n    }\\r\\n  }, 0);\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._suspendSubscriptions = function () {\\r\\n  var channel, newState;\\r\\n  for (var channelName in this.channels) {\\r\\n    if (this.channels.hasOwnProperty(channelName)) {\\r\\n      channel = this.channels[channelName];\\r\\n      if (channel.state === channel.SUBSCRIBED ||\\r\\n        channel.state === channel.PENDING) {\\r\\n\\r\\n        newState = channel.PENDING;\\r\\n      } else {\\r\\n        newState = channel.UNSUBSCRIBED;\\r\\n      }\\r\\n\\r\\n      this._triggerChannelUnsubscribe(channel, newState);\\r\\n    }\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._abortAllPendingEventsDueToBadConnection = function (failureType) {\\r\\n  var currentNode = this._emitBuffer.head;\\r\\n  var nextNode;\\r\\n\\r\\n  while (currentNode) {\\r\\n    nextNode = currentNode.next;\\r\\n    var eventObject = currentNode.data;\\r\\n    clearTimeout(eventObject.timeout);\\r\\n    delete eventObject.timeout;\\r\\n    currentNode.detach();\\r\\n    currentNode = nextNode;\\r\\n\\r\\n    var callback = eventObject.callback;\\r\\n    if (callback) {\\r\\n      delete eventObject.callback;\\r\\n      var errorMessage = \\\"Event '\\\" + eventObject.event +\\r\\n        \\\"' was aborted due to a bad connection\\\";\\r\\n      var error = new BadConnectionError(errorMessage, failureType);\\r\\n      callback.call(eventObject, error, eventObject);\\r\\n    }\\r\\n    // Cleanup any pending response callback in the transport layer too.\\r\\n    if (eventObject.cid) {\\r\\n      this.transport.cancelPendingResponse(eventObject.cid);\\r\\n    }\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._onSCClose = function (code, data, openAbort) {\\r\\n  var self = this;\\r\\n\\r\\n  this.id = null;\\r\\n\\r\\n  if (this.transport) {\\r\\n    this.transport.off();\\r\\n  }\\r\\n  this.pendingReconnect = false;\\r\\n  this.pendingReconnectTimeout = null;\\r\\n  clearTimeout(this._reconnectTimeoutRef);\\r\\n\\r\\n  this._suspendSubscriptions();\\r\\n  this._abortAllPendingEventsDueToBadConnection(openAbort ? 'connectAbort' : 'disconnect');\\r\\n\\r\\n  // Try to reconnect\\r\\n  // on server ping timeout (4000)\\r\\n  // or on client pong timeout (4001)\\r\\n  // or on close without status (1005)\\r\\n  // or on handshake failure (4003)\\r\\n  // or on handshake rejection (4008)\\r\\n  // or on socket hung up (1006)\\r\\n  if (this.options.autoReconnect) {\\r\\n    if (code === 4000 || code === 4001 || code === 1005) {\\r\\n      // If there is a ping or pong timeout or socket closes without\\r\\n      // status, don't wait before trying to reconnect - These could happen\\r\\n      // if the client wakes up after a period of inactivity and in this case we\\r\\n      // want to re-establish the connection as soon as possible.\\r\\n      this._tryReconnect(0);\\r\\n\\r\\n      // Codes 4500 and above will be treated as permanent disconnects.\\r\\n      // Socket will not try to auto-reconnect.\\r\\n    } else if (code !== 1000 && code < 4500) {\\r\\n      this._tryReconnect();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  if (openAbort) {\\r\\n    Emitter.prototype.emit.call(self, 'connectAbort', code, data);\\r\\n  } else {\\r\\n    Emitter.prototype.emit.call(self, 'disconnect', code, data);\\r\\n  }\\r\\n  Emitter.prototype.emit.call(self, 'close', code, data);\\r\\n\\r\\n  if (!SCClientSocket.ignoreStatuses[code]) {\\r\\n    var closeMessage;\\r\\n    if (data) {\\r\\n      closeMessage = 'Socket connection closed with status code ' + code + ' and reason: ' + data;\\r\\n    } else {\\r\\n      closeMessage = 'Socket connection closed with status code ' + code;\\r\\n    }\\r\\n    var err = new SocketProtocolError(SCClientSocket.errorStatuses[code] || closeMessage, code);\\r\\n    this._onSCError(err);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._onSCEvent = function (event, data, res) {\\r\\n  var handler = this._privateEventHandlerMap[event];\\r\\n  if (handler) {\\r\\n    handler.call(this, data, res);\\r\\n  } else {\\r\\n    Emitter.prototype.emit.call(this, event, data, function () {\\r\\n      res && res.callback.apply(res, arguments);\\r\\n    });\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.decode = function (message) {\\r\\n  return this.transport.decode(message);\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.encode = function (object) {\\r\\n  return this.transport.encode(object);\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._flushEmitBuffer = function () {\\r\\n  var currentNode = this._emitBuffer.head;\\r\\n  var nextNode;\\r\\n\\r\\n  while (currentNode) {\\r\\n    nextNode = currentNode.next;\\r\\n    var eventObject = currentNode.data;\\r\\n    currentNode.detach();\\r\\n    this.transport.emitObject(eventObject);\\r\\n    currentNode = nextNode;\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._handleEventAckTimeout = function (eventObject, eventNode) {\\r\\n  if (eventNode) {\\r\\n    eventNode.detach();\\r\\n  }\\r\\n  delete eventObject.timeout;\\r\\n\\r\\n  var callback = eventObject.callback;\\r\\n  if (callback) {\\r\\n    delete eventObject.callback;\\r\\n    var error = new TimeoutError(\\\"Event response for '\\\" + eventObject.event + \\\"' timed out\\\");\\r\\n    callback.call(eventObject, error, eventObject);\\r\\n  }\\r\\n  // Cleanup any pending response callback in the transport layer too.\\r\\n  if (eventObject.cid) {\\r\\n    this.transport.cancelPendingResponse(eventObject.cid);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._emit = function (event, data, callback) {\\r\\n  var self = this;\\r\\n\\r\\n  if (this.state === this.CLOSED) {\\r\\n    this.connect();\\r\\n  }\\r\\n  var eventObject = {\\r\\n    event: event,\\r\\n    callback: callback\\r\\n  };\\r\\n\\r\\n  var eventNode = new LinkedList.Item();\\r\\n\\r\\n  if (this.options.cloneData) {\\r\\n    eventObject.data = clone(data);\\r\\n  } else {\\r\\n    eventObject.data = data;\\r\\n  }\\r\\n  eventNode.data = eventObject;\\r\\n\\r\\n  eventObject.timeout = setTimeout(function () {\\r\\n    self._handleEventAckTimeout(eventObject, eventNode);\\r\\n  }, this.ackTimeout);\\r\\n\\r\\n  this._emitBuffer.append(eventNode);\\r\\n  if (this.state === this.OPEN) {\\r\\n    this._flushEmitBuffer();\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.send = function (data) {\\r\\n  this.transport.send(data);\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.emit = function (event, data, callback) {\\r\\n  if (this._localEvents[event] == null) {\\r\\n    this._emit(event, data, callback);\\r\\n  } else if (event === 'error') {\\r\\n    Emitter.prototype.emit.call(this, event, data);\\r\\n  } else {\\r\\n    var error = new InvalidActionError('The \\\"' + event + '\\\" event is reserved and cannot be emitted on a client socket');\\r\\n    this._onSCError(error);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.publish = function (channelName, data, callback) {\\r\\n  var pubData = {\\r\\n    channel: this._decorateChannelName(channelName),\\r\\n    data: data\\r\\n  };\\r\\n  this.emit('#publish', pubData, callback);\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._triggerChannelSubscribe = function (channel, subscriptionOptions) {\\r\\n  var channelName = channel.name;\\r\\n\\r\\n  if (channel.state !== channel.SUBSCRIBED) {\\r\\n    var oldState = channel.state;\\r\\n    channel.state = channel.SUBSCRIBED;\\r\\n\\r\\n    var stateChangeData = {\\r\\n      channel: channelName,\\r\\n      oldState: oldState,\\r\\n      newState: channel.state,\\r\\n      subscriptionOptions: subscriptionOptions\\r\\n    };\\r\\n    channel.emit('subscribeStateChange', stateChangeData);\\r\\n    channel.emit('subscribe', channelName, subscriptionOptions);\\r\\n    Emitter.prototype.emit.call(this, 'subscribeStateChange', stateChangeData);\\r\\n    Emitter.prototype.emit.call(this, 'subscribe', channelName, subscriptionOptions);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._triggerChannelSubscribeFail = function (err, channel, subscriptionOptions) {\\r\\n  var channelName = channel.name;\\r\\n  var meetsAuthRequirements = !channel.waitForAuth || this.authState === this.AUTHENTICATED;\\r\\n\\r\\n  if (channel.state !== channel.UNSUBSCRIBED && meetsAuthRequirements) {\\r\\n    channel.state = channel.UNSUBSCRIBED;\\r\\n\\r\\n    channel.emit('subscribeFail', err, channelName, subscriptionOptions);\\r\\n    Emitter.prototype.emit.call(this, 'subscribeFail', err, channelName, subscriptionOptions);\\r\\n  }\\r\\n};\\r\\n\\r\\n// Cancel any pending subscribe callback\\r\\nSCClientSocket.prototype._cancelPendingSubscribeCallback = function (channel) {\\r\\n  if (channel._pendingSubscriptionCid != null) {\\r\\n    this.transport.cancelPendingResponse(channel._pendingSubscriptionCid);\\r\\n    delete channel._pendingSubscriptionCid;\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._decorateChannelName = function (channelName) {\\r\\n  if (this.channelPrefix) {\\r\\n    channelName = this.channelPrefix + channelName;\\r\\n  }\\r\\n  return channelName;\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._undecorateChannelName = function (decoratedChannelName) {\\r\\n  if (this.channelPrefix && decoratedChannelName.indexOf(this.channelPrefix) === 0) {\\r\\n    return decoratedChannelName.replace(this.channelPrefix, '');\\r\\n  }\\r\\n  return decoratedChannelName;\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._trySubscribe = function (channel) {\\r\\n  var self = this;\\r\\n\\r\\n  var meetsAuthRequirements = !channel.waitForAuth || this.authState === this.AUTHENTICATED;\\r\\n\\r\\n  // We can only ever have one pending subscribe action at any given time on a channel\\r\\n  if (this.state === this.OPEN && !this.preparingPendingSubscriptions &&\\r\\n    channel._pendingSubscriptionCid == null && meetsAuthRequirements) {\\r\\n\\r\\n    var options = {\\r\\n      noTimeout: true\\r\\n    };\\r\\n\\r\\n    var subscriptionOptions = {\\r\\n      channel: this._decorateChannelName(channel.name)\\r\\n    };\\r\\n    if (channel.waitForAuth) {\\r\\n      options.waitForAuth = true;\\r\\n      subscriptionOptions.waitForAuth = options.waitForAuth;\\r\\n    }\\r\\n    if (channel.data) {\\r\\n      subscriptionOptions.data = channel.data;\\r\\n    }\\r\\n    if (channel.batch) {\\r\\n      options.batch = true;\\r\\n      subscriptionOptions.batch = true;\\r\\n    }\\r\\n\\r\\n    channel._pendingSubscriptionCid = this.transport.emit(\\r\\n      '#subscribe', subscriptionOptions, options,\\r\\n      function (err) {\\r\\n        delete channel._pendingSubscriptionCid;\\r\\n        if (err) {\\r\\n          self._triggerChannelSubscribeFail(err, channel, subscriptionOptions);\\r\\n        } else {\\r\\n          self._triggerChannelSubscribe(channel, subscriptionOptions);\\r\\n        }\\r\\n      }\\r\\n    );\\r\\n    Emitter.prototype.emit.call(this, 'subscribeRequest', channel.name, subscriptionOptions);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.subscribe = function (channelName, options) {\\r\\n  var channel = this.channels[channelName];\\r\\n\\r\\n  if (!channel) {\\r\\n    channel = new SCChannel(channelName, this, options);\\r\\n    this.channels[channelName] = channel;\\r\\n  } else if (options) {\\r\\n    channel.setOptions(options);\\r\\n  }\\r\\n\\r\\n  if (channel.state === channel.UNSUBSCRIBED) {\\r\\n    channel.state = channel.PENDING;\\r\\n    this._trySubscribe(channel);\\r\\n  }\\r\\n\\r\\n  return channel;\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._triggerChannelUnsubscribe = function (channel, newState) {\\r\\n  var channelName = channel.name;\\r\\n  var oldState = channel.state;\\r\\n\\r\\n  if (newState) {\\r\\n    channel.state = newState;\\r\\n  } else {\\r\\n    channel.state = channel.UNSUBSCRIBED;\\r\\n  }\\r\\n  this._cancelPendingSubscribeCallback(channel);\\r\\n\\r\\n  if (oldState === channel.SUBSCRIBED) {\\r\\n    var stateChangeData = {\\r\\n      channel: channelName,\\r\\n      oldState: oldState,\\r\\n      newState: channel.state\\r\\n    };\\r\\n    channel.emit('subscribeStateChange', stateChangeData);\\r\\n    channel.emit('unsubscribe', channelName);\\r\\n    Emitter.prototype.emit.call(this, 'subscribeStateChange', stateChangeData);\\r\\n    Emitter.prototype.emit.call(this, 'unsubscribe', channelName);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype._tryUnsubscribe = function (channel) {\\r\\n  var self = this;\\r\\n\\r\\n  if (this.state === this.OPEN) {\\r\\n    var options = {\\r\\n      noTimeout: true\\r\\n    };\\r\\n    if (channel.batch) {\\r\\n      options.batch = true;\\r\\n    }\\r\\n    // If there is a pending subscribe action, cancel the callback\\r\\n    this._cancelPendingSubscribeCallback(channel);\\r\\n\\r\\n    // This operation cannot fail because the TCP protocol guarantees delivery\\r\\n    // so long as the connection remains open. If the connection closes,\\r\\n    // the server will automatically unsubscribe the client and thus complete\\r\\n    // the operation on the server side.\\r\\n    var decoratedChannelName = this._decorateChannelName(channel.name);\\r\\n    this.transport.emit('#unsubscribe', decoratedChannelName, options);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.unsubscribe = function (channelName) {\\r\\n  var channel = this.channels[channelName];\\r\\n\\r\\n  if (channel) {\\r\\n    if (channel.state !== channel.UNSUBSCRIBED) {\\r\\n      this._triggerChannelUnsubscribe(channel);\\r\\n      this._tryUnsubscribe(channel);\\r\\n    }\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.channel = function (channelName, options) {\\r\\n  var currentChannel = this.channels[channelName];\\r\\n\\r\\n  if (!currentChannel) {\\r\\n    currentChannel = new SCChannel(channelName, this, options);\\r\\n    this.channels[channelName] = currentChannel;\\r\\n  }\\r\\n  return currentChannel;\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.destroyChannel = function (channelName) {\\r\\n  var channel = this.channels[channelName];\\r\\n\\r\\n  if (channel) {\\r\\n    channel.unwatch();\\r\\n    channel.unsubscribe();\\r\\n    delete this.channels[channelName];\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.subscriptions = function (includePending) {\\r\\n  var subs = [];\\r\\n  var channel, includeChannel;\\r\\n  for (var channelName in this.channels) {\\r\\n    if (this.channels.hasOwnProperty(channelName)) {\\r\\n      channel = this.channels[channelName];\\r\\n\\r\\n      if (includePending) {\\r\\n        includeChannel = channel && (channel.state === channel.SUBSCRIBED ||\\r\\n          channel.state === channel.PENDING);\\r\\n      } else {\\r\\n        includeChannel = channel && channel.state === channel.SUBSCRIBED;\\r\\n      }\\r\\n\\r\\n      if (includeChannel) {\\r\\n        subs.push(channelName);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return subs;\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.isSubscribed = function (channelName, includePending) {\\r\\n  var channel = this.channels[channelName];\\r\\n  if (includePending) {\\r\\n    return !!channel && (channel.state === channel.SUBSCRIBED ||\\r\\n      channel.state === channel.PENDING);\\r\\n  }\\r\\n  return !!channel && channel.state === channel.SUBSCRIBED;\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.processPendingSubscriptions = function () {\\r\\n  var self = this;\\r\\n\\r\\n  this.preparingPendingSubscriptions = false;\\r\\n\\r\\n  var pendingChannels = [];\\r\\n\\r\\n  for (var i in this.channels) {\\r\\n    if (this.channels.hasOwnProperty(i)) {\\r\\n      var channel = this.channels[i];\\r\\n      if (channel.state === channel.PENDING) {\\r\\n        pendingChannels.push(channel);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  pendingChannels.sort(function (a, b) {\\r\\n    var ap = a.priority || 0;\\r\\n    var bp = b.priority || 0;\\r\\n    if (ap > bp) {\\r\\n      return -1;\\r\\n    }\\r\\n    if (ap < bp) {\\r\\n      return 1;\\r\\n    }\\r\\n    return 0;\\r\\n  });\\r\\n\\r\\n  pendingChannels.forEach(function (channel) {\\r\\n    self._trySubscribe(channel);\\r\\n  });\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.watch = function (channelName, handler) {\\r\\n  if (typeof handler !== 'function') {\\r\\n    throw new InvalidArgumentsError('No handler function was provided');\\r\\n  }\\r\\n  this._channelEmitter.on(channelName, handler);\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.unwatch = function (channelName, handler) {\\r\\n  if (handler) {\\r\\n    this._channelEmitter.removeListener(channelName, handler);\\r\\n  } else {\\r\\n    this._channelEmitter.removeAllListeners(channelName);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCClientSocket.prototype.watchers = function (channelName) {\\r\\n  return this._channelEmitter.listeners(channelName);\\r\\n};\\r\\n\\r\\nmodule.exports = SCClientSocket;\\r\\n\\r\\n}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\r\\n},{\\\"./auth\\\":2,\\\"./response\\\":4,\\\"./sctransport\\\":6,\\\"buffer/\\\":9,\\\"clone\\\":10,\\\"component-emitter\\\":11,\\\"linked-list\\\":14,\\\"querystring\\\":17,\\\"sc-channel\\\":18,\\\"sc-errors\\\":20,\\\"sc-formatter\\\":21}],6:[function(_dereq_,module,exports){\\r\\n(function (global){\\r\\nvar Emitter = _dereq_('component-emitter');\\r\\nvar Response = _dereq_('./response').Response;\\r\\nvar querystring = _dereq_('querystring');\\r\\nvar WebSocket;\\r\\nvar createWebSocket;\\r\\n\\r\\nif (global.WebSocket) {\\r\\n  WebSocket = global.WebSocket;\\r\\n  createWebSocket = function (uri, options) {\\r\\n    return new WebSocket(uri);\\r\\n  };\\r\\n} else {\\r\\n  WebSocket = _dereq_('ws');\\r\\n  createWebSocket = function (uri, options) {\\r\\n    return new WebSocket(uri, null, options);\\r\\n  };\\r\\n}\\r\\n\\r\\nvar scErrors = _dereq_('sc-errors');\\r\\nvar TimeoutError = scErrors.TimeoutError;\\r\\nvar BadConnectionError = scErrors.BadConnectionError;\\r\\n\\r\\n\\r\\nvar SCTransport = function (authEngine, codecEngine, options) {\\r\\n  var self = this;\\r\\n\\r\\n  this.state = this.CLOSED;\\r\\n  this.auth = authEngine;\\r\\n  this.codec = codecEngine;\\r\\n  this.options = options;\\r\\n  this.connectTimeout = options.connectTimeout;\\r\\n  this.pingTimeout = options.ackTimeout;\\r\\n  this.pingTimeoutDisabled = !!options.pingTimeoutDisabled;\\r\\n  this.callIdGenerator = options.callIdGenerator;\\r\\n  this.authTokenName = options.authTokenName;\\r\\n\\r\\n  this._pingTimeoutTicker = null;\\r\\n  this._callbackMap = {};\\r\\n  this._batchSendList = [];\\r\\n\\r\\n  // Open the connection.\\r\\n\\r\\n  this.state = this.CONNECTING;\\r\\n  var uri = this.uri();\\r\\n\\r\\n  var wsSocket = createWebSocket(uri, this.options);\\r\\n  wsSocket.binaryType = this.options.binaryType;\\r\\n\\r\\n  this.socket = wsSocket;\\r\\n\\r\\n  wsSocket.onopen = function () {\\r\\n    self._onOpen();\\r\\n  };\\r\\n\\r\\n  wsSocket.onclose = function (event) {\\r\\n    var code;\\r\\n    if (event.code == null) {\\r\\n      // This is to handle an edge case in React Native whereby\\r\\n      // event.code is undefined when the mobile device is locked.\\r\\n      // TODO: This is not perfect since this condition could also apply to\\r\\n      // an abnormal close (no close control frame) which would be a 1006.\\r\\n      code = 1005;\\r\\n    } else {\\r\\n      code = event.code;\\r\\n    }\\r\\n    self._onClose(code, event.reason);\\r\\n  };\\r\\n\\r\\n  wsSocket.onmessage = function (message, flags) {\\r\\n    self._onMessage(message.data);\\r\\n  };\\r\\n\\r\\n  wsSocket.onerror = function (error) {\\r\\n    // The onclose event will be called automatically after the onerror event\\r\\n    // if the socket is connected - Otherwise, if it's in the middle of\\r\\n    // connecting, we want to close it manually with a 1006 - This is necessary\\r\\n    // to prevent inconsistent behavior when running the client in Node.js\\r\\n    // vs in a browser.\\r\\n\\r\\n    if (self.state === self.CONNECTING) {\\r\\n      self._onClose(1006);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  this._connectTimeoutRef = setTimeout(function () {\\r\\n    self._onClose(4007);\\r\\n    self.socket.close(4007);\\r\\n  }, this.connectTimeout);\\r\\n};\\r\\n\\r\\nSCTransport.prototype = Object.create(Emitter.prototype);\\r\\n\\r\\nSCTransport.CONNECTING = SCTransport.prototype.CONNECTING = 'connecting';\\r\\nSCTransport.OPEN = SCTransport.prototype.OPEN = 'open';\\r\\nSCTransport.CLOSED = SCTransport.prototype.CLOSED = 'closed';\\r\\n\\r\\nSCTransport.prototype.uri = function () {\\r\\n  var query = this.options.query || {};\\r\\n  var schema = this.options.secure ? 'wss' : 'ws';\\r\\n\\r\\n  if (this.options.timestampRequests) {\\r\\n    query[this.options.timestampParam] = (new Date()).getTime();\\r\\n  }\\r\\n\\r\\n  query = querystring.encode(query);\\r\\n\\r\\n  if (query.length) {\\r\\n    query = '?' + query;\\r\\n  }\\r\\n\\r\\n  var host;\\r\\n  if (this.options.host) {\\r\\n    host = this.options.host;\\r\\n  } else {\\r\\n    var port = '';\\r\\n\\r\\n    if (this.options.port && ((schema === 'wss' && this.options.port !== 443)\\r\\n      || (schema === 'ws' && this.options.port !== 80))) {\\r\\n      port = ':' + this.options.port;\\r\\n    }\\r\\n    host = this.options.hostname + port;\\r\\n  }\\r\\n\\r\\n  return schema + '://' + host + this.options.path + query;\\r\\n};\\r\\n\\r\\nSCTransport.prototype._onOpen = function () {\\r\\n  var self = this;\\r\\n\\r\\n  clearTimeout(this._connectTimeoutRef);\\r\\n  this._resetPingTimeout();\\r\\n\\r\\n  this._handshake(function (err, status) {\\r\\n    if (err) {\\r\\n      var statusCode;\\r\\n      if (status && status.code) {\\r\\n        statusCode = status.code;\\r\\n      } else {\\r\\n        statusCode = 4003;\\r\\n      }\\r\\n      self._onError(err);\\r\\n      self._onClose(statusCode, err.toString());\\r\\n      self.socket.close(statusCode);\\r\\n    } else {\\r\\n      self.state = self.OPEN;\\r\\n      Emitter.prototype.emit.call(self, 'open', status);\\r\\n      self._resetPingTimeout();\\r\\n    }\\r\\n  });\\r\\n};\\r\\n\\r\\nSCTransport.prototype._handshake = function (callback) {\\r\\n  var self = this;\\r\\n  this.auth.loadToken(this.authTokenName, function (err, token) {\\r\\n    if (err) {\\r\\n      callback(err);\\r\\n    } else {\\r\\n      // Don't wait for this.state to be 'open'.\\r\\n      // The underlying WebSocket (this.socket) is already open.\\r\\n      var options = {\\r\\n        force: true\\r\\n      };\\r\\n      self.emit('#handshake', {\\r\\n        authToken: token\\r\\n      }, options, function (err, status) {\\r\\n        if (status) {\\r\\n          // Add the token which was used as part of authentication attempt\\r\\n          // to the status object.\\r\\n          status.authToken = token;\\r\\n          if (status.authError) {\\r\\n            status.authError = scErrors.hydrateError(status.authError);\\r\\n          }\\r\\n        }\\r\\n        callback(err, status);\\r\\n      });\\r\\n    }\\r\\n  });\\r\\n};\\r\\n\\r\\nSCTransport.prototype._abortAllPendingEventsDueToBadConnection = function (failureType) {\\r\\n  for (var i in this._callbackMap) {\\r\\n    if (this._callbackMap.hasOwnProperty(i)) {\\r\\n      var eventObject = this._callbackMap[i];\\r\\n      delete this._callbackMap[i];\\r\\n\\r\\n      clearTimeout(eventObject.timeout);\\r\\n      delete eventObject.timeout;\\r\\n\\r\\n      var errorMessage = \\\"Event '\\\" + eventObject.event +\\r\\n        \\\"' was aborted due to a bad connection\\\";\\r\\n      var badConnectionError = new BadConnectionError(errorMessage, failureType);\\r\\n\\r\\n      var callback = eventObject.callback;\\r\\n      delete eventObject.callback;\\r\\n      callback.call(eventObject, badConnectionError, eventObject);\\r\\n    }\\r\\n  }\\r\\n};\\r\\n\\r\\nSCTransport.prototype._onClose = function (code, data) {\\r\\n  delete this.socket.onopen;\\r\\n  delete this.socket.onclose;\\r\\n  delete this.socket.onmessage;\\r\\n  delete this.socket.onerror;\\r\\n\\r\\n  clearTimeout(this._connectTimeoutRef);\\r\\n  clearTimeout(this._pingTimeoutTicker);\\r\\n  clearTimeout(this._batchTimeout);\\r\\n\\r\\n  if (this.state === this.OPEN) {\\r\\n    this.state = this.CLOSED;\\r\\n    Emitter.prototype.emit.call(this, 'close', code, data);\\r\\n    this._abortAllPendingEventsDueToBadConnection('disconnect');\\r\\n\\r\\n  } else if (this.state === this.CONNECTING) {\\r\\n    this.state = this.CLOSED;\\r\\n    Emitter.prototype.emit.call(this, 'openAbort', code, data);\\r\\n    this._abortAllPendingEventsDueToBadConnection('connectAbort');\\r\\n  }\\r\\n};\\r\\n\\r\\nSCTransport.prototype._handleEventObject = function (obj, message) {\\r\\n  if (obj && obj.event != null) {\\r\\n    var response = new Response(this, obj.cid);\\r\\n    Emitter.prototype.emit.call(this, 'event', obj.event, obj.data, response);\\r\\n  } else if (obj && obj.rid != null) {\\r\\n    var eventObject = this._callbackMap[obj.rid];\\r\\n    if (eventObject) {\\r\\n      clearTimeout(eventObject.timeout);\\r\\n      delete eventObject.timeout;\\r\\n      delete this._callbackMap[obj.rid];\\r\\n\\r\\n      if (eventObject.callback) {\\r\\n        var rehydratedError = scErrors.hydrateError(obj.error);\\r\\n        eventObject.callback(rehydratedError, obj.data);\\r\\n      }\\r\\n    }\\r\\n  } else {\\r\\n    Emitter.prototype.emit.call(this, 'event', 'raw', message);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCTransport.prototype._onMessage = function (message) {\\r\\n  Emitter.prototype.emit.call(this, 'event', 'message', message);\\r\\n\\r\\n  var obj = this.decode(message);\\r\\n\\r\\n  // If ping\\r\\n  if (obj === '#1') {\\r\\n    this._resetPingTimeout();\\r\\n    if (this.socket.readyState === this.socket.OPEN) {\\r\\n      this.sendObject('#2');\\r\\n    }\\r\\n  } else {\\r\\n    if (Array.isArray(obj)) {\\r\\n      var len = obj.length;\\r\\n      for (var i = 0; i < len; i++) {\\r\\n        this._handleEventObject(obj[i], message);\\r\\n      }\\r\\n    } else {\\r\\n      this._handleEventObject(obj, message);\\r\\n    }\\r\\n  }\\r\\n};\\r\\n\\r\\nSCTransport.prototype._onError = function (err) {\\r\\n  Emitter.prototype.emit.call(this, 'error', err);\\r\\n};\\r\\n\\r\\nSCTransport.prototype._resetPingTimeout = function () {\\r\\n  if (this.pingTimeoutDisabled) {\\r\\n    return;\\r\\n  }\\r\\n  var self = this;\\r\\n\\r\\n  var now = (new Date()).getTime();\\r\\n  clearTimeout(this._pingTimeoutTicker);\\r\\n\\r\\n  this._pingTimeoutTicker = setTimeout(function () {\\r\\n    self._onClose(4000);\\r\\n    self.socket.close(4000);\\r\\n  }, this.pingTimeout);\\r\\n};\\r\\n\\r\\nSCTransport.prototype.getBytesReceived = function () {\\r\\n  return this.socket.bytesReceived;\\r\\n};\\r\\n\\r\\nSCTransport.prototype.close = function (code, data) {\\r\\n  code = code || 1000;\\r\\n\\r\\n  if (this.state === this.OPEN) {\\r\\n    var packet = {\\r\\n      code: code,\\r\\n      data: data\\r\\n    };\\r\\n    this.emit('#disconnect', packet);\\r\\n\\r\\n    this._onClose(code, data);\\r\\n    this.socket.close(code);\\r\\n\\r\\n  } else if (this.state === this.CONNECTING) {\\r\\n    this._onClose(code, data);\\r\\n    this.socket.close(code);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCTransport.prototype.emitObject = function (eventObject, options) {\\r\\n  var simpleEventObject = {\\r\\n    event: eventObject.event,\\r\\n    data: eventObject.data\\r\\n  };\\r\\n\\r\\n  if (eventObject.callback) {\\r\\n    simpleEventObject.cid = eventObject.cid = this.callIdGenerator();\\r\\n    this._callbackMap[eventObject.cid] = eventObject;\\r\\n  }\\r\\n\\r\\n  this.sendObject(simpleEventObject, options);\\r\\n\\r\\n  return eventObject.cid || null;\\r\\n};\\r\\n\\r\\nSCTransport.prototype._handleEventAckTimeout = function (eventObject) {\\r\\n  if (eventObject.cid) {\\r\\n    delete this._callbackMap[eventObject.cid];\\r\\n  }\\r\\n  delete eventObject.timeout;\\r\\n\\r\\n  var callback = eventObject.callback;\\r\\n  if (callback) {\\r\\n    delete eventObject.callback;\\r\\n    var error = new TimeoutError(\\\"Event response for '\\\" + eventObject.event + \\\"' timed out\\\");\\r\\n    callback.call(eventObject, error, eventObject);\\r\\n  }\\r\\n};\\r\\n\\r\\n// The last two optional arguments (a and b) can be options and/or callback\\r\\nSCTransport.prototype.emit = function (event, data, a, b) {\\r\\n  var self = this;\\r\\n\\r\\n  var callback, options;\\r\\n\\r\\n  if (b) {\\r\\n    options = a;\\r\\n    callback = b;\\r\\n  } else {\\r\\n    if (a instanceof Function) {\\r\\n      options = {};\\r\\n      callback = a;\\r\\n    } else {\\r\\n      options = a;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  var eventObject = {\\r\\n    event: event,\\r\\n    data: data,\\r\\n    callback: callback\\r\\n  };\\r\\n\\r\\n  if (callback && !options.noTimeout) {\\r\\n    eventObject.timeout = setTimeout(function () {\\r\\n      self._handleEventAckTimeout(eventObject);\\r\\n    }, this.options.ackTimeout);\\r\\n  }\\r\\n\\r\\n  var cid = null;\\r\\n  if (this.state === this.OPEN || options.force) {\\r\\n    cid = this.emitObject(eventObject, options);\\r\\n  }\\r\\n  return cid;\\r\\n};\\r\\n\\r\\nSCTransport.prototype.cancelPendingResponse = function (cid) {\\r\\n  delete this._callbackMap[cid];\\r\\n};\\r\\n\\r\\nSCTransport.prototype.decode = function (message) {\\r\\n  return this.codec.decode(message);\\r\\n};\\r\\n\\r\\nSCTransport.prototype.encode = function (object) {\\r\\n  return this.codec.encode(object);\\r\\n};\\r\\n\\r\\nSCTransport.prototype.send = function (data) {\\r\\n  if (this.socket.readyState !== this.socket.OPEN) {\\r\\n    this._onClose(1005);\\r\\n  } else {\\r\\n    this.socket.send(data);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCTransport.prototype.serializeObject = function (object) {\\r\\n  var str, formatError;\\r\\n  try {\\r\\n    str = this.encode(object);\\r\\n  } catch (err) {\\r\\n    formatError = err;\\r\\n    this._onError(formatError);\\r\\n  }\\r\\n  if (!formatError) {\\r\\n    return str;\\r\\n  }\\r\\n  return null;\\r\\n};\\r\\n\\r\\nSCTransport.prototype.sendObjectBatch = function (object) {\\r\\n  var self = this;\\r\\n\\r\\n  this._batchSendList.push(object);\\r\\n  if (this._batchTimeout) {\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  this._batchTimeout = setTimeout(function () {\\r\\n    delete self._batchTimeout;\\r\\n    if (self._batchSendList.length) {\\r\\n      var str = self.serializeObject(self._batchSendList);\\r\\n      if (str != null) {\\r\\n        self.send(str);\\r\\n      }\\r\\n      self._batchSendList = [];\\r\\n    }\\r\\n  }, this.options.pubSubBatchDuration || 0);\\r\\n};\\r\\n\\r\\nSCTransport.prototype.sendObjectSingle = function (object) {\\r\\n  var str = this.serializeObject(object);\\r\\n  if (str != null) {\\r\\n    this.send(str);\\r\\n  }\\r\\n};\\r\\n\\r\\nSCTransport.prototype.sendObject = function (object, options) {\\r\\n  if (options && options.batch) {\\r\\n    this.sendObjectBatch(object);\\r\\n  } else {\\r\\n    this.sendObjectSingle(object);\\r\\n  }\\r\\n};\\r\\n\\r\\nmodule.exports.SCTransport = SCTransport;\\r\\n\\r\\n}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\r\\n},{\\\"./response\\\":4,\\\"component-emitter\\\":11,\\\"querystring\\\":17,\\\"sc-errors\\\":20,\\\"ws\\\":7}],7:[function(_dereq_,module,exports){\\r\\nvar global;\\r\\nif (typeof WorkerGlobalScope !== 'undefined') {\\r\\n  global = self;\\r\\n} else {\\r\\n  global = typeof window !== 'undefined' && window || (function() { return this; })();\\r\\n}\\r\\n\\r\\nvar WebSocket = global.WebSocket || global.MozWebSocket;\\r\\n\\r\\n/**\\r\\n * WebSocket constructor.\\r\\n *\\r\\n * The third `opts` options object gets ignored in web browsers, since it's\\r\\n * non-standard, and throws a TypeError if passed to the constructor.\\r\\n * See: https://github.com/einaros/ws/issues/227\\r\\n *\\r\\n * @param {String} uri\\r\\n * @param {Array} protocols (optional)\\r\\n * @param {Object} opts (optional)\\r\\n * @api public\\r\\n */\\r\\n\\r\\nfunction ws(uri, protocols, opts) {\\r\\n  var instance;\\r\\n  if (protocols) {\\r\\n    instance = new WebSocket(uri, protocols);\\r\\n  } else {\\r\\n    instance = new WebSocket(uri);\\r\\n  }\\r\\n  return instance;\\r\\n}\\r\\n\\r\\nif (WebSocket) ws.prototype = WebSocket.prototype;\\r\\n\\r\\nmodule.exports = WebSocket ? ws : null;\\r\\n\\r\\n},{}],8:[function(_dereq_,module,exports){\\r\\n'use strict'\\r\\n\\r\\nexports.byteLength = byteLength\\r\\nexports.toByteArray = toByteArray\\r\\nexports.fromByteArray = fromByteArray\\r\\n\\r\\nvar lookup = []\\r\\nvar revLookup = []\\r\\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\\r\\n\\r\\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\\r\\nfor (var i = 0, len = code.length; i < len; ++i) {\\r\\n  lookup[i] = code[i]\\r\\n  revLookup[code.charCodeAt(i)] = i\\r\\n}\\r\\n\\r\\n// Support decoding URL-safe base64 strings, as Node.js does.\\r\\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\\r\\nrevLookup['-'.charCodeAt(0)] = 62\\r\\nrevLookup['_'.charCodeAt(0)] = 63\\r\\n\\r\\nfunction getLens (b64) {\\r\\n  var len = b64.length\\r\\n\\r\\n  if (len % 4 > 0) {\\r\\n    throw new Error('Invalid string. Length must be a multiple of 4')\\r\\n  }\\r\\n\\r\\n  // Trim off extra bytes after placeholder bytes are found\\r\\n  // See: https://github.com/beatgammit/base64-js/issues/42\\r\\n  var validLen = b64.indexOf('=')\\r\\n  if (validLen === -1) validLen = len\\r\\n\\r\\n  var placeHoldersLen = validLen === len\\r\\n    ? 0\\r\\n    : 4 - (validLen % 4)\\r\\n\\r\\n  return [validLen, placeHoldersLen]\\r\\n}\\r\\n\\r\\n// base64 is 4/3 + up to two characters of the original data\\r\\nfunction byteLength (b64) {\\r\\n  var lens = getLens(b64)\\r\\n  var validLen = lens[0]\\r\\n  var placeHoldersLen = lens[1]\\r\\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\\r\\n}\\r\\n\\r\\nfunction _byteLength (b64, validLen, placeHoldersLen) {\\r\\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\\r\\n}\\r\\n\\r\\nfunction toByteArray (b64) {\\r\\n  var tmp\\r\\n  var lens = getLens(b64)\\r\\n  var validLen = lens[0]\\r\\n  var placeHoldersLen = lens[1]\\r\\n\\r\\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\\r\\n\\r\\n  var curByte = 0\\r\\n\\r\\n  // if there are placeholders, only get up to the last complete 4 chars\\r\\n  var len = placeHoldersLen > 0\\r\\n    ? validLen - 4\\r\\n    : validLen\\r\\n\\r\\n  for (var i = 0; i < len; i += 4) {\\r\\n    tmp =\\r\\n      (revLookup[b64.charCodeAt(i)] << 18) |\\r\\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\\r\\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\\r\\n      revLookup[b64.charCodeAt(i + 3)]\\r\\n    arr[curByte++] = (tmp >> 16) & 0xFF\\r\\n    arr[curByte++] = (tmp >> 8) & 0xFF\\r\\n    arr[curByte++] = tmp & 0xFF\\r\\n  }\\r\\n\\r\\n  if (placeHoldersLen === 2) {\\r\\n    tmp =\\r\\n      (revLookup[b64.charCodeAt(i)] << 2) |\\r\\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\\r\\n    arr[curByte++] = tmp & 0xFF\\r\\n  }\\r\\n\\r\\n  if (placeHoldersLen === 1) {\\r\\n    tmp =\\r\\n      (revLookup[b64.charCodeAt(i)] << 10) |\\r\\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\\r\\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\\r\\n    arr[curByte++] = (tmp >> 8) & 0xFF\\r\\n    arr[curByte++] = tmp & 0xFF\\r\\n  }\\r\\n\\r\\n  return arr\\r\\n}\\r\\n\\r\\nfunction tripletToBase64 (num) {\\r\\n  return lookup[num >> 18 & 0x3F] +\\r\\n    lookup[num >> 12 & 0x3F] +\\r\\n    lookup[num >> 6 & 0x3F] +\\r\\n    lookup[num & 0x3F]\\r\\n}\\r\\n\\r\\nfunction encodeChunk (uint8, start, end) {\\r\\n  var tmp\\r\\n  var output = []\\r\\n  for (var i = start; i < end; i += 3) {\\r\\n    tmp =\\r\\n      ((uint8[i] << 16) & 0xFF0000) +\\r\\n      ((uint8[i + 1] << 8) & 0xFF00) +\\r\\n      (uint8[i + 2] & 0xFF)\\r\\n    output.push(tripletToBase64(tmp))\\r\\n  }\\r\\n  return output.join('')\\r\\n}\\r\\n\\r\\nfunction fromByteArray (uint8) {\\r\\n  var tmp\\r\\n  var len = uint8.length\\r\\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\\r\\n  var parts = []\\r\\n  var maxChunkLength = 16383 // must be multiple of 3\\r\\n\\r\\n  // go through the array every three bytes, we'll deal with trailing stuff later\\r\\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\\r\\n    parts.push(encodeChunk(\\r\\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\\r\\n    ))\\r\\n  }\\r\\n\\r\\n  // pad the end with zeros, but make sure to not forget the extra bytes\\r\\n  if (extraBytes === 1) {\\r\\n    tmp = uint8[len - 1]\\r\\n    parts.push(\\r\\n      lookup[tmp >> 2] +\\r\\n      lookup[(tmp << 4) & 0x3F] +\\r\\n      '=='\\r\\n    )\\r\\n  } else if (extraBytes === 2) {\\r\\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\\r\\n    parts.push(\\r\\n      lookup[tmp >> 10] +\\r\\n      lookup[(tmp >> 4) & 0x3F] +\\r\\n      lookup[(tmp << 2) & 0x3F] +\\r\\n      '='\\r\\n    )\\r\\n  }\\r\\n\\r\\n  return parts.join('')\\r\\n}\\r\\n\\r\\n},{}],9:[function(_dereq_,module,exports){\\r\\n(function (Buffer){\\r\\n/*!\\r\\n * The buffer module from node.js, for the browser.\\r\\n *\\r\\n * @author   Feross Aboukhadijeh <https://feross.org>\\r\\n * @license  MIT\\r\\n */\\r\\n/* eslint-disable no-proto */\\r\\n\\r\\n'use strict'\\r\\n\\r\\nvar base64 = _dereq_('base64-js')\\r\\nvar ieee754 = _dereq_('ieee754')\\r\\n\\r\\nexports.Buffer = Buffer\\r\\nexports.SlowBuffer = SlowBuffer\\r\\nexports.INSPECT_MAX_BYTES = 50\\r\\n\\r\\nvar K_MAX_LENGTH = 0x7fffffff\\r\\nexports.kMaxLength = K_MAX_LENGTH\\r\\n\\r\\n/**\\r\\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\\r\\n *   === true    Use Uint8Array implementation (fastest)\\r\\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\\r\\n *               implementation (most compatible, even IE6)\\r\\n *\\r\\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\\r\\n * Opera 11.6+, iOS 4.2+.\\r\\n *\\r\\n * We report that the browser does not support typed arrays if the are not subclassable\\r\\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\\r\\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\\r\\n * for __proto__ and has a buggy typed array implementation.\\r\\n */\\r\\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\\r\\n\\r\\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\\r\\n    typeof console.error === 'function') {\\r\\n  console.error(\\r\\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\\r\\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\\r\\n  )\\r\\n}\\r\\n\\r\\nfunction typedArraySupport () {\\r\\n  // Can typed array instances can be augmented?\\r\\n  try {\\r\\n    var arr = new Uint8Array(1)\\r\\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\\r\\n    return arr.foo() === 42\\r\\n  } catch (e) {\\r\\n    return false\\r\\n  }\\r\\n}\\r\\n\\r\\nObject.defineProperty(Buffer.prototype, 'parent', {\\r\\n  enumerable: true,\\r\\n  get: function () {\\r\\n    if (!Buffer.isBuffer(this)) return undefined\\r\\n    return this.buffer\\r\\n  }\\r\\n})\\r\\n\\r\\nObject.defineProperty(Buffer.prototype, 'offset', {\\r\\n  enumerable: true,\\r\\n  get: function () {\\r\\n    if (!Buffer.isBuffer(this)) return undefined\\r\\n    return this.byteOffset\\r\\n  }\\r\\n})\\r\\n\\r\\nfunction createBuffer (length) {\\r\\n  if (length > K_MAX_LENGTH) {\\r\\n    throw new RangeError('The value \\\"' + length + '\\\" is invalid for option \\\"size\\\"')\\r\\n  }\\r\\n  // Return an augmented `Uint8Array` instance\\r\\n  var buf = new Uint8Array(length)\\r\\n  buf.__proto__ = Buffer.prototype\\r\\n  return buf\\r\\n}\\r\\n\\r\\n/**\\r\\n * The Buffer constructor returns instances of `Uint8Array` that have their\\r\\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\\r\\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\\r\\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\\r\\n * returns a single octet.\\r\\n *\\r\\n * The `Uint8Array` prototype remains unmodified.\\r\\n */\\r\\n\\r\\nfunction Buffer (arg, encodingOrOffset, length) {\\r\\n  // Common case.\\r\\n  if (typeof arg === 'number') {\\r\\n    if (typeof encodingOrOffset === 'string') {\\r\\n      throw new TypeError(\\r\\n        'The \\\"string\\\" argument must be of type string. Received type number'\\r\\n      )\\r\\n    }\\r\\n    return allocUnsafe(arg)\\r\\n  }\\r\\n  return from(arg, encodingOrOffset, length)\\r\\n}\\r\\n\\r\\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\\r\\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\\r\\n    Buffer[Symbol.species] === Buffer) {\\r\\n  Object.defineProperty(Buffer, Symbol.species, {\\r\\n    value: null,\\r\\n    configurable: true,\\r\\n    enumerable: false,\\r\\n    writable: false\\r\\n  })\\r\\n}\\r\\n\\r\\nBuffer.poolSize = 8192 // not used by this implementation\\r\\n\\r\\nfunction from (value, encodingOrOffset, length) {\\r\\n  if (typeof value === 'string') {\\r\\n    return fromString(value, encodingOrOffset)\\r\\n  }\\r\\n\\r\\n  if (ArrayBuffer.isView(value)) {\\r\\n    return fromArrayLike(value)\\r\\n  }\\r\\n\\r\\n  if (value == null) {\\r\\n    throw TypeError(\\r\\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\\r\\n      'or Array-like Object. Received type ' + (typeof value)\\r\\n    )\\r\\n  }\\r\\n\\r\\n  if (isInstance(value, ArrayBuffer) ||\\r\\n      (value && isInstance(value.buffer, ArrayBuffer))) {\\r\\n    return fromArrayBuffer(value, encodingOrOffset, length)\\r\\n  }\\r\\n\\r\\n  if (typeof value === 'number') {\\r\\n    throw new TypeError(\\r\\n      'The \\\"value\\\" argument must not be of type number. Received type number'\\r\\n    )\\r\\n  }\\r\\n\\r\\n  var valueOf = value.valueOf && value.valueOf()\\r\\n  if (valueOf != null && valueOf !== value) {\\r\\n    return Buffer.from(valueOf, encodingOrOffset, length)\\r\\n  }\\r\\n\\r\\n  var b = fromObject(value)\\r\\n  if (b) return b\\r\\n\\r\\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\\r\\n      typeof value[Symbol.toPrimitive] === 'function') {\\r\\n    return Buffer.from(\\r\\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\\r\\n    )\\r\\n  }\\r\\n\\r\\n  throw new TypeError(\\r\\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\\r\\n    'or Array-like Object. Received type ' + (typeof value)\\r\\n  )\\r\\n}\\r\\n\\r\\n/**\\r\\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\\r\\n * if value is a number.\\r\\n * Buffer.from(str[, encoding])\\r\\n * Buffer.from(array)\\r\\n * Buffer.from(buffer)\\r\\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\\r\\n **/\\r\\nBuffer.from = function (value, encodingOrOffset, length) {\\r\\n  return from(value, encodingOrOffset, length)\\r\\n}\\r\\n\\r\\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\\r\\n// https://github.com/feross/buffer/pull/148\\r\\nBuffer.prototype.__proto__ = Uint8Array.prototype\\r\\nBuffer.__proto__ = Uint8Array\\r\\n\\r\\nfunction assertSize (size) {\\r\\n  if (typeof size !== 'number') {\\r\\n    throw new TypeError('\\\"size\\\" argument must be of type number')\\r\\n  } else if (size < 0) {\\r\\n    throw new RangeError('The value \\\"' + size + '\\\" is invalid for option \\\"size\\\"')\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction alloc (size, fill, encoding) {\\r\\n  assertSize(size)\\r\\n  if (size <= 0) {\\r\\n    return createBuffer(size)\\r\\n  }\\r\\n  if (fill !== undefined) {\\r\\n    // Only pay attention to encoding if it's a string. This\\r\\n    // prevents accidentally sending in a number that would\\r\\n    // be interpretted as a start offset.\\r\\n    return typeof encoding === 'string'\\r\\n      ? createBuffer(size).fill(fill, encoding)\\r\\n      : createBuffer(size).fill(fill)\\r\\n  }\\r\\n  return createBuffer(size)\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new filled Buffer instance.\\r\\n * alloc(size[, fill[, encoding]])\\r\\n **/\\r\\nBuffer.alloc = function (size, fill, encoding) {\\r\\n  return alloc(size, fill, encoding)\\r\\n}\\r\\n\\r\\nfunction allocUnsafe (size) {\\r\\n  assertSize(size)\\r\\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\\r\\n}\\r\\n\\r\\n/**\\r\\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\\r\\n * */\\r\\nBuffer.allocUnsafe = function (size) {\\r\\n  return allocUnsafe(size)\\r\\n}\\r\\n/**\\r\\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\\r\\n */\\r\\nBuffer.allocUnsafeSlow = function (size) {\\r\\n  return allocUnsafe(size)\\r\\n}\\r\\n\\r\\nfunction fromString (string, encoding) {\\r\\n  if (typeof encoding !== 'string' || encoding === '') {\\r\\n    encoding = 'utf8'\\r\\n  }\\r\\n\\r\\n  if (!Buffer.isEncoding(encoding)) {\\r\\n    throw new TypeError('Unknown encoding: ' + encoding)\\r\\n  }\\r\\n\\r\\n  var length = byteLength(string, encoding) | 0\\r\\n  var buf = createBuffer(length)\\r\\n\\r\\n  var actual = buf.write(string, encoding)\\r\\n\\r\\n  if (actual !== length) {\\r\\n    // Writing a hex string, for example, that contains invalid characters will\\r\\n    // cause everything after the first invalid character to be ignored. (e.g.\\r\\n    // 'abxxcd' will be treated as 'ab')\\r\\n    buf = buf.slice(0, actual)\\r\\n  }\\r\\n\\r\\n  return buf\\r\\n}\\r\\n\\r\\nfunction fromArrayLike (array) {\\r\\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\\r\\n  var buf = createBuffer(length)\\r\\n  for (var i = 0; i < length; i += 1) {\\r\\n    buf[i] = array[i] & 255\\r\\n  }\\r\\n  return buf\\r\\n}\\r\\n\\r\\nfunction fromArrayBuffer (array, byteOffset, length) {\\r\\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\\r\\n    throw new RangeError('\\\"offset\\\" is outside of buffer bounds')\\r\\n  }\\r\\n\\r\\n  if (array.byteLength < byteOffset + (length || 0)) {\\r\\n    throw new RangeError('\\\"length\\\" is outside of buffer bounds')\\r\\n  }\\r\\n\\r\\n  var buf\\r\\n  if (byteOffset === undefined && length === undefined) {\\r\\n    buf = new Uint8Array(array)\\r\\n  } else if (length === undefined) {\\r\\n    buf = new Uint8Array(array, byteOffset)\\r\\n  } else {\\r\\n    buf = new Uint8Array(array, byteOffset, length)\\r\\n  }\\r\\n\\r\\n  // Return an augmented `Uint8Array` instance\\r\\n  buf.__proto__ = Buffer.prototype\\r\\n  return buf\\r\\n}\\r\\n\\r\\nfunction fromObject (obj) {\\r\\n  if (Buffer.isBuffer(obj)) {\\r\\n    var len = checked(obj.length) | 0\\r\\n    var buf = createBuffer(len)\\r\\n\\r\\n    if (buf.length === 0) {\\r\\n      return buf\\r\\n    }\\r\\n\\r\\n    obj.copy(buf, 0, 0, len)\\r\\n    return buf\\r\\n  }\\r\\n\\r\\n  if (obj.length !== undefined) {\\r\\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\\r\\n      return createBuffer(0)\\r\\n    }\\r\\n    return fromArrayLike(obj)\\r\\n  }\\r\\n\\r\\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\\r\\n    return fromArrayLike(obj.data)\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction checked (length) {\\r\\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\\r\\n  // length is NaN (which is otherwise coerced to zero.)\\r\\n  if (length >= K_MAX_LENGTH) {\\r\\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\\r\\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\\r\\n  }\\r\\n  return length | 0\\r\\n}\\r\\n\\r\\nfunction SlowBuffer (length) {\\r\\n  if (+length != length) { // eslint-disable-line eqeqeq\\r\\n    length = 0\\r\\n  }\\r\\n  return Buffer.alloc(+length)\\r\\n}\\r\\n\\r\\nBuffer.isBuffer = function isBuffer (b) {\\r\\n  return b != null && b._isBuffer === true &&\\r\\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\\r\\n}\\r\\n\\r\\nBuffer.compare = function compare (a, b) {\\r\\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\\r\\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\\r\\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\\r\\n    throw new TypeError(\\r\\n      'The \\\"buf1\\\", \\\"buf2\\\" arguments must be one of type Buffer or Uint8Array'\\r\\n    )\\r\\n  }\\r\\n\\r\\n  if (a === b) return 0\\r\\n\\r\\n  var x = a.length\\r\\n  var y = b.length\\r\\n\\r\\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\\r\\n    if (a[i] !== b[i]) {\\r\\n      x = a[i]\\r\\n      y = b[i]\\r\\n      break\\r\\n    }\\r\\n  }\\r\\n\\r\\n  if (x < y) return -1\\r\\n  if (y < x) return 1\\r\\n  return 0\\r\\n}\\r\\n\\r\\nBuffer.isEncoding = function isEncoding (encoding) {\\r\\n  switch (String(encoding).toLowerCase()) {\\r\\n    case 'hex':\\r\\n    case 'utf8':\\r\\n    case 'utf-8':\\r\\n    case 'ascii':\\r\\n    case 'latin1':\\r\\n    case 'binary':\\r\\n    case 'base64':\\r\\n    case 'ucs2':\\r\\n    case 'ucs-2':\\r\\n    case 'utf16le':\\r\\n    case 'utf-16le':\\r\\n      return true\\r\\n    default:\\r\\n      return false\\r\\n  }\\r\\n}\\r\\n\\r\\nBuffer.concat = function concat (list, length) {\\r\\n  if (!Array.isArray(list)) {\\r\\n    throw new TypeError('\\\"list\\\" argument must be an Array of Buffers')\\r\\n  }\\r\\n\\r\\n  if (list.length === 0) {\\r\\n    return Buffer.alloc(0)\\r\\n  }\\r\\n\\r\\n  var i\\r\\n  if (length === undefined) {\\r\\n    length = 0\\r\\n    for (i = 0; i < list.length; ++i) {\\r\\n      length += list[i].length\\r\\n    }\\r\\n  }\\r\\n\\r\\n  var buffer = Buffer.allocUnsafe(length)\\r\\n  var pos = 0\\r\\n  for (i = 0; i < list.length; ++i) {\\r\\n    var buf = list[i]\\r\\n    if (isInstance(buf, Uint8Array)) {\\r\\n      buf = Buffer.from(buf)\\r\\n    }\\r\\n    if (!Buffer.isBuffer(buf)) {\\r\\n      throw new TypeError('\\\"list\\\" argument must be an Array of Buffers')\\r\\n    }\\r\\n    buf.copy(buffer, pos)\\r\\n    pos += buf.length\\r\\n  }\\r\\n  return buffer\\r\\n}\\r\\n\\r\\nfunction byteLength (string, encoding) {\\r\\n  if (Buffer.isBuffer(string)) {\\r\\n    return string.length\\r\\n  }\\r\\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\\r\\n    return string.byteLength\\r\\n  }\\r\\n  if (typeof string !== 'string') {\\r\\n    throw new TypeError(\\r\\n      'The \\\"string\\\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\\r\\n      'Received type ' + typeof string\\r\\n    )\\r\\n  }\\r\\n\\r\\n  var len = string.length\\r\\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\\r\\n  if (!mustMatch && len === 0) return 0\\r\\n\\r\\n  // Use a for loop to avoid recursion\\r\\n  var loweredCase = false\\r\\n  for (;;) {\\r\\n    switch (encoding) {\\r\\n      case 'ascii':\\r\\n      case 'latin1':\\r\\n      case 'binary':\\r\\n        return len\\r\\n      case 'utf8':\\r\\n      case 'utf-8':\\r\\n        return utf8ToBytes(string).length\\r\\n      case 'ucs2':\\r\\n      case 'ucs-2':\\r\\n      case 'utf16le':\\r\\n      case 'utf-16le':\\r\\n        return len * 2\\r\\n      case 'hex':\\r\\n        return len >>> 1\\r\\n      case 'base64':\\r\\n        return base64ToBytes(string).length\\r\\n      default:\\r\\n        if (loweredCase) {\\r\\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\\r\\n        }\\r\\n        encoding = ('' + encoding).toLowerCase()\\r\\n        loweredCase = true\\r\\n    }\\r\\n  }\\r\\n}\\r\\nBuffer.byteLength = byteLength\\r\\n\\r\\nfunction slowToString (encoding, start, end) {\\r\\n  var loweredCase = false\\r\\n\\r\\n  // No need to verify that \\\"this.length <= MAX_UINT32\\\" since it's a read-only\\r\\n  // property of a typed array.\\r\\n\\r\\n  // This behaves neither like String nor Uint8Array in that we set start/end\\r\\n  // to their upper/lower bounds if the value passed is out of range.\\r\\n  // undefined is handled specially as per ECMA-262 6th Edition,\\r\\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\\r\\n  if (start === undefined || start < 0) {\\r\\n    start = 0\\r\\n  }\\r\\n  // Return early if start > this.length. Done here to prevent potential uint32\\r\\n  // coercion fail below.\\r\\n  if (start > this.length) {\\r\\n    return ''\\r\\n  }\\r\\n\\r\\n  if (end === undefined || end > this.length) {\\r\\n    end = this.length\\r\\n  }\\r\\n\\r\\n  if (end <= 0) {\\r\\n    return ''\\r\\n  }\\r\\n\\r\\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\\r\\n  end >>>= 0\\r\\n  start >>>= 0\\r\\n\\r\\n  if (end <= start) {\\r\\n    return ''\\r\\n  }\\r\\n\\r\\n  if (!encoding) encoding = 'utf8'\\r\\n\\r\\n  while (true) {\\r\\n    switch (encoding) {\\r\\n      case 'hex':\\r\\n        return hexSlice(this, start, end)\\r\\n\\r\\n      case 'utf8':\\r\\n      case 'utf-8':\\r\\n        return utf8Slice(this, start, end)\\r\\n\\r\\n      case 'ascii':\\r\\n        return asciiSlice(this, start, end)\\r\\n\\r\\n      case 'latin1':\\r\\n      case 'binary':\\r\\n        return latin1Slice(this, start, end)\\r\\n\\r\\n      case 'base64':\\r\\n        return base64Slice(this, start, end)\\r\\n\\r\\n      case 'ucs2':\\r\\n      case 'ucs-2':\\r\\n      case 'utf16le':\\r\\n      case 'utf-16le':\\r\\n        return utf16leSlice(this, start, end)\\r\\n\\r\\n      default:\\r\\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\\r\\n        encoding = (encoding + '').toLowerCase()\\r\\n        loweredCase = true\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\\r\\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\\r\\n// reliably in a browserify context because there could be multiple different\\r\\n// copies of the 'buffer' package in use. This method works even for Buffer\\r\\n// instances that were created from another copy of the `buffer` package.\\r\\n// See: https://github.com/feross/buffer/issues/154\\r\\nBuffer.prototype._isBuffer = true\\r\\n\\r\\nfunction swap (b, n, m) {\\r\\n  var i = b[n]\\r\\n  b[n] = b[m]\\r\\n  b[m] = i\\r\\n}\\r\\n\\r\\nBuffer.prototype.swap16 = function swap16 () {\\r\\n  var len = this.length\\r\\n  if (len % 2 !== 0) {\\r\\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\\r\\n  }\\r\\n  for (var i = 0; i < len; i += 2) {\\r\\n    swap(this, i, i + 1)\\r\\n  }\\r\\n  return this\\r\\n}\\r\\n\\r\\nBuffer.prototype.swap32 = function swap32 () {\\r\\n  var len = this.length\\r\\n  if (len % 4 !== 0) {\\r\\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\\r\\n  }\\r\\n  for (var i = 0; i < len; i += 4) {\\r\\n    swap(this, i, i + 3)\\r\\n    swap(this, i + 1, i + 2)\\r\\n  }\\r\\n  return this\\r\\n}\\r\\n\\r\\nBuffer.prototype.swap64 = function swap64 () {\\r\\n  var len = this.length\\r\\n  if (len % 8 !== 0) {\\r\\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\\r\\n  }\\r\\n  for (var i = 0; i < len; i += 8) {\\r\\n    swap(this, i, i + 7)\\r\\n    swap(this, i + 1, i + 6)\\r\\n    swap(this, i + 2, i + 5)\\r\\n    swap(this, i + 3, i + 4)\\r\\n  }\\r\\n  return this\\r\\n}\\r\\n\\r\\nBuffer.prototype.toString = function toString () {\\r\\n  var length = this.length\\r\\n  if (length === 0) return ''\\r\\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\\r\\n  return slowToString.apply(this, arguments)\\r\\n}\\r\\n\\r\\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\\r\\n\\r\\nBuffer.prototype.equals = function equals (b) {\\r\\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\\r\\n  if (this === b) return true\\r\\n  return Buffer.compare(this, b) === 0\\r\\n}\\r\\n\\r\\nBuffer.prototype.inspect = function inspect () {\\r\\n  var str = ''\\r\\n  var max = exports.INSPECT_MAX_BYTES\\r\\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\\r\\n  if (this.length > max) str += ' ... '\\r\\n  return '<Buffer ' + str + '>'\\r\\n}\\r\\n\\r\\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\\r\\n  if (isInstance(target, Uint8Array)) {\\r\\n    target = Buffer.from(target, target.offset, target.byteLength)\\r\\n  }\\r\\n  if (!Buffer.isBuffer(target)) {\\r\\n    throw new TypeError(\\r\\n      'The \\\"target\\\" argument must be one of type Buffer or Uint8Array. ' +\\r\\n      'Received type ' + (typeof target)\\r\\n    )\\r\\n  }\\r\\n\\r\\n  if (start === undefined) {\\r\\n    start = 0\\r\\n  }\\r\\n  if (end === undefined) {\\r\\n    end = target ? target.length : 0\\r\\n  }\\r\\n  if (thisStart === undefined) {\\r\\n    thisStart = 0\\r\\n  }\\r\\n  if (thisEnd === undefined) {\\r\\n    thisEnd = this.length\\r\\n  }\\r\\n\\r\\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\\r\\n    throw new RangeError('out of range index')\\r\\n  }\\r\\n\\r\\n  if (thisStart >= thisEnd && start >= end) {\\r\\n    return 0\\r\\n  }\\r\\n  if (thisStart >= thisEnd) {\\r\\n    return -1\\r\\n  }\\r\\n  if (start >= end) {\\r\\n    return 1\\r\\n  }\\r\\n\\r\\n  start >>>= 0\\r\\n  end >>>= 0\\r\\n  thisStart >>>= 0\\r\\n  thisEnd >>>= 0\\r\\n\\r\\n  if (this === target) return 0\\r\\n\\r\\n  var x = thisEnd - thisStart\\r\\n  var y = end - start\\r\\n  var len = Math.min(x, y)\\r\\n\\r\\n  var thisCopy = this.slice(thisStart, thisEnd)\\r\\n  var targetCopy = target.slice(start, end)\\r\\n\\r\\n  for (var i = 0; i < len; ++i) {\\r\\n    if (thisCopy[i] !== targetCopy[i]) {\\r\\n      x = thisCopy[i]\\r\\n      y = targetCopy[i]\\r\\n      break\\r\\n    }\\r\\n  }\\r\\n\\r\\n  if (x < y) return -1\\r\\n  if (y < x) return 1\\r\\n  return 0\\r\\n}\\r\\n\\r\\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\\r\\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\\r\\n//\\r\\n// Arguments:\\r\\n// - buffer - a Buffer to search\\r\\n// - val - a string, Buffer, or number\\r\\n// - byteOffset - an index into `buffer`; will be clamped to an int32\\r\\n// - encoding - an optional encoding, relevant is val is a string\\r\\n// - dir - true for indexOf, false for lastIndexOf\\r\\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\\r\\n  // Empty buffer means no match\\r\\n  if (buffer.length === 0) return -1\\r\\n\\r\\n  // Normalize byteOffset\\r\\n  if (typeof byteOffset === 'string') {\\r\\n    encoding = byteOffset\\r\\n    byteOffset = 0\\r\\n  } else if (byteOffset > 0x7fffffff) {\\r\\n    byteOffset = 0x7fffffff\\r\\n  } else if (byteOffset < -0x80000000) {\\r\\n    byteOffset = -0x80000000\\r\\n  }\\r\\n  byteOffset = +byteOffset // Coerce to Number.\\r\\n  if (numberIsNaN(byteOffset)) {\\r\\n    // byteOffset: it it's undefined, null, NaN, \\\"foo\\\", etc, search whole buffer\\r\\n    byteOffset = dir ? 0 : (buffer.length - 1)\\r\\n  }\\r\\n\\r\\n  // Normalize byteOffset: negative offsets start from the end of the buffer\\r\\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\\r\\n  if (byteOffset >= buffer.length) {\\r\\n    if (dir) return -1\\r\\n    else byteOffset = buffer.length - 1\\r\\n  } else if (byteOffset < 0) {\\r\\n    if (dir) byteOffset = 0\\r\\n    else return -1\\r\\n  }\\r\\n\\r\\n  // Normalize val\\r\\n  if (typeof val === 'string') {\\r\\n    val = Buffer.from(val, encoding)\\r\\n  }\\r\\n\\r\\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\\r\\n  if (Buffer.isBuffer(val)) {\\r\\n    // Special case: looking for empty string/buffer always fails\\r\\n    if (val.length === 0) {\\r\\n      return -1\\r\\n    }\\r\\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\\r\\n  } else if (typeof val === 'number') {\\r\\n    val = val & 0xFF // Search for a byte value [0-255]\\r\\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\\r\\n      if (dir) {\\r\\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\\r\\n      } else {\\r\\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\\r\\n      }\\r\\n    }\\r\\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\\r\\n  }\\r\\n\\r\\n  throw new TypeError('val must be string, number or Buffer')\\r\\n}\\r\\n\\r\\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\\r\\n  var indexSize = 1\\r\\n  var arrLength = arr.length\\r\\n  var valLength = val.length\\r\\n\\r\\n  if (encoding !== undefined) {\\r\\n    encoding = String(encoding).toLowerCase()\\r\\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\\r\\n        encoding === 'utf16le' || encoding === 'utf-16le') {\\r\\n      if (arr.length < 2 || val.length < 2) {\\r\\n        return -1\\r\\n      }\\r\\n      indexSize = 2\\r\\n      arrLength /= 2\\r\\n      valLength /= 2\\r\\n      byteOffset /= 2\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function read (buf, i) {\\r\\n    if (indexSize === 1) {\\r\\n      return buf[i]\\r\\n    } else {\\r\\n      return buf.readUInt16BE(i * indexSize)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  var i\\r\\n  if (dir) {\\r\\n    var foundIndex = -1\\r\\n    for (i = byteOffset; i < arrLength; i++) {\\r\\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\\r\\n        if (foundIndex === -1) foundIndex = i\\r\\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\\r\\n      } else {\\r\\n        if (foundIndex !== -1) i -= i - foundIndex\\r\\n        foundIndex = -1\\r\\n      }\\r\\n    }\\r\\n  } else {\\r\\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\\r\\n    for (i = byteOffset; i >= 0; i--) {\\r\\n      var found = true\\r\\n      for (var j = 0; j < valLength; j++) {\\r\\n        if (read(arr, i + j) !== read(val, j)) {\\r\\n          found = false\\r\\n          break\\r\\n        }\\r\\n      }\\r\\n      if (found) return i\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return -1\\r\\n}\\r\\n\\r\\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\\r\\n  return this.indexOf(val, byteOffset, encoding) !== -1\\r\\n}\\r\\n\\r\\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\\r\\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\\r\\n}\\r\\n\\r\\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\\r\\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\\r\\n}\\r\\n\\r\\nfunction hexWrite (buf, string, offset, length) {\\r\\n  offset = Number(offset) || 0\\r\\n  var remaining = buf.length - offset\\r\\n  if (!length) {\\r\\n    length = remaining\\r\\n  } else {\\r\\n    length = Number(length)\\r\\n    if (length > remaining) {\\r\\n      length = remaining\\r\\n    }\\r\\n  }\\r\\n\\r\\n  var strLen = string.length\\r\\n\\r\\n  if (length > strLen / 2) {\\r\\n    length = strLen / 2\\r\\n  }\\r\\n  for (var i = 0; i < length; ++i) {\\r\\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\\r\\n    if (numberIsNaN(parsed)) return i\\r\\n    buf[offset + i] = parsed\\r\\n  }\\r\\n  return i\\r\\n}\\r\\n\\r\\nfunction utf8Write (buf, string, offset, length) {\\r\\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\\r\\n}\\r\\n\\r\\nfunction asciiWrite (buf, string, offset, length) {\\r\\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\\r\\n}\\r\\n\\r\\nfunction latin1Write (buf, string, offset, length) {\\r\\n  return asciiWrite(buf, string, offset, length)\\r\\n}\\r\\n\\r\\nfunction base64Write (buf, string, offset, length) {\\r\\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\\r\\n}\\r\\n\\r\\nfunction ucs2Write (buf, string, offset, length) {\\r\\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\\r\\n}\\r\\n\\r\\nBuffer.prototype.write = function write (string, offset, length, encoding) {\\r\\n  // Buffer#write(string)\\r\\n  if (offset === undefined) {\\r\\n    encoding = 'utf8'\\r\\n    length = this.length\\r\\n    offset = 0\\r\\n  // Buffer#write(string, encoding)\\r\\n  } else if (length === undefined && typeof offset === 'string') {\\r\\n    encoding = offset\\r\\n    length = this.length\\r\\n    offset = 0\\r\\n  // Buffer#write(string, offset[, length][, encoding])\\r\\n  } else if (isFinite(offset)) {\\r\\n    offset = offset >>> 0\\r\\n    if (isFinite(length)) {\\r\\n      length = length >>> 0\\r\\n      if (encoding === undefined) encoding = 'utf8'\\r\\n    } else {\\r\\n      encoding = length\\r\\n      length = undefined\\r\\n    }\\r\\n  } else {\\r\\n    throw new Error(\\r\\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\\r\\n    )\\r\\n  }\\r\\n\\r\\n  var remaining = this.length - offset\\r\\n  if (length === undefined || length > remaining) length = remaining\\r\\n\\r\\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\\r\\n    throw new RangeError('Attempt to write outside buffer bounds')\\r\\n  }\\r\\n\\r\\n  if (!encoding) encoding = 'utf8'\\r\\n\\r\\n  var loweredCase = false\\r\\n  for (;;) {\\r\\n    switch (encoding) {\\r\\n      case 'hex':\\r\\n        return hexWrite(this, string, offset, length)\\r\\n\\r\\n      case 'utf8':\\r\\n      case 'utf-8':\\r\\n        return utf8Write(this, string, offset, length)\\r\\n\\r\\n      case 'ascii':\\r\\n        return asciiWrite(this, string, offset, length)\\r\\n\\r\\n      case 'latin1':\\r\\n      case 'binary':\\r\\n        return latin1Write(this, string, offset, length)\\r\\n\\r\\n      case 'base64':\\r\\n        // Warning: maxLength not taken into account in base64Write\\r\\n        return base64Write(this, string, offset, length)\\r\\n\\r\\n      case 'ucs2':\\r\\n      case 'ucs-2':\\r\\n      case 'utf16le':\\r\\n      case 'utf-16le':\\r\\n        return ucs2Write(this, string, offset, length)\\r\\n\\r\\n      default:\\r\\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\\r\\n        encoding = ('' + encoding).toLowerCase()\\r\\n        loweredCase = true\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\nBuffer.prototype.toJSON = function toJSON () {\\r\\n  return {\\r\\n    type: 'Buffer',\\r\\n    data: Array.prototype.slice.call(this._arr || this, 0)\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction base64Slice (buf, start, end) {\\r\\n  if (start === 0 && end === buf.length) {\\r\\n    return base64.fromByteArray(buf)\\r\\n  } else {\\r\\n    return base64.fromByteArray(buf.slice(start, end))\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction utf8Slice (buf, start, end) {\\r\\n  end = Math.min(buf.length, end)\\r\\n  var res = []\\r\\n\\r\\n  var i = start\\r\\n  while (i < end) {\\r\\n    var firstByte = buf[i]\\r\\n    var codePoint = null\\r\\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\\r\\n      : (firstByte > 0xDF) ? 3\\r\\n        : (firstByte > 0xBF) ? 2\\r\\n          : 1\\r\\n\\r\\n    if (i + bytesPerSequence <= end) {\\r\\n      var secondByte, thirdByte, fourthByte, tempCodePoint\\r\\n\\r\\n      switch (bytesPerSequence) {\\r\\n        case 1:\\r\\n          if (firstByte < 0x80) {\\r\\n            codePoint = firstByte\\r\\n          }\\r\\n          break\\r\\n        case 2:\\r\\n          secondByte = buf[i + 1]\\r\\n          if ((secondByte & 0xC0) === 0x80) {\\r\\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\\r\\n            if (tempCodePoint > 0x7F) {\\r\\n              codePoint = tempCodePoint\\r\\n            }\\r\\n          }\\r\\n          break\\r\\n        case 3:\\r\\n          secondByte = buf[i + 1]\\r\\n          thirdByte = buf[i + 2]\\r\\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\\r\\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\\r\\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\\r\\n              codePoint = tempCodePoint\\r\\n            }\\r\\n          }\\r\\n          break\\r\\n        case 4:\\r\\n          secondByte = buf[i + 1]\\r\\n          thirdByte = buf[i + 2]\\r\\n          fourthByte = buf[i + 3]\\r\\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\\r\\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\\r\\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\\r\\n              codePoint = tempCodePoint\\r\\n            }\\r\\n          }\\r\\n      }\\r\\n    }\\r\\n\\r\\n    if (codePoint === null) {\\r\\n      // we did not generate a valid codePoint so insert a\\r\\n      // replacement char (U+FFFD) and advance only 1 byte\\r\\n      codePoint = 0xFFFD\\r\\n      bytesPerSequence = 1\\r\\n    } else if (codePoint > 0xFFFF) {\\r\\n      // encode to utf16 (surrogate pair dance)\\r\\n      codePoint -= 0x10000\\r\\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\\r\\n      codePoint = 0xDC00 | codePoint & 0x3FF\\r\\n    }\\r\\n\\r\\n    res.push(codePoint)\\r\\n    i += bytesPerSequence\\r\\n  }\\r\\n\\r\\n  return decodeCodePointsArray(res)\\r\\n}\\r\\n\\r\\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\\r\\n// the lowest limit is Chrome, with 0x10000 args.\\r\\n// We go 1 magnitude less, for safety\\r\\nvar MAX_ARGUMENTS_LENGTH = 0x1000\\r\\n\\r\\nfunction decodeCodePointsArray (codePoints) {\\r\\n  var len = codePoints.length\\r\\n  if (len <= MAX_ARGUMENTS_LENGTH) {\\r\\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\\r\\n  }\\r\\n\\r\\n  // Decode in chunks to avoid \\\"call stack size exceeded\\\".\\r\\n  var res = ''\\r\\n  var i = 0\\r\\n  while (i < len) {\\r\\n    res += String.fromCharCode.apply(\\r\\n      String,\\r\\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\\r\\n    )\\r\\n  }\\r\\n  return res\\r\\n}\\r\\n\\r\\nfunction asciiSlice (buf, start, end) {\\r\\n  var ret = ''\\r\\n  end = Math.min(buf.length, end)\\r\\n\\r\\n  for (var i = start; i < end; ++i) {\\r\\n    ret += String.fromCharCode(buf[i] & 0x7F)\\r\\n  }\\r\\n  return ret\\r\\n}\\r\\n\\r\\nfunction latin1Slice (buf, start, end) {\\r\\n  var ret = ''\\r\\n  end = Math.min(buf.length, end)\\r\\n\\r\\n  for (var i = start; i < end; ++i) {\\r\\n    ret += String.fromCharCode(buf[i])\\r\\n  }\\r\\n  return ret\\r\\n}\\r\\n\\r\\nfunction hexSlice (buf, start, end) {\\r\\n  var len = buf.length\\r\\n\\r\\n  if (!start || start < 0) start = 0\\r\\n  if (!end || end < 0 || end > len) end = len\\r\\n\\r\\n  var out = ''\\r\\n  for (var i = start; i < end; ++i) {\\r\\n    out += toHex(buf[i])\\r\\n  }\\r\\n  return out\\r\\n}\\r\\n\\r\\nfunction utf16leSlice (buf, start, end) {\\r\\n  var bytes = buf.slice(start, end)\\r\\n  var res = ''\\r\\n  for (var i = 0; i < bytes.length; i += 2) {\\r\\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\\r\\n  }\\r\\n  return res\\r\\n}\\r\\n\\r\\nBuffer.prototype.slice = function slice (start, end) {\\r\\n  var len = this.length\\r\\n  start = ~~start\\r\\n  end = end === undefined ? len : ~~end\\r\\n\\r\\n  if (start < 0) {\\r\\n    start += len\\r\\n    if (start < 0) start = 0\\r\\n  } else if (start > len) {\\r\\n    start = len\\r\\n  }\\r\\n\\r\\n  if (end < 0) {\\r\\n    end += len\\r\\n    if (end < 0) end = 0\\r\\n  } else if (end > len) {\\r\\n    end = len\\r\\n  }\\r\\n\\r\\n  if (end < start) end = start\\r\\n\\r\\n  var newBuf = this.subarray(start, end)\\r\\n  // Return an augmented `Uint8Array` instance\\r\\n  newBuf.__proto__ = Buffer.prototype\\r\\n  return newBuf\\r\\n}\\r\\n\\r\\n/*\\r\\n * Need to make sure that buffer isn't trying to write out of bounds.\\r\\n */\\r\\nfunction checkOffset (offset, ext, length) {\\r\\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\\r\\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  byteLength = byteLength >>> 0\\r\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\r\\n\\r\\n  var val = this[offset]\\r\\n  var mul = 1\\r\\n  var i = 0\\r\\n  while (++i < byteLength && (mul *= 0x100)) {\\r\\n    val += this[offset + i] * mul\\r\\n  }\\r\\n\\r\\n  return val\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  byteLength = byteLength >>> 0\\r\\n  if (!noAssert) {\\r\\n    checkOffset(offset, byteLength, this.length)\\r\\n  }\\r\\n\\r\\n  var val = this[offset + --byteLength]\\r\\n  var mul = 1\\r\\n  while (byteLength > 0 && (mul *= 0x100)) {\\r\\n    val += this[offset + --byteLength] * mul\\r\\n  }\\r\\n\\r\\n  return val\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 1, this.length)\\r\\n  return this[offset]\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\r\\n  return this[offset] | (this[offset + 1] << 8)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\r\\n  return (this[offset] << 8) | this[offset + 1]\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\r\\n\\r\\n  return ((this[offset]) |\\r\\n      (this[offset + 1] << 8) |\\r\\n      (this[offset + 2] << 16)) +\\r\\n      (this[offset + 3] * 0x1000000)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\r\\n\\r\\n  return (this[offset] * 0x1000000) +\\r\\n    ((this[offset + 1] << 16) |\\r\\n    (this[offset + 2] << 8) |\\r\\n    this[offset + 3])\\r\\n}\\r\\n\\r\\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  byteLength = byteLength >>> 0\\r\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\r\\n\\r\\n  var val = this[offset]\\r\\n  var mul = 1\\r\\n  var i = 0\\r\\n  while (++i < byteLength && (mul *= 0x100)) {\\r\\n    val += this[offset + i] * mul\\r\\n  }\\r\\n  mul *= 0x80\\r\\n\\r\\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\\r\\n\\r\\n  return val\\r\\n}\\r\\n\\r\\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  byteLength = byteLength >>> 0\\r\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\r\\n\\r\\n  var i = byteLength\\r\\n  var mul = 1\\r\\n  var val = this[offset + --i]\\r\\n  while (i > 0 && (mul *= 0x100)) {\\r\\n    val += this[offset + --i] * mul\\r\\n  }\\r\\n  mul *= 0x80\\r\\n\\r\\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\\r\\n\\r\\n  return val\\r\\n}\\r\\n\\r\\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 1, this.length)\\r\\n  if (!(this[offset] & 0x80)) return (this[offset])\\r\\n  return ((0xff - this[offset] + 1) * -1)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\r\\n  var val = this[offset] | (this[offset + 1] << 8)\\r\\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\\r\\n}\\r\\n\\r\\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\r\\n  var val = this[offset + 1] | (this[offset] << 8)\\r\\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\\r\\n}\\r\\n\\r\\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\r\\n\\r\\n  return (this[offset]) |\\r\\n    (this[offset + 1] << 8) |\\r\\n    (this[offset + 2] << 16) |\\r\\n    (this[offset + 3] << 24)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\r\\n\\r\\n  return (this[offset] << 24) |\\r\\n    (this[offset + 1] << 16) |\\r\\n    (this[offset + 2] << 8) |\\r\\n    (this[offset + 3])\\r\\n}\\r\\n\\r\\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\r\\n  return ieee754.read(this, offset, true, 23, 4)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\r\\n  return ieee754.read(this, offset, false, 23, 4)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 8, this.length)\\r\\n  return ieee754.read(this, offset, true, 52, 8)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 8, this.length)\\r\\n  return ieee754.read(this, offset, false, 52, 8)\\r\\n}\\r\\n\\r\\nfunction checkInt (buf, value, offset, ext, max, min) {\\r\\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\\\"buffer\\\" argument must be a Buffer instance')\\r\\n  if (value > max || value < min) throw new RangeError('\\\"value\\\" argument is out of bounds')\\r\\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  byteLength = byteLength >>> 0\\r\\n  if (!noAssert) {\\r\\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\\r\\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\\r\\n  }\\r\\n\\r\\n  var mul = 1\\r\\n  var i = 0\\r\\n  this[offset] = value & 0xFF\\r\\n  while (++i < byteLength && (mul *= 0x100)) {\\r\\n    this[offset + i] = (value / mul) & 0xFF\\r\\n  }\\r\\n\\r\\n  return offset + byteLength\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  byteLength = byteLength >>> 0\\r\\n  if (!noAssert) {\\r\\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\\r\\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\\r\\n  }\\r\\n\\r\\n  var i = byteLength - 1\\r\\n  var mul = 1\\r\\n  this[offset + i] = value & 0xFF\\r\\n  while (--i >= 0 && (mul *= 0x100)) {\\r\\n    this[offset + i] = (value / mul) & 0xFF\\r\\n  }\\r\\n\\r\\n  return offset + byteLength\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\\r\\n  this[offset] = (value & 0xff)\\r\\n  return offset + 1\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\\r\\n  this[offset] = (value & 0xff)\\r\\n  this[offset + 1] = (value >>> 8)\\r\\n  return offset + 2\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\\r\\n  this[offset] = (value >>> 8)\\r\\n  this[offset + 1] = (value & 0xff)\\r\\n  return offset + 2\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\\r\\n  this[offset + 3] = (value >>> 24)\\r\\n  this[offset + 2] = (value >>> 16)\\r\\n  this[offset + 1] = (value >>> 8)\\r\\n  this[offset] = (value & 0xff)\\r\\n  return offset + 4\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\\r\\n  this[offset] = (value >>> 24)\\r\\n  this[offset + 1] = (value >>> 16)\\r\\n  this[offset + 2] = (value >>> 8)\\r\\n  this[offset + 3] = (value & 0xff)\\r\\n  return offset + 4\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) {\\r\\n    var limit = Math.pow(2, (8 * byteLength) - 1)\\r\\n\\r\\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\\r\\n  }\\r\\n\\r\\n  var i = 0\\r\\n  var mul = 1\\r\\n  var sub = 0\\r\\n  this[offset] = value & 0xFF\\r\\n  while (++i < byteLength && (mul *= 0x100)) {\\r\\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\\r\\n      sub = 1\\r\\n    }\\r\\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\\r\\n  }\\r\\n\\r\\n  return offset + byteLength\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) {\\r\\n    var limit = Math.pow(2, (8 * byteLength) - 1)\\r\\n\\r\\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\\r\\n  }\\r\\n\\r\\n  var i = byteLength - 1\\r\\n  var mul = 1\\r\\n  var sub = 0\\r\\n  this[offset + i] = value & 0xFF\\r\\n  while (--i >= 0 && (mul *= 0x100)) {\\r\\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\\r\\n      sub = 1\\r\\n    }\\r\\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\\r\\n  }\\r\\n\\r\\n  return offset + byteLength\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\\r\\n  if (value < 0) value = 0xff + value + 1\\r\\n  this[offset] = (value & 0xff)\\r\\n  return offset + 1\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\\r\\n  this[offset] = (value & 0xff)\\r\\n  this[offset + 1] = (value >>> 8)\\r\\n  return offset + 2\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\\r\\n  this[offset] = (value >>> 8)\\r\\n  this[offset + 1] = (value & 0xff)\\r\\n  return offset + 2\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\\r\\n  this[offset] = (value & 0xff)\\r\\n  this[offset + 1] = (value >>> 8)\\r\\n  this[offset + 2] = (value >>> 16)\\r\\n  this[offset + 3] = (value >>> 24)\\r\\n  return offset + 4\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\\r\\n  if (value < 0) value = 0xffffffff + value + 1\\r\\n  this[offset] = (value >>> 24)\\r\\n  this[offset + 1] = (value >>> 16)\\r\\n  this[offset + 2] = (value >>> 8)\\r\\n  this[offset + 3] = (value & 0xff)\\r\\n  return offset + 4\\r\\n}\\r\\n\\r\\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\\r\\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\\r\\n  if (offset < 0) throw new RangeError('Index out of range')\\r\\n}\\r\\n\\r\\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) {\\r\\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\\r\\n  }\\r\\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\\r\\n  return offset + 4\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\\r\\n  return writeFloat(this, value, offset, true, noAssert)\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\\r\\n  return writeFloat(this, value, offset, false, noAssert)\\r\\n}\\r\\n\\r\\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) {\\r\\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\\r\\n  }\\r\\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\\r\\n  return offset + 8\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\\r\\n  return writeDouble(this, value, offset, true, noAssert)\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\\r\\n  return writeDouble(this, value, offset, false, noAssert)\\r\\n}\\r\\n\\r\\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\\r\\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\\r\\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\\r\\n  if (!start) start = 0\\r\\n  if (!end && end !== 0) end = this.length\\r\\n  if (targetStart >= target.length) targetStart = target.length\\r\\n  if (!targetStart) targetStart = 0\\r\\n  if (end > 0 && end < start) end = start\\r\\n\\r\\n  // Copy 0 bytes; we're done\\r\\n  if (end === start) return 0\\r\\n  if (target.length === 0 || this.length === 0) return 0\\r\\n\\r\\n  // Fatal error conditions\\r\\n  if (targetStart < 0) {\\r\\n    throw new RangeError('targetStart out of bounds')\\r\\n  }\\r\\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\\r\\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\\r\\n\\r\\n  // Are we oob?\\r\\n  if (end > this.length) end = this.length\\r\\n  if (target.length - targetStart < end - start) {\\r\\n    end = target.length - targetStart + start\\r\\n  }\\r\\n\\r\\n  var len = end - start\\r\\n\\r\\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\\r\\n    // Use built-in when available, missing from IE11\\r\\n    this.copyWithin(targetStart, start, end)\\r\\n  } else if (this === target && start < targetStart && targetStart < end) {\\r\\n    // descending copy from end\\r\\n    for (var i = len - 1; i >= 0; --i) {\\r\\n      target[i + targetStart] = this[i + start]\\r\\n    }\\r\\n  } else {\\r\\n    Uint8Array.prototype.set.call(\\r\\n      target,\\r\\n      this.subarray(start, end),\\r\\n      targetStart\\r\\n    )\\r\\n  }\\r\\n\\r\\n  return len\\r\\n}\\r\\n\\r\\n// Usage:\\r\\n//    buffer.fill(number[, offset[, end]])\\r\\n//    buffer.fill(buffer[, offset[, end]])\\r\\n//    buffer.fill(string[, offset[, end]][, encoding])\\r\\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\\r\\n  // Handle string cases:\\r\\n  if (typeof val === 'string') {\\r\\n    if (typeof start === 'string') {\\r\\n      encoding = start\\r\\n      start = 0\\r\\n      end = this.length\\r\\n    } else if (typeof end === 'string') {\\r\\n      encoding = end\\r\\n      end = this.length\\r\\n    }\\r\\n    if (encoding !== undefined && typeof encoding !== 'string') {\\r\\n      throw new TypeError('encoding must be a string')\\r\\n    }\\r\\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\\r\\n      throw new TypeError('Unknown encoding: ' + encoding)\\r\\n    }\\r\\n    if (val.length === 1) {\\r\\n      var code = val.charCodeAt(0)\\r\\n      if ((encoding === 'utf8' && code < 128) ||\\r\\n          encoding === 'latin1') {\\r\\n        // Fast path: If `val` fits into a single byte, use that numeric value.\\r\\n        val = code\\r\\n      }\\r\\n    }\\r\\n  } else if (typeof val === 'number') {\\r\\n    val = val & 255\\r\\n  }\\r\\n\\r\\n  // Invalid ranges are not set to a default, so can range check early.\\r\\n  if (start < 0 || this.length < start || this.length < end) {\\r\\n    throw new RangeError('Out of range index')\\r\\n  }\\r\\n\\r\\n  if (end <= start) {\\r\\n    return this\\r\\n  }\\r\\n\\r\\n  start = start >>> 0\\r\\n  end = end === undefined ? this.length : end >>> 0\\r\\n\\r\\n  if (!val) val = 0\\r\\n\\r\\n  var i\\r\\n  if (typeof val === 'number') {\\r\\n    for (i = start; i < end; ++i) {\\r\\n      this[i] = val\\r\\n    }\\r\\n  } else {\\r\\n    var bytes = Buffer.isBuffer(val)\\r\\n      ? val\\r\\n      : Buffer.from(val, encoding)\\r\\n    var len = bytes.length\\r\\n    if (len === 0) {\\r\\n      throw new TypeError('The value \\\"' + val +\\r\\n        '\\\" is invalid for argument \\\"value\\\"')\\r\\n    }\\r\\n    for (i = 0; i < end - start; ++i) {\\r\\n      this[i + start] = bytes[i % len]\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return this\\r\\n}\\r\\n\\r\\n// HELPER FUNCTIONS\\r\\n// ================\\r\\n\\r\\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\\r\\n\\r\\nfunction base64clean (str) {\\r\\n  // Node takes equal signs as end of the Base64 encoding\\r\\n  str = str.split('=')[0]\\r\\n  // Node strips out invalid characters like \\\\n and \\\\t from the string, base64-js does not\\r\\n  str = str.trim().replace(INVALID_BASE64_RE, '')\\r\\n  // Node converts strings with length < 2 to ''\\r\\n  if (str.length < 2) return ''\\r\\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\\r\\n  while (str.length % 4 !== 0) {\\r\\n    str = str + '='\\r\\n  }\\r\\n  return str\\r\\n}\\r\\n\\r\\nfunction toHex (n) {\\r\\n  if (n < 16) return '0' + n.toString(16)\\r\\n  return n.toString(16)\\r\\n}\\r\\n\\r\\nfunction utf8ToBytes (string, units) {\\r\\n  units = units || Infinity\\r\\n  var codePoint\\r\\n  var length = string.length\\r\\n  var leadSurrogate = null\\r\\n  var bytes = []\\r\\n\\r\\n  for (var i = 0; i < length; ++i) {\\r\\n    codePoint = string.charCodeAt(i)\\r\\n\\r\\n    // is surrogate component\\r\\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\\r\\n      // last char was a lead\\r\\n      if (!leadSurrogate) {\\r\\n        // no lead yet\\r\\n        if (codePoint > 0xDBFF) {\\r\\n          // unexpected trail\\r\\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\r\\n          continue\\r\\n        } else if (i + 1 === length) {\\r\\n          // unpaired lead\\r\\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\r\\n          continue\\r\\n        }\\r\\n\\r\\n        // valid lead\\r\\n        leadSurrogate = codePoint\\r\\n\\r\\n        continue\\r\\n      }\\r\\n\\r\\n      // 2 leads in a row\\r\\n      if (codePoint < 0xDC00) {\\r\\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\r\\n        leadSurrogate = codePoint\\r\\n        continue\\r\\n      }\\r\\n\\r\\n      // valid surrogate pair\\r\\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\\r\\n    } else if (leadSurrogate) {\\r\\n      // valid bmp char, but last char was a lead\\r\\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\r\\n    }\\r\\n\\r\\n    leadSurrogate = null\\r\\n\\r\\n    // encode utf8\\r\\n    if (codePoint < 0x80) {\\r\\n      if ((units -= 1) < 0) break\\r\\n      bytes.push(codePoint)\\r\\n    } else if (codePoint < 0x800) {\\r\\n      if ((units -= 2) < 0) break\\r\\n      bytes.push(\\r\\n        codePoint >> 0x6 | 0xC0,\\r\\n        codePoint & 0x3F | 0x80\\r\\n      )\\r\\n    } else if (codePoint < 0x10000) {\\r\\n      if ((units -= 3) < 0) break\\r\\n      bytes.push(\\r\\n        codePoint >> 0xC | 0xE0,\\r\\n        codePoint >> 0x6 & 0x3F | 0x80,\\r\\n        codePoint & 0x3F | 0x80\\r\\n      )\\r\\n    } else if (codePoint < 0x110000) {\\r\\n      if ((units -= 4) < 0) break\\r\\n      bytes.push(\\r\\n        codePoint >> 0x12 | 0xF0,\\r\\n        codePoint >> 0xC & 0x3F | 0x80,\\r\\n        codePoint >> 0x6 & 0x3F | 0x80,\\r\\n        codePoint & 0x3F | 0x80\\r\\n      )\\r\\n    } else {\\r\\n      throw new Error('Invalid code point')\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return bytes\\r\\n}\\r\\n\\r\\nfunction asciiToBytes (str) {\\r\\n  var byteArray = []\\r\\n  for (var i = 0; i < str.length; ++i) {\\r\\n    // Node's code seems to be doing this and not & 0x7F..\\r\\n    byteArray.push(str.charCodeAt(i) & 0xFF)\\r\\n  }\\r\\n  return byteArray\\r\\n}\\r\\n\\r\\nfunction utf16leToBytes (str, units) {\\r\\n  var c, hi, lo\\r\\n  var byteArray = []\\r\\n  for (var i = 0; i < str.length; ++i) {\\r\\n    if ((units -= 2) < 0) break\\r\\n\\r\\n    c = str.charCodeAt(i)\\r\\n    hi = c >> 8\\r\\n    lo = c % 256\\r\\n    byteArray.push(lo)\\r\\n    byteArray.push(hi)\\r\\n  }\\r\\n\\r\\n  return byteArray\\r\\n}\\r\\n\\r\\nfunction base64ToBytes (str) {\\r\\n  return base64.toByteArray(base64clean(str))\\r\\n}\\r\\n\\r\\nfunction blitBuffer (src, dst, offset, length) {\\r\\n  for (var i = 0; i < length; ++i) {\\r\\n    if ((i + offset >= dst.length) || (i >= src.length)) break\\r\\n    dst[i + offset] = src[i]\\r\\n  }\\r\\n  return i\\r\\n}\\r\\n\\r\\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\\r\\n// the `instanceof` check but they should be treated as of that type.\\r\\n// See: https://github.com/feross/buffer/issues/166\\r\\nfunction isInstance (obj, type) {\\r\\n  return obj instanceof type ||\\r\\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\\r\\n      obj.constructor.name === type.name)\\r\\n}\\r\\nfunction numberIsNaN (obj) {\\r\\n  // For IE11 support\\r\\n  return obj !== obj // eslint-disable-line no-self-compare\\r\\n}\\r\\n\\r\\n}).call(this,_dereq_(\\\"buffer\\\").Buffer)\\r\\n},{\\\"base64-js\\\":8,\\\"buffer\\\":9,\\\"ieee754\\\":12}],10:[function(_dereq_,module,exports){\\r\\n(function (Buffer){\\r\\nvar clone = (function() {\\r\\n'use strict';\\r\\n\\r\\nfunction _instanceof(obj, type) {\\r\\n  return type != null && obj instanceof type;\\r\\n}\\r\\n\\r\\nvar nativeMap;\\r\\ntry {\\r\\n  nativeMap = Map;\\r\\n} catch(_) {\\r\\n  // maybe a reference error because no `Map`. Give it a dummy value that no\\r\\n  // value will ever be an instanceof.\\r\\n  nativeMap = function() {};\\r\\n}\\r\\n\\r\\nvar nativeSet;\\r\\ntry {\\r\\n  nativeSet = Set;\\r\\n} catch(_) {\\r\\n  nativeSet = function() {};\\r\\n}\\r\\n\\r\\nvar nativePromise;\\r\\ntry {\\r\\n  nativePromise = Promise;\\r\\n} catch(_) {\\r\\n  nativePromise = function() {};\\r\\n}\\r\\n\\r\\n/**\\r\\n * Clones (copies) an Object using deep copying.\\r\\n *\\r\\n * This function supports circular references by default, but if you are certain\\r\\n * there are no circular references in your object, you can save some CPU time\\r\\n * by calling clone(obj, false).\\r\\n *\\r\\n * Caution: if `circular` is false and `parent` contains circular references,\\r\\n * your program may enter an infinite loop and crash.\\r\\n *\\r\\n * @param `parent` - the object to be cloned\\r\\n * @param `circular` - set to true if the object to be cloned may contain\\r\\n *    circular references. (optional - true by default)\\r\\n * @param `depth` - set to a number if the object is only to be cloned to\\r\\n *    a particular depth. (optional - defaults to Infinity)\\r\\n * @param `prototype` - sets the prototype to be used when cloning an object.\\r\\n *    (optional - defaults to parent prototype).\\r\\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\\r\\n *    should be cloned as well. Non-enumerable properties on the prototype\\r\\n *    chain will be ignored. (optional - false by default)\\r\\n*/\\r\\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\\r\\n  if (typeof circular === 'object') {\\r\\n    depth = circular.depth;\\r\\n    prototype = circular.prototype;\\r\\n    includeNonEnumerable = circular.includeNonEnumerable;\\r\\n    circular = circular.circular;\\r\\n  }\\r\\n  // maintain two arrays for circular references, where corresponding parents\\r\\n  // and children have the same index\\r\\n  var allParents = [];\\r\\n  var allChildren = [];\\r\\n\\r\\n  var useBuffer = typeof Buffer != 'undefined';\\r\\n\\r\\n  if (typeof circular == 'undefined')\\r\\n    circular = true;\\r\\n\\r\\n  if (typeof depth == 'undefined')\\r\\n    depth = Infinity;\\r\\n\\r\\n  // recurse this function so we don't reset allParents and allChildren\\r\\n  function _clone(parent, depth) {\\r\\n    // cloning null always returns null\\r\\n    if (parent === null)\\r\\n      return null;\\r\\n\\r\\n    if (depth === 0)\\r\\n      return parent;\\r\\n\\r\\n    var child;\\r\\n    var proto;\\r\\n    if (typeof parent != 'object') {\\r\\n      return parent;\\r\\n    }\\r\\n\\r\\n    if (_instanceof(parent, nativeMap)) {\\r\\n      child = new nativeMap();\\r\\n    } else if (_instanceof(parent, nativeSet)) {\\r\\n      child = new nativeSet();\\r\\n    } else if (_instanceof(parent, nativePromise)) {\\r\\n      child = new nativePromise(function (resolve, reject) {\\r\\n        parent.then(function(value) {\\r\\n          resolve(_clone(value, depth - 1));\\r\\n        }, function(err) {\\r\\n          reject(_clone(err, depth - 1));\\r\\n        });\\r\\n      });\\r\\n    } else if (clone.__isArray(parent)) {\\r\\n      child = [];\\r\\n    } else if (clone.__isRegExp(parent)) {\\r\\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\\r\\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\\r\\n    } else if (clone.__isDate(parent)) {\\r\\n      child = new Date(parent.getTime());\\r\\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\\r\\n      child = new Buffer(parent.length);\\r\\n      parent.copy(child);\\r\\n      return child;\\r\\n    } else if (_instanceof(parent, Error)) {\\r\\n      child = Object.create(parent);\\r\\n    } else {\\r\\n      if (typeof prototype == 'undefined') {\\r\\n        proto = Object.getPrototypeOf(parent);\\r\\n        child = Object.create(proto);\\r\\n      }\\r\\n      else {\\r\\n        child = Object.create(prototype);\\r\\n        proto = prototype;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    if (circular) {\\r\\n      var index = allParents.indexOf(parent);\\r\\n\\r\\n      if (index != -1) {\\r\\n        return allChildren[index];\\r\\n      }\\r\\n      allParents.push(parent);\\r\\n      allChildren.push(child);\\r\\n    }\\r\\n\\r\\n    if (_instanceof(parent, nativeMap)) {\\r\\n      parent.forEach(function(value, key) {\\r\\n        var keyChild = _clone(key, depth - 1);\\r\\n        var valueChild = _clone(value, depth - 1);\\r\\n        child.set(keyChild, valueChild);\\r\\n      });\\r\\n    }\\r\\n    if (_instanceof(parent, nativeSet)) {\\r\\n      parent.forEach(function(value) {\\r\\n        var entryChild = _clone(value, depth - 1);\\r\\n        child.add(entryChild);\\r\\n      });\\r\\n    }\\r\\n\\r\\n    for (var i in parent) {\\r\\n      var attrs;\\r\\n      if (proto) {\\r\\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\\r\\n      }\\r\\n\\r\\n      if (attrs && attrs.set == null) {\\r\\n        continue;\\r\\n      }\\r\\n      child[i] = _clone(parent[i], depth - 1);\\r\\n    }\\r\\n\\r\\n    if (Object.getOwnPropertySymbols) {\\r\\n      var symbols = Object.getOwnPropertySymbols(parent);\\r\\n      for (var i = 0; i < symbols.length; i++) {\\r\\n        // Don't need to worry about cloning a symbol because it is a primitive,\\r\\n        // like a number or string.\\r\\n        var symbol = symbols[i];\\r\\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\\r\\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\\r\\n          continue;\\r\\n        }\\r\\n        child[symbol] = _clone(parent[symbol], depth - 1);\\r\\n        if (!descriptor.enumerable) {\\r\\n          Object.defineProperty(child, symbol, {\\r\\n            enumerable: false\\r\\n          });\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n\\r\\n    if (includeNonEnumerable) {\\r\\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\\r\\n      for (var i = 0; i < allPropertyNames.length; i++) {\\r\\n        var propertyName = allPropertyNames[i];\\r\\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\\r\\n        if (descriptor && descriptor.enumerable) {\\r\\n          continue;\\r\\n        }\\r\\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\\r\\n        Object.defineProperty(child, propertyName, {\\r\\n          enumerable: false\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return child;\\r\\n  }\\r\\n\\r\\n  return _clone(parent, depth);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Simple flat clone using prototype, accepts only objects, usefull for property\\r\\n * override on FLAT configuration object (no nested props).\\r\\n *\\r\\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\\r\\n * works.\\r\\n */\\r\\nclone.clonePrototype = function clonePrototype(parent) {\\r\\n  if (parent === null)\\r\\n    return null;\\r\\n\\r\\n  var c = function () {};\\r\\n  c.prototype = parent;\\r\\n  return new c();\\r\\n};\\r\\n\\r\\n// private utility functions\\r\\n\\r\\nfunction __objToStr(o) {\\r\\n  return Object.prototype.toString.call(o);\\r\\n}\\r\\nclone.__objToStr = __objToStr;\\r\\n\\r\\nfunction __isDate(o) {\\r\\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\\r\\n}\\r\\nclone.__isDate = __isDate;\\r\\n\\r\\nfunction __isArray(o) {\\r\\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\\r\\n}\\r\\nclone.__isArray = __isArray;\\r\\n\\r\\nfunction __isRegExp(o) {\\r\\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\\r\\n}\\r\\nclone.__isRegExp = __isRegExp;\\r\\n\\r\\nfunction __getRegExpFlags(re) {\\r\\n  var flags = '';\\r\\n  if (re.global) flags += 'g';\\r\\n  if (re.ignoreCase) flags += 'i';\\r\\n  if (re.multiline) flags += 'm';\\r\\n  return flags;\\r\\n}\\r\\nclone.__getRegExpFlags = __getRegExpFlags;\\r\\n\\r\\nreturn clone;\\r\\n})();\\r\\n\\r\\nif (typeof module === 'object' && module.exports) {\\r\\n  module.exports = clone;\\r\\n}\\r\\n\\r\\n}).call(this,_dereq_(\\\"buffer\\\").Buffer)\\r\\n},{\\\"buffer\\\":9}],11:[function(_dereq_,module,exports){\\r\\n\\r\\n/**\\r\\n * Expose `Emitter`.\\r\\n */\\r\\n\\r\\nif (typeof module !== 'undefined') {\\r\\n  module.exports = Emitter;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Initialize a new `Emitter`.\\r\\n *\\r\\n * @api public\\r\\n */\\r\\n\\r\\nfunction Emitter(obj) {\\r\\n  if (obj) return mixin(obj);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Mixin the emitter properties.\\r\\n *\\r\\n * @param {Object} obj\\r\\n * @return {Object}\\r\\n * @api private\\r\\n */\\r\\n\\r\\nfunction mixin(obj) {\\r\\n  for (var key in Emitter.prototype) {\\r\\n    obj[key] = Emitter.prototype[key];\\r\\n  }\\r\\n  return obj;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Listen on the given `event` with `fn`.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\r\\n\\r\\nEmitter.prototype.on =\\r\\nEmitter.prototype.addEventListener = function(event, fn){\\r\\n  this._callbacks = this._callbacks || {};\\r\\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\\r\\n    .push(fn);\\r\\n  return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Adds an `event` listener that will be invoked a single\\r\\n * time then automatically removed.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\r\\n\\r\\nEmitter.prototype.once = function(event, fn){\\r\\n  function on() {\\r\\n    this.off(event, on);\\r\\n    fn.apply(this, arguments);\\r\\n  }\\r\\n\\r\\n  on.fn = fn;\\r\\n  this.on(event, on);\\r\\n  return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Remove the given callback for `event` or all\\r\\n * registered callbacks.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\r\\n\\r\\nEmitter.prototype.off =\\r\\nEmitter.prototype.removeListener =\\r\\nEmitter.prototype.removeAllListeners =\\r\\nEmitter.prototype.removeEventListener = function(event, fn){\\r\\n  this._callbacks = this._callbacks || {};\\r\\n\\r\\n  // all\\r\\n  if (0 == arguments.length) {\\r\\n    this._callbacks = {};\\r\\n    return this;\\r\\n  }\\r\\n\\r\\n  // specific event\\r\\n  var callbacks = this._callbacks['$' + event];\\r\\n  if (!callbacks) return this;\\r\\n\\r\\n  // remove all handlers\\r\\n  if (1 == arguments.length) {\\r\\n    delete this._callbacks['$' + event];\\r\\n    return this;\\r\\n  }\\r\\n\\r\\n  // remove specific handler\\r\\n  var cb;\\r\\n  for (var i = 0; i < callbacks.length; i++) {\\r\\n    cb = callbacks[i];\\r\\n    if (cb === fn || cb.fn === fn) {\\r\\n      callbacks.splice(i, 1);\\r\\n      break;\\r\\n    }\\r\\n  }\\r\\n  return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Emit `event` with the given args.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Mixed} ...\\r\\n * @return {Emitter}\\r\\n */\\r\\n\\r\\nEmitter.prototype.emit = function(event){\\r\\n  this._callbacks = this._callbacks || {};\\r\\n  var args = [].slice.call(arguments, 1)\\r\\n    , callbacks = this._callbacks['$' + event];\\r\\n\\r\\n  if (callbacks) {\\r\\n    callbacks = callbacks.slice(0);\\r\\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\\r\\n      callbacks[i].apply(this, args);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Return array of callbacks for `event`.\\r\\n *\\r\\n * @param {String} event\\r\\n * @return {Array}\\r\\n * @api public\\r\\n */\\r\\n\\r\\nEmitter.prototype.listeners = function(event){\\r\\n  this._callbacks = this._callbacks || {};\\r\\n  return this._callbacks['$' + event] || [];\\r\\n};\\r\\n\\r\\n/**\\r\\n * Check if this emitter has `event` handlers.\\r\\n *\\r\\n * @param {String} event\\r\\n * @return {Boolean}\\r\\n * @api public\\r\\n */\\r\\n\\r\\nEmitter.prototype.hasListeners = function(event){\\r\\n  return !! this.listeners(event).length;\\r\\n};\\r\\n\\r\\n},{}],12:[function(_dereq_,module,exports){\\r\\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\\r\\n  var e, m\\r\\n  var eLen = (nBytes * 8) - mLen - 1\\r\\n  var eMax = (1 << eLen) - 1\\r\\n  var eBias = eMax >> 1\\r\\n  var nBits = -7\\r\\n  var i = isLE ? (nBytes - 1) : 0\\r\\n  var d = isLE ? -1 : 1\\r\\n  var s = buffer[offset + i]\\r\\n\\r\\n  i += d\\r\\n\\r\\n  e = s & ((1 << (-nBits)) - 1)\\r\\n  s >>= (-nBits)\\r\\n  nBits += eLen\\r\\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\\r\\n\\r\\n  m = e & ((1 << (-nBits)) - 1)\\r\\n  e >>= (-nBits)\\r\\n  nBits += mLen\\r\\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\\r\\n\\r\\n  if (e === 0) {\\r\\n    e = 1 - eBias\\r\\n  } else if (e === eMax) {\\r\\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\\r\\n  } else {\\r\\n    m = m + Math.pow(2, mLen)\\r\\n    e = e - eBias\\r\\n  }\\r\\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\\r\\n}\\r\\n\\r\\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\\r\\n  var e, m, c\\r\\n  var eLen = (nBytes * 8) - mLen - 1\\r\\n  var eMax = (1 << eLen) - 1\\r\\n  var eBias = eMax >> 1\\r\\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\\r\\n  var i = isLE ? 0 : (nBytes - 1)\\r\\n  var d = isLE ? 1 : -1\\r\\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\\r\\n\\r\\n  value = Math.abs(value)\\r\\n\\r\\n  if (isNaN(value) || value === Infinity) {\\r\\n    m = isNaN(value) ? 1 : 0\\r\\n    e = eMax\\r\\n  } else {\\r\\n    e = Math.floor(Math.log(value) / Math.LN2)\\r\\n    if (value * (c = Math.pow(2, -e)) < 1) {\\r\\n      e--\\r\\n      c *= 2\\r\\n    }\\r\\n    if (e + eBias >= 1) {\\r\\n      value += rt / c\\r\\n    } else {\\r\\n      value += rt * Math.pow(2, 1 - eBias)\\r\\n    }\\r\\n    if (value * c >= 2) {\\r\\n      e++\\r\\n      c /= 2\\r\\n    }\\r\\n\\r\\n    if (e + eBias >= eMax) {\\r\\n      m = 0\\r\\n      e = eMax\\r\\n    } else if (e + eBias >= 1) {\\r\\n      m = ((value * c) - 1) * Math.pow(2, mLen)\\r\\n      e = e + eBias\\r\\n    } else {\\r\\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\\r\\n      e = 0\\r\\n    }\\r\\n  }\\r\\n\\r\\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\\r\\n\\r\\n  e = (e << mLen) | m\\r\\n  eLen += mLen\\r\\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\\r\\n\\r\\n  buffer[offset + i - d] |= s * 128\\r\\n}\\r\\n\\r\\n},{}],13:[function(_dereq_,module,exports){\\r\\n'use strict';\\r\\n\\r\\n/**\\r\\n * Constants.\\r\\n */\\r\\n\\r\\nvar errorMessage;\\r\\n\\r\\nerrorMessage = 'An argument without append, prepend, ' +\\r\\n    'or detach methods was given to `List';\\r\\n\\r\\n/**\\r\\n * Creates a new List: A linked list is a bit like an Array, but\\r\\n * knows nothing about how many items are in it, and knows only about its\\r\\n * first (`head`) and last (`tail`) items. Each item (e.g. `head`, `tail`,\\r\\n * &c.) knows which item comes before or after it (its more like the\\r\\n * implementation of the DOM in JavaScript).\\r\\n * @global\\r\\n * @private\\r\\n * @constructor\\r\\n * @class Represents an instance of List.\\r\\n */\\r\\n\\r\\nfunction List(/*items...*/) {\\r\\n    if (arguments.length) {\\r\\n        return List.from(arguments);\\r\\n    }\\r\\n}\\r\\n\\r\\nvar ListPrototype;\\r\\n\\r\\nListPrototype = List.prototype;\\r\\n\\r\\n/**\\r\\n * Creates a new list from the arguments (each a list item) passed in.\\r\\n * @name List.of\\r\\n * @param {...ListItem} [items] - Zero or more items to attach.\\r\\n * @returns {list} - A new instance of List.\\r\\n */\\r\\n\\r\\nList.of = function (/*items...*/) {\\r\\n    return List.from.call(this, arguments);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates a new list from the given array-like object (each a list item)\\r\\n * passed in.\\r\\n * @name List.from\\r\\n * @param {ListItem[]} [items] - The items to append.\\r\\n * @returns {list} - A new instance of List.\\r\\n */\\r\\nList.from = function (items) {\\r\\n    var list = new this(), length, iterator, item;\\r\\n\\r\\n    if (items && (length = items.length)) {\\r\\n        iterator = -1;\\r\\n\\r\\n        while (++iterator < length) {\\r\\n            item = items[iterator];\\r\\n\\r\\n            if (item !== null && item !== undefined) {\\r\\n                list.append(item);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return list;\\r\\n};\\r\\n\\r\\n/**\\r\\n * List#head\\r\\n * Default to `null`.\\r\\n */\\r\\nListPrototype.head = null;\\r\\n\\r\\n/**\\r\\n * List#tail\\r\\n * Default to `null`.\\r\\n */\\r\\nListPrototype.tail = null;\\r\\n\\r\\n/**\\r\\n * Returns the list's items as an array. This does *not* detach the items.\\r\\n * @name List#toArray\\r\\n * @returns {ListItem[]} - An array of (still attached) ListItems.\\r\\n */\\r\\nListPrototype.toArray = function () {\\r\\n    var item = this.head,\\r\\n        result = [];\\r\\n\\r\\n    while (item) {\\r\\n        result.push(item);\\r\\n        item = item.next;\\r\\n    }\\r\\n\\r\\n    return result;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Prepends the given item to the list: Item will be the new first item\\r\\n * (`head`).\\r\\n * @name List#prepend\\r\\n * @param {ListItem} item - The item to prepend.\\r\\n * @returns {ListItem} - An instance of ListItem (the given item).\\r\\n */\\r\\nListPrototype.prepend = function (item) {\\r\\n    if (!item) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    if (!item.append || !item.prepend || !item.detach) {\\r\\n        throw new Error(errorMessage + '#prepend`.');\\r\\n    }\\r\\n\\r\\n    var self, head;\\r\\n\\r\\n    // Cache self.\\r\\n    self = this;\\r\\n\\r\\n    // If self has a first item, defer prepend to the first items prepend\\r\\n    // method, and return the result.\\r\\n    head = self.head;\\r\\n\\r\\n    if (head) {\\r\\n        return head.prepend(item);\\r\\n    }\\r\\n\\r\\n    // ...otherwise, there is no `head` (or `tail`) item yet.\\r\\n\\r\\n    // Detach the prependee.\\r\\n    item.detach();\\r\\n\\r\\n    // Set the prependees parent list to reference self.\\r\\n    item.list = self;\\r\\n\\r\\n    // Set self's first item to the prependee, and return the item.\\r\\n    self.head = item;\\r\\n\\r\\n    return item;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Appends the given item to the list: Item will be the new last item (`tail`)\\r\\n * if the list had a first item, and its first item (`head`) otherwise.\\r\\n * @name List#append\\r\\n * @param {ListItem} item - The item to append.\\r\\n * @returns {ListItem} - An instance of ListItem (the given item).\\r\\n */\\r\\n\\r\\nListPrototype.append = function (item) {\\r\\n    if (!item) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    if (!item.append || !item.prepend || !item.detach) {\\r\\n        throw new Error(errorMessage + '#append`.');\\r\\n    }\\r\\n\\r\\n    var self, head, tail;\\r\\n\\r\\n    // Cache self.\\r\\n    self = this;\\r\\n\\r\\n    // If self has a last item, defer appending to the last items append\\r\\n    // method, and return the result.\\r\\n    tail = self.tail;\\r\\n\\r\\n    if (tail) {\\r\\n        return tail.append(item);\\r\\n    }\\r\\n\\r\\n    // If self has a first item, defer appending to the first items append\\r\\n    // method, and return the result.\\r\\n    head = self.head;\\r\\n\\r\\n    if (head) {\\r\\n        return head.append(item);\\r\\n    }\\r\\n\\r\\n    // ...otherwise, there is no `tail` or `head` item yet.\\r\\n\\r\\n    // Detach the appendee.\\r\\n    item.detach();\\r\\n\\r\\n    // Set the appendees parent list to reference self.\\r\\n    item.list = self;\\r\\n\\r\\n    // Set self's first item to the appendee, and return the item.\\r\\n    self.head = item;\\r\\n\\r\\n    return item;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Creates a new ListItem: A linked list item is a bit like DOM node:\\r\\n * It knows only about its \\\"parent\\\" (`list`), the item before it (`prev`),\\r\\n * and the item after it (`next`).\\r\\n * @global\\r\\n * @private\\r\\n * @constructor\\r\\n * @class Represents an instance of ListItem.\\r\\n */\\r\\n\\r\\nfunction ListItem() {}\\r\\n\\r\\nList.Item = ListItem;\\r\\n\\r\\nvar ListItemPrototype = ListItem.prototype;\\r\\n\\r\\nListItemPrototype.next = null;\\r\\n\\r\\nListItemPrototype.prev = null;\\r\\n\\r\\nListItemPrototype.list = null;\\r\\n\\r\\n/**\\r\\n * Detaches the item operated on from its parent list.\\r\\n * @name ListItem#detach\\r\\n * @returns {ListItem} - The item operated on.\\r\\n */\\r\\nListItemPrototype.detach = function () {\\r\\n    // Cache self, the parent list, and the previous and next items.\\r\\n    var self = this,\\r\\n        list = self.list,\\r\\n        prev = self.prev,\\r\\n        next = self.next;\\r\\n\\r\\n    // If the item is already detached, return self.\\r\\n    if (!list) {\\r\\n        return self;\\r\\n    }\\r\\n\\r\\n    // If self is the last item in the parent list, link the lists last item\\r\\n    // to the previous item.\\r\\n    if (list.tail === self) {\\r\\n        list.tail = prev;\\r\\n    }\\r\\n\\r\\n    // If self is the first item in the parent list, link the lists first item\\r\\n    // to the next item.\\r\\n    if (list.head === self) {\\r\\n        list.head = next;\\r\\n    }\\r\\n\\r\\n    // If both the last and first items in the parent list are the same,\\r\\n    // remove the link to the last item.\\r\\n    if (list.tail === list.head) {\\r\\n        list.tail = null;\\r\\n    }\\r\\n\\r\\n    // If a previous item exists, link its next item to selfs next item.\\r\\n    if (prev) {\\r\\n        prev.next = next;\\r\\n    }\\r\\n\\r\\n    // If a next item exists, link its previous item to selfs previous item.\\r\\n    if (next) {\\r\\n        next.prev = prev;\\r\\n    }\\r\\n\\r\\n    // Remove links from self to both the next and previous items, and to the\\r\\n    // parent list.\\r\\n    self.prev = self.next = self.list = null;\\r\\n\\r\\n    // Return self.\\r\\n    return self;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Prepends the given item *before* the item operated on.\\r\\n * @name ListItem#prepend\\r\\n * @param {ListItem} item - The item to prepend.\\r\\n * @returns {ListItem} - The item operated on, or false when that item is not\\r\\n * attached.\\r\\n */\\r\\nListItemPrototype.prepend = function (item) {\\r\\n    if (!item || !item.append || !item.prepend || !item.detach) {\\r\\n        throw new Error(errorMessage + 'Item#prepend`.');\\r\\n    }\\r\\n\\r\\n    // Cache self, the parent list, and the previous item.\\r\\n    var self = this,\\r\\n        list = self.list,\\r\\n        prev = self.prev;\\r\\n\\r\\n    // If self is detached, return false.\\r\\n    if (!list) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    // Detach the prependee.\\r\\n    item.detach();\\r\\n\\r\\n    // If self has a previous item...\\r\\n    if (prev) {\\r\\n        // ...link the prependees previous item, to selfs previous item.\\r\\n        item.prev = prev;\\r\\n\\r\\n        // ...link the previous items next item, to self.\\r\\n        prev.next = item;\\r\\n    }\\r\\n\\r\\n    // Set the prependees next item to self.\\r\\n    item.next = self;\\r\\n\\r\\n    // Set the prependees parent list to selfs parent list.\\r\\n    item.list = list;\\r\\n\\r\\n    // Set the previous item of self to the prependee.\\r\\n    self.prev = item;\\r\\n\\r\\n    // If self is the first item in the parent list, link the lists first item\\r\\n    // to the prependee.\\r\\n    if (self === list.head) {\\r\\n        list.head = item;\\r\\n    }\\r\\n\\r\\n    // If the the parent list has no last item, link the lists last item to\\r\\n    // self.\\r\\n    if (!list.tail) {\\r\\n        list.tail = self;\\r\\n    }\\r\\n\\r\\n    // Return the prependee.\\r\\n    return item;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Appends the given item *after* the item operated on.\\r\\n * @name ListItem#append\\r\\n * @param {ListItem} item - The item to append.\\r\\n * @returns {ListItem} - The item operated on, or false when that item is not\\r\\n * attached.\\r\\n */\\r\\nListItemPrototype.append = function (item) {\\r\\n    // If item is falsey, return false.\\r\\n    if (!item || !item.append || !item.prepend || !item.detach) {\\r\\n        throw new Error(errorMessage + 'Item#append`.');\\r\\n    }\\r\\n\\r\\n    // Cache self, the parent list, and the next item.\\r\\n    var self = this,\\r\\n        list = self.list,\\r\\n        next = self.next;\\r\\n\\r\\n    // If self is detached, return false.\\r\\n    if (!list) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    // Detach the appendee.\\r\\n    item.detach();\\r\\n\\r\\n    // If self has a next item...\\r\\n    if (next) {\\r\\n        // ...link the appendees next item, to selfs next item.\\r\\n        item.next = next;\\r\\n\\r\\n        // ...link the next items previous item, to the appendee.\\r\\n        next.prev = item;\\r\\n    }\\r\\n\\r\\n    // Set the appendees previous item to self.\\r\\n    item.prev = self;\\r\\n\\r\\n    // Set the appendees parent list to selfs parent list.\\r\\n    item.list = list;\\r\\n\\r\\n    // Set the next item of self to the appendee.\\r\\n    self.next = item;\\r\\n\\r\\n    // If the the parent list has no last item or if self is the parent lists\\r\\n    // last item, link the lists last item to the appendee.\\r\\n    if (self === list.tail || !list.tail) {\\r\\n        list.tail = item;\\r\\n    }\\r\\n\\r\\n    // Return the appendee.\\r\\n    return item;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Expose `List`.\\r\\n */\\r\\n\\r\\nmodule.exports = List;\\r\\n\\r\\n},{}],14:[function(_dereq_,module,exports){\\r\\n'use strict';\\r\\n\\r\\nmodule.exports = _dereq_('./_source/linked-list.js');\\r\\n\\r\\n},{\\\"./_source/linked-list.js\\\":13}],15:[function(_dereq_,module,exports){\\r\\n// Copyright Joyent, Inc. and other Node contributors.\\r\\n//\\r\\n// Permission is hereby granted, free of charge, to any person obtaining a\\r\\n// copy of this software and associated documentation files (the\\r\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\r\\n// without limitation the rights to use, copy, modify, merge, publish,\\r\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\r\\n// persons to whom the Software is furnished to do so, subject to the\\r\\n// following conditions:\\r\\n//\\r\\n// The above copyright notice and this permission notice shall be included\\r\\n// in all copies or substantial portions of the Software.\\r\\n//\\r\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\r\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\r\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\r\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\r\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\r\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\r\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\r\\n\\r\\n'use strict';\\r\\n\\r\\n// If obj.hasOwnProperty has been overridden, then calling\\r\\n// obj.hasOwnProperty(prop) will break.\\r\\n// See: https://github.com/joyent/node/issues/1707\\r\\nfunction hasOwnProperty(obj, prop) {\\r\\n  return Object.prototype.hasOwnProperty.call(obj, prop);\\r\\n}\\r\\n\\r\\nmodule.exports = function(qs, sep, eq, options) {\\r\\n  sep = sep || '&';\\r\\n  eq = eq || '=';\\r\\n  var obj = {};\\r\\n\\r\\n  if (typeof qs !== 'string' || qs.length === 0) {\\r\\n    return obj;\\r\\n  }\\r\\n\\r\\n  var regexp = /\\\\+/g;\\r\\n  qs = qs.split(sep);\\r\\n\\r\\n  var maxKeys = 1000;\\r\\n  if (options && typeof options.maxKeys === 'number') {\\r\\n    maxKeys = options.maxKeys;\\r\\n  }\\r\\n\\r\\n  var len = qs.length;\\r\\n  // maxKeys <= 0 means that we should not limit keys count\\r\\n  if (maxKeys > 0 && len > maxKeys) {\\r\\n    len = maxKeys;\\r\\n  }\\r\\n\\r\\n  for (var i = 0; i < len; ++i) {\\r\\n    var x = qs[i].replace(regexp, '%20'),\\r\\n        idx = x.indexOf(eq),\\r\\n        kstr, vstr, k, v;\\r\\n\\r\\n    if (idx >= 0) {\\r\\n      kstr = x.substr(0, idx);\\r\\n      vstr = x.substr(idx + 1);\\r\\n    } else {\\r\\n      kstr = x;\\r\\n      vstr = '';\\r\\n    }\\r\\n\\r\\n    k = decodeURIComponent(kstr);\\r\\n    v = decodeURIComponent(vstr);\\r\\n\\r\\n    if (!hasOwnProperty(obj, k)) {\\r\\n      obj[k] = v;\\r\\n    } else if (isArray(obj[k])) {\\r\\n      obj[k].push(v);\\r\\n    } else {\\r\\n      obj[k] = [obj[k], v];\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return obj;\\r\\n};\\r\\n\\r\\nvar isArray = Array.isArray || function (xs) {\\r\\n  return Object.prototype.toString.call(xs) === '[object Array]';\\r\\n};\\r\\n\\r\\n},{}],16:[function(_dereq_,module,exports){\\r\\n// Copyright Joyent, Inc. and other Node contributors.\\r\\n//\\r\\n// Permission is hereby granted, free of charge, to any person obtaining a\\r\\n// copy of this software and associated documentation files (the\\r\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\r\\n// without limitation the rights to use, copy, modify, merge, publish,\\r\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\r\\n// persons to whom the Software is furnished to do so, subject to the\\r\\n// following conditions:\\r\\n//\\r\\n// The above copyright notice and this permission notice shall be included\\r\\n// in all copies or substantial portions of the Software.\\r\\n//\\r\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\r\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\r\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\r\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\r\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\r\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\r\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\r\\n\\r\\n'use strict';\\r\\n\\r\\nvar stringifyPrimitive = function(v) {\\r\\n  switch (typeof v) {\\r\\n    case 'string':\\r\\n      return v;\\r\\n\\r\\n    case 'boolean':\\r\\n      return v ? 'true' : 'false';\\r\\n\\r\\n    case 'number':\\r\\n      return isFinite(v) ? v : '';\\r\\n\\r\\n    default:\\r\\n      return '';\\r\\n  }\\r\\n};\\r\\n\\r\\nmodule.exports = function(obj, sep, eq, name) {\\r\\n  sep = sep || '&';\\r\\n  eq = eq || '=';\\r\\n  if (obj === null) {\\r\\n    obj = undefined;\\r\\n  }\\r\\n\\r\\n  if (typeof obj === 'object') {\\r\\n    return map(objectKeys(obj), function(k) {\\r\\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\\r\\n      if (isArray(obj[k])) {\\r\\n        return map(obj[k], function(v) {\\r\\n          return ks + encodeURIComponent(stringifyPrimitive(v));\\r\\n        }).join(sep);\\r\\n      } else {\\r\\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\\r\\n      }\\r\\n    }).join(sep);\\r\\n\\r\\n  }\\r\\n\\r\\n  if (!name) return '';\\r\\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\\r\\n         encodeURIComponent(stringifyPrimitive(obj));\\r\\n};\\r\\n\\r\\nvar isArray = Array.isArray || function (xs) {\\r\\n  return Object.prototype.toString.call(xs) === '[object Array]';\\r\\n};\\r\\n\\r\\nfunction map (xs, f) {\\r\\n  if (xs.map) return xs.map(f);\\r\\n  var res = [];\\r\\n  for (var i = 0; i < xs.length; i++) {\\r\\n    res.push(f(xs[i], i));\\r\\n  }\\r\\n  return res;\\r\\n}\\r\\n\\r\\nvar objectKeys = Object.keys || function (obj) {\\r\\n  var res = [];\\r\\n  for (var key in obj) {\\r\\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\\r\\n  }\\r\\n  return res;\\r\\n};\\r\\n\\r\\n},{}],17:[function(_dereq_,module,exports){\\r\\n'use strict';\\r\\n\\r\\nexports.decode = exports.parse = _dereq_('./decode');\\r\\nexports.encode = exports.stringify = _dereq_('./encode');\\r\\n\\r\\n},{\\\"./decode\\\":15,\\\"./encode\\\":16}],18:[function(_dereq_,module,exports){\\r\\nvar Emitter = _dereq_('component-emitter');\\r\\n\\r\\nvar SCChannel = function (name, client, options) {\\r\\n  var self = this;\\r\\n\\r\\n  Emitter.call(this);\\r\\n\\r\\n  this.PENDING = 'pending';\\r\\n  this.SUBSCRIBED = 'subscribed';\\r\\n  this.UNSUBSCRIBED = 'unsubscribed';\\r\\n\\r\\n  this.name = name;\\r\\n  this.state = this.UNSUBSCRIBED;\\r\\n  this.client = client;\\r\\n\\r\\n  this.options = options || {};\\r\\n  this.setOptions(this.options);\\r\\n};\\r\\n\\r\\nSCChannel.prototype = Object.create(Emitter.prototype);\\r\\n\\r\\nSCChannel.prototype.setOptions = function (options) {\\r\\n  if (!options) {\\r\\n    options = {};\\r\\n  }\\r\\n  this.waitForAuth = options.waitForAuth || false;\\r\\n  this.batch = options.batch || false;\\r\\n\\r\\n  if (options.data !== undefined) {\\r\\n    this.data = options.data;\\r\\n  }\\r\\n};\\r\\n\\r\\nSCChannel.prototype.getState = function () {\\r\\n  return this.state;\\r\\n};\\r\\n\\r\\nSCChannel.prototype.subscribe = function (options) {\\r\\n  this.client.subscribe(this.name, options);\\r\\n};\\r\\n\\r\\nSCChannel.prototype.unsubscribe = function () {\\r\\n  this.client.unsubscribe(this.name);\\r\\n};\\r\\n\\r\\nSCChannel.prototype.isSubscribed = function (includePending) {\\r\\n  return this.client.isSubscribed(this.name, includePending);\\r\\n};\\r\\n\\r\\nSCChannel.prototype.publish = function (data, callback) {\\r\\n  this.client.publish(this.name, data, callback);\\r\\n};\\r\\n\\r\\nSCChannel.prototype.watch = function (handler) {\\r\\n  this.client.watch(this.name, handler);\\r\\n};\\r\\n\\r\\nSCChannel.prototype.unwatch = function (handler) {\\r\\n  this.client.unwatch(this.name, handler);\\r\\n};\\r\\n\\r\\nSCChannel.prototype.watchers = function () {\\r\\n  return this.client.watchers(this.name);\\r\\n};\\r\\n\\r\\nSCChannel.prototype.destroy = function () {\\r\\n  this.client.destroyChannel(this.name);\\r\\n};\\r\\n\\r\\nmodule.exports.SCChannel = SCChannel;\\r\\n\\r\\n},{\\\"component-emitter\\\":11}],19:[function(_dereq_,module,exports){\\r\\n// Based on https://github.com/dscape/cycle/blob/master/cycle.js\\r\\n\\r\\nmodule.exports = function decycle(object) {\\r\\n// Make a deep copy of an object or array, assuring that there is at most\\r\\n// one instance of each object or array in the resulting structure. The\\r\\n// duplicate references (which might be forming cycles) are replaced with\\r\\n// an object of the form\\r\\n//      {$ref: PATH}\\r\\n// where the PATH is a JSONPath string that locates the first occurance.\\r\\n// So,\\r\\n//      var a = [];\\r\\n//      a[0] = a;\\r\\n//      return JSON.stringify(JSON.decycle(a));\\r\\n// produces the string '[{\\\"$ref\\\":\\\"$\\\"}]'.\\r\\n\\r\\n// JSONPath is used to locate the unique object. $ indicates the top level of\\r\\n// the object or array. [NUMBER] or [STRING] indicates a child member or\\r\\n// property.\\r\\n\\r\\n    var objects = [],   // Keep a reference to each unique object or array\\r\\n        paths = [];     // Keep the path to each unique object or array\\r\\n\\r\\n    return (function derez(value, path) {\\r\\n\\r\\n// The derez recurses through the object, producing the deep copy.\\r\\n\\r\\n        var i,          // The loop counter\\r\\n            name,       // Property name\\r\\n            nu;         // The new object or array\\r\\n\\r\\n// typeof null === 'object', so go on if this value is really an object but not\\r\\n// one of the weird builtin objects.\\r\\n\\r\\n        if (typeof value === 'object' && value !== null &&\\r\\n                !(value instanceof Boolean) &&\\r\\n                !(value instanceof Date)    &&\\r\\n                !(value instanceof Number)  &&\\r\\n                !(value instanceof RegExp)  &&\\r\\n                !(value instanceof String)) {\\r\\n\\r\\n// If the value is an object or array, look to see if we have already\\r\\n// encountered it. If so, return a $ref/path object. This is a hard way,\\r\\n// linear search that will get slower as the number of unique objects grows.\\r\\n\\r\\n            for (i = 0; i < objects.length; i += 1) {\\r\\n                if (objects[i] === value) {\\r\\n                    return {$ref: paths[i]};\\r\\n                }\\r\\n            }\\r\\n\\r\\n// Otherwise, accumulate the unique value and its path.\\r\\n\\r\\n            objects.push(value);\\r\\n            paths.push(path);\\r\\n\\r\\n// If it is an array, replicate the array.\\r\\n\\r\\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\\r\\n                nu = [];\\r\\n                for (i = 0; i < value.length; i += 1) {\\r\\n                    nu[i] = derez(value[i], path + '[' + i + ']');\\r\\n                }\\r\\n            } else {\\r\\n\\r\\n// If it is an object, replicate the object.\\r\\n\\r\\n                nu = {};\\r\\n                for (name in value) {\\r\\n                    if (Object.prototype.hasOwnProperty.call(value, name)) {\\r\\n                        nu[name] = derez(value[name],\\r\\n                            path + '[' + JSON.stringify(name) + ']');\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            return nu;\\r\\n        }\\r\\n        return value;\\r\\n    }(object, '$'));\\r\\n};\\r\\n\\r\\n},{}],20:[function(_dereq_,module,exports){\\r\\nvar decycle = _dereq_('./decycle');\\r\\n\\r\\nvar isStrict = (function () { return !this; })();\\r\\n\\r\\nfunction AuthTokenExpiredError(message, expiry) {\\r\\n  this.name = 'AuthTokenExpiredError';\\r\\n  this.message = message;\\r\\n  this.expiry = expiry;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nAuthTokenExpiredError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction AuthTokenInvalidError(message) {\\r\\n  this.name = 'AuthTokenInvalidError';\\r\\n  this.message = message;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nAuthTokenInvalidError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction AuthTokenNotBeforeError(message, date) {\\r\\n  this.name = 'AuthTokenNotBeforeError';\\r\\n  this.message = message;\\r\\n  this.date = date;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nAuthTokenNotBeforeError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\n// For any other auth token error.\\r\\nfunction AuthTokenError(message) {\\r\\n  this.name = 'AuthTokenError';\\r\\n  this.message = message;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nAuthTokenError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction SilentMiddlewareBlockedError(message, type) {\\r\\n  this.name = 'SilentMiddlewareBlockedError';\\r\\n  this.message = message;\\r\\n  this.type = type;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nSilentMiddlewareBlockedError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction InvalidActionError(message) {\\r\\n  this.name = 'InvalidActionError';\\r\\n  this.message = message;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nInvalidActionError.prototype = Object.create(Error.prototype);\\r\\n\\r\\nfunction InvalidArgumentsError(message) {\\r\\n  this.name = 'InvalidArgumentsError';\\r\\n  this.message = message;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nInvalidArgumentsError.prototype = Object.create(Error.prototype);\\r\\n\\r\\nfunction InvalidOptionsError(message) {\\r\\n  this.name = 'InvalidOptionsError';\\r\\n  this.message = message;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nInvalidOptionsError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction InvalidMessageError(message) {\\r\\n  this.name = 'InvalidMessageError';\\r\\n  this.message = message;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nInvalidMessageError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction SocketProtocolError(message, code) {\\r\\n  this.name = 'SocketProtocolError';\\r\\n  this.message = message;\\r\\n  this.code = code;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nSocketProtocolError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction ServerProtocolError(message) {\\r\\n  this.name = 'ServerProtocolError';\\r\\n  this.message = message;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nServerProtocolError.prototype = Object.create(Error.prototype);\\r\\n\\r\\nfunction HTTPServerError(message) {\\r\\n  this.name = 'HTTPServerError';\\r\\n  this.message = message;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nHTTPServerError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction ResourceLimitError(message) {\\r\\n  this.name = 'ResourceLimitError';\\r\\n  this.message = message;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nResourceLimitError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction TimeoutError(message) {\\r\\n  this.name = 'TimeoutError';\\r\\n  this.message = message;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nTimeoutError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction BadConnectionError(message, type) {\\r\\n  this.name = 'BadConnectionError';\\r\\n  this.message = message;\\r\\n  this.type = type;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nBadConnectionError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction BrokerError(message) {\\r\\n  this.name = 'BrokerError';\\r\\n  this.message = message;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nBrokerError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction ProcessExitError(message, code) {\\r\\n  this.name = 'ProcessExitError';\\r\\n  this.message = message;\\r\\n  this.code = code;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nProcessExitError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\nfunction UnknownError(message) {\\r\\n  this.name = 'UnknownError';\\r\\n  this.message = message;\\r\\n  if (Error.captureStackTrace && !isStrict) {\\r\\n    Error.captureStackTrace(this, arguments.callee);\\r\\n  } else {\\r\\n    this.stack = (new Error()).stack;\\r\\n  }\\r\\n}\\r\\nUnknownError.prototype = Object.create(Error.prototype);\\r\\n\\r\\n\\r\\n// Expose all error types.\\r\\n\\r\\nmodule.exports = {\\r\\n  AuthTokenExpiredError: AuthTokenExpiredError,\\r\\n  AuthTokenInvalidError: AuthTokenInvalidError,\\r\\n  AuthTokenNotBeforeError: AuthTokenNotBeforeError,\\r\\n  AuthTokenError: AuthTokenError,\\r\\n  SilentMiddlewareBlockedError: SilentMiddlewareBlockedError,\\r\\n  InvalidActionError: InvalidActionError,\\r\\n  InvalidArgumentsError: InvalidArgumentsError,\\r\\n  InvalidOptionsError: InvalidOptionsError,\\r\\n  InvalidMessageError: InvalidMessageError,\\r\\n  SocketProtocolError: SocketProtocolError,\\r\\n  ServerProtocolError: ServerProtocolError,\\r\\n  HTTPServerError: HTTPServerError,\\r\\n  ResourceLimitError: ResourceLimitError,\\r\\n  TimeoutError: TimeoutError,\\r\\n  BadConnectionError: BadConnectionError,\\r\\n  BrokerError: BrokerError,\\r\\n  ProcessExitError: ProcessExitError,\\r\\n  UnknownError: UnknownError\\r\\n};\\r\\n\\r\\nmodule.exports.socketProtocolErrorStatuses = {\\r\\n  1001: 'Socket was disconnected',\\r\\n  1002: 'A WebSocket protocol error was encountered',\\r\\n  1003: 'Server terminated socket because it received invalid data',\\r\\n  1005: 'Socket closed without status code',\\r\\n  1006: 'Socket hung up',\\r\\n  1007: 'Message format was incorrect',\\r\\n  1008: 'Encountered a policy violation',\\r\\n  1009: 'Message was too big to process',\\r\\n  1010: 'Client ended the connection because the server did not comply with extension requirements',\\r\\n  1011: 'Server encountered an unexpected fatal condition',\\r\\n  4000: 'Server ping timed out',\\r\\n  4001: 'Client pong timed out',\\r\\n  4002: 'Server failed to sign auth token',\\r\\n  4003: 'Failed to complete handshake',\\r\\n  4004: 'Client failed to save auth token',\\r\\n  4005: 'Did not receive #handshake from client before timeout',\\r\\n  4006: 'Failed to bind socket to message broker',\\r\\n  4007: 'Client connection establishment timed out',\\r\\n  4008: 'Server rejected handshake from client'\\r\\n};\\r\\n\\r\\nmodule.exports.socketProtocolIgnoreStatuses = {\\r\\n  1000: 'Socket closed normally',\\r\\n  1001: 'Socket hung up'\\r\\n};\\r\\n\\r\\n// Properties related to error domains cannot be serialized.\\r\\nvar unserializableErrorProperties = {\\r\\n  domain: 1,\\r\\n  domainEmitter: 1,\\r\\n  domainThrown: 1\\r\\n};\\r\\n\\r\\n// Convert an error into a JSON-compatible type which can later be hydrated\\r\\n// back to its *original* form.\\r\\nmodule.exports.dehydrateError = function dehydrateError(error, includeStackTrace) {\\r\\n  var dehydratedError;\\r\\n\\r\\n  if (error && typeof error === 'object') {\\r\\n    dehydratedError = {\\r\\n      message: error.message\\r\\n    };\\r\\n    if (includeStackTrace) {\\r\\n      dehydratedError.stack = error.stack;\\r\\n    }\\r\\n    for (var i in error) {\\r\\n      if (!unserializableErrorProperties[i]) {\\r\\n        dehydratedError[i] = error[i];\\r\\n      }\\r\\n    }\\r\\n  } else if (typeof error === 'function') {\\r\\n    dehydratedError = '[function ' + (error.name || 'anonymous') + ']';\\r\\n  } else {\\r\\n    dehydratedError = error;\\r\\n  }\\r\\n\\r\\n  return decycle(dehydratedError);\\r\\n};\\r\\n\\r\\n// Convert a dehydrated error back to its *original* form.\\r\\nmodule.exports.hydrateError = function hydrateError(error) {\\r\\n  var hydratedError = null;\\r\\n  if (error != null) {\\r\\n    if (typeof error === 'object') {\\r\\n      hydratedError = new Error(error.message);\\r\\n      for (var i in error) {\\r\\n        if (error.hasOwnProperty(i)) {\\r\\n          hydratedError[i] = error[i];\\r\\n        }\\r\\n      }\\r\\n    } else {\\r\\n      hydratedError = error;\\r\\n    }\\r\\n  }\\r\\n  return hydratedError;\\r\\n};\\r\\n\\r\\nmodule.exports.decycle = decycle;\\r\\n\\r\\n},{\\\"./decycle\\\":19}],21:[function(_dereq_,module,exports){\\r\\n(function (global){\\r\\nvar base64Chars = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\r\\nvar validJSONStartRegex = /^[ \\\\n\\\\r\\\\t]*[{\\\\[]/;\\r\\n\\r\\nvar arrayBufferToBase64 = function (arraybuffer) {\\r\\n  var bytes = new Uint8Array(arraybuffer);\\r\\n  var len = bytes.length;\\r\\n  var base64 = '';\\r\\n\\r\\n  for (var i = 0; i < len; i += 3) {\\r\\n    base64 += base64Chars[bytes[i] >> 2];\\r\\n    base64 += base64Chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\\r\\n    base64 += base64Chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\\r\\n    base64 += base64Chars[bytes[i + 2] & 63];\\r\\n  }\\r\\n\\r\\n  if ((len % 3) === 2) {\\r\\n    base64 = base64.substring(0, base64.length - 1) + '=';\\r\\n  } else if (len % 3 === 1) {\\r\\n    base64 = base64.substring(0, base64.length - 2) + '==';\\r\\n  }\\r\\n\\r\\n  return base64;\\r\\n};\\r\\n\\r\\nvar binaryToBase64Replacer = function (key, value) {\\r\\n  if (global.ArrayBuffer && value instanceof global.ArrayBuffer) {\\r\\n    return {\\r\\n      base64: true,\\r\\n      data: arrayBufferToBase64(value)\\r\\n    };\\r\\n  } else if (global.Buffer) {\\r\\n    if (value instanceof global.Buffer){\\r\\n      return {\\r\\n        base64: true,\\r\\n        data: value.toString('base64')\\r\\n      };\\r\\n    }\\r\\n    // Some versions of Node.js convert Buffers to Objects before they are passed to\\r\\n    // the replacer function - Because of this, we need to rehydrate Buffers\\r\\n    // before we can convert them to base64 strings.\\r\\n    if (value && value.type === 'Buffer' && Array.isArray(value.data)) {\\r\\n      var rehydratedBuffer;\\r\\n      if (global.Buffer.from) {\\r\\n        rehydratedBuffer = global.Buffer.from(value.data);\\r\\n      } else {\\r\\n        rehydratedBuffer = new global.Buffer(value.data);\\r\\n      }\\r\\n      return {\\r\\n        base64: true,\\r\\n        data: rehydratedBuffer.toString('base64')\\r\\n      };\\r\\n    }\\r\\n  }\\r\\n  return value;\\r\\n};\\r\\n\\r\\n// Decode the data which was transmitted over the wire to a JavaScript Object in a format which SC understands.\\r\\n// See encode function below for more details.\\r\\nmodule.exports.decode = function (input) {\\r\\n  if (input == null) {\\r\\n   return null;\\r\\n  }\\r\\n  // Leave ping or pong message as is\\r\\n  if (input === '#1' || input === '#2') {\\r\\n    return input;\\r\\n  }\\r\\n  var message = input.toString();\\r\\n\\r\\n  // Performance optimization to detect invalid JSON packet sooner.\\r\\n  if (!validJSONStartRegex.test(message)) {\\r\\n    return message;\\r\\n  }\\r\\n\\r\\n  try {\\r\\n    return JSON.parse(message);\\r\\n  } catch (err) {}\\r\\n  return message;\\r\\n};\\r\\n\\r\\n// Encode a raw JavaScript object (which is in the SC protocol format) into a format for\\r\\n// transfering it over the wire. In this case, we just convert it into a simple JSON string.\\r\\n// If you want to create your own custom codec, you can encode the object into any format\\r\\n// (e.g. binary ArrayBuffer or string with any kind of compression) so long as your decode\\r\\n// function is able to rehydrate that object back into its original JavaScript Object format\\r\\n// (which adheres to the SC protocol).\\r\\n// See https://github.com/SocketCluster/socketcluster/blob/master/socketcluster-protocol.md\\r\\n// for details about the SC protocol.\\r\\nmodule.exports.encode = function (object) {\\r\\n  // Leave ping or pong message as is\\r\\n  if (object === '#1' || object === '#2') {\\r\\n    return object;\\r\\n  }\\r\\n  return JSON.stringify(object, binaryToBase64Replacer);\\r\\n};\\r\\n\\r\\n}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\r\\n},{}],22:[function(_dereq_,module,exports){\\r\\nvar v1 = _dereq_('./v1');\\r\\nvar v4 = _dereq_('./v4');\\r\\n\\r\\nvar uuid = v4;\\r\\nuuid.v1 = v1;\\r\\nuuid.v4 = v4;\\r\\n\\r\\nmodule.exports = uuid;\\r\\n\\r\\n},{\\\"./v1\\\":25,\\\"./v4\\\":26}],23:[function(_dereq_,module,exports){\\r\\n/**\\r\\n * Convert array of 16 byte values to UUID string format of the form:\\r\\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\\r\\n */\\r\\nvar byteToHex = [];\\r\\nfor (var i = 0; i < 256; ++i) {\\r\\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\\r\\n}\\r\\n\\r\\nfunction bytesToUuid(buf, offset) {\\r\\n  var i = offset || 0;\\r\\n  var bth = byteToHex;\\r\\n  return bth[buf[i++]] + bth[buf[i++]] +\\r\\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\\r\\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\\r\\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\\r\\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\\r\\n          bth[buf[i++]] + bth[buf[i++]] +\\r\\n          bth[buf[i++]] + bth[buf[i++]] +\\r\\n          bth[buf[i++]] + bth[buf[i++]];\\r\\n}\\r\\n\\r\\nmodule.exports = bytesToUuid;\\r\\n\\r\\n},{}],24:[function(_dereq_,module,exports){\\r\\n// Unique ID creation requires a high quality random # generator.  In the\\r\\n// browser this is a little complicated due to unknown quality of Math.random()\\r\\n// and inconsistent support for the `crypto` API.  We do the best we can via\\r\\n// feature-detection\\r\\n\\r\\n// getRandomValues needs to be invoked in a context where \\\"this\\\" is a Crypto implementation.\\r\\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\\r\\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\\r\\nif (getRandomValues) {\\r\\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\\r\\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\\r\\n\\r\\n  module.exports = function whatwgRNG() {\\r\\n    getRandomValues(rnds8);\\r\\n    return rnds8;\\r\\n  };\\r\\n} else {\\r\\n  // Math.random()-based (RNG)\\r\\n  //\\r\\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\\r\\n  // quality.\\r\\n  var rnds = new Array(16);\\r\\n\\r\\n  module.exports = function mathRNG() {\\r\\n    for (var i = 0, r; i < 16; i++) {\\r\\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\\r\\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\\r\\n    }\\r\\n\\r\\n    return rnds;\\r\\n  };\\r\\n}\\r\\n\\r\\n},{}],25:[function(_dereq_,module,exports){\\r\\nvar rng = _dereq_('./lib/rng');\\r\\nvar bytesToUuid = _dereq_('./lib/bytesToUuid');\\r\\n\\r\\n// **`v1()` - Generate time-based UUID**\\r\\n//\\r\\n// Inspired by https://github.com/LiosK/UUID.js\\r\\n// and http://docs.python.org/library/uuid.html\\r\\n\\r\\nvar _nodeId;\\r\\nvar _clockseq;\\r\\n\\r\\n// Previous uuid creation time\\r\\nvar _lastMSecs = 0;\\r\\nvar _lastNSecs = 0;\\r\\n\\r\\n// See https://github.com/broofa/node-uuid for API details\\r\\nfunction v1(options, buf, offset) {\\r\\n  var i = buf && offset || 0;\\r\\n  var b = buf || [];\\r\\n\\r\\n  options = options || {};\\r\\n  var node = options.node || _nodeId;\\r\\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\\r\\n\\r\\n  // node and clockseq need to be initialized to random values if they're not\\r\\n  // specified.  We do this lazily to minimize issues related to insufficient\\r\\n  // system entropy.  See #189\\r\\n  if (node == null || clockseq == null) {\\r\\n    var seedBytes = rng();\\r\\n    if (node == null) {\\r\\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\\r\\n      node = _nodeId = [\\r\\n        seedBytes[0] | 0x01,\\r\\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\\r\\n      ];\\r\\n    }\\r\\n    if (clockseq == null) {\\r\\n      // Per 4.2.2, randomize (14 bit) clockseq\\r\\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\\r\\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\\r\\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\\r\\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\\r\\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\\r\\n\\r\\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\\r\\n  // cycle to simulate higher resolution clock\\r\\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\\r\\n\\r\\n  // Time since last uuid creation (in msecs)\\r\\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\\r\\n\\r\\n  // Per 4.2.1.2, Bump clockseq on clock regression\\r\\n  if (dt < 0 && options.clockseq === undefined) {\\r\\n    clockseq = clockseq + 1 & 0x3fff;\\r\\n  }\\r\\n\\r\\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\\r\\n  // time interval\\r\\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\\r\\n    nsecs = 0;\\r\\n  }\\r\\n\\r\\n  // Per 4.2.1.2 Throw error if too many uuids are requested\\r\\n  if (nsecs >= 10000) {\\r\\n    throw new Error('uuid.v1(): Can\\\\'t create more than 10M uuids/sec');\\r\\n  }\\r\\n\\r\\n  _lastMSecs = msecs;\\r\\n  _lastNSecs = nsecs;\\r\\n  _clockseq = clockseq;\\r\\n\\r\\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\\r\\n  msecs += 12219292800000;\\r\\n\\r\\n  // `time_low`\\r\\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\\r\\n  b[i++] = tl >>> 24 & 0xff;\\r\\n  b[i++] = tl >>> 16 & 0xff;\\r\\n  b[i++] = tl >>> 8 & 0xff;\\r\\n  b[i++] = tl & 0xff;\\r\\n\\r\\n  // `time_mid`\\r\\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\\r\\n  b[i++] = tmh >>> 8 & 0xff;\\r\\n  b[i++] = tmh & 0xff;\\r\\n\\r\\n  // `time_high_and_version`\\r\\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\\r\\n  b[i++] = tmh >>> 16 & 0xff;\\r\\n\\r\\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\\r\\n  b[i++] = clockseq >>> 8 | 0x80;\\r\\n\\r\\n  // `clock_seq_low`\\r\\n  b[i++] = clockseq & 0xff;\\r\\n\\r\\n  // `node`\\r\\n  for (var n = 0; n < 6; ++n) {\\r\\n    b[i + n] = node[n];\\r\\n  }\\r\\n\\r\\n  return buf ? buf : bytesToUuid(b);\\r\\n}\\r\\n\\r\\nmodule.exports = v1;\\r\\n\\r\\n},{\\\"./lib/bytesToUuid\\\":23,\\\"./lib/rng\\\":24}],26:[function(_dereq_,module,exports){\\r\\nvar rng = _dereq_('./lib/rng');\\r\\nvar bytesToUuid = _dereq_('./lib/bytesToUuid');\\r\\n\\r\\nfunction v4(options, buf, offset) {\\r\\n  var i = buf && offset || 0;\\r\\n\\r\\n  if (typeof(options) == 'string') {\\r\\n    buf = options === 'binary' ? new Array(16) : null;\\r\\n    options = null;\\r\\n  }\\r\\n  options = options || {};\\r\\n\\r\\n  var rnds = options.random || (options.rng || rng)();\\r\\n\\r\\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\\r\\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\\r\\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\\r\\n\\r\\n  // Copy bytes to buffer, if provided\\r\\n  if (buf) {\\r\\n    for (var ii = 0; ii < 16; ++ii) {\\r\\n      buf[i + ii] = rnds[ii];\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return buf || bytesToUuid(rnds);\\r\\n}\\r\\n\\r\\nmodule.exports = v4;\\r\\n\\r\\n},{\\\"./lib/bytesToUuid\\\":23,\\\"./lib/rng\\\":24}]},{},[1])(1)\\r\\n});\\r\\n\""
		},
		{
			"name": "sc-codec-min-bin.js",
			"source": "\"(function(f){if(typeof exports===\\\"object\\\"&&typeof module!==\\\"undefined\\\"){module.exports=f()}else if(typeof define===\\\"function\\\"&&define.amd){define([],f)}else{var g;if(typeof window!==\\\"undefined\\\"){g=window}else if(typeof global!==\\\"undefined\\\"){g=global}else if(typeof self!==\\\"undefined\\\"){g=self}else{g=this}g.scCodecMinBin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\\\"function\\\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\\\"Cannot find module '\\\"+o+\\\"'\\\");throw f.code=\\\"MODULE_NOT_FOUND\\\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\\\"function\\\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\\r\\nvar msgpack = require('msgpack-lite');\\r\\n\\r\\nvar options = {\\r\\n  codec: msgpack.createCodec({\\r\\n    binarraybuffer: true,\\r\\n    preset: false\\r\\n  })\\r\\n};\\r\\n\\r\\nvar compressPublishPacket = function (object) {\\r\\n  if (object.event != '#publish' || object.data == null) {\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  var pubArray = [object.data.channel, object.data.data];\\r\\n\\r\\n  if (object.cid != null) {\\r\\n    pubArray.push(object.cid);\\r\\n  }\\r\\n\\r\\n  object.p = pubArray;\\r\\n\\r\\n  delete object.event;\\r\\n  delete object.data;\\r\\n  delete object.cid;\\r\\n};\\r\\n\\r\\nvar decompressPublishPacket = function (object) {\\r\\n  if (object.p == null) {\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  object.event = '#publish';\\r\\n  object.data = {\\r\\n    channel: object.p[0],\\r\\n    data: object.p[1]\\r\\n  };\\r\\n  if (object.p[2] != null) {\\r\\n    object.cid = object.p[2];\\r\\n  }\\r\\n  delete object.p;\\r\\n};\\r\\n\\r\\nvar compressEmitPacket = function (object) {\\r\\n  if (object.event == null) {\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  object.e = [object.event, object.data];\\r\\n  if (object.cid != null) {\\r\\n    object.e.push(object.cid);\\r\\n  }\\r\\n  delete object.event;\\r\\n  delete object.data;\\r\\n  delete object.cid;\\r\\n};\\r\\n\\r\\nvar decompressEmitPacket = function (object) {\\r\\n  if (object.e == null) {\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  object.event = object.e[0];\\r\\n  object.data = object.e[1];\\r\\n  if (object.e[2] != null) {\\r\\n    object.cid = object.e[2];\\r\\n  }\\r\\n  delete object.e;\\r\\n};\\r\\n\\r\\nvar compressResponsePacket = function (object) {\\r\\n  if (object.rid == null) {\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  object.r = [object.rid, object.error, object.data];\\r\\n\\r\\n  delete object.rid;\\r\\n  delete object.error;\\r\\n  delete object.data;\\r\\n};\\r\\n\\r\\nvar decompressResponsePacket = function (object) {\\r\\n  if (object.r == null) {\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  object.rid = object.r[0];\\r\\n  object.error = object.r[1];\\r\\n  object.data = object.r[2];\\r\\n  delete object.r;\\r\\n};\\r\\n\\r\\nvar clonePacket = function (object) {\\r\\n  var clone = {};\\r\\n  for (var i in object) {\\r\\n    if (object.hasOwnProperty(i)) {\\r\\n      clone[i] = object[i];\\r\\n    }\\r\\n  }\\r\\n  return clone;\\r\\n};\\r\\n\\r\\nvar compressSinglePacket = function (object) {\\r\\n  object = clonePacket(object);\\r\\n  compressPublishPacket(object);\\r\\n  compressEmitPacket(object);\\r\\n  compressResponsePacket(object);\\r\\n  return object;\\r\\n};\\r\\n\\r\\nvar decompressSinglePacket = function (object) {\\r\\n  decompressEmitPacket(object);\\r\\n  decompressPublishPacket(object);\\r\\n  decompressResponsePacket(object);\\r\\n};\\r\\n\\r\\nmodule.exports.encode = function (object) {\\r\\n  if (object) {\\r\\n    if (Array.isArray(object)) {\\r\\n      var len = object.length;\\r\\n      for (var i = 0; i < len; i++) {\\r\\n        object[i] = compressSinglePacket(object[i]);\\r\\n      }\\r\\n    } else if (object.event != null || object.rid != null) {\\r\\n      object = compressSinglePacket(object);\\r\\n    }\\r\\n  }\\r\\n  return msgpack.encode(object, options);\\r\\n};\\r\\n\\r\\nmodule.exports.decode = function (str) {\\r\\n  str = new Uint8Array(str);\\r\\n  var object = msgpack.decode(str, options);\\r\\n  if (Array.isArray(object)) {\\r\\n    var len = object.length;\\r\\n    for (var i = 0; i < len; i++) {\\r\\n      decompressSinglePacket(object[i]);\\r\\n    }\\r\\n  } else {\\r\\n    decompressSinglePacket(object);\\r\\n  }\\r\\n  return object;\\r\\n};\\r\\n\\r\\n},{\\\"msgpack-lite\\\":6}],2:[function(require,module,exports){\\r\\n/**\\r\\n * event-lite.js - Light-weight EventEmitter (less than 1KB when gzipped)\\r\\n *\\r\\n * @copyright Yusuke Kawasaki\\r\\n * @license MIT\\r\\n * @constructor\\r\\n * @see https://github.com/kawanet/event-lite\\r\\n * @see http://kawanet.github.io/event-lite/EventLite.html\\r\\n * @example\\r\\n * var EventLite = require(\\\"event-lite\\\");\\r\\n *\\r\\n * function MyClass() {...}             // your class\\r\\n *\\r\\n * EventLite.mixin(MyClass.prototype);  // import event methods\\r\\n *\\r\\n * var obj = new MyClass();\\r\\n * obj.on(\\\"foo\\\", function() {...});     // add event listener\\r\\n * obj.once(\\\"bar\\\", function() {...});   // add one-time event listener\\r\\n * obj.emit(\\\"foo\\\");                     // dispatch event\\r\\n * obj.emit(\\\"bar\\\");                     // dispatch another event\\r\\n * obj.off(\\\"foo\\\");                      // remove event listener\\r\\n */\\r\\n\\r\\nfunction EventLite() {\\r\\n  if (!(this instanceof EventLite)) return new EventLite();\\r\\n}\\r\\n\\r\\n(function(EventLite) {\\r\\n  // export the class for node.js\\r\\n  if (\\\"undefined\\\" !== typeof module) module.exports = EventLite;\\r\\n\\r\\n  // property name to hold listeners\\r\\n  var LISTENERS = \\\"listeners\\\";\\r\\n\\r\\n  // methods to export\\r\\n  var methods = {\\r\\n    on: on,\\r\\n    once: once,\\r\\n    off: off,\\r\\n    emit: emit\\r\\n  };\\r\\n\\r\\n  // mixin to self\\r\\n  mixin(EventLite.prototype);\\r\\n\\r\\n  // export mixin function\\r\\n  EventLite.mixin = mixin;\\r\\n\\r\\n  /**\\r\\n   * Import on(), once(), off() and emit() methods into target object.\\r\\n   *\\r\\n   * @function EventLite.mixin\\r\\n   * @param target {Prototype}\\r\\n   */\\r\\n\\r\\n  function mixin(target) {\\r\\n    for (var key in methods) {\\r\\n      target[key] = methods[key];\\r\\n    }\\r\\n    return target;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Add an event listener.\\r\\n   *\\r\\n   * @function EventLite.prototype.on\\r\\n   * @param type {string}\\r\\n   * @param func {Function}\\r\\n   * @returns {EventLite} Self for method chaining\\r\\n   */\\r\\n\\r\\n  function on(type, func) {\\r\\n    getListeners(this, type).push(func);\\r\\n    return this;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Add one-time event listener.\\r\\n   *\\r\\n   * @function EventLite.prototype.once\\r\\n   * @param type {string}\\r\\n   * @param func {Function}\\r\\n   * @returns {EventLite} Self for method chaining\\r\\n   */\\r\\n\\r\\n  function once(type, func) {\\r\\n    var that = this;\\r\\n    wrap.originalListener = func;\\r\\n    getListeners(that, type).push(wrap);\\r\\n    return that;\\r\\n\\r\\n    function wrap() {\\r\\n      off.call(that, type, wrap);\\r\\n      func.apply(this, arguments);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Remove an event listener.\\r\\n   *\\r\\n   * @function EventLite.prototype.off\\r\\n   * @param [type] {string}\\r\\n   * @param [func] {Function}\\r\\n   * @returns {EventLite} Self for method chaining\\r\\n   */\\r\\n\\r\\n  function off(type, func) {\\r\\n    var that = this;\\r\\n    var listners;\\r\\n    if (!arguments.length) {\\r\\n      delete that[LISTENERS];\\r\\n    } else if (!func) {\\r\\n      listners = that[LISTENERS];\\r\\n      if (listners) {\\r\\n        delete listners[type];\\r\\n        if (!Object.keys(listners).length) return off.call(that);\\r\\n      }\\r\\n    } else {\\r\\n      listners = getListeners(that, type, true);\\r\\n      if (listners) {\\r\\n        listners = listners.filter(ne);\\r\\n        if (!listners.length) return off.call(that, type);\\r\\n        that[LISTENERS][type] = listners;\\r\\n      }\\r\\n    }\\r\\n    return that;\\r\\n\\r\\n    function ne(test) {\\r\\n      return test !== func && test.originalListener !== func;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Dispatch (trigger) an event.\\r\\n   *\\r\\n   * @function EventLite.prototype.emit\\r\\n   * @param type {string}\\r\\n   * @param [value] {*}\\r\\n   * @returns {boolean} True when a listener received the event\\r\\n   */\\r\\n\\r\\n  function emit(type, value) {\\r\\n    var that = this;\\r\\n    var listeners = getListeners(that, type, true);\\r\\n    if (!listeners) return false;\\r\\n    var arglen = arguments.length;\\r\\n    if (arglen === 1) {\\r\\n      listeners.forEach(zeroarg);\\r\\n    } else if (arglen === 2) {\\r\\n      listeners.forEach(onearg);\\r\\n    } else {\\r\\n      var args = Array.prototype.slice.call(arguments, 1);\\r\\n      listeners.forEach(moreargs);\\r\\n    }\\r\\n    return !!listeners.length;\\r\\n\\r\\n    function zeroarg(func) {\\r\\n      func.call(that);\\r\\n    }\\r\\n\\r\\n    function onearg(func) {\\r\\n      func.call(that, value);\\r\\n    }\\r\\n\\r\\n    function moreargs(func) {\\r\\n      func.apply(that, args);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @ignore\\r\\n   */\\r\\n\\r\\n  function getListeners(that, type, readonly) {\\r\\n    if (readonly && !that[LISTENERS]) return;\\r\\n    var listeners = that[LISTENERS] || (that[LISTENERS] = {});\\r\\n    return listeners[type] || (listeners[type] = []);\\r\\n  }\\r\\n\\r\\n})(EventLite);\\r\\n\\r\\n},{}],3:[function(require,module,exports){\\r\\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\\r\\n  var e, m\\r\\n  var eLen = nBytes * 8 - mLen - 1\\r\\n  var eMax = (1 << eLen) - 1\\r\\n  var eBias = eMax >> 1\\r\\n  var nBits = -7\\r\\n  var i = isLE ? (nBytes - 1) : 0\\r\\n  var d = isLE ? -1 : 1\\r\\n  var s = buffer[offset + i]\\r\\n\\r\\n  i += d\\r\\n\\r\\n  e = s & ((1 << (-nBits)) - 1)\\r\\n  s >>= (-nBits)\\r\\n  nBits += eLen\\r\\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\\r\\n\\r\\n  m = e & ((1 << (-nBits)) - 1)\\r\\n  e >>= (-nBits)\\r\\n  nBits += mLen\\r\\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\\r\\n\\r\\n  if (e === 0) {\\r\\n    e = 1 - eBias\\r\\n  } else if (e === eMax) {\\r\\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\\r\\n  } else {\\r\\n    m = m + Math.pow(2, mLen)\\r\\n    e = e - eBias\\r\\n  }\\r\\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\\r\\n}\\r\\n\\r\\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\\r\\n  var e, m, c\\r\\n  var eLen = nBytes * 8 - mLen - 1\\r\\n  var eMax = (1 << eLen) - 1\\r\\n  var eBias = eMax >> 1\\r\\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\\r\\n  var i = isLE ? 0 : (nBytes - 1)\\r\\n  var d = isLE ? 1 : -1\\r\\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\\r\\n\\r\\n  value = Math.abs(value)\\r\\n\\r\\n  if (isNaN(value) || value === Infinity) {\\r\\n    m = isNaN(value) ? 1 : 0\\r\\n    e = eMax\\r\\n  } else {\\r\\n    e = Math.floor(Math.log(value) / Math.LN2)\\r\\n    if (value * (c = Math.pow(2, -e)) < 1) {\\r\\n      e--\\r\\n      c *= 2\\r\\n    }\\r\\n    if (e + eBias >= 1) {\\r\\n      value += rt / c\\r\\n    } else {\\r\\n      value += rt * Math.pow(2, 1 - eBias)\\r\\n    }\\r\\n    if (value * c >= 2) {\\r\\n      e++\\r\\n      c /= 2\\r\\n    }\\r\\n\\r\\n    if (e + eBias >= eMax) {\\r\\n      m = 0\\r\\n      e = eMax\\r\\n    } else if (e + eBias >= 1) {\\r\\n      m = (value * c - 1) * Math.pow(2, mLen)\\r\\n      e = e + eBias\\r\\n    } else {\\r\\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\\r\\n      e = 0\\r\\n    }\\r\\n  }\\r\\n\\r\\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\\r\\n\\r\\n  e = (e << mLen) | m\\r\\n  eLen += mLen\\r\\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\\r\\n\\r\\n  buffer[offset + i - d] |= s * 128\\r\\n}\\r\\n\\r\\n},{}],4:[function(require,module,exports){\\r\\n(function (Buffer){\\r\\n// int64-buffer.js\\r\\n\\r\\n/*jshint -W018 */ // Confusing use of '!'.\\r\\n/*jshint -W030 */ // Expected an assignment or function call and instead saw an expression.\\r\\n/*jshint -W093 */ // Did you mean to return a conditional instead of an assignment?\\r\\n\\r\\nvar Uint64BE, Int64BE, Uint64LE, Int64LE;\\r\\n\\r\\n!function(exports) {\\r\\n  // constants\\r\\n\\r\\n  var UNDEFINED = \\\"undefined\\\";\\r\\n  var BUFFER = (UNDEFINED !== typeof Buffer) && Buffer;\\r\\n  var UINT8ARRAY = (UNDEFINED !== typeof Uint8Array) && Uint8Array;\\r\\n  var ARRAYBUFFER = (UNDEFINED !== typeof ArrayBuffer) && ArrayBuffer;\\r\\n  var ZERO = [0, 0, 0, 0, 0, 0, 0, 0];\\r\\n  var isArray = Array.isArray || _isArray;\\r\\n  var BIT32 = 4294967296;\\r\\n  var BIT24 = 16777216;\\r\\n\\r\\n  // storage class\\r\\n\\r\\n  var storage; // Array;\\r\\n\\r\\n  // generate classes\\r\\n\\r\\n  Uint64BE = factory(\\\"Uint64BE\\\", true, true);\\r\\n  Int64BE = factory(\\\"Int64BE\\\", true, false);\\r\\n  Uint64LE = factory(\\\"Uint64LE\\\", false, true);\\r\\n  Int64LE = factory(\\\"Int64LE\\\", false, false);\\r\\n\\r\\n  // class factory\\r\\n\\r\\n  function factory(name, bigendian, unsigned) {\\r\\n    var posH = bigendian ? 0 : 4;\\r\\n    var posL = bigendian ? 4 : 0;\\r\\n    var pos0 = bigendian ? 0 : 3;\\r\\n    var pos1 = bigendian ? 1 : 2;\\r\\n    var pos2 = bigendian ? 2 : 1;\\r\\n    var pos3 = bigendian ? 3 : 0;\\r\\n    var fromPositive = bigendian ? fromPositiveBE : fromPositiveLE;\\r\\n    var fromNegative = bigendian ? fromNegativeBE : fromNegativeLE;\\r\\n    var proto = Int64.prototype;\\r\\n    var isName = \\\"is\\\" + name;\\r\\n    var _isInt64 = \\\"_\\\" + isName;\\r\\n\\r\\n    // properties\\r\\n    proto.buffer = void 0;\\r\\n    proto.offset = 0;\\r\\n    proto[_isInt64] = true;\\r\\n\\r\\n    // methods\\r\\n    proto.toNumber = toNumber;\\r\\n    proto.toString = toString;\\r\\n    proto.toJSON = toNumber;\\r\\n    proto.toArray = toArray;\\r\\n\\r\\n    // add .toBuffer() method only when Buffer available\\r\\n    if (BUFFER) proto.toBuffer = toBuffer;\\r\\n\\r\\n    // add .toArrayBuffer() method only when Uint8Array available\\r\\n    if (UINT8ARRAY) proto.toArrayBuffer = toArrayBuffer;\\r\\n\\r\\n    // isUint64BE, isInt64BE\\r\\n    Int64[isName] = isInt64;\\r\\n\\r\\n    // CommonJS\\r\\n    exports[name] = Int64;\\r\\n\\r\\n    return Int64;\\r\\n\\r\\n    // constructor\\r\\n    function Int64(buffer, offset, value, raddix) {\\r\\n      if (!(this instanceof Int64)) return new Int64(buffer, offset, value, raddix);\\r\\n      return init(this, buffer, offset, value, raddix);\\r\\n    }\\r\\n\\r\\n    // isUint64BE, isInt64BE\\r\\n    function isInt64(b) {\\r\\n      return !!(b && b[_isInt64]);\\r\\n    }\\r\\n\\r\\n    // initializer\\r\\n    function init(that, buffer, offset, value, raddix) {\\r\\n      if (UINT8ARRAY && ARRAYBUFFER) {\\r\\n        if (buffer instanceof ARRAYBUFFER) buffer = new UINT8ARRAY(buffer);\\r\\n        if (value instanceof ARRAYBUFFER) value = new UINT8ARRAY(value);\\r\\n      }\\r\\n\\r\\n      // Int64BE() style\\r\\n      if (!buffer && !offset && !value && !storage) {\\r\\n        // shortcut to initialize with zero\\r\\n        that.buffer = newArray(ZERO, 0);\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      // Int64BE(value, raddix) style\\r\\n      if (!isValidBuffer(buffer, offset)) {\\r\\n        var _storage = storage || Array;\\r\\n        raddix = offset;\\r\\n        value = buffer;\\r\\n        offset = 0;\\r\\n        buffer = new _storage(8);\\r\\n      }\\r\\n\\r\\n      that.buffer = buffer;\\r\\n      that.offset = offset |= 0;\\r\\n\\r\\n      // Int64BE(buffer, offset) style\\r\\n      if (UNDEFINED === typeof value) return;\\r\\n\\r\\n      // Int64BE(buffer, offset, value, raddix) style\\r\\n      if (\\\"string\\\" === typeof value) {\\r\\n        fromString(buffer, offset, value, raddix || 10);\\r\\n      } else if (isValidBuffer(value, raddix)) {\\r\\n        fromArray(buffer, offset, value, raddix);\\r\\n      } else if (\\\"number\\\" === typeof raddix) {\\r\\n        writeInt32(buffer, offset + posH, value); // high\\r\\n        writeInt32(buffer, offset + posL, raddix); // low\\r\\n      } else if (value > 0) {\\r\\n        fromPositive(buffer, offset, value); // positive\\r\\n      } else if (value < 0) {\\r\\n        fromNegative(buffer, offset, value); // negative\\r\\n      } else {\\r\\n        fromArray(buffer, offset, ZERO, 0); // zero, NaN and others\\r\\n      }\\r\\n    }\\r\\n\\r\\n    function fromString(buffer, offset, str, raddix) {\\r\\n      var pos = 0;\\r\\n      var len = str.length;\\r\\n      var high = 0;\\r\\n      var low = 0;\\r\\n      if (str[0] === \\\"-\\\") pos++;\\r\\n      var sign = pos;\\r\\n      while (pos < len) {\\r\\n        var chr = parseInt(str[pos++], raddix);\\r\\n        if (!(chr >= 0)) break; // NaN\\r\\n        low = low * raddix + chr;\\r\\n        high = high * raddix + Math.floor(low / BIT32);\\r\\n        low %= BIT32;\\r\\n      }\\r\\n      if (sign) {\\r\\n        high = ~high;\\r\\n        if (low) {\\r\\n          low = BIT32 - low;\\r\\n        } else {\\r\\n          high++;\\r\\n        }\\r\\n      }\\r\\n      writeInt32(buffer, offset + posH, high);\\r\\n      writeInt32(buffer, offset + posL, low);\\r\\n    }\\r\\n\\r\\n    function toNumber() {\\r\\n      var buffer = this.buffer;\\r\\n      var offset = this.offset;\\r\\n      var high = readInt32(buffer, offset + posH);\\r\\n      var low = readInt32(buffer, offset + posL);\\r\\n      if (!unsigned) high |= 0; // a trick to get signed\\r\\n      return high ? (high * BIT32 + low) : low;\\r\\n    }\\r\\n\\r\\n    function toString(radix) {\\r\\n      var buffer = this.buffer;\\r\\n      var offset = this.offset;\\r\\n      var high = readInt32(buffer, offset + posH);\\r\\n      var low = readInt32(buffer, offset + posL);\\r\\n      var str = \\\"\\\";\\r\\n      var sign = !unsigned && (high & 0x80000000);\\r\\n      if (sign) {\\r\\n        high = ~high;\\r\\n        low = BIT32 - low;\\r\\n      }\\r\\n      radix = radix || 10;\\r\\n      while (1) {\\r\\n        var mod = (high % radix) * BIT32 + low;\\r\\n        high = Math.floor(high / radix);\\r\\n        low = Math.floor(mod / radix);\\r\\n        str = (mod % radix).toString(radix) + str;\\r\\n        if (!high && !low) break;\\r\\n      }\\r\\n      if (sign) {\\r\\n        str = \\\"-\\\" + str;\\r\\n      }\\r\\n      return str;\\r\\n    }\\r\\n\\r\\n    function writeInt32(buffer, offset, value) {\\r\\n      buffer[offset + pos3] = value & 255;\\r\\n      value = value >> 8;\\r\\n      buffer[offset + pos2] = value & 255;\\r\\n      value = value >> 8;\\r\\n      buffer[offset + pos1] = value & 255;\\r\\n      value = value >> 8;\\r\\n      buffer[offset + pos0] = value & 255;\\r\\n    }\\r\\n\\r\\n    function readInt32(buffer, offset) {\\r\\n      return (buffer[offset + pos0] * BIT24) +\\r\\n        (buffer[offset + pos1] << 16) +\\r\\n        (buffer[offset + pos2] << 8) +\\r\\n        buffer[offset + pos3];\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function toArray(raw) {\\r\\n    var buffer = this.buffer;\\r\\n    var offset = this.offset;\\r\\n    storage = null; // Array\\r\\n    if (raw !== false && offset === 0 && buffer.length === 8 && isArray(buffer)) return buffer;\\r\\n    return newArray(buffer, offset);\\r\\n  }\\r\\n\\r\\n  function toBuffer(raw) {\\r\\n    var buffer = this.buffer;\\r\\n    var offset = this.offset;\\r\\n    storage = BUFFER;\\r\\n    if (raw !== false && offset === 0 && buffer.length === 8 && Buffer.isBuffer(buffer)) return buffer;\\r\\n    var dest = new BUFFER(8);\\r\\n    fromArray(dest, 0, buffer, offset);\\r\\n    return dest;\\r\\n  }\\r\\n\\r\\n  function toArrayBuffer(raw) {\\r\\n    var buffer = this.buffer;\\r\\n    var offset = this.offset;\\r\\n    var arrbuf = buffer.buffer;\\r\\n    storage = UINT8ARRAY;\\r\\n    if (raw !== false && offset === 0 && (arrbuf instanceof ARRAYBUFFER) && arrbuf.byteLength === 8) return arrbuf;\\r\\n    var dest = new UINT8ARRAY(8);\\r\\n    fromArray(dest, 0, buffer, offset);\\r\\n    return dest.buffer;\\r\\n  }\\r\\n\\r\\n  function isValidBuffer(buffer, offset) {\\r\\n    var len = buffer && buffer.length;\\r\\n    offset |= 0;\\r\\n    return len && (offset + 8 <= len) && (\\\"string\\\" !== typeof buffer[offset]);\\r\\n  }\\r\\n\\r\\n  function fromArray(destbuf, destoff, srcbuf, srcoff) {\\r\\n    destoff |= 0;\\r\\n    srcoff |= 0;\\r\\n    for (var i = 0; i < 8; i++) {\\r\\n      destbuf[destoff++] = srcbuf[srcoff++] & 255;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function newArray(buffer, offset) {\\r\\n    return Array.prototype.slice.call(buffer, offset, offset + 8);\\r\\n  }\\r\\n\\r\\n  function fromPositiveBE(buffer, offset, value) {\\r\\n    var pos = offset + 8;\\r\\n    while (pos > offset) {\\r\\n      buffer[--pos] = value & 255;\\r\\n      value /= 256;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function fromNegativeBE(buffer, offset, value) {\\r\\n    var pos = offset + 8;\\r\\n    value++;\\r\\n    while (pos > offset) {\\r\\n      buffer[--pos] = ((-value) & 255) ^ 255;\\r\\n      value /= 256;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function fromPositiveLE(buffer, offset, value) {\\r\\n    var end = offset + 8;\\r\\n    while (offset < end) {\\r\\n      buffer[offset++] = value & 255;\\r\\n      value /= 256;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function fromNegativeLE(buffer, offset, value) {\\r\\n    var end = offset + 8;\\r\\n    value++;\\r\\n    while (offset < end) {\\r\\n      buffer[offset++] = ((-value) & 255) ^ 255;\\r\\n      value /= 256;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  // https://github.com/retrofox/is-array\\r\\n  function _isArray(val) {\\r\\n    return !!val && \\\"[object Array]\\\" == Object.prototype.toString.call(val);\\r\\n  }\\r\\n\\r\\n}(typeof exports === 'object' && typeof exports.nodeName !== 'string' ? exports : (this || {}));\\r\\n\\r\\n}).call(this,require(\\\"buffer\\\").Buffer)\\r\\n},{\\\"buffer\\\":35}],5:[function(require,module,exports){\\r\\nvar toString = {}.toString;\\r\\n\\r\\nmodule.exports = Array.isArray || function (arr) {\\r\\n  return toString.call(arr) == '[object Array]';\\r\\n};\\r\\n\\r\\n},{}],6:[function(require,module,exports){\\r\\n// browser.js\\r\\n\\r\\nexports.encode = require(\\\"./encode\\\").encode;\\r\\nexports.decode = require(\\\"./decode\\\").decode;\\r\\n\\r\\nexports.Encoder = require(\\\"./encoder\\\").Encoder;\\r\\nexports.Decoder = require(\\\"./decoder\\\").Decoder;\\r\\n\\r\\nexports.createCodec = require(\\\"./ext\\\").createCodec;\\r\\nexports.codec = require(\\\"./codec\\\").codec;\\r\\n\\r\\n},{\\\"./codec\\\":15,\\\"./decode\\\":17,\\\"./decoder\\\":18,\\\"./encode\\\":20,\\\"./encoder\\\":21,\\\"./ext\\\":25}],7:[function(require,module,exports){\\r\\n(function (Buffer){\\r\\n/* globals Buffer */\\r\\n\\r\\nmodule.exports =\\r\\n  c((\\\"undefined\\\" !== typeof Buffer) && Buffer) ||\\r\\n  c(this.Buffer) ||\\r\\n  c((\\\"undefined\\\" !== typeof window) && window.Buffer) ||\\r\\n  this.Buffer;\\r\\n\\r\\nfunction c(B) {\\r\\n  return B && B.isBuffer && B;\\r\\n}\\r\\n}).call(this,require(\\\"buffer\\\").Buffer)\\r\\n},{\\\"buffer\\\":35}],8:[function(require,module,exports){\\r\\n// buffer-lite.js\\r\\n\\r\\nvar MAXBUFLEN = 8192;\\r\\n\\r\\nexports.copy = copy;\\r\\nexports.toString = toString;\\r\\nexports.write = write;\\r\\n\\r\\n/**\\r\\n * Buffer.prototype.write()\\r\\n *\\r\\n * @param string {String}\\r\\n * @param [offset] {Number}\\r\\n * @returns {Number}\\r\\n */\\r\\n\\r\\nfunction write(string, offset) {\\r\\n  var buffer = this;\\r\\n  var index = offset || (offset |= 0);\\r\\n  var length = string.length;\\r\\n  var chr = 0;\\r\\n  var i = 0;\\r\\n  while (i < length) {\\r\\n    chr = string.charCodeAt(i++);\\r\\n\\r\\n    if (chr < 128) {\\r\\n      buffer[index++] = chr;\\r\\n    } else if (chr < 0x800) {\\r\\n      // 2 bytes\\r\\n      buffer[index++] = 0xC0 | (chr >>> 6);\\r\\n      buffer[index++] = 0x80 | (chr & 0x3F);\\r\\n    } else if (chr < 0xD800 || chr > 0xDFFF) {\\r\\n      // 3 bytes\\r\\n      buffer[index++] = 0xE0 | (chr  >>> 12);\\r\\n      buffer[index++] = 0x80 | ((chr >>> 6)  & 0x3F);\\r\\n      buffer[index++] = 0x80 | (chr          & 0x3F);\\r\\n    } else {\\r\\n      // 4 bytes - surrogate pair\\r\\n      chr = (((chr - 0xD800) << 10) | (string.charCodeAt(i++) - 0xDC00)) + 0x10000;\\r\\n      buffer[index++] = 0xF0 | (chr >>> 18);\\r\\n      buffer[index++] = 0x80 | ((chr >>> 12) & 0x3F);\\r\\n      buffer[index++] = 0x80 | ((chr >>> 6)  & 0x3F);\\r\\n      buffer[index++] = 0x80 | (chr          & 0x3F);\\r\\n    }\\r\\n  }\\r\\n  return index - offset;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Buffer.prototype.toString()\\r\\n *\\r\\n * @param [encoding] {String} ignored\\r\\n * @param [start] {Number}\\r\\n * @param [end] {Number}\\r\\n * @returns {String}\\r\\n */\\r\\n\\r\\nfunction toString(encoding, start, end) {\\r\\n  var buffer = this;\\r\\n  var index = start|0;\\r\\n  if (!end) end = buffer.length;\\r\\n  var string = '';\\r\\n  var chr = 0;\\r\\n\\r\\n  while (index < end) {\\r\\n    chr = buffer[index++];\\r\\n    if (chr < 128) {\\r\\n      string += String.fromCharCode(chr);\\r\\n      continue;\\r\\n    }\\r\\n\\r\\n    if ((chr & 0xE0) === 0xC0) {\\r\\n      // 2 bytes\\r\\n      chr = (chr & 0x1F) << 6 |\\r\\n            (buffer[index++] & 0x3F);\\r\\n\\r\\n    } else if ((chr & 0xF0) === 0xE0) {\\r\\n      // 3 bytes\\r\\n      chr = (chr & 0x0F)             << 12 |\\r\\n            (buffer[index++] & 0x3F) << 6  |\\r\\n            (buffer[index++] & 0x3F);\\r\\n\\r\\n    } else if ((chr & 0xF8) === 0xF0) {\\r\\n      // 4 bytes\\r\\n      chr = (chr & 0x07)             << 18 |\\r\\n            (buffer[index++] & 0x3F) << 12 |\\r\\n            (buffer[index++] & 0x3F) << 6  |\\r\\n            (buffer[index++] & 0x3F);\\r\\n    }\\r\\n\\r\\n    if (chr >= 0x010000) {\\r\\n      // A surrogate pair\\r\\n      chr -= 0x010000;\\r\\n\\r\\n      string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\\r\\n    } else {\\r\\n      string += String.fromCharCode(chr);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return string;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Buffer.prototype.copy()\\r\\n *\\r\\n * @param target {Buffer}\\r\\n * @param [targetStart] {Number}\\r\\n * @param [start] {Number}\\r\\n * @param [end] {Number}\\r\\n * @returns {number}\\r\\n */\\r\\n\\r\\nfunction copy(target, targetStart, start, end) {\\r\\n  var i;\\r\\n  if (!start) start = 0;\\r\\n  if (!end && end !== 0) end = this.length;\\r\\n  if (!targetStart) targetStart = 0;\\r\\n  var len = end - start;\\r\\n\\r\\n  if (target === this && start < targetStart && targetStart < end) {\\r\\n    // descending\\r\\n    for (i = len - 1; i >= 0; i--) {\\r\\n      target[i + targetStart] = this[i + start];\\r\\n    }\\r\\n  } else {\\r\\n    // ascending\\r\\n    for (i = 0; i < len; i++) {\\r\\n      target[i + targetStart] = this[i + start];\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return len;\\r\\n}\\r\\n\\r\\n},{}],9:[function(require,module,exports){\\r\\n// bufferish-array.js\\r\\n\\r\\nvar Bufferish = require(\\\"./bufferish\\\");\\r\\n\\r\\nvar exports = module.exports = alloc(0);\\r\\n\\r\\nexports.alloc = alloc;\\r\\nexports.concat = Bufferish.concat;\\r\\nexports.from = from;\\r\\n\\r\\n/**\\r\\n * @param size {Number}\\r\\n * @returns {Buffer|Uint8Array|Array}\\r\\n */\\r\\n\\r\\nfunction alloc(size) {\\r\\n  return new Array(size);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @param value {Array|ArrayBuffer|Buffer|String}\\r\\n * @returns {Array}\\r\\n */\\r\\n\\r\\nfunction from(value) {\\r\\n  if (!Bufferish.isBuffer(value) && Bufferish.isView(value)) {\\r\\n    // TypedArray to Uint8Array\\r\\n    value = Bufferish.Uint8Array.from(value);\\r\\n  } else if (Bufferish.isArrayBuffer(value)) {\\r\\n    // ArrayBuffer to Uint8Array\\r\\n    value = new Uint8Array(value);\\r\\n  } else if (typeof value === \\\"string\\\") {\\r\\n    // String to Array\\r\\n    return Bufferish.from.call(exports, value);\\r\\n  } else if (typeof value === \\\"number\\\") {\\r\\n    throw new TypeError('\\\"value\\\" argument must not be a number');\\r\\n  }\\r\\n\\r\\n  // Array-like to Array\\r\\n  return Array.prototype.slice.call(value);\\r\\n}\\r\\n\\r\\n},{\\\"./bufferish\\\":13}],10:[function(require,module,exports){\\r\\n// bufferish-buffer.js\\r\\n\\r\\nvar Bufferish = require(\\\"./bufferish\\\");\\r\\nvar Buffer = Bufferish.global;\\r\\n\\r\\nvar exports = module.exports = Bufferish.hasBuffer ? alloc(0) : [];\\r\\n\\r\\nexports.alloc = Bufferish.hasBuffer && Buffer.alloc || alloc;\\r\\nexports.concat = Bufferish.concat;\\r\\nexports.from = from;\\r\\n\\r\\n/**\\r\\n * @param size {Number}\\r\\n * @returns {Buffer|Uint8Array|Array}\\r\\n */\\r\\n\\r\\nfunction alloc(size) {\\r\\n  return new Buffer(size);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @param value {Array|ArrayBuffer|Buffer|String}\\r\\n * @returns {Buffer}\\r\\n */\\r\\n\\r\\nfunction from(value) {\\r\\n  if (!Bufferish.isBuffer(value) && Bufferish.isView(value)) {\\r\\n    // TypedArray to Uint8Array\\r\\n    value = Bufferish.Uint8Array.from(value);\\r\\n  } else if (Bufferish.isArrayBuffer(value)) {\\r\\n    // ArrayBuffer to Uint8Array\\r\\n    value = new Uint8Array(value);\\r\\n  } else if (typeof value === \\\"string\\\") {\\r\\n    // String to Buffer\\r\\n    return Bufferish.from.call(exports, value);\\r\\n  } else if (typeof value === \\\"number\\\") {\\r\\n    throw new TypeError('\\\"value\\\" argument must not be a number');\\r\\n  }\\r\\n\\r\\n  // Array-like to Buffer\\r\\n  if (Buffer.from && Buffer.from.length !== 1) {\\r\\n    return Buffer.from(value); // node v6+\\r\\n  } else {\\r\\n    return new Buffer(value); // node v4\\r\\n  }\\r\\n}\\r\\n\\r\\n},{\\\"./bufferish\\\":13}],11:[function(require,module,exports){\\r\\n// bufferish-proto.js\\r\\n\\r\\n/* jshint eqnull:true */\\r\\n\\r\\nvar BufferLite = require(\\\"./buffer-lite\\\");\\r\\n\\r\\nexports.copy = copy;\\r\\nexports.slice = slice;\\r\\nexports.toString = toString;\\r\\nexports.write = gen(\\\"write\\\");\\r\\n\\r\\nvar Bufferish = require(\\\"./bufferish\\\");\\r\\nvar Buffer = Bufferish.global;\\r\\n\\r\\nvar isBufferShim = Bufferish.hasBuffer && (\\\"TYPED_ARRAY_SUPPORT\\\" in Buffer);\\r\\nvar brokenTypedArray = isBufferShim && !Buffer.TYPED_ARRAY_SUPPORT;\\r\\n\\r\\n/**\\r\\n * @param target {Buffer|Uint8Array|Array}\\r\\n * @param [targetStart] {Number}\\r\\n * @param [start] {Number}\\r\\n * @param [end] {Number}\\r\\n * @returns {Buffer|Uint8Array|Array}\\r\\n */\\r\\n\\r\\nfunction copy(target, targetStart, start, end) {\\r\\n  var thisIsBuffer = Bufferish.isBuffer(this);\\r\\n  var targetIsBuffer = Bufferish.isBuffer(target);\\r\\n  if (thisIsBuffer && targetIsBuffer) {\\r\\n    // Buffer to Buffer\\r\\n    return this.copy(target, targetStart, start, end);\\r\\n  } else if (!brokenTypedArray && !thisIsBuffer && !targetIsBuffer &&\\r\\n    Bufferish.isView(this) && Bufferish.isView(target)) {\\r\\n    // Uint8Array to Uint8Array (except for minor some browsers)\\r\\n    var buffer = (start || end != null) ? slice.call(this, start, end) : this;\\r\\n    target.set(buffer, targetStart);\\r\\n    return buffer.length;\\r\\n  } else {\\r\\n    // other cases\\r\\n    return BufferLite.copy.call(this, target, targetStart, start, end);\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @param [start] {Number}\\r\\n * @param [end] {Number}\\r\\n * @returns {Buffer|Uint8Array|Array}\\r\\n */\\r\\n\\r\\nfunction slice(start, end) {\\r\\n  // for Buffer, Uint8Array (except for minor some browsers) and Array\\r\\n  var f = this.slice || (!brokenTypedArray && this.subarray);\\r\\n  if (f) return f.call(this, start, end);\\r\\n\\r\\n  // Uint8Array (for minor some browsers)\\r\\n  var target = Bufferish.alloc.call(this, end - start);\\r\\n  copy.call(this, target, 0, start, end);\\r\\n  return target;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Buffer.prototype.toString()\\r\\n *\\r\\n * @param [encoding] {String} ignored\\r\\n * @param [start] {Number}\\r\\n * @param [end] {Number}\\r\\n * @returns {String}\\r\\n */\\r\\n\\r\\nfunction toString(encoding, start, end) {\\r\\n  var f = (!isBufferShim && Bufferish.isBuffer(this)) ? this.toString : BufferLite.toString;\\r\\n  return f.apply(this, arguments);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @private\\r\\n */\\r\\n\\r\\nfunction gen(method) {\\r\\n  return wrap;\\r\\n\\r\\n  function wrap() {\\r\\n    var f = this[method] || BufferLite[method];\\r\\n    return f.apply(this, arguments);\\r\\n  }\\r\\n}\\r\\n\\r\\n},{\\\"./buffer-lite\\\":8,\\\"./bufferish\\\":13}],12:[function(require,module,exports){\\r\\n// bufferish-uint8array.js\\r\\n\\r\\nvar Bufferish = require(\\\"./bufferish\\\");\\r\\n\\r\\nvar exports = module.exports = Bufferish.hasArrayBuffer ? alloc(0) : [];\\r\\n\\r\\nexports.alloc = alloc;\\r\\nexports.concat = Bufferish.concat;\\r\\nexports.from = from;\\r\\n\\r\\n/**\\r\\n * @param size {Number}\\r\\n * @returns {Buffer|Uint8Array|Array}\\r\\n */\\r\\n\\r\\nfunction alloc(size) {\\r\\n  return new Uint8Array(size);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @param value {Array|ArrayBuffer|Buffer|String}\\r\\n * @returns {Uint8Array}\\r\\n */\\r\\n\\r\\nfunction from(value) {\\r\\n  if (Bufferish.isView(value)) {\\r\\n    // TypedArray to ArrayBuffer\\r\\n    var byteOffset = value.byteOffset;\\r\\n    var byteLength = value.byteLength;\\r\\n    value = value.buffer;\\r\\n    if (value.byteLength !== byteLength) {\\r\\n      if (value.slice) {\\r\\n        value = value.slice(byteOffset, byteOffset + byteLength);\\r\\n      } else {\\r\\n        // Android 4.1 does not have ArrayBuffer.prototype.slice\\r\\n        value = new Uint8Array(value);\\r\\n        if (value.byteLength !== byteLength) {\\r\\n          // TypedArray to ArrayBuffer to Uint8Array to Array\\r\\n          value = Array.prototype.slice.call(value, byteOffset, byteOffset + byteLength);\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  } else if (typeof value === \\\"string\\\") {\\r\\n    // String to Uint8Array\\r\\n    return Bufferish.from.call(exports, value);\\r\\n  } else if (typeof value === \\\"number\\\") {\\r\\n    throw new TypeError('\\\"value\\\" argument must not be a number');\\r\\n  }\\r\\n\\r\\n  return new Uint8Array(value);\\r\\n}\\r\\n\\r\\n},{\\\"./bufferish\\\":13}],13:[function(require,module,exports){\\r\\n// bufferish.js\\r\\n\\r\\nvar Buffer = exports.global = require(\\\"./buffer-global\\\");\\r\\nvar hasBuffer = exports.hasBuffer = Buffer && !!Buffer.isBuffer;\\r\\nvar hasArrayBuffer = exports.hasArrayBuffer = (\\\"undefined\\\" !== typeof ArrayBuffer);\\r\\n\\r\\nvar isArray = exports.isArray = require(\\\"isarray\\\");\\r\\nexports.isArrayBuffer = hasArrayBuffer ? isArrayBuffer : _false;\\r\\nvar isBuffer = exports.isBuffer = hasBuffer ? Buffer.isBuffer : _false;\\r\\nvar isView = exports.isView = hasArrayBuffer ? (ArrayBuffer.isView || _is(\\\"ArrayBuffer\\\", \\\"buffer\\\")) : _false;\\r\\n\\r\\nexports.alloc = alloc;\\r\\nexports.concat = concat;\\r\\nexports.from = from;\\r\\n\\r\\nvar BufferArray = exports.Array = require(\\\"./bufferish-array\\\");\\r\\nvar BufferBuffer = exports.Buffer = require(\\\"./bufferish-buffer\\\");\\r\\nvar BufferUint8Array = exports.Uint8Array = require(\\\"./bufferish-uint8array\\\");\\r\\nvar BufferProto = exports.prototype = require(\\\"./bufferish-proto\\\");\\r\\n\\r\\n/**\\r\\n * @param value {Array|ArrayBuffer|Buffer|String}\\r\\n * @returns {Buffer|Uint8Array|Array}\\r\\n */\\r\\n\\r\\nfunction from(value) {\\r\\n  if (typeof value === \\\"string\\\") {\\r\\n    return fromString.call(this, value);\\r\\n  } else {\\r\\n    return auto(this).from(value);\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @param size {Number}\\r\\n * @returns {Buffer|Uint8Array|Array}\\r\\n */\\r\\n\\r\\nfunction alloc(size) {\\r\\n  return auto(this).alloc(size);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @param list {Array} array of (Buffer|Uint8Array|Array)s\\r\\n * @param [length]\\r\\n * @returns {Buffer|Uint8Array|Array}\\r\\n */\\r\\n\\r\\nfunction concat(list, length) {\\r\\n  if (!length) {\\r\\n    length = 0;\\r\\n    Array.prototype.forEach.call(list, dryrun);\\r\\n  }\\r\\n  var ref = (this !== exports) && this || list[0];\\r\\n  var result = alloc.call(ref, length);\\r\\n  var offset = 0;\\r\\n  Array.prototype.forEach.call(list, append);\\r\\n  return result;\\r\\n\\r\\n  function dryrun(buffer) {\\r\\n    length += buffer.length;\\r\\n  }\\r\\n\\r\\n  function append(buffer) {\\r\\n    offset += BufferProto.copy.call(buffer, result, offset);\\r\\n  }\\r\\n}\\r\\n\\r\\nvar _isArrayBuffer = _is(\\\"ArrayBuffer\\\");\\r\\n\\r\\nfunction isArrayBuffer(value) {\\r\\n  return (value instanceof ArrayBuffer) || _isArrayBuffer(value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @private\\r\\n */\\r\\n\\r\\nfunction fromString(value) {\\r\\n  var expected = value.length * 3;\\r\\n  var that = alloc.call(this, expected);\\r\\n  var actual = BufferProto.write.call(that, value);\\r\\n  if (expected !== actual) {\\r\\n    that = BufferProto.slice.call(that, 0, actual);\\r\\n  }\\r\\n  return that;\\r\\n}\\r\\n\\r\\nfunction auto(that) {\\r\\n  return isBuffer(that) ? BufferBuffer\\r\\n    : isView(that) ? BufferUint8Array\\r\\n    : isArray(that) ? BufferArray\\r\\n    : hasBuffer ? BufferBuffer\\r\\n    : hasArrayBuffer ? BufferUint8Array\\r\\n    : BufferArray;\\r\\n}\\r\\n\\r\\nfunction _false() {\\r\\n  return false;\\r\\n}\\r\\n\\r\\nfunction _is(name, key) {\\r\\n  /* jshint eqnull:true */\\r\\n  name = \\\"[object \\\" + name + \\\"]\\\";\\r\\n  return function(value) {\\r\\n    return (value != null) && {}.toString.call(key ? value[key] : value) === name;\\r\\n  };\\r\\n}\\r\\n},{\\\"./buffer-global\\\":7,\\\"./bufferish-array\\\":9,\\\"./bufferish-buffer\\\":10,\\\"./bufferish-proto\\\":11,\\\"./bufferish-uint8array\\\":12,\\\"isarray\\\":5}],14:[function(require,module,exports){\\r\\n// codec-base.js\\r\\n\\r\\nvar IS_ARRAY = require(\\\"isarray\\\");\\r\\n\\r\\nexports.createCodec = createCodec;\\r\\nexports.install = install;\\r\\nexports.filter = filter;\\r\\n\\r\\nvar Bufferish = require(\\\"./bufferish\\\");\\r\\n\\r\\nfunction Codec(options) {\\r\\n  if (!(this instanceof Codec)) return new Codec(options);\\r\\n  this.options = options;\\r\\n  this.init();\\r\\n}\\r\\n\\r\\nCodec.prototype.init = function() {\\r\\n  var options = this.options;\\r\\n\\r\\n  if (options && options.uint8array) {\\r\\n    this.bufferish = Bufferish.Uint8Array;\\r\\n  }\\r\\n\\r\\n  return this;\\r\\n};\\r\\n\\r\\nfunction install(props) {\\r\\n  for (var key in props) {\\r\\n    Codec.prototype[key] = add(Codec.prototype[key], props[key]);\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction add(a, b) {\\r\\n  return (a && b) ? ab : (a || b);\\r\\n\\r\\n  function ab() {\\r\\n    a.apply(this, arguments);\\r\\n    return b.apply(this, arguments);\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction join(filters) {\\r\\n  filters = filters.slice();\\r\\n\\r\\n  return function(value) {\\r\\n    return filters.reduce(iterator, value);\\r\\n  };\\r\\n\\r\\n  function iterator(value, filter) {\\r\\n    return filter(value);\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction filter(filter) {\\r\\n  return IS_ARRAY(filter) ? join(filter) : filter;\\r\\n}\\r\\n\\r\\n// @public\\r\\n// msgpack.createCodec()\\r\\n\\r\\nfunction createCodec(options) {\\r\\n  return new Codec(options);\\r\\n}\\r\\n\\r\\n// default shared codec\\r\\n\\r\\nexports.preset = createCodec({preset: true});\\r\\n\\r\\n},{\\\"./bufferish\\\":13,\\\"isarray\\\":5}],15:[function(require,module,exports){\\r\\n// codec.js\\r\\n\\r\\n// load both interfaces\\r\\nrequire(\\\"./read-core\\\");\\r\\nrequire(\\\"./write-core\\\");\\r\\n\\r\\n// @public\\r\\n// msgpack.codec.preset\\r\\n\\r\\nexports.codec = {\\r\\n  preset: require(\\\"./codec-base\\\").preset\\r\\n};\\r\\n\\r\\n},{\\\"./codec-base\\\":14,\\\"./read-core\\\":27,\\\"./write-core\\\":30}],16:[function(require,module,exports){\\r\\n// decode-buffer.js\\r\\n\\r\\nexports.DecodeBuffer = DecodeBuffer;\\r\\n\\r\\nvar preset = require(\\\"./read-core\\\").preset;\\r\\n\\r\\nvar FlexDecoder = require(\\\"./flex-buffer\\\").FlexDecoder;\\r\\n\\r\\nFlexDecoder.mixin(DecodeBuffer.prototype);\\r\\n\\r\\nfunction DecodeBuffer(options) {\\r\\n  if (!(this instanceof DecodeBuffer)) return new DecodeBuffer(options);\\r\\n\\r\\n  if (options) {\\r\\n    this.options = options;\\r\\n    if (options.codec) {\\r\\n      var codec = this.codec = options.codec;\\r\\n      if (codec.bufferish) this.bufferish = codec.bufferish;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\nDecodeBuffer.prototype.codec = preset;\\r\\n\\r\\nDecodeBuffer.prototype.fetch = function() {\\r\\n  return this.codec.decode(this);\\r\\n};\\r\\n\\r\\n},{\\\"./flex-buffer\\\":26,\\\"./read-core\\\":27}],17:[function(require,module,exports){\\r\\n// decode.js\\r\\n\\r\\nexports.decode = decode;\\r\\n\\r\\nvar DecodeBuffer = require(\\\"./decode-buffer\\\").DecodeBuffer;\\r\\n\\r\\nfunction decode(input, options) {\\r\\n  var decoder = new DecodeBuffer(options);\\r\\n  decoder.write(input);\\r\\n  return decoder.read();\\r\\n}\\r\\n},{\\\"./decode-buffer\\\":16}],18:[function(require,module,exports){\\r\\n// decoder.js\\r\\n\\r\\nexports.Decoder = Decoder;\\r\\n\\r\\nvar EventLite = require(\\\"event-lite\\\");\\r\\nvar DecodeBuffer = require(\\\"./decode-buffer\\\").DecodeBuffer;\\r\\n\\r\\nfunction Decoder(options) {\\r\\n  if (!(this instanceof Decoder)) return new Decoder(options);\\r\\n  DecodeBuffer.call(this, options);\\r\\n}\\r\\n\\r\\nDecoder.prototype = new DecodeBuffer();\\r\\n\\r\\nEventLite.mixin(Decoder.prototype);\\r\\n\\r\\nDecoder.prototype.decode = function(chunk) {\\r\\n  if (arguments.length) this.write(chunk);\\r\\n  this.flush();\\r\\n};\\r\\n\\r\\nDecoder.prototype.push = function(chunk) {\\r\\n  this.emit(\\\"data\\\", chunk);\\r\\n};\\r\\n\\r\\nDecoder.prototype.end = function(chunk) {\\r\\n  this.decode(chunk);\\r\\n  this.emit(\\\"end\\\");\\r\\n};\\r\\n\\r\\n},{\\\"./decode-buffer\\\":16,\\\"event-lite\\\":2}],19:[function(require,module,exports){\\r\\n// encode-buffer.js\\r\\n\\r\\nexports.EncodeBuffer = EncodeBuffer;\\r\\n\\r\\nvar preset = require(\\\"./write-core\\\").preset;\\r\\n\\r\\nvar FlexEncoder = require(\\\"./flex-buffer\\\").FlexEncoder;\\r\\n\\r\\nFlexEncoder.mixin(EncodeBuffer.prototype);\\r\\n\\r\\nfunction EncodeBuffer(options) {\\r\\n  if (!(this instanceof EncodeBuffer)) return new EncodeBuffer(options);\\r\\n\\r\\n  if (options) {\\r\\n    this.options = options;\\r\\n    if (options.codec) {\\r\\n      var codec = this.codec = options.codec;\\r\\n      if (codec.bufferish) this.bufferish = codec.bufferish;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\nEncodeBuffer.prototype.codec = preset;\\r\\n\\r\\nEncodeBuffer.prototype.write = function(input) {\\r\\n  this.codec.encode(this, input);\\r\\n};\\r\\n\\r\\n},{\\\"./flex-buffer\\\":26,\\\"./write-core\\\":30}],20:[function(require,module,exports){\\r\\n// encode.js\\r\\n\\r\\nexports.encode = encode;\\r\\n\\r\\nvar EncodeBuffer = require(\\\"./encode-buffer\\\").EncodeBuffer;\\r\\n\\r\\nfunction encode(input, options) {\\r\\n  var encoder = new EncodeBuffer(options);\\r\\n  encoder.write(input);\\r\\n  return encoder.read();\\r\\n}\\r\\n\\r\\n},{\\\"./encode-buffer\\\":19}],21:[function(require,module,exports){\\r\\n// encoder.js\\r\\n\\r\\nexports.Encoder = Encoder;\\r\\n\\r\\nvar EventLite = require(\\\"event-lite\\\");\\r\\nvar EncodeBuffer = require(\\\"./encode-buffer\\\").EncodeBuffer;\\r\\n\\r\\nfunction Encoder(options) {\\r\\n  if (!(this instanceof Encoder)) return new Encoder(options);\\r\\n  EncodeBuffer.call(this, options);\\r\\n}\\r\\n\\r\\nEncoder.prototype = new EncodeBuffer();\\r\\n\\r\\nEventLite.mixin(Encoder.prototype);\\r\\n\\r\\nEncoder.prototype.encode = function(chunk) {\\r\\n  this.write(chunk);\\r\\n  this.emit(\\\"data\\\", this.read());\\r\\n};\\r\\n\\r\\nEncoder.prototype.end = function(chunk) {\\r\\n  if (arguments.length) this.encode(chunk);\\r\\n  this.flush();\\r\\n  this.emit(\\\"end\\\");\\r\\n};\\r\\n\\r\\n},{\\\"./encode-buffer\\\":19,\\\"event-lite\\\":2}],22:[function(require,module,exports){\\r\\n// ext-buffer.js\\r\\n\\r\\nexports.ExtBuffer = ExtBuffer;\\r\\n\\r\\nvar Bufferish = require(\\\"./bufferish\\\");\\r\\n\\r\\nfunction ExtBuffer(buffer, type) {\\r\\n  if (!(this instanceof ExtBuffer)) return new ExtBuffer(buffer, type);\\r\\n  this.buffer = Bufferish.from(buffer);\\r\\n  this.type = type;\\r\\n}\\r\\n\\r\\n},{\\\"./bufferish\\\":13}],23:[function(require,module,exports){\\r\\n// ext-packer.js\\r\\n\\r\\nexports.setExtPackers = setExtPackers;\\r\\n\\r\\nvar Bufferish = require(\\\"./bufferish\\\");\\r\\nvar Buffer = Bufferish.global;\\r\\nvar packTypedArray = Bufferish.Uint8Array.from;\\r\\nvar _encode;\\r\\n\\r\\nvar ERROR_COLUMNS = {name: 1, message: 1, stack: 1, columnNumber: 1, fileName: 1, lineNumber: 1};\\r\\n\\r\\nfunction setExtPackers(codec) {\\r\\n  codec.addExtPacker(0x0E, Error, [packError, encode]);\\r\\n  codec.addExtPacker(0x01, EvalError, [packError, encode]);\\r\\n  codec.addExtPacker(0x02, RangeError, [packError, encode]);\\r\\n  codec.addExtPacker(0x03, ReferenceError, [packError, encode]);\\r\\n  codec.addExtPacker(0x04, SyntaxError, [packError, encode]);\\r\\n  codec.addExtPacker(0x05, TypeError, [packError, encode]);\\r\\n  codec.addExtPacker(0x06, URIError, [packError, encode]);\\r\\n\\r\\n  codec.addExtPacker(0x0A, RegExp, [packRegExp, encode]);\\r\\n  codec.addExtPacker(0x0B, Boolean, [packValueOf, encode]);\\r\\n  codec.addExtPacker(0x0C, String, [packValueOf, encode]);\\r\\n  codec.addExtPacker(0x0D, Date, [Number, encode]);\\r\\n  codec.addExtPacker(0x0F, Number, [packValueOf, encode]);\\r\\n\\r\\n  if (\\\"undefined\\\" !== typeof Uint8Array) {\\r\\n    codec.addExtPacker(0x11, Int8Array, packTypedArray);\\r\\n    codec.addExtPacker(0x12, Uint8Array, packTypedArray);\\r\\n    codec.addExtPacker(0x13, Int16Array, packTypedArray);\\r\\n    codec.addExtPacker(0x14, Uint16Array, packTypedArray);\\r\\n    codec.addExtPacker(0x15, Int32Array, packTypedArray);\\r\\n    codec.addExtPacker(0x16, Uint32Array, packTypedArray);\\r\\n    codec.addExtPacker(0x17, Float32Array, packTypedArray);\\r\\n\\r\\n    // PhantomJS/1.9.7 doesn't have Float64Array\\r\\n    if (\\\"undefined\\\" !== typeof Float64Array) {\\r\\n      codec.addExtPacker(0x18, Float64Array, packTypedArray);\\r\\n    }\\r\\n\\r\\n    // IE10 doesn't have Uint8ClampedArray\\r\\n    if (\\\"undefined\\\" !== typeof Uint8ClampedArray) {\\r\\n      codec.addExtPacker(0x19, Uint8ClampedArray, packTypedArray);\\r\\n    }\\r\\n\\r\\n    codec.addExtPacker(0x1A, ArrayBuffer, packTypedArray);\\r\\n    codec.addExtPacker(0x1D, DataView, packTypedArray);\\r\\n  }\\r\\n\\r\\n  if (Bufferish.hasBuffer) {\\r\\n    codec.addExtPacker(0x1B, Buffer, Bufferish.from);\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction encode(input) {\\r\\n  if (!_encode) _encode = require(\\\"./encode\\\").encode; // lazy load\\r\\n  return _encode(input);\\r\\n}\\r\\n\\r\\nfunction packValueOf(value) {\\r\\n  return (value).valueOf();\\r\\n}\\r\\n\\r\\nfunction packRegExp(value) {\\r\\n  value = RegExp.prototype.toString.call(value).split(\\\"/\\\");\\r\\n  value.shift();\\r\\n  var out = [value.pop()];\\r\\n  out.unshift(value.join(\\\"/\\\"));\\r\\n  return out;\\r\\n}\\r\\n\\r\\nfunction packError(value) {\\r\\n  var out = {};\\r\\n  for (var key in ERROR_COLUMNS) {\\r\\n    out[key] = value[key];\\r\\n  }\\r\\n  return out;\\r\\n}\\r\\n\\r\\n},{\\\"./bufferish\\\":13,\\\"./encode\\\":20}],24:[function(require,module,exports){\\r\\n// ext-unpacker.js\\r\\n\\r\\nexports.setExtUnpackers = setExtUnpackers;\\r\\n\\r\\nvar Bufferish = require(\\\"./bufferish\\\");\\r\\nvar Buffer = Bufferish.global;\\r\\nvar _decode;\\r\\n\\r\\nvar ERROR_COLUMNS = {name: 1, message: 1, stack: 1, columnNumber: 1, fileName: 1, lineNumber: 1};\\r\\n\\r\\nfunction setExtUnpackers(codec) {\\r\\n  codec.addExtUnpacker(0x0E, [decode, unpackError(Error)]);\\r\\n  codec.addExtUnpacker(0x01, [decode, unpackError(EvalError)]);\\r\\n  codec.addExtUnpacker(0x02, [decode, unpackError(RangeError)]);\\r\\n  codec.addExtUnpacker(0x03, [decode, unpackError(ReferenceError)]);\\r\\n  codec.addExtUnpacker(0x04, [decode, unpackError(SyntaxError)]);\\r\\n  codec.addExtUnpacker(0x05, [decode, unpackError(TypeError)]);\\r\\n  codec.addExtUnpacker(0x06, [decode, unpackError(URIError)]);\\r\\n\\r\\n  codec.addExtUnpacker(0x0A, [decode, unpackRegExp]);\\r\\n  codec.addExtUnpacker(0x0B, [decode, unpackClass(Boolean)]);\\r\\n  codec.addExtUnpacker(0x0C, [decode, unpackClass(String)]);\\r\\n  codec.addExtUnpacker(0x0D, [decode, unpackClass(Date)]);\\r\\n  codec.addExtUnpacker(0x0F, [decode, unpackClass(Number)]);\\r\\n\\r\\n  if (\\\"undefined\\\" !== typeof Uint8Array) {\\r\\n    codec.addExtUnpacker(0x11, unpackClass(Int8Array));\\r\\n    codec.addExtUnpacker(0x12, unpackClass(Uint8Array));\\r\\n    codec.addExtUnpacker(0x13, [unpackArrayBuffer, unpackClass(Int16Array)]);\\r\\n    codec.addExtUnpacker(0x14, [unpackArrayBuffer, unpackClass(Uint16Array)]);\\r\\n    codec.addExtUnpacker(0x15, [unpackArrayBuffer, unpackClass(Int32Array)]);\\r\\n    codec.addExtUnpacker(0x16, [unpackArrayBuffer, unpackClass(Uint32Array)]);\\r\\n    codec.addExtUnpacker(0x17, [unpackArrayBuffer, unpackClass(Float32Array)]);\\r\\n\\r\\n    // PhantomJS/1.9.7 doesn't have Float64Array\\r\\n    if (\\\"undefined\\\" !== typeof Float64Array) {\\r\\n      codec.addExtUnpacker(0x18, [unpackArrayBuffer, unpackClass(Float64Array)]);\\r\\n    }\\r\\n\\r\\n    // IE10 doesn't have Uint8ClampedArray\\r\\n    if (\\\"undefined\\\" !== typeof Uint8ClampedArray) {\\r\\n      codec.addExtUnpacker(0x19, unpackClass(Uint8ClampedArray));\\r\\n    }\\r\\n\\r\\n    codec.addExtUnpacker(0x1A, unpackArrayBuffer);\\r\\n    codec.addExtUnpacker(0x1D, [unpackArrayBuffer, unpackClass(DataView)]);\\r\\n  }\\r\\n\\r\\n  if (Bufferish.hasBuffer) {\\r\\n    codec.addExtUnpacker(0x1B, unpackClass(Buffer));\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction decode(input) {\\r\\n  if (!_decode) _decode = require(\\\"./decode\\\").decode; // lazy load\\r\\n  return _decode(input);\\r\\n}\\r\\n\\r\\nfunction unpackRegExp(value) {\\r\\n  return RegExp.apply(null, value);\\r\\n}\\r\\n\\r\\nfunction unpackError(Class) {\\r\\n  return function(value) {\\r\\n    var out = new Class();\\r\\n    for (var key in ERROR_COLUMNS) {\\r\\n      out[key] = value[key];\\r\\n    }\\r\\n    return out;\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction unpackClass(Class) {\\r\\n  return function(value) {\\r\\n    return new Class(value);\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction unpackArrayBuffer(value) {\\r\\n  return (new Uint8Array(value)).buffer;\\r\\n}\\r\\n\\r\\n},{\\\"./bufferish\\\":13,\\\"./decode\\\":17}],25:[function(require,module,exports){\\r\\n// ext.js\\r\\n\\r\\n// load both interfaces\\r\\nrequire(\\\"./read-core\\\");\\r\\nrequire(\\\"./write-core\\\");\\r\\n\\r\\nexports.createCodec = require(\\\"./codec-base\\\").createCodec;\\r\\n\\r\\n},{\\\"./codec-base\\\":14,\\\"./read-core\\\":27,\\\"./write-core\\\":30}],26:[function(require,module,exports){\\r\\n// flex-buffer.js\\r\\n\\r\\nexports.FlexDecoder = FlexDecoder;\\r\\nexports.FlexEncoder = FlexEncoder;\\r\\n\\r\\nvar Bufferish = require(\\\"./bufferish\\\");\\r\\n\\r\\nvar MIN_BUFFER_SIZE = 2048;\\r\\nvar MAX_BUFFER_SIZE = 65536;\\r\\nvar BUFFER_SHORTAGE = \\\"BUFFER_SHORTAGE\\\";\\r\\n\\r\\nfunction FlexDecoder() {\\r\\n  if (!(this instanceof FlexDecoder)) return new FlexDecoder();\\r\\n}\\r\\n\\r\\nfunction FlexEncoder() {\\r\\n  if (!(this instanceof FlexEncoder)) return new FlexEncoder();\\r\\n}\\r\\n\\r\\nFlexDecoder.mixin = mixinFactory(getDecoderMethods());\\r\\nFlexDecoder.mixin(FlexDecoder.prototype);\\r\\n\\r\\nFlexEncoder.mixin = mixinFactory(getEncoderMethods());\\r\\nFlexEncoder.mixin(FlexEncoder.prototype);\\r\\n\\r\\nfunction getDecoderMethods() {\\r\\n  return {\\r\\n    bufferish: Bufferish,\\r\\n    write: write,\\r\\n    fetch: fetch,\\r\\n    flush: flush,\\r\\n    push: push,\\r\\n    pull: pull,\\r\\n    read: read,\\r\\n    reserve: reserve,\\r\\n    offset: 0\\r\\n  };\\r\\n\\r\\n  function write(chunk) {\\r\\n    var prev = this.offset ? Bufferish.prototype.slice.call(this.buffer, this.offset) : this.buffer;\\r\\n    this.buffer = prev ? (chunk ? this.bufferish.concat([prev, chunk]) : prev) : chunk;\\r\\n    this.offset = 0;\\r\\n  }\\r\\n\\r\\n  function flush() {\\r\\n    while (this.offset < this.buffer.length) {\\r\\n      var start = this.offset;\\r\\n      var value;\\r\\n      try {\\r\\n        value = this.fetch();\\r\\n      } catch (e) {\\r\\n        if (e && e.message != BUFFER_SHORTAGE) throw e;\\r\\n        // rollback\\r\\n        this.offset = start;\\r\\n        break;\\r\\n      }\\r\\n      this.push(value);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function reserve(length) {\\r\\n    var start = this.offset;\\r\\n    var end = start + length;\\r\\n    if (end > this.buffer.length) throw new Error(BUFFER_SHORTAGE);\\r\\n    this.offset = end;\\r\\n    return start;\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction getEncoderMethods() {\\r\\n  return {\\r\\n    bufferish: Bufferish,\\r\\n    write: write,\\r\\n    fetch: fetch,\\r\\n    flush: flush,\\r\\n    push: push,\\r\\n    pull: pull,\\r\\n    read: read,\\r\\n    reserve: reserve,\\r\\n    send: send,\\r\\n    maxBufferSize: MAX_BUFFER_SIZE,\\r\\n    minBufferSize: MIN_BUFFER_SIZE,\\r\\n    offset: 0,\\r\\n    start: 0\\r\\n  };\\r\\n\\r\\n  function fetch() {\\r\\n    var start = this.start;\\r\\n    if (start < this.offset) {\\r\\n      var end = this.start = this.offset;\\r\\n      return Bufferish.prototype.slice.call(this.buffer, start, end);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function flush() {\\r\\n    while (this.start < this.offset) {\\r\\n      var value = this.fetch();\\r\\n      if (value) this.push(value);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function pull() {\\r\\n    var buffers = this.buffers || (this.buffers = []);\\r\\n    var chunk = buffers.length > 1 ? this.bufferish.concat(buffers) : buffers[0];\\r\\n    buffers.length = 0; // buffer exhausted\\r\\n    return chunk;\\r\\n  }\\r\\n\\r\\n  function reserve(length) {\\r\\n    var req = length | 0;\\r\\n\\r\\n    if (this.buffer) {\\r\\n      var size = this.buffer.length;\\r\\n      var start = this.offset | 0;\\r\\n      var end = start + req;\\r\\n\\r\\n      // is it long enough?\\r\\n      if (end < size) {\\r\\n        this.offset = end;\\r\\n        return start;\\r\\n      }\\r\\n\\r\\n      // flush current buffer\\r\\n      this.flush();\\r\\n\\r\\n      // resize it to 2x current length\\r\\n      length = Math.max(length, Math.min(size * 2, this.maxBufferSize));\\r\\n    }\\r\\n\\r\\n    // minimum buffer size\\r\\n    length = Math.max(length, this.minBufferSize);\\r\\n\\r\\n    // allocate new buffer\\r\\n    this.buffer = this.bufferish.alloc(length);\\r\\n    this.start = 0;\\r\\n    this.offset = req;\\r\\n    return 0;\\r\\n  }\\r\\n\\r\\n  function send(buffer) {\\r\\n    var length = buffer.length;\\r\\n    if (length > this.minBufferSize) {\\r\\n      this.flush();\\r\\n      this.push(buffer);\\r\\n    } else {\\r\\n      var offset = this.reserve(length);\\r\\n      Bufferish.prototype.copy.call(buffer, this.buffer, offset);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n// common methods\\r\\n\\r\\nfunction write() {\\r\\n  throw new Error(\\\"method not implemented: write()\\\");\\r\\n}\\r\\n\\r\\nfunction fetch() {\\r\\n  throw new Error(\\\"method not implemented: fetch()\\\");\\r\\n}\\r\\n\\r\\nfunction read() {\\r\\n  var length = this.buffers && this.buffers.length;\\r\\n\\r\\n  // fetch the first result\\r\\n  if (!length) return this.fetch();\\r\\n\\r\\n  // flush current buffer\\r\\n  this.flush();\\r\\n\\r\\n  // read from the results\\r\\n  return this.pull();\\r\\n}\\r\\n\\r\\nfunction push(chunk) {\\r\\n  var buffers = this.buffers || (this.buffers = []);\\r\\n  buffers.push(chunk);\\r\\n}\\r\\n\\r\\nfunction pull() {\\r\\n  var buffers = this.buffers || (this.buffers = []);\\r\\n  return buffers.shift();\\r\\n}\\r\\n\\r\\nfunction mixinFactory(source) {\\r\\n  return mixin;\\r\\n\\r\\n  function mixin(target) {\\r\\n    for (var key in source) {\\r\\n      target[key] = source[key];\\r\\n    }\\r\\n    return target;\\r\\n  }\\r\\n}\\r\\n\\r\\n},{\\\"./bufferish\\\":13}],27:[function(require,module,exports){\\r\\n// read-core.js\\r\\n\\r\\nvar ExtBuffer = require(\\\"./ext-buffer\\\").ExtBuffer;\\r\\nvar ExtUnpacker = require(\\\"./ext-unpacker\\\");\\r\\nvar readUint8 = require(\\\"./read-format\\\").readUint8;\\r\\nvar ReadToken = require(\\\"./read-token\\\");\\r\\nvar CodecBase = require(\\\"./codec-base\\\");\\r\\n\\r\\nCodecBase.install({\\r\\n  addExtUnpacker: addExtUnpacker,\\r\\n  getExtUnpacker: getExtUnpacker,\\r\\n  init: init\\r\\n});\\r\\n\\r\\nexports.preset = init.call(CodecBase.preset);\\r\\n\\r\\nfunction getDecoder(options) {\\r\\n  var readToken = ReadToken.getReadToken(options);\\r\\n  return decode;\\r\\n\\r\\n  function decode(decoder) {\\r\\n    var type = readUint8(decoder);\\r\\n    var func = readToken[type];\\r\\n    if (!func) throw new Error(\\\"Invalid type: \\\" + (type ? (\\\"0x\\\" + type.toString(16)) : type));\\r\\n    return func(decoder);\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction init() {\\r\\n  var options = this.options;\\r\\n  this.decode = getDecoder(options);\\r\\n\\r\\n  if (options && options.preset) {\\r\\n    ExtUnpacker.setExtUnpackers(this);\\r\\n  }\\r\\n\\r\\n  return this;\\r\\n}\\r\\n\\r\\nfunction addExtUnpacker(etype, unpacker) {\\r\\n  var unpackers = this.extUnpackers || (this.extUnpackers = []);\\r\\n  unpackers[etype] = CodecBase.filter(unpacker);\\r\\n}\\r\\n\\r\\nfunction getExtUnpacker(type) {\\r\\n  var unpackers = this.extUnpackers || (this.extUnpackers = []);\\r\\n  return unpackers[type] || extUnpacker;\\r\\n\\r\\n  function extUnpacker(buffer) {\\r\\n    return new ExtBuffer(buffer, type);\\r\\n  }\\r\\n}\\r\\n\\r\\n},{\\\"./codec-base\\\":14,\\\"./ext-buffer\\\":22,\\\"./ext-unpacker\\\":24,\\\"./read-format\\\":28,\\\"./read-token\\\":29}],28:[function(require,module,exports){\\r\\n// read-format.js\\r\\n\\r\\nvar ieee754 = require(\\\"ieee754\\\");\\r\\nvar Int64Buffer = require(\\\"int64-buffer\\\");\\r\\nvar Uint64BE = Int64Buffer.Uint64BE;\\r\\nvar Int64BE = Int64Buffer.Int64BE;\\r\\n\\r\\nexports.getReadFormat = getReadFormat;\\r\\nexports.readUint8 = uint8;\\r\\n\\r\\nvar Bufferish = require(\\\"./bufferish\\\");\\r\\nvar BufferProto = require(\\\"./bufferish-proto\\\");\\r\\n\\r\\nvar HAS_MAP = (\\\"undefined\\\" !== typeof Map);\\r\\nvar NO_ASSERT = true;\\r\\n\\r\\nfunction getReadFormat(options) {\\r\\n  var binarraybuffer = Bufferish.hasArrayBuffer && options && options.binarraybuffer;\\r\\n  var int64 = options && options.int64;\\r\\n  var usemap = HAS_MAP && options && options.usemap;\\r\\n\\r\\n  var readFormat = {\\r\\n    map: (usemap ? map_to_map : map_to_obj),\\r\\n    array: array,\\r\\n    str: str,\\r\\n    bin: (binarraybuffer ? bin_arraybuffer : bin_buffer),\\r\\n    ext: ext,\\r\\n    uint8: uint8,\\r\\n    uint16: uint16,\\r\\n    uint32: uint32,\\r\\n    uint64: read(8, int64 ? readUInt64BE_int64 : readUInt64BE),\\r\\n    int8: int8,\\r\\n    int16: int16,\\r\\n    int32: int32,\\r\\n    int64: read(8, int64 ? readInt64BE_int64 : readInt64BE),\\r\\n    float32: read(4, readFloatBE),\\r\\n    float64: read(8, readDoubleBE)\\r\\n  };\\r\\n\\r\\n  return readFormat;\\r\\n}\\r\\n\\r\\nfunction map_to_obj(decoder, len) {\\r\\n  var value = {};\\r\\n  var i;\\r\\n  var k = new Array(len);\\r\\n  var v = new Array(len);\\r\\n\\r\\n  var decode = decoder.codec.decode;\\r\\n  for (i = 0; i < len; i++) {\\r\\n    k[i] = decode(decoder);\\r\\n    v[i] = decode(decoder);\\r\\n  }\\r\\n  for (i = 0; i < len; i++) {\\r\\n    value[k[i]] = v[i];\\r\\n  }\\r\\n  return value;\\r\\n}\\r\\n\\r\\nfunction map_to_map(decoder, len) {\\r\\n  var value = new Map();\\r\\n  var i;\\r\\n  var k = new Array(len);\\r\\n  var v = new Array(len);\\r\\n\\r\\n  var decode = decoder.codec.decode;\\r\\n  for (i = 0; i < len; i++) {\\r\\n    k[i] = decode(decoder);\\r\\n    v[i] = decode(decoder);\\r\\n  }\\r\\n  for (i = 0; i < len; i++) {\\r\\n    value.set(k[i], v[i]);\\r\\n  }\\r\\n  return value;\\r\\n}\\r\\n\\r\\nfunction array(decoder, len) {\\r\\n  var value = new Array(len);\\r\\n  var decode = decoder.codec.decode;\\r\\n  for (var i = 0; i < len; i++) {\\r\\n    value[i] = decode(decoder);\\r\\n  }\\r\\n  return value;\\r\\n}\\r\\n\\r\\nfunction str(decoder, len) {\\r\\n  var start = decoder.reserve(len);\\r\\n  var end = start + len;\\r\\n  return BufferProto.toString.call(decoder.buffer, \\\"utf-8\\\", start, end);\\r\\n}\\r\\n\\r\\nfunction bin_buffer(decoder, len) {\\r\\n  var start = decoder.reserve(len);\\r\\n  var end = start + len;\\r\\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\\r\\n  return Bufferish.from(buf);\\r\\n}\\r\\n\\r\\nfunction bin_arraybuffer(decoder, len) {\\r\\n  var start = decoder.reserve(len);\\r\\n  var end = start + len;\\r\\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\\r\\n  return Bufferish.Uint8Array.from(buf).buffer;\\r\\n}\\r\\n\\r\\nfunction ext(decoder, len) {\\r\\n  var start = decoder.reserve(len+1);\\r\\n  var type = decoder.buffer[start++];\\r\\n  var end = start + len;\\r\\n  var unpack = decoder.codec.getExtUnpacker(type);\\r\\n  if (!unpack) throw new Error(\\\"Invalid ext type: \\\" + (type ? (\\\"0x\\\" + type.toString(16)) : type));\\r\\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\\r\\n  return unpack(buf);\\r\\n}\\r\\n\\r\\nfunction uint8(decoder) {\\r\\n  var start = decoder.reserve(1);\\r\\n  return decoder.buffer[start];\\r\\n}\\r\\n\\r\\nfunction int8(decoder) {\\r\\n  var start = decoder.reserve(1);\\r\\n  var value = decoder.buffer[start];\\r\\n  return (value & 0x80) ? value - 0x100 : value;\\r\\n}\\r\\n\\r\\nfunction uint16(decoder) {\\r\\n  var start = decoder.reserve(2);\\r\\n  var buffer = decoder.buffer;\\r\\n  return (buffer[start++] << 8) | buffer[start];\\r\\n}\\r\\n\\r\\nfunction int16(decoder) {\\r\\n  var start = decoder.reserve(2);\\r\\n  var buffer = decoder.buffer;\\r\\n  var value = (buffer[start++] << 8) | buffer[start];\\r\\n  return (value & 0x8000) ? value - 0x10000 : value;\\r\\n}\\r\\n\\r\\nfunction uint32(decoder) {\\r\\n  var start = decoder.reserve(4);\\r\\n  var buffer = decoder.buffer;\\r\\n  return (buffer[start++] * 16777216) + (buffer[start++] << 16) + (buffer[start++] << 8) + buffer[start];\\r\\n}\\r\\n\\r\\nfunction int32(decoder) {\\r\\n  var start = decoder.reserve(4);\\r\\n  var buffer = decoder.buffer;\\r\\n  return (buffer[start++] << 24) | (buffer[start++] << 16) | (buffer[start++] << 8) | buffer[start];\\r\\n}\\r\\n\\r\\nfunction read(len, method) {\\r\\n  return function(decoder) {\\r\\n    var start = decoder.reserve(len);\\r\\n    return method.call(decoder.buffer, start, NO_ASSERT);\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction readUInt64BE(start) {\\r\\n  return new Uint64BE(this, start).toNumber();\\r\\n}\\r\\n\\r\\nfunction readInt64BE(start) {\\r\\n  return new Int64BE(this, start).toNumber();\\r\\n}\\r\\n\\r\\nfunction readUInt64BE_int64(start) {\\r\\n  return new Uint64BE(this, start);\\r\\n}\\r\\n\\r\\nfunction readInt64BE_int64(start) {\\r\\n  return new Int64BE(this, start);\\r\\n}\\r\\n\\r\\nfunction readFloatBE(start) {\\r\\n  return ieee754.read(this, start, false, 23, 4);\\r\\n}\\r\\n\\r\\nfunction readDoubleBE(start) {\\r\\n  return ieee754.read(this, start, false, 52, 8);\\r\\n}\\r\\n},{\\\"./bufferish\\\":13,\\\"./bufferish-proto\\\":11,\\\"ieee754\\\":3,\\\"int64-buffer\\\":4}],29:[function(require,module,exports){\\r\\n// read-token.js\\r\\n\\r\\nvar ReadFormat = require(\\\"./read-format\\\");\\r\\n\\r\\nexports.getReadToken = getReadToken;\\r\\n\\r\\nfunction getReadToken(options) {\\r\\n  var format = ReadFormat.getReadFormat(options);\\r\\n\\r\\n  if (options && options.useraw) {\\r\\n    return init_useraw(format);\\r\\n  } else {\\r\\n    return init_token(format);\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction init_token(format) {\\r\\n  var i;\\r\\n  var token = new Array(256);\\r\\n\\r\\n  // positive fixint -- 0x00 - 0x7f\\r\\n  for (i = 0x00; i <= 0x7f; i++) {\\r\\n    token[i] = constant(i);\\r\\n  }\\r\\n\\r\\n  // fixmap -- 0x80 - 0x8f\\r\\n  for (i = 0x80; i <= 0x8f; i++) {\\r\\n    token[i] = fix(i - 0x80, format.map);\\r\\n  }\\r\\n\\r\\n  // fixarray -- 0x90 - 0x9f\\r\\n  for (i = 0x90; i <= 0x9f; i++) {\\r\\n    token[i] = fix(i - 0x90, format.array);\\r\\n  }\\r\\n\\r\\n  // fixstr -- 0xa0 - 0xbf\\r\\n  for (i = 0xa0; i <= 0xbf; i++) {\\r\\n    token[i] = fix(i - 0xa0, format.str);\\r\\n  }\\r\\n\\r\\n  // nil -- 0xc0\\r\\n  token[0xc0] = constant(null);\\r\\n\\r\\n  // (never used) -- 0xc1\\r\\n  token[0xc1] = null;\\r\\n\\r\\n  // false -- 0xc2\\r\\n  // true -- 0xc3\\r\\n  token[0xc2] = constant(false);\\r\\n  token[0xc3] = constant(true);\\r\\n\\r\\n  // bin 8 -- 0xc4\\r\\n  // bin 16 -- 0xc5\\r\\n  // bin 32 -- 0xc6\\r\\n  token[0xc4] = flex(format.uint8, format.bin);\\r\\n  token[0xc5] = flex(format.uint16, format.bin);\\r\\n  token[0xc6] = flex(format.uint32, format.bin);\\r\\n\\r\\n  // ext 8 -- 0xc7\\r\\n  // ext 16 -- 0xc8\\r\\n  // ext 32 -- 0xc9\\r\\n  token[0xc7] = flex(format.uint8, format.ext);\\r\\n  token[0xc8] = flex(format.uint16, format.ext);\\r\\n  token[0xc9] = flex(format.uint32, format.ext);\\r\\n\\r\\n  // float 32 -- 0xca\\r\\n  // float 64 -- 0xcb\\r\\n  token[0xca] = format.float32;\\r\\n  token[0xcb] = format.float64;\\r\\n\\r\\n  // uint 8 -- 0xcc\\r\\n  // uint 16 -- 0xcd\\r\\n  // uint 32 -- 0xce\\r\\n  // uint 64 -- 0xcf\\r\\n  token[0xcc] = format.uint8;\\r\\n  token[0xcd] = format.uint16;\\r\\n  token[0xce] = format.uint32;\\r\\n  token[0xcf] = format.uint64;\\r\\n\\r\\n  // int 8 -- 0xd0\\r\\n  // int 16 -- 0xd1\\r\\n  // int 32 -- 0xd2\\r\\n  // int 64 -- 0xd3\\r\\n  token[0xd0] = format.int8;\\r\\n  token[0xd1] = format.int16;\\r\\n  token[0xd2] = format.int32;\\r\\n  token[0xd3] = format.int64;\\r\\n\\r\\n  // fixext 1 -- 0xd4\\r\\n  // fixext 2 -- 0xd5\\r\\n  // fixext 4 -- 0xd6\\r\\n  // fixext 8 -- 0xd7\\r\\n  // fixext 16 -- 0xd8\\r\\n  token[0xd4] = fix(1, format.ext);\\r\\n  token[0xd5] = fix(2, format.ext);\\r\\n  token[0xd6] = fix(4, format.ext);\\r\\n  token[0xd7] = fix(8, format.ext);\\r\\n  token[0xd8] = fix(16, format.ext);\\r\\n\\r\\n  // str 8 -- 0xd9\\r\\n  // str 16 -- 0xda\\r\\n  // str 32 -- 0xdb\\r\\n  token[0xd9] = flex(format.uint8, format.str);\\r\\n  token[0xda] = flex(format.uint16, format.str);\\r\\n  token[0xdb] = flex(format.uint32, format.str);\\r\\n\\r\\n  // array 16 -- 0xdc\\r\\n  // array 32 -- 0xdd\\r\\n  token[0xdc] = flex(format.uint16, format.array);\\r\\n  token[0xdd] = flex(format.uint32, format.array);\\r\\n\\r\\n  // map 16 -- 0xde\\r\\n  // map 32 -- 0xdf\\r\\n  token[0xde] = flex(format.uint16, format.map);\\r\\n  token[0xdf] = flex(format.uint32, format.map);\\r\\n\\r\\n  // negative fixint -- 0xe0 - 0xff\\r\\n  for (i = 0xe0; i <= 0xff; i++) {\\r\\n    token[i] = constant(i - 0x100);\\r\\n  }\\r\\n\\r\\n  return token;\\r\\n}\\r\\n\\r\\nfunction init_useraw(format) {\\r\\n  var i;\\r\\n  var token = init_token(format).slice();\\r\\n\\r\\n  // raw 8 -- 0xd9\\r\\n  // raw 16 -- 0xda\\r\\n  // raw 32 -- 0xdb\\r\\n  token[0xd9] = token[0xc4];\\r\\n  token[0xda] = token[0xc5];\\r\\n  token[0xdb] = token[0xc6];\\r\\n\\r\\n  // fixraw -- 0xa0 - 0xbf\\r\\n  for (i = 0xa0; i <= 0xbf; i++) {\\r\\n    token[i] = fix(i - 0xa0, format.bin);\\r\\n  }\\r\\n\\r\\n  return token;\\r\\n}\\r\\n\\r\\nfunction constant(value) {\\r\\n  return function() {\\r\\n    return value;\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction flex(lenFunc, decodeFunc) {\\r\\n  return function(decoder) {\\r\\n    var len = lenFunc(decoder);\\r\\n    return decodeFunc(decoder, len);\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction fix(len, method) {\\r\\n  return function(decoder) {\\r\\n    return method(decoder, len);\\r\\n  };\\r\\n}\\r\\n\\r\\n},{\\\"./read-format\\\":28}],30:[function(require,module,exports){\\r\\n// write-core.js\\r\\n\\r\\nvar ExtBuffer = require(\\\"./ext-buffer\\\").ExtBuffer;\\r\\nvar ExtPacker = require(\\\"./ext-packer\\\");\\r\\nvar WriteType = require(\\\"./write-type\\\");\\r\\nvar CodecBase = require(\\\"./codec-base\\\");\\r\\n\\r\\nCodecBase.install({\\r\\n  addExtPacker: addExtPacker,\\r\\n  getExtPacker: getExtPacker,\\r\\n  init: init\\r\\n});\\r\\n\\r\\nexports.preset = init.call(CodecBase.preset);\\r\\n\\r\\nfunction getEncoder(options) {\\r\\n  var writeType = WriteType.getWriteType(options);\\r\\n  return encode;\\r\\n\\r\\n  function encode(encoder, value) {\\r\\n    var func = writeType[typeof value];\\r\\n    if (!func) throw new Error(\\\"Unsupported type \\\\\\\"\\\" + (typeof value) + \\\"\\\\\\\": \\\" + value);\\r\\n    func(encoder, value);\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction init() {\\r\\n  var options = this.options;\\r\\n  this.encode = getEncoder(options);\\r\\n\\r\\n  if (options && options.preset) {\\r\\n    ExtPacker.setExtPackers(this);\\r\\n  }\\r\\n\\r\\n  return this;\\r\\n}\\r\\n\\r\\nfunction addExtPacker(etype, Class, packer) {\\r\\n  packer = CodecBase.filter(packer);\\r\\n  var name = Class.name;\\r\\n  if (name && name !== \\\"Object\\\") {\\r\\n    var packers = this.extPackers || (this.extPackers = {});\\r\\n    packers[name] = extPacker;\\r\\n  } else {\\r\\n    // fallback for IE\\r\\n    var list = this.extEncoderList || (this.extEncoderList = []);\\r\\n    list.unshift([Class, extPacker]);\\r\\n  }\\r\\n\\r\\n  function extPacker(value) {\\r\\n    if (packer) value = packer(value);\\r\\n    return new ExtBuffer(value, etype);\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction getExtPacker(value) {\\r\\n  var packers = this.extPackers || (this.extPackers = {});\\r\\n  var c = value.constructor;\\r\\n  var e = c && c.name && packers[c.name];\\r\\n  if (e) return e;\\r\\n\\r\\n  // fallback for IE\\r\\n  var list = this.extEncoderList || (this.extEncoderList = []);\\r\\n  var len = list.length;\\r\\n  for (var i = 0; i < len; i++) {\\r\\n    var pair = list[i];\\r\\n    if (c === pair[0]) return pair[1];\\r\\n  }\\r\\n}\\r\\n\\r\\n},{\\\"./codec-base\\\":14,\\\"./ext-buffer\\\":22,\\\"./ext-packer\\\":23,\\\"./write-type\\\":32}],31:[function(require,module,exports){\\r\\n// write-token.js\\r\\n\\r\\nvar ieee754 = require(\\\"ieee754\\\");\\r\\nvar Int64Buffer = require(\\\"int64-buffer\\\");\\r\\nvar Uint64BE = Int64Buffer.Uint64BE;\\r\\nvar Int64BE = Int64Buffer.Int64BE;\\r\\n\\r\\nvar uint8 = require(\\\"./write-uint8\\\").uint8;\\r\\nvar Bufferish = require(\\\"./bufferish\\\");\\r\\nvar Buffer = Bufferish.global;\\r\\nvar IS_BUFFER_SHIM = Bufferish.hasBuffer && (\\\"TYPED_ARRAY_SUPPORT\\\" in Buffer);\\r\\nvar NO_TYPED_ARRAY = IS_BUFFER_SHIM && !Buffer.TYPED_ARRAY_SUPPORT;\\r\\nvar Buffer_prototype = Bufferish.hasBuffer && Buffer.prototype || {};\\r\\n\\r\\nexports.getWriteToken = getWriteToken;\\r\\n\\r\\nfunction getWriteToken(options) {\\r\\n  if (options && options.uint8array) {\\r\\n    return init_uint8array();\\r\\n  } else if (NO_TYPED_ARRAY || (Bufferish.hasBuffer && options && options.safe)) {\\r\\n    return init_safe();\\r\\n  } else {\\r\\n    return init_token();\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction init_uint8array() {\\r\\n  var token = init_token();\\r\\n\\r\\n  // float 32 -- 0xca\\r\\n  // float 64 -- 0xcb\\r\\n  token[0xca] = writeN(0xca, 4, writeFloatBE);\\r\\n  token[0xcb] = writeN(0xcb, 8, writeDoubleBE);\\r\\n\\r\\n  return token;\\r\\n}\\r\\n\\r\\n// Node.js and browsers with TypedArray\\r\\n\\r\\nfunction init_token() {\\r\\n  // (immediate values)\\r\\n  // positive fixint -- 0x00 - 0x7f\\r\\n  // nil -- 0xc0\\r\\n  // false -- 0xc2\\r\\n  // true -- 0xc3\\r\\n  // negative fixint -- 0xe0 - 0xff\\r\\n  var token = uint8.slice();\\r\\n\\r\\n  // bin 8 -- 0xc4\\r\\n  // bin 16 -- 0xc5\\r\\n  // bin 32 -- 0xc6\\r\\n  token[0xc4] = write1(0xc4);\\r\\n  token[0xc5] = write2(0xc5);\\r\\n  token[0xc6] = write4(0xc6);\\r\\n\\r\\n  // ext 8 -- 0xc7\\r\\n  // ext 16 -- 0xc8\\r\\n  // ext 32 -- 0xc9\\r\\n  token[0xc7] = write1(0xc7);\\r\\n  token[0xc8] = write2(0xc8);\\r\\n  token[0xc9] = write4(0xc9);\\r\\n\\r\\n  // float 32 -- 0xca\\r\\n  // float 64 -- 0xcb\\r\\n  token[0xca] = writeN(0xca, 4, (Buffer_prototype.writeFloatBE || writeFloatBE), true);\\r\\n  token[0xcb] = writeN(0xcb, 8, (Buffer_prototype.writeDoubleBE || writeDoubleBE), true);\\r\\n\\r\\n  // uint 8 -- 0xcc\\r\\n  // uint 16 -- 0xcd\\r\\n  // uint 32 -- 0xce\\r\\n  // uint 64 -- 0xcf\\r\\n  token[0xcc] = write1(0xcc);\\r\\n  token[0xcd] = write2(0xcd);\\r\\n  token[0xce] = write4(0xce);\\r\\n  token[0xcf] = writeN(0xcf, 8, writeUInt64BE);\\r\\n\\r\\n  // int 8 -- 0xd0\\r\\n  // int 16 -- 0xd1\\r\\n  // int 32 -- 0xd2\\r\\n  // int 64 -- 0xd3\\r\\n  token[0xd0] = write1(0xd0);\\r\\n  token[0xd1] = write2(0xd1);\\r\\n  token[0xd2] = write4(0xd2);\\r\\n  token[0xd3] = writeN(0xd3, 8, writeInt64BE);\\r\\n\\r\\n  // str 8 -- 0xd9\\r\\n  // str 16 -- 0xda\\r\\n  // str 32 -- 0xdb\\r\\n  token[0xd9] = write1(0xd9);\\r\\n  token[0xda] = write2(0xda);\\r\\n  token[0xdb] = write4(0xdb);\\r\\n\\r\\n  // array 16 -- 0xdc\\r\\n  // array 32 -- 0xdd\\r\\n  token[0xdc] = write2(0xdc);\\r\\n  token[0xdd] = write4(0xdd);\\r\\n\\r\\n  // map 16 -- 0xde\\r\\n  // map 32 -- 0xdf\\r\\n  token[0xde] = write2(0xde);\\r\\n  token[0xdf] = write4(0xdf);\\r\\n\\r\\n  return token;\\r\\n}\\r\\n\\r\\n// safe mode: for old browsers and who needs asserts\\r\\n\\r\\nfunction init_safe() {\\r\\n  // (immediate values)\\r\\n  // positive fixint -- 0x00 - 0x7f\\r\\n  // nil -- 0xc0\\r\\n  // false -- 0xc2\\r\\n  // true -- 0xc3\\r\\n  // negative fixint -- 0xe0 - 0xff\\r\\n  var token = uint8.slice();\\r\\n\\r\\n  // bin 8 -- 0xc4\\r\\n  // bin 16 -- 0xc5\\r\\n  // bin 32 -- 0xc6\\r\\n  token[0xc4] = writeN(0xc4, 1, Buffer.prototype.writeUInt8);\\r\\n  token[0xc5] = writeN(0xc5, 2, Buffer.prototype.writeUInt16BE);\\r\\n  token[0xc6] = writeN(0xc6, 4, Buffer.prototype.writeUInt32BE);\\r\\n\\r\\n  // ext 8 -- 0xc7\\r\\n  // ext 16 -- 0xc8\\r\\n  // ext 32 -- 0xc9\\r\\n  token[0xc7] = writeN(0xc7, 1, Buffer.prototype.writeUInt8);\\r\\n  token[0xc8] = writeN(0xc8, 2, Buffer.prototype.writeUInt16BE);\\r\\n  token[0xc9] = writeN(0xc9, 4, Buffer.prototype.writeUInt32BE);\\r\\n\\r\\n  // float 32 -- 0xca\\r\\n  // float 64 -- 0xcb\\r\\n  token[0xca] = writeN(0xca, 4, Buffer.prototype.writeFloatBE);\\r\\n  token[0xcb] = writeN(0xcb, 8, Buffer.prototype.writeDoubleBE);\\r\\n\\r\\n  // uint 8 -- 0xcc\\r\\n  // uint 16 -- 0xcd\\r\\n  // uint 32 -- 0xce\\r\\n  // uint 64 -- 0xcf\\r\\n  token[0xcc] = writeN(0xcc, 1, Buffer.prototype.writeUInt8);\\r\\n  token[0xcd] = writeN(0xcd, 2, Buffer.prototype.writeUInt16BE);\\r\\n  token[0xce] = writeN(0xce, 4, Buffer.prototype.writeUInt32BE);\\r\\n  token[0xcf] = writeN(0xcf, 8, writeUInt64BE);\\r\\n\\r\\n  // int 8 -- 0xd0\\r\\n  // int 16 -- 0xd1\\r\\n  // int 32 -- 0xd2\\r\\n  // int 64 -- 0xd3\\r\\n  token[0xd0] = writeN(0xd0, 1, Buffer.prototype.writeInt8);\\r\\n  token[0xd1] = writeN(0xd1, 2, Buffer.prototype.writeInt16BE);\\r\\n  token[0xd2] = writeN(0xd2, 4, Buffer.prototype.writeInt32BE);\\r\\n  token[0xd3] = writeN(0xd3, 8, writeInt64BE);\\r\\n\\r\\n  // str 8 -- 0xd9\\r\\n  // str 16 -- 0xda\\r\\n  // str 32 -- 0xdb\\r\\n  token[0xd9] = writeN(0xd9, 1, Buffer.prototype.writeUInt8);\\r\\n  token[0xda] = writeN(0xda, 2, Buffer.prototype.writeUInt16BE);\\r\\n  token[0xdb] = writeN(0xdb, 4, Buffer.prototype.writeUInt32BE);\\r\\n\\r\\n  // array 16 -- 0xdc\\r\\n  // array 32 -- 0xdd\\r\\n  token[0xdc] = writeN(0xdc, 2, Buffer.prototype.writeUInt16BE);\\r\\n  token[0xdd] = writeN(0xdd, 4, Buffer.prototype.writeUInt32BE);\\r\\n\\r\\n  // map 16 -- 0xde\\r\\n  // map 32 -- 0xdf\\r\\n  token[0xde] = writeN(0xde, 2, Buffer.prototype.writeUInt16BE);\\r\\n  token[0xdf] = writeN(0xdf, 4, Buffer.prototype.writeUInt32BE);\\r\\n\\r\\n  return token;\\r\\n}\\r\\n\\r\\nfunction write1(type) {\\r\\n  return function(encoder, value) {\\r\\n    var offset = encoder.reserve(2);\\r\\n    var buffer = encoder.buffer;\\r\\n    buffer[offset++] = type;\\r\\n    buffer[offset] = value;\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction write2(type) {\\r\\n  return function(encoder, value) {\\r\\n    var offset = encoder.reserve(3);\\r\\n    var buffer = encoder.buffer;\\r\\n    buffer[offset++] = type;\\r\\n    buffer[offset++] = value >>> 8;\\r\\n    buffer[offset] = value;\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction write4(type) {\\r\\n  return function(encoder, value) {\\r\\n    var offset = encoder.reserve(5);\\r\\n    var buffer = encoder.buffer;\\r\\n    buffer[offset++] = type;\\r\\n    buffer[offset++] = value >>> 24;\\r\\n    buffer[offset++] = value >>> 16;\\r\\n    buffer[offset++] = value >>> 8;\\r\\n    buffer[offset] = value;\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction writeN(type, len, method, noAssert) {\\r\\n  return function(encoder, value) {\\r\\n    var offset = encoder.reserve(len + 1);\\r\\n    encoder.buffer[offset++] = type;\\r\\n    method.call(encoder.buffer, value, offset, noAssert);\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction writeUInt64BE(value, offset) {\\r\\n  new Uint64BE(this, offset, value);\\r\\n}\\r\\n\\r\\nfunction writeInt64BE(value, offset) {\\r\\n  new Int64BE(this, offset, value);\\r\\n}\\r\\n\\r\\nfunction writeFloatBE(value, offset) {\\r\\n  ieee754.write(this, value, offset, false, 23, 4);\\r\\n}\\r\\n\\r\\nfunction writeDoubleBE(value, offset) {\\r\\n  ieee754.write(this, value, offset, false, 52, 8);\\r\\n}\\r\\n\\r\\n},{\\\"./bufferish\\\":13,\\\"./write-uint8\\\":33,\\\"ieee754\\\":3,\\\"int64-buffer\\\":4}],32:[function(require,module,exports){\\r\\n// write-type.js\\r\\n\\r\\nvar IS_ARRAY = require(\\\"isarray\\\");\\r\\nvar Int64Buffer = require(\\\"int64-buffer\\\");\\r\\nvar Uint64BE = Int64Buffer.Uint64BE;\\r\\nvar Int64BE = Int64Buffer.Int64BE;\\r\\n\\r\\nvar Bufferish = require(\\\"./bufferish\\\");\\r\\nvar BufferProto = require(\\\"./bufferish-proto\\\");\\r\\nvar WriteToken = require(\\\"./write-token\\\");\\r\\nvar uint8 = require(\\\"./write-uint8\\\").uint8;\\r\\nvar ExtBuffer = require(\\\"./ext-buffer\\\").ExtBuffer;\\r\\n\\r\\nvar HAS_UINT8ARRAY = (\\\"undefined\\\" !== typeof Uint8Array);\\r\\nvar HAS_MAP = (\\\"undefined\\\" !== typeof Map);\\r\\n\\r\\nvar extmap = [];\\r\\nextmap[1] = 0xd4;\\r\\nextmap[2] = 0xd5;\\r\\nextmap[4] = 0xd6;\\r\\nextmap[8] = 0xd7;\\r\\nextmap[16] = 0xd8;\\r\\n\\r\\nexports.getWriteType = getWriteType;\\r\\n\\r\\nfunction getWriteType(options) {\\r\\n  var token = WriteToken.getWriteToken(options);\\r\\n  var useraw = options && options.useraw;\\r\\n  var binarraybuffer = HAS_UINT8ARRAY && options && options.binarraybuffer;\\r\\n  var isBuffer = binarraybuffer ? Bufferish.isArrayBuffer : Bufferish.isBuffer;\\r\\n  var bin = binarraybuffer ? bin_arraybuffer : bin_buffer;\\r\\n  var usemap = HAS_MAP && options && options.usemap;\\r\\n  var map = usemap ? map_to_map : obj_to_map;\\r\\n\\r\\n  var writeType = {\\r\\n    \\\"boolean\\\": bool,\\r\\n    \\\"function\\\": nil,\\r\\n    \\\"number\\\": number,\\r\\n    \\\"object\\\": (useraw ? object_raw : object),\\r\\n    \\\"string\\\": _string(useraw ? raw_head_size : str_head_size),\\r\\n    \\\"symbol\\\": nil,\\r\\n    \\\"undefined\\\": nil\\r\\n  };\\r\\n\\r\\n  return writeType;\\r\\n\\r\\n  // false -- 0xc2\\r\\n  // true -- 0xc3\\r\\n  function bool(encoder, value) {\\r\\n    var type = value ? 0xc3 : 0xc2;\\r\\n    token[type](encoder, value);\\r\\n  }\\r\\n\\r\\n  function number(encoder, value) {\\r\\n    var ivalue = value | 0;\\r\\n    var type;\\r\\n    if (value !== ivalue) {\\r\\n      // float 64 -- 0xcb\\r\\n      type = 0xcb;\\r\\n      token[type](encoder, value);\\r\\n      return;\\r\\n    } else if (-0x20 <= ivalue && ivalue <= 0x7F) {\\r\\n      // positive fixint -- 0x00 - 0x7f\\r\\n      // negative fixint -- 0xe0 - 0xff\\r\\n      type = ivalue & 0xFF;\\r\\n    } else if (0 <= ivalue) {\\r\\n      // uint 8 -- 0xcc\\r\\n      // uint 16 -- 0xcd\\r\\n      // uint 32 -- 0xce\\r\\n      type = (ivalue <= 0xFF) ? 0xcc : (ivalue <= 0xFFFF) ? 0xcd : 0xce;\\r\\n    } else {\\r\\n      // int 8 -- 0xd0\\r\\n      // int 16 -- 0xd1\\r\\n      // int 32 -- 0xd2\\r\\n      type = (-0x80 <= ivalue) ? 0xd0 : (-0x8000 <= ivalue) ? 0xd1 : 0xd2;\\r\\n    }\\r\\n    token[type](encoder, ivalue);\\r\\n  }\\r\\n\\r\\n  // uint 64 -- 0xcf\\r\\n  function uint64(encoder, value) {\\r\\n    var type = 0xcf;\\r\\n    token[type](encoder, value.toArray());\\r\\n  }\\r\\n\\r\\n  // int 64 -- 0xd3\\r\\n  function int64(encoder, value) {\\r\\n    var type = 0xd3;\\r\\n    token[type](encoder, value.toArray());\\r\\n  }\\r\\n\\r\\n  // str 8 -- 0xd9\\r\\n  // str 16 -- 0xda\\r\\n  // str 32 -- 0xdb\\r\\n  // fixstr -- 0xa0 - 0xbf\\r\\n  function str_head_size(length) {\\r\\n    return (length < 32) ? 1 : (length <= 0xFF) ? 2 : (length <= 0xFFFF) ? 3 : 5;\\r\\n  }\\r\\n\\r\\n  // raw 16 -- 0xda\\r\\n  // raw 32 -- 0xdb\\r\\n  // fixraw -- 0xa0 - 0xbf\\r\\n  function raw_head_size(length) {\\r\\n    return (length < 32) ? 1 : (length <= 0xFFFF) ? 3 : 5;\\r\\n  }\\r\\n\\r\\n  function _string(head_size) {\\r\\n    return string;\\r\\n\\r\\n    function string(encoder, value) {\\r\\n      // prepare buffer\\r\\n      var length = value.length;\\r\\n      var maxsize = 5 + length * 3;\\r\\n      encoder.offset = encoder.reserve(maxsize);\\r\\n      var buffer = encoder.buffer;\\r\\n\\r\\n      // expected header size\\r\\n      var expected = head_size(length);\\r\\n\\r\\n      // expected start point\\r\\n      var start = encoder.offset + expected;\\r\\n\\r\\n      // write string\\r\\n      length = BufferProto.write.call(buffer, value, start);\\r\\n\\r\\n      // actual header size\\r\\n      var actual = head_size(length);\\r\\n\\r\\n      // move content when needed\\r\\n      if (expected !== actual) {\\r\\n        var targetStart = start + actual - expected;\\r\\n        var end = start + length;\\r\\n        BufferProto.copy.call(buffer, buffer, targetStart, start, end);\\r\\n      }\\r\\n\\r\\n      // write header\\r\\n      var type = (actual === 1) ? (0xa0 + length) : (actual <= 3) ? (0xd7 + actual) : 0xdb;\\r\\n      token[type](encoder, length);\\r\\n\\r\\n      // move cursor\\r\\n      encoder.offset += length;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function object(encoder, value) {\\r\\n    // null\\r\\n    if (value === null) return nil(encoder, value);\\r\\n\\r\\n    // Buffer\\r\\n    if (isBuffer(value)) return bin(encoder, value);\\r\\n\\r\\n    // Array\\r\\n    if (IS_ARRAY(value)) return array(encoder, value);\\r\\n\\r\\n    // int64-buffer objects\\r\\n    if (Uint64BE.isUint64BE(value)) return uint64(encoder, value);\\r\\n    if (Int64BE.isInt64BE(value)) return int64(encoder, value);\\r\\n\\r\\n    // ext formats\\r\\n    var packer = encoder.codec.getExtPacker(value);\\r\\n    if (packer) value = packer(value);\\r\\n    if (value instanceof ExtBuffer) return ext(encoder, value);\\r\\n\\r\\n    // plain old Objects or Map\\r\\n    map(encoder, value);\\r\\n  }\\r\\n\\r\\n  function object_raw(encoder, value) {\\r\\n    // Buffer\\r\\n    if (isBuffer(value)) return raw(encoder, value);\\r\\n\\r\\n    // others\\r\\n    object(encoder, value);\\r\\n  }\\r\\n\\r\\n  // nil -- 0xc0\\r\\n  function nil(encoder, value) {\\r\\n    var type = 0xc0;\\r\\n    token[type](encoder, value);\\r\\n  }\\r\\n\\r\\n  // fixarray -- 0x90 - 0x9f\\r\\n  // array 16 -- 0xdc\\r\\n  // array 32 -- 0xdd\\r\\n  function array(encoder, value) {\\r\\n    var length = value.length;\\r\\n    var type = (length < 16) ? (0x90 + length) : (length <= 0xFFFF) ? 0xdc : 0xdd;\\r\\n    token[type](encoder, length);\\r\\n\\r\\n    var encode = encoder.codec.encode;\\r\\n    for (var i = 0; i < length; i++) {\\r\\n      encode(encoder, value[i]);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  // bin 8 -- 0xc4\\r\\n  // bin 16 -- 0xc5\\r\\n  // bin 32 -- 0xc6\\r\\n  function bin_buffer(encoder, value) {\\r\\n    var length = value.length;\\r\\n    var type = (length < 0xFF) ? 0xc4 : (length <= 0xFFFF) ? 0xc5 : 0xc6;\\r\\n    token[type](encoder, length);\\r\\n    encoder.send(value);\\r\\n  }\\r\\n\\r\\n  function bin_arraybuffer(encoder, value) {\\r\\n    bin_buffer(encoder, new Uint8Array(value));\\r\\n  }\\r\\n\\r\\n  // fixext 1 -- 0xd4\\r\\n  // fixext 2 -- 0xd5\\r\\n  // fixext 4 -- 0xd6\\r\\n  // fixext 8 -- 0xd7\\r\\n  // fixext 16 -- 0xd8\\r\\n  // ext 8 -- 0xc7\\r\\n  // ext 16 -- 0xc8\\r\\n  // ext 32 -- 0xc9\\r\\n  function ext(encoder, value) {\\r\\n    var buffer = value.buffer;\\r\\n    var length = buffer.length;\\r\\n    var type = extmap[length] || ((length < 0xFF) ? 0xc7 : (length <= 0xFFFF) ? 0xc8 : 0xc9);\\r\\n    token[type](encoder, length);\\r\\n    uint8[value.type](encoder);\\r\\n    encoder.send(buffer);\\r\\n  }\\r\\n\\r\\n  // fixmap -- 0x80 - 0x8f\\r\\n  // map 16 -- 0xde\\r\\n  // map 32 -- 0xdf\\r\\n  function obj_to_map(encoder, value) {\\r\\n    var keys = Object.keys(value);\\r\\n    var length = keys.length;\\r\\n    var type = (length < 16) ? (0x80 + length) : (length <= 0xFFFF) ? 0xde : 0xdf;\\r\\n    token[type](encoder, length);\\r\\n\\r\\n    var encode = encoder.codec.encode;\\r\\n    keys.forEach(function(key) {\\r\\n      encode(encoder, key);\\r\\n      encode(encoder, value[key]);\\r\\n    });\\r\\n  }\\r\\n\\r\\n  // fixmap -- 0x80 - 0x8f\\r\\n  // map 16 -- 0xde\\r\\n  // map 32 -- 0xdf\\r\\n  function map_to_map(encoder, value) {\\r\\n    if (!(value instanceof Map)) return obj_to_map(encoder, value);\\r\\n\\r\\n    var length = value.size;\\r\\n    var type = (length < 16) ? (0x80 + length) : (length <= 0xFFFF) ? 0xde : 0xdf;\\r\\n    token[type](encoder, length);\\r\\n\\r\\n    var encode = encoder.codec.encode;\\r\\n    value.forEach(function(val, key, m) {\\r\\n      encode(encoder, key);\\r\\n      encode(encoder, val);\\r\\n    });\\r\\n  }\\r\\n\\r\\n  // raw 16 -- 0xda\\r\\n  // raw 32 -- 0xdb\\r\\n  // fixraw -- 0xa0 - 0xbf\\r\\n  function raw(encoder, value) {\\r\\n    var length = value.length;\\r\\n    var type = (length < 32) ? (0xa0 + length) : (length <= 0xFFFF) ? 0xda : 0xdb;\\r\\n    token[type](encoder, length);\\r\\n    encoder.send(value);\\r\\n  }\\r\\n}\\r\\n\\r\\n},{\\\"./bufferish\\\":13,\\\"./bufferish-proto\\\":11,\\\"./ext-buffer\\\":22,\\\"./write-token\\\":31,\\\"./write-uint8\\\":33,\\\"int64-buffer\\\":4,\\\"isarray\\\":5}],33:[function(require,module,exports){\\r\\n// write-unit8.js\\r\\n\\r\\nvar constant = exports.uint8 = new Array(256);\\r\\n\\r\\nfor (var i = 0x00; i <= 0xFF; i++) {\\r\\n  constant[i] = write0(i);\\r\\n}\\r\\n\\r\\nfunction write0(type) {\\r\\n  return function(encoder) {\\r\\n    var offset = encoder.reserve(1);\\r\\n    encoder.buffer[offset] = type;\\r\\n  };\\r\\n}\\r\\n\\r\\n},{}],34:[function(require,module,exports){\\r\\n'use strict'\\r\\n\\r\\nexports.byteLength = byteLength\\r\\nexports.toByteArray = toByteArray\\r\\nexports.fromByteArray = fromByteArray\\r\\n\\r\\nvar lookup = []\\r\\nvar revLookup = []\\r\\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\\r\\n\\r\\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\\r\\nfor (var i = 0, len = code.length; i < len; ++i) {\\r\\n  lookup[i] = code[i]\\r\\n  revLookup[code.charCodeAt(i)] = i\\r\\n}\\r\\n\\r\\nrevLookup['-'.charCodeAt(0)] = 62\\r\\nrevLookup['_'.charCodeAt(0)] = 63\\r\\n\\r\\nfunction placeHoldersCount (b64) {\\r\\n  var len = b64.length\\r\\n  if (len % 4 > 0) {\\r\\n    throw new Error('Invalid string. Length must be a multiple of 4')\\r\\n  }\\r\\n\\r\\n  // the number of equal signs (place holders)\\r\\n  // if there are two placeholders, than the two characters before it\\r\\n  // represent one byte\\r\\n  // if there is only one, then the three characters before it represent 2 bytes\\r\\n  // this is just a cheap hack to not do indexOf twice\\r\\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\\r\\n}\\r\\n\\r\\nfunction byteLength (b64) {\\r\\n  // base64 is 4/3 + up to two characters of the original data\\r\\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\\r\\n}\\r\\n\\r\\nfunction toByteArray (b64) {\\r\\n  var i, l, tmp, placeHolders, arr\\r\\n  var len = b64.length\\r\\n  placeHolders = placeHoldersCount(b64)\\r\\n\\r\\n  arr = new Arr((len * 3 / 4) - placeHolders)\\r\\n\\r\\n  // if there are placeholders, only get up to the last complete 4 chars\\r\\n  l = placeHolders > 0 ? len - 4 : len\\r\\n\\r\\n  var L = 0\\r\\n\\r\\n  for (i = 0; i < l; i += 4) {\\r\\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\\r\\n    arr[L++] = (tmp >> 16) & 0xFF\\r\\n    arr[L++] = (tmp >> 8) & 0xFF\\r\\n    arr[L++] = tmp & 0xFF\\r\\n  }\\r\\n\\r\\n  if (placeHolders === 2) {\\r\\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\\r\\n    arr[L++] = tmp & 0xFF\\r\\n  } else if (placeHolders === 1) {\\r\\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\\r\\n    arr[L++] = (tmp >> 8) & 0xFF\\r\\n    arr[L++] = tmp & 0xFF\\r\\n  }\\r\\n\\r\\n  return arr\\r\\n}\\r\\n\\r\\nfunction tripletToBase64 (num) {\\r\\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\\r\\n}\\r\\n\\r\\nfunction encodeChunk (uint8, start, end) {\\r\\n  var tmp\\r\\n  var output = []\\r\\n  for (var i = start; i < end; i += 3) {\\r\\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\\r\\n    output.push(tripletToBase64(tmp))\\r\\n  }\\r\\n  return output.join('')\\r\\n}\\r\\n\\r\\nfunction fromByteArray (uint8) {\\r\\n  var tmp\\r\\n  var len = uint8.length\\r\\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\\r\\n  var output = ''\\r\\n  var parts = []\\r\\n  var maxChunkLength = 16383 // must be multiple of 3\\r\\n\\r\\n  // go through the array every three bytes, we'll deal with trailing stuff later\\r\\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\\r\\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\\r\\n  }\\r\\n\\r\\n  // pad the end with zeros, but make sure to not forget the extra bytes\\r\\n  if (extraBytes === 1) {\\r\\n    tmp = uint8[len - 1]\\r\\n    output += lookup[tmp >> 2]\\r\\n    output += lookup[(tmp << 4) & 0x3F]\\r\\n    output += '=='\\r\\n  } else if (extraBytes === 2) {\\r\\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\\r\\n    output += lookup[tmp >> 10]\\r\\n    output += lookup[(tmp >> 4) & 0x3F]\\r\\n    output += lookup[(tmp << 2) & 0x3F]\\r\\n    output += '='\\r\\n  }\\r\\n\\r\\n  parts.push(output)\\r\\n\\r\\n  return parts.join('')\\r\\n}\\r\\n\\r\\n},{}],35:[function(require,module,exports){\\r\\n/*!\\r\\n * The buffer module from node.js, for the browser.\\r\\n *\\r\\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\\r\\n * @license  MIT\\r\\n */\\r\\n/* eslint-disable no-proto */\\r\\n\\r\\n'use strict'\\r\\n\\r\\nvar base64 = require('base64-js')\\r\\nvar ieee754 = require('ieee754')\\r\\n\\r\\nexports.Buffer = Buffer\\r\\nexports.SlowBuffer = SlowBuffer\\r\\nexports.INSPECT_MAX_BYTES = 50\\r\\n\\r\\nvar K_MAX_LENGTH = 0x7fffffff\\r\\nexports.kMaxLength = K_MAX_LENGTH\\r\\n\\r\\n/**\\r\\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\\r\\n *   === true    Use Uint8Array implementation (fastest)\\r\\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\\r\\n *               implementation (most compatible, even IE6)\\r\\n *\\r\\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\\r\\n * Opera 11.6+, iOS 4.2+.\\r\\n *\\r\\n * We report that the browser does not support typed arrays if the are not subclassable\\r\\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\\r\\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\\r\\n * for __proto__ and has a buggy typed array implementation.\\r\\n */\\r\\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\\r\\n\\r\\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\\r\\n    typeof console.error === 'function') {\\r\\n  console.error(\\r\\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\\r\\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\\r\\n  )\\r\\n}\\r\\n\\r\\nfunction typedArraySupport () {\\r\\n  // Can typed array instances can be augmented?\\r\\n  try {\\r\\n    var arr = new Uint8Array(1)\\r\\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\\r\\n    return arr.foo() === 42\\r\\n  } catch (e) {\\r\\n    return false\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction createBuffer (length) {\\r\\n  if (length > K_MAX_LENGTH) {\\r\\n    throw new RangeError('Invalid typed array length')\\r\\n  }\\r\\n  // Return an augmented `Uint8Array` instance\\r\\n  var buf = new Uint8Array(length)\\r\\n  buf.__proto__ = Buffer.prototype\\r\\n  return buf\\r\\n}\\r\\n\\r\\n/**\\r\\n * The Buffer constructor returns instances of `Uint8Array` that have their\\r\\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\\r\\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\\r\\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\\r\\n * returns a single octet.\\r\\n *\\r\\n * The `Uint8Array` prototype remains unmodified.\\r\\n */\\r\\n\\r\\nfunction Buffer (arg, encodingOrOffset, length) {\\r\\n  // Common case.\\r\\n  if (typeof arg === 'number') {\\r\\n    if (typeof encodingOrOffset === 'string') {\\r\\n      throw new Error(\\r\\n        'If encoding is specified then the first argument must be a string'\\r\\n      )\\r\\n    }\\r\\n    return allocUnsafe(arg)\\r\\n  }\\r\\n  return from(arg, encodingOrOffset, length)\\r\\n}\\r\\n\\r\\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\\r\\nif (typeof Symbol !== 'undefined' && Symbol.species &&\\r\\n    Buffer[Symbol.species] === Buffer) {\\r\\n  Object.defineProperty(Buffer, Symbol.species, {\\r\\n    value: null,\\r\\n    configurable: true,\\r\\n    enumerable: false,\\r\\n    writable: false\\r\\n  })\\r\\n}\\r\\n\\r\\nBuffer.poolSize = 8192 // not used by this implementation\\r\\n\\r\\nfunction from (value, encodingOrOffset, length) {\\r\\n  if (typeof value === 'number') {\\r\\n    throw new TypeError('\\\"value\\\" argument must not be a number')\\r\\n  }\\r\\n\\r\\n  if (isArrayBuffer(value)) {\\r\\n    return fromArrayBuffer(value, encodingOrOffset, length)\\r\\n  }\\r\\n\\r\\n  if (typeof value === 'string') {\\r\\n    return fromString(value, encodingOrOffset)\\r\\n  }\\r\\n\\r\\n  return fromObject(value)\\r\\n}\\r\\n\\r\\n/**\\r\\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\\r\\n * if value is a number.\\r\\n * Buffer.from(str[, encoding])\\r\\n * Buffer.from(array)\\r\\n * Buffer.from(buffer)\\r\\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\\r\\n **/\\r\\nBuffer.from = function (value, encodingOrOffset, length) {\\r\\n  return from(value, encodingOrOffset, length)\\r\\n}\\r\\n\\r\\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\\r\\n// https://github.com/feross/buffer/pull/148\\r\\nBuffer.prototype.__proto__ = Uint8Array.prototype\\r\\nBuffer.__proto__ = Uint8Array\\r\\n\\r\\nfunction assertSize (size) {\\r\\n  if (typeof size !== 'number') {\\r\\n    throw new TypeError('\\\"size\\\" argument must be a number')\\r\\n  } else if (size < 0) {\\r\\n    throw new RangeError('\\\"size\\\" argument must not be negative')\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction alloc (size, fill, encoding) {\\r\\n  assertSize(size)\\r\\n  if (size <= 0) {\\r\\n    return createBuffer(size)\\r\\n  }\\r\\n  if (fill !== undefined) {\\r\\n    // Only pay attention to encoding if it's a string. This\\r\\n    // prevents accidentally sending in a number that would\\r\\n    // be interpretted as a start offset.\\r\\n    return typeof encoding === 'string'\\r\\n      ? createBuffer(size).fill(fill, encoding)\\r\\n      : createBuffer(size).fill(fill)\\r\\n  }\\r\\n  return createBuffer(size)\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new filled Buffer instance.\\r\\n * alloc(size[, fill[, encoding]])\\r\\n **/\\r\\nBuffer.alloc = function (size, fill, encoding) {\\r\\n  return alloc(size, fill, encoding)\\r\\n}\\r\\n\\r\\nfunction allocUnsafe (size) {\\r\\n  assertSize(size)\\r\\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\\r\\n}\\r\\n\\r\\n/**\\r\\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\\r\\n * */\\r\\nBuffer.allocUnsafe = function (size) {\\r\\n  return allocUnsafe(size)\\r\\n}\\r\\n/**\\r\\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\\r\\n */\\r\\nBuffer.allocUnsafeSlow = function (size) {\\r\\n  return allocUnsafe(size)\\r\\n}\\r\\n\\r\\nfunction fromString (string, encoding) {\\r\\n  if (typeof encoding !== 'string' || encoding === '') {\\r\\n    encoding = 'utf8'\\r\\n  }\\r\\n\\r\\n  if (!Buffer.isEncoding(encoding)) {\\r\\n    throw new TypeError('\\\"encoding\\\" must be a valid string encoding')\\r\\n  }\\r\\n\\r\\n  var length = byteLength(string, encoding) | 0\\r\\n  var buf = createBuffer(length)\\r\\n\\r\\n  var actual = buf.write(string, encoding)\\r\\n\\r\\n  if (actual !== length) {\\r\\n    // Writing a hex string, for example, that contains invalid characters will\\r\\n    // cause everything after the first invalid character to be ignored. (e.g.\\r\\n    // 'abxxcd' will be treated as 'ab')\\r\\n    buf = buf.slice(0, actual)\\r\\n  }\\r\\n\\r\\n  return buf\\r\\n}\\r\\n\\r\\nfunction fromArrayLike (array) {\\r\\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\\r\\n  var buf = createBuffer(length)\\r\\n  for (var i = 0; i < length; i += 1) {\\r\\n    buf[i] = array[i] & 255\\r\\n  }\\r\\n  return buf\\r\\n}\\r\\n\\r\\nfunction fromArrayBuffer (array, byteOffset, length) {\\r\\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\\r\\n    throw new RangeError('\\\\'offset\\\\' is out of bounds')\\r\\n  }\\r\\n\\r\\n  if (array.byteLength < byteOffset + (length || 0)) {\\r\\n    throw new RangeError('\\\\'length\\\\' is out of bounds')\\r\\n  }\\r\\n\\r\\n  var buf\\r\\n  if (byteOffset === undefined && length === undefined) {\\r\\n    buf = new Uint8Array(array)\\r\\n  } else if (length === undefined) {\\r\\n    buf = new Uint8Array(array, byteOffset)\\r\\n  } else {\\r\\n    buf = new Uint8Array(array, byteOffset, length)\\r\\n  }\\r\\n\\r\\n  // Return an augmented `Uint8Array` instance\\r\\n  buf.__proto__ = Buffer.prototype\\r\\n  return buf\\r\\n}\\r\\n\\r\\nfunction fromObject (obj) {\\r\\n  if (Buffer.isBuffer(obj)) {\\r\\n    var len = checked(obj.length) | 0\\r\\n    var buf = createBuffer(len)\\r\\n\\r\\n    if (buf.length === 0) {\\r\\n      return buf\\r\\n    }\\r\\n\\r\\n    obj.copy(buf, 0, 0, len)\\r\\n    return buf\\r\\n  }\\r\\n\\r\\n  if (obj) {\\r\\n    if (isArrayBufferView(obj) || 'length' in obj) {\\r\\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\\r\\n        return createBuffer(0)\\r\\n      }\\r\\n      return fromArrayLike(obj)\\r\\n    }\\r\\n\\r\\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\\r\\n      return fromArrayLike(obj.data)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\\r\\n}\\r\\n\\r\\nfunction checked (length) {\\r\\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\\r\\n  // length is NaN (which is otherwise coerced to zero.)\\r\\n  if (length >= K_MAX_LENGTH) {\\r\\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\\r\\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\\r\\n  }\\r\\n  return length | 0\\r\\n}\\r\\n\\r\\nfunction SlowBuffer (length) {\\r\\n  if (+length != length) { // eslint-disable-line eqeqeq\\r\\n    length = 0\\r\\n  }\\r\\n  return Buffer.alloc(+length)\\r\\n}\\r\\n\\r\\nBuffer.isBuffer = function isBuffer (b) {\\r\\n  return b != null && b._isBuffer === true\\r\\n}\\r\\n\\r\\nBuffer.compare = function compare (a, b) {\\r\\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\\r\\n    throw new TypeError('Arguments must be Buffers')\\r\\n  }\\r\\n\\r\\n  if (a === b) return 0\\r\\n\\r\\n  var x = a.length\\r\\n  var y = b.length\\r\\n\\r\\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\\r\\n    if (a[i] !== b[i]) {\\r\\n      x = a[i]\\r\\n      y = b[i]\\r\\n      break\\r\\n    }\\r\\n  }\\r\\n\\r\\n  if (x < y) return -1\\r\\n  if (y < x) return 1\\r\\n  return 0\\r\\n}\\r\\n\\r\\nBuffer.isEncoding = function isEncoding (encoding) {\\r\\n  switch (String(encoding).toLowerCase()) {\\r\\n    case 'hex':\\r\\n    case 'utf8':\\r\\n    case 'utf-8':\\r\\n    case 'ascii':\\r\\n    case 'latin1':\\r\\n    case 'binary':\\r\\n    case 'base64':\\r\\n    case 'ucs2':\\r\\n    case 'ucs-2':\\r\\n    case 'utf16le':\\r\\n    case 'utf-16le':\\r\\n      return true\\r\\n    default:\\r\\n      return false\\r\\n  }\\r\\n}\\r\\n\\r\\nBuffer.concat = function concat (list, length) {\\r\\n  if (!Array.isArray(list)) {\\r\\n    throw new TypeError('\\\"list\\\" argument must be an Array of Buffers')\\r\\n  }\\r\\n\\r\\n  if (list.length === 0) {\\r\\n    return Buffer.alloc(0)\\r\\n  }\\r\\n\\r\\n  var i\\r\\n  if (length === undefined) {\\r\\n    length = 0\\r\\n    for (i = 0; i < list.length; ++i) {\\r\\n      length += list[i].length\\r\\n    }\\r\\n  }\\r\\n\\r\\n  var buffer = Buffer.allocUnsafe(length)\\r\\n  var pos = 0\\r\\n  for (i = 0; i < list.length; ++i) {\\r\\n    var buf = list[i]\\r\\n    if (!Buffer.isBuffer(buf)) {\\r\\n      throw new TypeError('\\\"list\\\" argument must be an Array of Buffers')\\r\\n    }\\r\\n    buf.copy(buffer, pos)\\r\\n    pos += buf.length\\r\\n  }\\r\\n  return buffer\\r\\n}\\r\\n\\r\\nfunction byteLength (string, encoding) {\\r\\n  if (Buffer.isBuffer(string)) {\\r\\n    return string.length\\r\\n  }\\r\\n  if (isArrayBufferView(string) || isArrayBuffer(string)) {\\r\\n    return string.byteLength\\r\\n  }\\r\\n  if (typeof string !== 'string') {\\r\\n    string = '' + string\\r\\n  }\\r\\n\\r\\n  var len = string.length\\r\\n  if (len === 0) return 0\\r\\n\\r\\n  // Use a for loop to avoid recursion\\r\\n  var loweredCase = false\\r\\n  for (;;) {\\r\\n    switch (encoding) {\\r\\n      case 'ascii':\\r\\n      case 'latin1':\\r\\n      case 'binary':\\r\\n        return len\\r\\n      case 'utf8':\\r\\n      case 'utf-8':\\r\\n      case undefined:\\r\\n        return utf8ToBytes(string).length\\r\\n      case 'ucs2':\\r\\n      case 'ucs-2':\\r\\n      case 'utf16le':\\r\\n      case 'utf-16le':\\r\\n        return len * 2\\r\\n      case 'hex':\\r\\n        return len >>> 1\\r\\n      case 'base64':\\r\\n        return base64ToBytes(string).length\\r\\n      default:\\r\\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\\r\\n        encoding = ('' + encoding).toLowerCase()\\r\\n        loweredCase = true\\r\\n    }\\r\\n  }\\r\\n}\\r\\nBuffer.byteLength = byteLength\\r\\n\\r\\nfunction slowToString (encoding, start, end) {\\r\\n  var loweredCase = false\\r\\n\\r\\n  // No need to verify that \\\"this.length <= MAX_UINT32\\\" since it's a read-only\\r\\n  // property of a typed array.\\r\\n\\r\\n  // This behaves neither like String nor Uint8Array in that we set start/end\\r\\n  // to their upper/lower bounds if the value passed is out of range.\\r\\n  // undefined is handled specially as per ECMA-262 6th Edition,\\r\\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\\r\\n  if (start === undefined || start < 0) {\\r\\n    start = 0\\r\\n  }\\r\\n  // Return early if start > this.length. Done here to prevent potential uint32\\r\\n  // coercion fail below.\\r\\n  if (start > this.length) {\\r\\n    return ''\\r\\n  }\\r\\n\\r\\n  if (end === undefined || end > this.length) {\\r\\n    end = this.length\\r\\n  }\\r\\n\\r\\n  if (end <= 0) {\\r\\n    return ''\\r\\n  }\\r\\n\\r\\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\\r\\n  end >>>= 0\\r\\n  start >>>= 0\\r\\n\\r\\n  if (end <= start) {\\r\\n    return ''\\r\\n  }\\r\\n\\r\\n  if (!encoding) encoding = 'utf8'\\r\\n\\r\\n  while (true) {\\r\\n    switch (encoding) {\\r\\n      case 'hex':\\r\\n        return hexSlice(this, start, end)\\r\\n\\r\\n      case 'utf8':\\r\\n      case 'utf-8':\\r\\n        return utf8Slice(this, start, end)\\r\\n\\r\\n      case 'ascii':\\r\\n        return asciiSlice(this, start, end)\\r\\n\\r\\n      case 'latin1':\\r\\n      case 'binary':\\r\\n        return latin1Slice(this, start, end)\\r\\n\\r\\n      case 'base64':\\r\\n        return base64Slice(this, start, end)\\r\\n\\r\\n      case 'ucs2':\\r\\n      case 'ucs-2':\\r\\n      case 'utf16le':\\r\\n      case 'utf-16le':\\r\\n        return utf16leSlice(this, start, end)\\r\\n\\r\\n      default:\\r\\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\\r\\n        encoding = (encoding + '').toLowerCase()\\r\\n        loweredCase = true\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\\r\\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\\r\\n// reliably in a browserify context because there could be multiple different\\r\\n// copies of the 'buffer' package in use. This method works even for Buffer\\r\\n// instances that were created from another copy of the `buffer` package.\\r\\n// See: https://github.com/feross/buffer/issues/154\\r\\nBuffer.prototype._isBuffer = true\\r\\n\\r\\nfunction swap (b, n, m) {\\r\\n  var i = b[n]\\r\\n  b[n] = b[m]\\r\\n  b[m] = i\\r\\n}\\r\\n\\r\\nBuffer.prototype.swap16 = function swap16 () {\\r\\n  var len = this.length\\r\\n  if (len % 2 !== 0) {\\r\\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\\r\\n  }\\r\\n  for (var i = 0; i < len; i += 2) {\\r\\n    swap(this, i, i + 1)\\r\\n  }\\r\\n  return this\\r\\n}\\r\\n\\r\\nBuffer.prototype.swap32 = function swap32 () {\\r\\n  var len = this.length\\r\\n  if (len % 4 !== 0) {\\r\\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\\r\\n  }\\r\\n  for (var i = 0; i < len; i += 4) {\\r\\n    swap(this, i, i + 3)\\r\\n    swap(this, i + 1, i + 2)\\r\\n  }\\r\\n  return this\\r\\n}\\r\\n\\r\\nBuffer.prototype.swap64 = function swap64 () {\\r\\n  var len = this.length\\r\\n  if (len % 8 !== 0) {\\r\\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\\r\\n  }\\r\\n  for (var i = 0; i < len; i += 8) {\\r\\n    swap(this, i, i + 7)\\r\\n    swap(this, i + 1, i + 6)\\r\\n    swap(this, i + 2, i + 5)\\r\\n    swap(this, i + 3, i + 4)\\r\\n  }\\r\\n  return this\\r\\n}\\r\\n\\r\\nBuffer.prototype.toString = function toString () {\\r\\n  var length = this.length\\r\\n  if (length === 0) return ''\\r\\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\\r\\n  return slowToString.apply(this, arguments)\\r\\n}\\r\\n\\r\\nBuffer.prototype.equals = function equals (b) {\\r\\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\\r\\n  if (this === b) return true\\r\\n  return Buffer.compare(this, b) === 0\\r\\n}\\r\\n\\r\\nBuffer.prototype.inspect = function inspect () {\\r\\n  var str = ''\\r\\n  var max = exports.INSPECT_MAX_BYTES\\r\\n  if (this.length > 0) {\\r\\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\\r\\n    if (this.length > max) str += ' ... '\\r\\n  }\\r\\n  return '<Buffer ' + str + '>'\\r\\n}\\r\\n\\r\\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\\r\\n  if (!Buffer.isBuffer(target)) {\\r\\n    throw new TypeError('Argument must be a Buffer')\\r\\n  }\\r\\n\\r\\n  if (start === undefined) {\\r\\n    start = 0\\r\\n  }\\r\\n  if (end === undefined) {\\r\\n    end = target ? target.length : 0\\r\\n  }\\r\\n  if (thisStart === undefined) {\\r\\n    thisStart = 0\\r\\n  }\\r\\n  if (thisEnd === undefined) {\\r\\n    thisEnd = this.length\\r\\n  }\\r\\n\\r\\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\\r\\n    throw new RangeError('out of range index')\\r\\n  }\\r\\n\\r\\n  if (thisStart >= thisEnd && start >= end) {\\r\\n    return 0\\r\\n  }\\r\\n  if (thisStart >= thisEnd) {\\r\\n    return -1\\r\\n  }\\r\\n  if (start >= end) {\\r\\n    return 1\\r\\n  }\\r\\n\\r\\n  start >>>= 0\\r\\n  end >>>= 0\\r\\n  thisStart >>>= 0\\r\\n  thisEnd >>>= 0\\r\\n\\r\\n  if (this === target) return 0\\r\\n\\r\\n  var x = thisEnd - thisStart\\r\\n  var y = end - start\\r\\n  var len = Math.min(x, y)\\r\\n\\r\\n  var thisCopy = this.slice(thisStart, thisEnd)\\r\\n  var targetCopy = target.slice(start, end)\\r\\n\\r\\n  for (var i = 0; i < len; ++i) {\\r\\n    if (thisCopy[i] !== targetCopy[i]) {\\r\\n      x = thisCopy[i]\\r\\n      y = targetCopy[i]\\r\\n      break\\r\\n    }\\r\\n  }\\r\\n\\r\\n  if (x < y) return -1\\r\\n  if (y < x) return 1\\r\\n  return 0\\r\\n}\\r\\n\\r\\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\\r\\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\\r\\n//\\r\\n// Arguments:\\r\\n// - buffer - a Buffer to search\\r\\n// - val - a string, Buffer, or number\\r\\n// - byteOffset - an index into `buffer`; will be clamped to an int32\\r\\n// - encoding - an optional encoding, relevant is val is a string\\r\\n// - dir - true for indexOf, false for lastIndexOf\\r\\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\\r\\n  // Empty buffer means no match\\r\\n  if (buffer.length === 0) return -1\\r\\n\\r\\n  // Normalize byteOffset\\r\\n  if (typeof byteOffset === 'string') {\\r\\n    encoding = byteOffset\\r\\n    byteOffset = 0\\r\\n  } else if (byteOffset > 0x7fffffff) {\\r\\n    byteOffset = 0x7fffffff\\r\\n  } else if (byteOffset < -0x80000000) {\\r\\n    byteOffset = -0x80000000\\r\\n  }\\r\\n  byteOffset = +byteOffset  // Coerce to Number.\\r\\n  if (numberIsNaN(byteOffset)) {\\r\\n    // byteOffset: it it's undefined, null, NaN, \\\"foo\\\", etc, search whole buffer\\r\\n    byteOffset = dir ? 0 : (buffer.length - 1)\\r\\n  }\\r\\n\\r\\n  // Normalize byteOffset: negative offsets start from the end of the buffer\\r\\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\\r\\n  if (byteOffset >= buffer.length) {\\r\\n    if (dir) return -1\\r\\n    else byteOffset = buffer.length - 1\\r\\n  } else if (byteOffset < 0) {\\r\\n    if (dir) byteOffset = 0\\r\\n    else return -1\\r\\n  }\\r\\n\\r\\n  // Normalize val\\r\\n  if (typeof val === 'string') {\\r\\n    val = Buffer.from(val, encoding)\\r\\n  }\\r\\n\\r\\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\\r\\n  if (Buffer.isBuffer(val)) {\\r\\n    // Special case: looking for empty string/buffer always fails\\r\\n    if (val.length === 0) {\\r\\n      return -1\\r\\n    }\\r\\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\\r\\n  } else if (typeof val === 'number') {\\r\\n    val = val & 0xFF // Search for a byte value [0-255]\\r\\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\\r\\n      if (dir) {\\r\\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\\r\\n      } else {\\r\\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\\r\\n      }\\r\\n    }\\r\\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\\r\\n  }\\r\\n\\r\\n  throw new TypeError('val must be string, number or Buffer')\\r\\n}\\r\\n\\r\\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\\r\\n  var indexSize = 1\\r\\n  var arrLength = arr.length\\r\\n  var valLength = val.length\\r\\n\\r\\n  if (encoding !== undefined) {\\r\\n    encoding = String(encoding).toLowerCase()\\r\\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\\r\\n        encoding === 'utf16le' || encoding === 'utf-16le') {\\r\\n      if (arr.length < 2 || val.length < 2) {\\r\\n        return -1\\r\\n      }\\r\\n      indexSize = 2\\r\\n      arrLength /= 2\\r\\n      valLength /= 2\\r\\n      byteOffset /= 2\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function read (buf, i) {\\r\\n    if (indexSize === 1) {\\r\\n      return buf[i]\\r\\n    } else {\\r\\n      return buf.readUInt16BE(i * indexSize)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  var i\\r\\n  if (dir) {\\r\\n    var foundIndex = -1\\r\\n    for (i = byteOffset; i < arrLength; i++) {\\r\\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\\r\\n        if (foundIndex === -1) foundIndex = i\\r\\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\\r\\n      } else {\\r\\n        if (foundIndex !== -1) i -= i - foundIndex\\r\\n        foundIndex = -1\\r\\n      }\\r\\n    }\\r\\n  } else {\\r\\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\\r\\n    for (i = byteOffset; i >= 0; i--) {\\r\\n      var found = true\\r\\n      for (var j = 0; j < valLength; j++) {\\r\\n        if (read(arr, i + j) !== read(val, j)) {\\r\\n          found = false\\r\\n          break\\r\\n        }\\r\\n      }\\r\\n      if (found) return i\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return -1\\r\\n}\\r\\n\\r\\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\\r\\n  return this.indexOf(val, byteOffset, encoding) !== -1\\r\\n}\\r\\n\\r\\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\\r\\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\\r\\n}\\r\\n\\r\\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\\r\\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\\r\\n}\\r\\n\\r\\nfunction hexWrite (buf, string, offset, length) {\\r\\n  offset = Number(offset) || 0\\r\\n  var remaining = buf.length - offset\\r\\n  if (!length) {\\r\\n    length = remaining\\r\\n  } else {\\r\\n    length = Number(length)\\r\\n    if (length > remaining) {\\r\\n      length = remaining\\r\\n    }\\r\\n  }\\r\\n\\r\\n  // must be an even number of digits\\r\\n  var strLen = string.length\\r\\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\\r\\n\\r\\n  if (length > strLen / 2) {\\r\\n    length = strLen / 2\\r\\n  }\\r\\n  for (var i = 0; i < length; ++i) {\\r\\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\\r\\n    if (numberIsNaN(parsed)) return i\\r\\n    buf[offset + i] = parsed\\r\\n  }\\r\\n  return i\\r\\n}\\r\\n\\r\\nfunction utf8Write (buf, string, offset, length) {\\r\\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\\r\\n}\\r\\n\\r\\nfunction asciiWrite (buf, string, offset, length) {\\r\\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\\r\\n}\\r\\n\\r\\nfunction latin1Write (buf, string, offset, length) {\\r\\n  return asciiWrite(buf, string, offset, length)\\r\\n}\\r\\n\\r\\nfunction base64Write (buf, string, offset, length) {\\r\\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\\r\\n}\\r\\n\\r\\nfunction ucs2Write (buf, string, offset, length) {\\r\\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\\r\\n}\\r\\n\\r\\nBuffer.prototype.write = function write (string, offset, length, encoding) {\\r\\n  // Buffer#write(string)\\r\\n  if (offset === undefined) {\\r\\n    encoding = 'utf8'\\r\\n    length = this.length\\r\\n    offset = 0\\r\\n  // Buffer#write(string, encoding)\\r\\n  } else if (length === undefined && typeof offset === 'string') {\\r\\n    encoding = offset\\r\\n    length = this.length\\r\\n    offset = 0\\r\\n  // Buffer#write(string, offset[, length][, encoding])\\r\\n  } else if (isFinite(offset)) {\\r\\n    offset = offset >>> 0\\r\\n    if (isFinite(length)) {\\r\\n      length = length >>> 0\\r\\n      if (encoding === undefined) encoding = 'utf8'\\r\\n    } else {\\r\\n      encoding = length\\r\\n      length = undefined\\r\\n    }\\r\\n  } else {\\r\\n    throw new Error(\\r\\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\\r\\n    )\\r\\n  }\\r\\n\\r\\n  var remaining = this.length - offset\\r\\n  if (length === undefined || length > remaining) length = remaining\\r\\n\\r\\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\\r\\n    throw new RangeError('Attempt to write outside buffer bounds')\\r\\n  }\\r\\n\\r\\n  if (!encoding) encoding = 'utf8'\\r\\n\\r\\n  var loweredCase = false\\r\\n  for (;;) {\\r\\n    switch (encoding) {\\r\\n      case 'hex':\\r\\n        return hexWrite(this, string, offset, length)\\r\\n\\r\\n      case 'utf8':\\r\\n      case 'utf-8':\\r\\n        return utf8Write(this, string, offset, length)\\r\\n\\r\\n      case 'ascii':\\r\\n        return asciiWrite(this, string, offset, length)\\r\\n\\r\\n      case 'latin1':\\r\\n      case 'binary':\\r\\n        return latin1Write(this, string, offset, length)\\r\\n\\r\\n      case 'base64':\\r\\n        // Warning: maxLength not taken into account in base64Write\\r\\n        return base64Write(this, string, offset, length)\\r\\n\\r\\n      case 'ucs2':\\r\\n      case 'ucs-2':\\r\\n      case 'utf16le':\\r\\n      case 'utf-16le':\\r\\n        return ucs2Write(this, string, offset, length)\\r\\n\\r\\n      default:\\r\\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\\r\\n        encoding = ('' + encoding).toLowerCase()\\r\\n        loweredCase = true\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\nBuffer.prototype.toJSON = function toJSON () {\\r\\n  return {\\r\\n    type: 'Buffer',\\r\\n    data: Array.prototype.slice.call(this._arr || this, 0)\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction base64Slice (buf, start, end) {\\r\\n  if (start === 0 && end === buf.length) {\\r\\n    return base64.fromByteArray(buf)\\r\\n  } else {\\r\\n    return base64.fromByteArray(buf.slice(start, end))\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction utf8Slice (buf, start, end) {\\r\\n  end = Math.min(buf.length, end)\\r\\n  var res = []\\r\\n\\r\\n  var i = start\\r\\n  while (i < end) {\\r\\n    var firstByte = buf[i]\\r\\n    var codePoint = null\\r\\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\\r\\n      : (firstByte > 0xDF) ? 3\\r\\n      : (firstByte > 0xBF) ? 2\\r\\n      : 1\\r\\n\\r\\n    if (i + bytesPerSequence <= end) {\\r\\n      var secondByte, thirdByte, fourthByte, tempCodePoint\\r\\n\\r\\n      switch (bytesPerSequence) {\\r\\n        case 1:\\r\\n          if (firstByte < 0x80) {\\r\\n            codePoint = firstByte\\r\\n          }\\r\\n          break\\r\\n        case 2:\\r\\n          secondByte = buf[i + 1]\\r\\n          if ((secondByte & 0xC0) === 0x80) {\\r\\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\\r\\n            if (tempCodePoint > 0x7F) {\\r\\n              codePoint = tempCodePoint\\r\\n            }\\r\\n          }\\r\\n          break\\r\\n        case 3:\\r\\n          secondByte = buf[i + 1]\\r\\n          thirdByte = buf[i + 2]\\r\\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\\r\\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\\r\\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\\r\\n              codePoint = tempCodePoint\\r\\n            }\\r\\n          }\\r\\n          break\\r\\n        case 4:\\r\\n          secondByte = buf[i + 1]\\r\\n          thirdByte = buf[i + 2]\\r\\n          fourthByte = buf[i + 3]\\r\\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\\r\\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\\r\\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\\r\\n              codePoint = tempCodePoint\\r\\n            }\\r\\n          }\\r\\n      }\\r\\n    }\\r\\n\\r\\n    if (codePoint === null) {\\r\\n      // we did not generate a valid codePoint so insert a\\r\\n      // replacement char (U+FFFD) and advance only 1 byte\\r\\n      codePoint = 0xFFFD\\r\\n      bytesPerSequence = 1\\r\\n    } else if (codePoint > 0xFFFF) {\\r\\n      // encode to utf16 (surrogate pair dance)\\r\\n      codePoint -= 0x10000\\r\\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\\r\\n      codePoint = 0xDC00 | codePoint & 0x3FF\\r\\n    }\\r\\n\\r\\n    res.push(codePoint)\\r\\n    i += bytesPerSequence\\r\\n  }\\r\\n\\r\\n  return decodeCodePointsArray(res)\\r\\n}\\r\\n\\r\\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\\r\\n// the lowest limit is Chrome, with 0x10000 args.\\r\\n// We go 1 magnitude less, for safety\\r\\nvar MAX_ARGUMENTS_LENGTH = 0x1000\\r\\n\\r\\nfunction decodeCodePointsArray (codePoints) {\\r\\n  var len = codePoints.length\\r\\n  if (len <= MAX_ARGUMENTS_LENGTH) {\\r\\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\\r\\n  }\\r\\n\\r\\n  // Decode in chunks to avoid \\\"call stack size exceeded\\\".\\r\\n  var res = ''\\r\\n  var i = 0\\r\\n  while (i < len) {\\r\\n    res += String.fromCharCode.apply(\\r\\n      String,\\r\\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\\r\\n    )\\r\\n  }\\r\\n  return res\\r\\n}\\r\\n\\r\\nfunction asciiSlice (buf, start, end) {\\r\\n  var ret = ''\\r\\n  end = Math.min(buf.length, end)\\r\\n\\r\\n  for (var i = start; i < end; ++i) {\\r\\n    ret += String.fromCharCode(buf[i] & 0x7F)\\r\\n  }\\r\\n  return ret\\r\\n}\\r\\n\\r\\nfunction latin1Slice (buf, start, end) {\\r\\n  var ret = ''\\r\\n  end = Math.min(buf.length, end)\\r\\n\\r\\n  for (var i = start; i < end; ++i) {\\r\\n    ret += String.fromCharCode(buf[i])\\r\\n  }\\r\\n  return ret\\r\\n}\\r\\n\\r\\nfunction hexSlice (buf, start, end) {\\r\\n  var len = buf.length\\r\\n\\r\\n  if (!start || start < 0) start = 0\\r\\n  if (!end || end < 0 || end > len) end = len\\r\\n\\r\\n  var out = ''\\r\\n  for (var i = start; i < end; ++i) {\\r\\n    out += toHex(buf[i])\\r\\n  }\\r\\n  return out\\r\\n}\\r\\n\\r\\nfunction utf16leSlice (buf, start, end) {\\r\\n  var bytes = buf.slice(start, end)\\r\\n  var res = ''\\r\\n  for (var i = 0; i < bytes.length; i += 2) {\\r\\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\\r\\n  }\\r\\n  return res\\r\\n}\\r\\n\\r\\nBuffer.prototype.slice = function slice (start, end) {\\r\\n  var len = this.length\\r\\n  start = ~~start\\r\\n  end = end === undefined ? len : ~~end\\r\\n\\r\\n  if (start < 0) {\\r\\n    start += len\\r\\n    if (start < 0) start = 0\\r\\n  } else if (start > len) {\\r\\n    start = len\\r\\n  }\\r\\n\\r\\n  if (end < 0) {\\r\\n    end += len\\r\\n    if (end < 0) end = 0\\r\\n  } else if (end > len) {\\r\\n    end = len\\r\\n  }\\r\\n\\r\\n  if (end < start) end = start\\r\\n\\r\\n  var newBuf = this.subarray(start, end)\\r\\n  // Return an augmented `Uint8Array` instance\\r\\n  newBuf.__proto__ = Buffer.prototype\\r\\n  return newBuf\\r\\n}\\r\\n\\r\\n/*\\r\\n * Need to make sure that buffer isn't trying to write out of bounds.\\r\\n */\\r\\nfunction checkOffset (offset, ext, length) {\\r\\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\\r\\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  byteLength = byteLength >>> 0\\r\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\r\\n\\r\\n  var val = this[offset]\\r\\n  var mul = 1\\r\\n  var i = 0\\r\\n  while (++i < byteLength && (mul *= 0x100)) {\\r\\n    val += this[offset + i] * mul\\r\\n  }\\r\\n\\r\\n  return val\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  byteLength = byteLength >>> 0\\r\\n  if (!noAssert) {\\r\\n    checkOffset(offset, byteLength, this.length)\\r\\n  }\\r\\n\\r\\n  var val = this[offset + --byteLength]\\r\\n  var mul = 1\\r\\n  while (byteLength > 0 && (mul *= 0x100)) {\\r\\n    val += this[offset + --byteLength] * mul\\r\\n  }\\r\\n\\r\\n  return val\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 1, this.length)\\r\\n  return this[offset]\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\r\\n  return this[offset] | (this[offset + 1] << 8)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\r\\n  return (this[offset] << 8) | this[offset + 1]\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\r\\n\\r\\n  return ((this[offset]) |\\r\\n      (this[offset + 1] << 8) |\\r\\n      (this[offset + 2] << 16)) +\\r\\n      (this[offset + 3] * 0x1000000)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\r\\n\\r\\n  return (this[offset] * 0x1000000) +\\r\\n    ((this[offset + 1] << 16) |\\r\\n    (this[offset + 2] << 8) |\\r\\n    this[offset + 3])\\r\\n}\\r\\n\\r\\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  byteLength = byteLength >>> 0\\r\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\r\\n\\r\\n  var val = this[offset]\\r\\n  var mul = 1\\r\\n  var i = 0\\r\\n  while (++i < byteLength && (mul *= 0x100)) {\\r\\n    val += this[offset + i] * mul\\r\\n  }\\r\\n  mul *= 0x80\\r\\n\\r\\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\\r\\n\\r\\n  return val\\r\\n}\\r\\n\\r\\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  byteLength = byteLength >>> 0\\r\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\r\\n\\r\\n  var i = byteLength\\r\\n  var mul = 1\\r\\n  var val = this[offset + --i]\\r\\n  while (i > 0 && (mul *= 0x100)) {\\r\\n    val += this[offset + --i] * mul\\r\\n  }\\r\\n  mul *= 0x80\\r\\n\\r\\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\\r\\n\\r\\n  return val\\r\\n}\\r\\n\\r\\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 1, this.length)\\r\\n  if (!(this[offset] & 0x80)) return (this[offset])\\r\\n  return ((0xff - this[offset] + 1) * -1)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\r\\n  var val = this[offset] | (this[offset + 1] << 8)\\r\\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\\r\\n}\\r\\n\\r\\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\r\\n  var val = this[offset + 1] | (this[offset] << 8)\\r\\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\\r\\n}\\r\\n\\r\\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\r\\n\\r\\n  return (this[offset]) |\\r\\n    (this[offset + 1] << 8) |\\r\\n    (this[offset + 2] << 16) |\\r\\n    (this[offset + 3] << 24)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\r\\n\\r\\n  return (this[offset] << 24) |\\r\\n    (this[offset + 1] << 16) |\\r\\n    (this[offset + 2] << 8) |\\r\\n    (this[offset + 3])\\r\\n}\\r\\n\\r\\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\r\\n  return ieee754.read(this, offset, true, 23, 4)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\r\\n  return ieee754.read(this, offset, false, 23, 4)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 8, this.length)\\r\\n  return ieee754.read(this, offset, true, 52, 8)\\r\\n}\\r\\n\\r\\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkOffset(offset, 8, this.length)\\r\\n  return ieee754.read(this, offset, false, 52, 8)\\r\\n}\\r\\n\\r\\nfunction checkInt (buf, value, offset, ext, max, min) {\\r\\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\\\"buffer\\\" argument must be a Buffer instance')\\r\\n  if (value > max || value < min) throw new RangeError('\\\"value\\\" argument is out of bounds')\\r\\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  byteLength = byteLength >>> 0\\r\\n  if (!noAssert) {\\r\\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\\r\\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\\r\\n  }\\r\\n\\r\\n  var mul = 1\\r\\n  var i = 0\\r\\n  this[offset] = value & 0xFF\\r\\n  while (++i < byteLength && (mul *= 0x100)) {\\r\\n    this[offset + i] = (value / mul) & 0xFF\\r\\n  }\\r\\n\\r\\n  return offset + byteLength\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  byteLength = byteLength >>> 0\\r\\n  if (!noAssert) {\\r\\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\\r\\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\\r\\n  }\\r\\n\\r\\n  var i = byteLength - 1\\r\\n  var mul = 1\\r\\n  this[offset + i] = value & 0xFF\\r\\n  while (--i >= 0 && (mul *= 0x100)) {\\r\\n    this[offset + i] = (value / mul) & 0xFF\\r\\n  }\\r\\n\\r\\n  return offset + byteLength\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\\r\\n  this[offset] = (value & 0xff)\\r\\n  return offset + 1\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\\r\\n  this[offset] = (value & 0xff)\\r\\n  this[offset + 1] = (value >>> 8)\\r\\n  return offset + 2\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\\r\\n  this[offset] = (value >>> 8)\\r\\n  this[offset + 1] = (value & 0xff)\\r\\n  return offset + 2\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\\r\\n  this[offset + 3] = (value >>> 24)\\r\\n  this[offset + 2] = (value >>> 16)\\r\\n  this[offset + 1] = (value >>> 8)\\r\\n  this[offset] = (value & 0xff)\\r\\n  return offset + 4\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\\r\\n  this[offset] = (value >>> 24)\\r\\n  this[offset + 1] = (value >>> 16)\\r\\n  this[offset + 2] = (value >>> 8)\\r\\n  this[offset + 3] = (value & 0xff)\\r\\n  return offset + 4\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) {\\r\\n    var limit = Math.pow(2, (8 * byteLength) - 1)\\r\\n\\r\\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\\r\\n  }\\r\\n\\r\\n  var i = 0\\r\\n  var mul = 1\\r\\n  var sub = 0\\r\\n  this[offset] = value & 0xFF\\r\\n  while (++i < byteLength && (mul *= 0x100)) {\\r\\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\\r\\n      sub = 1\\r\\n    }\\r\\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\\r\\n  }\\r\\n\\r\\n  return offset + byteLength\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) {\\r\\n    var limit = Math.pow(2, (8 * byteLength) - 1)\\r\\n\\r\\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\\r\\n  }\\r\\n\\r\\n  var i = byteLength - 1\\r\\n  var mul = 1\\r\\n  var sub = 0\\r\\n  this[offset + i] = value & 0xFF\\r\\n  while (--i >= 0 && (mul *= 0x100)) {\\r\\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\\r\\n      sub = 1\\r\\n    }\\r\\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\\r\\n  }\\r\\n\\r\\n  return offset + byteLength\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\\r\\n  if (value < 0) value = 0xff + value + 1\\r\\n  this[offset] = (value & 0xff)\\r\\n  return offset + 1\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\\r\\n  this[offset] = (value & 0xff)\\r\\n  this[offset + 1] = (value >>> 8)\\r\\n  return offset + 2\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\\r\\n  this[offset] = (value >>> 8)\\r\\n  this[offset + 1] = (value & 0xff)\\r\\n  return offset + 2\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\\r\\n  this[offset] = (value & 0xff)\\r\\n  this[offset + 1] = (value >>> 8)\\r\\n  this[offset + 2] = (value >>> 16)\\r\\n  this[offset + 3] = (value >>> 24)\\r\\n  return offset + 4\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\\r\\n  if (value < 0) value = 0xffffffff + value + 1\\r\\n  this[offset] = (value >>> 24)\\r\\n  this[offset + 1] = (value >>> 16)\\r\\n  this[offset + 2] = (value >>> 8)\\r\\n  this[offset + 3] = (value & 0xff)\\r\\n  return offset + 4\\r\\n}\\r\\n\\r\\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\\r\\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\\r\\n  if (offset < 0) throw new RangeError('Index out of range')\\r\\n}\\r\\n\\r\\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) {\\r\\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\\r\\n  }\\r\\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\\r\\n  return offset + 4\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\\r\\n  return writeFloat(this, value, offset, true, noAssert)\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\\r\\n  return writeFloat(this, value, offset, false, noAssert)\\r\\n}\\r\\n\\r\\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\\r\\n  value = +value\\r\\n  offset = offset >>> 0\\r\\n  if (!noAssert) {\\r\\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\\r\\n  }\\r\\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\\r\\n  return offset + 8\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\\r\\n  return writeDouble(this, value, offset, true, noAssert)\\r\\n}\\r\\n\\r\\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\\r\\n  return writeDouble(this, value, offset, false, noAssert)\\r\\n}\\r\\n\\r\\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\\r\\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\\r\\n  if (!start) start = 0\\r\\n  if (!end && end !== 0) end = this.length\\r\\n  if (targetStart >= target.length) targetStart = target.length\\r\\n  if (!targetStart) targetStart = 0\\r\\n  if (end > 0 && end < start) end = start\\r\\n\\r\\n  // Copy 0 bytes; we're done\\r\\n  if (end === start) return 0\\r\\n  if (target.length === 0 || this.length === 0) return 0\\r\\n\\r\\n  // Fatal error conditions\\r\\n  if (targetStart < 0) {\\r\\n    throw new RangeError('targetStart out of bounds')\\r\\n  }\\r\\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\\r\\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\\r\\n\\r\\n  // Are we oob?\\r\\n  if (end > this.length) end = this.length\\r\\n  if (target.length - targetStart < end - start) {\\r\\n    end = target.length - targetStart + start\\r\\n  }\\r\\n\\r\\n  var len = end - start\\r\\n  var i\\r\\n\\r\\n  if (this === target && start < targetStart && targetStart < end) {\\r\\n    // descending copy from end\\r\\n    for (i = len - 1; i >= 0; --i) {\\r\\n      target[i + targetStart] = this[i + start]\\r\\n    }\\r\\n  } else if (len < 1000) {\\r\\n    // ascending copy from start\\r\\n    for (i = 0; i < len; ++i) {\\r\\n      target[i + targetStart] = this[i + start]\\r\\n    }\\r\\n  } else {\\r\\n    Uint8Array.prototype.set.call(\\r\\n      target,\\r\\n      this.subarray(start, start + len),\\r\\n      targetStart\\r\\n    )\\r\\n  }\\r\\n\\r\\n  return len\\r\\n}\\r\\n\\r\\n// Usage:\\r\\n//    buffer.fill(number[, offset[, end]])\\r\\n//    buffer.fill(buffer[, offset[, end]])\\r\\n//    buffer.fill(string[, offset[, end]][, encoding])\\r\\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\\r\\n  // Handle string cases:\\r\\n  if (typeof val === 'string') {\\r\\n    if (typeof start === 'string') {\\r\\n      encoding = start\\r\\n      start = 0\\r\\n      end = this.length\\r\\n    } else if (typeof end === 'string') {\\r\\n      encoding = end\\r\\n      end = this.length\\r\\n    }\\r\\n    if (val.length === 1) {\\r\\n      var code = val.charCodeAt(0)\\r\\n      if (code < 256) {\\r\\n        val = code\\r\\n      }\\r\\n    }\\r\\n    if (encoding !== undefined && typeof encoding !== 'string') {\\r\\n      throw new TypeError('encoding must be a string')\\r\\n    }\\r\\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\\r\\n      throw new TypeError('Unknown encoding: ' + encoding)\\r\\n    }\\r\\n  } else if (typeof val === 'number') {\\r\\n    val = val & 255\\r\\n  }\\r\\n\\r\\n  // Invalid ranges are not set to a default, so can range check early.\\r\\n  if (start < 0 || this.length < start || this.length < end) {\\r\\n    throw new RangeError('Out of range index')\\r\\n  }\\r\\n\\r\\n  if (end <= start) {\\r\\n    return this\\r\\n  }\\r\\n\\r\\n  start = start >>> 0\\r\\n  end = end === undefined ? this.length : end >>> 0\\r\\n\\r\\n  if (!val) val = 0\\r\\n\\r\\n  var i\\r\\n  if (typeof val === 'number') {\\r\\n    for (i = start; i < end; ++i) {\\r\\n      this[i] = val\\r\\n    }\\r\\n  } else {\\r\\n    var bytes = Buffer.isBuffer(val)\\r\\n      ? val\\r\\n      : new Buffer(val, encoding)\\r\\n    var len = bytes.length\\r\\n    for (i = 0; i < end - start; ++i) {\\r\\n      this[i + start] = bytes[i % len]\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return this\\r\\n}\\r\\n\\r\\n// HELPER FUNCTIONS\\r\\n// ================\\r\\n\\r\\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\\r\\n\\r\\nfunction base64clean (str) {\\r\\n  // Node strips out invalid characters like \\\\n and \\\\t from the string, base64-js does not\\r\\n  str = str.trim().replace(INVALID_BASE64_RE, '')\\r\\n  // Node converts strings with length < 2 to ''\\r\\n  if (str.length < 2) return ''\\r\\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\\r\\n  while (str.length % 4 !== 0) {\\r\\n    str = str + '='\\r\\n  }\\r\\n  return str\\r\\n}\\r\\n\\r\\nfunction toHex (n) {\\r\\n  if (n < 16) return '0' + n.toString(16)\\r\\n  return n.toString(16)\\r\\n}\\r\\n\\r\\nfunction utf8ToBytes (string, units) {\\r\\n  units = units || Infinity\\r\\n  var codePoint\\r\\n  var length = string.length\\r\\n  var leadSurrogate = null\\r\\n  var bytes = []\\r\\n\\r\\n  for (var i = 0; i < length; ++i) {\\r\\n    codePoint = string.charCodeAt(i)\\r\\n\\r\\n    // is surrogate component\\r\\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\\r\\n      // last char was a lead\\r\\n      if (!leadSurrogate) {\\r\\n        // no lead yet\\r\\n        if (codePoint > 0xDBFF) {\\r\\n          // unexpected trail\\r\\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\r\\n          continue\\r\\n        } else if (i + 1 === length) {\\r\\n          // unpaired lead\\r\\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\r\\n          continue\\r\\n        }\\r\\n\\r\\n        // valid lead\\r\\n        leadSurrogate = codePoint\\r\\n\\r\\n        continue\\r\\n      }\\r\\n\\r\\n      // 2 leads in a row\\r\\n      if (codePoint < 0xDC00) {\\r\\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\r\\n        leadSurrogate = codePoint\\r\\n        continue\\r\\n      }\\r\\n\\r\\n      // valid surrogate pair\\r\\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\\r\\n    } else if (leadSurrogate) {\\r\\n      // valid bmp char, but last char was a lead\\r\\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\r\\n    }\\r\\n\\r\\n    leadSurrogate = null\\r\\n\\r\\n    // encode utf8\\r\\n    if (codePoint < 0x80) {\\r\\n      if ((units -= 1) < 0) break\\r\\n      bytes.push(codePoint)\\r\\n    } else if (codePoint < 0x800) {\\r\\n      if ((units -= 2) < 0) break\\r\\n      bytes.push(\\r\\n        codePoint >> 0x6 | 0xC0,\\r\\n        codePoint & 0x3F | 0x80\\r\\n      )\\r\\n    } else if (codePoint < 0x10000) {\\r\\n      if ((units -= 3) < 0) break\\r\\n      bytes.push(\\r\\n        codePoint >> 0xC | 0xE0,\\r\\n        codePoint >> 0x6 & 0x3F | 0x80,\\r\\n        codePoint & 0x3F | 0x80\\r\\n      )\\r\\n    } else if (codePoint < 0x110000) {\\r\\n      if ((units -= 4) < 0) break\\r\\n      bytes.push(\\r\\n        codePoint >> 0x12 | 0xF0,\\r\\n        codePoint >> 0xC & 0x3F | 0x80,\\r\\n        codePoint >> 0x6 & 0x3F | 0x80,\\r\\n        codePoint & 0x3F | 0x80\\r\\n      )\\r\\n    } else {\\r\\n      throw new Error('Invalid code point')\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return bytes\\r\\n}\\r\\n\\r\\nfunction asciiToBytes (str) {\\r\\n  var byteArray = []\\r\\n  for (var i = 0; i < str.length; ++i) {\\r\\n    // Node's code seems to be doing this and not & 0x7F..\\r\\n    byteArray.push(str.charCodeAt(i) & 0xFF)\\r\\n  }\\r\\n  return byteArray\\r\\n}\\r\\n\\r\\nfunction utf16leToBytes (str, units) {\\r\\n  var c, hi, lo\\r\\n  var byteArray = []\\r\\n  for (var i = 0; i < str.length; ++i) {\\r\\n    if ((units -= 2) < 0) break\\r\\n\\r\\n    c = str.charCodeAt(i)\\r\\n    hi = c >> 8\\r\\n    lo = c % 256\\r\\n    byteArray.push(lo)\\r\\n    byteArray.push(hi)\\r\\n  }\\r\\n\\r\\n  return byteArray\\r\\n}\\r\\n\\r\\nfunction base64ToBytes (str) {\\r\\n  return base64.toByteArray(base64clean(str))\\r\\n}\\r\\n\\r\\nfunction blitBuffer (src, dst, offset, length) {\\r\\n  for (var i = 0; i < length; ++i) {\\r\\n    if ((i + offset >= dst.length) || (i >= src.length)) break\\r\\n    dst[i + offset] = src[i]\\r\\n  }\\r\\n  return i\\r\\n}\\r\\n\\r\\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\\r\\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\\r\\nfunction isArrayBuffer (obj) {\\r\\n  return obj instanceof ArrayBuffer ||\\r\\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\\r\\n      typeof obj.byteLength === 'number')\\r\\n}\\r\\n\\r\\n// Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`\\r\\nfunction isArrayBufferView (obj) {\\r\\n  return (typeof ArrayBuffer.isView === 'function') && ArrayBuffer.isView(obj)\\r\\n}\\r\\n\\r\\nfunction numberIsNaN (obj) {\\r\\n  return obj !== obj // eslint-disable-line no-self-compare\\r\\n}\\r\\n\\r\\n},{\\\"base64-js\\\":34,\\\"ieee754\\\":36}],36:[function(require,module,exports){\\r\\narguments[4][3][0].apply(exports,arguments)\\r\\n},{\\\"dup\\\":3}]},{},[1])(1)\\r\\n});\""
		},
		{
			"name": "shader.js",
			"source": "\"//  shader.js\\r\\n\\r\\nvertexShader = [\\r\\n\\r\\n\\t\\\"attribute vec4 tangent;\\\",\\r\\n\\r\\n\\t\\\"uniform float time;\\\",\\r\\n\\t\\\"uniform vec2 repeat;\\\",\\r\\n\\t\\\"uniform float useNormal;\\\",\\r\\n\\t\\\"uniform float useRim;\\\",\\r\\n\\r\\n\\t\\\"varying vec2 vUv;\\\",\\r\\n\\t\\\"varying vec3 vTangent;\\\",\\r\\n\\t\\\"varying vec3 vBinormal;\\\",\\r\\n\\t\\\"varying vec3 vNormal;\\\",\\r\\n\\t\\\"varying vec3 vEye;\\\",\\r\\n\\t\\\"varying vec3 vU;\\\",\\r\\n\\t\\\"varying vec2 vN;\\\",\\r\\n\\r\\n\\t\\\"void main() {\\\",\\r\\n\\r\\n\\t\\t\\\"vU = normalize( vec3( modelViewMatrix * vec4( position, 1.0 ) ) );\\\",\\r\\n\\r\\n\\t\\t\\\"if( useNormal == 0. ) {\\\",\\r\\n\\t\\t\\t\\\"vec3 n = normalize( normalMatrix * normal );\\\",\\r\\n\\t\\t\\t\\\"vec3 r = reflect( vU, n );\\\",\\r\\n\\t\\t\\t\\\"float m = 2.0 * sqrt( r.x * r.x + r.y * r.y + ( r.z + 1.0 ) * ( r.z+1.0 ) );\\\",\\r\\n\\t\\t\\t\\\"vN = vec2( r.x / m + 0.5,  r.y / m + 0.5 );\\\",\\r\\n\\t\\t\\\"} else {\\\",\\r\\n\\t\\t\\t\\\"vN = vec2( 0. );\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\t\\\"vUv = repeat * uv;\\\",\\r\\n\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\r\\n\\r\\n\\t\\t\\\"vNormal = normalize( normalMatrix * normal );\\\",\\r\\n\\t\\t\\\"if( useNormal == 1. ) {\\\",\\r\\n\\t\\t\\t\\\"vTangent = normalize( normalMatrix * tangent.xyz );\\\",\\r\\n\\t\\t\\t\\\"vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\\\",\\r\\n\\t\\t\\\"} else {\\\",\\r\\n\\t\\t\\t\\\"vTangent = vec3( 0. );\\\",\\r\\n\\t\\t\\t\\\"vBinormal = vec3( 0. );\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\t\\\"if( useRim > 0. ) {\\\",\\r\\n\\t\\t\\t\\\"vEye = ( modelViewMatrix * vec4( position, 1.0 ) ).xyz;\\\",\\r\\n\\t\\t\\\"} else {\\\",\\r\\n\\t\\t\\t\\\"vEye = vec3( 0. );\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\\"}\\\"\\r\\n\\r\\n].join(\\\" \\\");\\r\\n\\r\\nfragmentShader = [\\r\\n\\r\\n\\t\\\"uniform float time;\\\",\\r\\n\\t\\\"uniform float bump;\\\",\\r\\n\\t\\\"uniform sampler2D tNormal;\\\",\\r\\n\\t\\\"uniform sampler2D tMatCap;\\\",\\r\\n\\t\\\"uniform float noise;\\\",\\r\\n\\t\\\"uniform float useNormal;\\\",\\r\\n\\t\\\"uniform float useRim;\\\",\\r\\n\\t\\\"uniform float rimPower;\\\",\\r\\n\\t\\\"uniform float useScreen;\\\",\\r\\n\\t\\\"uniform float normalScale;\\\",\\r\\n\\t\\\"uniform float normalRepeat;\\\",\\r\\n\\r\\n\\t\\\"varying vec2 vUv;\\\",\\r\\n\\t\\\"varying vec3 vTangent;\\\",\\r\\n\\t\\\"varying vec3 vBinormal;\\\",\\r\\n\\t\\\"varying vec3 vNormal;\\\",\\r\\n\\t\\\"varying vec3 vEye;\\\",\\r\\n\\t\\\"varying vec3 vU;\\\",\\r\\n\\t\\\"varying vec2 vN;\\\",\\r\\n\\r\\n\\t\\\"float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}\\\",\\r\\n\\r\\n\\t\\\"void main() {\\\",\\r\\n\\r\\n\\t\\t\\\"vec3 finalNormal = vNormal;\\\",\\r\\n\\t\\t\\\"vec2 calculatedNormal = vN;\\\",\\r\\n\\r\\n\\t\\t\\\"if( useNormal == 1. ) {\\\",\\r\\n\\t\\t\\t\\\"vec3 normalTex = texture2D( tNormal, vUv * normalRepeat ).xyz * 2.0 - 1.0;\\\",\\r\\n\\t\\t\\t\\\"normalTex.xy *= normalScale;\\\",\\r\\n\\t\\t\\t\\\"normalTex.y *= -1.;\\\",\\r\\n\\t\\t\\t\\\"normalTex = normalize( normalTex );\\\",\\r\\n\\t\\t\\t\\\"mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\\\",\\r\\n\\t\\t\\t\\\"finalNormal = tsb * normalTex;\\\",\\r\\n\\r\\n\\t\\t\\t\\\"vec3 r = reflect( vU, normalize( finalNormal ) );\\\",\\r\\n\\t\\t\\t\\\"float m = 2.0 * sqrt( r.x * r.x + r.y * r.y + ( r.z + 1.0 ) * ( r.z+1.0 ) );\\\",\\r\\n\\t\\t\\t\\\"calculatedNormal = vec2( r.x / m + 0.5,  r.y / m + 0.5 );\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\t\\\"vec3 base = texture2D( tMatCap, calculatedNormal ).rgb;\\\",\\r\\n\\r\\n\\t\\t// rim lighting\\r\\n\\r\\n\\t\\t\\\"if( useRim > 0. ) {\\\",\\r\\n\\t\\t\\t\\\"float f = rimPower * abs( dot( vNormal, normalize( vEye ) ) );\\\",\\r\\n\\t\\t\\t\\\"f = useRim * ( 1. - smoothstep( 0.0, 1., f ) );\\\",\\r\\n\\t\\t\\t\\\"base += vec3( f );\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\t// screen blending\\r\\n\\r\\n\\t\\t\\\"if( useScreen == 1. ) {\\\",\\r\\n\\t\\t\\t\\\"base = vec3( 1. ) - ( vec3( 1. ) - base ) * ( vec3( 1. ) - base );\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\t// noise \\r\\n\\r\\n\\t\\t\\\"base += noise * ( .5 - random( vec3( 1. ), length( gl_FragCoord ) ) );\\\",\\r\\n\\r\\n\\t\\t\\\"gl_FragColor = vec4( base, 1. );\\\",\\r\\n\\r\\n\\t\\\"}\\\"\\r\\n\\r\\n].join(\\\"\\\");\\r\\n\\r\\nfunction ShaderMaterial(normalMap, matcapMap, callback){\\r\\n\\treturn new Promise( function(resolve, reject){\\r\\n\\t\\tvar material = new THREE.ShaderMaterial( {\\r\\n\\t\\t\\tuniforms: { \\r\\n\\t\\t\\t\\ttNormal: { type: \\\"t\\\", value: normalMap },\\r\\n\\t\\t\\t\\ttMatCap: { type: \\\"t\\\", value: matcapMap },\\r\\n\\t\\t\\t\\ttime: { type: \\\"f\\\", value: 0 },\\r\\n\\t\\t\\t\\tbump: { type: \\\"f\\\", value: 0 },\\r\\n\\t\\t\\t\\tnoise: { type: \\\"f\\\", value: 0.04 },\\r\\n\\t\\t\\t\\trepeat: { type: \\\"v2\\\", value: new THREE.Vector2( 1, 1 ) },\\r\\n\\t\\t\\t\\tuseNormal: { type: \\\"f\\\", value: 0 },\\r\\n\\t\\t\\t\\tuseRim: { type: \\\"f\\\", value: 0 },\\r\\n\\t\\t\\t\\trimPower: { type: \\\"f\\\", value: 0 },\\r\\n\\t\\t\\t\\tuseScreen: { type: \\\"f\\\", value: 0 },\\r\\n\\t\\t\\t\\tnormalScale: { type: \\\"f\\\", value: 1 },\\r\\n\\t\\t\\t\\tnormalRepeat: { type: \\\"f\\\", value: 1 }\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tvertexShader: vertexShader,       //  document.getElementById( \\\"vertexShader\\\" ).textContent,\\r\\n\\t\\t\\tfragmentShader: fragmentShader,   //  document.getElementById( \\\"fragmentShader\\\" ).textContent,\\r\\n\\t\\t\\tshading: THREE.SmoothShading,\\r\\n\\t\\t\\tside: THREE.DoubleSide\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tmaterial.uniforms.tMatCap.value.wrapS = material.uniforms.tMatCap.value.wrapT = THREE.ClampToEdgeWrapping;\\r\\n\\t\\tmaterial.uniforms.tNormal.value.wrapS = material.uniforms.tNormal.value.wrapT = THREE.RepeatWrapping;\\r\\n\\r\\n\\t\\tmaterial.uniforms.tMatCap.value.needsUpdate = true;\\r\\n\\t\\tmaterial.uniforms.tNormal.value.needsUpdate = true;\\r\\n\\r\\n\\t\\tif ( !!callback ) callback( material );\\r\\n\\r\\n\\t\\tresolve( material );\\r\\n\\t});\\r\\n}\\r\\n\\r\\n\""
		},
		{
			"name": "three.js",
			"source": "\"// File:src/Three.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nvar THREE = { REVISION: '78' };\\r\\n\\r\\n//\\r\\n\\r\\nif ( typeof define === 'function' && define.amd ) {\\r\\n\\r\\n\\tdefine( 'three', THREE );\\r\\n\\r\\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\\r\\n\\r\\n\\tmodule.exports = THREE;\\r\\n\\r\\n}\\r\\n\\r\\n// Polyfills\\r\\n\\r\\nif ( Number.EPSILON === undefined ) {\\r\\n\\r\\n\\tNumber.EPSILON = Math.pow( 2, - 52 );\\r\\n\\r\\n}\\r\\n\\r\\n//\\r\\n\\r\\nif ( Math.sign === undefined ) {\\r\\n\\r\\n\\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\\r\\n\\r\\n\\tMath.sign = function ( x ) {\\r\\n\\r\\n\\t\\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\\r\\n\\r\\n\\t};\\r\\n\\r\\n}\\r\\n\\r\\nif ( Function.prototype.name === undefined ) {\\r\\n\\r\\n\\t// Missing in IE9-11.\\r\\n\\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\\r\\n\\r\\n\\tObject.defineProperty( Function.prototype, 'name', {\\r\\n\\r\\n\\t\\tget: function () {\\r\\n\\r\\n\\t\\t\\treturn this.toString().match( /^\\\\s*function\\\\s*(\\\\S*)\\\\s*\\\\(/ )[ 1 ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t} );\\r\\n\\r\\n}\\r\\n\\r\\nif ( Object.assign === undefined ) {\\r\\n\\r\\n\\t// Missing in IE.\\r\\n\\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\\r\\n\\r\\n\\t( function () {\\r\\n\\r\\n\\t\\tObject.assign = function ( target ) {\\r\\n\\r\\n\\t\\t\\t'use strict';\\r\\n\\r\\n\\t\\t\\tif ( target === undefined || target === null ) {\\r\\n\\r\\n\\t\\t\\t\\tthrow new TypeError( 'Cannot convert undefined or null to object' );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar output = Object( target );\\r\\n\\r\\n\\t\\t\\tfor ( var index = 1; index < arguments.length; index ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar source = arguments[ index ];\\r\\n\\r\\n\\t\\t\\t\\tif ( source !== undefined && source !== null ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var nextKey in source ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\toutput[ nextKey ] = source[ nextKey ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn output;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )();\\r\\n\\r\\n}\\r\\n\\r\\n//\\r\\n\\r\\nObject.assign( THREE, {\\r\\n\\r\\n\\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\\r\\n\\r\\n\\tMOUSE: { LEFT: 0, MIDDLE: 1, RIGHT: 2 },\\r\\n\\r\\n\\t// GL STATE CONSTANTS\\r\\n\\r\\n\\tCullFaceNone: 0,\\r\\n\\tCullFaceBack: 1,\\r\\n\\tCullFaceFront: 2,\\r\\n\\tCullFaceFrontBack: 3,\\r\\n\\r\\n\\tFrontFaceDirectionCW: 0,\\r\\n\\tFrontFaceDirectionCCW: 1,\\r\\n\\r\\n\\t// SHADOWING TYPES\\r\\n\\r\\n\\tBasicShadowMap: 0,\\r\\n\\tPCFShadowMap: 1,\\r\\n\\tPCFSoftShadowMap: 2,\\r\\n\\r\\n\\t// MATERIAL CONSTANTS\\r\\n\\r\\n\\t// side\\r\\n\\r\\n\\tFrontSide: 0,\\r\\n\\tBackSide: 1,\\r\\n\\tDoubleSide: 2,\\r\\n\\r\\n\\t// shading\\r\\n\\r\\n\\tFlatShading: 1,\\r\\n\\tSmoothShading: 2,\\r\\n\\r\\n\\t// colors\\r\\n\\r\\n\\tNoColors: 0,\\r\\n\\tFaceColors: 1,\\r\\n\\tVertexColors: 2,\\r\\n\\r\\n\\t// blending modes\\r\\n\\r\\n\\tNoBlending: 0,\\r\\n\\tNormalBlending: 1,\\r\\n\\tAdditiveBlending: 2,\\r\\n\\tSubtractiveBlending: 3,\\r\\n\\tMultiplyBlending: 4,\\r\\n\\tCustomBlending: 5,\\r\\n\\r\\n\\t// custom blending equations\\r\\n\\t// (numbers start from 100 not to clash with other\\r\\n\\t// mappings to OpenGL constants defined in Texture.js)\\r\\n\\r\\n\\tAddEquation: 100,\\r\\n\\tSubtractEquation: 101,\\r\\n\\tReverseSubtractEquation: 102,\\r\\n\\tMinEquation: 103,\\r\\n\\tMaxEquation: 104,\\r\\n\\r\\n\\t// custom blending destination factors\\r\\n\\r\\n\\tZeroFactor: 200,\\r\\n\\tOneFactor: 201,\\r\\n\\tSrcColorFactor: 202,\\r\\n\\tOneMinusSrcColorFactor: 203,\\r\\n\\tSrcAlphaFactor: 204,\\r\\n\\tOneMinusSrcAlphaFactor: 205,\\r\\n\\tDstAlphaFactor: 206,\\r\\n\\tOneMinusDstAlphaFactor: 207,\\r\\n\\r\\n\\t// custom blending source factors\\r\\n\\r\\n\\t//ZeroFactor: 200,\\r\\n\\t//OneFactor: 201,\\r\\n\\t//SrcAlphaFactor: 204,\\r\\n\\t//OneMinusSrcAlphaFactor: 205,\\r\\n\\t//DstAlphaFactor: 206,\\r\\n\\t//OneMinusDstAlphaFactor: 207,\\r\\n\\tDstColorFactor: 208,\\r\\n\\tOneMinusDstColorFactor: 209,\\r\\n\\tSrcAlphaSaturateFactor: 210,\\r\\n\\r\\n\\t// depth modes\\r\\n\\r\\n\\tNeverDepth: 0,\\r\\n\\tAlwaysDepth: 1,\\r\\n\\tLessDepth: 2,\\r\\n\\tLessEqualDepth: 3,\\r\\n\\tEqualDepth: 4,\\r\\n\\tGreaterEqualDepth: 5,\\r\\n\\tGreaterDepth: 6,\\r\\n\\tNotEqualDepth: 7,\\r\\n\\r\\n\\r\\n\\t// TEXTURE CONSTANTS\\r\\n\\r\\n\\tMultiplyOperation: 0,\\r\\n\\tMixOperation: 1,\\r\\n\\tAddOperation: 2,\\r\\n\\r\\n\\t// Tone Mapping modes\\r\\n\\r\\n\\tNoToneMapping: 0, // do not do any tone mapping, not even exposure (required for special purpose passes.)\\r\\n\\tLinearToneMapping: 1, // only apply exposure.\\r\\n\\tReinhardToneMapping: 2,\\r\\n\\tUncharted2ToneMapping: 3, // John Hable\\r\\n\\tCineonToneMapping: 4, // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\\r\\n\\r\\n\\t// Mapping modes\\r\\n\\r\\n\\tUVMapping: 300,\\r\\n\\r\\n\\tCubeReflectionMapping: 301,\\r\\n\\tCubeRefractionMapping: 302,\\r\\n\\r\\n\\tEquirectangularReflectionMapping: 303,\\r\\n\\tEquirectangularRefractionMapping: 304,\\r\\n\\r\\n\\tSphericalReflectionMapping: 305,\\r\\n\\tCubeUVReflectionMapping: 306,\\r\\n\\tCubeUVRefractionMapping: 307,\\r\\n\\r\\n\\t// Wrapping modes\\r\\n\\r\\n\\tRepeatWrapping: 1000,\\r\\n\\tClampToEdgeWrapping: 1001,\\r\\n\\tMirroredRepeatWrapping: 1002,\\r\\n\\r\\n\\t// Filters\\r\\n\\r\\n\\tNearestFilter: 1003,\\r\\n\\tNearestMipMapNearestFilter: 1004,\\r\\n\\tNearestMipMapLinearFilter: 1005,\\r\\n\\tLinearFilter: 1006,\\r\\n\\tLinearMipMapNearestFilter: 1007,\\r\\n\\tLinearMipMapLinearFilter: 1008,\\r\\n\\r\\n\\t// Data types\\r\\n\\r\\n\\tUnsignedByteType: 1009,\\r\\n\\tByteType: 1010,\\r\\n\\tShortType: 1011,\\r\\n\\tUnsignedShortType: 1012,\\r\\n\\tIntType: 1013,\\r\\n\\tUnsignedIntType: 1014,\\r\\n\\tFloatType: 1015,\\r\\n\\tHalfFloatType: 1025,\\r\\n\\r\\n\\t// Pixel types\\r\\n\\r\\n\\t//UnsignedByteType: 1009,\\r\\n\\tUnsignedShort4444Type: 1016,\\r\\n\\tUnsignedShort5551Type: 1017,\\r\\n\\tUnsignedShort565Type: 1018,\\r\\n\\r\\n\\t// Pixel formats\\r\\n\\r\\n\\tAlphaFormat: 1019,\\r\\n\\tRGBFormat: 1020,\\r\\n\\tRGBAFormat: 1021,\\r\\n\\tLuminanceFormat: 1022,\\r\\n\\tLuminanceAlphaFormat: 1023,\\r\\n\\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\\r\\n\\tRGBEFormat: THREE.RGBAFormat, //1024;\\r\\n\\tDepthFormat: 1026,\\r\\n\\r\\n\\t// DDS / ST3C Compressed texture formats\\r\\n\\r\\n\\tRGB_S3TC_DXT1_Format: 2001,\\r\\n\\tRGBA_S3TC_DXT1_Format: 2002,\\r\\n\\tRGBA_S3TC_DXT3_Format: 2003,\\r\\n\\tRGBA_S3TC_DXT5_Format: 2004,\\r\\n\\r\\n\\t// PVRTC compressed texture formats\\r\\n\\r\\n\\tRGB_PVRTC_4BPPV1_Format: 2100,\\r\\n\\tRGB_PVRTC_2BPPV1_Format: 2101,\\r\\n\\tRGBA_PVRTC_4BPPV1_Format: 2102,\\r\\n\\tRGBA_PVRTC_2BPPV1_Format: 2103,\\r\\n\\r\\n\\t// ETC compressed texture formats\\r\\n\\r\\n\\tRGB_ETC1_Format: 2151,\\r\\n\\r\\n\\t// Loop styles for AnimationAction\\r\\n\\r\\n\\tLoopOnce: 2200,\\r\\n\\tLoopRepeat: 2201,\\r\\n\\tLoopPingPong: 2202,\\r\\n\\r\\n\\t// Interpolation\\r\\n\\r\\n\\tInterpolateDiscrete: 2300,\\r\\n\\tInterpolateLinear: 2301,\\r\\n\\tInterpolateSmooth: 2302,\\r\\n\\r\\n\\t// Interpolant ending modes\\r\\n\\r\\n\\tZeroCurvatureEnding: 2400,\\r\\n\\tZeroSlopeEnding: 2401,\\r\\n\\tWrapAroundEnding: 2402,\\r\\n\\r\\n\\t// Triangle Draw modes\\r\\n\\r\\n\\tTrianglesDrawMode: 0,\\r\\n\\tTriangleStripDrawMode: 1,\\r\\n\\tTriangleFanDrawMode: 2,\\r\\n\\r\\n\\t// Texture Encodings\\r\\n\\r\\n\\tLinearEncoding: 3000, // No encoding at all.\\r\\n\\tsRGBEncoding: 3001,\\r\\n\\tGammaEncoding: 3007, // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\\r\\n\\r\\n\\t// The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\\r\\n\\t// These encodings should not specified as output encodings except in rare situations.\\r\\n\\tRGBEEncoding: 3002, // AKA Radiance.\\r\\n\\tLogLuvEncoding: 3003,\\r\\n\\tRGBM7Encoding: 3004,\\r\\n\\tRGBM16Encoding: 3005,\\r\\n\\tRGBDEncoding: 3006, // MaxRange is 256.\\r\\n\\r\\n\\t// Depth packing strategies\\r\\n\\r\\n\\tBasicDepthPacking: 3200, // for writing to float textures for high precision or for visualizing results in RGB buffers\\r\\n\\tRGBADepthPacking: 3201 // for packing into RGBA buffers.\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/math/Color.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.Color = function ( r, g, b ) {\\r\\n\\r\\n\\tif ( g === undefined && b === undefined ) {\\r\\n\\r\\n\\t\\t// r is THREE.Color, hex or string\\r\\n\\t\\treturn this.set( r );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn this.setRGB( r, g, b );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Color.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Color,\\r\\n\\r\\n\\tr: 1, g: 1, b: 1,\\r\\n\\r\\n\\tset: function ( value ) {\\r\\n\\r\\n\\t\\tif ( value instanceof THREE.Color ) {\\r\\n\\r\\n\\t\\t\\tthis.copy( value );\\r\\n\\r\\n\\t\\t} else if ( typeof value === 'number' ) {\\r\\n\\r\\n\\t\\t\\tthis.setHex( value );\\r\\n\\r\\n\\t\\t} else if ( typeof value === 'string' ) {\\r\\n\\r\\n\\t\\t\\tthis.setStyle( value );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetScalar: function ( scalar ) {\\r\\n\\r\\n\\t\\tthis.r = scalar;\\r\\n\\t\\tthis.g = scalar;\\r\\n\\t\\tthis.b = scalar;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetHex: function ( hex ) {\\r\\n\\r\\n\\t\\thex = Math.floor( hex );\\r\\n\\r\\n\\t\\tthis.r = ( hex >> 16 & 255 ) / 255;\\r\\n\\t\\tthis.g = ( hex >> 8 & 255 ) / 255;\\r\\n\\t\\tthis.b = ( hex & 255 ) / 255;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetRGB: function ( r, g, b ) {\\r\\n\\r\\n\\t\\tthis.r = r;\\r\\n\\t\\tthis.g = g;\\r\\n\\t\\tthis.b = b;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetHSL: function () {\\r\\n\\r\\n\\t\\tfunction hue2rgb( p, q, t ) {\\r\\n\\r\\n\\t\\t\\tif ( t < 0 ) t += 1;\\r\\n\\t\\t\\tif ( t > 1 ) t -= 1;\\r\\n\\t\\t\\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\\r\\n\\t\\t\\tif ( t < 1 / 2 ) return q;\\r\\n\\t\\t\\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\\r\\n\\t\\t\\treturn p;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn function setHSL( h, s, l ) {\\r\\n\\r\\n\\t\\t\\t// h,s,l ranges are in 0.0 - 1.0\\r\\n\\t\\t\\th = THREE.Math.euclideanModulo( h, 1 );\\r\\n\\t\\t\\ts = THREE.Math.clamp( s, 0, 1 );\\r\\n\\t\\t\\tl = THREE.Math.clamp( l, 0, 1 );\\r\\n\\r\\n\\t\\t\\tif ( s === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.r = this.g = this.b = l;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\\r\\n\\t\\t\\t\\tvar q = ( 2 * l ) - p;\\r\\n\\r\\n\\t\\t\\t\\tthis.r = hue2rgb( q, p, h + 1 / 3 );\\r\\n\\t\\t\\t\\tthis.g = hue2rgb( q, p, h );\\r\\n\\t\\t\\t\\tthis.b = hue2rgb( q, p, h - 1 / 3 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tsetStyle: function ( style ) {\\r\\n\\r\\n\\t\\tfunction handleAlpha( string ) {\\r\\n\\r\\n\\t\\t\\tif ( string === undefined ) return;\\r\\n\\r\\n\\t\\t\\tif ( parseFloat( string ) < 1 ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\tvar m;\\r\\n\\r\\n\\t\\tif ( m = /^((?:rgb|hsl)a?)\\\\(\\\\s*([^\\\\)]*)\\\\)/.exec( style ) ) {\\r\\n\\r\\n\\t\\t\\t// rgb / hsl\\r\\n\\r\\n\\t\\t\\tvar color;\\r\\n\\t\\t\\tvar name = m[ 1 ];\\r\\n\\t\\t\\tvar components = m[ 2 ];\\r\\n\\r\\n\\t\\t\\tswitch ( name ) {\\r\\n\\r\\n\\t\\t\\t\\tcase 'rgb':\\r\\n\\t\\t\\t\\tcase 'rgba':\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( color = /^(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*(,\\\\s*([0-9]*\\\\.?[0-9]+)\\\\s*)?$/.exec( components ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// rgb(255,0,0) rgba(255,0,0,0.5)\\r\\n\\t\\t\\t\\t\\t\\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\\r\\n\\t\\t\\t\\t\\t\\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\\r\\n\\t\\t\\t\\t\\t\\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\thandleAlpha( color[ 5 ] );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( color = /^(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(,\\\\s*([0-9]*\\\\.?[0-9]+)\\\\s*)?$/.exec( components ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\\r\\n\\t\\t\\t\\t\\t\\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\\r\\n\\t\\t\\t\\t\\t\\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\\r\\n\\t\\t\\t\\t\\t\\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\thandleAlpha( color[ 5 ] );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'hsl':\\r\\n\\t\\t\\t\\tcase 'hsla':\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( color = /^([0-9]*\\\\.?[0-9]+)\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(,\\\\s*([0-9]*\\\\.?[0-9]+)\\\\s*)?$/.exec( components ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\\r\\n\\t\\t\\t\\t\\t\\tvar h = parseFloat( color[ 1 ] ) / 360;\\r\\n\\t\\t\\t\\t\\t\\tvar s = parseInt( color[ 2 ], 10 ) / 100;\\r\\n\\t\\t\\t\\t\\t\\tvar l = parseInt( color[ 3 ], 10 ) / 100;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\thandleAlpha( color[ 5 ] );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\treturn this.setHSL( h, s, l );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else if ( m = /^\\\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\\r\\n\\r\\n\\t\\t\\t// hex color\\r\\n\\r\\n\\t\\t\\tvar hex = m[ 1 ];\\r\\n\\t\\t\\tvar size = hex.length;\\r\\n\\r\\n\\t\\t\\tif ( size === 3 ) {\\r\\n\\r\\n\\t\\t\\t\\t// #ff0\\r\\n\\t\\t\\t\\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\\r\\n\\t\\t\\t\\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\\r\\n\\t\\t\\t\\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\\r\\n\\r\\n\\t\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t\\t} else if ( size === 6 ) {\\r\\n\\r\\n\\t\\t\\t\\t// #ff0000\\r\\n\\t\\t\\t\\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\\r\\n\\t\\t\\t\\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\\r\\n\\t\\t\\t\\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\\r\\n\\r\\n\\t\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( style && style.length > 0 ) {\\r\\n\\r\\n\\t\\t\\t// color keywords\\r\\n\\t\\t\\tvar hex = THREE.ColorKeywords[ style ];\\r\\n\\r\\n\\t\\t\\tif ( hex !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t// red\\r\\n\\t\\t\\t\\tthis.setHex( hex );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// unknown color\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.Color: Unknown color ' + style );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor( this.r, this.g, this.b );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( color ) {\\r\\n\\r\\n\\t\\tthis.r = color.r;\\r\\n\\t\\tthis.g = color.g;\\r\\n\\t\\tthis.b = color.b;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopyGammaToLinear: function ( color, gammaFactor ) {\\r\\n\\r\\n\\t\\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\\r\\n\\r\\n\\t\\tthis.r = Math.pow( color.r, gammaFactor );\\r\\n\\t\\tthis.g = Math.pow( color.g, gammaFactor );\\r\\n\\t\\tthis.b = Math.pow( color.b, gammaFactor );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopyLinearToGamma: function ( color, gammaFactor ) {\\r\\n\\r\\n\\t\\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\\r\\n\\r\\n\\t\\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\\r\\n\\r\\n\\t\\tthis.r = Math.pow( color.r, safeInverse );\\r\\n\\t\\tthis.g = Math.pow( color.g, safeInverse );\\r\\n\\t\\tthis.b = Math.pow( color.b, safeInverse );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tconvertGammaToLinear: function () {\\r\\n\\r\\n\\t\\tvar r = this.r, g = this.g, b = this.b;\\r\\n\\r\\n\\t\\tthis.r = r * r;\\r\\n\\t\\tthis.g = g * g;\\r\\n\\t\\tthis.b = b * b;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tconvertLinearToGamma: function () {\\r\\n\\r\\n\\t\\tthis.r = Math.sqrt( this.r );\\r\\n\\t\\tthis.g = Math.sqrt( this.g );\\r\\n\\t\\tthis.b = Math.sqrt( this.b );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetHex: function () {\\r\\n\\r\\n\\t\\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetHexString: function () {\\r\\n\\r\\n\\t\\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetHSL: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\t// h,s,l ranges are in 0.0 - 1.0\\r\\n\\r\\n\\t\\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\\r\\n\\r\\n\\t\\tvar r = this.r, g = this.g, b = this.b;\\r\\n\\r\\n\\t\\tvar max = Math.max( r, g, b );\\r\\n\\t\\tvar min = Math.min( r, g, b );\\r\\n\\r\\n\\t\\tvar hue, saturation;\\r\\n\\t\\tvar lightness = ( min + max ) / 2.0;\\r\\n\\r\\n\\t\\tif ( min === max ) {\\r\\n\\r\\n\\t\\t\\thue = 0;\\r\\n\\t\\t\\tsaturation = 0;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tvar delta = max - min;\\r\\n\\r\\n\\t\\t\\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\\r\\n\\r\\n\\t\\t\\tswitch ( max ) {\\r\\n\\r\\n\\t\\t\\t\\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\\r\\n\\t\\t\\t\\tcase g: hue = ( b - r ) / delta + 2; break;\\r\\n\\t\\t\\t\\tcase b: hue = ( r - g ) / delta + 4; break;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\thue /= 6;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\thsl.h = hue;\\r\\n\\t\\thsl.s = saturation;\\r\\n\\t\\thsl.l = lightness;\\r\\n\\r\\n\\t\\treturn hsl;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetStyle: function () {\\r\\n\\r\\n\\t\\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\toffsetHSL: function ( h, s, l ) {\\r\\n\\r\\n\\t\\tvar hsl = this.getHSL();\\r\\n\\r\\n\\t\\thsl.h += h; hsl.s += s; hsl.l += l;\\r\\n\\r\\n\\t\\tthis.setHSL( hsl.h, hsl.s, hsl.l );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tadd: function ( color ) {\\r\\n\\r\\n\\t\\tthis.r += color.r;\\r\\n\\t\\tthis.g += color.g;\\r\\n\\t\\tthis.b += color.b;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddColors: function ( color1, color2 ) {\\r\\n\\r\\n\\t\\tthis.r = color1.r + color2.r;\\r\\n\\t\\tthis.g = color1.g + color2.g;\\r\\n\\t\\tthis.b = color1.b + color2.b;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddScalar: function ( s ) {\\r\\n\\r\\n\\t\\tthis.r += s;\\r\\n\\t\\tthis.g += s;\\r\\n\\t\\tthis.b += s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiply: function ( color ) {\\r\\n\\r\\n\\t\\tthis.r *= color.r;\\r\\n\\t\\tthis.g *= color.g;\\r\\n\\t\\tthis.b *= color.b;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiplyScalar: function ( s ) {\\r\\n\\r\\n\\t\\tthis.r *= s;\\r\\n\\t\\tthis.g *= s;\\r\\n\\t\\tthis.b *= s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlerp: function ( color, alpha ) {\\r\\n\\r\\n\\t\\tthis.r += ( color.r - this.r ) * alpha;\\r\\n\\t\\tthis.g += ( color.g - this.g ) * alpha;\\r\\n\\t\\tthis.b += ( color.b - this.b ) * alpha;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tequals: function ( c ) {\\r\\n\\r\\n\\t\\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tthis.r = array[ offset ];\\r\\n\\t\\tthis.g = array[ offset + 1 ];\\r\\n\\t\\tthis.b = array[ offset + 2 ];\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( array === undefined ) array = [];\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tarray[ offset ] = this.r;\\r\\n\\t\\tarray[ offset + 1 ] = this.g;\\r\\n\\t\\tarray[ offset + 2 ] = this.b;\\r\\n\\r\\n\\t\\treturn array;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\\r\\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\\r\\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\\r\\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\\r\\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\\r\\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\\r\\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\\r\\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\\r\\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\\r\\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\\r\\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\\r\\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\\r\\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\\r\\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\\r\\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\\r\\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\\r\\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\\r\\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\\r\\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\\r\\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\\r\\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\\r\\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\\r\\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\\r\\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\\r\\n\\r\\n// File:src/math/Quaternion.js\\r\\n\\r\\n/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n * @author bhouston / http://clara.io\\r\\n */\\r\\n\\r\\nTHREE.Quaternion = function ( x, y, z, w ) {\\r\\n\\r\\n\\tthis._x = x || 0;\\r\\n\\tthis._y = y || 0;\\r\\n\\tthis._z = z || 0;\\r\\n\\tthis._w = ( w !== undefined ) ? w : 1;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Quaternion.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Quaternion,\\r\\n\\r\\n\\tget x () {\\r\\n\\r\\n\\t\\treturn this._x;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset x ( value ) {\\r\\n\\r\\n\\t\\tthis._x = value;\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tget y () {\\r\\n\\r\\n\\t\\treturn this._y;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset y ( value ) {\\r\\n\\r\\n\\t\\tthis._y = value;\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tget z () {\\r\\n\\r\\n\\t\\treturn this._z;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset z ( value ) {\\r\\n\\r\\n\\t\\tthis._z = value;\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tget w () {\\r\\n\\r\\n\\t\\treturn this._w;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset w ( value ) {\\r\\n\\r\\n\\t\\tthis._w = value;\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset: function ( x, y, z, w ) {\\r\\n\\r\\n\\t\\tthis._x = x;\\r\\n\\t\\tthis._y = y;\\r\\n\\t\\tthis._z = z;\\r\\n\\t\\tthis._w = w;\\r\\n\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor( this._x, this._y, this._z, this._w );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( quaternion ) {\\r\\n\\r\\n\\t\\tthis._x = quaternion.x;\\r\\n\\t\\tthis._y = quaternion.y;\\r\\n\\t\\tthis._z = quaternion.z;\\r\\n\\t\\tthis._w = quaternion.w;\\r\\n\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromEuler: function ( euler, update ) {\\r\\n\\r\\n\\t\\tif ( euler instanceof THREE.Euler === false ) {\\r\\n\\r\\n\\t\\t\\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// http://www.mathworks.com/matlabcentral/fileexchange/\\r\\n\\t\\t// \\t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\\r\\n\\t\\t//\\tcontent/SpinCalc.m\\r\\n\\r\\n\\t\\tvar c1 = Math.cos( euler._x / 2 );\\r\\n\\t\\tvar c2 = Math.cos( euler._y / 2 );\\r\\n\\t\\tvar c3 = Math.cos( euler._z / 2 );\\r\\n\\t\\tvar s1 = Math.sin( euler._x / 2 );\\r\\n\\t\\tvar s2 = Math.sin( euler._y / 2 );\\r\\n\\t\\tvar s3 = Math.sin( euler._z / 2 );\\r\\n\\r\\n\\t\\tvar order = euler.order;\\r\\n\\r\\n\\t\\tif ( order === 'XYZ' ) {\\r\\n\\r\\n\\t\\t\\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\\r\\n\\t\\t\\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\\r\\n\\t\\t\\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\\r\\n\\t\\t\\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\\r\\n\\r\\n\\t\\t} else if ( order === 'YXZ' ) {\\r\\n\\r\\n\\t\\t\\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\\r\\n\\t\\t\\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\\r\\n\\t\\t\\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\\r\\n\\t\\t\\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\\r\\n\\r\\n\\t\\t} else if ( order === 'ZXY' ) {\\r\\n\\r\\n\\t\\t\\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\\r\\n\\t\\t\\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\\r\\n\\t\\t\\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\\r\\n\\t\\t\\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\\r\\n\\r\\n\\t\\t} else if ( order === 'ZYX' ) {\\r\\n\\r\\n\\t\\t\\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\\r\\n\\t\\t\\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\\r\\n\\t\\t\\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\\r\\n\\t\\t\\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\\r\\n\\r\\n\\t\\t} else if ( order === 'YZX' ) {\\r\\n\\r\\n\\t\\t\\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\\r\\n\\t\\t\\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\\r\\n\\t\\t\\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\\r\\n\\t\\t\\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\\r\\n\\r\\n\\t\\t} else if ( order === 'XZY' ) {\\r\\n\\r\\n\\t\\t\\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\\r\\n\\t\\t\\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\\r\\n\\t\\t\\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\\r\\n\\t\\t\\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( update !== false ) this.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromAxisAngle: function ( axis, angle ) {\\r\\n\\r\\n\\t\\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\\r\\n\\r\\n\\t\\t// assumes axis is normalized\\r\\n\\r\\n\\t\\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\\r\\n\\r\\n\\t\\tthis._x = axis.x * s;\\r\\n\\t\\tthis._y = axis.y * s;\\r\\n\\t\\tthis._z = axis.z * s;\\r\\n\\t\\tthis._w = Math.cos( halfAngle );\\r\\n\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromRotationMatrix: function ( m ) {\\r\\n\\r\\n\\t\\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\\r\\n\\r\\n\\t\\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\r\\n\\r\\n\\t\\tvar te = m.elements,\\r\\n\\r\\n\\t\\t\\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\\r\\n\\t\\t\\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\\r\\n\\t\\t\\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\\r\\n\\r\\n\\t\\t\\ttrace = m11 + m22 + m33,\\r\\n\\t\\t\\ts;\\r\\n\\r\\n\\t\\tif ( trace > 0 ) {\\r\\n\\r\\n\\t\\t\\ts = 0.5 / Math.sqrt( trace + 1.0 );\\r\\n\\r\\n\\t\\t\\tthis._w = 0.25 / s;\\r\\n\\t\\t\\tthis._x = ( m32 - m23 ) * s;\\r\\n\\t\\t\\tthis._y = ( m13 - m31 ) * s;\\r\\n\\t\\t\\tthis._z = ( m21 - m12 ) * s;\\r\\n\\r\\n\\t\\t} else if ( m11 > m22 && m11 > m33 ) {\\r\\n\\r\\n\\t\\t\\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\\r\\n\\r\\n\\t\\t\\tthis._w = ( m32 - m23 ) / s;\\r\\n\\t\\t\\tthis._x = 0.25 * s;\\r\\n\\t\\t\\tthis._y = ( m12 + m21 ) / s;\\r\\n\\t\\t\\tthis._z = ( m13 + m31 ) / s;\\r\\n\\r\\n\\t\\t} else if ( m22 > m33 ) {\\r\\n\\r\\n\\t\\t\\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\\r\\n\\r\\n\\t\\t\\tthis._w = ( m13 - m31 ) / s;\\r\\n\\t\\t\\tthis._x = ( m12 + m21 ) / s;\\r\\n\\t\\t\\tthis._y = 0.25 * s;\\r\\n\\t\\t\\tthis._z = ( m23 + m32 ) / s;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\\r\\n\\r\\n\\t\\t\\tthis._w = ( m21 - m12 ) / s;\\r\\n\\t\\t\\tthis._x = ( m13 + m31 ) / s;\\r\\n\\t\\t\\tthis._y = ( m23 + m32 ) / s;\\r\\n\\t\\t\\tthis._z = 0.25 * s;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromUnitVectors: function () {\\r\\n\\r\\n\\t\\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\\r\\n\\r\\n\\t\\t// assumes direction vectors vFrom and vTo are normalized\\r\\n\\r\\n\\t\\tvar v1, r;\\r\\n\\r\\n\\t\\tvar EPS = 0.000001;\\r\\n\\r\\n\\t\\treturn function setFromUnitVectors( vFrom, vTo ) {\\r\\n\\r\\n\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\tr = vFrom.dot( vTo ) + 1;\\r\\n\\r\\n\\t\\t\\tif ( r < EPS ) {\\r\\n\\r\\n\\t\\t\\t\\tr = 0;\\r\\n\\r\\n\\t\\t\\t\\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tv1.set( - vFrom.y, vFrom.x, 0 );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tv1.set( 0, - vFrom.z, vFrom.y );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tv1.crossVectors( vFrom, vTo );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis._x = v1.x;\\r\\n\\t\\t\\tthis._y = v1.y;\\r\\n\\t\\t\\tthis._z = v1.z;\\r\\n\\t\\t\\tthis._w = r;\\r\\n\\r\\n\\t\\t\\treturn this.normalize();\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tinverse: function () {\\r\\n\\r\\n\\t\\treturn this.conjugate().normalize();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tconjugate: function () {\\r\\n\\r\\n\\t\\tthis._x *= - 1;\\r\\n\\t\\tthis._y *= - 1;\\r\\n\\t\\tthis._z *= - 1;\\r\\n\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdot: function ( v ) {\\r\\n\\r\\n\\t\\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlengthSq: function () {\\r\\n\\r\\n\\t\\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlength: function () {\\r\\n\\r\\n\\t\\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnormalize: function () {\\r\\n\\r\\n\\t\\tvar l = this.length();\\r\\n\\r\\n\\t\\tif ( l === 0 ) {\\r\\n\\r\\n\\t\\t\\tthis._x = 0;\\r\\n\\t\\t\\tthis._y = 0;\\r\\n\\t\\t\\tthis._z = 0;\\r\\n\\t\\t\\tthis._w = 1;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tl = 1 / l;\\r\\n\\r\\n\\t\\t\\tthis._x = this._x * l;\\r\\n\\t\\t\\tthis._y = this._y * l;\\r\\n\\t\\t\\tthis._z = this._z * l;\\r\\n\\t\\t\\tthis._w = this._w * l;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiply: function ( q, p ) {\\r\\n\\r\\n\\t\\tif ( p !== undefined ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\\r\\n\\t\\t\\treturn this.multiplyQuaternions( q, p );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.multiplyQuaternions( this, q );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tpremultiply: function ( q ) {\\r\\n\\r\\n\\t\\treturn this.multiplyQuaternions( q, this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiplyQuaternions: function ( a, b ) {\\r\\n\\r\\n\\t\\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\\r\\n\\r\\n\\t\\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\\r\\n\\t\\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\\r\\n\\r\\n\\t\\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\\r\\n\\t\\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\\r\\n\\t\\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\\r\\n\\t\\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\\r\\n\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tslerp: function ( qb, t ) {\\r\\n\\r\\n\\t\\tif ( t === 0 ) return this;\\r\\n\\t\\tif ( t === 1 ) return this.copy( qb );\\r\\n\\r\\n\\t\\tvar x = this._x, y = this._y, z = this._z, w = this._w;\\r\\n\\r\\n\\t\\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\\r\\n\\r\\n\\t\\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\\r\\n\\r\\n\\t\\tif ( cosHalfTheta < 0 ) {\\r\\n\\r\\n\\t\\t\\tthis._w = - qb._w;\\r\\n\\t\\t\\tthis._x = - qb._x;\\r\\n\\t\\t\\tthis._y = - qb._y;\\r\\n\\t\\t\\tthis._z = - qb._z;\\r\\n\\r\\n\\t\\t\\tcosHalfTheta = - cosHalfTheta;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.copy( qb );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( cosHalfTheta >= 1.0 ) {\\r\\n\\r\\n\\t\\t\\tthis._w = w;\\r\\n\\t\\t\\tthis._x = x;\\r\\n\\t\\t\\tthis._y = y;\\r\\n\\t\\t\\tthis._z = z;\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\\r\\n\\r\\n\\t\\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\\r\\n\\r\\n\\t\\t\\tthis._w = 0.5 * ( w + this._w );\\r\\n\\t\\t\\tthis._x = 0.5 * ( x + this._x );\\r\\n\\t\\t\\tthis._y = 0.5 * ( y + this._y );\\r\\n\\t\\t\\tthis._z = 0.5 * ( z + this._z );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\\r\\n\\t\\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\\r\\n\\t\\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\\r\\n\\r\\n\\t\\tthis._w = ( w * ratioA + this._w * ratioB );\\r\\n\\t\\tthis._x = ( x * ratioA + this._x * ratioB );\\r\\n\\t\\tthis._y = ( y * ratioA + this._y * ratioB );\\r\\n\\t\\tthis._z = ( z * ratioA + this._z * ratioB );\\r\\n\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tequals: function ( quaternion ) {\\r\\n\\r\\n\\t\\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tthis._x = array[ offset ];\\r\\n\\t\\tthis._y = array[ offset + 1 ];\\r\\n\\t\\tthis._z = array[ offset + 2 ];\\r\\n\\t\\tthis._w = array[ offset + 3 ];\\r\\n\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( array === undefined ) array = [];\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tarray[ offset ] = this._x;\\r\\n\\t\\tarray[ offset + 1 ] = this._y;\\r\\n\\t\\tarray[ offset + 2 ] = this._z;\\r\\n\\t\\tarray[ offset + 3 ] = this._w;\\r\\n\\r\\n\\t\\treturn array;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tonChange: function ( callback ) {\\r\\n\\r\\n\\t\\tthis.onChangeCallback = callback;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tonChangeCallback: function () {}\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.Quaternion, {\\r\\n\\r\\n\\tslerp: function( qa, qb, qm, t ) {\\r\\n\\r\\n\\t\\treturn qm.copy( qa ).slerp( qb, t );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tslerpFlat: function(\\r\\n\\t\\t\\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\\r\\n\\r\\n\\t\\t// fuzz-free, array-based Quaternion SLERP operation\\r\\n\\r\\n\\t\\tvar x0 = src0[ srcOffset0 + 0 ],\\r\\n\\t\\t\\ty0 = src0[ srcOffset0 + 1 ],\\r\\n\\t\\t\\tz0 = src0[ srcOffset0 + 2 ],\\r\\n\\t\\t\\tw0 = src0[ srcOffset0 + 3 ],\\r\\n\\r\\n\\t\\t\\tx1 = src1[ srcOffset1 + 0 ],\\r\\n\\t\\t\\ty1 = src1[ srcOffset1 + 1 ],\\r\\n\\t\\t\\tz1 = src1[ srcOffset1 + 2 ],\\r\\n\\t\\t\\tw1 = src1[ srcOffset1 + 3 ];\\r\\n\\r\\n\\t\\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\\r\\n\\r\\n\\t\\t\\tvar s = 1 - t,\\r\\n\\r\\n\\t\\t\\t\\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\\r\\n\\r\\n\\t\\t\\t\\tdir = ( cos >= 0 ? 1 : - 1 ),\\r\\n\\t\\t\\t\\tsqrSin = 1 - cos * cos;\\r\\n\\r\\n\\t\\t\\t// Skip the Slerp for tiny steps to avoid numeric problems:\\r\\n\\t\\t\\tif ( sqrSin > Number.EPSILON ) {\\r\\n\\r\\n\\t\\t\\t\\tvar sin = Math.sqrt( sqrSin ),\\r\\n\\t\\t\\t\\t\\tlen = Math.atan2( sin, cos * dir );\\r\\n\\r\\n\\t\\t\\t\\ts = Math.sin( s * len ) / sin;\\r\\n\\t\\t\\t\\tt = Math.sin( t * len ) / sin;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar tDir = t * dir;\\r\\n\\r\\n\\t\\t\\tx0 = x0 * s + x1 * tDir;\\r\\n\\t\\t\\ty0 = y0 * s + y1 * tDir;\\r\\n\\t\\t\\tz0 = z0 * s + z1 * tDir;\\r\\n\\t\\t\\tw0 = w0 * s + w1 * tDir;\\r\\n\\r\\n\\t\\t\\t// Normalize in case we just did a lerp:\\r\\n\\t\\t\\tif ( s === 1 - t ) {\\r\\n\\r\\n\\t\\t\\t\\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\\r\\n\\r\\n\\t\\t\\t\\tx0 *= f;\\r\\n\\t\\t\\t\\ty0 *= f;\\r\\n\\t\\t\\t\\tz0 *= f;\\r\\n\\t\\t\\t\\tw0 *= f;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tdst[ dstOffset ] = x0;\\r\\n\\t\\tdst[ dstOffset + 1 ] = y0;\\r\\n\\t\\tdst[ dstOffset + 2 ] = z0;\\r\\n\\t\\tdst[ dstOffset + 3 ] = w0;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/math/Vector2.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author philogb / http://blog.thejit.org/\\r\\n * @author egraether / http://egraether.com/\\r\\n * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n */\\r\\n\\r\\nTHREE.Vector2 = function ( x, y ) {\\r\\n\\r\\n\\tthis.x = x || 0;\\r\\n\\tthis.y = y || 0;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Vector2.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Vector2,\\r\\n\\r\\n\\tget width() {\\r\\n\\r\\n\\t\\treturn this.x;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset width( value ) {\\r\\n\\r\\n\\t\\tthis.x = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tget height() {\\r\\n\\r\\n\\t\\treturn this.y;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset height( value ) {\\r\\n\\r\\n\\t\\tthis.y = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tset: function ( x, y ) {\\r\\n\\r\\n\\t\\tthis.x = x;\\r\\n\\t\\tthis.y = y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetScalar: function ( scalar ) {\\r\\n\\r\\n\\t\\tthis.x = scalar;\\r\\n\\t\\tthis.y = scalar;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetX: function ( x ) {\\r\\n\\r\\n\\t\\tthis.x = x;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetY: function ( y ) {\\r\\n\\r\\n\\t\\tthis.y = y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetComponent: function ( index, value ) {\\r\\n\\r\\n\\t\\tswitch ( index ) {\\r\\n\\r\\n\\t\\t\\tcase 0: this.x = value; break;\\r\\n\\t\\t\\tcase 1: this.y = value; break;\\r\\n\\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetComponent: function ( index ) {\\r\\n\\r\\n\\t\\tswitch ( index ) {\\r\\n\\r\\n\\t\\t\\tcase 0: return this.x;\\r\\n\\t\\t\\tcase 1: return this.y;\\r\\n\\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor( this.x, this.y );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( v ) {\\r\\n\\r\\n\\t\\tthis.x = v.x;\\r\\n\\t\\tthis.y = v.y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tadd: function ( v, w ) {\\r\\n\\r\\n\\t\\tif ( w !== undefined ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\\r\\n\\t\\t\\treturn this.addVectors( v, w );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.x += v.x;\\r\\n\\t\\tthis.y += v.y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddScalar: function ( s ) {\\r\\n\\r\\n\\t\\tthis.x += s;\\r\\n\\t\\tthis.y += s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddVectors: function ( a, b ) {\\r\\n\\r\\n\\t\\tthis.x = a.x + b.x;\\r\\n\\t\\tthis.y = a.y + b.y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddScaledVector: function ( v, s ) {\\r\\n\\r\\n\\t\\tthis.x += v.x * s;\\r\\n\\t\\tthis.y += v.y * s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsub: function ( v, w ) {\\r\\n\\r\\n\\t\\tif ( w !== undefined ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\\r\\n\\t\\t\\treturn this.subVectors( v, w );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.x -= v.x;\\r\\n\\t\\tthis.y -= v.y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsubScalar: function ( s ) {\\r\\n\\r\\n\\t\\tthis.x -= s;\\r\\n\\t\\tthis.y -= s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsubVectors: function ( a, b ) {\\r\\n\\r\\n\\t\\tthis.x = a.x - b.x;\\r\\n\\t\\tthis.y = a.y - b.y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiply: function ( v ) {\\r\\n\\r\\n\\t\\tthis.x *= v.x;\\r\\n\\t\\tthis.y *= v.y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiplyScalar: function ( scalar ) {\\r\\n\\r\\n\\t\\tif ( isFinite( scalar ) ) {\\r\\n\\r\\n\\t\\t\\tthis.x *= scalar;\\r\\n\\t\\t\\tthis.y *= scalar;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.x = 0;\\r\\n\\t\\t\\tthis.y = 0;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdivide: function ( v ) {\\r\\n\\r\\n\\t\\tthis.x /= v.x;\\r\\n\\t\\tthis.y /= v.y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdivideScalar: function ( scalar ) {\\r\\n\\r\\n\\t\\treturn this.multiplyScalar( 1 / scalar );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmin: function ( v ) {\\r\\n\\r\\n\\t\\tthis.x = Math.min( this.x, v.x );\\r\\n\\t\\tthis.y = Math.min( this.y, v.y );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmax: function ( v ) {\\r\\n\\r\\n\\t\\tthis.x = Math.max( this.x, v.x );\\r\\n\\t\\tthis.y = Math.max( this.y, v.y );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclamp: function ( min, max ) {\\r\\n\\r\\n\\t\\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\\r\\n\\r\\n\\t\\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\\r\\n\\t\\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclampScalar: function () {\\r\\n\\r\\n\\t\\tvar min, max;\\r\\n\\r\\n\\t\\treturn function clampScalar( minVal, maxVal ) {\\r\\n\\r\\n\\t\\t\\tif ( min === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tmin = new THREE.Vector2();\\r\\n\\t\\t\\t\\tmax = new THREE.Vector2();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tmin.set( minVal, minVal );\\r\\n\\t\\t\\tmax.set( maxVal, maxVal );\\r\\n\\r\\n\\t\\t\\treturn this.clamp( min, max );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tclampLength: function ( min, max ) {\\r\\n\\r\\n\\t\\tvar length = this.length();\\r\\n\\r\\n\\t\\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfloor: function () {\\r\\n\\r\\n\\t\\tthis.x = Math.floor( this.x );\\r\\n\\t\\tthis.y = Math.floor( this.y );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tceil: function () {\\r\\n\\r\\n\\t\\tthis.x = Math.ceil( this.x );\\r\\n\\t\\tthis.y = Math.ceil( this.y );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tround: function () {\\r\\n\\r\\n\\t\\tthis.x = Math.round( this.x );\\r\\n\\t\\tthis.y = Math.round( this.y );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\troundToZero: function () {\\r\\n\\r\\n\\t\\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\\r\\n\\t\\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnegate: function () {\\r\\n\\r\\n\\t\\tthis.x = - this.x;\\r\\n\\t\\tthis.y = - this.y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdot: function ( v ) {\\r\\n\\r\\n\\t\\treturn this.x * v.x + this.y * v.y;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlengthSq: function () {\\r\\n\\r\\n\\t\\treturn this.x * this.x + this.y * this.y;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlength: function () {\\r\\n\\r\\n\\t\\treturn Math.sqrt( this.x * this.x + this.y * this.y );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlengthManhattan: function() {\\r\\n\\r\\n\\t\\treturn Math.abs( this.x ) + Math.abs( this.y );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnormalize: function () {\\r\\n\\r\\n\\t\\treturn this.divideScalar( this.length() );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tangle: function () {\\r\\n\\r\\n\\t\\t// computes the angle in radians with respect to the positive x-axis\\r\\n\\r\\n\\t\\tvar angle = Math.atan2( this.y, this.x );\\r\\n\\r\\n\\t\\tif ( angle < 0 ) angle += 2 * Math.PI;\\r\\n\\r\\n\\t\\treturn angle;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceTo: function ( v ) {\\r\\n\\r\\n\\t\\treturn Math.sqrt( this.distanceToSquared( v ) );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceToSquared: function ( v ) {\\r\\n\\r\\n\\t\\tvar dx = this.x - v.x, dy = this.y - v.y;\\r\\n\\t\\treturn dx * dx + dy * dy;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetLength: function ( length ) {\\r\\n\\r\\n\\t\\treturn this.multiplyScalar( length / this.length() );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlerp: function ( v, alpha ) {\\r\\n\\r\\n\\t\\tthis.x += ( v.x - this.x ) * alpha;\\r\\n\\t\\tthis.y += ( v.y - this.y ) * alpha;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlerpVectors: function ( v1, v2, alpha ) {\\r\\n\\r\\n\\t\\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tequals: function ( v ) {\\r\\n\\r\\n\\t\\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tthis.x = array[ offset ];\\r\\n\\t\\tthis.y = array[ offset + 1 ];\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( array === undefined ) array = [];\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tarray[ offset ] = this.x;\\r\\n\\t\\tarray[ offset + 1 ] = this.y;\\r\\n\\r\\n\\t\\treturn array;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromAttribute: function ( attribute, index, offset ) {\\r\\n\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tindex = index * attribute.itemSize + offset;\\r\\n\\r\\n\\t\\tthis.x = attribute.array[ index ];\\r\\n\\t\\tthis.y = attribute.array[ index + 1 ];\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\trotateAround: function ( center, angle ) {\\r\\n\\r\\n\\t\\tvar c = Math.cos( angle ), s = Math.sin( angle );\\r\\n\\r\\n\\t\\tvar x = this.x - center.x;\\r\\n\\t\\tvar y = this.y - center.y;\\r\\n\\r\\n\\t\\tthis.x = x * c - y * s + center.x;\\r\\n\\t\\tthis.y = x * s + y * c + center.y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Vector3.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author *kile / http://kile.stravaganza.org/\\r\\n * @author philogb / http://blog.thejit.org/\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author egraether / http://egraether.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n */\\r\\n\\r\\nTHREE.Vector3 = function ( x, y, z ) {\\r\\n\\r\\n\\tthis.x = x || 0;\\r\\n\\tthis.y = y || 0;\\r\\n\\tthis.z = z || 0;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Vector3.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Vector3,\\r\\n\\r\\n\\tset: function ( x, y, z ) {\\r\\n\\r\\n\\t\\tthis.x = x;\\r\\n\\t\\tthis.y = y;\\r\\n\\t\\tthis.z = z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetScalar: function ( scalar ) {\\r\\n\\r\\n\\t\\tthis.x = scalar;\\r\\n\\t\\tthis.y = scalar;\\r\\n\\t\\tthis.z = scalar;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetX: function ( x ) {\\r\\n\\r\\n\\t\\tthis.x = x;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetY: function ( y ) {\\r\\n\\r\\n\\t\\tthis.y = y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetZ: function ( z ) {\\r\\n\\r\\n\\t\\tthis.z = z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetComponent: function ( index, value ) {\\r\\n\\r\\n\\t\\tswitch ( index ) {\\r\\n\\r\\n\\t\\t\\tcase 0: this.x = value; break;\\r\\n\\t\\t\\tcase 1: this.y = value; break;\\r\\n\\t\\t\\tcase 2: this.z = value; break;\\r\\n\\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetComponent: function ( index ) {\\r\\n\\r\\n\\t\\tswitch ( index ) {\\r\\n\\r\\n\\t\\t\\tcase 0: return this.x;\\r\\n\\t\\t\\tcase 1: return this.y;\\r\\n\\t\\t\\tcase 2: return this.z;\\r\\n\\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor( this.x, this.y, this.z );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( v ) {\\r\\n\\r\\n\\t\\tthis.x = v.x;\\r\\n\\t\\tthis.y = v.y;\\r\\n\\t\\tthis.z = v.z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tadd: function ( v, w ) {\\r\\n\\r\\n\\t\\tif ( w !== undefined ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\\r\\n\\t\\t\\treturn this.addVectors( v, w );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.x += v.x;\\r\\n\\t\\tthis.y += v.y;\\r\\n\\t\\tthis.z += v.z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddScalar: function ( s ) {\\r\\n\\r\\n\\t\\tthis.x += s;\\r\\n\\t\\tthis.y += s;\\r\\n\\t\\tthis.z += s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddVectors: function ( a, b ) {\\r\\n\\r\\n\\t\\tthis.x = a.x + b.x;\\r\\n\\t\\tthis.y = a.y + b.y;\\r\\n\\t\\tthis.z = a.z + b.z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddScaledVector: function ( v, s ) {\\r\\n\\r\\n\\t\\tthis.x += v.x * s;\\r\\n\\t\\tthis.y += v.y * s;\\r\\n\\t\\tthis.z += v.z * s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsub: function ( v, w ) {\\r\\n\\r\\n\\t\\tif ( w !== undefined ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\\r\\n\\t\\t\\treturn this.subVectors( v, w );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.x -= v.x;\\r\\n\\t\\tthis.y -= v.y;\\r\\n\\t\\tthis.z -= v.z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsubScalar: function ( s ) {\\r\\n\\r\\n\\t\\tthis.x -= s;\\r\\n\\t\\tthis.y -= s;\\r\\n\\t\\tthis.z -= s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsubVectors: function ( a, b ) {\\r\\n\\r\\n\\t\\tthis.x = a.x - b.x;\\r\\n\\t\\tthis.y = a.y - b.y;\\r\\n\\t\\tthis.z = a.z - b.z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiply: function ( v, w ) {\\r\\n\\r\\n\\t\\tif ( w !== undefined ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\\r\\n\\t\\t\\treturn this.multiplyVectors( v, w );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.x *= v.x;\\r\\n\\t\\tthis.y *= v.y;\\r\\n\\t\\tthis.z *= v.z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiplyScalar: function ( scalar ) {\\r\\n\\r\\n\\t\\tif ( isFinite( scalar ) ) {\\r\\n\\r\\n\\t\\t\\tthis.x *= scalar;\\r\\n\\t\\t\\tthis.y *= scalar;\\r\\n\\t\\t\\tthis.z *= scalar;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.x = 0;\\r\\n\\t\\t\\tthis.y = 0;\\r\\n\\t\\t\\tthis.z = 0;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiplyVectors: function ( a, b ) {\\r\\n\\r\\n\\t\\tthis.x = a.x * b.x;\\r\\n\\t\\tthis.y = a.y * b.y;\\r\\n\\t\\tthis.z = a.z * b.z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tapplyEuler: function () {\\r\\n\\r\\n\\t\\tvar quaternion;\\r\\n\\r\\n\\t\\treturn function applyEuler( euler ) {\\r\\n\\r\\n\\t\\t\\tif ( euler instanceof THREE.Euler === false ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\\r\\n\\r\\n\\t\\t\\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tapplyAxisAngle: function () {\\r\\n\\r\\n\\t\\tvar quaternion;\\r\\n\\r\\n\\t\\treturn function applyAxisAngle( axis, angle ) {\\r\\n\\r\\n\\t\\t\\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\\r\\n\\r\\n\\t\\t\\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tapplyMatrix3: function ( m ) {\\r\\n\\r\\n\\t\\tvar x = this.x, y = this.y, z = this.z;\\r\\n\\t\\tvar e = m.elements;\\r\\n\\r\\n\\t\\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\\r\\n\\t\\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\\r\\n\\t\\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tapplyMatrix4: function ( m ) {\\r\\n\\r\\n\\t\\t// input: THREE.Matrix4 affine matrix\\r\\n\\r\\n\\t\\tvar x = this.x, y = this.y, z = this.z;\\r\\n\\t\\tvar e = m.elements;\\r\\n\\r\\n\\t\\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\\r\\n\\t\\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\\r\\n\\t\\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tapplyProjection: function ( m ) {\\r\\n\\r\\n\\t\\t// input: THREE.Matrix4 projection matrix\\r\\n\\r\\n\\t\\tvar x = this.x, y = this.y, z = this.z;\\r\\n\\t\\tvar e = m.elements;\\r\\n\\t\\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\\r\\n\\r\\n\\t\\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\\r\\n\\t\\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\\r\\n\\t\\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tapplyQuaternion: function ( q ) {\\r\\n\\r\\n\\t\\tvar x = this.x, y = this.y, z = this.z;\\r\\n\\t\\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\\r\\n\\r\\n\\t\\t// calculate quat * vector\\r\\n\\r\\n\\t\\tvar ix =  qw * x + qy * z - qz * y;\\r\\n\\t\\tvar iy =  qw * y + qz * x - qx * z;\\r\\n\\t\\tvar iz =  qw * z + qx * y - qy * x;\\r\\n\\t\\tvar iw = - qx * x - qy * y - qz * z;\\r\\n\\r\\n\\t\\t// calculate result * inverse quat\\r\\n\\r\\n\\t\\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\\r\\n\\t\\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\\r\\n\\t\\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tproject: function () {\\r\\n\\r\\n\\t\\tvar matrix;\\r\\n\\r\\n\\t\\treturn function project( camera ) {\\r\\n\\r\\n\\t\\t\\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\\r\\n\\t\\t\\treturn this.applyProjection( matrix );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tunproject: function () {\\r\\n\\r\\n\\t\\tvar matrix;\\r\\n\\r\\n\\t\\treturn function unproject( camera ) {\\r\\n\\r\\n\\t\\t\\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\\r\\n\\t\\t\\treturn this.applyProjection( matrix );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\ttransformDirection: function ( m ) {\\r\\n\\r\\n\\t\\t// input: THREE.Matrix4 affine matrix\\r\\n\\t\\t// vector interpreted as a direction\\r\\n\\r\\n\\t\\tvar x = this.x, y = this.y, z = this.z;\\r\\n\\t\\tvar e = m.elements;\\r\\n\\r\\n\\t\\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\\r\\n\\t\\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\\r\\n\\t\\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\\r\\n\\r\\n\\t\\treturn this.normalize();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdivide: function ( v ) {\\r\\n\\r\\n\\t\\tthis.x /= v.x;\\r\\n\\t\\tthis.y /= v.y;\\r\\n\\t\\tthis.z /= v.z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdivideScalar: function ( scalar ) {\\r\\n\\r\\n\\t\\treturn this.multiplyScalar( 1 / scalar );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmin: function ( v ) {\\r\\n\\r\\n\\t\\tthis.x = Math.min( this.x, v.x );\\r\\n\\t\\tthis.y = Math.min( this.y, v.y );\\r\\n\\t\\tthis.z = Math.min( this.z, v.z );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmax: function ( v ) {\\r\\n\\r\\n\\t\\tthis.x = Math.max( this.x, v.x );\\r\\n\\t\\tthis.y = Math.max( this.y, v.y );\\r\\n\\t\\tthis.z = Math.max( this.z, v.z );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclamp: function ( min, max ) {\\r\\n\\r\\n\\t\\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\\r\\n\\r\\n\\t\\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\\r\\n\\t\\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\\r\\n\\t\\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclampScalar: function () {\\r\\n\\r\\n\\t\\tvar min, max;\\r\\n\\r\\n\\t\\treturn function clampScalar( minVal, maxVal ) {\\r\\n\\r\\n\\t\\t\\tif ( min === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tmin = new THREE.Vector3();\\r\\n\\t\\t\\t\\tmax = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tmin.set( minVal, minVal, minVal );\\r\\n\\t\\t\\tmax.set( maxVal, maxVal, maxVal );\\r\\n\\r\\n\\t\\t\\treturn this.clamp( min, max );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tclampLength: function ( min, max ) {\\r\\n\\r\\n\\t\\tvar length = this.length();\\r\\n\\r\\n\\t\\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfloor: function () {\\r\\n\\r\\n\\t\\tthis.x = Math.floor( this.x );\\r\\n\\t\\tthis.y = Math.floor( this.y );\\r\\n\\t\\tthis.z = Math.floor( this.z );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tceil: function () {\\r\\n\\r\\n\\t\\tthis.x = Math.ceil( this.x );\\r\\n\\t\\tthis.y = Math.ceil( this.y );\\r\\n\\t\\tthis.z = Math.ceil( this.z );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tround: function () {\\r\\n\\r\\n\\t\\tthis.x = Math.round( this.x );\\r\\n\\t\\tthis.y = Math.round( this.y );\\r\\n\\t\\tthis.z = Math.round( this.z );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\troundToZero: function () {\\r\\n\\r\\n\\t\\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\\r\\n\\t\\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\\r\\n\\t\\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnegate: function () {\\r\\n\\r\\n\\t\\tthis.x = - this.x;\\r\\n\\t\\tthis.y = - this.y;\\r\\n\\t\\tthis.z = - this.z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdot: function ( v ) {\\r\\n\\r\\n\\t\\treturn this.x * v.x + this.y * v.y + this.z * v.z;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlengthSq: function () {\\r\\n\\r\\n\\t\\treturn this.x * this.x + this.y * this.y + this.z * this.z;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlength: function () {\\r\\n\\r\\n\\t\\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlengthManhattan: function () {\\r\\n\\r\\n\\t\\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnormalize: function () {\\r\\n\\r\\n\\t\\treturn this.divideScalar( this.length() );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetLength: function ( length ) {\\r\\n\\r\\n\\t\\treturn this.multiplyScalar( length / this.length() );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlerp: function ( v, alpha ) {\\r\\n\\r\\n\\t\\tthis.x += ( v.x - this.x ) * alpha;\\r\\n\\t\\tthis.y += ( v.y - this.y ) * alpha;\\r\\n\\t\\tthis.z += ( v.z - this.z ) * alpha;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlerpVectors: function ( v1, v2, alpha ) {\\r\\n\\r\\n\\t\\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcross: function ( v, w ) {\\r\\n\\r\\n\\t\\tif ( w !== undefined ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\\r\\n\\t\\t\\treturn this.crossVectors( v, w );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar x = this.x, y = this.y, z = this.z;\\r\\n\\r\\n\\t\\tthis.x = y * v.z - z * v.y;\\r\\n\\t\\tthis.y = z * v.x - x * v.z;\\r\\n\\t\\tthis.z = x * v.y - y * v.x;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcrossVectors: function ( a, b ) {\\r\\n\\r\\n\\t\\tvar ax = a.x, ay = a.y, az = a.z;\\r\\n\\t\\tvar bx = b.x, by = b.y, bz = b.z;\\r\\n\\r\\n\\t\\tthis.x = ay * bz - az * by;\\r\\n\\t\\tthis.y = az * bx - ax * bz;\\r\\n\\t\\tthis.z = ax * by - ay * bx;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tprojectOnVector: function ( vector ) {\\r\\n\\r\\n\\t\\tvar scalar = vector.dot( this ) / vector.lengthSq();\\r\\n\\t\\r\\n\\t\\treturn this.copy( vector ).multiplyScalar( scalar );\\r\\n\\t\\r\\n\\t},\\r\\n\\r\\n\\tprojectOnPlane: function () {\\r\\n\\r\\n\\t\\tvar v1;\\r\\n\\r\\n\\t\\treturn function projectOnPlane( planeNormal ) {\\r\\n\\r\\n\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\tv1.copy( this ).projectOnVector( planeNormal );\\r\\n\\r\\n\\t\\t\\treturn this.sub( v1 );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\treflect: function () {\\r\\n\\r\\n\\t\\t// reflect incident vector off plane orthogonal to normal\\r\\n\\t\\t// normal is assumed to have unit length\\r\\n\\r\\n\\t\\tvar v1;\\r\\n\\r\\n\\t\\treturn function reflect( normal ) {\\r\\n\\r\\n\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tangleTo: function ( v ) {\\r\\n\\r\\n\\t\\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\\r\\n\\r\\n\\t\\t// clamp, to handle numerical problems\\r\\n\\r\\n\\t\\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceTo: function ( v ) {\\r\\n\\r\\n\\t\\treturn Math.sqrt( this.distanceToSquared( v ) );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceToSquared: function ( v ) {\\r\\n\\r\\n\\t\\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\\r\\n\\r\\n\\t\\treturn dx * dx + dy * dy + dz * dz;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromSpherical: function( s ) {\\r\\n\\r\\n\\t\\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\\r\\n\\r\\n\\t\\tthis.x = sinPhiRadius * Math.sin( s.theta );\\r\\n\\t\\tthis.y = Math.cos( s.phi ) * s.radius;\\r\\n\\t\\tthis.z = sinPhiRadius * Math.cos( s.theta );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromMatrixPosition: function ( m ) {\\r\\n\\r\\n\\t\\treturn this.setFromMatrixColumn( m, 3 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromMatrixScale: function ( m ) {\\r\\n\\r\\n\\t\\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\\r\\n\\t\\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\\r\\n\\t\\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\\r\\n\\r\\n\\t\\tthis.x = sx;\\r\\n\\t\\tthis.y = sy;\\r\\n\\t\\tthis.z = sz;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromMatrixColumn: function ( m, index ) {\\r\\n\\r\\n\\t\\tif ( typeof m === 'number' ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\\r\\n\\t\\t\\tvar temp = m\\r\\n\\t\\t\\tm = index;\\r\\n\\t\\t\\tindex = temp;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.fromArray( m.elements, index * 4 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tequals: function ( v ) {\\r\\n\\r\\n\\t\\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tthis.x = array[ offset ];\\r\\n\\t\\tthis.y = array[ offset + 1 ];\\r\\n\\t\\tthis.z = array[ offset + 2 ];\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( array === undefined ) array = [];\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tarray[ offset ] = this.x;\\r\\n\\t\\tarray[ offset + 1 ] = this.y;\\r\\n\\t\\tarray[ offset + 2 ] = this.z;\\r\\n\\r\\n\\t\\treturn array;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromAttribute: function ( attribute, index, offset ) {\\r\\n\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tindex = index * attribute.itemSize + offset;\\r\\n\\r\\n\\t\\tthis.x = attribute.array[ index ];\\r\\n\\t\\tthis.y = attribute.array[ index + 1 ];\\r\\n\\t\\tthis.z = attribute.array[ index + 2 ];\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Vector4.js\\r\\n\\r\\n/**\\r\\n * @author supereggbert / http://www.paulbrunt.co.uk/\\r\\n * @author philogb / http://blog.thejit.org/\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author egraether / http://egraether.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n */\\r\\n\\r\\nTHREE.Vector4 = function ( x, y, z, w ) {\\r\\n\\r\\n\\tthis.x = x || 0;\\r\\n\\tthis.y = y || 0;\\r\\n\\tthis.z = z || 0;\\r\\n\\tthis.w = ( w !== undefined ) ? w : 1;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Vector4.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Vector4,\\r\\n\\r\\n\\tset: function ( x, y, z, w ) {\\r\\n\\r\\n\\t\\tthis.x = x;\\r\\n\\t\\tthis.y = y;\\r\\n\\t\\tthis.z = z;\\r\\n\\t\\tthis.w = w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetScalar: function ( scalar ) {\\r\\n\\r\\n\\t\\tthis.x = scalar;\\r\\n\\t\\tthis.y = scalar;\\r\\n\\t\\tthis.z = scalar;\\r\\n\\t\\tthis.w = scalar;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetX: function ( x ) {\\r\\n\\r\\n\\t\\tthis.x = x;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetY: function ( y ) {\\r\\n\\r\\n\\t\\tthis.y = y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetZ: function ( z ) {\\r\\n\\r\\n\\t\\tthis.z = z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetW: function ( w ) {\\r\\n\\r\\n\\t\\tthis.w = w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetComponent: function ( index, value ) {\\r\\n\\r\\n\\t\\tswitch ( index ) {\\r\\n\\r\\n\\t\\t\\tcase 0: this.x = value; break;\\r\\n\\t\\t\\tcase 1: this.y = value; break;\\r\\n\\t\\t\\tcase 2: this.z = value; break;\\r\\n\\t\\t\\tcase 3: this.w = value; break;\\r\\n\\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetComponent: function ( index ) {\\r\\n\\r\\n\\t\\tswitch ( index ) {\\r\\n\\r\\n\\t\\t\\tcase 0: return this.x;\\r\\n\\t\\t\\tcase 1: return this.y;\\r\\n\\t\\t\\tcase 2: return this.z;\\r\\n\\t\\t\\tcase 3: return this.w;\\r\\n\\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor( this.x, this.y, this.z, this.w );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( v ) {\\r\\n\\r\\n\\t\\tthis.x = v.x;\\r\\n\\t\\tthis.y = v.y;\\r\\n\\t\\tthis.z = v.z;\\r\\n\\t\\tthis.w = ( v.w !== undefined ) ? v.w : 1;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tadd: function ( v, w ) {\\r\\n\\r\\n\\t\\tif ( w !== undefined ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\\r\\n\\t\\t\\treturn this.addVectors( v, w );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.x += v.x;\\r\\n\\t\\tthis.y += v.y;\\r\\n\\t\\tthis.z += v.z;\\r\\n\\t\\tthis.w += v.w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddScalar: function ( s ) {\\r\\n\\r\\n\\t\\tthis.x += s;\\r\\n\\t\\tthis.y += s;\\r\\n\\t\\tthis.z += s;\\r\\n\\t\\tthis.w += s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddVectors: function ( a, b ) {\\r\\n\\r\\n\\t\\tthis.x = a.x + b.x;\\r\\n\\t\\tthis.y = a.y + b.y;\\r\\n\\t\\tthis.z = a.z + b.z;\\r\\n\\t\\tthis.w = a.w + b.w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddScaledVector: function ( v, s ) {\\r\\n\\r\\n\\t\\tthis.x += v.x * s;\\r\\n\\t\\tthis.y += v.y * s;\\r\\n\\t\\tthis.z += v.z * s;\\r\\n\\t\\tthis.w += v.w * s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsub: function ( v, w ) {\\r\\n\\r\\n\\t\\tif ( w !== undefined ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\\r\\n\\t\\t\\treturn this.subVectors( v, w );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.x -= v.x;\\r\\n\\t\\tthis.y -= v.y;\\r\\n\\t\\tthis.z -= v.z;\\r\\n\\t\\tthis.w -= v.w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsubScalar: function ( s ) {\\r\\n\\r\\n\\t\\tthis.x -= s;\\r\\n\\t\\tthis.y -= s;\\r\\n\\t\\tthis.z -= s;\\r\\n\\t\\tthis.w -= s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsubVectors: function ( a, b ) {\\r\\n\\r\\n\\t\\tthis.x = a.x - b.x;\\r\\n\\t\\tthis.y = a.y - b.y;\\r\\n\\t\\tthis.z = a.z - b.z;\\r\\n\\t\\tthis.w = a.w - b.w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiplyScalar: function ( scalar ) {\\r\\n\\r\\n\\t\\tif ( isFinite( scalar ) ) {\\r\\n\\r\\n\\t\\t\\tthis.x *= scalar;\\r\\n\\t\\t\\tthis.y *= scalar;\\r\\n\\t\\t\\tthis.z *= scalar;\\r\\n\\t\\t\\tthis.w *= scalar;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.x = 0;\\r\\n\\t\\t\\tthis.y = 0;\\r\\n\\t\\t\\tthis.z = 0;\\r\\n\\t\\t\\tthis.w = 0;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tapplyMatrix4: function ( m ) {\\r\\n\\r\\n\\t\\tvar x = this.x, y = this.y, z = this.z, w = this.w;\\r\\n\\t\\tvar e = m.elements;\\r\\n\\r\\n\\t\\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\\r\\n\\t\\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\\r\\n\\t\\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\\r\\n\\t\\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdivideScalar: function ( scalar ) {\\r\\n\\r\\n\\t\\treturn this.multiplyScalar( 1 / scalar );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetAxisAngleFromQuaternion: function ( q ) {\\r\\n\\r\\n\\t\\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\\r\\n\\r\\n\\t\\t// q is assumed to be normalized\\r\\n\\r\\n\\t\\tthis.w = 2 * Math.acos( q.w );\\r\\n\\r\\n\\t\\tvar s = Math.sqrt( 1 - q.w * q.w );\\r\\n\\r\\n\\t\\tif ( s < 0.0001 ) {\\r\\n\\r\\n\\t\\t\\t this.x = 1;\\r\\n\\t\\t\\t this.y = 0;\\r\\n\\t\\t\\t this.z = 0;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t this.x = q.x / s;\\r\\n\\t\\t\\t this.y = q.y / s;\\r\\n\\t\\t\\t this.z = q.z / s;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetAxisAngleFromRotationMatrix: function ( m ) {\\r\\n\\r\\n\\t\\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\\r\\n\\r\\n\\t\\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\r\\n\\r\\n\\t\\tvar angle, x, y, z,\\t\\t// variables for result\\r\\n\\t\\t\\tepsilon = 0.01,\\t\\t// margin to allow for rounding errors\\r\\n\\t\\t\\tepsilon2 = 0.1,\\t\\t// margin to distinguish between 0 and 180 degrees\\r\\n\\r\\n\\t\\t\\tte = m.elements,\\r\\n\\r\\n\\t\\t\\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\\r\\n\\t\\t\\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\\r\\n\\t\\t\\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\\r\\n\\r\\n\\t\\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\\r\\n\\t\\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\\r\\n\\t\\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\\r\\n\\r\\n\\t\\t\\t// singularity found\\r\\n\\t\\t\\t// first check for identity matrix which must have +1 for all terms\\r\\n\\t\\t\\t// in leading diagonal and zero in other terms\\r\\n\\r\\n\\t\\t\\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\\r\\n\\t\\t\\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\\r\\n\\t\\t\\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\\r\\n\\t\\t\\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// this singularity is identity matrix so angle = 0\\r\\n\\r\\n\\t\\t\\t\\tthis.set( 1, 0, 0, 0 );\\r\\n\\r\\n\\t\\t\\t\\treturn this; // zero angle, arbitrary axis\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// otherwise this singularity is angle = 180\\r\\n\\r\\n\\t\\t\\tangle = Math.PI;\\r\\n\\r\\n\\t\\t\\tvar xx = ( m11 + 1 ) / 2;\\r\\n\\t\\t\\tvar yy = ( m22 + 1 ) / 2;\\r\\n\\t\\t\\tvar zz = ( m33 + 1 ) / 2;\\r\\n\\t\\t\\tvar xy = ( m12 + m21 ) / 4;\\r\\n\\t\\t\\tvar xz = ( m13 + m31 ) / 4;\\r\\n\\t\\t\\tvar yz = ( m23 + m32 ) / 4;\\r\\n\\r\\n\\t\\t\\tif ( ( xx > yy ) && ( xx > zz ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// m11 is the largest diagonal term\\r\\n\\r\\n\\t\\t\\t\\tif ( xx < epsilon ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tx = 0;\\r\\n\\t\\t\\t\\t\\ty = 0.707106781;\\r\\n\\t\\t\\t\\t\\tz = 0.707106781;\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tx = Math.sqrt( xx );\\r\\n\\t\\t\\t\\t\\ty = xy / x;\\r\\n\\t\\t\\t\\t\\tz = xz / x;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else if ( yy > zz ) {\\r\\n\\r\\n\\t\\t\\t\\t// m22 is the largest diagonal term\\r\\n\\r\\n\\t\\t\\t\\tif ( yy < epsilon ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tx = 0.707106781;\\r\\n\\t\\t\\t\\t\\ty = 0;\\r\\n\\t\\t\\t\\t\\tz = 0.707106781;\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\ty = Math.sqrt( yy );\\r\\n\\t\\t\\t\\t\\tx = xy / y;\\r\\n\\t\\t\\t\\t\\tz = yz / y;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// m33 is the largest diagonal term so base result on this\\r\\n\\r\\n\\t\\t\\t\\tif ( zz < epsilon ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tx = 0.707106781;\\r\\n\\t\\t\\t\\t\\ty = 0.707106781;\\r\\n\\t\\t\\t\\t\\tz = 0;\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tz = Math.sqrt( zz );\\r\\n\\t\\t\\t\\t\\tx = xz / z;\\r\\n\\t\\t\\t\\t\\ty = yz / z;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.set( x, y, z, angle );\\r\\n\\r\\n\\t\\t\\treturn this; // return 180 deg rotation\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// as we have reached here there are no singularities so we can handle normally\\r\\n\\r\\n\\t\\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\\r\\n\\t\\t                   ( m13 - m31 ) * ( m13 - m31 ) +\\r\\n\\t\\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\\r\\n\\r\\n\\t\\tif ( Math.abs( s ) < 0.001 ) s = 1;\\r\\n\\r\\n\\t\\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\\r\\n\\t\\t// caught by singularity test above, but I've left it in just in case\\r\\n\\r\\n\\t\\tthis.x = ( m32 - m23 ) / s;\\r\\n\\t\\tthis.y = ( m13 - m31 ) / s;\\r\\n\\t\\tthis.z = ( m21 - m12 ) / s;\\r\\n\\t\\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmin: function ( v ) {\\r\\n\\r\\n\\t\\tthis.x = Math.min( this.x, v.x );\\r\\n\\t\\tthis.y = Math.min( this.y, v.y );\\r\\n\\t\\tthis.z = Math.min( this.z, v.z );\\r\\n\\t\\tthis.w = Math.min( this.w, v.w );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmax: function ( v ) {\\r\\n\\r\\n\\t\\tthis.x = Math.max( this.x, v.x );\\r\\n\\t\\tthis.y = Math.max( this.y, v.y );\\r\\n\\t\\tthis.z = Math.max( this.z, v.z );\\r\\n\\t\\tthis.w = Math.max( this.w, v.w );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclamp: function ( min, max ) {\\r\\n\\r\\n\\t\\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\\r\\n\\r\\n\\t\\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\\r\\n\\t\\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\\r\\n\\t\\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\\r\\n\\t\\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclampScalar: function () {\\r\\n\\r\\n\\t\\tvar min, max;\\r\\n\\r\\n\\t\\treturn function clampScalar( minVal, maxVal ) {\\r\\n\\r\\n\\t\\t\\tif ( min === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tmin = new THREE.Vector4();\\r\\n\\t\\t\\t\\tmax = new THREE.Vector4();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tmin.set( minVal, minVal, minVal, minVal );\\r\\n\\t\\t\\tmax.set( maxVal, maxVal, maxVal, maxVal );\\r\\n\\r\\n\\t\\t\\treturn this.clamp( min, max );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tfloor: function () {\\r\\n\\r\\n\\t\\tthis.x = Math.floor( this.x );\\r\\n\\t\\tthis.y = Math.floor( this.y );\\r\\n\\t\\tthis.z = Math.floor( this.z );\\r\\n\\t\\tthis.w = Math.floor( this.w );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tceil: function () {\\r\\n\\r\\n\\t\\tthis.x = Math.ceil( this.x );\\r\\n\\t\\tthis.y = Math.ceil( this.y );\\r\\n\\t\\tthis.z = Math.ceil( this.z );\\r\\n\\t\\tthis.w = Math.ceil( this.w );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tround: function () {\\r\\n\\r\\n\\t\\tthis.x = Math.round( this.x );\\r\\n\\t\\tthis.y = Math.round( this.y );\\r\\n\\t\\tthis.z = Math.round( this.z );\\r\\n\\t\\tthis.w = Math.round( this.w );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\troundToZero: function () {\\r\\n\\r\\n\\t\\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\\r\\n\\t\\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\\r\\n\\t\\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\\r\\n\\t\\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnegate: function () {\\r\\n\\r\\n\\t\\tthis.x = - this.x;\\r\\n\\t\\tthis.y = - this.y;\\r\\n\\t\\tthis.z = - this.z;\\r\\n\\t\\tthis.w = - this.w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdot: function ( v ) {\\r\\n\\r\\n\\t\\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlengthSq: function () {\\r\\n\\r\\n\\t\\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlength: function () {\\r\\n\\r\\n\\t\\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlengthManhattan: function () {\\r\\n\\r\\n\\t\\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnormalize: function () {\\r\\n\\r\\n\\t\\treturn this.divideScalar( this.length() );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetLength: function ( length ) {\\r\\n\\r\\n\\t\\treturn this.multiplyScalar( length / this.length() );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlerp: function ( v, alpha ) {\\r\\n\\r\\n\\t\\tthis.x += ( v.x - this.x ) * alpha;\\r\\n\\t\\tthis.y += ( v.y - this.y ) * alpha;\\r\\n\\t\\tthis.z += ( v.z - this.z ) * alpha;\\r\\n\\t\\tthis.w += ( v.w - this.w ) * alpha;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlerpVectors: function ( v1, v2, alpha ) {\\r\\n\\r\\n\\t\\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tequals: function ( v ) {\\r\\n\\r\\n\\t\\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tthis.x = array[ offset ];\\r\\n\\t\\tthis.y = array[ offset + 1 ];\\r\\n\\t\\tthis.z = array[ offset + 2 ];\\r\\n\\t\\tthis.w = array[ offset + 3 ];\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( array === undefined ) array = [];\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tarray[ offset ] = this.x;\\r\\n\\t\\tarray[ offset + 1 ] = this.y;\\r\\n\\t\\tarray[ offset + 2 ] = this.z;\\r\\n\\t\\tarray[ offset + 3 ] = this.w;\\r\\n\\r\\n\\t\\treturn array;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromAttribute: function ( attribute, index, offset ) {\\r\\n\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tindex = index * attribute.itemSize + offset;\\r\\n\\r\\n\\t\\tthis.x = attribute.array[ index ];\\r\\n\\t\\tthis.y = attribute.array[ index + 1 ];\\r\\n\\t\\tthis.z = attribute.array[ index + 2 ];\\r\\n\\t\\tthis.w = attribute.array[ index + 3 ];\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Euler.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n * @author bhouston / http://clara.io\\r\\n */\\r\\n\\r\\nTHREE.Euler = function ( x, y, z, order ) {\\r\\n\\r\\n\\tthis._x = x || 0;\\r\\n\\tthis._y = y || 0;\\r\\n\\tthis._z = z || 0;\\r\\n\\tthis._order = order || THREE.Euler.DefaultOrder;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\\r\\n\\r\\nTHREE.Euler.DefaultOrder = 'XYZ';\\r\\n\\r\\nTHREE.Euler.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Euler,\\r\\n\\r\\n\\tget x () {\\r\\n\\r\\n\\t\\treturn this._x;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset x ( value ) {\\r\\n\\r\\n\\t\\tthis._x = value;\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tget y () {\\r\\n\\r\\n\\t\\treturn this._y;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset y ( value ) {\\r\\n\\r\\n\\t\\tthis._y = value;\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tget z () {\\r\\n\\r\\n\\t\\treturn this._z;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset z ( value ) {\\r\\n\\r\\n\\t\\tthis._z = value;\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tget order () {\\r\\n\\r\\n\\t\\treturn this._order;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset order ( value ) {\\r\\n\\r\\n\\t\\tthis._order = value;\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset: function ( x, y, z, order ) {\\r\\n\\r\\n\\t\\tthis._x = x;\\r\\n\\t\\tthis._y = y;\\r\\n\\t\\tthis._z = z;\\r\\n\\t\\tthis._order = order || this._order;\\r\\n\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor( this._x, this._y, this._z, this._order );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( euler ) {\\r\\n\\r\\n\\t\\tthis._x = euler._x;\\r\\n\\t\\tthis._y = euler._y;\\r\\n\\t\\tthis._z = euler._z;\\r\\n\\t\\tthis._order = euler._order;\\r\\n\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromRotationMatrix: function ( m, order, update ) {\\r\\n\\r\\n\\t\\tvar clamp = THREE.Math.clamp;\\r\\n\\r\\n\\t\\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\r\\n\\r\\n\\t\\tvar te = m.elements;\\r\\n\\t\\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\\r\\n\\t\\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\\r\\n\\t\\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\\r\\n\\r\\n\\t\\torder = order || this._order;\\r\\n\\r\\n\\t\\tif ( order === 'XYZ' ) {\\r\\n\\r\\n\\t\\t\\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\\r\\n\\r\\n\\t\\t\\tif ( Math.abs( m13 ) < 0.99999 ) {\\r\\n\\r\\n\\t\\t\\t\\tthis._x = Math.atan2( - m23, m33 );\\r\\n\\t\\t\\t\\tthis._z = Math.atan2( - m12, m11 );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tthis._x = Math.atan2( m32, m22 );\\r\\n\\t\\t\\t\\tthis._z = 0;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else if ( order === 'YXZ' ) {\\r\\n\\r\\n\\t\\t\\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\\r\\n\\r\\n\\t\\t\\tif ( Math.abs( m23 ) < 0.99999 ) {\\r\\n\\r\\n\\t\\t\\t\\tthis._y = Math.atan2( m13, m33 );\\r\\n\\t\\t\\t\\tthis._z = Math.atan2( m21, m22 );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tthis._y = Math.atan2( - m31, m11 );\\r\\n\\t\\t\\t\\tthis._z = 0;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else if ( order === 'ZXY' ) {\\r\\n\\r\\n\\t\\t\\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\\r\\n\\r\\n\\t\\t\\tif ( Math.abs( m32 ) < 0.99999 ) {\\r\\n\\r\\n\\t\\t\\t\\tthis._y = Math.atan2( - m31, m33 );\\r\\n\\t\\t\\t\\tthis._z = Math.atan2( - m12, m22 );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tthis._y = 0;\\r\\n\\t\\t\\t\\tthis._z = Math.atan2( m21, m11 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else if ( order === 'ZYX' ) {\\r\\n\\r\\n\\t\\t\\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\\r\\n\\r\\n\\t\\t\\tif ( Math.abs( m31 ) < 0.99999 ) {\\r\\n\\r\\n\\t\\t\\t\\tthis._x = Math.atan2( m32, m33 );\\r\\n\\t\\t\\t\\tthis._z = Math.atan2( m21, m11 );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tthis._x = 0;\\r\\n\\t\\t\\t\\tthis._z = Math.atan2( - m12, m22 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else if ( order === 'YZX' ) {\\r\\n\\r\\n\\t\\t\\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\\r\\n\\r\\n\\t\\t\\tif ( Math.abs( m21 ) < 0.99999 ) {\\r\\n\\r\\n\\t\\t\\t\\tthis._x = Math.atan2( - m23, m22 );\\r\\n\\t\\t\\t\\tthis._y = Math.atan2( - m31, m11 );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tthis._x = 0;\\r\\n\\t\\t\\t\\tthis._y = Math.atan2( m13, m33 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else if ( order === 'XZY' ) {\\r\\n\\r\\n\\t\\t\\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\\r\\n\\r\\n\\t\\t\\tif ( Math.abs( m12 ) < 0.99999 ) {\\r\\n\\r\\n\\t\\t\\t\\tthis._x = Math.atan2( m32, m22 );\\r\\n\\t\\t\\t\\tthis._y = Math.atan2( m13, m11 );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tthis._x = Math.atan2( - m23, m33 );\\r\\n\\t\\t\\t\\tthis._y = 0;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis._order = order;\\r\\n\\r\\n\\t\\tif ( update !== false ) this.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromQuaternion: function () {\\r\\n\\r\\n\\t\\tvar matrix;\\r\\n\\r\\n\\t\\treturn function setFromQuaternion( q, order, update ) {\\r\\n\\r\\n\\t\\t\\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tmatrix.makeRotationFromQuaternion( q );\\r\\n\\r\\n\\t\\t\\treturn this.setFromRotationMatrix( matrix, order, update );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tsetFromVector3: function ( v, order ) {\\r\\n\\r\\n\\t\\treturn this.set( v.x, v.y, v.z, order || this._order );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\treorder: function () {\\r\\n\\r\\n\\t\\t// WARNING: this discards revolution information -bhouston\\r\\n\\r\\n\\t\\tvar q = new THREE.Quaternion();\\r\\n\\r\\n\\t\\treturn function reorder( newOrder ) {\\r\\n\\r\\n\\t\\t\\tq.setFromEuler( this );\\r\\n\\t\\t\\t\\r\\n\\t\\t\\treturn this.setFromQuaternion( q, newOrder );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tequals: function ( euler ) {\\r\\n\\r\\n\\t\\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromArray: function ( array ) {\\r\\n\\r\\n\\t\\tthis._x = array[ 0 ];\\r\\n\\t\\tthis._y = array[ 1 ];\\r\\n\\t\\tthis._z = array[ 2 ];\\r\\n\\t\\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\\r\\n\\r\\n\\t\\tthis.onChangeCallback();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( array === undefined ) array = [];\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tarray[ offset ] = this._x;\\r\\n\\t\\tarray[ offset + 1 ] = this._y;\\r\\n\\t\\tarray[ offset + 2 ] = this._z;\\r\\n\\t\\tarray[ offset + 3 ] = this._order;\\r\\n\\r\\n\\t\\treturn array;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoVector3: function ( optionalResult ) {\\r\\n\\r\\n\\t\\tif ( optionalResult ) {\\r\\n\\r\\n\\t\\t\\treturn optionalResult.set( this._x, this._y, this._z );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\treturn new THREE.Vector3( this._x, this._y, this._z );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tonChange: function ( callback ) {\\r\\n\\r\\n\\t\\tthis.onChangeCallback = callback;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tonChangeCallback: function () {}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Line3.js\\r\\n\\r\\n/**\\r\\n * @author bhouston / http://clara.io\\r\\n */\\r\\n\\r\\nTHREE.Line3 = function ( start, end ) {\\r\\n\\r\\n\\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\\r\\n\\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Line3.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Line3,\\r\\n\\r\\n\\tset: function ( start, end ) {\\r\\n\\r\\n\\t\\tthis.start.copy( start );\\r\\n\\t\\tthis.end.copy( end );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( line ) {\\r\\n\\r\\n\\t\\tthis.start.copy( line.start );\\r\\n\\t\\tthis.end.copy( line.end );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcenter: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\t\\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdelta: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\t\\treturn result.subVectors( this.end, this.start );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceSq: function () {\\r\\n\\r\\n\\t\\treturn this.start.distanceToSquared( this.end );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistance: function () {\\r\\n\\r\\n\\t\\treturn this.start.distanceTo( this.end );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tat: function ( t, optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclosestPointToPointParameter: function () {\\r\\n\\r\\n\\t\\tvar startP = new THREE.Vector3();\\r\\n\\t\\tvar startEnd = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function closestPointToPointParameter( point, clampToLine ) {\\r\\n\\r\\n\\t\\t\\tstartP.subVectors( point, this.start );\\r\\n\\t\\t\\tstartEnd.subVectors( this.end, this.start );\\r\\n\\r\\n\\t\\t\\tvar startEnd2 = startEnd.dot( startEnd );\\r\\n\\t\\t\\tvar startEnd_startP = startEnd.dot( startP );\\r\\n\\r\\n\\t\\t\\tvar t = startEnd_startP / startEnd2;\\r\\n\\r\\n\\t\\t\\tif ( clampToLine ) {\\r\\n\\r\\n\\t\\t\\t\\tt = THREE.Math.clamp( t, 0, 1 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn t;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\\r\\n\\r\\n\\t\\tvar t = this.closestPointToPointParameter( point, clampToLine );\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tapplyMatrix4: function ( matrix ) {\\r\\n\\r\\n\\t\\tthis.start.applyMatrix4( matrix );\\r\\n\\t\\tthis.end.applyMatrix4( matrix );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tequals: function ( line ) {\\r\\n\\r\\n\\t\\treturn line.start.equals( this.start ) && line.end.equals( this.end );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Box2.js\\r\\n\\r\\n/**\\r\\n * @author bhouston / http://clara.io\\r\\n */\\r\\n\\r\\nTHREE.Box2 = function ( min, max ) {\\r\\n\\r\\n\\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( + Infinity, + Infinity );\\r\\n\\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Box2.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Box2,\\r\\n\\r\\n\\tset: function ( min, max ) {\\r\\n\\r\\n\\t\\tthis.min.copy( min );\\r\\n\\t\\tthis.max.copy( max );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromPoints: function ( points ) {\\r\\n\\r\\n\\t\\tthis.makeEmpty();\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.expandByPoint( points[ i ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromCenterAndSize: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector2();\\r\\n\\r\\n\\t\\treturn function setFromCenterAndSize( center, size ) {\\r\\n\\r\\n\\t\\t\\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\\r\\n\\t\\t\\tthis.min.copy( center ).sub( halfSize );\\r\\n\\t\\t\\tthis.max.copy( center ).add( halfSize );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( box ) {\\r\\n\\r\\n\\t\\tthis.min.copy( box.min );\\r\\n\\t\\tthis.max.copy( box.max );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmakeEmpty: function () {\\r\\n\\r\\n\\t\\tthis.min.x = this.min.y = + Infinity;\\r\\n\\t\\tthis.max.x = this.max.y = - Infinity;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tisEmpty: function () {\\r\\n\\r\\n\\t\\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\\r\\n\\r\\n\\t\\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcenter: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector2();\\r\\n\\t\\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsize: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector2();\\r\\n\\t\\treturn result.subVectors( this.max, this.min );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\texpandByPoint: function ( point ) {\\r\\n\\r\\n\\t\\tthis.min.min( point );\\r\\n\\t\\tthis.max.max( point );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\texpandByVector: function ( vector ) {\\r\\n\\r\\n\\t\\tthis.min.sub( vector );\\r\\n\\t\\tthis.max.add( vector );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\texpandByScalar: function ( scalar ) {\\r\\n\\r\\n\\t\\tthis.min.addScalar( - scalar );\\r\\n\\t\\tthis.max.addScalar( scalar );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcontainsPoint: function ( point ) {\\r\\n\\r\\n\\t\\tif ( point.x < this.min.x || point.x > this.max.x ||\\r\\n\\t\\t     point.y < this.min.y || point.y > this.max.y ) {\\r\\n\\r\\n\\t\\t\\treturn false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcontainsBox: function ( box ) {\\r\\n\\r\\n\\t\\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\\r\\n\\t\\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\\r\\n\\r\\n\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn false;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetParameter: function ( point, optionalTarget ) {\\r\\n\\r\\n\\t\\t// This can potentially have a divide by zero if the box\\r\\n\\t\\t// has a size dimension of 0.\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector2();\\r\\n\\r\\n\\t\\treturn result.set(\\r\\n\\t\\t\\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\\r\\n\\t\\t\\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\\r\\n\\t\\t);\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectsBox: function ( box ) {\\r\\n\\r\\n\\t\\t// using 6 splitting planes to rule out intersections.\\r\\n\\r\\n\\t\\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\\r\\n\\t\\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\\r\\n\\r\\n\\t\\t\\treturn false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclampPoint: function ( point, optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector2();\\r\\n\\t\\treturn result.copy( point ).clamp( this.min, this.max );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceToPoint: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector2();\\r\\n\\r\\n\\t\\treturn function distanceToPoint( point ) {\\r\\n\\r\\n\\t\\t\\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\\r\\n\\t\\t\\treturn clampedPoint.sub( point ).length();\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tintersect: function ( box ) {\\r\\n\\r\\n\\t\\tthis.min.max( box.min );\\r\\n\\t\\tthis.max.min( box.max );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tunion: function ( box ) {\\r\\n\\r\\n\\t\\tthis.min.min( box.min );\\r\\n\\t\\tthis.max.max( box.max );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttranslate: function ( offset ) {\\r\\n\\r\\n\\t\\tthis.min.add( offset );\\r\\n\\t\\tthis.max.add( offset );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tequals: function ( box ) {\\r\\n\\r\\n\\t\\treturn box.min.equals( this.min ) && box.max.equals( this.max );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Box3.js\\r\\n\\r\\n/**\\r\\n * @author bhouston / http://clara.io\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n */\\r\\n\\r\\nTHREE.Box3 = function ( min, max ) {\\r\\n\\r\\n\\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( + Infinity, + Infinity, + Infinity );\\r\\n\\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Box3.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Box3,\\r\\n\\r\\n\\tset: function ( min, max ) {\\r\\n\\r\\n\\t\\tthis.min.copy( min );\\r\\n\\t\\tthis.max.copy( max );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromArray: function ( array ) {\\r\\n\\r\\n\\t\\tvar minX = + Infinity;\\r\\n\\t\\tvar minY = + Infinity;\\r\\n\\t\\tvar minZ = + Infinity;\\r\\n\\r\\n\\t\\tvar maxX = - Infinity;\\r\\n\\t\\tvar maxY = - Infinity;\\r\\n\\t\\tvar maxZ = - Infinity;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\\r\\n\\r\\n\\t\\t\\tvar x = array[ i ];\\r\\n\\t\\t\\tvar y = array[ i + 1 ];\\r\\n\\t\\t\\tvar z = array[ i + 2 ];\\r\\n\\r\\n\\t\\t\\tif ( x < minX ) minX = x;\\r\\n\\t\\t\\tif ( y < minY ) minY = y;\\r\\n\\t\\t\\tif ( z < minZ ) minZ = z;\\r\\n\\r\\n\\t\\t\\tif ( x > maxX ) maxX = x;\\r\\n\\t\\t\\tif ( y > maxY ) maxY = y;\\r\\n\\t\\t\\tif ( z > maxZ ) maxZ = z;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.min.set( minX, minY, minZ );\\r\\n\\t\\tthis.max.set( maxX, maxY, maxZ );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromPoints: function ( points ) {\\r\\n\\r\\n\\t\\tthis.makeEmpty();\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.expandByPoint( points[ i ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromCenterAndSize: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function setFromCenterAndSize( center, size ) {\\r\\n\\r\\n\\t\\t\\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\\r\\n\\r\\n\\t\\t\\tthis.min.copy( center ).sub( halfSize );\\r\\n\\t\\t\\tthis.max.copy( center ).add( halfSize );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tsetFromObject: function () {\\r\\n\\r\\n\\t\\t// Computes the world-axis-aligned bounding box of an object (including its children),\\r\\n\\t\\t// accounting for both the object's, and children's, world transforms\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function setFromObject( object ) {\\r\\n\\r\\n\\t\\t\\tvar scope = this;\\r\\n\\r\\n\\t\\t\\tobject.updateMatrixWorld( true );\\r\\n\\r\\n\\t\\t\\tthis.makeEmpty();\\r\\n\\r\\n\\t\\t\\tobject.traverse( function ( node ) {\\r\\n\\r\\n\\t\\t\\t\\tvar geometry = node.geometry;\\r\\n\\r\\n\\t\\t\\t\\tif ( geometry !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( geometry instanceof THREE.Geometry ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar vertices = geometry.vertices;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tv1.copy( vertices[ i ] );\\r\\n\\t\\t\\t\\t\\t\\t\\tv1.applyMatrix4( node.matrixWorld );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tscope.expandByPoint( v1 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar positions = geometry.attributes[ 'position' ].array;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tv1.fromArray( positions, i );\\r\\n\\t\\t\\t\\t\\t\\t\\tv1.applyMatrix4( node.matrixWorld );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tscope.expandByPoint( v1 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( box ) {\\r\\n\\r\\n\\t\\tthis.min.copy( box.min );\\r\\n\\t\\tthis.max.copy( box.max );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmakeEmpty: function () {\\r\\n\\r\\n\\t\\tthis.min.x = this.min.y = this.min.z = + Infinity;\\r\\n\\t\\tthis.max.x = this.max.y = this.max.z = - Infinity;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tisEmpty: function () {\\r\\n\\r\\n\\t\\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\\r\\n\\r\\n\\t\\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcenter: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\t\\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsize: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\t\\treturn result.subVectors( this.max, this.min );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\texpandByPoint: function ( point ) {\\r\\n\\r\\n\\t\\tthis.min.min( point );\\r\\n\\t\\tthis.max.max( point );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\texpandByVector: function ( vector ) {\\r\\n\\r\\n\\t\\tthis.min.sub( vector );\\r\\n\\t\\tthis.max.add( vector );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\texpandByScalar: function ( scalar ) {\\r\\n\\r\\n\\t\\tthis.min.addScalar( - scalar );\\r\\n\\t\\tthis.max.addScalar( scalar );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcontainsPoint: function ( point ) {\\r\\n\\r\\n\\t\\tif ( point.x < this.min.x || point.x > this.max.x ||\\r\\n\\t\\t\\t\\t point.y < this.min.y || point.y > this.max.y ||\\r\\n\\t\\t\\t\\t point.z < this.min.z || point.z > this.max.z ) {\\r\\n\\r\\n\\t\\t\\treturn false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcontainsBox: function ( box ) {\\r\\n\\r\\n\\t\\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\\r\\n\\t\\t\\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\\r\\n\\t\\t\\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\\r\\n\\r\\n\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn false;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetParameter: function ( point, optionalTarget ) {\\r\\n\\r\\n\\t\\t// This can potentially have a divide by zero if the box\\r\\n\\t\\t// has a size dimension of 0.\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn result.set(\\r\\n\\t\\t\\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\\r\\n\\t\\t\\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\\r\\n\\t\\t\\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\\r\\n\\t\\t);\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectsBox: function ( box ) {\\r\\n\\r\\n\\t\\t// using 6 splitting planes to rule out intersections.\\r\\n\\r\\n\\t\\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\\r\\n\\t\\t\\t\\t box.max.y < this.min.y || box.min.y > this.max.y ||\\r\\n\\t\\t\\t\\t box.max.z < this.min.z || box.min.z > this.max.z ) {\\r\\n\\r\\n\\t\\t\\treturn false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectsSphere: ( function () {\\r\\n\\r\\n\\t\\tvar closestPoint;\\r\\n\\r\\n\\t\\treturn function intersectsSphere( sphere ) {\\r\\n\\r\\n\\t\\t\\tif ( closestPoint === undefined ) closestPoint = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\t// Find the point on the AABB closest to the sphere center.\\r\\n\\t\\t\\tthis.clampPoint( sphere.center, closestPoint );\\r\\n\\r\\n\\t\\t\\t// If that point is inside the sphere, the AABB and sphere intersect.\\r\\n\\t\\t\\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )(),\\r\\n\\r\\n\\tintersectsPlane: function ( plane ) {\\r\\n\\r\\n\\t\\t// We compute the minimum and maximum dot product values. If those values\\r\\n\\t\\t// are on the same side (back or front) of the plane, then there is no intersection.\\r\\n\\r\\n\\t\\tvar min, max;\\r\\n\\r\\n\\t\\tif ( plane.normal.x > 0 ) {\\r\\n\\r\\n\\t\\t\\tmin = plane.normal.x * this.min.x;\\r\\n\\t\\t\\tmax = plane.normal.x * this.max.x;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tmin = plane.normal.x * this.max.x;\\r\\n\\t\\t\\tmax = plane.normal.x * this.min.x;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( plane.normal.y > 0 ) {\\r\\n\\r\\n\\t\\t\\tmin += plane.normal.y * this.min.y;\\r\\n\\t\\t\\tmax += plane.normal.y * this.max.y;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tmin += plane.normal.y * this.max.y;\\r\\n\\t\\t\\tmax += plane.normal.y * this.min.y;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( plane.normal.z > 0 ) {\\r\\n\\r\\n\\t\\t\\tmin += plane.normal.z * this.min.z;\\r\\n\\t\\t\\tmax += plane.normal.z * this.max.z;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tmin += plane.normal.z * this.max.z;\\r\\n\\t\\t\\tmax += plane.normal.z * this.min.z;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn ( min <= plane.constant && max >= plane.constant );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclampPoint: function ( point, optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\t\\treturn result.copy( point ).clamp( this.min, this.max );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceToPoint: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function distanceToPoint( point ) {\\r\\n\\r\\n\\t\\t\\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\\r\\n\\t\\t\\treturn clampedPoint.sub( point ).length();\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tgetBoundingSphere: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function getBoundingSphere( optionalTarget ) {\\r\\n\\r\\n\\t\\t\\tvar result = optionalTarget || new THREE.Sphere();\\r\\n\\r\\n\\t\\t\\tresult.center = this.center();\\r\\n\\t\\t\\tresult.radius = this.size( v1 ).length() * 0.5;\\r\\n\\r\\n\\t\\t\\treturn result;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tintersect: function ( box ) {\\r\\n\\r\\n\\t\\tthis.min.max( box.min );\\r\\n\\t\\tthis.max.min( box.max );\\r\\n\\r\\n\\t\\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\\r\\n\\t\\tif( this.isEmpty() ) this.makeEmpty();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tunion: function ( box ) {\\r\\n\\r\\n\\t\\tthis.min.min( box.min );\\r\\n\\t\\tthis.max.max( box.max );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tapplyMatrix4: function () {\\r\\n\\r\\n\\t\\tvar points = [\\r\\n\\t\\t\\tnew THREE.Vector3(),\\r\\n\\t\\t\\tnew THREE.Vector3(),\\r\\n\\t\\t\\tnew THREE.Vector3(),\\r\\n\\t\\t\\tnew THREE.Vector3(),\\r\\n\\t\\t\\tnew THREE.Vector3(),\\r\\n\\t\\t\\tnew THREE.Vector3(),\\r\\n\\t\\t\\tnew THREE.Vector3(),\\r\\n\\t\\t\\tnew THREE.Vector3()\\r\\n\\t\\t];\\r\\n\\r\\n\\t\\treturn function applyMatrix4( matrix ) {\\r\\n\\r\\n\\t\\t\\t// transform of empty box is an empty box.\\r\\n\\t\\t\\tif( this.isEmpty() ) return this;\\r\\n\\r\\n\\t\\t\\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\\r\\n\\t\\t\\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\\r\\n\\t\\t\\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\\r\\n\\t\\t\\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\\r\\n\\t\\t\\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\\r\\n\\t\\t\\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\\r\\n\\t\\t\\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\\r\\n\\t\\t\\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\\r\\n\\t\\t\\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\\t// 111\\r\\n\\r\\n\\t\\t\\tthis.setFromPoints( points );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\ttranslate: function ( offset ) {\\r\\n\\r\\n\\t\\tthis.min.add( offset );\\r\\n\\t\\tthis.max.add( offset );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tequals: function ( box ) {\\r\\n\\r\\n\\t\\treturn box.min.equals( this.min ) && box.max.equals( this.max );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Matrix3.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n * @author bhouston / http://clara.io\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.Matrix3 = function () {\\r\\n\\r\\n\\tthis.elements = new Float32Array( [\\r\\n\\r\\n\\t\\t1, 0, 0,\\r\\n\\t\\t0, 1, 0,\\r\\n\\t\\t0, 0, 1\\r\\n\\r\\n\\t] );\\r\\n\\r\\n\\tif ( arguments.length > 0 ) {\\r\\n\\r\\n\\t\\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Matrix3.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Matrix3,\\r\\n\\r\\n\\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\\r\\n\\t\\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\\r\\n\\t\\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tidentity: function () {\\r\\n\\r\\n\\t\\tthis.set(\\r\\n\\r\\n\\t\\t\\t1, 0, 0,\\r\\n\\t\\t\\t0, 1, 0,\\r\\n\\t\\t\\t0, 0, 1\\r\\n\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().fromArray( this.elements );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( m ) {\\r\\n\\r\\n\\t\\tvar me = m.elements;\\r\\n\\r\\n\\t\\tthis.set(\\r\\n\\r\\n\\t\\t\\tme[ 0 ], me[ 3 ], me[ 6 ],\\r\\n\\t\\t\\tme[ 1 ], me[ 4 ], me[ 7 ],\\r\\n\\t\\t\\tme[ 2 ], me[ 5 ], me[ 8 ]\\r\\n\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromMatrix4: function( m ) {\\r\\n\\r\\n\\t\\tvar me = m.elements;\\r\\n\\r\\n\\t\\tthis.set(\\r\\n\\r\\n\\t\\t\\tme[ 0 ], me[ 4 ], me[  8 ],\\r\\n\\t\\t\\tme[ 1 ], me[ 5 ], me[  9 ],\\r\\n\\t\\t\\tme[ 2 ], me[ 6 ], me[ 10 ]\\r\\n\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tapplyToVector3Array: function () {\\r\\n\\r\\n\\t\\tvar v1;\\r\\n\\r\\n\\t\\treturn function applyToVector3Array( array, offset, length ) {\\r\\n\\r\\n\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\r\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\t\\t\\tif ( length === undefined ) length = array.length;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\tv1.fromArray( array, j );\\r\\n\\t\\t\\t\\tv1.applyMatrix3( this );\\r\\n\\t\\t\\t\\tv1.toArray( array, j );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn array;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tapplyToBuffer: function () {\\r\\n\\r\\n\\t\\tvar v1;\\r\\n\\r\\n\\t\\treturn function applyToBuffer( buffer, offset, length ) {\\r\\n\\r\\n\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\r\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\t\\t\\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tv1.x = buffer.getX( j );\\r\\n\\t\\t\\t\\tv1.y = buffer.getY( j );\\r\\n\\t\\t\\t\\tv1.z = buffer.getZ( j );\\r\\n\\r\\n\\t\\t\\t\\tv1.applyMatrix3( this );\\r\\n\\r\\n\\t\\t\\t\\tbuffer.setXYZ( v1.x, v1.y, v1.z );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn buffer;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tmultiplyScalar: function ( s ) {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\\r\\n\\t\\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\\r\\n\\t\\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdeterminant: function () {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\\r\\n\\t\\t\\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\\r\\n\\t\\t\\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\\r\\n\\r\\n\\t\\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetInverse: function ( matrix, throwOnDegenerate ) {\\r\\n\\r\\n\\t\\tif ( matrix instanceof THREE.Matrix4 ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( \\\"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\\\" );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar me = matrix.elements,\\r\\n\\t\\t\\tte = this.elements,\\r\\n\\r\\n\\t\\t\\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\\r\\n\\t\\t\\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\\r\\n\\t\\t\\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\\r\\n\\r\\n\\t\\t\\tt11 = n33 * n22 - n32 * n23,\\r\\n\\t\\t\\tt12 = n32 * n13 - n33 * n12,\\r\\n\\t\\t\\tt13 = n23 * n12 - n22 * n13,\\r\\n\\r\\n\\t\\t\\tdet = n11 * t11 + n21 * t12 + n31 * t13;\\r\\n\\r\\n\\t\\tif ( det === 0 ) {\\r\\n\\r\\n\\t\\t\\tvar msg = \\\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\\\";\\r\\n\\r\\n\\t\\t\\tif ( throwOnDegenerate || false ) {\\r\\n\\r\\n\\t\\t\\t\\tthrow new Error( msg );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( msg );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn this.identity();\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t\\tvar detInv = 1 / det;\\r\\n\\r\\n\\t\\tte[ 0 ] = t11 * detInv;\\r\\n\\t\\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\\r\\n\\t\\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\\r\\n\\r\\n\\t\\tte[ 3 ] = t12 * detInv;\\r\\n\\t\\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\\r\\n\\t\\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\\r\\n\\r\\n\\t\\tte[ 6 ] = t13 * detInv;\\r\\n\\t\\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\\r\\n\\t\\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttranspose: function () {\\r\\n\\r\\n\\t\\tvar tmp, m = this.elements;\\r\\n\\r\\n\\t\\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\\r\\n\\t\\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\\r\\n\\t\\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tflattenToArrayOffset: function ( array, offset ) {\\r\\n\\r\\n\\t\\tconsole.warn( \\\"THREE.Matrix3: .flattenToArrayOffset is deprecated \\\" +\\r\\n\\t\\t\\t\\t\\\"- just use .toArray instead.\\\" );\\r\\n\\r\\n\\t\\treturn this.toArray( array, offset );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetNormalMatrix: function ( matrix4 ) {\\r\\n\\r\\n\\t\\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttransposeIntoArray: function ( r ) {\\r\\n\\r\\n\\t\\tvar m = this.elements;\\r\\n\\r\\n\\t\\tr[ 0 ] = m[ 0 ];\\r\\n\\t\\tr[ 1 ] = m[ 3 ];\\r\\n\\t\\tr[ 2 ] = m[ 6 ];\\r\\n\\t\\tr[ 3 ] = m[ 1 ];\\r\\n\\t\\tr[ 4 ] = m[ 4 ];\\r\\n\\t\\tr[ 5 ] = m[ 7 ];\\r\\n\\t\\tr[ 6 ] = m[ 2 ];\\r\\n\\t\\tr[ 7 ] = m[ 5 ];\\r\\n\\t\\tr[ 8 ] = m[ 8 ];\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromArray: function ( array ) {\\r\\n\\r\\n\\t\\tthis.elements.set( array );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( array === undefined ) array = [];\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tarray[ offset ] = te[ 0 ];\\r\\n\\t\\tarray[ offset + 1 ] = te[ 1 ];\\r\\n\\t\\tarray[ offset + 2 ] = te[ 2 ];\\r\\n\\r\\n\\t\\tarray[ offset + 3 ] = te[ 3 ];\\r\\n\\t\\tarray[ offset + 4 ] = te[ 4 ];\\r\\n\\t\\tarray[ offset + 5 ] = te[ 5 ];\\r\\n\\r\\n\\t\\tarray[ offset + 6 ] = te[ 6 ];\\r\\n\\t\\tarray[ offset + 7 ] = te[ 7 ];\\r\\n\\t\\tarray[ offset + 8 ]  = te[ 8 ];\\r\\n\\r\\n\\t\\treturn array;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Matrix4.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author supereggbert / http://www.paulbrunt.co.uk/\\r\\n * @author philogb / http://blog.thejit.org/\\r\\n * @author jordi_ros / http://plattsoft.com\\r\\n * @author D1plo1d / http://github.com/D1plo1d\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author timknip / http://www.floorplanner.com/\\r\\n * @author bhouston / http://clara.io\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n */\\r\\n\\r\\nTHREE.Matrix4 = function () {\\r\\n\\r\\n\\tthis.elements = new Float32Array( [\\r\\n\\r\\n\\t\\t1, 0, 0, 0,\\r\\n\\t\\t0, 1, 0, 0,\\r\\n\\t\\t0, 0, 1, 0,\\r\\n\\t\\t0, 0, 0, 1\\r\\n\\r\\n\\t] );\\r\\n\\r\\n\\tif ( arguments.length > 0 ) {\\r\\n\\r\\n\\t\\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Matrix4.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Matrix4,\\r\\n\\r\\n\\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\\r\\n\\t\\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\\r\\n\\t\\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\\r\\n\\t\\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tidentity: function () {\\r\\n\\r\\n\\t\\tthis.set(\\r\\n\\r\\n\\t\\t\\t1, 0, 0, 0,\\r\\n\\t\\t\\t0, 1, 0, 0,\\r\\n\\t\\t\\t0, 0, 1, 0,\\r\\n\\t\\t\\t0, 0, 0, 1\\r\\n\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new THREE.Matrix4().fromArray( this.elements );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( m ) {\\r\\n\\r\\n\\t\\tthis.elements.set( m.elements );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopyPosition: function ( m ) {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\t\\tvar me = m.elements;\\r\\n\\r\\n\\t\\tte[ 12 ] = me[ 12 ];\\r\\n\\t\\tte[ 13 ] = me[ 13 ];\\r\\n\\t\\tte[ 14 ] = me[ 14 ];\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\textractBasis: function ( xAxis, yAxis, zAxis ) {\\r\\n\\r\\n\\t\\txAxis.setFromMatrixColumn( this, 0 );\\r\\n\\t\\tyAxis.setFromMatrixColumn( this, 1 );\\r\\n\\t\\tzAxis.setFromMatrixColumn( this, 2 );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\\r\\n\\r\\n\\t\\tthis.set(\\r\\n\\t\\t\\txAxis.x, yAxis.x, zAxis.x, 0,\\r\\n\\t\\t\\txAxis.y, yAxis.y, zAxis.y, 0,\\r\\n\\t\\t\\txAxis.z, yAxis.z, zAxis.z, 0,\\r\\n\\t\\t\\t0,       0,       0,       1\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\textractRotation: function () {\\r\\n\\r\\n\\t\\tvar v1;\\r\\n\\r\\n\\t\\treturn function extractRotation( m ) {\\r\\n\\r\\n\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\tvar te = this.elements;\\r\\n\\t\\t\\tvar me = m.elements;\\r\\n\\r\\n\\t\\t\\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\\r\\n\\t\\t\\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\\r\\n\\t\\t\\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\\r\\n\\r\\n\\t\\t\\tte[ 0 ] = me[ 0 ] * scaleX;\\r\\n\\t\\t\\tte[ 1 ] = me[ 1 ] * scaleX;\\r\\n\\t\\t\\tte[ 2 ] = me[ 2 ] * scaleX;\\r\\n\\r\\n\\t\\t\\tte[ 4 ] = me[ 4 ] * scaleY;\\r\\n\\t\\t\\tte[ 5 ] = me[ 5 ] * scaleY;\\r\\n\\t\\t\\tte[ 6 ] = me[ 6 ] * scaleY;\\r\\n\\r\\n\\t\\t\\tte[ 8 ] = me[ 8 ] * scaleZ;\\r\\n\\t\\t\\tte[ 9 ] = me[ 9 ] * scaleZ;\\r\\n\\t\\t\\tte[ 10 ] = me[ 10 ] * scaleZ;\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tmakeRotationFromEuler: function ( euler ) {\\r\\n\\r\\n\\t\\tif ( euler instanceof THREE.Euler === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tvar x = euler.x, y = euler.y, z = euler.z;\\r\\n\\t\\tvar a = Math.cos( x ), b = Math.sin( x );\\r\\n\\t\\tvar c = Math.cos( y ), d = Math.sin( y );\\r\\n\\t\\tvar e = Math.cos( z ), f = Math.sin( z );\\r\\n\\r\\n\\t\\tif ( euler.order === 'XYZ' ) {\\r\\n\\r\\n\\t\\t\\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\\r\\n\\r\\n\\t\\t\\tte[ 0 ] = c * e;\\r\\n\\t\\t\\tte[ 4 ] = - c * f;\\r\\n\\t\\t\\tte[ 8 ] = d;\\r\\n\\r\\n\\t\\t\\tte[ 1 ] = af + be * d;\\r\\n\\t\\t\\tte[ 5 ] = ae - bf * d;\\r\\n\\t\\t\\tte[ 9 ] = - b * c;\\r\\n\\r\\n\\t\\t\\tte[ 2 ] = bf - ae * d;\\r\\n\\t\\t\\tte[ 6 ] = be + af * d;\\r\\n\\t\\t\\tte[ 10 ] = a * c;\\r\\n\\r\\n\\t\\t} else if ( euler.order === 'YXZ' ) {\\r\\n\\r\\n\\t\\t\\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\\r\\n\\r\\n\\t\\t\\tte[ 0 ] = ce + df * b;\\r\\n\\t\\t\\tte[ 4 ] = de * b - cf;\\r\\n\\t\\t\\tte[ 8 ] = a * d;\\r\\n\\r\\n\\t\\t\\tte[ 1 ] = a * f;\\r\\n\\t\\t\\tte[ 5 ] = a * e;\\r\\n\\t\\t\\tte[ 9 ] = - b;\\r\\n\\r\\n\\t\\t\\tte[ 2 ] = cf * b - de;\\r\\n\\t\\t\\tte[ 6 ] = df + ce * b;\\r\\n\\t\\t\\tte[ 10 ] = a * c;\\r\\n\\r\\n\\t\\t} else if ( euler.order === 'ZXY' ) {\\r\\n\\r\\n\\t\\t\\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\\r\\n\\r\\n\\t\\t\\tte[ 0 ] = ce - df * b;\\r\\n\\t\\t\\tte[ 4 ] = - a * f;\\r\\n\\t\\t\\tte[ 8 ] = de + cf * b;\\r\\n\\r\\n\\t\\t\\tte[ 1 ] = cf + de * b;\\r\\n\\t\\t\\tte[ 5 ] = a * e;\\r\\n\\t\\t\\tte[ 9 ] = df - ce * b;\\r\\n\\r\\n\\t\\t\\tte[ 2 ] = - a * d;\\r\\n\\t\\t\\tte[ 6 ] = b;\\r\\n\\t\\t\\tte[ 10 ] = a * c;\\r\\n\\r\\n\\t\\t} else if ( euler.order === 'ZYX' ) {\\r\\n\\r\\n\\t\\t\\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\\r\\n\\r\\n\\t\\t\\tte[ 0 ] = c * e;\\r\\n\\t\\t\\tte[ 4 ] = be * d - af;\\r\\n\\t\\t\\tte[ 8 ] = ae * d + bf;\\r\\n\\r\\n\\t\\t\\tte[ 1 ] = c * f;\\r\\n\\t\\t\\tte[ 5 ] = bf * d + ae;\\r\\n\\t\\t\\tte[ 9 ] = af * d - be;\\r\\n\\r\\n\\t\\t\\tte[ 2 ] = - d;\\r\\n\\t\\t\\tte[ 6 ] = b * c;\\r\\n\\t\\t\\tte[ 10 ] = a * c;\\r\\n\\r\\n\\t\\t} else if ( euler.order === 'YZX' ) {\\r\\n\\r\\n\\t\\t\\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\\r\\n\\r\\n\\t\\t\\tte[ 0 ] = c * e;\\r\\n\\t\\t\\tte[ 4 ] = bd - ac * f;\\r\\n\\t\\t\\tte[ 8 ] = bc * f + ad;\\r\\n\\r\\n\\t\\t\\tte[ 1 ] = f;\\r\\n\\t\\t\\tte[ 5 ] = a * e;\\r\\n\\t\\t\\tte[ 9 ] = - b * e;\\r\\n\\r\\n\\t\\t\\tte[ 2 ] = - d * e;\\r\\n\\t\\t\\tte[ 6 ] = ad * f + bc;\\r\\n\\t\\t\\tte[ 10 ] = ac - bd * f;\\r\\n\\r\\n\\t\\t} else if ( euler.order === 'XZY' ) {\\r\\n\\r\\n\\t\\t\\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\\r\\n\\r\\n\\t\\t\\tte[ 0 ] = c * e;\\r\\n\\t\\t\\tte[ 4 ] = - f;\\r\\n\\t\\t\\tte[ 8 ] = d * e;\\r\\n\\r\\n\\t\\t\\tte[ 1 ] = ac * f + bd;\\r\\n\\t\\t\\tte[ 5 ] = a * e;\\r\\n\\t\\t\\tte[ 9 ] = ad * f - bc;\\r\\n\\r\\n\\t\\t\\tte[ 2 ] = bc * f - ad;\\r\\n\\t\\t\\tte[ 6 ] = b * e;\\r\\n\\t\\t\\tte[ 10 ] = bd * f + ac;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// last column\\r\\n\\t\\tte[ 3 ] = 0;\\r\\n\\t\\tte[ 7 ] = 0;\\r\\n\\t\\tte[ 11 ] = 0;\\r\\n\\r\\n\\t\\t// bottom row\\r\\n\\t\\tte[ 12 ] = 0;\\r\\n\\t\\tte[ 13 ] = 0;\\r\\n\\t\\tte[ 14 ] = 0;\\r\\n\\t\\tte[ 15 ] = 1;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmakeRotationFromQuaternion: function ( q ) {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tvar x = q.x, y = q.y, z = q.z, w = q.w;\\r\\n\\t\\tvar x2 = x + x, y2 = y + y, z2 = z + z;\\r\\n\\t\\tvar xx = x * x2, xy = x * y2, xz = x * z2;\\r\\n\\t\\tvar yy = y * y2, yz = y * z2, zz = z * z2;\\r\\n\\t\\tvar wx = w * x2, wy = w * y2, wz = w * z2;\\r\\n\\r\\n\\t\\tte[ 0 ] = 1 - ( yy + zz );\\r\\n\\t\\tte[ 4 ] = xy - wz;\\r\\n\\t\\tte[ 8 ] = xz + wy;\\r\\n\\r\\n\\t\\tte[ 1 ] = xy + wz;\\r\\n\\t\\tte[ 5 ] = 1 - ( xx + zz );\\r\\n\\t\\tte[ 9 ] = yz - wx;\\r\\n\\r\\n\\t\\tte[ 2 ] = xz - wy;\\r\\n\\t\\tte[ 6 ] = yz + wx;\\r\\n\\t\\tte[ 10 ] = 1 - ( xx + yy );\\r\\n\\r\\n\\t\\t// last column\\r\\n\\t\\tte[ 3 ] = 0;\\r\\n\\t\\tte[ 7 ] = 0;\\r\\n\\t\\tte[ 11 ] = 0;\\r\\n\\r\\n\\t\\t// bottom row\\r\\n\\t\\tte[ 12 ] = 0;\\r\\n\\t\\tte[ 13 ] = 0;\\r\\n\\t\\tte[ 14 ] = 0;\\r\\n\\t\\tte[ 15 ] = 1;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlookAt: function () {\\r\\n\\r\\n\\t\\tvar x, y, z;\\r\\n\\r\\n\\t\\treturn function lookAt( eye, target, up ) {\\r\\n\\r\\n\\t\\t\\tif ( x === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tx = new THREE.Vector3();\\r\\n\\t\\t\\t\\ty = new THREE.Vector3();\\r\\n\\t\\t\\t\\tz = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\t\\tz.subVectors( eye, target ).normalize();\\r\\n\\r\\n\\t\\t\\tif ( z.lengthSq() === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tz.z = 1;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tx.crossVectors( up, z ).normalize();\\r\\n\\r\\n\\t\\t\\tif ( x.lengthSq() === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tz.z += 0.0001;\\r\\n\\t\\t\\t\\tx.crossVectors( up, z ).normalize();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ty.crossVectors( z, x );\\r\\n\\r\\n\\r\\n\\t\\t\\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\\r\\n\\t\\t\\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\\r\\n\\t\\t\\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tmultiply: function ( m, n ) {\\r\\n\\r\\n\\t\\tif ( n !== undefined ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\\r\\n\\t\\t\\treturn this.multiplyMatrices( m, n );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.multiplyMatrices( this, m );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tpremultiply: function ( m ) {\\r\\n\\r\\n\\t\\treturn this.multiplyMatrices( m, this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiplyMatrices: function ( a, b ) {\\r\\n\\r\\n\\t\\tvar ae = a.elements;\\r\\n\\t\\tvar be = b.elements;\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\\r\\n\\t\\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\\r\\n\\t\\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\\r\\n\\t\\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\\r\\n\\r\\n\\t\\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\\r\\n\\t\\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\\r\\n\\t\\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\\r\\n\\t\\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\\r\\n\\r\\n\\t\\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\\r\\n\\t\\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\\r\\n\\t\\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\\r\\n\\t\\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\\r\\n\\r\\n\\t\\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\\r\\n\\t\\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\\r\\n\\t\\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\\r\\n\\t\\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\\r\\n\\r\\n\\t\\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\\r\\n\\t\\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\\r\\n\\t\\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\\r\\n\\t\\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\\r\\n\\r\\n\\t\\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\\r\\n\\t\\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\\r\\n\\t\\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\\r\\n\\t\\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiplyToArray: function ( a, b, r ) {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tthis.multiplyMatrices( a, b );\\r\\n\\r\\n\\t\\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\\r\\n\\t\\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\\r\\n\\t\\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\\r\\n\\t\\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmultiplyScalar: function ( s ) {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\\r\\n\\t\\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\\r\\n\\t\\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\\r\\n\\t\\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tapplyToVector3Array: function () {\\r\\n\\r\\n\\t\\tvar v1;\\r\\n\\r\\n\\t\\treturn function applyToVector3Array( array, offset, length ) {\\r\\n\\r\\n\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\r\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\t\\t\\tif ( length === undefined ) length = array.length;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\tv1.fromArray( array, j );\\r\\n\\t\\t\\t\\tv1.applyMatrix4( this );\\r\\n\\t\\t\\t\\tv1.toArray( array, j );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn array;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tapplyToBuffer: function () {\\r\\n\\r\\n\\t\\tvar v1;\\r\\n\\r\\n\\t\\treturn function applyToBuffer( buffer, offset, length ) {\\r\\n\\r\\n\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\r\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\t\\t\\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tv1.x = buffer.getX( j );\\r\\n\\t\\t\\t\\tv1.y = buffer.getY( j );\\r\\n\\t\\t\\t\\tv1.z = buffer.getZ( j );\\r\\n\\r\\n\\t\\t\\t\\tv1.applyMatrix4( this );\\r\\n\\r\\n\\t\\t\\t\\tbuffer.setXYZ( v1.x, v1.y, v1.z );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn buffer;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tdeterminant: function () {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\\r\\n\\t\\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\\r\\n\\t\\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\\r\\n\\t\\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\\r\\n\\r\\n\\t\\t//TODO: make this more efficient\\r\\n\\t\\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\\r\\n\\r\\n\\t\\treturn (\\r\\n\\t\\t\\tn41 * (\\r\\n\\t\\t\\t\\t+ n14 * n23 * n32\\r\\n\\t\\t\\t\\t - n13 * n24 * n32\\r\\n\\t\\t\\t\\t - n14 * n22 * n33\\r\\n\\t\\t\\t\\t + n12 * n24 * n33\\r\\n\\t\\t\\t\\t + n13 * n22 * n34\\r\\n\\t\\t\\t\\t - n12 * n23 * n34\\r\\n\\t\\t\\t) +\\r\\n\\t\\t\\tn42 * (\\r\\n\\t\\t\\t\\t+ n11 * n23 * n34\\r\\n\\t\\t\\t\\t - n11 * n24 * n33\\r\\n\\t\\t\\t\\t + n14 * n21 * n33\\r\\n\\t\\t\\t\\t - n13 * n21 * n34\\r\\n\\t\\t\\t\\t + n13 * n24 * n31\\r\\n\\t\\t\\t\\t - n14 * n23 * n31\\r\\n\\t\\t\\t) +\\r\\n\\t\\t\\tn43 * (\\r\\n\\t\\t\\t\\t+ n11 * n24 * n32\\r\\n\\t\\t\\t\\t - n11 * n22 * n34\\r\\n\\t\\t\\t\\t - n14 * n21 * n32\\r\\n\\t\\t\\t\\t + n12 * n21 * n34\\r\\n\\t\\t\\t\\t + n14 * n22 * n31\\r\\n\\t\\t\\t\\t - n12 * n24 * n31\\r\\n\\t\\t\\t) +\\r\\n\\t\\t\\tn44 * (\\r\\n\\t\\t\\t\\t- n13 * n22 * n31\\r\\n\\t\\t\\t\\t - n11 * n23 * n32\\r\\n\\t\\t\\t\\t + n11 * n22 * n33\\r\\n\\t\\t\\t\\t + n13 * n21 * n32\\r\\n\\t\\t\\t\\t - n12 * n21 * n33\\r\\n\\t\\t\\t\\t + n12 * n23 * n31\\r\\n\\t\\t\\t)\\r\\n\\r\\n\\t\\t);\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttranspose: function () {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\t\\tvar tmp;\\r\\n\\r\\n\\t\\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\\r\\n\\t\\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\\r\\n\\t\\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\\r\\n\\r\\n\\t\\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\\r\\n\\t\\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\\r\\n\\t\\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tflattenToArrayOffset: function ( array, offset ) {\\r\\n\\r\\n\\t\\tconsole.warn( \\\"THREE.Matrix3: .flattenToArrayOffset is deprecated \\\" +\\r\\n\\t\\t\\t\\t\\\"- just use .toArray instead.\\\" );\\r\\n\\r\\n\\t\\treturn this.toArray( array, offset );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetPosition: function () {\\r\\n\\r\\n\\t\\tvar v1;\\r\\n\\r\\n\\t\\treturn function getPosition() {\\r\\n\\r\\n\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\r\\n\\t\\t\\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\\r\\n\\r\\n\\t\\t\\treturn v1.setFromMatrixColumn( this, 3 );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tsetPosition: function ( v ) {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tte[ 12 ] = v.x;\\r\\n\\t\\tte[ 13 ] = v.y;\\r\\n\\t\\tte[ 14 ] = v.z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetInverse: function ( m, throwOnDegenerate ) {\\r\\n\\r\\n\\t\\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\\r\\n\\t\\tvar te = this.elements,\\r\\n\\t\\t\\tme = m.elements,\\r\\n\\r\\n\\t\\t\\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\\r\\n\\t\\t\\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\\r\\n\\t\\t\\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\\r\\n\\t\\t\\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\\r\\n\\r\\n\\t\\t\\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\\r\\n\\t\\t\\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\\r\\n\\t\\t\\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\\r\\n\\t\\t\\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\\r\\n\\r\\n\\t\\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\\r\\n\\r\\n\\t\\tif ( det === 0 ) {\\r\\n\\r\\n\\t\\t\\tvar msg = \\\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\\\";\\r\\n\\r\\n\\t\\t\\tif ( throwOnDegenerate || false ) {\\r\\n\\r\\n\\t\\t\\t\\tthrow new Error( msg );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( msg );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn this.identity();\\r\\n\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t\\tvar detInv = 1 / det;\\r\\n\\r\\n\\t\\tte[ 0 ] = t11 * detInv;\\r\\n\\t\\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\\r\\n\\t\\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\\r\\n\\t\\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\\r\\n\\r\\n\\t\\tte[ 4 ] = t12 * detInv;\\r\\n\\t\\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\\r\\n\\t\\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\\r\\n\\t\\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\\r\\n\\r\\n\\t\\tte[ 8 ] = t13 * detInv;\\r\\n\\t\\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\\r\\n\\t\\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\\r\\n\\t\\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\\r\\n\\r\\n\\t\\tte[ 12 ] = t14 * detInv;\\r\\n\\t\\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\\r\\n\\t\\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\\r\\n\\t\\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tscale: function ( v ) {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\t\\tvar x = v.x, y = v.y, z = v.z;\\r\\n\\r\\n\\t\\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\\r\\n\\t\\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\\r\\n\\t\\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\\r\\n\\t\\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetMaxScaleOnAxis: function () {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\\r\\n\\t\\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\\r\\n\\t\\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\\r\\n\\r\\n\\t\\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmakeTranslation: function ( x, y, z ) {\\r\\n\\r\\n\\t\\tthis.set(\\r\\n\\r\\n\\t\\t\\t1, 0, 0, x,\\r\\n\\t\\t\\t0, 1, 0, y,\\r\\n\\t\\t\\t0, 0, 1, z,\\r\\n\\t\\t\\t0, 0, 0, 1\\r\\n\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmakeRotationX: function ( theta ) {\\r\\n\\r\\n\\t\\tvar c = Math.cos( theta ), s = Math.sin( theta );\\r\\n\\r\\n\\t\\tthis.set(\\r\\n\\r\\n\\t\\t\\t1, 0,  0, 0,\\r\\n\\t\\t\\t0, c, - s, 0,\\r\\n\\t\\t\\t0, s,  c, 0,\\r\\n\\t\\t\\t0, 0,  0, 1\\r\\n\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmakeRotationY: function ( theta ) {\\r\\n\\r\\n\\t\\tvar c = Math.cos( theta ), s = Math.sin( theta );\\r\\n\\r\\n\\t\\tthis.set(\\r\\n\\r\\n\\t\\t\\t c, 0, s, 0,\\r\\n\\t\\t\\t 0, 1, 0, 0,\\r\\n\\t\\t\\t- s, 0, c, 0,\\r\\n\\t\\t\\t 0, 0, 0, 1\\r\\n\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmakeRotationZ: function ( theta ) {\\r\\n\\r\\n\\t\\tvar c = Math.cos( theta ), s = Math.sin( theta );\\r\\n\\r\\n\\t\\tthis.set(\\r\\n\\r\\n\\t\\t\\tc, - s, 0, 0,\\r\\n\\t\\t\\ts,  c, 0, 0,\\r\\n\\t\\t\\t0,  0, 1, 0,\\r\\n\\t\\t\\t0,  0, 0, 1\\r\\n\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmakeRotationAxis: function ( axis, angle ) {\\r\\n\\r\\n\\t\\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\\r\\n\\r\\n\\t\\tvar c = Math.cos( angle );\\r\\n\\t\\tvar s = Math.sin( angle );\\r\\n\\t\\tvar t = 1 - c;\\r\\n\\t\\tvar x = axis.x, y = axis.y, z = axis.z;\\r\\n\\t\\tvar tx = t * x, ty = t * y;\\r\\n\\r\\n\\t\\tthis.set(\\r\\n\\r\\n\\t\\t\\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\\r\\n\\t\\t\\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\\r\\n\\t\\t\\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\\r\\n\\t\\t\\t0, 0, 0, 1\\r\\n\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\t return this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmakeScale: function ( x, y, z ) {\\r\\n\\r\\n\\t\\tthis.set(\\r\\n\\r\\n\\t\\t\\tx, 0, 0, 0,\\r\\n\\t\\t\\t0, y, 0, 0,\\r\\n\\t\\t\\t0, 0, z, 0,\\r\\n\\t\\t\\t0, 0, 0, 1\\r\\n\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcompose: function ( position, quaternion, scale ) {\\r\\n\\r\\n\\t\\tthis.makeRotationFromQuaternion( quaternion );\\r\\n\\t\\tthis.scale( scale );\\r\\n\\t\\tthis.setPosition( position );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdecompose: function () {\\r\\n\\r\\n\\t\\tvar vector, matrix;\\r\\n\\r\\n\\t\\treturn function decompose( position, quaternion, scale ) {\\r\\n\\r\\n\\t\\t\\tif ( vector === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tvector = new THREE.Vector3();\\r\\n\\t\\t\\t\\tmatrix = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\t\\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\\r\\n\\t\\t\\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\\r\\n\\t\\t\\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\\r\\n\\r\\n\\t\\t\\t// if determine is negative, we need to invert one scale\\r\\n\\t\\t\\tvar det = this.determinant();\\r\\n\\t\\t\\tif ( det < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tsx = - sx;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tposition.x = te[ 12 ];\\r\\n\\t\\t\\tposition.y = te[ 13 ];\\r\\n\\t\\t\\tposition.z = te[ 14 ];\\r\\n\\r\\n\\t\\t\\t// scale the rotation part\\r\\n\\r\\n\\t\\t\\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\\r\\n\\r\\n\\t\\t\\tvar invSX = 1 / sx;\\r\\n\\t\\t\\tvar invSY = 1 / sy;\\r\\n\\t\\t\\tvar invSZ = 1 / sz;\\r\\n\\r\\n\\t\\t\\tmatrix.elements[ 0 ] *= invSX;\\r\\n\\t\\t\\tmatrix.elements[ 1 ] *= invSX;\\r\\n\\t\\t\\tmatrix.elements[ 2 ] *= invSX;\\r\\n\\r\\n\\t\\t\\tmatrix.elements[ 4 ] *= invSY;\\r\\n\\t\\t\\tmatrix.elements[ 5 ] *= invSY;\\r\\n\\t\\t\\tmatrix.elements[ 6 ] *= invSY;\\r\\n\\r\\n\\t\\t\\tmatrix.elements[ 8 ] *= invSZ;\\r\\n\\t\\t\\tmatrix.elements[ 9 ] *= invSZ;\\r\\n\\t\\t\\tmatrix.elements[ 10 ] *= invSZ;\\r\\n\\r\\n\\t\\t\\tquaternion.setFromRotationMatrix( matrix );\\r\\n\\r\\n\\t\\t\\tscale.x = sx;\\r\\n\\t\\t\\tscale.y = sy;\\r\\n\\t\\t\\tscale.z = sz;\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\t\\tvar x = 2 * near / ( right - left );\\r\\n\\t\\tvar y = 2 * near / ( top - bottom );\\r\\n\\r\\n\\t\\tvar a = ( right + left ) / ( right - left );\\r\\n\\t\\tvar b = ( top + bottom ) / ( top - bottom );\\r\\n\\t\\tvar c = - ( far + near ) / ( far - near );\\r\\n\\t\\tvar d = - 2 * far * near / ( far - near );\\r\\n\\r\\n\\t\\tte[ 0 ] = x;\\tte[ 4 ] = 0;\\tte[ 8 ] = a;\\tte[ 12 ] = 0;\\r\\n\\t\\tte[ 1 ] = 0;\\tte[ 5 ] = y;\\tte[ 9 ] = b;\\tte[ 13 ] = 0;\\r\\n\\t\\tte[ 2 ] = 0;\\tte[ 6 ] = 0;\\tte[ 10 ] = c;\\tte[ 14 ] = d;\\r\\n\\t\\tte[ 3 ] = 0;\\tte[ 7 ] = 0;\\tte[ 11 ] = - 1;\\tte[ 15 ] = 0;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmakePerspective: function ( fov, aspect, near, far ) {\\r\\n\\r\\n\\t\\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\\r\\n\\t\\tvar ymin = - ymax;\\r\\n\\t\\tvar xmin = ymin * aspect;\\r\\n\\t\\tvar xmax = ymax * aspect;\\r\\n\\r\\n\\t\\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\t\\tvar w = 1.0 / ( right - left );\\r\\n\\t\\tvar h = 1.0 / ( top - bottom );\\r\\n\\t\\tvar p = 1.0 / ( far - near );\\r\\n\\r\\n\\t\\tvar x = ( right + left ) * w;\\r\\n\\t\\tvar y = ( top + bottom ) * h;\\r\\n\\t\\tvar z = ( far + near ) * p;\\r\\n\\r\\n\\t\\tte[ 0 ] = 2 * w;\\tte[ 4 ] = 0;\\tte[ 8 ] = 0;\\tte[ 12 ] = - x;\\r\\n\\t\\tte[ 1 ] = 0;\\tte[ 5 ] = 2 * h;\\tte[ 9 ] = 0;\\tte[ 13 ] = - y;\\r\\n\\t\\tte[ 2 ] = 0;\\tte[ 6 ] = 0;\\tte[ 10 ] = - 2 * p;\\tte[ 14 ] = - z;\\r\\n\\t\\tte[ 3 ] = 0;\\tte[ 7 ] = 0;\\tte[ 11 ] = 0;\\tte[ 15 ] = 1;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tequals: function ( matrix ) {\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\t\\tvar me = matrix.elements;\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < 16; i ++ ) {\\r\\n\\r\\n\\t\\t\\tif ( te[ i ] !== me[ i ] ) return false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromArray: function ( array ) {\\r\\n\\r\\n\\t\\tthis.elements.set( array );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoArray: function ( array, offset ) {\\r\\n\\r\\n\\t\\tif ( array === undefined ) array = [];\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tvar te = this.elements;\\r\\n\\r\\n\\t\\tarray[ offset ] = te[ 0 ];\\r\\n\\t\\tarray[ offset + 1 ] = te[ 1 ];\\r\\n\\t\\tarray[ offset + 2 ] = te[ 2 ];\\r\\n\\t\\tarray[ offset + 3 ] = te[ 3 ];\\r\\n\\r\\n\\t\\tarray[ offset + 4 ] = te[ 4 ];\\r\\n\\t\\tarray[ offset + 5 ] = te[ 5 ];\\r\\n\\t\\tarray[ offset + 6 ] = te[ 6 ];\\r\\n\\t\\tarray[ offset + 7 ] = te[ 7 ];\\r\\n\\r\\n\\t\\tarray[ offset + 8 ]  = te[ 8 ];\\r\\n\\t\\tarray[ offset + 9 ]  = te[ 9 ];\\r\\n\\t\\tarray[ offset + 10 ] = te[ 10 ];\\r\\n\\t\\tarray[ offset + 11 ] = te[ 11 ];\\r\\n\\r\\n\\t\\tarray[ offset + 12 ] = te[ 12 ];\\r\\n\\t\\tarray[ offset + 13 ] = te[ 13 ];\\r\\n\\t\\tarray[ offset + 14 ] = te[ 14 ];\\r\\n\\t\\tarray[ offset + 15 ] = te[ 15 ];\\r\\n\\r\\n\\t\\treturn array;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Ray.js\\r\\n\\r\\n/**\\r\\n * @author bhouston / http://clara.io\\r\\n */\\r\\n\\r\\nTHREE.Ray = function ( origin, direction ) {\\r\\n\\r\\n\\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\\r\\n\\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Ray.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Ray,\\r\\n\\r\\n\\tset: function ( origin, direction ) {\\r\\n\\r\\n\\t\\tthis.origin.copy( origin );\\r\\n\\t\\tthis.direction.copy( direction );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( ray ) {\\r\\n\\r\\n\\t\\tthis.origin.copy( ray.origin );\\r\\n\\t\\tthis.direction.copy( ray.direction );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tat: function ( t, optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlookAt: function ( v ) {\\r\\n\\r\\n\\t\\tthis.direction.copy( v ).sub( this.origin ).normalize();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\trecast: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function recast( t ) {\\r\\n\\r\\n\\t\\t\\tthis.origin.copy( this.at( t, v1 ) );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tclosestPointToPoint: function ( point, optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\t\\tresult.subVectors( point, this.origin );\\r\\n\\t\\tvar directionDistance = result.dot( this.direction );\\r\\n\\r\\n\\t\\tif ( directionDistance < 0 ) {\\r\\n\\r\\n\\t\\t\\treturn result.copy( this.origin );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceToPoint: function ( point ) {\\r\\n\\r\\n\\t\\treturn Math.sqrt( this.distanceSqToPoint( point ) );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceSqToPoint: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function distanceSqToPoint( point ) {\\r\\n\\r\\n\\t\\t\\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\\r\\n\\r\\n\\t\\t\\t// point behind the ray\\r\\n\\r\\n\\t\\t\\tif ( directionDistance < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\treturn this.origin.distanceToSquared( point );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\\r\\n\\r\\n\\t\\t\\treturn v1.distanceToSquared( point );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tdistanceSqToSegment: function () {\\r\\n\\r\\n\\t\\tvar segCenter = new THREE.Vector3();\\r\\n\\t\\tvar segDir = new THREE.Vector3();\\r\\n\\t\\tvar diff = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\\r\\n\\r\\n\\t\\t\\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\\r\\n\\t\\t\\t// It returns the min distance between the ray and the segment\\r\\n\\t\\t\\t// defined by v0 and v1\\r\\n\\t\\t\\t// It can also set two optional targets :\\r\\n\\t\\t\\t// - The closest point on the ray\\r\\n\\t\\t\\t// - The closest point on the segment\\r\\n\\r\\n\\t\\t\\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\\r\\n\\t\\t\\tsegDir.copy( v1 ).sub( v0 ).normalize();\\r\\n\\t\\t\\tdiff.copy( this.origin ).sub( segCenter );\\r\\n\\r\\n\\t\\t\\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\\r\\n\\t\\t\\tvar a01 = - this.direction.dot( segDir );\\r\\n\\t\\t\\tvar b0 = diff.dot( this.direction );\\r\\n\\t\\t\\tvar b1 = - diff.dot( segDir );\\r\\n\\t\\t\\tvar c = diff.lengthSq();\\r\\n\\t\\t\\tvar det = Math.abs( 1 - a01 * a01 );\\r\\n\\t\\t\\tvar s0, s1, sqrDist, extDet;\\r\\n\\r\\n\\t\\t\\tif ( det > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t// The ray and segment are not parallel.\\r\\n\\r\\n\\t\\t\\t\\ts0 = a01 * b1 - b0;\\r\\n\\t\\t\\t\\ts1 = a01 * b0 - b1;\\r\\n\\t\\t\\t\\textDet = segExtent * det;\\r\\n\\r\\n\\t\\t\\t\\tif ( s0 >= 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( s1 >= - extDet ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( s1 <= extDet ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// region 0\\r\\n\\t\\t\\t\\t\\t\\t\\t// Minimum at interior points of ray and segment.\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvar invDet = 1 / det;\\r\\n\\t\\t\\t\\t\\t\\t\\ts0 *= invDet;\\r\\n\\t\\t\\t\\t\\t\\t\\ts1 *= invDet;\\r\\n\\t\\t\\t\\t\\t\\t\\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// region 1\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\ts1 = segExtent;\\r\\n\\t\\t\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\\r\\n\\t\\t\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// region 5\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ts1 = - segExtent;\\r\\n\\t\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\\r\\n\\t\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( s1 <= - extDet ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// region 4\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\\r\\n\\t\\t\\t\\t\\t\\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\\r\\n\\t\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( s1 <= extDet ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// region 3\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ts0 = 0;\\r\\n\\t\\t\\t\\t\\t\\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\\r\\n\\t\\t\\t\\t\\t\\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// region 2\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\\r\\n\\t\\t\\t\\t\\t\\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\\r\\n\\t\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// Ray and segment are parallel.\\r\\n\\r\\n\\t\\t\\t\\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\\r\\n\\t\\t\\t\\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\\r\\n\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( optionalPointOnRay ) {\\r\\n\\r\\n\\t\\t\\t\\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( optionalPointOnSegment ) {\\r\\n\\r\\n\\t\\t\\t\\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn sqrDist;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tintersectSphere: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function intersectSphere( sphere, optionalTarget ) {\\r\\n\\r\\n\\t\\t\\tv1.subVectors( sphere.center, this.origin );\\r\\n\\t\\t\\tvar tca = v1.dot( this.direction );\\r\\n\\t\\t\\tvar d2 = v1.dot( v1 ) - tca * tca;\\r\\n\\t\\t\\tvar radius2 = sphere.radius * sphere.radius;\\r\\n\\r\\n\\t\\t\\tif ( d2 > radius2 ) return null;\\r\\n\\r\\n\\t\\t\\tvar thc = Math.sqrt( radius2 - d2 );\\r\\n\\r\\n\\t\\t\\t// t0 = first intersect point - entrance on front of sphere\\r\\n\\t\\t\\tvar t0 = tca - thc;\\r\\n\\r\\n\\t\\t\\t// t1 = second intersect point - exit point on back of sphere\\r\\n\\t\\t\\tvar t1 = tca + thc;\\r\\n\\r\\n\\t\\t\\t// test to see if both t0 and t1 are behind the ray - if so, return null\\r\\n\\t\\t\\tif ( t0 < 0 && t1 < 0 ) return null;\\r\\n\\r\\n\\t\\t\\t// test to see if t0 is behind the ray:\\r\\n\\t\\t\\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\\r\\n\\t\\t\\t// in order to always return an intersect point that is in front of the ray.\\r\\n\\t\\t\\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\\r\\n\\r\\n\\t\\t\\t// else t0 is in front of the ray, so return the first collision point scaled by t0\\r\\n\\t\\t\\treturn this.at( t0, optionalTarget );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tintersectsSphere: function ( sphere ) {\\r\\n\\r\\n\\t\\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceToPlane: function ( plane ) {\\r\\n\\r\\n\\t\\tvar denominator = plane.normal.dot( this.direction );\\r\\n\\r\\n\\t\\tif ( denominator === 0 ) {\\r\\n\\r\\n\\t\\t\\t// line is coplanar, return origin\\r\\n\\t\\t\\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\treturn 0;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Null is preferable to undefined since undefined means.... it is undefined\\r\\n\\r\\n\\t\\t\\treturn null;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\\r\\n\\r\\n\\t\\t// Return if the ray never intersects the plane\\r\\n\\r\\n\\t\\treturn t >= 0 ? t :  null;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectPlane: function ( plane, optionalTarget ) {\\r\\n\\r\\n\\t\\tvar t = this.distanceToPlane( plane );\\r\\n\\r\\n\\t\\tif ( t === null ) {\\r\\n\\r\\n\\t\\t\\treturn null;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.at( t, optionalTarget );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\r\\n\\r\\n\\tintersectsPlane: function ( plane ) {\\r\\n\\r\\n\\t\\t// check if the ray lies on the plane first\\r\\n\\r\\n\\t\\tvar distToPoint = plane.distanceToPoint( this.origin );\\r\\n\\r\\n\\t\\tif ( distToPoint === 0 ) {\\r\\n\\r\\n\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar denominator = plane.normal.dot( this.direction );\\r\\n\\r\\n\\t\\tif ( denominator * distToPoint < 0 ) {\\r\\n\\r\\n\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// ray origin is behind the plane (and is pointing behind it)\\r\\n\\r\\n\\t\\treturn false;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectBox: function ( box, optionalTarget ) {\\r\\n\\r\\n\\t\\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\\r\\n\\r\\n\\t\\tvar invdirx = 1 / this.direction.x,\\r\\n\\t\\t\\tinvdiry = 1 / this.direction.y,\\r\\n\\t\\t\\tinvdirz = 1 / this.direction.z;\\r\\n\\r\\n\\t\\tvar origin = this.origin;\\r\\n\\r\\n\\t\\tif ( invdirx >= 0 ) {\\r\\n\\r\\n\\t\\t\\ttmin = ( box.min.x - origin.x ) * invdirx;\\r\\n\\t\\t\\ttmax = ( box.max.x - origin.x ) * invdirx;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\ttmin = ( box.max.x - origin.x ) * invdirx;\\r\\n\\t\\t\\ttmax = ( box.min.x - origin.x ) * invdirx;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( invdiry >= 0 ) {\\r\\n\\r\\n\\t\\t\\ttymin = ( box.min.y - origin.y ) * invdiry;\\r\\n\\t\\t\\ttymax = ( box.max.y - origin.y ) * invdiry;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\ttymin = ( box.max.y - origin.y ) * invdiry;\\r\\n\\t\\t\\ttymax = ( box.min.y - origin.y ) * invdiry;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\\r\\n\\r\\n\\t\\t// These lines also handle the case where tmin or tmax is NaN\\r\\n\\t\\t// (result of 0 * Infinity). x !== x returns true if x is NaN\\r\\n\\r\\n\\t\\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\\r\\n\\r\\n\\t\\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\\r\\n\\r\\n\\t\\tif ( invdirz >= 0 ) {\\r\\n\\r\\n\\t\\t\\ttzmin = ( box.min.z - origin.z ) * invdirz;\\r\\n\\t\\t\\ttzmax = ( box.max.z - origin.z ) * invdirz;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\ttzmin = ( box.max.z - origin.z ) * invdirz;\\r\\n\\t\\t\\ttzmax = ( box.min.z - origin.z ) * invdirz;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\\r\\n\\r\\n\\t\\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\\r\\n\\r\\n\\t\\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\\r\\n\\r\\n\\t\\t//return point closest to the ray (positive side)\\r\\n\\r\\n\\t\\tif ( tmax < 0 ) return null;\\r\\n\\r\\n\\t\\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectsBox: ( function () {\\r\\n\\r\\n\\t\\tvar v = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function intersectsBox( box ) {\\r\\n\\r\\n\\t\\t\\treturn this.intersectBox( box, v ) !== null;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )(),\\r\\n\\r\\n\\tintersectTriangle: function () {\\r\\n\\r\\n\\t\\t// Compute the offset origin, edges, and normal.\\r\\n\\t\\tvar diff = new THREE.Vector3();\\r\\n\\t\\tvar edge1 = new THREE.Vector3();\\r\\n\\t\\tvar edge2 = new THREE.Vector3();\\r\\n\\t\\tvar normal = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\\r\\n\\r\\n\\t\\t\\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\\r\\n\\r\\n\\t\\t\\tedge1.subVectors( b, a );\\r\\n\\t\\t\\tedge2.subVectors( c, a );\\r\\n\\t\\t\\tnormal.crossVectors( edge1, edge2 );\\r\\n\\r\\n\\t\\t\\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\\r\\n\\t\\t\\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\\r\\n\\t\\t\\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\\r\\n\\t\\t\\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\\r\\n\\t\\t\\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\\r\\n\\t\\t\\tvar DdN = this.direction.dot( normal );\\r\\n\\t\\t\\tvar sign;\\r\\n\\r\\n\\t\\t\\tif ( DdN > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( backfaceCulling ) return null;\\r\\n\\t\\t\\t\\tsign = 1;\\r\\n\\r\\n\\t\\t\\t} else if ( DdN < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tsign = - 1;\\r\\n\\t\\t\\t\\tDdN = - DdN;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\treturn null;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tdiff.subVectors( this.origin, a );\\r\\n\\t\\t\\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\\r\\n\\r\\n\\t\\t\\t// b1 < 0, no intersection\\r\\n\\t\\t\\tif ( DdQxE2 < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\treturn null;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\\r\\n\\r\\n\\t\\t\\t// b2 < 0, no intersection\\r\\n\\t\\t\\tif ( DdE1xQ < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\treturn null;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// b1+b2 > 1, no intersection\\r\\n\\t\\t\\tif ( DdQxE2 + DdE1xQ > DdN ) {\\r\\n\\r\\n\\t\\t\\t\\treturn null;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Line intersects triangle, check if ray does.\\r\\n\\t\\t\\tvar QdN = - sign * diff.dot( normal );\\r\\n\\r\\n\\t\\t\\t// t < 0, no intersection\\r\\n\\t\\t\\tif ( QdN < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\treturn null;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Ray intersects triangle.\\r\\n\\t\\t\\treturn this.at( QdN / DdN, optionalTarget );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tapplyMatrix4: function ( matrix4 ) {\\r\\n\\r\\n\\t\\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\\r\\n\\t\\tthis.origin.applyMatrix4( matrix4 );\\r\\n\\t\\tthis.direction.sub( this.origin );\\r\\n\\t\\tthis.direction.normalize();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tequals: function ( ray ) {\\r\\n\\r\\n\\t\\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Sphere.js\\r\\n\\r\\n/**\\r\\n * @author bhouston / http://clara.io\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.Sphere = function ( center, radius ) {\\r\\n\\r\\n\\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\\r\\n\\tthis.radius = ( radius !== undefined ) ? radius : 0;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Sphere.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Sphere,\\r\\n\\r\\n\\tset: function ( center, radius ) {\\r\\n\\r\\n\\t\\tthis.center.copy( center );\\r\\n\\t\\tthis.radius = radius;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromPoints: function () {\\r\\n\\r\\n\\t\\tvar box = new THREE.Box3();\\r\\n\\r\\n\\t\\treturn function setFromPoints( points, optionalCenter ) {\\r\\n\\r\\n\\t\\t\\tvar center = this.center;\\r\\n\\r\\n\\t\\t\\tif ( optionalCenter !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tcenter.copy( optionalCenter );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tbox.setFromPoints( points ).center( center );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar maxRadiusSq = 0;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.radius = Math.sqrt( maxRadiusSq );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( sphere ) {\\r\\n\\r\\n\\t\\tthis.center.copy( sphere.center );\\r\\n\\t\\tthis.radius = sphere.radius;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tempty: function () {\\r\\n\\r\\n\\t\\treturn ( this.radius <= 0 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcontainsPoint: function ( point ) {\\r\\n\\r\\n\\t\\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceToPoint: function ( point ) {\\r\\n\\r\\n\\t\\treturn ( point.distanceTo( this.center ) - this.radius );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectsSphere: function ( sphere ) {\\r\\n\\r\\n\\t\\tvar radiusSum = this.radius + sphere.radius;\\r\\n\\r\\n\\t\\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectsBox: function ( box ) {\\r\\n\\r\\n\\t\\treturn box.intersectsSphere( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectsPlane: function ( plane ) {\\r\\n\\r\\n\\t\\t// We use the following equation to compute the signed distance from\\r\\n\\t\\t// the center of the sphere to the plane.\\r\\n\\t\\t//\\r\\n\\t\\t// distance = q * n - d\\r\\n\\t\\t//\\r\\n\\t\\t// If this distance is greater than the radius of the sphere,\\r\\n\\t\\t// then there is no intersection.\\r\\n\\r\\n\\t\\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclampPoint: function ( point, optionalTarget ) {\\r\\n\\r\\n\\t\\tvar deltaLengthSq = this.center.distanceToSquared( point );\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\r\\n\\t\\tresult.copy( point );\\r\\n\\r\\n\\t\\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\\r\\n\\r\\n\\t\\t\\tresult.sub( this.center ).normalize();\\r\\n\\t\\t\\tresult.multiplyScalar( this.radius ).add( this.center );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn result;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetBoundingBox: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\tvar box = optionalTarget || new THREE.Box3();\\r\\n\\r\\n\\t\\tbox.set( this.center, this.center );\\r\\n\\t\\tbox.expandByScalar( this.radius );\\r\\n\\r\\n\\t\\treturn box;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tapplyMatrix4: function ( matrix ) {\\r\\n\\r\\n\\t\\tthis.center.applyMatrix4( matrix );\\r\\n\\t\\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttranslate: function ( offset ) {\\r\\n\\r\\n\\t\\tthis.center.add( offset );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tequals: function ( sphere ) {\\r\\n\\r\\n\\t\\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Frustum.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author bhouston / http://clara.io\\r\\n */\\r\\n\\r\\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\\r\\n\\r\\n\\tthis.planes = [\\r\\n\\r\\n\\t\\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\\r\\n\\t\\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\\r\\n\\t\\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\\r\\n\\t\\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\\r\\n\\t\\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\\r\\n\\t\\t( p5 !== undefined ) ? p5 : new THREE.Plane()\\r\\n\\r\\n\\t];\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Frustum.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Frustum,\\r\\n\\r\\n\\tset: function ( p0, p1, p2, p3, p4, p5 ) {\\r\\n\\r\\n\\t\\tvar planes = this.planes;\\r\\n\\r\\n\\t\\tplanes[ 0 ].copy( p0 );\\r\\n\\t\\tplanes[ 1 ].copy( p1 );\\r\\n\\t\\tplanes[ 2 ].copy( p2 );\\r\\n\\t\\tplanes[ 3 ].copy( p3 );\\r\\n\\t\\tplanes[ 4 ].copy( p4 );\\r\\n\\t\\tplanes[ 5 ].copy( p5 );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( frustum ) {\\r\\n\\r\\n\\t\\tvar planes = this.planes;\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n\\t\\t\\tplanes[ i ].copy( frustum.planes[ i ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromMatrix: function ( m ) {\\r\\n\\r\\n\\t\\tvar planes = this.planes;\\r\\n\\t\\tvar me = m.elements;\\r\\n\\t\\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\\r\\n\\t\\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\\r\\n\\t\\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\\r\\n\\t\\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\\r\\n\\r\\n\\t\\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\\r\\n\\t\\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\\r\\n\\t\\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\\r\\n\\t\\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\\r\\n\\t\\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\\r\\n\\t\\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectsObject: function () {\\r\\n\\r\\n\\t\\tvar sphere = new THREE.Sphere();\\r\\n\\r\\n\\t\\treturn function intersectsObject( object ) {\\r\\n\\r\\n\\t\\t\\tvar geometry = object.geometry;\\r\\n\\r\\n\\t\\t\\tif ( geometry.boundingSphere === null )\\r\\n\\t\\t\\t\\tgeometry.computeBoundingSphere();\\r\\n\\r\\n\\t\\t\\tsphere.copy( geometry.boundingSphere )\\r\\n\\t\\t\\t\\t.applyMatrix4( object.matrixWorld );\\r\\n\\r\\n\\t\\t\\treturn this.intersectsSphere( sphere );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tintersectsSprite: function () {\\r\\n\\r\\n\\t\\tvar sphere = new THREE.Sphere();\\r\\n\\r\\n\\t\\treturn function intersectsSprite( sprite ) {\\r\\n\\r\\n\\t\\t\\tsphere.center.set( 0, 0, 0 );\\r\\n\\t\\t\\tsphere.radius = 0.7071067811865476;\\r\\n\\t\\t\\tsphere.applyMatrix4( sprite.matrixWorld );\\r\\n\\r\\n\\t\\t\\treturn this.intersectsSphere( sphere );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tintersectsSphere: function ( sphere ) {\\r\\n\\r\\n\\t\\tvar planes = this.planes;\\r\\n\\t\\tvar center = sphere.center;\\r\\n\\t\\tvar negRadius = - sphere.radius;\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar distance = planes[ i ].distanceToPoint( center );\\r\\n\\r\\n\\t\\t\\tif ( distance < negRadius ) {\\r\\n\\r\\n\\t\\t\\t\\treturn false;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectsBox: function () {\\r\\n\\r\\n\\t\\tvar p1 = new THREE.Vector3(),\\r\\n\\t\\t\\tp2 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function intersectsBox( box ) {\\r\\n\\r\\n\\t\\t\\tvar planes = this.planes;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < 6 ; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar plane = planes[ i ];\\r\\n\\r\\n\\t\\t\\t\\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\\r\\n\\t\\t\\t\\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\\r\\n\\t\\t\\t\\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\\r\\n\\t\\t\\t\\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\\r\\n\\t\\t\\t\\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\\r\\n\\t\\t\\t\\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\\r\\n\\r\\n\\t\\t\\t\\tvar d1 = plane.distanceToPoint( p1 );\\r\\n\\t\\t\\t\\tvar d2 = plane.distanceToPoint( p2 );\\r\\n\\r\\n\\t\\t\\t\\t// if both outside plane, no intersection\\r\\n\\r\\n\\t\\t\\t\\tif ( d1 < 0 && d2 < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\treturn false;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\r\\n\\tcontainsPoint: function ( point ) {\\r\\n\\r\\n\\t\\tvar planes = this.planes;\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n\\t\\t\\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\treturn false;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Plane.js\\r\\n\\r\\n/**\\r\\n * @author bhouston / http://clara.io\\r\\n */\\r\\n\\r\\nTHREE.Plane = function ( normal, constant ) {\\r\\n\\r\\n\\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\\r\\n\\tthis.constant = ( constant !== undefined ) ? constant : 0;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Plane.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Plane,\\r\\n\\r\\n\\tset: function ( normal, constant ) {\\r\\n\\r\\n\\t\\tthis.normal.copy( normal );\\r\\n\\t\\tthis.constant = constant;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetComponents: function ( x, y, z, w ) {\\r\\n\\r\\n\\t\\tthis.normal.set( x, y, z );\\r\\n\\t\\tthis.constant = w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\\r\\n\\r\\n\\t\\tthis.normal.copy( normal );\\r\\n\\t\\tthis.constant = - point.dot( this.normal );\\t// must be this.normal, not normal, as this.normal is normalized\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromCoplanarPoints: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\t\\tvar v2 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function setFromCoplanarPoints( a, b, c ) {\\r\\n\\r\\n\\t\\t\\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\\r\\n\\r\\n\\t\\t\\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\\r\\n\\r\\n\\t\\t\\tthis.setFromNormalAndCoplanarPoint( normal, a );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( plane ) {\\r\\n\\r\\n\\t\\tthis.normal.copy( plane.normal );\\r\\n\\t\\tthis.constant = plane.constant;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnormalize: function () {\\r\\n\\r\\n\\t\\t// Note: will lead to a divide by zero if the plane is invalid.\\r\\n\\r\\n\\t\\tvar inverseNormalLength = 1.0 / this.normal.length();\\r\\n\\t\\tthis.normal.multiplyScalar( inverseNormalLength );\\r\\n\\t\\tthis.constant *= inverseNormalLength;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnegate: function () {\\r\\n\\r\\n\\t\\tthis.constant *= - 1;\\r\\n\\t\\tthis.normal.negate();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceToPoint: function ( point ) {\\r\\n\\r\\n\\t\\treturn this.normal.dot( point ) + this.constant;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdistanceToSphere: function ( sphere ) {\\r\\n\\r\\n\\t\\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tprojectPoint: function ( point, optionalTarget ) {\\r\\n\\r\\n\\t\\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\torthoPoint: function ( point, optionalTarget ) {\\r\\n\\r\\n\\t\\tvar perpendicularMagnitude = this.distanceToPoint( point );\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\t\\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectLine: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function intersectLine( line, optionalTarget ) {\\r\\n\\r\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\tvar direction = line.delta( v1 );\\r\\n\\r\\n\\t\\t\\tvar denominator = this.normal.dot( direction );\\r\\n\\r\\n\\t\\t\\tif ( denominator === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t// line is coplanar, return origin\\r\\n\\t\\t\\t\\tif ( this.distanceToPoint( line.start ) === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\treturn result.copy( line.start );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Unsure if this is the correct method to handle this case.\\r\\n\\t\\t\\t\\treturn undefined;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\\r\\n\\r\\n\\t\\t\\tif ( t < 0 || t > 1 ) {\\r\\n\\r\\n\\t\\t\\t\\treturn undefined;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tintersectsLine: function ( line ) {\\r\\n\\r\\n\\t\\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\\r\\n\\r\\n\\t\\tvar startSign = this.distanceToPoint( line.start );\\r\\n\\t\\tvar endSign = this.distanceToPoint( line.end );\\r\\n\\r\\n\\t\\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectsBox: function ( box ) {\\r\\n\\r\\n\\t\\treturn box.intersectsPlane( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintersectsSphere: function ( sphere ) {\\r\\n\\r\\n\\t\\treturn sphere.intersectsPlane( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcoplanarPoint: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\t\\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tapplyMatrix4: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\t\\tvar m1 = new THREE.Matrix3();\\r\\n\\r\\n\\t\\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\\r\\n\\r\\n\\t\\t\\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\\r\\n\\r\\n\\t\\t\\t// transform normal based on theory here:\\r\\n\\t\\t\\t// http://www.songho.ca/opengl/gl_normaltransform.html\\r\\n\\t\\t\\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\\r\\n\\t\\t\\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\\r\\n\\r\\n\\t\\t\\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\\r\\n\\t\\t\\tthis.constant = - referencePoint.dot( normal );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\ttranslate: function ( offset ) {\\r\\n\\r\\n\\t\\tthis.constant = this.constant - offset.dot( this.normal );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tequals: function ( plane ) {\\r\\n\\r\\n\\t\\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Spherical.js\\r\\n\\r\\n/**\\r\\n * @author bhouston / http://clara.io\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n *\\r\\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\\r\\n *\\r\\n * The poles (phi) are at the positive and negative y axis.\\r\\n * The equator starts at positive z.\\r\\n */\\r\\n\\r\\nTHREE.Spherical = function ( radius, phi, theta ) {\\r\\n\\r\\n\\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\\r\\n\\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\\r\\n\\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Spherical.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Spherical,\\r\\n\\r\\n\\tset: function ( radius, phi, theta ) {\\r\\n\\r\\n\\t\\tthis.radius = radius;\\r\\n\\t\\tthis.phi = phi;\\r\\n\\t\\tthis.theta = theta;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( other ) {\\r\\n\\r\\n\\t\\tthis.radius.copy( other.radius );\\r\\n\\t\\tthis.phi.copy( other.phi );\\r\\n\\t\\tthis.theta.copy( other.theta );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// restrict phi to be betwee EPS and PI-EPS\\r\\n\\tmakeSafe: function() {\\r\\n\\r\\n\\t\\tvar EPS = 0.000001;\\r\\n\\t\\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromVector3: function( vec3 ) {\\r\\n\\r\\n\\t\\tthis.radius = vec3.length();\\r\\n\\r\\n\\t\\tif ( this.radius === 0 ) {\\r\\n\\r\\n\\t\\t\\tthis.theta = 0;\\r\\n\\t\\t\\tthis.phi = 0;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\\r\\n\\t\\t\\tthis.phi = Math.acos( THREE.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Math.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.Math = {\\r\\n\\r\\n\\tDEG2RAD: Math.PI / 180,\\r\\n\\tRAD2DEG: 180 / Math.PI,\\r\\n\\r\\n\\tgenerateUUID: function () {\\r\\n\\r\\n\\t\\t// http://www.broofa.com/Tools/Math.uuid.htm\\r\\n\\r\\n\\t\\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\\r\\n\\t\\tvar uuid = new Array( 36 );\\r\\n\\t\\tvar rnd = 0, r;\\r\\n\\r\\n\\t\\treturn function generateUUID() {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < 36; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tuuid[ i ] = '-';\\r\\n\\r\\n\\t\\t\\t\\t} else if ( i === 14 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tuuid[ i ] = '4';\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\\r\\n\\t\\t\\t\\t\\tr = rnd & 0xf;\\r\\n\\t\\t\\t\\t\\trnd = rnd >> 4;\\r\\n\\t\\t\\t\\t\\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn uuid.join( '' );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tclamp: function ( value, min, max ) {\\r\\n\\r\\n\\t\\treturn Math.max( min, Math.min( max, value ) );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// compute euclidian modulo of m % n\\r\\n\\t// https://en.wikipedia.org/wiki/Modulo_operation\\r\\n\\r\\n\\teuclideanModulo: function ( n, m ) {\\r\\n\\r\\n\\t\\treturn ( ( n % m ) + m ) % m;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Linear mapping from range <a1, a2> to range <b1, b2>\\r\\n\\r\\n\\tmapLinear: function ( x, a1, a2, b1, b2 ) {\\r\\n\\r\\n\\t\\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// http://en.wikipedia.org/wiki/Smoothstep\\r\\n\\r\\n\\tsmoothstep: function ( x, min, max ) {\\r\\n\\r\\n\\t\\tif ( x <= min ) return 0;\\r\\n\\t\\tif ( x >= max ) return 1;\\r\\n\\r\\n\\t\\tx = ( x - min ) / ( max - min );\\r\\n\\r\\n\\t\\treturn x * x * ( 3 - 2 * x );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsmootherstep: function ( x, min, max ) {\\r\\n\\r\\n\\t\\tif ( x <= min ) return 0;\\r\\n\\t\\tif ( x >= max ) return 1;\\r\\n\\r\\n\\t\\tx = ( x - min ) / ( max - min );\\r\\n\\r\\n\\t\\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\trandom16: function () {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\\r\\n\\t\\treturn Math.random();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Random integer from <low, high> interval\\r\\n\\r\\n\\trandInt: function ( low, high ) {\\r\\n\\r\\n\\t\\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Random float from <low, high> interval\\r\\n\\r\\n\\trandFloat: function ( low, high ) {\\r\\n\\r\\n\\t\\treturn low + Math.random() * ( high - low );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Random float from <-range/2, range/2> interval\\r\\n\\r\\n\\trandFloatSpread: function ( range ) {\\r\\n\\r\\n\\t\\treturn range * ( 0.5 - Math.random() );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdegToRad: function ( degrees ) {\\r\\n\\r\\n\\t\\treturn degrees * THREE.Math.DEG2RAD;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tradToDeg: function ( radians ) {\\r\\n\\r\\n\\t\\treturn radians * THREE.Math.RAD2DEG;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tisPowerOfTwo: function ( value ) {\\r\\n\\r\\n\\t\\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnearestPowerOfTwo: function ( value ) {\\r\\n\\r\\n\\t\\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnextPowerOfTwo: function ( value ) {\\r\\n\\r\\n\\t\\tvalue --;\\r\\n\\t\\tvalue |= value >> 1;\\r\\n\\t\\tvalue |= value >> 2;\\r\\n\\t\\tvalue |= value >> 4;\\r\\n\\t\\tvalue |= value >> 8;\\r\\n\\t\\tvalue |= value >> 16;\\r\\n\\t\\tvalue ++;\\r\\n\\r\\n\\t\\treturn value;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Spline.js\\r\\n\\r\\n/**\\r\\n * Spline from Tween.js, slightly optimized (and trashed)\\r\\n * http://sole.github.com/tween.js/examples/05_spline.html\\r\\n *\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.Spline = function ( points ) {\\r\\n\\r\\n\\tthis.points = points;\\r\\n\\r\\n\\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\\r\\n\\tpoint, intPoint, weight, w2, w3,\\r\\n\\tpa, pb, pc, pd;\\r\\n\\r\\n\\tthis.initFromArray = function ( a ) {\\r\\n\\r\\n\\t\\tthis.points = [];\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < a.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.getPoint = function ( k ) {\\r\\n\\r\\n\\t\\tpoint = ( this.points.length - 1 ) * k;\\r\\n\\t\\tintPoint = Math.floor( point );\\r\\n\\t\\tweight = point - intPoint;\\r\\n\\r\\n\\t\\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\\r\\n\\t\\tc[ 1 ] = intPoint;\\r\\n\\t\\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\\r\\n\\t\\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\\r\\n\\r\\n\\t\\tpa = this.points[ c[ 0 ] ];\\r\\n\\t\\tpb = this.points[ c[ 1 ] ];\\r\\n\\t\\tpc = this.points[ c[ 2 ] ];\\r\\n\\t\\tpd = this.points[ c[ 3 ] ];\\r\\n\\r\\n\\t\\tw2 = weight * weight;\\r\\n\\t\\tw3 = weight * w2;\\r\\n\\r\\n\\t\\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\\r\\n\\t\\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\\r\\n\\t\\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\\r\\n\\r\\n\\t\\treturn v3;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.getControlPointsArray = function () {\\r\\n\\r\\n\\t\\tvar i, p, l = this.points.length,\\r\\n\\t\\t\\tcoords = [];\\r\\n\\r\\n\\t\\tfor ( i = 0; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tp = this.points[ i ];\\r\\n\\t\\t\\tcoords[ i ] = [ p.x, p.y, p.z ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn coords;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// approximate length by summing linear segments\\r\\n\\r\\n\\tthis.getLength = function ( nSubDivisions ) {\\r\\n\\r\\n\\t\\tvar i, index, nSamples, position,\\r\\n\\t\\t\\tpoint = 0, intPoint = 0, oldIntPoint = 0,\\r\\n\\t\\t\\toldPosition = new THREE.Vector3(),\\r\\n\\t\\t\\ttmpVec = new THREE.Vector3(),\\r\\n\\t\\t\\tchunkLengths = [],\\r\\n\\t\\t\\ttotalLength = 0;\\r\\n\\r\\n\\t\\t// first point has 0 length\\r\\n\\r\\n\\t\\tchunkLengths[ 0 ] = 0;\\r\\n\\r\\n\\t\\tif ( ! nSubDivisions ) nSubDivisions = 100;\\r\\n\\r\\n\\t\\tnSamples = this.points.length * nSubDivisions;\\r\\n\\r\\n\\t\\toldPosition.copy( this.points[ 0 ] );\\r\\n\\r\\n\\t\\tfor ( i = 1; i < nSamples; i ++ ) {\\r\\n\\r\\n\\t\\t\\tindex = i / nSamples;\\r\\n\\r\\n\\t\\t\\tposition = this.getPoint( index );\\r\\n\\t\\t\\ttmpVec.copy( position );\\r\\n\\r\\n\\t\\t\\ttotalLength += tmpVec.distanceTo( oldPosition );\\r\\n\\r\\n\\t\\t\\toldPosition.copy( position );\\r\\n\\r\\n\\t\\t\\tpoint = ( this.points.length - 1 ) * index;\\r\\n\\t\\t\\tintPoint = Math.floor( point );\\r\\n\\r\\n\\t\\t\\tif ( intPoint !== oldIntPoint ) {\\r\\n\\r\\n\\t\\t\\t\\tchunkLengths[ intPoint ] = totalLength;\\r\\n\\t\\t\\t\\toldIntPoint = intPoint;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// last point ends with total length\\r\\n\\r\\n\\t\\tchunkLengths[ chunkLengths.length ] = totalLength;\\r\\n\\r\\n\\t\\treturn { chunks: chunkLengths, total: totalLength };\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\\r\\n\\r\\n\\t\\tvar i, j,\\r\\n\\t\\t\\tindex, indexCurrent, indexNext,\\r\\n\\t\\t\\trealDistance,\\r\\n\\t\\t\\tsampling, position,\\r\\n\\t\\t\\tnewpoints = [],\\r\\n\\t\\t\\ttmpVec = new THREE.Vector3(),\\r\\n\\t\\t\\tsl = this.getLength();\\r\\n\\r\\n\\t\\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\\r\\n\\r\\n\\t\\tfor ( i = 1; i < this.points.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t//tmpVec.copy( this.points[ i - 1 ] );\\r\\n\\t\\t\\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\\r\\n\\r\\n\\t\\t\\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\\r\\n\\r\\n\\t\\t\\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\\r\\n\\r\\n\\t\\t\\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\\r\\n\\t\\t\\tindexNext = i / ( this.points.length - 1 );\\r\\n\\r\\n\\t\\t\\tfor ( j = 1; j < sampling - 1; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\\r\\n\\r\\n\\t\\t\\t\\tposition = this.getPoint( index );\\r\\n\\t\\t\\t\\tnewpoints.push( tmpVec.copy( position ).clone() );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.points = newpoints;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// Catmull-Rom\\r\\n\\r\\n\\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\\r\\n\\r\\n\\t\\tvar v0 = ( p2 - p0 ) * 0.5,\\r\\n\\t\\t\\tv1 = ( p3 - p1 ) * 0.5;\\r\\n\\r\\n\\t\\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Triangle.js\\r\\n\\r\\n/**\\r\\n * @author bhouston / http://clara.io\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.Triangle = function ( a, b, c ) {\\r\\n\\r\\n\\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\\r\\n\\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\\r\\n\\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Triangle.normal = function () {\\r\\n\\r\\n\\tvar v0 = new THREE.Vector3();\\r\\n\\r\\n\\treturn function normal( a, b, c, optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\r\\n\\t\\tresult.subVectors( c, b );\\r\\n\\t\\tv0.subVectors( a, b );\\r\\n\\t\\tresult.cross( v0 );\\r\\n\\r\\n\\t\\tvar resultLengthSq = result.lengthSq();\\r\\n\\t\\tif ( resultLengthSq > 0 ) {\\r\\n\\r\\n\\t\\t\\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn result.set( 0, 0, 0 );\\r\\n\\r\\n\\t};\\r\\n\\r\\n}();\\r\\n\\r\\n// static/instance method to calculate barycentric coordinates\\r\\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\\r\\nTHREE.Triangle.barycoordFromPoint = function () {\\r\\n\\r\\n\\tvar v0 = new THREE.Vector3();\\r\\n\\tvar v1 = new THREE.Vector3();\\r\\n\\tvar v2 = new THREE.Vector3();\\r\\n\\r\\n\\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\\r\\n\\r\\n\\t\\tv0.subVectors( c, a );\\r\\n\\t\\tv1.subVectors( b, a );\\r\\n\\t\\tv2.subVectors( point, a );\\r\\n\\r\\n\\t\\tvar dot00 = v0.dot( v0 );\\r\\n\\t\\tvar dot01 = v0.dot( v1 );\\r\\n\\t\\tvar dot02 = v0.dot( v2 );\\r\\n\\t\\tvar dot11 = v1.dot( v1 );\\r\\n\\t\\tvar dot12 = v1.dot( v2 );\\r\\n\\r\\n\\t\\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\r\\n\\t\\t// collinear or singular triangle\\r\\n\\t\\tif ( denom === 0 ) {\\r\\n\\r\\n\\t\\t\\t// arbitrary location outside of triangle?\\r\\n\\t\\t\\t// not sure if this is the best idea, maybe should be returning undefined\\r\\n\\t\\t\\treturn result.set( - 2, - 1, - 1 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar invDenom = 1 / denom;\\r\\n\\t\\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\\r\\n\\t\\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\\r\\n\\r\\n\\t\\t// barycentric coordinates must always sum to 1\\r\\n\\t\\treturn result.set( 1 - u - v, v, u );\\r\\n\\r\\n\\t};\\r\\n\\r\\n}();\\r\\n\\r\\nTHREE.Triangle.containsPoint = function () {\\r\\n\\r\\n\\tvar v1 = new THREE.Vector3();\\r\\n\\r\\n\\treturn function containsPoint( point, a, b, c ) {\\r\\n\\r\\n\\t\\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\\r\\n\\r\\n\\t\\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\\r\\n\\r\\n\\t};\\r\\n\\r\\n}();\\r\\n\\r\\nTHREE.Triangle.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Triangle,\\r\\n\\r\\n\\tset: function ( a, b, c ) {\\r\\n\\r\\n\\t\\tthis.a.copy( a );\\r\\n\\t\\tthis.b.copy( b );\\r\\n\\t\\tthis.c.copy( c );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\\r\\n\\r\\n\\t\\tthis.a.copy( points[ i0 ] );\\r\\n\\t\\tthis.b.copy( points[ i1 ] );\\r\\n\\t\\tthis.c.copy( points[ i2 ] );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( triangle ) {\\r\\n\\r\\n\\t\\tthis.a.copy( triangle.a );\\r\\n\\t\\tthis.b.copy( triangle.b );\\r\\n\\t\\tthis.c.copy( triangle.c );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tarea: function () {\\r\\n\\r\\n\\t\\tvar v0 = new THREE.Vector3();\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function area() {\\r\\n\\r\\n\\t\\t\\tv0.subVectors( this.c, this.b );\\r\\n\\t\\t\\tv1.subVectors( this.a, this.b );\\r\\n\\r\\n\\t\\t\\treturn v0.cross( v1 ).length() * 0.5;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tmidpoint: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\t\\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnormal: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tplane: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Plane();\\r\\n\\r\\n\\t\\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tbarycoordFromPoint: function ( point, optionalTarget ) {\\r\\n\\r\\n\\t\\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcontainsPoint: function ( point ) {\\r\\n\\r\\n\\t\\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclosestPointToPoint: function () {\\r\\n\\r\\n\\t\\tvar plane, edgeList, projectedPoint, closestPoint;\\r\\n\\r\\n\\t\\treturn function closestPointToPoint( point, optionalTarget ) {\\r\\n\\r\\n\\t\\t\\tif ( plane === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tplane = new THREE.Plane();\\r\\n\\t\\t\\t\\tedgeList = [ new THREE.Line3(), new THREE.Line3(), new THREE.Line3() ];\\r\\n\\t\\t\\t\\tprojectedPoint = new THREE.Vector3();\\r\\n\\t\\t\\t\\tclosestPoint = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\t\\t\\tvar minDistance = Infinity;\\r\\n\\r\\n\\t\\t\\t// project the point onto the plane of the triangle\\r\\n\\r\\n\\t\\t\\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\\r\\n\\t\\t\\tplane.projectPoint( point, projectedPoint );\\r\\n\\r\\n\\t\\t\\t// check if the projection lies within the triangle\\r\\n\\r\\n\\t\\t\\tif( this.containsPoint( projectedPoint ) === true ) {\\r\\n\\r\\n\\t\\t\\t\\t// if so, this is the closest point\\r\\n\\r\\n\\t\\t\\t\\tresult.copy( projectedPoint );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\\r\\n\\r\\n\\t\\t\\t\\tedgeList[ 0 ].set( this.a, this.b );\\r\\n\\t\\t\\t\\tedgeList[ 1 ].set( this.b, this.c );\\r\\n\\t\\t\\t\\tedgeList[ 2 ].set( this.c, this.a );\\r\\n\\r\\n\\t\\t\\t\\tfor( var i = 0; i < edgeList.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\\r\\n\\r\\n\\t\\t\\t\\t\\tvar distance = projectedPoint.distanceToSquared( closestPoint );\\r\\n\\r\\n\\t\\t\\t\\t\\tif( distance < minDistance ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tminDistance = distance;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tresult.copy( closestPoint );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn result;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tequals: function ( triangle ) {\\r\\n\\r\\n\\t\\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/math/Interpolant.js\\r\\n\\r\\n/**\\r\\n * Abstract base class of interpolants over parametric samples.\\r\\n *\\r\\n * The parameter domain is one dimensional, typically the time or a path\\r\\n * along a curve defined by the data.\\r\\n *\\r\\n * The sample values can have any dimensionality and derived classes may\\r\\n * apply special interpretations to the data.\\r\\n *\\r\\n * This class provides the interval seek in a Template Method, deferring\\r\\n * the actual interpolation to derived classes.\\r\\n *\\r\\n * Time complexity is O(1) for linear access crossing at most two points\\r\\n * and O(log N) for random access, where N is the number of positions.\\r\\n *\\r\\n * References:\\r\\n *\\r\\n * \\t\\thttp://www.oodesign.com/template-method-pattern.html\\r\\n *\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.Interpolant = function(\\r\\n\\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\r\\n\\r\\n\\tthis.parameterPositions = parameterPositions;\\r\\n\\tthis._cachedIndex = 0;\\r\\n\\r\\n\\tthis.resultBuffer = resultBuffer !== undefined ?\\r\\n\\t\\t\\tresultBuffer : new sampleValues.constructor( sampleSize );\\r\\n\\tthis.sampleValues = sampleValues;\\r\\n\\tthis.valueSize = sampleSize;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Interpolant.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Interpolant,\\r\\n\\r\\n\\tevaluate: function( t ) {\\r\\n\\r\\n\\t\\tvar pp = this.parameterPositions,\\r\\n\\t\\t\\ti1 = this._cachedIndex,\\r\\n\\r\\n\\t\\t\\tt1 = pp[   i1   ],\\r\\n\\t\\t\\tt0 = pp[ i1 - 1 ];\\r\\n\\r\\n\\t\\tvalidate_interval: {\\r\\n\\r\\n\\t\\t\\tseek: {\\r\\n\\r\\n\\t\\t\\t\\tvar right;\\r\\n\\r\\n\\t\\t\\t\\tlinear_scan: {\\r\\n//- See http://jsperf.com/comparison-to-undefined/3\\r\\n//- slower code:\\r\\n//-\\r\\n//- \\t\\t\\t\\tif ( t >= t1 || t1 === undefined ) {\\r\\n\\t\\t\\t\\t\\tforward_scan: if ( ! ( t < t1 ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( var giveUpAt = i1 + 2; ;) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( t1 === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( t < t0 ) break forward_scan;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// after end\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ti1 = pp.length;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tthis._cachedIndex = i1;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\treturn this.afterEnd_( i1 - 1, t, t0 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( i1 === giveUpAt ) break; // this loop\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tt0 = t1;\\r\\n\\t\\t\\t\\t\\t\\t\\tt1 = pp[ ++ i1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( t < t1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// we have arrived at the sought interval\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak seek;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// prepare binary search on the right side of the index\\r\\n\\t\\t\\t\\t\\t\\tright = pp.length;\\r\\n\\t\\t\\t\\t\\t\\tbreak linear_scan;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n//- slower code:\\r\\n//-\\t\\t\\t\\t\\tif ( t < t0 || t0 === undefined ) {\\r\\n\\t\\t\\t\\t\\tif ( ! ( t >= t0 ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// looping?\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar t1global = pp[ 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( t < t1global ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\ti1 = 2; // + 1, using the scan for the details\\r\\n\\t\\t\\t\\t\\t\\t\\tt0 = t1global;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// linear reverse scan\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( var giveUpAt = i1 - 2; ;) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( t0 === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// before start\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tthis._cachedIndex = 0;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\treturn this.beforeStart_( 0, t, t1 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( i1 === giveUpAt ) break; // this loop\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tt1 = t0;\\r\\n\\t\\t\\t\\t\\t\\t\\tt0 = pp[ -- i1 - 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( t >= t0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// we have arrived at the sought interval\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak seek;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// prepare binary search on the left side of the index\\r\\n\\t\\t\\t\\t\\t\\tright = i1;\\r\\n\\t\\t\\t\\t\\t\\ti1 = 0;\\r\\n\\t\\t\\t\\t\\t\\tbreak linear_scan;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// the interval is valid\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak validate_interval;\\r\\n\\r\\n\\t\\t\\t\\t} // linear scan\\r\\n\\r\\n\\t\\t\\t\\t// binary search\\r\\n\\r\\n\\t\\t\\t\\twhile ( i1 < right ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar mid = ( i1 + right ) >>> 1;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( t < pp[ mid ] ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tright = mid;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ti1 = mid + 1;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tt1 = pp[   i1   ];\\r\\n\\t\\t\\t\\tt0 = pp[ i1 - 1 ];\\r\\n\\r\\n\\t\\t\\t\\t// check boundary cases, again\\r\\n\\r\\n\\t\\t\\t\\tif ( t0 === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tthis._cachedIndex = 0;\\r\\n\\t\\t\\t\\t\\treturn this.beforeStart_( 0, t, t1 );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( t1 === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ti1 = pp.length;\\r\\n\\t\\t\\t\\t\\tthis._cachedIndex = i1;\\r\\n\\t\\t\\t\\t\\treturn this.afterEnd_( i1 - 1, t0, t );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} // seek\\r\\n\\r\\n\\t\\t\\tthis._cachedIndex = i1;\\r\\n\\r\\n\\t\\t\\tthis.intervalChanged_( i1, t0, t1 );\\r\\n\\r\\n\\t\\t} // validate_interval\\r\\n\\r\\n\\t\\treturn this.interpolate_( i1, t0, t, t1 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsettings: null, // optional, subclass-specific settings structure\\r\\n\\t// Note: The indirection allows central control of many interpolants.\\r\\n\\r\\n\\t// --- Protected interface\\r\\n\\r\\n\\tDefaultSettings_: {},\\r\\n\\r\\n\\tgetSettings_: function() {\\r\\n\\r\\n\\t\\treturn this.settings || this.DefaultSettings_;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopySampleValue_: function( index ) {\\r\\n\\r\\n\\t\\t// copies a sample value to the result buffer\\r\\n\\r\\n\\t\\tvar result = this.resultBuffer,\\r\\n\\t\\t\\tvalues = this.sampleValues,\\r\\n\\t\\t\\tstride = this.valueSize,\\r\\n\\t\\t\\toffset = index * stride;\\r\\n\\r\\n\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\r\\n\\r\\n\\t\\t\\tresult[ i ] = values[ offset + i ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn result;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Template methods for derived classes:\\r\\n\\r\\n\\tinterpolate_: function( i1, t0, t, t1 ) {\\r\\n\\r\\n\\t\\tthrow new Error( \\\"call to abstract method\\\" );\\r\\n\\t\\t// implementations shall return this.resultBuffer\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintervalChanged_: function( i1, t0, t1 ) {\\r\\n\\r\\n\\t\\t// empty\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.Interpolant.prototype, {\\r\\n\\r\\n\\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\\r\\n\\t\\tTHREE.Interpolant.prototype.copySampleValue_,\\r\\n\\r\\n\\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\\r\\n\\t\\tTHREE.Interpolant.prototype.copySampleValue_\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/math/interpolants/CubicInterpolant.js\\r\\n\\r\\n/**\\r\\n * Fast and simple cubic spline interpolant.\\r\\n *\\r\\n * It was derived from a Hermitian construction setting the first derivative\\r\\n * at each sample position to the linear slope between neighboring positions\\r\\n * over their parameter interval.\\r\\n *\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.CubicInterpolant = function(\\r\\n\\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\r\\n\\r\\n\\tTHREE.Interpolant.call(\\r\\n\\t\\t\\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\\r\\n\\r\\n\\tthis._weightPrev = -0;\\r\\n\\tthis._offsetPrev = -0;\\r\\n\\tthis._weightNext = -0;\\r\\n\\tthis._offsetNext = -0;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CubicInterpolant.prototype =\\r\\n\\t\\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.CubicInterpolant,\\r\\n\\r\\n\\tDefaultSettings_: {\\r\\n\\r\\n\\t\\tendingStart: \\tTHREE.ZeroCurvatureEnding,\\r\\n\\t\\tendingEnd:\\t\\tTHREE.ZeroCurvatureEnding\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tintervalChanged_: function( i1, t0, t1 ) {\\r\\n\\r\\n\\t\\tvar pp = this.parameterPositions,\\r\\n\\t\\t\\tiPrev = i1 - 2,\\r\\n\\t\\t\\tiNext = i1 + 1,\\r\\n\\r\\n\\t\\t\\ttPrev = pp[ iPrev ],\\r\\n\\t\\t\\ttNext = pp[ iNext ];\\r\\n\\r\\n\\t\\tif ( tPrev === undefined ) {\\r\\n\\r\\n\\t\\t\\tswitch ( this.getSettings_().endingStart ) {\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.ZeroSlopeEnding:\\r\\n\\r\\n\\t\\t\\t\\t\\t// f'(t0) = 0\\r\\n\\t\\t\\t\\t\\tiPrev = i1;\\r\\n\\t\\t\\t\\t\\ttPrev = 2 * t0 - t1;\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.WrapAroundEnding:\\r\\n\\r\\n\\t\\t\\t\\t\\t// use the other end of the curve\\r\\n\\t\\t\\t\\t\\tiPrev = pp.length - 2;\\r\\n\\t\\t\\t\\t\\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tdefault: // ZeroCurvatureEnding\\r\\n\\r\\n\\t\\t\\t\\t\\t// f''(t0) = 0 a.k.a. Natural Spline\\r\\n\\t\\t\\t\\t\\tiPrev = i1;\\r\\n\\t\\t\\t\\t\\ttPrev = t1;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( tNext === undefined ) {\\r\\n\\r\\n\\t\\t\\tswitch ( this.getSettings_().endingEnd ) {\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.ZeroSlopeEnding:\\r\\n\\r\\n\\t\\t\\t\\t\\t// f'(tN) = 0\\r\\n\\t\\t\\t\\t\\tiNext = i1;\\r\\n\\t\\t\\t\\t\\ttNext = 2 * t1 - t0;\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.WrapAroundEnding:\\r\\n\\r\\n\\t\\t\\t\\t\\t// use the other end of the curve\\r\\n\\t\\t\\t\\t\\tiNext = 1;\\r\\n\\t\\t\\t\\t\\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tdefault: // ZeroCurvatureEnding\\r\\n\\r\\n\\t\\t\\t\\t\\t// f''(tN) = 0, a.k.a. Natural Spline\\r\\n\\t\\t\\t\\t\\tiNext = i1 - 1;\\r\\n\\t\\t\\t\\t\\ttNext = t0;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar halfDt = ( t1 - t0 ) * 0.5,\\r\\n\\t\\t\\tstride = this.valueSize;\\r\\n\\r\\n\\t\\tthis._weightPrev = halfDt / ( t0 - tPrev );\\r\\n\\t\\tthis._weightNext = halfDt / ( tNext - t1 );\\r\\n\\t\\tthis._offsetPrev = iPrev * stride;\\r\\n\\t\\tthis._offsetNext = iNext * stride;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tinterpolate_: function( i1, t0, t, t1 ) {\\r\\n\\r\\n\\t\\tvar result = this.resultBuffer,\\r\\n\\t\\t\\tvalues = this.sampleValues,\\r\\n\\t\\t\\tstride = this.valueSize,\\r\\n\\r\\n\\t\\t\\to1 = i1 * stride,\\t\\to0 = o1 - stride,\\r\\n\\t\\t\\toP = this._offsetPrev, \\toN = this._offsetNext,\\r\\n\\t\\t\\twP = this._weightPrev,\\twN = this._weightNext,\\r\\n\\r\\n\\t\\t\\tp = ( t - t0 ) / ( t1 - t0 ),\\r\\n\\t\\t\\tpp = p * p,\\r\\n\\t\\t\\tppp = pp * p;\\r\\n\\r\\n\\t\\t// evaluate polynomials\\r\\n\\r\\n\\t\\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\\r\\n\\t\\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\\r\\n\\t\\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\\r\\n\\t\\tvar sN =       wN   * ppp   -           wN      * pp;\\r\\n\\r\\n\\t\\t// combine data linearly\\r\\n\\r\\n\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\r\\n\\r\\n\\t\\t\\tresult[ i ] =\\r\\n\\t\\t\\t\\t\\tsP * values[ oP + i ] +\\r\\n\\t\\t\\t\\t\\ts0 * values[ o0 + i ] +\\r\\n\\t\\t\\t\\t\\ts1 * values[ o1 + i ] +\\r\\n\\t\\t\\t\\t\\tsN * values[ oN + i ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn result;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/math/interpolants/DiscreteInterpolant.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * Interpolant that evaluates to the sample value at the position preceeding\\r\\n * the parameter.\\r\\n *\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.DiscreteInterpolant = function(\\r\\n\\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\r\\n\\r\\n\\tTHREE.Interpolant.call(\\r\\n\\t\\t\\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.DiscreteInterpolant.prototype =\\r\\n\\t\\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.DiscreteInterpolant,\\r\\n\\r\\n\\tinterpolate_: function( i1, t0, t, t1 ) {\\r\\n\\r\\n\\t\\treturn this.copySampleValue_( i1 - 1 );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/math/interpolants/LinearInterpolant.js\\r\\n\\r\\n/**\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.LinearInterpolant = function(\\r\\n\\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\r\\n\\r\\n\\tTHREE.Interpolant.call(\\r\\n\\t\\t\\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.LinearInterpolant.prototype =\\r\\n\\t\\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.LinearInterpolant,\\r\\n\\r\\n\\tinterpolate_: function( i1, t0, t, t1 ) {\\r\\n\\r\\n\\t\\tvar result = this.resultBuffer,\\r\\n\\t\\t\\tvalues = this.sampleValues,\\r\\n\\t\\t\\tstride = this.valueSize,\\r\\n\\r\\n\\t\\t\\toffset1 = i1 * stride,\\r\\n\\t\\t\\toffset0 = offset1 - stride,\\r\\n\\r\\n\\t\\t\\tweight1 = ( t - t0 ) / ( t1 - t0 ),\\r\\n\\t\\t\\tweight0 = 1 - weight1;\\r\\n\\r\\n\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\r\\n\\r\\n\\t\\t\\tresult[ i ] =\\r\\n\\t\\t\\t\\t\\tvalues[ offset0 + i ] * weight0 +\\r\\n\\t\\t\\t\\t\\tvalues[ offset1 + i ] * weight1;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn result;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/math/interpolants/QuaternionLinearInterpolant.js\\r\\n\\r\\n/**\\r\\n * Spherical linear unit quaternion interpolant.\\r\\n *\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.QuaternionLinearInterpolant = function(\\r\\n\\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\r\\n\\r\\n\\tTHREE.Interpolant.call(\\r\\n\\t\\t\\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.QuaternionLinearInterpolant.prototype =\\r\\n\\t\\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.QuaternionLinearInterpolant,\\r\\n\\r\\n\\tinterpolate_: function( i1, t0, t, t1 ) {\\r\\n\\r\\n\\t\\tvar result = this.resultBuffer,\\r\\n\\t\\t\\tvalues = this.sampleValues,\\r\\n\\t\\t\\tstride = this.valueSize,\\r\\n\\r\\n\\t\\t\\toffset = i1 * stride,\\r\\n\\r\\n\\t\\t\\talpha = ( t - t0 ) / ( t1 - t0 );\\r\\n\\r\\n\\t\\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\\r\\n\\r\\n\\t\\t\\tTHREE.Quaternion.slerpFlat( result, 0,\\r\\n\\t\\t\\t\\t\\tvalues, offset - stride, values, offset, alpha );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn result;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/core/Clock.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.Clock = function ( autoStart ) {\\r\\n\\r\\n\\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\\r\\n\\r\\n\\tthis.startTime = 0;\\r\\n\\tthis.oldTime = 0;\\r\\n\\tthis.elapsedTime = 0;\\r\\n\\r\\n\\tthis.running = false;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Clock.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Clock,\\r\\n\\r\\n\\tstart: function () {\\r\\n\\r\\n\\t\\tthis.startTime = ( performance || Date ).now();\\r\\n\\r\\n\\t\\tthis.oldTime = this.startTime;\\r\\n\\t\\tthis.running = true;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tstop: function () {\\r\\n\\r\\n\\t\\tthis.getElapsedTime();\\r\\n\\t\\tthis.running = false;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetElapsedTime: function () {\\r\\n\\r\\n\\t\\tthis.getDelta();\\r\\n\\t\\treturn this.elapsedTime;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetDelta: function () {\\r\\n\\r\\n\\t\\tvar diff = 0;\\r\\n\\r\\n\\t\\tif ( this.autoStart && ! this.running ) {\\r\\n\\r\\n\\t\\t\\tthis.start();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.running ) {\\r\\n\\r\\n\\t\\t\\tvar newTime = ( performance || Date ).now();\\r\\n\\r\\n\\t\\t\\tdiff = ( newTime - this.oldTime ) / 1000;\\r\\n\\t\\t\\tthis.oldTime = newTime;\\r\\n\\r\\n\\t\\t\\tthis.elapsedTime += diff;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn diff;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/core/EventDispatcher.js\\r\\n\\r\\n/**\\r\\n * https://github.com/mrdoob/eventdispatcher.js/\\r\\n */\\r\\n\\r\\nTHREE.EventDispatcher = function () {};\\r\\n\\r\\nObject.assign( THREE.EventDispatcher.prototype, {\\r\\n\\r\\n\\taddEventListener: function ( type, listener ) {\\r\\n\\r\\n\\t\\tif ( this._listeners === undefined ) this._listeners = {};\\r\\n\\r\\n\\t\\tvar listeners = this._listeners;\\r\\n\\r\\n\\t\\tif ( listeners[ type ] === undefined ) {\\r\\n\\r\\n\\t\\t\\tlisteners[ type ] = [];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\\r\\n\\r\\n\\t\\t\\tlisteners[ type ].push( listener );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\thasEventListener: function ( type, listener ) {\\r\\n\\r\\n\\t\\tif ( this._listeners === undefined ) return false;\\r\\n\\r\\n\\t\\tvar listeners = this._listeners;\\r\\n\\r\\n\\t\\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\\r\\n\\r\\n\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn false;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tremoveEventListener: function ( type, listener ) {\\r\\n\\r\\n\\t\\tif ( this._listeners === undefined ) return;\\r\\n\\r\\n\\t\\tvar listeners = this._listeners;\\r\\n\\t\\tvar listenerArray = listeners[ type ];\\r\\n\\r\\n\\t\\tif ( listenerArray !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar index = listenerArray.indexOf( listener );\\r\\n\\r\\n\\t\\t\\tif ( index !== - 1 ) {\\r\\n\\r\\n\\t\\t\\t\\tlistenerArray.splice( index, 1 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdispatchEvent: function ( event ) {\\r\\n\\r\\n\\t\\tif ( this._listeners === undefined ) return;\\r\\n\\r\\n\\t\\tvar listeners = this._listeners;\\r\\n\\t\\tvar listenerArray = listeners[ event.type ];\\r\\n\\r\\n\\t\\tif ( listenerArray !== undefined ) {\\r\\n\\r\\n\\t\\t\\tevent.target = this;\\r\\n\\r\\n\\t\\t\\tvar array = [], i = 0;\\r\\n\\t\\t\\tvar length = listenerArray.length;\\r\\n\\r\\n\\t\\t\\tfor ( i = 0; i < length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tarray[ i ] = listenerArray[ i ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( i = 0; i < length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tarray[ i ].call( this, event );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/core/Layers.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.Layers = function () {\\r\\n\\r\\n\\tthis.mask = 1;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Layers.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Layers,\\r\\n\\r\\n\\tset: function ( channel ) {\\r\\n\\r\\n\\t\\tthis.mask = 1 << channel;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tenable: function ( channel ) {\\r\\n\\r\\n\\t\\tthis.mask |= 1 << channel;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoggle: function ( channel ) {\\r\\n\\r\\n\\t\\tthis.mask ^= 1 << channel;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdisable: function ( channel ) {\\r\\n\\r\\n\\t\\tthis.mask &= ~ ( 1 << channel );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttest: function ( layers ) {\\r\\n\\r\\n\\t\\treturn ( this.mask & layers.mask ) !== 0;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/core/Raycaster.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author bhouston / http://clara.io/\\r\\n * @author stephomi / http://stephaneginier.com/\\r\\n */\\r\\n\\r\\n( function ( THREE ) {\\r\\n\\r\\n\\tTHREE.Raycaster = function ( origin, direction, near, far ) {\\r\\n\\r\\n\\t\\tthis.ray = new THREE.Ray( origin, direction );\\r\\n\\t\\t// direction is assumed to be normalized (for accurate distance calculations)\\r\\n\\r\\n\\t\\tthis.near = near || 0;\\r\\n\\t\\tthis.far = far || Infinity;\\r\\n\\r\\n\\t\\tthis.params = {\\r\\n\\t\\t\\tMesh: {},\\r\\n\\t\\t\\tLine: {},\\r\\n\\t\\t\\tLOD: {},\\r\\n\\t\\t\\tPoints: { threshold: 1 },\\r\\n\\t\\t\\tSprite: {}\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tObject.defineProperties( this.params, {\\r\\n\\t\\t\\tPointCloud: {\\r\\n\\t\\t\\t\\tget: function () {\\r\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\\r\\n\\t\\t\\t\\t\\treturn this.Points;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tfunction ascSort( a, b ) {\\r\\n\\r\\n\\t\\treturn a.distance - b.distance;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction intersectObject( object, raycaster, intersects, recursive ) {\\r\\n\\r\\n\\t\\tif ( object.visible === false ) return;\\r\\n\\r\\n\\t\\tobject.raycast( raycaster, intersects );\\r\\n\\r\\n\\t\\tif ( recursive === true ) {\\r\\n\\r\\n\\t\\t\\tvar children = object.children;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tintersectObject( children[ i ], raycaster, intersects, true );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tTHREE.Raycaster.prototype = {\\r\\n\\r\\n\\t\\tconstructor: THREE.Raycaster,\\r\\n\\r\\n\\t\\tlinePrecision: 1,\\r\\n\\r\\n\\t\\tset: function ( origin, direction ) {\\r\\n\\r\\n\\t\\t\\t// direction is assumed to be normalized (for accurate distance calculations)\\r\\n\\r\\n\\t\\t\\tthis.ray.set( origin, direction );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tsetFromCamera: function ( coords, camera ) {\\r\\n\\r\\n\\t\\t\\tif ( camera instanceof THREE.PerspectiveCamera ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\\r\\n\\t\\t\\t\\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\\r\\n\\r\\n\\t\\t\\t} else if ( camera instanceof THREE.OrthographicCamera ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\\r\\n\\t\\t\\t\\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tintersectObject: function ( object, recursive ) {\\r\\n\\r\\n\\t\\t\\tvar intersects = [];\\r\\n\\r\\n\\t\\t\\tintersectObject( object, this, intersects, recursive );\\r\\n\\r\\n\\t\\t\\tintersects.sort( ascSort );\\r\\n\\r\\n\\t\\t\\treturn intersects;\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tintersectObjects: function ( objects, recursive ) {\\r\\n\\r\\n\\t\\t\\tvar intersects = [];\\r\\n\\r\\n\\t\\t\\tif ( Array.isArray( objects ) === false ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\\r\\n\\t\\t\\t\\treturn intersects;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tintersectObject( objects[ i ], this, intersects, recursive );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tintersects.sort( ascSort );\\r\\n\\r\\n\\t\\t\\treturn intersects;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n}( THREE ) );\\r\\n\\r\\n// File:src/core/Object3D.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n * @author elephantatwork / www.elephantatwork.ch\\r\\n */\\r\\n\\r\\nTHREE.Object3D = function () {\\r\\n\\r\\n\\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\tthis.name = '';\\r\\n\\tthis.type = 'Object3D';\\r\\n\\r\\n\\tthis.parent = null;\\r\\n\\tthis.children = [];\\r\\n\\r\\n\\tthis.up = THREE.Object3D.DefaultUp.clone();\\r\\n\\r\\n\\tvar position = new THREE.Vector3();\\r\\n\\tvar rotation = new THREE.Euler();\\r\\n\\tvar quaternion = new THREE.Quaternion();\\r\\n\\tvar scale = new THREE.Vector3( 1, 1, 1 );\\r\\n\\r\\n\\tfunction onRotationChange() {\\r\\n\\r\\n\\t\\tquaternion.setFromEuler( rotation, false );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onQuaternionChange() {\\r\\n\\r\\n\\t\\trotation.setFromQuaternion( quaternion, undefined, false );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\trotation.onChange( onRotationChange );\\r\\n\\tquaternion.onChange( onQuaternionChange );\\r\\n\\r\\n\\tObject.defineProperties( this, {\\r\\n\\t\\tposition: {\\r\\n\\t\\t\\tenumerable: true,\\r\\n\\t\\t\\tvalue: position\\r\\n\\t\\t},\\r\\n\\t\\trotation: {\\r\\n\\t\\t\\tenumerable: true,\\r\\n\\t\\t\\tvalue: rotation\\r\\n\\t\\t},\\r\\n\\t\\tquaternion: {\\r\\n\\t\\t\\tenumerable: true,\\r\\n\\t\\t\\tvalue: quaternion\\r\\n\\t\\t},\\r\\n\\t\\tscale: {\\r\\n\\t\\t\\tenumerable: true,\\r\\n\\t\\t\\tvalue: scale\\r\\n\\t\\t},\\r\\n\\t\\tmodelViewMatrix: {\\r\\n\\t\\t\\tvalue: new THREE.Matrix4()\\r\\n\\t\\t},\\r\\n\\t\\tnormalMatrix: {\\r\\n\\t\\t\\tvalue: new THREE.Matrix3()\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n\\r\\n\\tthis.matrix = new THREE.Matrix4();\\r\\n\\tthis.matrixWorld = new THREE.Matrix4();\\r\\n\\r\\n\\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\\r\\n\\tthis.matrixWorldNeedsUpdate = false;\\r\\n\\r\\n\\tthis.layers = new THREE.Layers();\\r\\n\\tthis.visible = true;\\r\\n\\r\\n\\tthis.castShadow = false;\\r\\n\\tthis.receiveShadow = false;\\r\\n\\r\\n\\tthis.frustumCulled = true;\\r\\n\\tthis.renderOrder = 0;\\r\\n\\r\\n\\tthis.userData = {};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\\r\\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\\r\\n\\r\\nObject.assign( THREE.Object3D.prototype, THREE.EventDispatcher.prototype, {\\r\\n\\r\\n\\tapplyMatrix: function ( matrix ) {\\r\\n\\r\\n\\t\\tthis.matrix.multiplyMatrices( matrix, this.matrix );\\r\\n\\r\\n\\t\\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetRotationFromAxisAngle: function ( axis, angle ) {\\r\\n\\r\\n\\t\\t// assumes axis is normalized\\r\\n\\r\\n\\t\\tthis.quaternion.setFromAxisAngle( axis, angle );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetRotationFromEuler: function ( euler ) {\\r\\n\\r\\n\\t\\tthis.quaternion.setFromEuler( euler, true );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetRotationFromMatrix: function ( m ) {\\r\\n\\r\\n\\t\\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\r\\n\\r\\n\\t\\tthis.quaternion.setFromRotationMatrix( m );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetRotationFromQuaternion: function ( q ) {\\r\\n\\r\\n\\t\\t// assumes q is normalized\\r\\n\\r\\n\\t\\tthis.quaternion.copy( q );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\trotateOnAxis: function () {\\r\\n\\r\\n\\t\\t// rotate object on axis in object space\\r\\n\\t\\t// axis is assumed to be normalized\\r\\n\\r\\n\\t\\tvar q1 = new THREE.Quaternion();\\r\\n\\r\\n\\t\\treturn function rotateOnAxis( axis, angle ) {\\r\\n\\r\\n\\t\\t\\tq1.setFromAxisAngle( axis, angle );\\r\\n\\r\\n\\t\\t\\tthis.quaternion.multiply( q1 );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\trotateX: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3( 1, 0, 0 );\\r\\n\\r\\n\\t\\treturn function rotateX( angle ) {\\r\\n\\r\\n\\t\\t\\treturn this.rotateOnAxis( v1, angle );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\trotateY: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3( 0, 1, 0 );\\r\\n\\r\\n\\t\\treturn function rotateY( angle ) {\\r\\n\\r\\n\\t\\t\\treturn this.rotateOnAxis( v1, angle );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\trotateZ: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3( 0, 0, 1 );\\r\\n\\r\\n\\t\\treturn function rotateZ( angle ) {\\r\\n\\r\\n\\t\\t\\treturn this.rotateOnAxis( v1, angle );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\ttranslateOnAxis: function () {\\r\\n\\r\\n\\t\\t// translate object by distance along axis in object space\\r\\n\\t\\t// axis is assumed to be normalized\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function translateOnAxis( axis, distance ) {\\r\\n\\r\\n\\t\\t\\tv1.copy( axis ).applyQuaternion( this.quaternion );\\r\\n\\r\\n\\t\\t\\tthis.position.add( v1.multiplyScalar( distance ) );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\ttranslateX: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3( 1, 0, 0 );\\r\\n\\r\\n\\t\\treturn function translateX( distance ) {\\r\\n\\r\\n\\t\\t\\treturn this.translateOnAxis( v1, distance );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\ttranslateY: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3( 0, 1, 0 );\\r\\n\\r\\n\\t\\treturn function translateY( distance ) {\\r\\n\\r\\n\\t\\t\\treturn this.translateOnAxis( v1, distance );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\ttranslateZ: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3( 0, 0, 1 );\\r\\n\\r\\n\\t\\treturn function translateZ( distance ) {\\r\\n\\r\\n\\t\\t\\treturn this.translateOnAxis( v1, distance );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tlocalToWorld: function ( vector ) {\\r\\n\\r\\n\\t\\treturn vector.applyMatrix4( this.matrixWorld );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tworldToLocal: function () {\\r\\n\\r\\n\\t\\tvar m1 = new THREE.Matrix4();\\r\\n\\r\\n\\t\\treturn function worldToLocal( vector ) {\\r\\n\\r\\n\\t\\t\\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tlookAt: function () {\\r\\n\\r\\n\\t\\t// This routine does not support objects with rotated and/or translated parent(s)\\r\\n\\r\\n\\t\\tvar m1 = new THREE.Matrix4();\\r\\n\\r\\n\\t\\treturn function lookAt( vector ) {\\r\\n\\r\\n\\t\\t\\tm1.lookAt( vector, this.position, this.up );\\r\\n\\r\\n\\t\\t\\tthis.quaternion.setFromRotationMatrix( m1 );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tadd: function ( object ) {\\r\\n\\r\\n\\t\\tif ( arguments.length > 1 ) {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < arguments.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.add( arguments[ i ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( object === this ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( \\\"THREE.Object3D.add: object can't be added as a child of itself.\\\", object );\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( object instanceof THREE.Object3D ) {\\r\\n\\r\\n\\t\\t\\tif ( object.parent !== null ) {\\r\\n\\r\\n\\t\\t\\t\\tobject.parent.remove( object );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tobject.parent = this;\\r\\n\\t\\t\\tobject.dispatchEvent( { type: 'added' } );\\r\\n\\r\\n\\t\\t\\tthis.children.push( object );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tconsole.error( \\\"THREE.Object3D.add: object not an instance of THREE.Object3D.\\\", object );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tremove: function ( object ) {\\r\\n\\r\\n\\t\\tif ( arguments.length > 1 ) {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < arguments.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.remove( arguments[ i ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar index = this.children.indexOf( object );\\r\\n\\r\\n\\t\\tif ( index !== - 1 ) {\\r\\n\\r\\n\\t\\t\\tobject.parent = null;\\r\\n\\r\\n\\t\\t\\tobject.dispatchEvent( { type: 'removed' } );\\r\\n\\r\\n\\t\\t\\tthis.children.splice( index, 1 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetObjectById: function ( id ) {\\r\\n\\r\\n\\t\\treturn this.getObjectByProperty( 'id', id );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetObjectByName: function ( name ) {\\r\\n\\r\\n\\t\\treturn this.getObjectByProperty( 'name', name );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetObjectByProperty: function ( name, value ) {\\r\\n\\r\\n\\t\\tif ( this[ name ] === value ) return this;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar child = this.children[ i ];\\r\\n\\t\\t\\tvar object = child.getObjectByProperty( name, value );\\r\\n\\r\\n\\t\\t\\tif ( object !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\treturn object;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn undefined;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetWorldPosition: function ( optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\r\\n\\t\\tthis.updateMatrixWorld( true );\\r\\n\\r\\n\\t\\treturn result.setFromMatrixPosition( this.matrixWorld );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetWorldQuaternion: function () {\\r\\n\\r\\n\\t\\tvar position = new THREE.Vector3();\\r\\n\\t\\tvar scale = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function getWorldQuaternion( optionalTarget ) {\\r\\n\\r\\n\\t\\t\\tvar result = optionalTarget || new THREE.Quaternion();\\r\\n\\r\\n\\t\\t\\tthis.updateMatrixWorld( true );\\r\\n\\r\\n\\t\\t\\tthis.matrixWorld.decompose( position, result, scale );\\r\\n\\r\\n\\t\\t\\treturn result;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tgetWorldRotation: function () {\\r\\n\\r\\n\\t\\tvar quaternion = new THREE.Quaternion();\\r\\n\\r\\n\\t\\treturn function getWorldRotation( optionalTarget ) {\\r\\n\\r\\n\\t\\t\\tvar result = optionalTarget || new THREE.Euler();\\r\\n\\r\\n\\t\\t\\tthis.getWorldQuaternion( quaternion );\\r\\n\\r\\n\\t\\t\\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tgetWorldScale: function () {\\r\\n\\r\\n\\t\\tvar position = new THREE.Vector3();\\r\\n\\t\\tvar quaternion = new THREE.Quaternion();\\r\\n\\r\\n\\t\\treturn function getWorldScale( optionalTarget ) {\\r\\n\\r\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\tthis.updateMatrixWorld( true );\\r\\n\\r\\n\\t\\t\\tthis.matrixWorld.decompose( position, quaternion, result );\\r\\n\\r\\n\\t\\t\\treturn result;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tgetWorldDirection: function () {\\r\\n\\r\\n\\t\\tvar quaternion = new THREE.Quaternion();\\r\\n\\r\\n\\t\\treturn function getWorldDirection( optionalTarget ) {\\r\\n\\r\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\tthis.getWorldQuaternion( quaternion );\\r\\n\\r\\n\\t\\t\\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\traycast: function () {},\\r\\n\\r\\n\\ttraverse: function ( callback ) {\\r\\n\\r\\n\\t\\tcallback( this );\\r\\n\\r\\n\\t\\tvar children = this.children;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tchildren[ i ].traverse( callback );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttraverseVisible: function ( callback ) {\\r\\n\\r\\n\\t\\tif ( this.visible === false ) return;\\r\\n\\r\\n\\t\\tcallback( this );\\r\\n\\r\\n\\t\\tvar children = this.children;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tchildren[ i ].traverseVisible( callback );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttraverseAncestors: function ( callback ) {\\r\\n\\r\\n\\t\\tvar parent = this.parent;\\r\\n\\r\\n\\t\\tif ( parent !== null ) {\\r\\n\\r\\n\\t\\t\\tcallback( parent );\\r\\n\\r\\n\\t\\t\\tparent.traverseAncestors( callback );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdateMatrix: function () {\\r\\n\\r\\n\\t\\tthis.matrix.compose( this.position, this.quaternion, this.scale );\\r\\n\\r\\n\\t\\tthis.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdateMatrixWorld: function ( force ) {\\r\\n\\r\\n\\t\\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\\r\\n\\r\\n\\t\\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\\r\\n\\r\\n\\t\\t\\tif ( this.parent === null ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.matrixWorld.copy( this.matrix );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.matrixWorldNeedsUpdate = false;\\r\\n\\r\\n\\t\\t\\tforce = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// update children\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.children[ i ].updateMatrixWorld( force );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoJSON: function ( meta ) {\\r\\n\\r\\n\\t\\t// meta is '' when called from JSON.stringify\\r\\n\\t\\tvar isRootObject = ( meta === undefined || meta === '' );\\r\\n\\r\\n\\t\\tvar output = {};\\r\\n\\r\\n\\t\\t// meta is a hash used to collect geometries, materials.\\r\\n\\t\\t// not providing it implies that this is the root object\\r\\n\\t\\t// being serialized.\\r\\n\\t\\tif ( isRootObject ) {\\r\\n\\r\\n\\t\\t\\t// initialize meta obj\\r\\n\\t\\t\\tmeta = {\\r\\n\\t\\t\\t\\tgeometries: {},\\r\\n\\t\\t\\t\\tmaterials: {},\\r\\n\\t\\t\\t\\ttextures: {},\\r\\n\\t\\t\\t\\timages: {}\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\toutput.metadata = {\\r\\n\\t\\t\\t\\tversion: 4.4,\\r\\n\\t\\t\\t\\ttype: 'Object',\\r\\n\\t\\t\\t\\tgenerator: 'Object3D.toJSON'\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// standard Object3D serialization\\r\\n\\r\\n\\t\\tvar object = {};\\r\\n\\r\\n\\t\\tobject.uuid = this.uuid;\\r\\n\\t\\tobject.type = this.type;\\r\\n\\r\\n\\t\\tif ( this.name !== '' ) object.name = this.name;\\r\\n\\t\\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\\r\\n\\t\\tif ( this.castShadow === true ) object.castShadow = true;\\r\\n\\t\\tif ( this.receiveShadow === true ) object.receiveShadow = true;\\r\\n\\t\\tif ( this.visible === false ) object.visible = false;\\r\\n\\r\\n\\t\\tobject.matrix = this.matrix.toArray();\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tif ( this.geometry !== undefined ) {\\r\\n\\r\\n\\t\\t\\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tobject.geometry = this.geometry.uuid;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.material !== undefined ) {\\r\\n\\r\\n\\t\\t\\tif ( meta.materials[ this.material.uuid ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tobject.material = this.material.uuid;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tif ( this.children.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tobject.children = [];\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < this.children.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tobject.children.push( this.children[ i ].toJSON( meta ).object );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( isRootObject ) {\\r\\n\\r\\n\\t\\t\\tvar geometries = extractFromCache( meta.geometries );\\r\\n\\t\\t\\tvar materials = extractFromCache( meta.materials );\\r\\n\\t\\t\\tvar textures = extractFromCache( meta.textures );\\r\\n\\t\\t\\tvar images = extractFromCache( meta.images );\\r\\n\\r\\n\\t\\t\\tif ( geometries.length > 0 ) output.geometries = geometries;\\r\\n\\t\\t\\tif ( materials.length > 0 ) output.materials = materials;\\r\\n\\t\\t\\tif ( textures.length > 0 ) output.textures = textures;\\r\\n\\t\\t\\tif ( images.length > 0 ) output.images = images;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\toutput.object = object;\\r\\n\\r\\n\\t\\treturn output;\\r\\n\\r\\n\\t\\t// extract data from the cache hash\\r\\n\\t\\t// remove metadata on each item\\r\\n\\t\\t// and return as array\\r\\n\\t\\tfunction extractFromCache ( cache ) {\\r\\n\\r\\n\\t\\t\\tvar values = [];\\r\\n\\t\\t\\tfor ( var key in cache ) {\\r\\n\\r\\n\\t\\t\\t\\tvar data = cache[ key ];\\r\\n\\t\\t\\t\\tdelete data.metadata;\\r\\n\\t\\t\\t\\tvalues.push( data );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn values;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function ( recursive ) {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this, recursive );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( source, recursive ) {\\r\\n\\r\\n\\t\\tif ( recursive === undefined ) recursive = true;\\r\\n\\r\\n\\t\\tthis.name = source.name;\\r\\n\\r\\n\\t\\tthis.up.copy( source.up );\\r\\n\\r\\n\\t\\tthis.position.copy( source.position );\\r\\n\\t\\tthis.quaternion.copy( source.quaternion );\\r\\n\\t\\tthis.scale.copy( source.scale );\\r\\n\\r\\n\\t\\tthis.matrix.copy( source.matrix );\\r\\n\\t\\tthis.matrixWorld.copy( source.matrixWorld );\\r\\n\\r\\n\\t\\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\\r\\n\\t\\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\\r\\n\\r\\n\\t\\tthis.visible = source.visible;\\r\\n\\r\\n\\t\\tthis.castShadow = source.castShadow;\\r\\n\\t\\tthis.receiveShadow = source.receiveShadow;\\r\\n\\r\\n\\t\\tthis.frustumCulled = source.frustumCulled;\\r\\n\\t\\tthis.renderOrder = source.renderOrder;\\r\\n\\r\\n\\t\\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\\r\\n\\r\\n\\t\\tif ( recursive === true ) {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < source.children.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar child = source.children[ i ];\\r\\n\\t\\t\\t\\tthis.add( child.clone() );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\nTHREE.Object3DIdCount = 0;\\r\\n\\r\\n// File:src/core/Face3.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\\r\\n\\r\\n\\tthis.a = a;\\r\\n\\tthis.b = b;\\r\\n\\tthis.c = c;\\r\\n\\r\\n\\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\\r\\n\\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\\r\\n\\r\\n\\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\\r\\n\\tthis.vertexColors = Array.isArray( color ) ? color : [];\\r\\n\\r\\n\\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Face3.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Face3,\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tthis.a = source.a;\\r\\n\\t\\tthis.b = source.b;\\r\\n\\t\\tthis.c = source.c;\\r\\n\\r\\n\\t\\tthis.normal.copy( source.normal );\\r\\n\\t\\tthis.color.copy( source.color );\\r\\n\\r\\n\\t\\tthis.materialIndex = source.materialIndex;\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/core/BufferAttribute.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.BufferAttribute = function ( array, itemSize, normalized ) {\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\tthis.array = array;\\r\\n\\tthis.itemSize = itemSize;\\r\\n\\r\\n\\tthis.dynamic = false;\\r\\n\\tthis.updateRange = { offset: 0, count: - 1 };\\r\\n\\r\\n\\tthis.version = 0;\\r\\n\\tthis.normalized = normalized === true;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.BufferAttribute.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.BufferAttribute,\\r\\n\\r\\n\\tget count() {\\r\\n\\r\\n\\t\\treturn this.array.length / this.itemSize;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset needsUpdate( value ) {\\r\\n\\r\\n\\t\\tif ( value === true ) this.version ++;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetDynamic: function ( value ) {\\r\\n\\r\\n\\t\\tthis.dynamic = value;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tthis.array = new source.array.constructor( source.array );\\r\\n\\t\\tthis.itemSize = source.itemSize;\\r\\n\\r\\n\\t\\tthis.dynamic = source.dynamic;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopyAt: function ( index1, attribute, index2 ) {\\r\\n\\r\\n\\t\\tindex1 *= this.itemSize;\\r\\n\\t\\tindex2 *= attribute.itemSize;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopyArray: function ( array ) {\\r\\n\\r\\n\\t\\tthis.array.set( array );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopyColorsArray: function ( colors ) {\\r\\n\\r\\n\\t\\tvar array = this.array, offset = 0;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar color = colors[ i ];\\r\\n\\r\\n\\t\\t\\tif ( color === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\\r\\n\\t\\t\\t\\tcolor = new THREE.Color();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tarray[ offset ++ ] = color.r;\\r\\n\\t\\t\\tarray[ offset ++ ] = color.g;\\r\\n\\t\\t\\tarray[ offset ++ ] = color.b;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopyIndicesArray: function ( indices ) {\\r\\n\\r\\n\\t\\tvar array = this.array, offset = 0;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar index = indices[ i ];\\r\\n\\r\\n\\t\\t\\tarray[ offset ++ ] = index.a;\\r\\n\\t\\t\\tarray[ offset ++ ] = index.b;\\r\\n\\t\\t\\tarray[ offset ++ ] = index.c;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopyVector2sArray: function ( vectors ) {\\r\\n\\r\\n\\t\\tvar array = this.array, offset = 0;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar vector = vectors[ i ];\\r\\n\\r\\n\\t\\t\\tif ( vector === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\\r\\n\\t\\t\\t\\tvector = new THREE.Vector2();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tarray[ offset ++ ] = vector.x;\\r\\n\\t\\t\\tarray[ offset ++ ] = vector.y;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopyVector3sArray: function ( vectors ) {\\r\\n\\r\\n\\t\\tvar array = this.array, offset = 0;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar vector = vectors[ i ];\\r\\n\\r\\n\\t\\t\\tif ( vector === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\\r\\n\\t\\t\\t\\tvector = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tarray[ offset ++ ] = vector.x;\\r\\n\\t\\t\\tarray[ offset ++ ] = vector.y;\\r\\n\\t\\t\\tarray[ offset ++ ] = vector.z;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopyVector4sArray: function ( vectors ) {\\r\\n\\r\\n\\t\\tvar array = this.array, offset = 0;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar vector = vectors[ i ];\\r\\n\\r\\n\\t\\t\\tif ( vector === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\\r\\n\\t\\t\\t\\tvector = new THREE.Vector4();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tarray[ offset ++ ] = vector.x;\\r\\n\\t\\t\\tarray[ offset ++ ] = vector.y;\\r\\n\\t\\t\\tarray[ offset ++ ] = vector.z;\\r\\n\\t\\t\\tarray[ offset ++ ] = vector.w;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset: function ( value, offset ) {\\r\\n\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tthis.array.set( value, offset );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetX: function ( index ) {\\r\\n\\r\\n\\t\\treturn this.array[ index * this.itemSize ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetX: function ( index, x ) {\\r\\n\\r\\n\\t\\tthis.array[ index * this.itemSize ] = x;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetY: function ( index ) {\\r\\n\\r\\n\\t\\treturn this.array[ index * this.itemSize + 1 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetY: function ( index, y ) {\\r\\n\\r\\n\\t\\tthis.array[ index * this.itemSize + 1 ] = y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetZ: function ( index ) {\\r\\n\\r\\n\\t\\treturn this.array[ index * this.itemSize + 2 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetZ: function ( index, z ) {\\r\\n\\r\\n\\t\\tthis.array[ index * this.itemSize + 2 ] = z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetW: function ( index ) {\\r\\n\\r\\n\\t\\treturn this.array[ index * this.itemSize + 3 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetW: function ( index, w ) {\\r\\n\\r\\n\\t\\tthis.array[ index * this.itemSize + 3 ] = w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetXY: function ( index, x, y ) {\\r\\n\\r\\n\\t\\tindex *= this.itemSize;\\r\\n\\r\\n\\t\\tthis.array[ index + 0 ] = x;\\r\\n\\t\\tthis.array[ index + 1 ] = y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetXYZ: function ( index, x, y, z ) {\\r\\n\\r\\n\\t\\tindex *= this.itemSize;\\r\\n\\r\\n\\t\\tthis.array[ index + 0 ] = x;\\r\\n\\t\\tthis.array[ index + 1 ] = y;\\r\\n\\t\\tthis.array[ index + 2 ] = z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetXYZW: function ( index, x, y, z, w ) {\\r\\n\\r\\n\\t\\tindex *= this.itemSize;\\r\\n\\r\\n\\t\\tthis.array[ index + 0 ] = x;\\r\\n\\t\\tthis.array[ index + 1 ] = y;\\r\\n\\t\\tthis.array[ index + 2 ] = z;\\r\\n\\t\\tthis.array[ index + 3 ] = w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n//\\r\\n\\r\\nTHREE.Int8Attribute = function ( array, itemSize ) {\\r\\n\\r\\n\\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Uint8Attribute = function ( array, itemSize ) {\\r\\n\\r\\n\\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\\r\\n\\r\\n\\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Int16Attribute = function ( array, itemSize ) {\\r\\n\\r\\n\\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Uint16Attribute = function ( array, itemSize ) {\\r\\n\\r\\n\\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Int32Attribute = function ( array, itemSize ) {\\r\\n\\r\\n\\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Uint32Attribute = function ( array, itemSize ) {\\r\\n\\r\\n\\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Float32Attribute = function ( array, itemSize ) {\\r\\n\\r\\n\\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Float64Attribute = function ( array, itemSize ) {\\r\\n\\r\\n\\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n// Deprecated\\r\\n\\r\\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\\r\\n\\r\\n\\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\\r\\n\\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/core/InstancedBufferAttribute.js\\r\\n\\r\\n/**\\r\\n * @author benaadams / https://twitter.com/ben_a_adams\\r\\n */\\r\\n\\r\\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\\r\\n\\r\\n\\tTHREE.BufferAttribute.call( this, array, itemSize );\\r\\n\\r\\n\\tthis.meshPerAttribute = meshPerAttribute || 1;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\\r\\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\\r\\n\\r\\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.BufferAttribute.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.meshPerAttribute = source.meshPerAttribute;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/core/InterleavedBuffer.js\\r\\n\\r\\n/**\\r\\n * @author benaadams / https://twitter.com/ben_a_adams\\r\\n */\\r\\n\\r\\nTHREE.InterleavedBuffer = function ( array, stride ) {\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\tthis.array = array;\\r\\n\\tthis.stride = stride;\\r\\n\\r\\n\\tthis.dynamic = false;\\r\\n\\tthis.updateRange = { offset: 0, count: - 1 };\\r\\n\\r\\n\\tthis.version = 0;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.InterleavedBuffer.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.InterleavedBuffer,\\r\\n\\r\\n\\tget length () {\\r\\n\\r\\n\\t\\treturn this.array.length;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tget count () {\\r\\n\\r\\n\\t\\treturn this.array.length / this.stride;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset needsUpdate( value ) {\\r\\n\\r\\n\\t\\tif ( value === true ) this.version ++;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetDynamic: function ( value ) {\\r\\n\\r\\n\\t\\tthis.dynamic = value;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tthis.array = new source.array.constructor( source.array );\\r\\n\\t\\tthis.stride = source.stride;\\r\\n\\t\\tthis.dynamic = source.dynamic;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopyAt: function ( index1, attribute, index2 ) {\\r\\n\\r\\n\\t\\tindex1 *= this.stride;\\r\\n\\t\\tindex2 *= attribute.stride;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset: function ( value, offset ) {\\r\\n\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tthis.array.set( value, offset );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/core/InstancedInterleavedBuffer.js\\r\\n\\r\\n/**\\r\\n * @author benaadams / https://twitter.com/ben_a_adams\\r\\n */\\r\\n\\r\\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\\r\\n\\r\\n\\tTHREE.InterleavedBuffer.call( this, array, stride );\\r\\n\\r\\n\\tthis.meshPerAttribute = meshPerAttribute || 1;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\\r\\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\\r\\n\\r\\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.meshPerAttribute = source.meshPerAttribute;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/core/InterleavedBufferAttribute.js\\r\\n\\r\\n/**\\r\\n * @author benaadams / https://twitter.com/ben_a_adams\\r\\n */\\r\\n\\r\\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\tthis.data = interleavedBuffer;\\r\\n\\tthis.itemSize = itemSize;\\r\\n\\tthis.offset = offset;\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\nTHREE.InterleavedBufferAttribute.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.InterleavedBufferAttribute,\\r\\n\\r\\n\\tget length() {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\\r\\n\\t\\treturn this.array.length;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tget count() {\\r\\n\\r\\n\\t\\treturn this.data.count;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetX: function ( index, x ) {\\r\\n\\r\\n\\t\\tthis.data.array[ index * this.data.stride + this.offset ] = x;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetY: function ( index, y ) {\\r\\n\\r\\n\\t\\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetZ: function ( index, z ) {\\r\\n\\r\\n\\t\\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetW: function ( index, w ) {\\r\\n\\r\\n\\t\\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetX: function ( index ) {\\r\\n\\r\\n\\t\\treturn this.data.array[ index * this.data.stride + this.offset ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetY: function ( index ) {\\r\\n\\r\\n\\t\\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetZ: function ( index ) {\\r\\n\\r\\n\\t\\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetW: function ( index ) {\\r\\n\\r\\n\\t\\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetXY: function ( index, x, y ) {\\r\\n\\r\\n\\t\\tindex = index * this.data.stride + this.offset;\\r\\n\\r\\n\\t\\tthis.data.array[ index + 0 ] = x;\\r\\n\\t\\tthis.data.array[ index + 1 ] = y;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetXYZ: function ( index, x, y, z ) {\\r\\n\\r\\n\\t\\tindex = index * this.data.stride + this.offset;\\r\\n\\r\\n\\t\\tthis.data.array[ index + 0 ] = x;\\r\\n\\t\\tthis.data.array[ index + 1 ] = y;\\r\\n\\t\\tthis.data.array[ index + 2 ] = z;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetXYZW: function ( index, x, y, z, w ) {\\r\\n\\r\\n\\t\\tindex = index * this.data.stride + this.offset;\\r\\n\\r\\n\\t\\tthis.data.array[ index + 0 ] = x;\\r\\n\\t\\tthis.data.array[ index + 1 ] = y;\\r\\n\\t\\tthis.data.array[ index + 2 ] = z;\\r\\n\\t\\tthis.data.array[ index + 3 ] = w;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/core/Geometry.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author kile / http://kile.stravaganza.org/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n * @author bhouston / http://clara.io\\r\\n */\\r\\n\\r\\nTHREE.Geometry = function () {\\r\\n\\r\\n\\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\tthis.name = '';\\r\\n\\tthis.type = 'Geometry';\\r\\n\\r\\n\\tthis.vertices = [];\\r\\n\\tthis.colors = [];\\r\\n\\tthis.faces = [];\\r\\n\\tthis.faceVertexUvs = [ [] ];\\r\\n\\r\\n\\tthis.morphTargets = [];\\r\\n\\tthis.morphNormals = [];\\r\\n\\r\\n\\tthis.skinWeights = [];\\r\\n\\tthis.skinIndices = [];\\r\\n\\r\\n\\tthis.lineDistances = [];\\r\\n\\r\\n\\tthis.boundingBox = null;\\r\\n\\tthis.boundingSphere = null;\\r\\n\\r\\n\\t// update flags\\r\\n\\r\\n\\tthis.verticesNeedUpdate = false;\\r\\n\\tthis.elementsNeedUpdate = false;\\r\\n\\tthis.uvsNeedUpdate = false;\\r\\n\\tthis.normalsNeedUpdate = false;\\r\\n\\tthis.colorsNeedUpdate = false;\\r\\n\\tthis.lineDistancesNeedUpdate = false;\\r\\n\\tthis.groupsNeedUpdate = false;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.Geometry.prototype, THREE.EventDispatcher.prototype, {\\r\\n\\r\\n\\tapplyMatrix: function ( matrix ) {\\r\\n\\r\\n\\t\\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar vertex = this.vertices[ i ];\\r\\n\\t\\t\\tvertex.applyMatrix4( matrix );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar face = this.faces[ i ];\\r\\n\\t\\t\\tface.normal.applyMatrix3( normalMatrix ).normalize();\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.boundingBox !== null ) {\\r\\n\\r\\n\\t\\t\\tthis.computeBoundingBox();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.boundingSphere !== null ) {\\r\\n\\r\\n\\t\\t\\tthis.computeBoundingSphere();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.verticesNeedUpdate = true;\\r\\n\\t\\tthis.normalsNeedUpdate = true;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\trotateX: function () {\\r\\n\\r\\n\\t\\t// rotate geometry around world x-axis\\r\\n\\r\\n\\t\\tvar m1;\\r\\n\\r\\n\\t\\treturn function rotateX( angle ) {\\r\\n\\r\\n\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tm1.makeRotationX( angle );\\r\\n\\r\\n\\t\\t\\tthis.applyMatrix( m1 );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\trotateY: function () {\\r\\n\\r\\n\\t\\t// rotate geometry around world y-axis\\r\\n\\r\\n\\t\\tvar m1;\\r\\n\\r\\n\\t\\treturn function rotateY( angle ) {\\r\\n\\r\\n\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tm1.makeRotationY( angle );\\r\\n\\r\\n\\t\\t\\tthis.applyMatrix( m1 );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\trotateZ: function () {\\r\\n\\r\\n\\t\\t// rotate geometry around world z-axis\\r\\n\\r\\n\\t\\tvar m1;\\r\\n\\r\\n\\t\\treturn function rotateZ( angle ) {\\r\\n\\r\\n\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tm1.makeRotationZ( angle );\\r\\n\\r\\n\\t\\t\\tthis.applyMatrix( m1 );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\ttranslate: function () {\\r\\n\\r\\n\\t\\t// translate geometry\\r\\n\\r\\n\\t\\tvar m1;\\r\\n\\r\\n\\t\\treturn function translate( x, y, z ) {\\r\\n\\r\\n\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tm1.makeTranslation( x, y, z );\\r\\n\\r\\n\\t\\t\\tthis.applyMatrix( m1 );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tscale: function () {\\r\\n\\r\\n\\t\\t// scale geometry\\r\\n\\r\\n\\t\\tvar m1;\\r\\n\\r\\n\\t\\treturn function scale( x, y, z ) {\\r\\n\\r\\n\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tm1.makeScale( x, y, z );\\r\\n\\r\\n\\t\\t\\tthis.applyMatrix( m1 );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tlookAt: function () {\\r\\n\\r\\n\\t\\tvar obj;\\r\\n\\r\\n\\t\\treturn function lookAt( vector ) {\\r\\n\\r\\n\\t\\t\\tif ( obj === undefined ) obj = new THREE.Object3D();\\r\\n\\r\\n\\t\\t\\tobj.lookAt( vector );\\r\\n\\r\\n\\t\\t\\tobj.updateMatrix();\\r\\n\\r\\n\\t\\t\\tthis.applyMatrix( obj.matrix );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tfromBufferGeometry: function ( geometry ) {\\r\\n\\r\\n\\t\\tvar scope = this;\\r\\n\\r\\n\\t\\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\\r\\n\\t\\tvar attributes = geometry.attributes;\\r\\n\\r\\n\\t\\tvar positions = attributes.position.array;\\r\\n\\t\\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\\r\\n\\t\\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\\r\\n\\t\\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\\r\\n\\t\\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\\r\\n\\r\\n\\t\\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\\r\\n\\r\\n\\t\\tvar tempNormals = [];\\r\\n\\t\\tvar tempUVs = [];\\r\\n\\t\\tvar tempUVs2 = [];\\r\\n\\r\\n\\t\\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\\r\\n\\r\\n\\t\\t\\tscope.vertices.push( new THREE.Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\\r\\n\\r\\n\\t\\t\\tif ( normals !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( colors !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( uvs !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( uvs2 !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction addFace( a, b, c, materialIndex ) {\\r\\n\\r\\n\\t\\t\\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\\r\\n\\t\\t\\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\\r\\n\\r\\n\\t\\t\\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\\r\\n\\r\\n\\t\\t\\tscope.faces.push( face );\\r\\n\\r\\n\\t\\t\\tif ( uvs !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( uvs2 !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( indices !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar groups = geometry.groups;\\r\\n\\r\\n\\t\\t\\tif ( groups.length > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0; i < groups.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar group = groups[ i ];\\r\\n\\r\\n\\t\\t\\t\\t\\tvar start = group.start;\\r\\n\\t\\t\\t\\t\\tvar count = group.count;\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0; i < indices.length; i += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\taddFace( i, i + 1, i + 2 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.computeFaceNormals();\\r\\n\\r\\n\\t\\tif ( geometry.boundingBox !== null ) {\\r\\n\\r\\n\\t\\t\\tthis.boundingBox = geometry.boundingBox.clone();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.boundingSphere !== null ) {\\r\\n\\r\\n\\t\\t\\tthis.boundingSphere = geometry.boundingSphere.clone();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcenter: function () {\\r\\n\\r\\n\\t\\tthis.computeBoundingBox();\\r\\n\\r\\n\\t\\tvar offset = this.boundingBox.center().negate();\\r\\n\\r\\n\\t\\tthis.translate( offset.x, offset.y, offset.z );\\r\\n\\r\\n\\t\\treturn offset;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnormalize: function () {\\r\\n\\r\\n\\t\\tthis.computeBoundingSphere();\\r\\n\\r\\n\\t\\tvar center = this.boundingSphere.center;\\r\\n\\t\\tvar radius = this.boundingSphere.radius;\\r\\n\\r\\n\\t\\tvar s = radius === 0 ? 1 : 1.0 / radius;\\r\\n\\r\\n\\t\\tvar matrix = new THREE.Matrix4();\\r\\n\\t\\tmatrix.set(\\r\\n\\t\\t\\ts, 0, 0, - s * center.x,\\r\\n\\t\\t\\t0, s, 0, - s * center.y,\\r\\n\\t\\t\\t0, 0, s, - s * center.z,\\r\\n\\t\\t\\t0, 0, 0, 1\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tthis.applyMatrix( matrix );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcomputeFaceNormals: function () {\\r\\n\\r\\n\\t\\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\\r\\n\\r\\n\\t\\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n\\t\\t\\tvar face = this.faces[ f ];\\r\\n\\r\\n\\t\\t\\tvar vA = this.vertices[ face.a ];\\r\\n\\t\\t\\tvar vB = this.vertices[ face.b ];\\r\\n\\t\\t\\tvar vC = this.vertices[ face.c ];\\r\\n\\r\\n\\t\\t\\tcb.subVectors( vC, vB );\\r\\n\\t\\t\\tab.subVectors( vA, vB );\\r\\n\\t\\t\\tcb.cross( ab );\\r\\n\\r\\n\\t\\t\\tcb.normalize();\\r\\n\\r\\n\\t\\t\\tface.normal.copy( cb );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcomputeVertexNormals: function ( areaWeighted ) {\\r\\n\\r\\n\\t\\tif ( areaWeighted === undefined ) areaWeighted = true;\\r\\n\\r\\n\\t\\tvar v, vl, f, fl, face, vertices;\\r\\n\\r\\n\\t\\tvertices = new Array( this.vertices.length );\\r\\n\\r\\n\\t\\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\\r\\n\\r\\n\\t\\t\\tvertices[ v ] = new THREE.Vector3();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( areaWeighted ) {\\r\\n\\r\\n\\t\\t\\t// vertex normals weighted by triangle areas\\r\\n\\t\\t\\t// http://www.iquilezles.org/www/articles/normals/normals.htm\\r\\n\\r\\n\\t\\t\\tvar vA, vB, vC;\\r\\n\\t\\t\\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tface = this.faces[ f ];\\r\\n\\r\\n\\t\\t\\t\\tvA = this.vertices[ face.a ];\\r\\n\\t\\t\\t\\tvB = this.vertices[ face.b ];\\r\\n\\t\\t\\t\\tvC = this.vertices[ face.c ];\\r\\n\\r\\n\\t\\t\\t\\tcb.subVectors( vC, vB );\\r\\n\\t\\t\\t\\tab.subVectors( vA, vB );\\r\\n\\t\\t\\t\\tcb.cross( ab );\\r\\n\\r\\n\\t\\t\\t\\tvertices[ face.a ].add( cb );\\r\\n\\t\\t\\t\\tvertices[ face.b ].add( cb );\\r\\n\\t\\t\\t\\tvertices[ face.c ].add( cb );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tface = this.faces[ f ];\\r\\n\\r\\n\\t\\t\\t\\tvertices[ face.a ].add( face.normal );\\r\\n\\t\\t\\t\\tvertices[ face.b ].add( face.normal );\\r\\n\\t\\t\\t\\tvertices[ face.c ].add( face.normal );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\\r\\n\\r\\n\\t\\t\\tvertices[ v ].normalize();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n\\t\\t\\tface = this.faces[ f ];\\r\\n\\r\\n\\t\\t\\tvar vertexNormals = face.vertexNormals;\\r\\n\\r\\n\\t\\t\\tif ( vertexNormals.length === 3 ) {\\r\\n\\r\\n\\t\\t\\t\\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\\r\\n\\t\\t\\t\\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\\r\\n\\t\\t\\t\\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\\r\\n\\t\\t\\t\\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\\r\\n\\t\\t\\t\\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.faces.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tthis.normalsNeedUpdate = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcomputeMorphNormals: function () {\\r\\n\\r\\n\\t\\tvar i, il, f, fl, face;\\r\\n\\r\\n\\t\\t// save original normals\\r\\n\\t\\t// - create temp variables on first access\\r\\n\\t\\t//   otherwise just copy (for faster repeated calls)\\r\\n\\r\\n\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n\\t\\t\\tface = this.faces[ f ];\\r\\n\\r\\n\\t\\t\\tif ( ! face.__originalFaceNormal ) {\\r\\n\\r\\n\\t\\t\\t\\tface.__originalFaceNormal = face.normal.clone();\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tface.__originalFaceNormal.copy( face.normal );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\\r\\n\\r\\n\\t\\t\\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( ! face.__originalVertexNormals[ i ] ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// use temp geometry to compute face and vertex normals for each morph\\r\\n\\r\\n\\t\\tvar tmpGeo = new THREE.Geometry();\\r\\n\\t\\ttmpGeo.faces = this.faces;\\r\\n\\r\\n\\t\\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\t// create on first access\\r\\n\\r\\n\\t\\t\\tif ( ! this.morphNormals[ i ] ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.morphNormals[ i ] = {};\\r\\n\\t\\t\\t\\tthis.morphNormals[ i ].faceNormals = [];\\r\\n\\t\\t\\t\\tthis.morphNormals[ i ].vertexNormals = [];\\r\\n\\r\\n\\t\\t\\t\\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\\r\\n\\t\\t\\t\\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\\r\\n\\r\\n\\t\\t\\t\\tvar faceNormal, vertexNormals;\\r\\n\\r\\n\\t\\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tfaceNormal = new THREE.Vector3();\\r\\n\\t\\t\\t\\t\\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\\r\\n\\r\\n\\t\\t\\t\\t\\tdstNormalsFace.push( faceNormal );\\r\\n\\t\\t\\t\\t\\tdstNormalsVertex.push( vertexNormals );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar morphNormals = this.morphNormals[ i ];\\r\\n\\r\\n\\t\\t\\t// set vertices to morph target\\r\\n\\r\\n\\t\\t\\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\\r\\n\\r\\n\\t\\t\\t// compute morph normals\\r\\n\\r\\n\\t\\t\\ttmpGeo.computeFaceNormals();\\r\\n\\t\\t\\ttmpGeo.computeVertexNormals();\\r\\n\\r\\n\\t\\t\\t// store morph normals\\r\\n\\r\\n\\t\\t\\tvar faceNormal, vertexNormals;\\r\\n\\r\\n\\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tface = this.faces[ f ];\\r\\n\\r\\n\\t\\t\\t\\tfaceNormal = morphNormals.faceNormals[ f ];\\r\\n\\t\\t\\t\\tvertexNormals = morphNormals.vertexNormals[ f ];\\r\\n\\r\\n\\t\\t\\t\\tfaceNormal.copy( face.normal );\\r\\n\\r\\n\\t\\t\\t\\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\\r\\n\\t\\t\\t\\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\\r\\n\\t\\t\\t\\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// restore original normals\\r\\n\\r\\n\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\r\\n\\r\\n\\t\\t\\tface = this.faces[ f ];\\r\\n\\r\\n\\t\\t\\tface.normal = face.__originalFaceNormal;\\r\\n\\t\\t\\tface.vertexNormals = face.__originalVertexNormals;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcomputeTangents: function () {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcomputeLineDistances: function () {\\r\\n\\r\\n\\t\\tvar d = 0;\\r\\n\\t\\tvar vertices = this.vertices;\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tif ( i > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.lineDistances[ i ] = d;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcomputeBoundingBox: function () {\\r\\n\\r\\n\\t\\tif ( this.boundingBox === null ) {\\r\\n\\r\\n\\t\\t\\tthis.boundingBox = new THREE.Box3();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.boundingBox.setFromPoints( this.vertices );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcomputeBoundingSphere: function () {\\r\\n\\r\\n\\t\\tif ( this.boundingSphere === null ) {\\r\\n\\r\\n\\t\\t\\tthis.boundingSphere = new THREE.Sphere();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.boundingSphere.setFromPoints( this.vertices );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmerge: function ( geometry, matrix, materialIndexOffset ) {\\r\\n\\r\\n\\t\\tif ( geometry instanceof THREE.Geometry === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar normalMatrix,\\r\\n\\t\\tvertexOffset = this.vertices.length,\\r\\n\\t\\tvertices1 = this.vertices,\\r\\n\\t\\tvertices2 = geometry.vertices,\\r\\n\\t\\tfaces1 = this.faces,\\r\\n\\t\\tfaces2 = geometry.faces,\\r\\n\\t\\tuvs1 = this.faceVertexUvs[ 0 ],\\r\\n\\t\\tuvs2 = geometry.faceVertexUvs[ 0 ];\\r\\n\\r\\n\\t\\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\\r\\n\\r\\n\\t\\tif ( matrix !== undefined ) {\\r\\n\\r\\n\\t\\t\\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// vertices\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar vertex = vertices2[ i ];\\r\\n\\r\\n\\t\\t\\tvar vertexCopy = vertex.clone();\\r\\n\\r\\n\\t\\t\\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\\r\\n\\r\\n\\t\\t\\tvertices1.push( vertexCopy );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// faces\\r\\n\\r\\n\\t\\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar face = faces2[ i ], faceCopy, normal, color,\\r\\n\\t\\t\\tfaceVertexNormals = face.vertexNormals,\\r\\n\\t\\t\\tfaceVertexColors = face.vertexColors;\\r\\n\\r\\n\\t\\t\\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\\r\\n\\t\\t\\tfaceCopy.normal.copy( face.normal );\\r\\n\\r\\n\\t\\t\\tif ( normalMatrix !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tnormal = faceVertexNormals[ j ].clone();\\r\\n\\r\\n\\t\\t\\t\\tif ( normalMatrix !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tnormal.applyMatrix3( normalMatrix ).normalize();\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tfaceCopy.vertexNormals.push( normal );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfaceCopy.color.copy( face.color );\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tcolor = faceVertexColors[ j ];\\r\\n\\t\\t\\t\\tfaceCopy.vertexColors.push( color.clone() );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\\r\\n\\r\\n\\t\\t\\tfaces1.push( faceCopy );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// uvs\\r\\n\\r\\n\\t\\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar uv = uvs2[ i ], uvCopy = [];\\r\\n\\r\\n\\t\\t\\tif ( uv === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tuvCopy.push( uv[ j ].clone() );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tuvs1.push( uvCopy );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmergeMesh: function ( mesh ) {\\r\\n\\r\\n\\t\\tif ( mesh instanceof THREE.Mesh === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tmesh.matrixAutoUpdate && mesh.updateMatrix();\\r\\n\\r\\n\\t\\tthis.merge( mesh.geometry, mesh.matrix );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t/*\\r\\n\\t * Checks for duplicate vertices with hashmap.\\r\\n\\t * Duplicated vertices are removed\\r\\n\\t * and faces' vertices are updated.\\r\\n\\t */\\r\\n\\r\\n\\tmergeVertices: function () {\\r\\n\\r\\n\\t\\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\\r\\n\\t\\tvar unique = [], changes = [];\\r\\n\\r\\n\\t\\tvar v, key;\\r\\n\\t\\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\\r\\n\\t\\tvar precision = Math.pow( 10, precisionPoints );\\r\\n\\t\\tvar i, il, face;\\r\\n\\t\\tvar indices, j, jl;\\r\\n\\r\\n\\t\\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tv = this.vertices[ i ];\\r\\n\\t\\t\\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\\r\\n\\r\\n\\t\\t\\tif ( verticesMap[ key ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tverticesMap[ key ] = i;\\r\\n\\t\\t\\t\\tunique.push( this.vertices[ i ] );\\r\\n\\t\\t\\t\\tchanges[ i ] = unique.length - 1;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\\r\\n\\t\\t\\t\\tchanges[ i ] = changes[ verticesMap[ key ] ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t// if faces are completely degenerate after merging vertices, we\\r\\n\\t\\t// have to remove them from the geometry.\\r\\n\\t\\tvar faceIndicesToRemove = [];\\r\\n\\r\\n\\t\\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tface = this.faces[ i ];\\r\\n\\r\\n\\t\\t\\tface.a = changes[ face.a ];\\r\\n\\t\\t\\tface.b = changes[ face.b ];\\r\\n\\t\\t\\tface.c = changes[ face.c ];\\r\\n\\r\\n\\t\\t\\tindices = [ face.a, face.b, face.c ];\\r\\n\\r\\n\\t\\t\\tvar dupIndex = - 1;\\r\\n\\r\\n\\t\\t\\t// if any duplicate vertices are found in a Face3\\r\\n\\t\\t\\t// we have to remove the face as nothing can be saved\\r\\n\\t\\t\\tfor ( var n = 0; n < 3; n ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tdupIndex = n;\\r\\n\\t\\t\\t\\t\\tfaceIndicesToRemove.push( i );\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\\r\\n\\r\\n\\t\\t\\tvar idx = faceIndicesToRemove[ i ];\\r\\n\\r\\n\\t\\t\\tthis.faces.splice( idx, 1 );\\r\\n\\r\\n\\t\\t\\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.faceVertexUvs[ j ].splice( idx, 1 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Use unique set of vertices\\r\\n\\r\\n\\t\\tvar diff = this.vertices.length - unique.length;\\r\\n\\t\\tthis.vertices = unique;\\r\\n\\t\\treturn diff;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsortFacesByMaterialIndex: function () {\\r\\n\\r\\n\\t\\tvar faces = this.faces;\\r\\n\\t\\tvar length = faces.length;\\r\\n\\r\\n\\t\\t// tag faces\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tfaces[ i ]._id = i;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// sort faces\\r\\n\\r\\n\\t\\tfunction materialIndexSort( a, b ) {\\r\\n\\r\\n\\t\\t\\treturn a.materialIndex - b.materialIndex;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfaces.sort( materialIndexSort );\\r\\n\\r\\n\\t\\t// sort uvs\\r\\n\\r\\n\\t\\tvar uvs1 = this.faceVertexUvs[ 0 ];\\r\\n\\t\\tvar uvs2 = this.faceVertexUvs[ 1 ];\\r\\n\\r\\n\\t\\tvar newUvs1, newUvs2;\\r\\n\\r\\n\\t\\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\\r\\n\\t\\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar id = faces[ i ]._id;\\r\\n\\r\\n\\t\\t\\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\\r\\n\\t\\t\\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\\r\\n\\t\\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoJSON: function () {\\r\\n\\r\\n\\t\\tvar data = {\\r\\n\\t\\t\\tmetadata: {\\r\\n\\t\\t\\t\\tversion: 4.4,\\r\\n\\t\\t\\t\\ttype: 'Geometry',\\r\\n\\t\\t\\t\\tgenerator: 'Geometry.toJSON'\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// standard Geometry serialization\\r\\n\\r\\n\\t\\tdata.uuid = this.uuid;\\r\\n\\t\\tdata.type = this.type;\\r\\n\\t\\tif ( this.name !== '' ) data.name = this.name;\\r\\n\\r\\n\\t\\tif ( this.parameters !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar parameters = this.parameters;\\r\\n\\r\\n\\t\\t\\tfor ( var key in parameters ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn data;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar vertices = [];\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar vertex = this.vertices[ i ];\\r\\n\\t\\t\\tvertices.push( vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar faces = [];\\r\\n\\t\\tvar normals = [];\\r\\n\\t\\tvar normalsHash = {};\\r\\n\\t\\tvar colors = [];\\r\\n\\t\\tvar colorsHash = {};\\r\\n\\t\\tvar uvs = [];\\r\\n\\t\\tvar uvsHash = {};\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < this.faces.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar face = this.faces[ i ];\\r\\n\\r\\n\\t\\t\\tvar hasMaterial = true;\\r\\n\\t\\t\\tvar hasFaceUv = false; // deprecated\\r\\n\\t\\t\\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\\r\\n\\t\\t\\tvar hasFaceNormal = face.normal.length() > 0;\\r\\n\\t\\t\\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\\r\\n\\t\\t\\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\\r\\n\\t\\t\\tvar hasFaceVertexColor = face.vertexColors.length > 0;\\r\\n\\r\\n\\t\\t\\tvar faceType = 0;\\r\\n\\r\\n\\t\\t\\tfaceType = setBit( faceType, 0, 0 ); // isQuad\\r\\n\\t\\t\\tfaceType = setBit( faceType, 1, hasMaterial );\\r\\n\\t\\t\\tfaceType = setBit( faceType, 2, hasFaceUv );\\r\\n\\t\\t\\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\\r\\n\\t\\t\\tfaceType = setBit( faceType, 4, hasFaceNormal );\\r\\n\\t\\t\\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\\r\\n\\t\\t\\tfaceType = setBit( faceType, 6, hasFaceColor );\\r\\n\\t\\t\\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\\r\\n\\r\\n\\t\\t\\tfaces.push( faceType );\\r\\n\\t\\t\\tfaces.push( face.a, face.b, face.c );\\r\\n\\t\\t\\tfaces.push( face.materialIndex );\\r\\n\\r\\n\\t\\t\\tif ( hasFaceVertexUv ) {\\r\\n\\r\\n\\t\\t\\t\\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\\r\\n\\r\\n\\t\\t\\t\\tfaces.push(\\r\\n\\t\\t\\t\\t\\tgetUvIndex( faceVertexUvs[ 0 ] ),\\r\\n\\t\\t\\t\\t\\tgetUvIndex( faceVertexUvs[ 1 ] ),\\r\\n\\t\\t\\t\\t\\tgetUvIndex( faceVertexUvs[ 2 ] )\\r\\n\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( hasFaceNormal ) {\\r\\n\\r\\n\\t\\t\\t\\tfaces.push( getNormalIndex( face.normal ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( hasFaceVertexNormal ) {\\r\\n\\r\\n\\t\\t\\t\\tvar vertexNormals = face.vertexNormals;\\r\\n\\r\\n\\t\\t\\t\\tfaces.push(\\r\\n\\t\\t\\t\\t\\tgetNormalIndex( vertexNormals[ 0 ] ),\\r\\n\\t\\t\\t\\t\\tgetNormalIndex( vertexNormals[ 1 ] ),\\r\\n\\t\\t\\t\\t\\tgetNormalIndex( vertexNormals[ 2 ] )\\r\\n\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( hasFaceColor ) {\\r\\n\\r\\n\\t\\t\\t\\tfaces.push( getColorIndex( face.color ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( hasFaceVertexColor ) {\\r\\n\\r\\n\\t\\t\\t\\tvar vertexColors = face.vertexColors;\\r\\n\\r\\n\\t\\t\\t\\tfaces.push(\\r\\n\\t\\t\\t\\t\\tgetColorIndex( vertexColors[ 0 ] ),\\r\\n\\t\\t\\t\\t\\tgetColorIndex( vertexColors[ 1 ] ),\\r\\n\\t\\t\\t\\t\\tgetColorIndex( vertexColors[ 2 ] )\\r\\n\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction setBit( value, position, enabled ) {\\r\\n\\r\\n\\t\\t\\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction getNormalIndex( normal ) {\\r\\n\\r\\n\\t\\t\\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\\r\\n\\r\\n\\t\\t\\tif ( normalsHash[ hash ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\treturn normalsHash[ hash ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tnormalsHash[ hash ] = normals.length / 3;\\r\\n\\t\\t\\tnormals.push( normal.x, normal.y, normal.z );\\r\\n\\r\\n\\t\\t\\treturn normalsHash[ hash ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction getColorIndex( color ) {\\r\\n\\r\\n\\t\\t\\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\\r\\n\\r\\n\\t\\t\\tif ( colorsHash[ hash ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\treturn colorsHash[ hash ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tcolorsHash[ hash ] = colors.length;\\r\\n\\t\\t\\tcolors.push( color.getHex() );\\r\\n\\r\\n\\t\\t\\treturn colorsHash[ hash ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction getUvIndex( uv ) {\\r\\n\\r\\n\\t\\t\\tvar hash = uv.x.toString() + uv.y.toString();\\r\\n\\r\\n\\t\\t\\tif ( uvsHash[ hash ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\treturn uvsHash[ hash ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tuvsHash[ hash ] = uvs.length / 2;\\r\\n\\t\\t\\tuvs.push( uv.x, uv.y );\\r\\n\\r\\n\\t\\t\\treturn uvsHash[ hash ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tdata.data = {};\\r\\n\\r\\n\\t\\tdata.data.vertices = vertices;\\r\\n\\t\\tdata.data.normals = normals;\\r\\n\\t\\tif ( colors.length > 0 ) data.data.colors = colors;\\r\\n\\t\\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\\r\\n\\t\\tdata.data.faces = faces;\\r\\n\\r\\n\\t\\treturn data;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\t/*\\r\\n\\t\\t// Handle primitives\\r\\n\\r\\n\\t\\tvar parameters = this.parameters;\\r\\n\\r\\n\\t\\tif ( parameters !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar values = [];\\r\\n\\r\\n\\t\\t\\tfor ( var key in parameters ) {\\r\\n\\r\\n\\t\\t\\t\\tvalues.push( parameters[ key ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar geometry = Object.create( this.constructor.prototype );\\r\\n\\t\\t\\tthis.constructor.apply( geometry, values );\\r\\n\\t\\t\\treturn geometry;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\t\\t*/\\r\\n\\r\\n\\t\\treturn new THREE.Geometry().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tthis.vertices = [];\\r\\n\\t\\tthis.faces = [];\\r\\n\\t\\tthis.faceVertexUvs = [ [] ];\\r\\n\\r\\n\\t\\tvar vertices = source.vertices;\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.vertices.push( vertices[ i ].clone() );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar faces = source.faces;\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.faces.push( faces[ i ].clone() );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar faceVertexUvs = source.faceVertexUvs[ i ];\\r\\n\\r\\n\\t\\t\\tif ( this.faceVertexUvs[ i ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.faceVertexUvs[ i ] = [];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\\r\\n\\r\\n\\t\\t\\t\\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar uv = uvs[ k ];\\r\\n\\r\\n\\t\\t\\t\\t\\tuvsCopy.push( uv.clone() );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tthis.faceVertexUvs[ i ].push( uvsCopy );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdispose: function () {\\r\\n\\r\\n\\t\\tthis.dispatchEvent( { type: 'dispose' } );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\nTHREE.GeometryIdCount = 0;\\r\\n\\r\\n// File:src/core/DirectGeometry.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.DirectGeometry = function () {\\r\\n\\r\\n\\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\tthis.name = '';\\r\\n\\tthis.type = 'DirectGeometry';\\r\\n\\r\\n\\tthis.indices = [];\\r\\n\\tthis.vertices = [];\\r\\n\\tthis.normals = [];\\r\\n\\tthis.colors = [];\\r\\n\\tthis.uvs = [];\\r\\n\\tthis.uvs2 = [];\\r\\n\\r\\n\\tthis.groups = [];\\r\\n\\r\\n\\tthis.morphTargets = {};\\r\\n\\r\\n\\tthis.skinWeights = [];\\r\\n\\tthis.skinIndices = [];\\r\\n\\r\\n\\t// this.lineDistances = [];\\r\\n\\r\\n\\tthis.boundingBox = null;\\r\\n\\tthis.boundingSphere = null;\\r\\n\\r\\n\\t// update flags\\r\\n\\r\\n\\tthis.verticesNeedUpdate = false;\\r\\n\\tthis.normalsNeedUpdate = false;\\r\\n\\tthis.colorsNeedUpdate = false;\\r\\n\\tthis.uvsNeedUpdate = false;\\r\\n\\tthis.groupsNeedUpdate = false;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.DirectGeometry.prototype, THREE.EventDispatcher.prototype, {\\r\\n\\r\\n\\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\\r\\n\\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\\r\\n\\r\\n\\tcomputeFaceNormals: function () {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcomputeVertexNormals: function () {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcomputeGroups: function ( geometry ) {\\r\\n\\r\\n\\t\\tvar group;\\r\\n\\t\\tvar groups = [];\\r\\n\\t\\tvar materialIndex;\\r\\n\\r\\n\\t\\tvar faces = geometry.faces;\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < faces.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar face = faces[ i ];\\r\\n\\r\\n\\t\\t\\t// materials\\r\\n\\r\\n\\t\\t\\tif ( face.materialIndex !== materialIndex ) {\\r\\n\\r\\n\\t\\t\\t\\tmaterialIndex = face.materialIndex;\\r\\n\\r\\n\\t\\t\\t\\tif ( group !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tgroup.count = ( i * 3 ) - group.start;\\r\\n\\t\\t\\t\\t\\tgroups.push( group );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tgroup = {\\r\\n\\t\\t\\t\\t\\tstart: i * 3,\\r\\n\\t\\t\\t\\t\\tmaterialIndex: materialIndex\\r\\n\\t\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( group !== undefined ) {\\r\\n\\r\\n\\t\\t\\tgroup.count = ( i * 3 ) - group.start;\\r\\n\\t\\t\\tgroups.push( group );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.groups = groups;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromGeometry: function ( geometry ) {\\r\\n\\r\\n\\t\\tvar faces = geometry.faces;\\r\\n\\t\\tvar vertices = geometry.vertices;\\r\\n\\t\\tvar faceVertexUvs = geometry.faceVertexUvs;\\r\\n\\r\\n\\t\\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\\r\\n\\t\\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\\r\\n\\r\\n\\t\\t// morphs\\r\\n\\r\\n\\t\\tvar morphTargets = geometry.morphTargets;\\r\\n\\t\\tvar morphTargetsLength = morphTargets.length;\\r\\n\\r\\n\\t\\tvar morphTargetsPosition;\\r\\n\\r\\n\\t\\tif ( morphTargetsLength > 0 ) {\\r\\n\\r\\n\\t\\t\\tmorphTargetsPosition = [];\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tmorphTargetsPosition[ i ] = [];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.morphTargets.position = morphTargetsPosition;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar morphNormals = geometry.morphNormals;\\r\\n\\t\\tvar morphNormalsLength = morphNormals.length;\\r\\n\\r\\n\\t\\tvar morphTargetsNormal;\\r\\n\\r\\n\\t\\tif ( morphNormalsLength > 0 ) {\\r\\n\\r\\n\\t\\t\\tmorphTargetsNormal = [];\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tmorphTargetsNormal[ i ] = [];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.morphTargets.normal = morphTargetsNormal;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// skins\\r\\n\\r\\n\\t\\tvar skinIndices = geometry.skinIndices;\\r\\n\\t\\tvar skinWeights = geometry.skinWeights;\\r\\n\\r\\n\\t\\tvar hasSkinIndices = skinIndices.length === vertices.length;\\r\\n\\t\\tvar hasSkinWeights = skinWeights.length === vertices.length;\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < faces.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar face = faces[ i ];\\r\\n\\r\\n\\t\\t\\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\\r\\n\\r\\n\\t\\t\\tvar vertexNormals = face.vertexNormals;\\r\\n\\r\\n\\t\\t\\tif ( vertexNormals.length === 3 ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tvar normal = face.normal;\\r\\n\\r\\n\\t\\t\\t\\tthis.normals.push( normal, normal, normal );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar vertexColors = face.vertexColors;\\r\\n\\r\\n\\t\\t\\tif ( vertexColors.length === 3 ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tvar color = face.color;\\r\\n\\r\\n\\t\\t\\t\\tthis.colors.push( color, color, color );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( hasFaceVertexUv === true ) {\\r\\n\\r\\n\\t\\t\\t\\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\\r\\n\\r\\n\\t\\t\\t\\tif ( vertexUvs !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( hasFaceVertexUv2 === true ) {\\r\\n\\r\\n\\t\\t\\t\\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\\r\\n\\r\\n\\t\\t\\t\\tif ( vertexUvs !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// morphs\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar morphTarget = morphTargets[ j ].vertices;\\r\\n\\r\\n\\t\\t\\t\\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\\r\\n\\r\\n\\t\\t\\t\\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// skins\\r\\n\\r\\n\\t\\t\\tif ( hasSkinIndices ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( hasSkinWeights ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.computeGroups( geometry );\\r\\n\\r\\n\\t\\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\\r\\n\\t\\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\\r\\n\\t\\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\\r\\n\\t\\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\\r\\n\\t\\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdispose: function () {\\r\\n\\r\\n\\t\\tthis.dispatchEvent( { type: 'dispose' } );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/core/BufferGeometry.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.BufferGeometry = function () {\\r\\n\\r\\n\\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\tthis.name = '';\\r\\n\\tthis.type = 'BufferGeometry';\\r\\n\\r\\n\\tthis.index = null;\\r\\n\\tthis.attributes = {};\\r\\n\\r\\n\\tthis.morphAttributes = {};\\r\\n\\r\\n\\tthis.groups = [];\\r\\n\\r\\n\\tthis.boundingBox = null;\\r\\n\\tthis.boundingSphere = null;\\r\\n\\r\\n\\tthis.drawRange = { start: 0, count: Infinity };\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.BufferGeometry.prototype, THREE.EventDispatcher.prototype, {\\r\\n\\r\\n\\tgetIndex: function () {\\r\\n\\r\\n\\t\\treturn this.index;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetIndex: function ( index ) {\\r\\n\\r\\n\\t\\tthis.index = index;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddAttribute: function ( name, attribute ) {\\r\\n\\r\\n\\t\\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\\r\\n\\r\\n\\t\\t\\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\\r\\n\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( name === 'index' ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\\r\\n\\t\\t\\tthis.setIndex( attribute );\\r\\n\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.attributes[ name ] = attribute;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetAttribute: function ( name ) {\\r\\n\\r\\n\\t\\treturn this.attributes[ name ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tremoveAttribute: function ( name ) {\\r\\n\\r\\n\\t\\tdelete this.attributes[ name ];\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddGroup: function ( start, count, materialIndex ) {\\r\\n\\r\\n\\t\\tthis.groups.push( {\\r\\n\\r\\n\\t\\t\\tstart: start,\\r\\n\\t\\t\\tcount: count,\\r\\n\\t\\t\\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\\r\\n\\r\\n\\t\\t} );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclearGroups: function () {\\r\\n\\r\\n\\t\\tthis.groups = [];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetDrawRange: function ( start, count ) {\\r\\n\\r\\n\\t\\tthis.drawRange.start = start;\\r\\n\\t\\tthis.drawRange.count = count;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tapplyMatrix: function ( matrix ) {\\r\\n\\r\\n\\t\\tvar position = this.attributes.position;\\r\\n\\r\\n\\t\\tif ( position !== undefined ) {\\r\\n\\r\\n\\t\\t\\tmatrix.applyToVector3Array( position.array );\\r\\n\\t\\t\\tposition.needsUpdate = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar normal = this.attributes.normal;\\r\\n\\r\\n\\t\\tif ( normal !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\\r\\n\\r\\n\\t\\t\\tnormalMatrix.applyToVector3Array( normal.array );\\r\\n\\t\\t\\tnormal.needsUpdate = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.boundingBox !== null ) {\\r\\n\\r\\n\\t\\t\\tthis.computeBoundingBox();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.boundingSphere !== null ) {\\r\\n\\r\\n\\t\\t\\tthis.computeBoundingSphere();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\trotateX: function () {\\r\\n\\r\\n\\t\\t// rotate geometry around world x-axis\\r\\n\\r\\n\\t\\tvar m1;\\r\\n\\r\\n\\t\\treturn function rotateX( angle ) {\\r\\n\\r\\n\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tm1.makeRotationX( angle );\\r\\n\\r\\n\\t\\t\\tthis.applyMatrix( m1 );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\trotateY: function () {\\r\\n\\r\\n\\t\\t// rotate geometry around world y-axis\\r\\n\\r\\n\\t\\tvar m1;\\r\\n\\r\\n\\t\\treturn function rotateY( angle ) {\\r\\n\\r\\n\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tm1.makeRotationY( angle );\\r\\n\\r\\n\\t\\t\\tthis.applyMatrix( m1 );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\trotateZ: function () {\\r\\n\\r\\n\\t\\t// rotate geometry around world z-axis\\r\\n\\r\\n\\t\\tvar m1;\\r\\n\\r\\n\\t\\treturn function rotateZ( angle ) {\\r\\n\\r\\n\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tm1.makeRotationZ( angle );\\r\\n\\r\\n\\t\\t\\tthis.applyMatrix( m1 );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\ttranslate: function () {\\r\\n\\r\\n\\t\\t// translate geometry\\r\\n\\r\\n\\t\\tvar m1;\\r\\n\\r\\n\\t\\treturn function translate( x, y, z ) {\\r\\n\\r\\n\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tm1.makeTranslation( x, y, z );\\r\\n\\r\\n\\t\\t\\tthis.applyMatrix( m1 );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tscale: function () {\\r\\n\\r\\n\\t\\t// scale geometry\\r\\n\\r\\n\\t\\tvar m1;\\r\\n\\r\\n\\t\\treturn function scale( x, y, z ) {\\r\\n\\r\\n\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tm1.makeScale( x, y, z );\\r\\n\\r\\n\\t\\t\\tthis.applyMatrix( m1 );\\r\\n\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tlookAt: function () {\\r\\n\\r\\n\\t\\tvar obj;\\r\\n\\r\\n\\t\\treturn function lookAt( vector ) {\\r\\n\\r\\n\\t\\t\\tif ( obj === undefined ) obj = new THREE.Object3D();\\r\\n\\r\\n\\t\\t\\tobj.lookAt( vector );\\r\\n\\r\\n\\t\\t\\tobj.updateMatrix();\\r\\n\\r\\n\\t\\t\\tthis.applyMatrix( obj.matrix );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tcenter: function () {\\r\\n\\r\\n\\t\\tthis.computeBoundingBox();\\r\\n\\r\\n\\t\\tvar offset = this.boundingBox.center().negate();\\r\\n\\r\\n\\t\\tthis.translate( offset.x, offset.y, offset.z );\\r\\n\\r\\n\\t\\treturn offset;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFromObject: function ( object ) {\\r\\n\\r\\n\\t\\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\\r\\n\\r\\n\\t\\tvar geometry = object.geometry;\\r\\n\\r\\n\\t\\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\\r\\n\\r\\n\\t\\t\\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\\r\\n\\t\\t\\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\\r\\n\\r\\n\\t\\t\\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\\r\\n\\t\\t\\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\\r\\n\\r\\n\\t\\t\\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\\r\\n\\r\\n\\t\\t\\t\\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\\r\\n\\r\\n\\t\\t\\t\\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( geometry.boundingSphere !== null ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.boundingSphere = geometry.boundingSphere.clone();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( geometry.boundingBox !== null ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.boundingBox = geometry.boundingBox.clone();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else if ( object instanceof THREE.Mesh ) {\\r\\n\\r\\n\\t\\t\\tif ( geometry instanceof THREE.Geometry ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.fromGeometry( geometry );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdateFromObject: function ( object ) {\\r\\n\\r\\n\\t\\tvar geometry = object.geometry;\\r\\n\\r\\n\\t\\tif ( object instanceof THREE.Mesh ) {\\r\\n\\r\\n\\t\\t\\tvar direct = geometry.__directGeometry;\\r\\n\\r\\n\\t\\t\\tif ( direct === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\treturn this.fromGeometry( geometry );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\\r\\n\\t\\t\\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\\r\\n\\t\\t\\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\\r\\n\\t\\t\\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\\r\\n\\t\\t\\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\\r\\n\\r\\n\\t\\t\\tgeometry.verticesNeedUpdate = false;\\r\\n\\t\\t\\tgeometry.normalsNeedUpdate = false;\\r\\n\\t\\t\\tgeometry.colorsNeedUpdate = false;\\r\\n\\t\\t\\tgeometry.uvsNeedUpdate = false;\\r\\n\\t\\t\\tgeometry.groupsNeedUpdate = false;\\r\\n\\r\\n\\t\\t\\tgeometry = direct;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.verticesNeedUpdate === true ) {\\r\\n\\r\\n\\t\\t\\tvar attribute = this.attributes.position;\\r\\n\\r\\n\\t\\t\\tif ( attribute !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tattribute.copyVector3sArray( geometry.vertices );\\r\\n\\t\\t\\t\\tattribute.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tgeometry.verticesNeedUpdate = false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.normalsNeedUpdate === true ) {\\r\\n\\r\\n\\t\\t\\tvar attribute = this.attributes.normal;\\r\\n\\r\\n\\t\\t\\tif ( attribute !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tattribute.copyVector3sArray( geometry.normals );\\r\\n\\t\\t\\t\\tattribute.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tgeometry.normalsNeedUpdate = false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.colorsNeedUpdate === true ) {\\r\\n\\r\\n\\t\\t\\tvar attribute = this.attributes.color;\\r\\n\\r\\n\\t\\t\\tif ( attribute !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tattribute.copyColorsArray( geometry.colors );\\r\\n\\t\\t\\t\\tattribute.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tgeometry.colorsNeedUpdate = false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.uvsNeedUpdate ) {\\r\\n\\r\\n\\t\\t\\tvar attribute = this.attributes.uv;\\r\\n\\r\\n\\t\\t\\tif ( attribute !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tattribute.copyVector2sArray( geometry.uvs );\\r\\n\\t\\t\\t\\tattribute.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tgeometry.uvsNeedUpdate = false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.lineDistancesNeedUpdate ) {\\r\\n\\r\\n\\t\\t\\tvar attribute = this.attributes.lineDistance;\\r\\n\\r\\n\\t\\t\\tif ( attribute !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tattribute.copyArray( geometry.lineDistances );\\r\\n\\t\\t\\t\\tattribute.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tgeometry.lineDistancesNeedUpdate = false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.groupsNeedUpdate ) {\\r\\n\\r\\n\\t\\t\\tgeometry.computeGroups( object.geometry );\\r\\n\\t\\t\\tthis.groups = geometry.groups;\\r\\n\\r\\n\\t\\t\\tgeometry.groupsNeedUpdate = false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromGeometry: function ( geometry ) {\\r\\n\\r\\n\\t\\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\\r\\n\\r\\n\\t\\treturn this.fromDirectGeometry( geometry.__directGeometry );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfromDirectGeometry: function ( geometry ) {\\r\\n\\r\\n\\t\\tvar positions = new Float32Array( geometry.vertices.length * 3 );\\r\\n\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\\r\\n\\r\\n\\t\\tif ( geometry.normals.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tvar normals = new Float32Array( geometry.normals.length * 3 );\\r\\n\\t\\t\\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.colors.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tvar colors = new Float32Array( geometry.colors.length * 3 );\\r\\n\\t\\t\\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.uvs.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\\r\\n\\t\\t\\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.uvs2.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\\r\\n\\t\\t\\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.indices.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\\r\\n\\t\\t\\tvar indices = new TypeArray( geometry.indices.length * 3 );\\r\\n\\t\\t\\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// groups\\r\\n\\r\\n\\t\\tthis.groups = geometry.groups;\\r\\n\\r\\n\\t\\t// morphs\\r\\n\\r\\n\\t\\tfor ( var name in geometry.morphTargets ) {\\r\\n\\r\\n\\t\\t\\tvar array = [];\\r\\n\\t\\t\\tvar morphTargets = geometry.morphTargets[ name ];\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar morphTarget = morphTargets[ i ];\\r\\n\\r\\n\\t\\t\\t\\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\\r\\n\\r\\n\\t\\t\\t\\tarray.push( attribute.copyVector3sArray( morphTarget ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.morphAttributes[ name ] = array;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// skinning\\r\\n\\r\\n\\t\\tif ( geometry.skinIndices.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\\r\\n\\t\\t\\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.skinWeights.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\\r\\n\\t\\t\\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tif ( geometry.boundingSphere !== null ) {\\r\\n\\r\\n\\t\\t\\tthis.boundingSphere = geometry.boundingSphere.clone();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry.boundingBox !== null ) {\\r\\n\\r\\n\\t\\t\\tthis.boundingBox = geometry.boundingBox.clone();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcomputeBoundingBox: function () {\\r\\n\\r\\n\\t\\tif ( this.boundingBox === null ) {\\r\\n\\r\\n\\t\\t\\tthis.boundingBox = new THREE.Box3();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar positions = this.attributes.position.array;\\r\\n\\r\\n\\t\\tif ( positions !== undefined ) {\\r\\n\\r\\n\\t\\t\\tthis.boundingBox.setFromArray( positions );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.boundingBox.makeEmpty();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \\\"position\\\" attribute is likely to have NaN values.', this );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcomputeBoundingSphere: function () {\\r\\n\\r\\n\\t\\tvar box = new THREE.Box3();\\r\\n\\t\\tvar vector = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function computeBoundingSphere() {\\r\\n\\r\\n\\t\\t\\tif ( this.boundingSphere === null ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.boundingSphere = new THREE.Sphere();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar positions = this.attributes.position;\\r\\n\\r\\n\\t\\t\\tif ( positions ) {\\r\\n\\r\\n\\t\\t\\t\\tvar array = positions.array;\\r\\n\\t\\t\\t\\tvar center = this.boundingSphere.center;\\r\\n\\r\\n\\t\\t\\t\\tbox.setFromArray( array );\\r\\n\\t\\t\\t\\tbox.center( center );\\r\\n\\r\\n\\t\\t\\t\\t// hoping to find a boundingSphere with a radius smaller than the\\r\\n\\t\\t\\t\\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\\r\\n\\r\\n\\t\\t\\t\\tvar maxRadiusSq = 0;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, il = array.length; i < il; i += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvector.fromArray( array, i );\\r\\n\\t\\t\\t\\t\\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\\r\\n\\r\\n\\t\\t\\t\\tif ( isNaN( this.boundingSphere.radius ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \\\"position\\\" attribute is likely to have NaN values.', this );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\tcomputeFaceNormals: function () {\\r\\n\\r\\n\\t\\t// backwards compatibility\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcomputeVertexNormals: function () {\\r\\n\\r\\n\\t\\tvar index = this.index;\\r\\n\\t\\tvar attributes = this.attributes;\\r\\n\\t\\tvar groups = this.groups;\\r\\n\\r\\n\\t\\tif ( attributes.position ) {\\r\\n\\r\\n\\t\\t\\tvar positions = attributes.position.array;\\r\\n\\r\\n\\t\\t\\tif ( attributes.normal === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// reset existing normals to zero\\r\\n\\r\\n\\t\\t\\t\\tvar array = attributes.normal.array;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tarray[ i ] = 0;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar normals = attributes.normal.array;\\r\\n\\r\\n\\t\\t\\tvar vA, vB, vC,\\r\\n\\r\\n\\t\\t\\tpA = new THREE.Vector3(),\\r\\n\\t\\t\\tpB = new THREE.Vector3(),\\r\\n\\t\\t\\tpC = new THREE.Vector3(),\\r\\n\\r\\n\\t\\t\\tcb = new THREE.Vector3(),\\r\\n\\t\\t\\tab = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\t// indexed elements\\r\\n\\r\\n\\t\\t\\tif ( index ) {\\r\\n\\r\\n\\t\\t\\t\\tvar indices = index.array;\\r\\n\\r\\n\\t\\t\\t\\tif ( groups.length === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.addGroup( 0, indices.length );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar group = groups[ j ];\\r\\n\\r\\n\\t\\t\\t\\t\\tvar start = group.start;\\r\\n\\t\\t\\t\\t\\tvar count = group.count;\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvA = indices[ i + 0 ] * 3;\\r\\n\\t\\t\\t\\t\\t\\tvB = indices[ i + 1 ] * 3;\\r\\n\\t\\t\\t\\t\\t\\tvC = indices[ i + 2 ] * 3;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tpA.fromArray( positions, vA );\\r\\n\\t\\t\\t\\t\\t\\tpB.fromArray( positions, vB );\\r\\n\\t\\t\\t\\t\\t\\tpC.fromArray( positions, vC );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tcb.subVectors( pC, pB );\\r\\n\\t\\t\\t\\t\\t\\tab.subVectors( pA, pB );\\r\\n\\t\\t\\t\\t\\t\\tcb.cross( ab );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tnormals[ vA ] += cb.x;\\r\\n\\t\\t\\t\\t\\t\\tnormals[ vA + 1 ] += cb.y;\\r\\n\\t\\t\\t\\t\\t\\tnormals[ vA + 2 ] += cb.z;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tnormals[ vB ] += cb.x;\\r\\n\\t\\t\\t\\t\\t\\tnormals[ vB + 1 ] += cb.y;\\r\\n\\t\\t\\t\\t\\t\\tnormals[ vB + 2 ] += cb.z;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tnormals[ vC ] += cb.x;\\r\\n\\t\\t\\t\\t\\t\\tnormals[ vC + 1 ] += cb.y;\\r\\n\\t\\t\\t\\t\\t\\tnormals[ vC + 2 ] += cb.z;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// non-indexed elements (unconnected triangle soup)\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tpA.fromArray( positions, i );\\r\\n\\t\\t\\t\\t\\tpB.fromArray( positions, i + 3 );\\r\\n\\t\\t\\t\\t\\tpC.fromArray( positions, i + 6 );\\r\\n\\r\\n\\t\\t\\t\\t\\tcb.subVectors( pC, pB );\\r\\n\\t\\t\\t\\t\\tab.subVectors( pA, pB );\\r\\n\\t\\t\\t\\t\\tcb.cross( ab );\\r\\n\\r\\n\\t\\t\\t\\t\\tnormals[ i ] = cb.x;\\r\\n\\t\\t\\t\\t\\tnormals[ i + 1 ] = cb.y;\\r\\n\\t\\t\\t\\t\\tnormals[ i + 2 ] = cb.z;\\r\\n\\r\\n\\t\\t\\t\\t\\tnormals[ i + 3 ] = cb.x;\\r\\n\\t\\t\\t\\t\\tnormals[ i + 4 ] = cb.y;\\r\\n\\t\\t\\t\\t\\tnormals[ i + 5 ] = cb.z;\\r\\n\\r\\n\\t\\t\\t\\t\\tnormals[ i + 6 ] = cb.x;\\r\\n\\t\\t\\t\\t\\tnormals[ i + 7 ] = cb.y;\\r\\n\\t\\t\\t\\t\\tnormals[ i + 8 ] = cb.z;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.normalizeNormals();\\r\\n\\r\\n\\t\\t\\tattributes.normal.needsUpdate = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmerge: function ( geometry, offset ) {\\r\\n\\r\\n\\t\\tif ( geometry instanceof THREE.BufferGeometry === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( offset === undefined ) offset = 0;\\r\\n\\r\\n\\t\\tvar attributes = this.attributes;\\r\\n\\r\\n\\t\\tfor ( var key in attributes ) {\\r\\n\\r\\n\\t\\t\\tif ( geometry.attributes[ key ] === undefined ) continue;\\r\\n\\r\\n\\t\\t\\tvar attribute1 = attributes[ key ];\\r\\n\\t\\t\\tvar attributeArray1 = attribute1.array;\\r\\n\\r\\n\\t\\t\\tvar attribute2 = geometry.attributes[ key ];\\r\\n\\t\\t\\tvar attributeArray2 = attribute2.array;\\r\\n\\r\\n\\t\\t\\tvar attributeSize = attribute2.itemSize;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tattributeArray1[ j ] = attributeArray2[ i ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnormalizeNormals: function () {\\r\\n\\r\\n\\t\\tvar normals = this.attributes.normal.array;\\r\\n\\r\\n\\t\\tvar x, y, z, n;\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\\r\\n\\r\\n\\t\\t\\tx = normals[ i ];\\r\\n\\t\\t\\ty = normals[ i + 1 ];\\r\\n\\t\\t\\tz = normals[ i + 2 ];\\r\\n\\r\\n\\t\\t\\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\\r\\n\\r\\n\\t\\t\\tnormals[ i ] *= n;\\r\\n\\t\\t\\tnormals[ i + 1 ] *= n;\\r\\n\\t\\t\\tnormals[ i + 2 ] *= n;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoNonIndexed: function () {\\r\\n\\r\\n\\t\\tif ( this.index === null ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar geometry2 = new THREE.BufferGeometry();\\r\\n\\r\\n\\t\\tvar indices = this.index.array;\\r\\n\\t\\tvar attributes = this.attributes;\\r\\n\\r\\n\\t\\tfor ( var name in attributes ) {\\r\\n\\r\\n\\t\\t\\tvar attribute = attributes[ name ];\\r\\n\\r\\n\\t\\t\\tvar array = attribute.array;\\r\\n\\t\\t\\tvar itemSize = attribute.itemSize;\\r\\n\\r\\n\\t\\t\\tvar array2 = new array.constructor( indices.length * itemSize );\\r\\n\\r\\n\\t\\t\\tvar index = 0, index2 = 0;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tindex = indices[ i ] * itemSize;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 0; j < itemSize; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tarray2[ index2 ++ ] = array[ index ++ ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tgeometry2.addAttribute( name, new THREE.BufferAttribute( array2, itemSize ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn geometry2;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoJSON: function () {\\r\\n\\r\\n\\t\\tvar data = {\\r\\n\\t\\t\\tmetadata: {\\r\\n\\t\\t\\t\\tversion: 4.4,\\r\\n\\t\\t\\t\\ttype: 'BufferGeometry',\\r\\n\\t\\t\\t\\tgenerator: 'BufferGeometry.toJSON'\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// standard BufferGeometry serialization\\r\\n\\r\\n\\t\\tdata.uuid = this.uuid;\\r\\n\\t\\tdata.type = this.type;\\r\\n\\t\\tif ( this.name !== '' ) data.name = this.name;\\r\\n\\r\\n\\t\\tif ( this.parameters !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar parameters = this.parameters;\\r\\n\\r\\n\\t\\t\\tfor ( var key in parameters ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn data;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tdata.data = { attributes: {} };\\r\\n\\r\\n\\t\\tvar index = this.index;\\r\\n\\r\\n\\t\\tif ( index !== null ) {\\r\\n\\r\\n\\t\\t\\tvar array = Array.prototype.slice.call( index.array );\\r\\n\\r\\n\\t\\t\\tdata.data.index = {\\r\\n\\t\\t\\t\\ttype: index.array.constructor.name,\\r\\n\\t\\t\\t\\tarray: array\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar attributes = this.attributes;\\r\\n\\r\\n\\t\\tfor ( var key in attributes ) {\\r\\n\\r\\n\\t\\t\\tvar attribute = attributes[ key ];\\r\\n\\r\\n\\t\\t\\tvar array = Array.prototype.slice.call( attribute.array );\\r\\n\\r\\n\\t\\t\\tdata.data.attributes[ key ] = {\\r\\n\\t\\t\\t\\titemSize: attribute.itemSize,\\r\\n\\t\\t\\t\\ttype: attribute.array.constructor.name,\\r\\n\\t\\t\\t\\tarray: array,\\r\\n\\t\\t\\t\\tnormalized: attribute.normalized\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar groups = this.groups;\\r\\n\\r\\n\\t\\tif ( groups.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar boundingSphere = this.boundingSphere;\\r\\n\\r\\n\\t\\tif ( boundingSphere !== null ) {\\r\\n\\r\\n\\t\\t\\tdata.data.boundingSphere = {\\r\\n\\t\\t\\t\\tcenter: boundingSphere.center.toArray(),\\r\\n\\t\\t\\t\\tradius: boundingSphere.radius\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn data;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\t/*\\r\\n\\t\\t// Handle primitives\\r\\n\\r\\n\\t\\tvar parameters = this.parameters;\\r\\n\\r\\n\\t\\tif ( parameters !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar values = [];\\r\\n\\r\\n\\t\\t\\tfor ( var key in parameters ) {\\r\\n\\r\\n\\t\\t\\t\\tvalues.push( parameters[ key ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar geometry = Object.create( this.constructor.prototype );\\r\\n\\t\\t\\tthis.constructor.apply( geometry, values );\\r\\n\\t\\t\\treturn geometry;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\t\\t*/\\r\\n\\r\\n\\t\\treturn new THREE.BufferGeometry().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tvar index = source.index;\\r\\n\\r\\n\\t\\tif ( index !== null ) {\\r\\n\\r\\n\\t\\t\\tthis.setIndex( index.clone() );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar attributes = source.attributes;\\r\\n\\r\\n\\t\\tfor ( var name in attributes ) {\\r\\n\\r\\n\\t\\t\\tvar attribute = attributes[ name ];\\r\\n\\t\\t\\tthis.addAttribute( name, attribute.clone() );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar groups = source.groups;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar group = groups[ i ];\\r\\n\\t\\t\\tthis.addGroup( group.start, group.count, group.materialIndex );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdispose: function () {\\r\\n\\r\\n\\t\\tthis.dispatchEvent( { type: 'dispose' } );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\nTHREE.BufferGeometry.MaxIndex = 65535;\\r\\n\\r\\n// File:src/core/InstancedBufferGeometry.js\\r\\n\\r\\n/**\\r\\n * @author benaadams / https://twitter.com/ben_a_adams\\r\\n */\\r\\n\\r\\nTHREE.InstancedBufferGeometry = function () {\\r\\n\\r\\n\\tTHREE.BufferGeometry.call( this );\\r\\n\\r\\n\\tthis.type = 'InstancedBufferGeometry';\\r\\n\\tthis.maxInstancedCount = undefined;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\\r\\n\\r\\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\\r\\n\\r\\n\\tthis.groups.push( {\\r\\n\\r\\n\\t\\tstart: start,\\r\\n\\t\\tcount: count,\\r\\n\\t\\tinstances: instances\\r\\n\\r\\n\\t} );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tvar index = source.index;\\r\\n\\r\\n\\tif ( index !== null ) {\\r\\n\\r\\n\\t\\tthis.setIndex( index.clone() );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar attributes = source.attributes;\\r\\n\\r\\n\\tfor ( var name in attributes ) {\\r\\n\\r\\n\\t\\tvar attribute = attributes[ name ];\\r\\n\\t\\tthis.addAttribute( name, attribute.clone() );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar groups = source.groups;\\r\\n\\r\\n\\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\tvar group = groups[ i ];\\r\\n\\t\\tthis.addGroup( group.start, group.count, group.instances );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/core/Uniform.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.Uniform = function ( value ) {\\r\\n\\r\\n\\tif ( typeof value === 'string' ) {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\\r\\n\\t\\tvalue = arguments[ 1 ];\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.value = value;\\r\\n\\r\\n\\tthis.dynamic = false;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Uniform.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Uniform,\\r\\n\\r\\n\\tonUpdate: function ( callback ) {\\r\\n\\r\\n\\t\\tthis.dynamic = true;\\r\\n\\t\\tthis.onUpdateCallback = callback;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/animation/AnimationAction.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * Action provided by AnimationMixer for scheduling clip playback on specific\\r\\n * objects.\\r\\n *\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n * @author tschw\\r\\n *\\r\\n */\\r\\n\\r\\nTHREE.AnimationAction = function() {\\r\\n\\r\\n\\tthrow new Error( \\\"THREE.AnimationAction: \\\" +\\r\\n\\t\\t\\t\\\"Use mixer.clipAction for construction.\\\" );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.AnimationAction._new =\\r\\n\\t\\tfunction AnimationAction( mixer, clip, localRoot ) {\\r\\n\\r\\n\\tthis._mixer = mixer;\\r\\n\\tthis._clip = clip;\\r\\n\\tthis._localRoot = localRoot || null;\\r\\n\\r\\n\\tvar tracks = clip.tracks,\\r\\n\\t\\tnTracks = tracks.length,\\r\\n\\t\\tinterpolants = new Array( nTracks );\\r\\n\\r\\n\\tvar interpolantSettings = {\\r\\n\\t\\t\\tendingStart: \\tTHREE.ZeroCurvatureEnding,\\r\\n\\t\\t\\tendingEnd:\\t\\tTHREE.ZeroCurvatureEnding\\r\\n\\t};\\r\\n\\r\\n\\tfor ( var i = 0; i !== nTracks; ++ i ) {\\r\\n\\r\\n\\t\\tvar interpolant = tracks[ i ].createInterpolant( null );\\r\\n\\t\\tinterpolants[ i ] = interpolant;\\r\\n\\t\\tinterpolant.settings = interpolantSettings;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis._interpolantSettings = interpolantSettings;\\r\\n\\r\\n\\tthis._interpolants = interpolants;\\t// bound by the mixer\\r\\n\\r\\n\\t// inside: PropertyMixer (managed by the mixer)\\r\\n\\tthis._propertyBindings = new Array( nTracks );\\r\\n\\r\\n\\tthis._cacheIndex = null;\\t\\t\\t// for the memory manager\\r\\n\\tthis._byClipCacheIndex = null;\\t\\t// for the memory manager\\r\\n\\r\\n\\tthis._timeScaleInterpolant = null;\\r\\n\\tthis._weightInterpolant = null;\\r\\n\\r\\n\\tthis.loop = THREE.LoopRepeat;\\r\\n\\tthis._loopCount = -1;\\r\\n\\r\\n\\t// global mixer time when the action is to be started\\r\\n\\t// it's set back to 'null' upon start of the action\\r\\n\\tthis._startTime = null;\\r\\n\\r\\n\\t// scaled local time of the action\\r\\n\\t// gets clamped or wrapped to 0..clip.duration according to loop\\r\\n\\tthis.time = 0;\\r\\n\\r\\n\\tthis.timeScale = 1;\\r\\n\\tthis._effectiveTimeScale = 1;\\r\\n\\r\\n\\tthis.weight = 1;\\r\\n\\tthis._effectiveWeight = 1;\\r\\n\\r\\n\\tthis.repetitions = Infinity; \\t\\t// no. of repetitions when looping\\r\\n\\r\\n\\tthis.paused = false;\\t\\t\\t\\t// false -> zero effective time scale\\r\\n\\tthis.enabled = true;\\t\\t\\t\\t// true -> zero effective weight\\r\\n\\r\\n\\tthis.clampWhenFinished \\t= false;\\t// keep feeding the last frame?\\r\\n\\r\\n\\tthis.zeroSlopeAtStart \\t= true;\\t\\t// for smooth interpolation w/o separate\\r\\n\\tthis.zeroSlopeAtEnd\\t\\t= true;\\t\\t// clips for start, loop and end\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.AnimationAction._new.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.AnimationAction._new,\\r\\n\\r\\n\\t// State & Scheduling\\r\\n\\r\\n\\tplay: function() {\\r\\n\\r\\n\\t\\tthis._mixer._activateAction( this );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tstop: function() {\\r\\n\\r\\n\\t\\tthis._mixer._deactivateAction( this );\\r\\n\\r\\n\\t\\treturn this.reset();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\treset: function() {\\r\\n\\r\\n\\t\\tthis.paused = false;\\r\\n\\t\\tthis.enabled = true;\\r\\n\\r\\n\\t\\tthis.time = 0;\\t\\t\\t// restart clip\\r\\n\\t\\tthis._loopCount = -1;\\t// forget previous loops\\r\\n\\t\\tthis._startTime = null;\\t// forget scheduling\\r\\n\\r\\n\\t\\treturn this.stopFading().stopWarping();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tisRunning: function() {\\r\\n\\r\\n\\t\\tvar start = this._startTime;\\r\\n\\r\\n\\t\\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\\r\\n\\t\\t\\t\\tthis._startTime === null && this._mixer._isActiveAction( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// return true when play has been called\\r\\n\\tisScheduled: function() {\\r\\n\\r\\n\\t\\treturn this._mixer._isActiveAction( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tstartAt: function( time ) {\\r\\n\\r\\n\\t\\tthis._startTime = time;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetLoop: function( mode, repetitions ) {\\r\\n\\r\\n\\t\\tthis.loop = mode;\\r\\n\\t\\tthis.repetitions = repetitions;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Weight\\r\\n\\r\\n\\t// set the weight stopping any scheduled fading\\r\\n\\t// although .enabled = false yields an effective weight of zero, this\\r\\n\\t// method does *not* change .enabled, because it would be confusing\\r\\n\\tsetEffectiveWeight: function( weight ) {\\r\\n\\r\\n\\t\\tthis.weight = weight;\\r\\n\\r\\n\\t\\t// note: same logic as when updated at runtime\\r\\n\\t\\tthis._effectiveWeight = this.enabled ? weight : 0;\\r\\n\\r\\n\\t\\treturn this.stopFading();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// return the weight considering fading and .enabled\\r\\n\\tgetEffectiveWeight: function() {\\r\\n\\r\\n\\t\\treturn this._effectiveWeight;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfadeIn: function( duration ) {\\r\\n\\r\\n\\t\\treturn this._scheduleFading( duration, 0, 1 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfadeOut: function( duration ) {\\r\\n\\r\\n\\t\\treturn this._scheduleFading( duration, 1, 0 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\\r\\n\\r\\n\\t\\tvar mixer = this._mixer;\\r\\n\\r\\n\\t\\tfadeOutAction.fadeOut( duration );\\r\\n\\t\\tthis.fadeIn( duration );\\r\\n\\r\\n\\t\\tif( warp ) {\\r\\n\\r\\n\\t\\t\\tvar fadeInDuration = this._clip.duration,\\r\\n\\t\\t\\t\\tfadeOutDuration = fadeOutAction._clip.duration,\\r\\n\\r\\n\\t\\t\\t\\tstartEndRatio = fadeOutDuration / fadeInDuration,\\r\\n\\t\\t\\t\\tendStartRatio = fadeInDuration / fadeOutDuration;\\r\\n\\r\\n\\t\\t\\tfadeOutAction.warp( 1.0, startEndRatio, duration );\\r\\n\\t\\t\\tthis.warp( endStartRatio, 1.0, duration );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcrossFadeTo: function( fadeInAction, duration, warp ) {\\r\\n\\r\\n\\t\\treturn fadeInAction.crossFadeFrom( this, duration, warp );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tstopFading: function() {\\r\\n\\r\\n\\t\\tvar weightInterpolant = this._weightInterpolant;\\r\\n\\r\\n\\t\\tif ( weightInterpolant !== null ) {\\r\\n\\r\\n\\t\\t\\tthis._weightInterpolant = null;\\r\\n\\t\\t\\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Time Scale Control\\r\\n\\r\\n\\t// set the weight stopping any scheduled warping\\r\\n\\t// although .paused = true yields an effective time scale of zero, this\\r\\n\\t// method does *not* change .paused, because it would be confusing\\r\\n\\tsetEffectiveTimeScale: function( timeScale ) {\\r\\n\\r\\n\\t\\tthis.timeScale = timeScale;\\r\\n\\t\\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\\r\\n\\r\\n\\t\\treturn this.stopWarping();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// return the time scale considering warping and .paused\\r\\n\\tgetEffectiveTimeScale: function() {\\r\\n\\r\\n\\t\\treturn this._effectiveTimeScale;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetDuration: function( duration ) {\\r\\n\\r\\n\\t\\tthis.timeScale = this._clip.duration / duration;\\r\\n\\r\\n\\t\\treturn this.stopWarping();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsyncWith: function( action ) {\\r\\n\\r\\n\\t\\tthis.time = action.time;\\r\\n\\t\\tthis.timeScale = action.timeScale;\\r\\n\\r\\n\\t\\treturn this.stopWarping();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\thalt: function( duration ) {\\r\\n\\r\\n\\t\\treturn this.warp( this._effectiveTimeScale, 0, duration );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\twarp: function( startTimeScale, endTimeScale, duration ) {\\r\\n\\r\\n\\t\\tvar mixer = this._mixer, now = mixer.time,\\r\\n\\t\\t\\tinterpolant = this._timeScaleInterpolant,\\r\\n\\r\\n\\t\\t\\ttimeScale = this.timeScale;\\r\\n\\r\\n\\t\\tif ( interpolant === null ) {\\r\\n\\r\\n\\t\\t\\tinterpolant = mixer._lendControlInterpolant(),\\r\\n\\t\\t\\tthis._timeScaleInterpolant = interpolant;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar times = interpolant.parameterPositions,\\r\\n\\t\\t\\tvalues = interpolant.sampleValues;\\r\\n\\r\\n\\t\\ttimes[ 0 ] = now;\\r\\n\\t\\ttimes[ 1 ] = now + duration;\\r\\n\\r\\n\\t\\tvalues[ 0 ] = startTimeScale / timeScale;\\r\\n\\t\\tvalues[ 1 ] = endTimeScale / timeScale;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tstopWarping: function() {\\r\\n\\r\\n\\t\\tvar timeScaleInterpolant = this._timeScaleInterpolant;\\r\\n\\r\\n\\t\\tif ( timeScaleInterpolant !== null ) {\\r\\n\\r\\n\\t\\t\\tthis._timeScaleInterpolant = null;\\r\\n\\t\\t\\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Object Accessors\\r\\n\\r\\n\\tgetMixer: function() {\\r\\n\\r\\n\\t\\treturn this._mixer;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetClip: function() {\\r\\n\\r\\n\\t\\treturn this._clip;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetRoot: function() {\\r\\n\\r\\n\\t\\treturn this._localRoot || this._mixer._root;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Interna\\r\\n\\r\\n\\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\\r\\n\\t\\t// called by the mixer\\r\\n\\r\\n\\t\\tvar startTime = this._startTime;\\r\\n\\r\\n\\t\\tif ( startTime !== null ) {\\r\\n\\r\\n\\t\\t\\t// check for scheduled start of action\\r\\n\\r\\n\\t\\t\\tvar timeRunning = ( time - startTime ) * timeDirection;\\r\\n\\t\\t\\tif ( timeRunning < 0 || timeDirection === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\treturn; // yet to come / don't decide when delta = 0\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// start\\r\\n\\r\\n\\t\\t\\tthis._startTime = null; // unschedule\\r\\n\\t\\t\\tdeltaTime = timeDirection * timeRunning;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// apply time scale and advance time\\r\\n\\r\\n\\t\\tdeltaTime *= this._updateTimeScale( time );\\r\\n\\t\\tvar clipTime = this._updateTime( deltaTime );\\r\\n\\r\\n\\t\\t// note: _updateTime may disable the action resulting in\\r\\n\\t\\t// an effective weight of 0\\r\\n\\r\\n\\t\\tvar weight = this._updateWeight( time );\\r\\n\\r\\n\\t\\tif ( weight > 0 ) {\\r\\n\\r\\n\\t\\t\\tvar interpolants = this._interpolants;\\r\\n\\t\\t\\tvar propertyMixers = this._propertyBindings;\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\\r\\n\\r\\n\\t\\t\\t\\tinterpolants[ j ].evaluate( clipTime );\\r\\n\\t\\t\\t\\tpropertyMixers[ j ].accumulate( accuIndex, weight );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_updateWeight: function( time ) {\\r\\n\\r\\n\\t\\tvar weight = 0;\\r\\n\\r\\n\\t\\tif ( this.enabled ) {\\r\\n\\r\\n\\t\\t\\tweight = this.weight;\\r\\n\\t\\t\\tvar interpolant = this._weightInterpolant;\\r\\n\\r\\n\\t\\t\\tif ( interpolant !== null ) {\\r\\n\\r\\n\\t\\t\\t\\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\\r\\n\\r\\n\\t\\t\\t\\tweight *= interpolantValue;\\r\\n\\r\\n\\t\\t\\t\\tif ( time > interpolant.parameterPositions[ 1 ] ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.stopFading();\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( interpolantValue === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// faded out, disable\\r\\n\\t\\t\\t\\t\\t\\tthis.enabled = false;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis._effectiveWeight = weight;\\r\\n\\t\\treturn weight;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_updateTimeScale: function( time ) {\\r\\n\\r\\n\\t\\tvar timeScale = 0;\\r\\n\\r\\n\\t\\tif ( ! this.paused ) {\\r\\n\\r\\n\\t\\t\\ttimeScale = this.timeScale;\\r\\n\\r\\n\\t\\t\\tvar interpolant = this._timeScaleInterpolant;\\r\\n\\r\\n\\t\\t\\tif ( interpolant !== null ) {\\r\\n\\r\\n\\t\\t\\t\\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\\r\\n\\r\\n\\t\\t\\t\\ttimeScale *= interpolantValue;\\r\\n\\r\\n\\t\\t\\t\\tif ( time > interpolant.parameterPositions[ 1 ] ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.stopWarping();\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( timeScale === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// motion has halted, pause\\r\\n\\t\\t\\t\\t\\t\\tthis.paused = true;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// warp done - apply final time scale\\r\\n\\t\\t\\t\\t\\t\\tthis.timeScale = timeScale;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis._effectiveTimeScale = timeScale;\\r\\n\\t\\treturn timeScale;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_updateTime: function( deltaTime ) {\\r\\n\\r\\n\\t\\tvar time = this.time + deltaTime;\\r\\n\\r\\n\\t\\tif ( deltaTime === 0 ) return time;\\r\\n\\r\\n\\t\\tvar duration = this._clip.duration,\\r\\n\\r\\n\\t\\t\\tloop = this.loop,\\r\\n\\t\\t\\tloopCount = this._loopCount;\\r\\n\\r\\n\\t\\tif ( loop === THREE.LoopOnce ) {\\r\\n\\r\\n\\t\\t\\tif ( loopCount === -1 ) {\\r\\n\\t\\t\\t\\t// just started\\r\\n\\r\\n\\t\\t\\t\\tthis.loopCount = 0;\\r\\n\\t\\t\\t\\tthis._setEndings( true, true, false );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\thandle_stop: {\\r\\n\\r\\n\\t\\t\\t\\tif ( time >= duration ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttime = duration;\\r\\n\\r\\n\\t\\t\\t\\t} else if ( time < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttime = 0;\\r\\n\\r\\n\\t\\t\\t\\t} else break handle_stop;\\r\\n\\r\\n\\t\\t\\t\\tif ( this.clampWhenFinished ) this.paused = true;\\r\\n\\t\\t\\t\\telse this.enabled = false;\\r\\n\\r\\n\\t\\t\\t\\tthis._mixer.dispatchEvent( {\\r\\n\\t\\t\\t\\t\\ttype: 'finished', action: this,\\r\\n\\t\\t\\t\\t\\tdirection: deltaTime < 0 ? -1 : 1\\r\\n\\t\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else { // repetitive Repeat or PingPong\\r\\n\\r\\n\\t\\t\\tvar pingPong = ( loop === THREE.LoopPingPong );\\r\\n\\r\\n\\t\\t\\tif ( loopCount === -1 ) {\\r\\n\\t\\t\\t\\t// just started\\r\\n\\r\\n\\t\\t\\t\\tif ( deltaTime >= 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tloopCount = 0;\\r\\n\\r\\n\\t\\t\\t\\t\\tthis._setEndings(\\r\\n\\t\\t\\t\\t\\t\\t\\ttrue, this.repetitions === 0, pingPong );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t// when looping in reverse direction, the initial\\r\\n\\t\\t\\t\\t\\t// transition through zero counts as a repetition,\\r\\n\\t\\t\\t\\t\\t// so leave loopCount at -1\\r\\n\\r\\n\\t\\t\\t\\t\\tthis._setEndings(\\r\\n\\t\\t\\t\\t\\t\\t\\tthis.repetitions === 0, true, pingPong );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( time >= duration || time < 0 ) {\\r\\n\\t\\t\\t\\t// wrap around\\r\\n\\r\\n\\t\\t\\t\\tvar loopDelta = Math.floor( time / duration ); // signed\\r\\n\\t\\t\\t\\ttime -= duration * loopDelta;\\r\\n\\r\\n\\t\\t\\t\\tloopCount += Math.abs( loopDelta );\\r\\n\\r\\n\\t\\t\\t\\tvar pending = this.repetitions - loopCount;\\r\\n\\r\\n\\t\\t\\t\\tif ( pending < 0 ) {\\r\\n\\t\\t\\t\\t\\t// have to stop (switch state, clamp time, fire event)\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( this.clampWhenFinished ) this.paused = true;\\r\\n\\t\\t\\t\\t\\telse this.enabled = false;\\r\\n\\r\\n\\t\\t\\t\\t\\ttime = deltaTime > 0 ? duration : 0;\\r\\n\\r\\n\\t\\t\\t\\t\\tthis._mixer.dispatchEvent( {\\r\\n\\t\\t\\t\\t\\t\\ttype: 'finished', action: this,\\r\\n\\t\\t\\t\\t\\t\\tdirection: deltaTime > 0 ? 1 : -1\\r\\n\\t\\t\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t// keep running\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( pending === 0 ) {\\r\\n\\t\\t\\t\\t\\t\\t// entering the last round\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar atStart = deltaTime < 0;\\r\\n\\t\\t\\t\\t\\t\\tthis._setEndings( atStart, ! atStart, pingPong );\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tthis._setEndings( false, false, pingPong );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tthis._loopCount = loopCount;\\r\\n\\r\\n\\t\\t\\t\\t\\tthis._mixer.dispatchEvent( {\\r\\n\\t\\t\\t\\t\\t\\ttype: 'loop', action: this, loopDelta: loopDelta\\r\\n\\t\\t\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\\r\\n\\t\\t\\t\\t// invert time for the \\\"pong round\\\"\\r\\n\\r\\n\\t\\t\\t\\tthis.time = time;\\r\\n\\t\\t\\t\\treturn duration - time;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.time = time;\\r\\n\\t\\treturn time;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_setEndings: function( atStart, atEnd, pingPong ) {\\r\\n\\r\\n\\t\\tvar settings = this._interpolantSettings;\\r\\n\\r\\n\\t\\tif ( pingPong ) {\\r\\n\\r\\n\\t\\t\\tsettings.endingStart \\t= THREE.ZeroSlopeEnding;\\r\\n\\t\\t\\tsettings.endingEnd\\t\\t= THREE.ZeroSlopeEnding;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// assuming for LoopOnce atStart == atEnd == true\\r\\n\\r\\n\\t\\t\\tif ( atStart ) {\\r\\n\\r\\n\\t\\t\\t\\tsettings.endingStart = this.zeroSlopeAtStart ?\\r\\n\\t\\t\\t\\t\\t\\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tsettings.endingStart = THREE.WrapAroundEnding;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( atEnd ) {\\r\\n\\r\\n\\t\\t\\t\\tsettings.endingEnd = this.zeroSlopeAtEnd ?\\r\\n\\t\\t\\t\\t\\t\\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tsettings.endingEnd \\t = THREE.WrapAroundEnding;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_scheduleFading: function( duration, weightNow, weightThen ) {\\r\\n\\r\\n\\t\\tvar mixer = this._mixer, now = mixer.time,\\r\\n\\t\\t\\tinterpolant = this._weightInterpolant;\\r\\n\\r\\n\\t\\tif ( interpolant === null ) {\\r\\n\\r\\n\\t\\t\\tinterpolant = mixer._lendControlInterpolant(),\\r\\n\\t\\t\\tthis._weightInterpolant = interpolant;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar times = interpolant.parameterPositions,\\r\\n\\t\\t\\tvalues = interpolant.sampleValues;\\r\\n\\r\\n\\t\\ttimes[ 0 ] = now; \\t\\t\\t\\tvalues[ 0 ] = weightNow;\\r\\n\\t\\ttimes[ 1 ] = now + duration;\\tvalues[ 1 ] = weightThen;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n// File:src/animation/AnimationClip.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * Reusable set of Tracks that represent an animation.\\r\\n *\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n */\\r\\n\\r\\nTHREE.AnimationClip = function ( name, duration, tracks ) {\\r\\n\\r\\n\\tthis.name = name;\\r\\n\\tthis.tracks = tracks;\\r\\n\\tthis.duration = ( duration !== undefined ) ? duration : -1;\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\t// this means it should figure out its duration by scanning the tracks\\r\\n\\tif ( this.duration < 0 ) {\\r\\n\\r\\n\\t\\tthis.resetDuration();\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// maybe only do these on demand, as doing them here could potentially slow down loading\\r\\n\\t// but leaving these here during development as this ensures a lot of testing of these functions\\r\\n\\tthis.trim();\\r\\n\\tthis.optimize();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.AnimationClip.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.AnimationClip,\\r\\n\\r\\n\\tresetDuration: function() {\\r\\n\\r\\n\\t\\tvar tracks = this.tracks,\\r\\n\\t\\t\\tduration = 0;\\r\\n\\r\\n\\t\\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar track = this.tracks[ i ];\\r\\n\\r\\n\\t\\t\\tduration = Math.max(\\r\\n\\t\\t\\t\\t\\tduration, track.times[ track.times.length - 1 ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.duration = duration;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttrim: function() {\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.tracks[ i ].trim( 0, this.duration );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\toptimize: function() {\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.tracks[ i ].optimize();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// Static methods:\\r\\n\\r\\nObject.assign( THREE.AnimationClip, {\\r\\n\\r\\n\\tparse: function( json ) {\\r\\n\\r\\n\\t\\tvar tracks = [],\\r\\n\\t\\t\\tjsonTracks = json.tracks,\\r\\n\\t\\t\\tframeTime = 1.0 / ( json.fps || 1.0 );\\r\\n\\r\\n\\t\\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\ttracks.push( THREE.KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn new THREE.AnimationClip( json.name, json.duration, tracks );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\r\\n\\ttoJSON: function( clip ) {\\r\\n\\r\\n\\t\\tvar tracks = [],\\r\\n\\t\\t\\tclipTracks = clip.tracks;\\r\\n\\r\\n\\t\\tvar json = {\\r\\n\\r\\n\\t\\t\\t'name': clip.name,\\r\\n\\t\\t\\t'duration': clip.duration,\\r\\n\\t\\t\\t'tracks': tracks\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\ttracks.push( THREE.KeyframeTrack.toJSON( clipTracks[ i ] ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn json;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\r\\n\\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\\r\\n\\r\\n\\t\\tvar numMorphTargets = morphTargetSequence.length;\\r\\n\\t\\tvar tracks = [];\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar times = [];\\r\\n\\t\\t\\tvar values = [];\\r\\n\\r\\n\\t\\t\\ttimes.push(\\r\\n\\t\\t\\t\\t\\t( i + numMorphTargets - 1 ) % numMorphTargets,\\r\\n\\t\\t\\t\\t\\ti,\\r\\n\\t\\t\\t\\t\\t( i + 1 ) % numMorphTargets );\\r\\n\\r\\n\\t\\t\\tvalues.push( 0, 1, 0 );\\r\\n\\r\\n\\t\\t\\tvar order = THREE.AnimationUtils.getKeyframeOrder( times );\\r\\n\\t\\t\\ttimes = THREE.AnimationUtils.sortedArray( times, 1, order );\\r\\n\\t\\t\\tvalues = THREE.AnimationUtils.sortedArray( values, 1, order );\\r\\n\\r\\n\\t\\t\\t// if there is a key at the first frame, duplicate it as the\\r\\n\\t\\t\\t// last frame as well for perfect loop.\\r\\n\\t\\t\\tif ( ! noLoop && times[ 0 ] === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\ttimes.push( numMorphTargets );\\r\\n\\t\\t\\t\\tvalues.push( values[ 0 ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ttracks.push(\\r\\n\\t\\t\\t\\t\\tnew THREE.NumberKeyframeTrack(\\r\\n\\t\\t\\t\\t\\t\\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\\r\\n\\t\\t\\t\\t\\t\\ttimes, values\\r\\n\\t\\t\\t\\t\\t).scale( 1.0 / fps ) );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn new THREE.AnimationClip( name, -1, tracks );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfindByName: function( objectOrClipArray, name ) {\\r\\n\\r\\n\\t\\tvar clipArray = objectOrClipArray;\\r\\n\\r\\n\\t\\tif ( ! Array.isArray( objectOrClipArray ) ) {\\r\\n\\r\\n\\t\\t\\tvar o = objectOrClipArray;\\r\\n\\t\\t\\tclipArray = o.geometry && o.geometry.animations || o.animations;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < clipArray.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tif ( clipArray[ i ].name === name ) {\\r\\n\\r\\n\\t\\t\\t\\treturn clipArray[ i ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn null;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\\r\\n\\r\\n\\t\\tvar animationToMorphTargets = {};\\r\\n\\r\\n\\t\\t// tested with https://regex101.com/ on trick sequences\\r\\n\\t\\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\\r\\n\\t\\tvar pattern = /^([\\\\w-]*?)([\\\\d]+)$/;\\r\\n\\r\\n\\t\\t// sort morph target names into animation groups based\\r\\n\\t\\t// patterns like Walk_001, Walk_002, Run_001, Run_002\\r\\n\\t\\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar morphTarget = morphTargets[ i ];\\r\\n\\t\\t\\tvar parts = morphTarget.name.match( pattern );\\r\\n\\r\\n\\t\\t\\tif ( parts && parts.length > 1 ) {\\r\\n\\r\\n\\t\\t\\t\\tvar name = parts[ 1 ];\\r\\n\\r\\n\\t\\t\\t\\tvar animationMorphTargets = animationToMorphTargets[ name ];\\r\\n\\t\\t\\t\\tif ( ! animationMorphTargets ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tanimationMorphTargets.push( morphTarget );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar clips = [];\\r\\n\\r\\n\\t\\tfor ( var name in animationToMorphTargets ) {\\r\\n\\r\\n\\t\\t\\tclips.push( THREE.AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn clips;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// parse the animation.hierarchy format\\r\\n\\tparseAnimation: function( animation, bones, nodeName ) {\\r\\n\\r\\n\\t\\tif ( ! animation ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( \\\"  no animation in JSONLoader data\\\" );\\r\\n\\t\\t\\treturn null;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar addNonemptyTrack = function(\\r\\n\\t\\t\\t\\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\\r\\n\\r\\n\\t\\t\\t// only return track if there are actually keys.\\r\\n\\t\\t\\tif ( animationKeys.length !== 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tvar times = [];\\r\\n\\t\\t\\t\\tvar values = [];\\r\\n\\r\\n\\t\\t\\t\\tTHREE.AnimationUtils.flattenJSON(\\r\\n\\t\\t\\t\\t\\t\\tanimationKeys, times, values, propertyName );\\r\\n\\r\\n\\t\\t\\t\\t// empty keys are filtered out, so check again\\r\\n\\t\\t\\t\\tif ( times.length !== 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tdestTracks.push( new trackType( trackName, times, values ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tvar tracks = [];\\r\\n\\r\\n\\t\\tvar clipName = animation.name || 'default';\\r\\n\\t\\t// automatic length determination in AnimationClip.\\r\\n\\t\\tvar duration = animation.length || -1;\\r\\n\\t\\tvar fps = animation.fps || 30;\\r\\n\\r\\n\\t\\tvar hierarchyTracks = animation.hierarchy || [];\\r\\n\\r\\n\\t\\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\\r\\n\\r\\n\\t\\t\\tvar animationKeys = hierarchyTracks[ h ].keys;\\r\\n\\r\\n\\t\\t\\t// skip empty tracks\\r\\n\\t\\t\\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\\r\\n\\r\\n\\t\\t\\t// process morph targets in a way exactly compatible\\r\\n\\t\\t\\t// with AnimationHandler.init( animation )\\r\\n\\t\\t\\tif ( animationKeys[0].morphTargets ) {\\r\\n\\r\\n\\t\\t\\t\\t// figure out all morph targets used in this track\\r\\n\\t\\t\\t\\tvar morphTargetNames = {};\\r\\n\\t\\t\\t\\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( animationKeys[k].morphTargets ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// create a track for each morph target with all zero\\r\\n\\t\\t\\t\\t// morphTargetInfluences except for the keys in which\\r\\n\\t\\t\\t\\t// the morphTarget is named.\\r\\n\\t\\t\\t\\tfor ( var morphTargetName in morphTargetNames ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar times = [];\\r\\n\\t\\t\\t\\t\\tvar values = [];\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var m = 0;\\r\\n\\t\\t\\t\\t\\t\\t\\tm !== animationKeys[k].morphTargets.length; ++ m ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar animationKey = animationKeys[k];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ttimes.push( animationKey.time );\\r\\n\\t\\t\\t\\t\\t\\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\ttracks.push( new THREE.NumberKeyframeTrack(\\r\\n\\t\\t\\t\\t\\t\\t\\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tduration = morphTargetNames.length * ( fps || 1.0 );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t// ...assume skeletal animation\\r\\n\\r\\n\\t\\t\\t\\tvar boneName = '.bones[' + bones[ h ].name + ']';\\r\\n\\r\\n\\t\\t\\t\\taddNonemptyTrack(\\r\\n\\t\\t\\t\\t\\t\\tTHREE.VectorKeyframeTrack, boneName + '.position',\\r\\n\\t\\t\\t\\t\\t\\tanimationKeys, 'pos', tracks );\\r\\n\\r\\n\\t\\t\\t\\taddNonemptyTrack(\\r\\n\\t\\t\\t\\t\\t\\tTHREE.QuaternionKeyframeTrack, boneName + '.quaternion',\\r\\n\\t\\t\\t\\t\\t\\tanimationKeys, 'rot', tracks );\\r\\n\\r\\n\\t\\t\\t\\taddNonemptyTrack(\\r\\n\\t\\t\\t\\t\\t\\tTHREE.VectorKeyframeTrack, boneName + '.scale',\\r\\n\\t\\t\\t\\t\\t\\tanimationKeys, 'scl', tracks );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( tracks.length === 0 ) {\\r\\n\\r\\n\\t\\t\\treturn null;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar clip = new THREE.AnimationClip( clipName, duration, tracks );\\r\\n\\r\\n\\t\\treturn clip;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/animation/AnimationMixer.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * Player for AnimationClips.\\r\\n *\\r\\n *\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.AnimationMixer = function( root ) {\\r\\n\\r\\n\\tthis._root = root;\\r\\n\\tthis._initMemoryManager();\\r\\n\\tthis._accuIndex = 0;\\r\\n\\r\\n\\tthis.time = 0;\\r\\n\\r\\n\\tthis.timeScale = 1.0;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.AnimationMixer.prototype, THREE.EventDispatcher.prototype, {\\r\\n\\r\\n\\t// return an action for a clip optionally using a custom root target\\r\\n\\t// object (this method allocates a lot of dynamic memory in case a\\r\\n\\t// previously unknown clip/root combination is specified)\\r\\n\\tclipAction: function( clip, optionalRoot ) {\\r\\n\\r\\n\\t\\tvar root = optionalRoot || this._root,\\r\\n\\t\\t\\trootUuid = root.uuid,\\r\\n\\r\\n\\t\\t\\tclipObject = typeof clip === 'string' ?\\r\\n\\t\\t\\t\\t\\tTHREE.AnimationClip.findByName( root, clip ) : clip,\\r\\n\\r\\n\\t\\t\\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\\r\\n\\r\\n\\t\\t\\tactionsForClip = this._actionsByClip[ clipUuid ],\\r\\n\\t\\t\\tprototypeAction = null;\\r\\n\\r\\n\\t\\tif ( actionsForClip !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar existingAction =\\r\\n\\t\\t\\t\\t\\tactionsForClip.actionByRoot[ rootUuid ];\\r\\n\\r\\n\\t\\t\\tif ( existingAction !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\treturn existingAction;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// we know the clip, so we don't have to parse all\\r\\n\\t\\t\\t// the bindings again but can just copy\\r\\n\\t\\t\\tprototypeAction = actionsForClip.knownActions[ 0 ];\\r\\n\\r\\n\\t\\t\\t// also, take the clip from the prototype action\\r\\n\\t\\t\\tif ( clipObject === null )\\r\\n\\t\\t\\t\\tclipObject = prototypeAction._clip;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// clip must be known when specified via string\\r\\n\\t\\tif ( clipObject === null ) return null;\\r\\n\\r\\n\\t\\t// allocate all resources required to run it\\r\\n\\t\\tvar newAction = new THREE.\\r\\n\\t\\t\\t\\tAnimationMixer._Action( this, clipObject, optionalRoot );\\r\\n\\r\\n\\t\\tthis._bindAction( newAction, prototypeAction );\\r\\n\\r\\n\\t\\t// and make the action known to the memory manager\\r\\n\\t\\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\\r\\n\\r\\n\\t\\treturn newAction;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// get an existing action\\r\\n\\texistingAction: function( clip, optionalRoot ) {\\r\\n\\r\\n\\t\\tvar root = optionalRoot || this._root,\\r\\n\\t\\t\\trootUuid = root.uuid,\\r\\n\\r\\n\\t\\t\\tclipObject = typeof clip === 'string' ?\\r\\n\\t\\t\\t\\t\\tTHREE.AnimationClip.findByName( root, clip ) : clip,\\r\\n\\r\\n\\t\\t\\tclipUuid = clipObject ? clipObject.uuid : clip,\\r\\n\\r\\n\\t\\t\\tactionsForClip = this._actionsByClip[ clipUuid ];\\r\\n\\r\\n\\t\\tif ( actionsForClip !== undefined ) {\\r\\n\\r\\n\\t\\t\\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn null;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// deactivates all previously scheduled actions\\r\\n\\tstopAllAction: function() {\\r\\n\\r\\n\\t\\tvar actions = this._actions,\\r\\n\\t\\t\\tnActions = this._nActiveActions,\\r\\n\\t\\t\\tbindings = this._bindings,\\r\\n\\t\\t\\tnBindings = this._nActiveBindings;\\r\\n\\r\\n\\t\\tthis._nActiveActions = 0;\\r\\n\\t\\tthis._nActiveBindings = 0;\\r\\n\\r\\n\\t\\tfor ( var i = 0; i !== nActions; ++ i ) {\\r\\n\\r\\n\\t\\t\\tactions[ i ].reset();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var i = 0; i !== nBindings; ++ i ) {\\r\\n\\r\\n\\t\\t\\tbindings[ i ].useCount = 0;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// advance the time and update apply the animation\\r\\n\\tupdate: function( deltaTime ) {\\r\\n\\r\\n\\t\\tdeltaTime *= this.timeScale;\\r\\n\\r\\n\\t\\tvar actions = this._actions,\\r\\n\\t\\t\\tnActions = this._nActiveActions,\\r\\n\\r\\n\\t\\t\\ttime = this.time += deltaTime,\\r\\n\\t\\t\\ttimeDirection = Math.sign( deltaTime ),\\r\\n\\r\\n\\t\\t\\taccuIndex = this._accuIndex ^= 1;\\r\\n\\r\\n\\t\\t// run active actions\\r\\n\\r\\n\\t\\tfor ( var i = 0; i !== nActions; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar action = actions[ i ];\\r\\n\\r\\n\\t\\t\\tif ( action.enabled ) {\\r\\n\\r\\n\\t\\t\\t\\taction._update( time, deltaTime, timeDirection, accuIndex );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// update scene graph\\r\\n\\r\\n\\t\\tvar bindings = this._bindings,\\r\\n\\t\\t\\tnBindings = this._nActiveBindings;\\r\\n\\r\\n\\t\\tfor ( var i = 0; i !== nBindings; ++ i ) {\\r\\n\\r\\n\\t\\t\\tbindings[ i ].apply( accuIndex );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// return this mixer's root target object\\r\\n\\tgetRoot: function() {\\r\\n\\r\\n\\t\\treturn this._root;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// free all resources specific to a particular clip\\r\\n\\tuncacheClip: function( clip ) {\\r\\n\\r\\n\\t\\tvar actions = this._actions,\\r\\n\\t\\t\\tclipUuid = clip.uuid,\\r\\n\\t\\t\\tactionsByClip = this._actionsByClip,\\r\\n\\t\\t\\tactionsForClip = actionsByClip[ clipUuid ];\\r\\n\\r\\n\\t\\tif ( actionsForClip !== undefined ) {\\r\\n\\r\\n\\t\\t\\t// note: just calling _removeInactiveAction would mess up the\\r\\n\\t\\t\\t// iteration state and also require updating the state we can\\r\\n\\t\\t\\t// just throw away\\r\\n\\r\\n\\t\\t\\tvar actionsToRemove = actionsForClip.knownActions;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\tvar action = actionsToRemove[ i ];\\r\\n\\r\\n\\t\\t\\t\\tthis._deactivateAction( action );\\r\\n\\r\\n\\t\\t\\t\\tvar cacheIndex = action._cacheIndex,\\r\\n\\t\\t\\t\\t\\tlastInactiveAction = actions[ actions.length - 1 ];\\r\\n\\r\\n\\t\\t\\t\\taction._cacheIndex = null;\\r\\n\\t\\t\\t\\taction._byClipCacheIndex = null;\\r\\n\\r\\n\\t\\t\\t\\tlastInactiveAction._cacheIndex = cacheIndex;\\r\\n\\t\\t\\t\\tactions[ cacheIndex ] = lastInactiveAction;\\r\\n\\t\\t\\t\\tactions.pop();\\r\\n\\r\\n\\t\\t\\t\\tthis._removeInactiveBindingsForAction( action );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tdelete actionsByClip[ clipUuid ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// free all resources specific to a particular root target object\\r\\n\\tuncacheRoot: function( root ) {\\r\\n\\r\\n\\t\\tvar rootUuid = root.uuid,\\r\\n\\t\\t\\tactionsByClip = this._actionsByClip;\\r\\n\\r\\n\\t\\tfor ( var clipUuid in actionsByClip ) {\\r\\n\\r\\n\\t\\t\\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\\r\\n\\t\\t\\t\\taction = actionByRoot[ rootUuid ];\\r\\n\\r\\n\\t\\t\\tif ( action !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tthis._deactivateAction( action );\\r\\n\\t\\t\\t\\tthis._removeInactiveAction( action );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar bindingsByRoot = this._bindingsByRootAndName,\\r\\n\\t\\t\\tbindingByName = bindingsByRoot[ rootUuid ];\\r\\n\\r\\n\\t\\tif ( bindingByName !== undefined ) {\\r\\n\\r\\n\\t\\t\\tfor ( var trackName in bindingByName ) {\\r\\n\\r\\n\\t\\t\\t\\tvar binding = bindingByName[ trackName ];\\r\\n\\t\\t\\t\\tbinding.restoreOriginalState();\\r\\n\\t\\t\\t\\tthis._removeInactiveBinding( binding );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// remove a targeted clip from the cache\\r\\n\\tuncacheAction: function( clip, optionalRoot ) {\\r\\n\\r\\n\\t\\tvar action = this.existingAction( clip, optionalRoot );\\r\\n\\r\\n\\t\\tif ( action !== null ) {\\r\\n\\r\\n\\t\\t\\tthis._deactivateAction( action );\\r\\n\\t\\t\\tthis._removeInactiveAction( action );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\nTHREE.AnimationMixer._Action = THREE.AnimationAction._new;\\r\\n\\r\\n// Implementation details:\\r\\n\\r\\nObject.assign( THREE.AnimationMixer.prototype, {\\r\\n\\r\\n\\t_bindAction: function( action, prototypeAction ) {\\r\\n\\r\\n\\t\\tvar root = action._localRoot || this._root,\\r\\n\\t\\t\\ttracks = action._clip.tracks,\\r\\n\\t\\t\\tnTracks = tracks.length,\\r\\n\\t\\t\\tbindings = action._propertyBindings,\\r\\n\\t\\t\\tinterpolants = action._interpolants,\\r\\n\\t\\t\\trootUuid = root.uuid,\\r\\n\\t\\t\\tbindingsByRoot = this._bindingsByRootAndName,\\r\\n\\t\\t\\tbindingsByName = bindingsByRoot[ rootUuid ];\\r\\n\\r\\n\\t\\tif ( bindingsByName === undefined ) {\\r\\n\\r\\n\\t\\t\\tbindingsByName = {};\\r\\n\\t\\t\\tbindingsByRoot[ rootUuid ] = bindingsByName;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var i = 0; i !== nTracks; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar track = tracks[ i ],\\r\\n\\t\\t\\t\\ttrackName = track.name,\\r\\n\\t\\t\\t\\tbinding = bindingsByName[ trackName ];\\r\\n\\r\\n\\t\\t\\tif ( binding !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tbindings[ i ] = binding;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tbinding = bindings[ i ];\\r\\n\\r\\n\\t\\t\\t\\tif ( binding !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// existing binding, make sure the cache knows\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( binding._cacheIndex === null ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t++ binding.referenceCount;\\r\\n\\t\\t\\t\\t\\t\\tthis._addInactiveBinding( binding, rootUuid, trackName );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tcontinue;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tvar path = prototypeAction && prototypeAction.\\r\\n\\t\\t\\t\\t\\t\\t_propertyBindings[ i ].binding.parsedPath;\\r\\n\\r\\n\\t\\t\\t\\tbinding = new THREE.PropertyMixer(\\r\\n\\t\\t\\t\\t\\t\\tTHREE.PropertyBinding.create( root, trackName, path ),\\r\\n\\t\\t\\t\\t\\t\\ttrack.ValueTypeName, track.getValueSize() );\\r\\n\\r\\n\\t\\t\\t\\t++ binding.referenceCount;\\r\\n\\t\\t\\t\\tthis._addInactiveBinding( binding, rootUuid, trackName );\\r\\n\\r\\n\\t\\t\\t\\tbindings[ i ] = binding;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tinterpolants[ i ].resultBuffer = binding.buffer;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_activateAction: function( action ) {\\r\\n\\r\\n\\t\\tif ( ! this._isActiveAction( action ) ) {\\r\\n\\r\\n\\t\\t\\tif ( action._cacheIndex === null ) {\\r\\n\\r\\n\\t\\t\\t\\t// this action has been forgotten by the cache, but the user\\r\\n\\t\\t\\t\\t// appears to be still using it -> rebind\\r\\n\\r\\n\\t\\t\\t\\tvar rootUuid = ( action._localRoot || this._root ).uuid,\\r\\n\\t\\t\\t\\t\\tclipUuid = action._clip.uuid,\\r\\n\\t\\t\\t\\t\\tactionsForClip = this._actionsByClip[ clipUuid ];\\r\\n\\r\\n\\t\\t\\t\\tthis._bindAction( action,\\r\\n\\t\\t\\t\\t\\t\\tactionsForClip && actionsForClip.knownActions[ 0 ] );\\r\\n\\r\\n\\t\\t\\t\\tthis._addInactiveAction( action, clipUuid, rootUuid );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar bindings = action._propertyBindings;\\r\\n\\r\\n\\t\\t\\t// increment reference counts / sort out state\\r\\n\\t\\t\\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\tvar binding = bindings[ i ];\\r\\n\\r\\n\\t\\t\\t\\tif ( binding.useCount ++ === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tthis._lendBinding( binding );\\r\\n\\t\\t\\t\\t\\tbinding.saveOriginalState();\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis._lendAction( action );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_deactivateAction: function( action ) {\\r\\n\\r\\n\\t\\tif ( this._isActiveAction( action ) ) {\\r\\n\\r\\n\\t\\t\\tvar bindings = action._propertyBindings;\\r\\n\\r\\n\\t\\t\\t// decrement reference counts / sort out state\\r\\n\\t\\t\\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\tvar binding = bindings[ i ];\\r\\n\\r\\n\\t\\t\\t\\tif ( -- binding.useCount === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tbinding.restoreOriginalState();\\r\\n\\t\\t\\t\\t\\tthis._takeBackBinding( binding );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis._takeBackAction( action );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Memory manager\\r\\n\\r\\n\\t_initMemoryManager: function() {\\r\\n\\r\\n\\t\\tthis._actions = []; // 'nActiveActions' followed by inactive ones\\r\\n\\t\\tthis._nActiveActions = 0;\\r\\n\\r\\n\\t\\tthis._actionsByClip = {};\\r\\n\\t\\t// inside:\\r\\n\\t\\t// {\\r\\n\\t\\t// \\t\\tknownActions: Array< _Action >\\t- used as prototypes\\r\\n\\t\\t// \\t\\tactionByRoot: _Action\\t\\t\\t- lookup\\r\\n\\t\\t// }\\r\\n\\r\\n\\r\\n\\t\\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\\r\\n\\t\\tthis._nActiveBindings = 0;\\r\\n\\r\\n\\t\\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\\r\\n\\r\\n\\r\\n\\t\\tthis._controlInterpolants = []; // same game as above\\r\\n\\t\\tthis._nActiveControlInterpolants = 0;\\r\\n\\r\\n\\t\\tvar scope = this;\\r\\n\\r\\n\\t\\tthis.stats = {\\r\\n\\r\\n\\t\\t\\tactions: {\\r\\n\\t\\t\\t\\tget total() { return scope._actions.length; },\\r\\n\\t\\t\\t\\tget inUse() { return scope._nActiveActions; }\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tbindings: {\\r\\n\\t\\t\\t\\tget total() { return scope._bindings.length; },\\r\\n\\t\\t\\t\\tget inUse() { return scope._nActiveBindings; }\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tcontrolInterpolants: {\\r\\n\\t\\t\\t\\tget total() { return scope._controlInterpolants.length; },\\r\\n\\t\\t\\t\\tget inUse() { return scope._nActiveControlInterpolants; }\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Memory management for _Action objects\\r\\n\\r\\n\\t_isActiveAction: function( action ) {\\r\\n\\r\\n\\t\\tvar index = action._cacheIndex;\\r\\n\\t\\treturn index !== null && index < this._nActiveActions;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_addInactiveAction: function( action, clipUuid, rootUuid ) {\\r\\n\\r\\n\\t\\tvar actions = this._actions,\\r\\n\\t\\t\\tactionsByClip = this._actionsByClip,\\r\\n\\t\\t\\tactionsForClip = actionsByClip[ clipUuid ];\\r\\n\\r\\n\\t\\tif ( actionsForClip === undefined ) {\\r\\n\\r\\n\\t\\t\\tactionsForClip = {\\r\\n\\r\\n\\t\\t\\t\\tknownActions: [ action ],\\r\\n\\t\\t\\t\\tactionByRoot: {}\\r\\n\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\taction._byClipCacheIndex = 0;\\r\\n\\r\\n\\t\\t\\tactionsByClip[ clipUuid ] = actionsForClip;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tvar knownActions = actionsForClip.knownActions;\\r\\n\\r\\n\\t\\t\\taction._byClipCacheIndex = knownActions.length;\\r\\n\\t\\t\\tknownActions.push( action );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\taction._cacheIndex = actions.length;\\r\\n\\t\\tactions.push( action );\\r\\n\\r\\n\\t\\tactionsForClip.actionByRoot[ rootUuid ] = action;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_removeInactiveAction: function( action ) {\\r\\n\\r\\n\\t\\tvar actions = this._actions,\\r\\n\\t\\t\\tlastInactiveAction = actions[ actions.length - 1 ],\\r\\n\\t\\t\\tcacheIndex = action._cacheIndex;\\r\\n\\r\\n\\t\\tlastInactiveAction._cacheIndex = cacheIndex;\\r\\n\\t\\tactions[ cacheIndex ] = lastInactiveAction;\\r\\n\\t\\tactions.pop();\\r\\n\\r\\n\\t\\taction._cacheIndex = null;\\r\\n\\r\\n\\r\\n\\t\\tvar clipUuid = action._clip.uuid,\\r\\n\\t\\t\\tactionsByClip = this._actionsByClip,\\r\\n\\t\\t\\tactionsForClip = actionsByClip[ clipUuid ],\\r\\n\\t\\t\\tknownActionsForClip = actionsForClip.knownActions,\\r\\n\\r\\n\\t\\t\\tlastKnownAction =\\r\\n\\t\\t\\t\\tknownActionsForClip[ knownActionsForClip.length - 1 ],\\r\\n\\r\\n\\t\\t\\tbyClipCacheIndex = action._byClipCacheIndex;\\r\\n\\r\\n\\t\\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\\r\\n\\t\\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\\r\\n\\t\\tknownActionsForClip.pop();\\r\\n\\r\\n\\t\\taction._byClipCacheIndex = null;\\r\\n\\r\\n\\r\\n\\t\\tvar actionByRoot = actionsForClip.actionByRoot,\\r\\n\\t\\t\\trootUuid = ( actions._localRoot || this._root ).uuid;\\r\\n\\r\\n\\t\\tdelete actionByRoot[ rootUuid ];\\r\\n\\r\\n\\t\\tif ( knownActionsForClip.length === 0 ) {\\r\\n\\r\\n\\t\\t\\tdelete actionsByClip[ clipUuid ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis._removeInactiveBindingsForAction( action );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_removeInactiveBindingsForAction: function( action ) {\\r\\n\\r\\n\\t\\tvar bindings = action._propertyBindings;\\r\\n\\t\\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar binding = bindings[ i ];\\r\\n\\r\\n\\t\\t\\tif ( -- binding.referenceCount === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tthis._removeInactiveBinding( binding );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_lendAction: function( action ) {\\r\\n\\r\\n\\t\\t// [ active actions |  inactive actions  ]\\r\\n\\t\\t// [  active actions >| inactive actions ]\\r\\n\\t\\t//                 s        a\\r\\n\\t\\t//                  <-swap->\\r\\n\\t\\t//                 a        s\\r\\n\\r\\n\\t\\tvar actions = this._actions,\\r\\n\\t\\t\\tprevIndex = action._cacheIndex,\\r\\n\\r\\n\\t\\t\\tlastActiveIndex = this._nActiveActions ++,\\r\\n\\r\\n\\t\\t\\tfirstInactiveAction = actions[ lastActiveIndex ];\\r\\n\\r\\n\\t\\taction._cacheIndex = lastActiveIndex;\\r\\n\\t\\tactions[ lastActiveIndex ] = action;\\r\\n\\r\\n\\t\\tfirstInactiveAction._cacheIndex = prevIndex;\\r\\n\\t\\tactions[ prevIndex ] = firstInactiveAction;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_takeBackAction: function( action ) {\\r\\n\\r\\n\\t\\t// [  active actions  | inactive actions ]\\r\\n\\t\\t// [ active actions |< inactive actions  ]\\r\\n\\t\\t//        a        s\\r\\n\\t\\t//         <-swap->\\r\\n\\t\\t//        s        a\\r\\n\\r\\n\\t\\tvar actions = this._actions,\\r\\n\\t\\t\\tprevIndex = action._cacheIndex,\\r\\n\\r\\n\\t\\t\\tfirstInactiveIndex = -- this._nActiveActions,\\r\\n\\r\\n\\t\\t\\tlastActiveAction = actions[ firstInactiveIndex ];\\r\\n\\r\\n\\t\\taction._cacheIndex = firstInactiveIndex;\\r\\n\\t\\tactions[ firstInactiveIndex ] = action;\\r\\n\\r\\n\\t\\tlastActiveAction._cacheIndex = prevIndex;\\r\\n\\t\\tactions[ prevIndex ] = lastActiveAction;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Memory management for PropertyMixer objects\\r\\n\\r\\n\\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\\r\\n\\r\\n\\t\\tvar bindingsByRoot = this._bindingsByRootAndName,\\r\\n\\t\\t\\tbindingByName = bindingsByRoot[ rootUuid ],\\r\\n\\r\\n\\t\\t\\tbindings = this._bindings;\\r\\n\\r\\n\\t\\tif ( bindingByName === undefined ) {\\r\\n\\r\\n\\t\\t\\tbindingByName = {};\\r\\n\\t\\t\\tbindingsByRoot[ rootUuid ] = bindingByName;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tbindingByName[ trackName ] = binding;\\r\\n\\r\\n\\t\\tbinding._cacheIndex = bindings.length;\\r\\n\\t\\tbindings.push( binding );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_removeInactiveBinding: function( binding ) {\\r\\n\\r\\n\\t\\tvar bindings = this._bindings,\\r\\n\\t\\t\\tpropBinding = binding.binding,\\r\\n\\t\\t\\trootUuid = propBinding.rootNode.uuid,\\r\\n\\t\\t\\ttrackName = propBinding.path,\\r\\n\\t\\t\\tbindingsByRoot = this._bindingsByRootAndName,\\r\\n\\t\\t\\tbindingByName = bindingsByRoot[ rootUuid ],\\r\\n\\r\\n\\t\\t\\tlastInactiveBinding = bindings[ bindings.length - 1 ],\\r\\n\\t\\t\\tcacheIndex = binding._cacheIndex;\\r\\n\\r\\n\\t\\tlastInactiveBinding._cacheIndex = cacheIndex;\\r\\n\\t\\tbindings[ cacheIndex ] = lastInactiveBinding;\\r\\n\\t\\tbindings.pop();\\r\\n\\r\\n\\t\\tdelete bindingByName[ trackName ];\\r\\n\\r\\n\\t\\tremove_empty_map: {\\r\\n\\r\\n\\t\\t\\tfor ( var _ in bindingByName ) break remove_empty_map;\\r\\n\\r\\n\\t\\t\\tdelete bindingsByRoot[ rootUuid ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_lendBinding: function( binding ) {\\r\\n\\r\\n\\t\\tvar bindings = this._bindings,\\r\\n\\t\\t\\tprevIndex = binding._cacheIndex,\\r\\n\\r\\n\\t\\t\\tlastActiveIndex = this._nActiveBindings ++,\\r\\n\\r\\n\\t\\t\\tfirstInactiveBinding = bindings[ lastActiveIndex ];\\r\\n\\r\\n\\t\\tbinding._cacheIndex = lastActiveIndex;\\r\\n\\t\\tbindings[ lastActiveIndex ] = binding;\\r\\n\\r\\n\\t\\tfirstInactiveBinding._cacheIndex = prevIndex;\\r\\n\\t\\tbindings[ prevIndex ] = firstInactiveBinding;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_takeBackBinding: function( binding ) {\\r\\n\\r\\n\\t\\tvar bindings = this._bindings,\\r\\n\\t\\t\\tprevIndex = binding._cacheIndex,\\r\\n\\r\\n\\t\\t\\tfirstInactiveIndex = -- this._nActiveBindings,\\r\\n\\r\\n\\t\\t\\tlastActiveBinding = bindings[ firstInactiveIndex ];\\r\\n\\r\\n\\t\\tbinding._cacheIndex = firstInactiveIndex;\\r\\n\\t\\tbindings[ firstInactiveIndex ] = binding;\\r\\n\\r\\n\\t\\tlastActiveBinding._cacheIndex = prevIndex;\\r\\n\\t\\tbindings[ prevIndex ] = lastActiveBinding;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\r\\n\\t// Memory management of Interpolants for weight and time scale\\r\\n\\r\\n\\t_lendControlInterpolant: function() {\\r\\n\\r\\n\\t\\tvar interpolants = this._controlInterpolants,\\r\\n\\t\\t\\tlastActiveIndex = this._nActiveControlInterpolants ++,\\r\\n\\t\\t\\tinterpolant = interpolants[ lastActiveIndex ];\\r\\n\\r\\n\\t\\tif ( interpolant === undefined ) {\\r\\n\\r\\n\\t\\t\\tinterpolant = new THREE.LinearInterpolant(\\r\\n\\t\\t\\t\\t\\tnew Float32Array( 2 ), new Float32Array( 2 ),\\r\\n\\t\\t\\t\\t\\t\\t1, this._controlInterpolantsResultBuffer );\\r\\n\\r\\n\\t\\t\\tinterpolant.__cacheIndex = lastActiveIndex;\\r\\n\\t\\t\\tinterpolants[ lastActiveIndex ] = interpolant;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn interpolant;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_takeBackControlInterpolant: function( interpolant ) {\\r\\n\\r\\n\\t\\tvar interpolants = this._controlInterpolants,\\r\\n\\t\\t\\tprevIndex = interpolant.__cacheIndex,\\r\\n\\r\\n\\t\\t\\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\\r\\n\\r\\n\\t\\t\\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\\r\\n\\r\\n\\t\\tinterpolant.__cacheIndex = firstInactiveIndex;\\r\\n\\t\\tinterpolants[ firstInactiveIndex ] = interpolant;\\r\\n\\r\\n\\t\\tlastActiveInterpolant.__cacheIndex = prevIndex;\\r\\n\\t\\tinterpolants[ prevIndex ] = lastActiveInterpolant;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/animation/AnimationObjectGroup.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * A group of objects that receives a shared animation state.\\r\\n *\\r\\n * Usage:\\r\\n *\\r\\n * \\t-\\tAdd objects you would otherwise pass as 'root' to the\\r\\n * \\t\\tconstructor or the .clipAction method of AnimationMixer.\\r\\n *\\r\\n * \\t-\\tInstead pass this object as 'root'.\\r\\n *\\r\\n * \\t-\\tYou can also add and remove objects later when the mixer\\r\\n * \\t\\tis running.\\r\\n *\\r\\n * Note:\\r\\n *\\r\\n *  \\tObjects of this class appear as one object to the mixer,\\r\\n *  \\tso cache control of the individual objects must be done\\r\\n *  \\ton the group.\\r\\n *\\r\\n * Limitation:\\r\\n *\\r\\n * \\t- \\tThe animated properties must be compatible among the\\r\\n * \\t\\tall objects in the group.\\r\\n *\\r\\n *  -\\tA single property can either be controlled through a\\r\\n *  \\ttarget group or directly, but not both.\\r\\n *\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.AnimationObjectGroup = function( var_args ) {\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\t// cached objects followed by the active ones\\r\\n\\tthis._objects = Array.prototype.slice.call( arguments );\\r\\n\\r\\n\\tthis.nCachedObjects_ = 0;\\t\\t\\t// threshold\\r\\n\\t// note: read by PropertyBinding.Composite\\r\\n\\r\\n\\tvar indices = {};\\r\\n\\tthis._indicesByUUID = indices;\\t\\t// for bookkeeping\\r\\n\\r\\n\\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\tindices[ arguments[ i ].uuid ] = i;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis._paths = [];\\t\\t\\t\\t\\t// inside: string\\r\\n\\tthis._parsedPaths = [];\\t\\t\\t\\t// inside: { we don't care, here }\\r\\n\\tthis._bindings = []; \\t\\t\\t\\t// inside: Array< PropertyBinding >\\r\\n\\tthis._bindingsIndicesByPath = {}; \\t// inside: indices in these arrays\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tthis.stats = {\\r\\n\\r\\n\\t\\tobjects: {\\r\\n\\t\\t\\tget total() { return scope._objects.length; },\\r\\n\\t\\t\\tget inUse() { return this.total - scope.nCachedObjects_;  }\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tget bindingsPerObject() { return scope._bindings.length; }\\r\\n\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.AnimationObjectGroup.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.AnimationObjectGroup,\\r\\n\\r\\n\\tadd: function( var_args ) {\\r\\n\\r\\n\\t\\tvar objects = this._objects,\\r\\n\\t\\t\\tnObjects = objects.length,\\r\\n\\t\\t\\tnCachedObjects = this.nCachedObjects_,\\r\\n\\t\\t\\tindicesByUUID = this._indicesByUUID,\\r\\n\\t\\t\\tpaths = this._paths,\\r\\n\\t\\t\\tparsedPaths = this._parsedPaths,\\r\\n\\t\\t\\tbindings = this._bindings,\\r\\n\\t\\t\\tnBindings = bindings.length;\\r\\n\\r\\n\\t\\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar object = arguments[ i ],\\r\\n\\t\\t\\t\\tuuid = object.uuid,\\r\\n\\t\\t\\t\\tindex = indicesByUUID[ uuid ];\\r\\n\\r\\n\\t\\t\\tif ( index === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t// unknown object -> add it to the ACTIVE region\\r\\n\\r\\n\\t\\t\\t\\tindex = nObjects ++;\\r\\n\\t\\t\\t\\tindicesByUUID[ uuid ] = index;\\r\\n\\t\\t\\t\\tobjects.push( object );\\r\\n\\r\\n\\t\\t\\t\\t// accounting is done, now do the same for all bindings\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tbindings[ j ].push(\\r\\n\\t\\t\\t\\t\\t\\t\\tnew THREE.PropertyBinding(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tobject, paths[ j ], parsedPaths[ j ] ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else if ( index < nCachedObjects ) {\\r\\n\\r\\n\\t\\t\\t\\tvar knownObject = objects[ index ];\\r\\n\\r\\n\\t\\t\\t\\t// move existing object to the ACTIVE region\\r\\n\\r\\n\\t\\t\\t\\tvar firstActiveIndex = -- nCachedObjects,\\r\\n\\t\\t\\t\\t\\tlastCachedObject = objects[ firstActiveIndex ];\\r\\n\\r\\n\\t\\t\\t\\tindicesByUUID[ lastCachedObject.uuid ] = index;\\r\\n\\t\\t\\t\\tobjects[ index ] = lastCachedObject;\\r\\n\\r\\n\\t\\t\\t\\tindicesByUUID[ uuid ] = firstActiveIndex;\\r\\n\\t\\t\\t\\tobjects[ firstActiveIndex ] = object;\\r\\n\\r\\n\\t\\t\\t\\t// accounting is done, now do the same for all bindings\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar bindingsForPath = bindings[ j ],\\r\\n\\t\\t\\t\\t\\t\\tlastCached = bindingsForPath[ firstActiveIndex ],\\r\\n\\t\\t\\t\\t\\t\\tbinding = bindingsForPath[ index ];\\r\\n\\r\\n\\t\\t\\t\\t\\tbindingsForPath[ index ] = lastCached;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( binding === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// since we do not bother to create new bindings\\r\\n\\t\\t\\t\\t\\t\\t// for objects that are cached, the binding may\\r\\n\\t\\t\\t\\t\\t\\t// or may not exist\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbinding = new THREE.PropertyBinding(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tobject, paths[ j ], parsedPaths[ j ] );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tbindingsForPath[ firstActiveIndex ] = binding;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else if ( objects[ index ] !== knownObject) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.error( \\\"Different objects with the same UUID \\\" +\\r\\n\\t\\t\\t\\t\\t\\t\\\"detected. Clean the caches or recreate your \\\" +\\r\\n\\t\\t\\t\\t\\t\\t\\\"infrastructure when reloading scenes...\\\" );\\r\\n\\r\\n\\t\\t\\t} // else the object is already where we want it to be\\r\\n\\r\\n\\t\\t} // for arguments\\r\\n\\r\\n\\t\\tthis.nCachedObjects_ = nCachedObjects;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tremove: function( var_args ) {\\r\\n\\r\\n\\t\\tvar objects = this._objects,\\r\\n\\t\\t\\tnObjects = objects.length,\\r\\n\\t\\t\\tnCachedObjects = this.nCachedObjects_,\\r\\n\\t\\t\\tindicesByUUID = this._indicesByUUID,\\r\\n\\t\\t\\tbindings = this._bindings,\\r\\n\\t\\t\\tnBindings = bindings.length;\\r\\n\\r\\n\\t\\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar object = arguments[ i ],\\r\\n\\t\\t\\t\\tuuid = object.uuid,\\r\\n\\t\\t\\t\\tindex = indicesByUUID[ uuid ];\\r\\n\\r\\n\\t\\t\\tif ( index !== undefined && index >= nCachedObjects ) {\\r\\n\\r\\n\\t\\t\\t\\t// move existing object into the CACHED region\\r\\n\\r\\n\\t\\t\\t\\tvar lastCachedIndex = nCachedObjects ++,\\r\\n\\t\\t\\t\\t\\tfirstActiveObject = objects[ lastCachedIndex ];\\r\\n\\r\\n\\t\\t\\t\\tindicesByUUID[ firstActiveObject.uuid ] = index;\\r\\n\\t\\t\\t\\tobjects[ index ] = firstActiveObject;\\r\\n\\r\\n\\t\\t\\t\\tindicesByUUID[ uuid ] = lastCachedIndex;\\r\\n\\t\\t\\t\\tobjects[ lastCachedIndex ] = object;\\r\\n\\r\\n\\t\\t\\t\\t// accounting is done, now do the same for all bindings\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar bindingsForPath = bindings[ j ],\\r\\n\\t\\t\\t\\t\\t\\tfirstActive = bindingsForPath[ lastCachedIndex ],\\r\\n\\t\\t\\t\\t\\t\\tbinding = bindingsForPath[ index ];\\r\\n\\r\\n\\t\\t\\t\\t\\tbindingsForPath[ index ] = firstActive;\\r\\n\\t\\t\\t\\t\\tbindingsForPath[ lastCachedIndex ] = binding;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} // for arguments\\r\\n\\r\\n\\t\\tthis.nCachedObjects_ = nCachedObjects;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// remove & forget\\r\\n\\tuncache: function( var_args ) {\\r\\n\\r\\n\\t\\tvar objects = this._objects,\\r\\n\\t\\t\\tnObjects = objects.length,\\r\\n\\t\\t\\tnCachedObjects = this.nCachedObjects_,\\r\\n\\t\\t\\tindicesByUUID = this._indicesByUUID,\\r\\n\\t\\t\\tbindings = this._bindings,\\r\\n\\t\\t\\tnBindings = bindings.length;\\r\\n\\r\\n\\t\\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar object = arguments[ i ],\\r\\n\\t\\t\\t\\tuuid = object.uuid,\\r\\n\\t\\t\\t\\tindex = indicesByUUID[ uuid ];\\r\\n\\r\\n\\t\\t\\tif ( index !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tdelete indicesByUUID[ uuid ];\\r\\n\\r\\n\\t\\t\\t\\tif ( index < nCachedObjects ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// object is cached, shrink the CACHED region\\r\\n\\r\\n\\t\\t\\t\\t\\tvar firstActiveIndex = -- nCachedObjects,\\r\\n\\t\\t\\t\\t\\t\\tlastCachedObject = objects[ firstActiveIndex ],\\r\\n\\t\\t\\t\\t\\t\\tlastIndex = -- nObjects,\\r\\n\\t\\t\\t\\t\\t\\tlastObject = objects[ lastIndex ];\\r\\n\\r\\n\\t\\t\\t\\t\\t// last cached object takes this object's place\\r\\n\\t\\t\\t\\t\\tindicesByUUID[ lastCachedObject.uuid ] = index;\\r\\n\\t\\t\\t\\t\\tobjects[ index ] = lastCachedObject;\\r\\n\\r\\n\\t\\t\\t\\t\\t// last object goes to the activated slot and pop\\r\\n\\t\\t\\t\\t\\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\\r\\n\\t\\t\\t\\t\\tobjects[ firstActiveIndex ] = lastObject;\\r\\n\\t\\t\\t\\t\\tobjects.pop();\\r\\n\\r\\n\\t\\t\\t\\t\\t// accounting is done, now do the same for all bindings\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar bindingsForPath = bindings[ j ],\\r\\n\\t\\t\\t\\t\\t\\t\\tlastCached = bindingsForPath[ firstActiveIndex ],\\r\\n\\t\\t\\t\\t\\t\\t\\tlast = bindingsForPath[ lastIndex ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbindingsForPath[ index ] = lastCached;\\r\\n\\t\\t\\t\\t\\t\\tbindingsForPath[ firstActiveIndex ] = last;\\r\\n\\t\\t\\t\\t\\t\\tbindingsForPath.pop();\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t// object is active, just swap with the last and pop\\r\\n\\r\\n\\t\\t\\t\\t\\tvar lastIndex = -- nObjects,\\r\\n\\t\\t\\t\\t\\t\\tlastObject = objects[ lastIndex ];\\r\\n\\r\\n\\t\\t\\t\\t\\tindicesByUUID[ lastObject.uuid ] = index;\\r\\n\\t\\t\\t\\t\\tobjects[ index ] = lastObject;\\r\\n\\t\\t\\t\\t\\tobjects.pop();\\r\\n\\r\\n\\t\\t\\t\\t\\t// accounting is done, now do the same for all bindings\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar bindingsForPath = bindings[ j ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\\r\\n\\t\\t\\t\\t\\t\\tbindingsForPath.pop();\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} // cached or active\\r\\n\\r\\n\\t\\t\\t} // if object is known\\r\\n\\r\\n\\t\\t} // for arguments\\r\\n\\r\\n\\t\\tthis.nCachedObjects_ = nCachedObjects;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Internal interface used by befriended PropertyBinding.Composite:\\r\\n\\r\\n\\tsubscribe_: function( path, parsedPath ) {\\r\\n\\t\\t// returns an array of bindings for the given path that is changed\\r\\n\\t\\t// according to the contained objects in the group\\r\\n\\r\\n\\t\\tvar indicesByPath = this._bindingsIndicesByPath,\\r\\n\\t\\t\\tindex = indicesByPath[ path ],\\r\\n\\t\\t\\tbindings = this._bindings;\\r\\n\\r\\n\\t\\tif ( index !== undefined ) return bindings[ index ];\\r\\n\\r\\n\\t\\tvar paths = this._paths,\\r\\n\\t\\t\\tparsedPaths = this._parsedPaths,\\r\\n\\t\\t\\tobjects = this._objects,\\r\\n\\t\\t\\tnObjects = objects.length,\\r\\n\\t\\t\\tnCachedObjects = this.nCachedObjects_,\\r\\n\\t\\t\\tbindingsForPath = new Array( nObjects );\\r\\n\\r\\n\\t\\tindex = bindings.length;\\r\\n\\r\\n\\t\\tindicesByPath[ path ] = index;\\r\\n\\r\\n\\t\\tpaths.push( path );\\r\\n\\t\\tparsedPaths.push( parsedPath );\\r\\n\\t\\tbindings.push( bindingsForPath );\\r\\n\\r\\n\\t\\tfor ( var i = nCachedObjects,\\r\\n\\t\\t\\t\\tn = objects.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar object = objects[ i ];\\r\\n\\r\\n\\t\\t\\tbindingsForPath[ i ] =\\r\\n\\t\\t\\t\\t\\tnew THREE.PropertyBinding( object, path, parsedPath );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn bindingsForPath;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tunsubscribe_: function( path ) {\\r\\n\\t\\t// tells the group to forget about a property path and no longer\\r\\n\\t\\t// update the array previously obtained with 'subscribe_'\\r\\n\\r\\n\\t\\tvar indicesByPath = this._bindingsIndicesByPath,\\r\\n\\t\\t\\tindex = indicesByPath[ path ];\\r\\n\\r\\n\\t\\tif ( index !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar paths = this._paths,\\r\\n\\t\\t\\t\\tparsedPaths = this._parsedPaths,\\r\\n\\t\\t\\t\\tbindings = this._bindings,\\r\\n\\t\\t\\t\\tlastBindingsIndex = bindings.length - 1,\\r\\n\\t\\t\\t\\tlastBindings = bindings[ lastBindingsIndex ],\\r\\n\\t\\t\\t\\tlastBindingsPath = path[ lastBindingsIndex ];\\r\\n\\r\\n\\t\\t\\tindicesByPath[ lastBindingsPath ] = index;\\r\\n\\r\\n\\t\\t\\tbindings[ index ] = lastBindings;\\r\\n\\t\\t\\tbindings.pop();\\r\\n\\r\\n\\t\\t\\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\\r\\n\\t\\t\\tparsedPaths.pop();\\r\\n\\r\\n\\t\\t\\tpaths[ index ] = paths[ lastBindingsIndex ];\\r\\n\\t\\t\\tpaths.pop();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n// File:src/animation/AnimationUtils.js\\r\\n\\r\\n/**\\r\\n * @author tschw\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n */\\r\\n\\r\\nTHREE.AnimationUtils = {\\r\\n\\r\\n\\t// same as Array.prototype.slice, but also works on typed arrays\\r\\n\\tarraySlice: function( array, from, to ) {\\r\\n\\r\\n\\t\\tif ( THREE.AnimationUtils.isTypedArray( array ) ) {\\r\\n\\r\\n\\t\\t\\treturn new array.constructor( array.subarray( from, to ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn array.slice( from, to );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// converts an array to a specific type\\r\\n\\tconvertArray: function( array, type, forceClone ) {\\r\\n\\r\\n\\t\\tif ( ! array || // let 'undefined' and 'null' pass\\r\\n\\t\\t\\t\\t! forceClone && array.constructor === type ) return array;\\r\\n\\r\\n\\t\\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\\r\\n\\r\\n\\t\\t\\treturn new type( array ); // create typed array\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn Array.prototype.slice.call( array ); // create Array\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tisTypedArray: function( object ) {\\r\\n\\r\\n\\t\\treturn ArrayBuffer.isView( object ) &&\\r\\n\\t\\t\\t\\t! ( object instanceof DataView );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// returns an array by which times and values can be sorted\\r\\n\\tgetKeyframeOrder: function( times ) {\\r\\n\\r\\n\\t\\tfunction compareTime( i, j ) {\\r\\n\\r\\n\\t\\t\\treturn times[ i ] - times[ j ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar n = times.length;\\r\\n\\t\\tvar result = new Array( n );\\r\\n\\t\\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\\r\\n\\r\\n\\t\\tresult.sort( compareTime );\\r\\n\\r\\n\\t\\treturn result;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// uses the array previously returned by 'getKeyframeOrder' to sort data\\r\\n\\tsortedArray: function( values, stride, order ) {\\r\\n\\r\\n\\t\\tvar nValues = values.length;\\r\\n\\t\\tvar result = new values.constructor( nValues );\\r\\n\\r\\n\\t\\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar srcOffset = order[ i ] * stride;\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0; j !== stride; ++ j ) {\\r\\n\\r\\n\\t\\t\\t\\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn result;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// function for parsing AOS keyframe formats\\r\\n\\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\\r\\n\\r\\n\\t\\tvar i = 1, key = jsonKeys[ 0 ];\\r\\n\\r\\n\\t\\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\\r\\n\\r\\n\\t\\t\\tkey = jsonKeys[ i ++ ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( key === undefined ) return; // no data\\r\\n\\r\\n\\t\\tvar value = key[ valuePropertyName ];\\r\\n\\t\\tif ( value === undefined ) return; // no data\\r\\n\\r\\n\\t\\tif ( Array.isArray( value ) ) {\\r\\n\\r\\n\\t\\t\\tdo {\\r\\n\\r\\n\\t\\t\\t\\tvalue = key[ valuePropertyName ];\\r\\n\\r\\n\\t\\t\\t\\tif ( value !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttimes.push( key.time );\\r\\n\\t\\t\\t\\t\\tvalues.push.apply( values, value ); // push all elements\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tkey = jsonKeys[ i ++ ];\\r\\n\\r\\n\\t\\t\\t} while ( key !== undefined );\\r\\n\\r\\n\\t\\t} else if ( value.toArray !== undefined ) {\\r\\n\\t\\t\\t// ...assume THREE.Math-ish\\r\\n\\r\\n\\t\\t\\tdo {\\r\\n\\r\\n\\t\\t\\t\\tvalue = key[ valuePropertyName ];\\r\\n\\r\\n\\t\\t\\t\\tif ( value !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttimes.push( key.time );\\r\\n\\t\\t\\t\\t\\tvalue.toArray( values, values.length );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tkey = jsonKeys[ i ++ ];\\r\\n\\r\\n\\t\\t\\t} while ( key !== undefined );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\t\\t\\t// otherwise push as-is\\r\\n\\r\\n\\t\\t\\tdo {\\r\\n\\r\\n\\t\\t\\t\\tvalue = key[ valuePropertyName ];\\r\\n\\r\\n\\t\\t\\t\\tif ( value !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttimes.push( key.time );\\r\\n\\t\\t\\t\\t\\tvalues.push( value );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tkey = jsonKeys[ i ++ ];\\r\\n\\r\\n\\t\\t\\t} while ( key !== undefined );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/animation/KeyframeTrack.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * A timed sequence of keyframes for a specific property.\\r\\n *\\r\\n *\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.KeyframeTrack = function ( name, times, values, interpolation ) {\\r\\n\\r\\n\\tif( name === undefined ) throw new Error( \\\"track name is undefined\\\" );\\r\\n\\r\\n\\tif( times === undefined || times.length === 0 ) {\\r\\n\\r\\n\\t\\tthrow new Error( \\\"no keyframes in track named \\\" + name );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.name = name;\\r\\n\\r\\n\\tthis.times = THREE.AnimationUtils.convertArray( times, this.TimeBufferType );\\r\\n\\tthis.values = THREE.AnimationUtils.convertArray( values, this.ValueBufferType );\\r\\n\\r\\n\\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\\r\\n\\r\\n\\tthis.validate();\\r\\n\\tthis.optimize();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.KeyframeTrack.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.KeyframeTrack,\\r\\n\\r\\n\\tTimeBufferType: Float32Array,\\r\\n\\tValueBufferType: Float32Array,\\r\\n\\r\\n\\tDefaultInterpolation: THREE.InterpolateLinear,\\r\\n\\r\\n\\tInterpolantFactoryMethodDiscrete: function( result ) {\\r\\n\\r\\n\\t\\treturn new THREE.DiscreteInterpolant(\\r\\n\\t\\t\\t\\tthis.times, this.values, this.getValueSize(), result );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tInterpolantFactoryMethodLinear: function( result ) {\\r\\n\\r\\n\\t\\treturn new THREE.LinearInterpolant(\\r\\n\\t\\t\\t\\tthis.times, this.values, this.getValueSize(), result );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tInterpolantFactoryMethodSmooth: function( result ) {\\r\\n\\r\\n\\t\\treturn new THREE.CubicInterpolant(\\r\\n\\t\\t\\t\\tthis.times, this.values, this.getValueSize(), result );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetInterpolation: function( interpolation ) {\\r\\n\\r\\n\\t\\tvar factoryMethod;\\r\\n\\r\\n\\t\\tswitch ( interpolation ) {\\r\\n\\r\\n\\t\\t\\tcase THREE.InterpolateDiscrete:\\r\\n\\r\\n\\t\\t\\t\\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase THREE.InterpolateLinear:\\r\\n\\r\\n\\t\\t\\t\\tfactoryMethod = this.InterpolantFactoryMethodLinear;\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase THREE.InterpolateSmooth:\\r\\n\\r\\n\\t\\t\\t\\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( factoryMethod === undefined ) {\\r\\n\\r\\n\\t\\t\\tvar message = \\\"unsupported interpolation for \\\" +\\r\\n\\t\\t\\t\\t\\tthis.ValueTypeName + \\\" keyframe track named \\\" + this.name;\\r\\n\\r\\n\\t\\t\\tif ( this.createInterpolant === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t// fall back to default, unless the default itself is messed up\\r\\n\\t\\t\\t\\tif ( interpolation !== this.DefaultInterpolation ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.setInterpolation( this.DefaultInterpolation );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tthrow new Error( message ); // fatal, in this case\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tconsole.warn( message );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.createInterpolant = factoryMethod;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetInterpolation: function() {\\r\\n\\r\\n\\t\\tswitch ( this.createInterpolant ) {\\r\\n\\r\\n\\t\\t\\tcase this.InterpolantFactoryMethodDiscrete:\\r\\n\\r\\n\\t\\t\\t\\treturn THREE.InterpolateDiscrete;\\r\\n\\r\\n\\t\\t\\tcase this.InterpolantFactoryMethodLinear:\\r\\n\\r\\n\\t\\t\\t\\treturn THREE.InterpolateLinear;\\r\\n\\r\\n\\t\\t\\tcase this.InterpolantFactoryMethodSmooth:\\r\\n\\r\\n\\t\\t\\t\\treturn THREE.InterpolateSmooth;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetValueSize: function() {\\r\\n\\r\\n\\t\\treturn this.values.length / this.times.length;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// move all keyframes either forwards or backwards in time\\r\\n\\tshift: function( timeOffset ) {\\r\\n\\r\\n\\t\\tif( timeOffset !== 0.0 ) {\\r\\n\\r\\n\\t\\t\\tvar times = this.times;\\r\\n\\r\\n\\t\\t\\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\ttimes[ i ] += timeOffset;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\\r\\n\\tscale: function( timeScale ) {\\r\\n\\r\\n\\t\\tif( timeScale !== 1.0 ) {\\r\\n\\r\\n\\t\\t\\tvar times = this.times;\\r\\n\\r\\n\\t\\t\\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\ttimes[ i ] *= timeScale;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\\r\\n\\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\\r\\n\\ttrim: function( startTime, endTime ) {\\r\\n\\r\\n\\t\\tvar times = this.times,\\r\\n\\t\\t\\tnKeys = times.length,\\r\\n\\t\\t\\tfrom = 0,\\r\\n\\t\\t\\tto = nKeys - 1;\\r\\n\\r\\n\\t\\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\\r\\n\\t\\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\\r\\n\\r\\n\\t\\t++ to; // inclusive -> exclusive bound\\r\\n\\r\\n\\t\\tif( from !== 0 || to !== nKeys ) {\\r\\n\\r\\n\\t\\t\\t// empty tracks are forbidden, so keep at least one keyframe\\r\\n\\t\\t\\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\\r\\n\\r\\n\\t\\t\\tvar stride = this.getValueSize();\\r\\n\\t\\t\\tthis.times = THREE.AnimationUtils.arraySlice( times, from, to );\\r\\n\\t\\t\\tthis.values = THREE.AnimationUtils.\\r\\n\\t\\t\\t\\t\\tarraySlice( this.values, from * stride, to * stride );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\\r\\n\\tvalidate: function() {\\r\\n\\r\\n\\t\\tvar valid = true;\\r\\n\\r\\n\\t\\tvar valueSize = this.getValueSize();\\r\\n\\t\\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( \\\"invalid value size in track\\\", this );\\r\\n\\t\\t\\tvalid = false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar times = this.times,\\r\\n\\t\\t\\tvalues = this.values,\\r\\n\\r\\n\\t\\t\\tnKeys = times.length;\\r\\n\\r\\n\\t\\tif( nKeys === 0 ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( \\\"track is empty\\\", this );\\r\\n\\t\\t\\tvalid = false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar prevTime = null;\\r\\n\\r\\n\\t\\tfor( var i = 0; i !== nKeys; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar currTime = times[ i ];\\r\\n\\r\\n\\t\\t\\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.error( \\\"time is not a valid number\\\", this, i, currTime );\\r\\n\\t\\t\\t\\tvalid = false;\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif( prevTime !== null && prevTime > currTime ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.error( \\\"out of order keys\\\", this, i, currTime, prevTime );\\r\\n\\t\\t\\t\\tvalid = false;\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tprevTime = currTime;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( values !== undefined ) {\\r\\n\\r\\n\\t\\t\\tif ( THREE.AnimationUtils.isTypedArray( values ) ) {\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar value = values[ i ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( isNaN( value ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tconsole.error( \\\"value is not a valid number\\\", this, i, value );\\r\\n\\t\\t\\t\\t\\t\\tvalid = false;\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn valid;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// removes equivalent sequential keys as common in morph target sequences\\r\\n\\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\\r\\n\\toptimize: function() {\\r\\n\\r\\n\\t\\tvar times = this.times,\\r\\n\\t\\t\\tvalues = this.values,\\r\\n\\t\\t\\tstride = this.getValueSize(),\\r\\n\\r\\n\\t\\t\\twriteIndex = 1;\\r\\n\\r\\n\\t\\tfor( var i = 1, n = times.length - 1; i <= n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar keep = false;\\r\\n\\r\\n\\t\\t\\tvar time = times[ i ];\\r\\n\\t\\t\\tvar timeNext = times[ i + 1 ];\\r\\n\\r\\n\\t\\t\\t// remove adjacent keyframes scheduled at the same time\\r\\n\\r\\n\\t\\t\\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// remove unnecessary keyframes same as their neighbors\\r\\n\\t\\t\\t\\tvar offset = i * stride,\\r\\n\\t\\t\\t\\t\\toffsetP = offset - stride,\\r\\n\\t\\t\\t\\t\\toffsetN = offset + stride;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 0; j !== stride; ++ j ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar value = values[ offset + j ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( value !== values[ offsetP + j ] ||\\r\\n\\t\\t\\t\\t\\t\\t\\tvalue !== values[ offsetN + j ] ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tkeep = true;\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// in-place compaction\\r\\n\\r\\n\\t\\t\\tif ( keep ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( i !== writeIndex ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttimes[ writeIndex ] = times[ i ];\\r\\n\\r\\n\\t\\t\\t\\t\\tvar readOffset = i * stride,\\r\\n\\t\\t\\t\\t\\t\\twriteOffset = writeIndex * stride;\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var j = 0; j !== stride; ++ j ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvalues[ writeOffset + j ] = values[ readOffset + j ];\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t++ writeIndex;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( writeIndex !== times.length ) {\\r\\n\\r\\n\\t\\t\\tthis.times = THREE.AnimationUtils.arraySlice( times, 0, writeIndex );\\r\\n\\t\\t\\tthis.values = THREE.AnimationUtils.arraySlice( values, 0, writeIndex * stride );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// Static methods:\\r\\n\\r\\nObject.assign( THREE.KeyframeTrack, {\\r\\n\\r\\n\\t// Serialization (in static context, because of constructor invocation\\r\\n\\t// and automatic invocation of .toJSON):\\r\\n\\r\\n\\tparse: function( json ) {\\r\\n\\r\\n\\t\\tif( json.type === undefined ) {\\r\\n\\r\\n\\t\\t\\tthrow new Error( \\\"track type undefined, can not parse\\\" );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar trackType = THREE.KeyframeTrack._getTrackTypeForValueTypeName( json.type );\\r\\n\\r\\n\\t\\tif ( json.times === undefined ) {\\r\\n\\r\\n\\t\\t\\tvar times = [], values = [];\\r\\n\\r\\n\\t\\t\\tTHREE.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\\r\\n\\r\\n\\t\\t\\tjson.times = times;\\r\\n\\t\\t\\tjson.values = values;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// derived classes can define a static parse method\\r\\n\\t\\tif ( trackType.parse !== undefined ) {\\r\\n\\r\\n\\t\\t\\treturn trackType.parse( json );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// by default, we asssume a constructor compatible with the base\\r\\n\\t\\t\\treturn new trackType(\\r\\n\\t\\t\\t\\t\\tjson.name, json.times, json.values, json.interpolation );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoJSON: function( track ) {\\r\\n\\r\\n\\t\\tvar trackType = track.constructor;\\r\\n\\r\\n\\t\\tvar json;\\r\\n\\r\\n\\t\\t// derived classes can define a static toJSON method\\r\\n\\t\\tif ( trackType.toJSON !== undefined ) {\\r\\n\\r\\n\\t\\t\\tjson = trackType.toJSON( track );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// by default, we assume the data can be serialized as-is\\r\\n\\t\\t\\tjson = {\\r\\n\\r\\n\\t\\t\\t\\t'name': track.name,\\r\\n\\t\\t\\t\\t'times': THREE.AnimationUtils.convertArray( track.times, Array ),\\r\\n\\t\\t\\t\\t'values': THREE.AnimationUtils.convertArray( track.values, Array )\\r\\n\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\tvar interpolation = track.getInterpolation();\\r\\n\\r\\n\\t\\t\\tif ( interpolation !== track.DefaultInterpolation ) {\\r\\n\\r\\n\\t\\t\\t\\tjson.interpolation = interpolation;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tjson.type = track.ValueTypeName; // mandatory\\r\\n\\r\\n\\t\\treturn json;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_getTrackTypeForValueTypeName: function( typeName ) {\\r\\n\\r\\n\\t\\tswitch( typeName.toLowerCase() ) {\\r\\n\\r\\n\\t\\t\\tcase \\\"scalar\\\":\\r\\n\\t\\t\\tcase \\\"double\\\":\\r\\n\\t\\t\\tcase \\\"float\\\":\\r\\n\\t\\t\\tcase \\\"number\\\":\\r\\n\\t\\t\\tcase \\\"integer\\\":\\r\\n\\r\\n\\t\\t\\t\\treturn THREE.NumberKeyframeTrack;\\r\\n\\r\\n\\t\\t\\tcase \\\"vector\\\":\\r\\n\\t\\t\\tcase \\\"vector2\\\":\\r\\n\\t\\t\\tcase \\\"vector3\\\":\\r\\n\\t\\t\\tcase \\\"vector4\\\":\\r\\n\\r\\n\\t\\t\\t\\treturn THREE.VectorKeyframeTrack;\\r\\n\\r\\n\\t\\t\\tcase \\\"color\\\":\\r\\n\\r\\n\\t\\t\\t\\treturn THREE.ColorKeyframeTrack;\\r\\n\\r\\n\\t\\t\\tcase \\\"quaternion\\\":\\r\\n\\r\\n\\t\\t\\t\\treturn THREE.QuaternionKeyframeTrack;\\r\\n\\r\\n\\t\\t\\tcase \\\"bool\\\":\\r\\n\\t\\t\\tcase \\\"boolean\\\":\\r\\n\\r\\n\\t\\t\\t\\treturn THREE.BooleanKeyframeTrack;\\r\\n\\r\\n\\t\\t\\tcase \\\"string\\\":\\r\\n\\r\\n\\t\\t\\t\\treturn THREE.StringKeyframeTrack;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthrow new Error( \\\"Unsupported typeName: \\\" + typeName );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/animation/PropertyBinding.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * A reference to a real property in the scene graph.\\r\\n *\\r\\n *\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.PropertyBinding = function ( rootNode, path, parsedPath ) {\\r\\n\\r\\n\\tthis.path = path;\\r\\n\\tthis.parsedPath = parsedPath ||\\r\\n\\t\\t\\tTHREE.PropertyBinding.parseTrackName( path );\\r\\n\\r\\n\\tthis.node = THREE.PropertyBinding.findNode(\\r\\n\\t\\t\\trootNode, this.parsedPath.nodeName ) || rootNode;\\r\\n\\r\\n\\tthis.rootNode = rootNode;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PropertyBinding.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.PropertyBinding,\\r\\n\\r\\n\\tgetValue: function getValue_unbound( targetArray, offset ) {\\r\\n\\r\\n\\t\\tthis.bind();\\r\\n\\t\\tthis.getValue( targetArray, offset );\\r\\n\\r\\n\\t\\t// Note: This class uses a State pattern on a per-method basis:\\r\\n\\t\\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\\r\\n\\t\\t// prototype version of these methods with one that represents\\r\\n\\t\\t// the bound state. When the property is not found, the methods\\r\\n\\t\\t// become no-ops.\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetValue: function getValue_unbound( sourceArray, offset ) {\\r\\n\\r\\n\\t\\tthis.bind();\\r\\n\\t\\tthis.setValue( sourceArray, offset );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// create getter / setter pair for a property in the scene graph\\r\\n\\tbind: function() {\\r\\n\\r\\n\\t\\tvar targetObject = this.node,\\r\\n\\t\\t\\tparsedPath = this.parsedPath,\\r\\n\\r\\n\\t\\t\\tobjectName = parsedPath.objectName,\\r\\n\\t\\t\\tpropertyName = parsedPath.propertyName,\\r\\n\\t\\t\\tpropertyIndex = parsedPath.propertyIndex;\\r\\n\\r\\n\\t\\tif ( ! targetObject ) {\\r\\n\\r\\n\\t\\t\\ttargetObject = THREE.PropertyBinding.findNode(\\r\\n\\t\\t\\t\\t\\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\\r\\n\\r\\n\\t\\t\\tthis.node = targetObject;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// set fail state so we can just 'return' on error\\r\\n\\t\\tthis.getValue = this._getValue_unavailable;\\r\\n\\t\\tthis.setValue = this._setValue_unavailable;\\r\\n\\r\\n \\t\\t// ensure there is a value node\\r\\n\\t\\tif ( ! targetObject ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( \\\"  trying to update node for track: \\\" + this.path + \\\" but it wasn't found.\\\" );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( objectName ) {\\r\\n\\r\\n\\t\\t\\tvar objectIndex = parsedPath.objectIndex;\\r\\n\\r\\n\\t\\t\\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\\r\\n\\t\\t\\tswitch ( objectName ) {\\r\\n\\r\\n\\t\\t\\t\\tcase 'materials':\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ! targetObject.material ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to material as node does not have a material', this );\\r\\n\\t\\t\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ! targetObject.material.materials ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\\r\\n\\t\\t\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\ttargetObject = targetObject.material.materials;\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'bones':\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ! targetObject.skeleton ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\\r\\n\\t\\t\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// potential future optimization: skip this if propertyIndex is already an integer\\r\\n\\t\\t\\t\\t\\t// and convert the integer string to a true integer.\\r\\n\\r\\n\\t\\t\\t\\t\\ttargetObject = targetObject.skeleton.bones;\\r\\n\\r\\n\\t\\t\\t\\t\\t// support resolving morphTarget names into indices.\\r\\n\\t\\t\\t\\t\\tfor ( var i = 0; i < targetObject.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( targetObject[ i ].name === objectIndex ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tobjectIndex = i;\\r\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tdefault:\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( targetObject[ objectName ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to objectName of node, undefined', this );\\r\\n\\t\\t\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\ttargetObject = targetObject[ objectName ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t\\tif ( objectIndex !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( targetObject[ objectIndex ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.error( \\\"  trying to bind to objectIndex of objectName, but is undefined:\\\", this, targetObject );\\r\\n\\t\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\ttargetObject = targetObject[ objectIndex ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// resolve property\\r\\n\\t\\tvar nodeProperty = targetObject[ propertyName ];\\r\\n\\r\\n\\t\\tif ( nodeProperty === undefined ) {\\r\\n\\r\\n\\t\\t\\tvar nodeName = parsedPath.nodeName;\\r\\n\\r\\n\\t\\t\\tconsole.error( \\\"  trying to update property for track: \\\" + nodeName +\\r\\n\\t\\t\\t\\t\\t'.' + propertyName + \\\" but it wasn't found.\\\", targetObject );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// determine versioning scheme\\r\\n\\t\\tvar versioning = this.Versioning.None;\\r\\n\\r\\n\\t\\tif ( targetObject.needsUpdate !== undefined ) { // material\\r\\n\\r\\n\\t\\t\\tversioning = this.Versioning.NeedsUpdate;\\r\\n\\t\\t\\tthis.targetObject = targetObject;\\r\\n\\r\\n\\t\\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\\r\\n\\r\\n\\t\\t\\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\\r\\n\\t\\t\\tthis.targetObject = targetObject;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// determine how the property gets bound\\r\\n\\t\\tvar bindingType = this.BindingType.Direct;\\r\\n\\r\\n\\t\\tif ( propertyIndex !== undefined ) {\\r\\n\\t\\t\\t// access a sub element of the property array (only primitives are supported right now)\\r\\n\\r\\n\\t\\t\\tif ( propertyName === \\\"morphTargetInfluences\\\" ) {\\r\\n\\t\\t\\t\\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\\r\\n\\r\\n\\t\\t\\t\\t// support resolving morphTarget names into indices.\\r\\n\\t\\t\\t\\tif ( ! targetObject.geometry ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\\r\\n\\t\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( ! targetObject.geometry.morphTargets ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\\r\\n\\t\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tpropertyIndex = i;\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tbindingType = this.BindingType.ArrayElement;\\r\\n\\r\\n\\t\\t\\tthis.resolvedProperty = nodeProperty;\\r\\n\\t\\t\\tthis.propertyIndex = propertyIndex;\\r\\n\\r\\n\\t\\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\\r\\n\\t\\t\\t// must use copy for Object3D.Euler/Quaternion\\r\\n\\r\\n\\t\\t\\tbindingType = this.BindingType.HasFromToArray;\\r\\n\\r\\n\\t\\t\\tthis.resolvedProperty = nodeProperty;\\r\\n\\r\\n\\t\\t} else if ( nodeProperty.length !== undefined ) {\\r\\n\\r\\n\\t\\t\\tbindingType = this.BindingType.EntireArray;\\r\\n\\r\\n\\t\\t\\tthis.resolvedProperty = nodeProperty;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.propertyName = propertyName;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// select getter / setter\\r\\n\\t\\tthis.getValue = this.GetterByBindingType[ bindingType ];\\r\\n\\t\\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tunbind: function() {\\r\\n\\r\\n\\t\\tthis.node = null;\\r\\n\\r\\n\\t\\t// back to the prototype version of getValue / setValue\\r\\n\\t\\t// note: avoiding to mutate the shape of 'this' via 'delete'\\r\\n\\t\\tthis.getValue = this._getValue_unbound;\\r\\n\\t\\tthis.setValue = this._setValue_unbound;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.PropertyBinding.prototype, { // prototype, continued\\r\\n\\r\\n\\t// these are used to \\\"bind\\\" a nonexistent property\\r\\n\\t_getValue_unavailable: function() {},\\r\\n\\t_setValue_unavailable: function() {},\\r\\n\\r\\n\\t// initial state of these methods that calls 'bind'\\r\\n\\t_getValue_unbound: THREE.PropertyBinding.prototype.getValue,\\r\\n\\t_setValue_unbound: THREE.PropertyBinding.prototype.setValue,\\r\\n\\r\\n\\tBindingType: {\\r\\n\\t\\tDirect: 0,\\r\\n\\t\\tEntireArray: 1,\\r\\n\\t\\tArrayElement: 2,\\r\\n\\t\\tHasFromToArray: 3\\r\\n\\t},\\r\\n\\r\\n\\tVersioning: {\\r\\n\\t\\tNone: 0,\\r\\n\\t\\tNeedsUpdate: 1,\\r\\n\\t\\tMatrixWorldNeedsUpdate: 2\\r\\n\\t},\\r\\n\\r\\n\\tGetterByBindingType: [\\r\\n\\r\\n\\t\\tfunction getValue_direct( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\tbuffer[ offset ] = this.node[ this.propertyName ];\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tfunction getValue_array( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\tvar source = this.resolvedProperty;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\tbuffer[ offset ++ ] = source[ i ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tfunction getValue_arrayElement( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tfunction getValue_toArray( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\tthis.resolvedProperty.toArray( buffer, offset );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t],\\r\\n\\r\\n\\tSetterByBindingTypeAndVersioning: [\\r\\n\\r\\n\\t\\t[\\r\\n\\t\\t\\t// Direct\\r\\n\\r\\n\\t\\t\\tfunction setValue_direct( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.node[ this.propertyName ] = buffer[ offset ];\\r\\n\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.node[ this.propertyName ] = buffer[ offset ];\\r\\n\\t\\t\\t\\tthis.targetObject.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.node[ this.propertyName ] = buffer[ offset ];\\r\\n\\t\\t\\t\\tthis.targetObject.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t], [\\r\\n\\r\\n\\t\\t\\t// EntireArray\\r\\n\\r\\n\\t\\t\\tfunction setValue_array( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\t\\tvar dest = this.resolvedProperty;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tdest[ i ] = buffer[ offset ++ ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\t\\tvar dest = this.resolvedProperty;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tdest[ i ] = buffer[ offset ++ ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tthis.targetObject.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\t\\tvar dest = this.resolvedProperty;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tdest[ i ] = buffer[ offset ++ ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tthis.targetObject.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t], [\\r\\n\\r\\n\\t\\t\\t// ArrayElement\\r\\n\\r\\n\\t\\t\\tfunction setValue_arrayElement( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\\r\\n\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\\r\\n\\t\\t\\t\\tthis.targetObject.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\\r\\n\\t\\t\\t\\tthis.targetObject.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t], [\\r\\n\\r\\n\\t\\t\\t// HasToFromArray\\r\\n\\r\\n\\t\\t\\tfunction setValue_fromArray( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.resolvedProperty.fromArray( buffer, offset );\\r\\n\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.resolvedProperty.fromArray( buffer, offset );\\r\\n\\t\\t\\t\\tthis.targetObject.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.resolvedProperty.fromArray( buffer, offset );\\r\\n\\t\\t\\t\\tthis.targetObject.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t]\\r\\n\\r\\n\\t]\\r\\n\\r\\n} );\\r\\n\\r\\nTHREE.PropertyBinding.Composite =\\r\\n\\t\\tfunction( targetGroup, path, optionalParsedPath ) {\\r\\n\\r\\n\\tvar parsedPath = optionalParsedPath ||\\r\\n\\t\\t\\tTHREE.PropertyBinding.parseTrackName( path );\\r\\n\\r\\n\\tthis._targetGroup = targetGroup;\\r\\n\\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PropertyBinding.Composite.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.PropertyBinding.Composite,\\r\\n\\r\\n\\tgetValue: function( array, offset ) {\\r\\n\\r\\n\\t\\tthis.bind(); // bind all binding\\r\\n\\r\\n\\t\\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\\r\\n\\t\\t\\tbinding = this._bindings[ firstValidIndex ];\\r\\n\\r\\n\\t\\t// and only call .getValue on the first\\r\\n\\t\\tif ( binding !== undefined ) binding.getValue( array, offset );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetValue: function( array, offset ) {\\r\\n\\r\\n\\t\\tvar bindings = this._bindings;\\r\\n\\r\\n\\t\\tfor ( var i = this._targetGroup.nCachedObjects_,\\r\\n\\t\\t\\t\\tn = bindings.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tbindings[ i ].setValue( array, offset );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tbind: function() {\\r\\n\\r\\n\\t\\tvar bindings = this._bindings;\\r\\n\\r\\n\\t\\tfor ( var i = this._targetGroup.nCachedObjects_,\\r\\n\\t\\t\\t\\tn = bindings.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tbindings[ i ].bind();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tunbind: function() {\\r\\n\\r\\n\\t\\tvar bindings = this._bindings;\\r\\n\\r\\n\\t\\tfor ( var i = this._targetGroup.nCachedObjects_,\\r\\n\\t\\t\\t\\tn = bindings.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tbindings[ i ].unbind();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PropertyBinding.create = function( root, path, parsedPath ) {\\r\\n\\r\\n\\tif ( ! ( root instanceof THREE.AnimationObjectGroup ) ) {\\r\\n\\r\\n\\t\\treturn new THREE.PropertyBinding( root, path, parsedPath );\\r\\n\\r\\n\\t} else {\\r\\n\\r\\n\\t\\treturn new THREE.PropertyBinding.Composite( root, path, parsedPath );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PropertyBinding.parseTrackName = function( trackName ) {\\r\\n\\r\\n\\t// matches strings in the form of:\\r\\n\\t//    nodeName.property\\r\\n\\t//    nodeName.property[accessor]\\r\\n\\t//    nodeName.material.property[accessor]\\r\\n\\t//    uuid.property[accessor]\\r\\n\\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\\r\\n\\t//    parentName/nodeName.property\\r\\n\\t//    parentName/parentName/nodeName.property[index]\\r\\n\\t//\\t  .bone[Armature.DEF_cog].position\\r\\n\\t// created and tested via https://regex101.com/#javascript\\r\\n\\r\\n\\tvar re = /^(([\\\\w]+\\\\/)*)([\\\\w-\\\\d]+)?(\\\\.([\\\\w]+)(\\\\[([\\\\w\\\\d\\\\[\\\\]\\\\_.:\\\\- ]+)\\\\])?)?(\\\\.([\\\\w.]+)(\\\\[([\\\\w\\\\d\\\\[\\\\]\\\\_. ]+)\\\\])?)$/;\\r\\n\\tvar matches = re.exec( trackName );\\r\\n\\r\\n\\tif ( ! matches ) {\\r\\n\\r\\n\\t\\tthrow new Error( \\\"cannot parse trackName at all: \\\" + trackName );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tif ( matches.index === re.lastIndex ) {\\r\\n\\r\\n\\t\\tre.lastIndex++;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar results = {\\r\\n\\t\\t// directoryName: matches[ 1 ], // (tschw) currently unused\\r\\n\\t\\tnodeName: matches[ 3 ], \\t// allowed to be null, specified root node.\\r\\n\\t\\tobjectName: matches[ 5 ],\\r\\n\\t\\tobjectIndex: matches[ 7 ],\\r\\n\\t\\tpropertyName: matches[ 9 ],\\r\\n\\t\\tpropertyIndex: matches[ 11 ]\\t// allowed to be null, specifies that the whole property is set.\\r\\n\\t};\\r\\n\\r\\n\\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\\r\\n\\r\\n\\t\\tthrow new Error( \\\"can not parse propertyName from trackName: \\\" + trackName );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn results;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PropertyBinding.findNode = function( root, nodeName ) {\\r\\n\\r\\n\\tif ( ! nodeName || nodeName === \\\"\\\" || nodeName === \\\"root\\\" || nodeName === \\\".\\\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\\r\\n\\r\\n\\t\\treturn root;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// search into skeleton bones.\\r\\n\\tif ( root.skeleton ) {\\r\\n\\r\\n\\t\\tvar searchSkeleton = function( skeleton ) {\\r\\n\\r\\n\\t\\t\\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar bone = skeleton.bones[ i ];\\r\\n\\r\\n\\t\\t\\t\\tif ( bone.name === nodeName ) {\\r\\n\\r\\n\\t\\t\\t\\t\\treturn bone;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn null;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tvar bone = searchSkeleton( root.skeleton );\\r\\n\\r\\n\\t\\tif ( bone ) {\\r\\n\\r\\n\\t\\t\\treturn bone;\\r\\n\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// search into node subtree.\\r\\n\\tif ( root.children ) {\\r\\n\\r\\n\\t\\tvar searchNodeSubtree = function( children ) {\\r\\n\\r\\n\\t\\t\\tfor( var i = 0; i < children.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar childNode = children[ i ];\\r\\n\\r\\n\\t\\t\\t\\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\\r\\n\\r\\n\\t\\t\\t\\t\\treturn childNode;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tvar result = searchNodeSubtree( childNode.children );\\r\\n\\r\\n\\t\\t\\t\\tif ( result ) return result;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn null;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tvar subTreeNode = searchNodeSubtree( root.children );\\r\\n\\r\\n\\t\\tif ( subTreeNode ) {\\r\\n\\r\\n\\t\\t\\treturn subTreeNode;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn null;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/animation/PropertyMixer.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * Buffered scene graph property that allows weighted accumulation.\\r\\n *\\r\\n *\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.PropertyMixer = function ( binding, typeName, valueSize ) {\\r\\n\\r\\n\\tthis.binding = binding;\\r\\n\\tthis.valueSize = valueSize;\\r\\n\\r\\n\\tvar bufferType = Float64Array,\\r\\n\\t\\tmixFunction;\\r\\n\\r\\n\\tswitch ( typeName ) {\\r\\n\\r\\n\\t\\tcase 'quaternion':\\t\\t\\tmixFunction = this._slerp;\\t\\tbreak;\\r\\n\\r\\n\\t\\tcase 'string':\\r\\n\\t\\tcase 'bool':\\r\\n\\r\\n\\t\\t\\tbufferType = Array,\\t\\tmixFunction = this._select;\\t\\tbreak;\\r\\n\\r\\n\\t\\tdefault:\\t\\t\\t\\t\\tmixFunction = this._lerp;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.buffer = new bufferType( valueSize * 4 );\\r\\n\\t// layout: [ incoming | accu0 | accu1 | orig ]\\r\\n\\t//\\r\\n\\t// interpolators can use .buffer as their .result\\r\\n\\t// the data then goes to 'incoming'\\r\\n\\t//\\r\\n\\t// 'accu0' and 'accu1' are used frame-interleaved for\\r\\n\\t// the cumulative result and are compared to detect\\r\\n\\t// changes\\r\\n\\t//\\r\\n\\t// 'orig' stores the original state of the property\\r\\n\\r\\n\\tthis._mixBufferRegion = mixFunction;\\r\\n\\r\\n\\tthis.cumulativeWeight = 0;\\r\\n\\r\\n\\tthis.useCount = 0;\\r\\n\\tthis.referenceCount = 0;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PropertyMixer.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.PropertyMixer,\\r\\n\\r\\n\\t// accumulate data in the 'incoming' region into 'accu<i>'\\r\\n\\taccumulate: function( accuIndex, weight ) {\\r\\n\\r\\n\\t\\t// note: happily accumulating nothing when weight = 0, the caller knows\\r\\n\\t\\t// the weight and shouldn't have made the call in the first place\\r\\n\\r\\n\\t\\tvar buffer = this.buffer,\\r\\n\\t\\t\\tstride = this.valueSize,\\r\\n\\t\\t\\toffset = accuIndex * stride + stride,\\r\\n\\r\\n\\t\\t\\tcurrentWeight = this.cumulativeWeight;\\r\\n\\r\\n\\t\\tif ( currentWeight === 0 ) {\\r\\n\\r\\n\\t\\t\\t// accuN := incoming * weight\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\tbuffer[ offset + i ] = buffer[ i ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tcurrentWeight = weight;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// accuN := accuN + incoming * weight\\r\\n\\r\\n\\t\\t\\tcurrentWeight += weight;\\r\\n\\t\\t\\tvar mix = weight / currentWeight;\\r\\n\\t\\t\\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.cumulativeWeight = currentWeight;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// apply the state of 'accu<i>' to the binding when accus differ\\r\\n\\tapply: function( accuIndex ) {\\r\\n\\r\\n\\t\\tvar stride = this.valueSize,\\r\\n\\t\\t\\tbuffer = this.buffer,\\r\\n\\t\\t\\toffset = accuIndex * stride + stride,\\r\\n\\r\\n\\t\\t\\tweight = this.cumulativeWeight,\\r\\n\\r\\n\\t\\t\\tbinding = this.binding;\\r\\n\\r\\n\\t\\tthis.cumulativeWeight = 0;\\r\\n\\r\\n\\t\\tif ( weight < 1 ) {\\r\\n\\r\\n\\t\\t\\t// accuN := accuN + original * ( 1 - cumulativeWeight )\\r\\n\\r\\n\\t\\t\\tvar originalValueOffset = stride * 3;\\r\\n\\r\\n\\t\\t\\tthis._mixBufferRegion(\\r\\n\\t\\t\\t\\t\\tbuffer, offset, originalValueOffset, 1 - weight, stride );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\\r\\n\\r\\n\\t\\t\\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\\r\\n\\r\\n\\t\\t\\t\\t// value has changed -> update scene graph\\r\\n\\r\\n\\t\\t\\t\\tbinding.setValue( buffer, offset );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// remember the state of the bound property and copy it to both accus\\r\\n\\tsaveOriginalState: function() {\\r\\n\\r\\n\\t\\tvar binding = this.binding;\\r\\n\\r\\n\\t\\tvar buffer = this.buffer,\\r\\n\\t\\t\\tstride = this.valueSize,\\r\\n\\r\\n\\t\\t\\toriginalValueOffset = stride * 3;\\r\\n\\r\\n\\t\\tbinding.getValue( buffer, originalValueOffset );\\r\\n\\r\\n\\t\\t// accu[0..1] := orig -- initially detect changes against the original\\r\\n\\t\\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\\r\\n\\r\\n\\t\\t\\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.cumulativeWeight = 0;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// apply the state previously taken via 'saveOriginalState' to the binding\\r\\n\\trestoreOriginalState: function() {\\r\\n\\r\\n\\t\\tvar originalValueOffset = this.valueSize * 3;\\r\\n\\t\\tthis.binding.setValue( this.buffer, originalValueOffset );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\r\\n\\t// mix functions\\r\\n\\r\\n\\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\\r\\n\\r\\n\\t\\tif ( t >= 0.5 ) {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\\r\\n\\r\\n\\t\\tTHREE.Quaternion.slerpFlat( buffer, dstOffset,\\r\\n\\t\\t\\t\\tbuffer, dstOffset, buffer, srcOffset, t );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\\r\\n\\r\\n\\t\\tvar s = 1 - t;\\r\\n\\r\\n\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar j = dstOffset + i;\\r\\n\\r\\n\\t\\t\\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/animation/tracks/BooleanKeyframeTrack.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * A Track of Boolean keyframe values.\\r\\n *\\r\\n *\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.BooleanKeyframeTrack = function ( name, times, values ) {\\r\\n\\r\\n\\tTHREE.KeyframeTrack.call( this, name, times, values );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.BooleanKeyframeTrack.prototype =\\r\\n\\t\\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.BooleanKeyframeTrack,\\r\\n\\r\\n\\tValueTypeName: 'bool',\\r\\n\\tValueBufferType: Array,\\r\\n\\r\\n\\tDefaultInterpolation: THREE.InterpolateDiscrete,\\r\\n\\r\\n\\tInterpolantFactoryMethodLinear: undefined,\\r\\n\\tInterpolantFactoryMethodSmooth: undefined\\r\\n\\r\\n\\t// Note: Actually this track could have a optimized / compressed\\r\\n\\t// representation of a single value and a custom interpolant that\\r\\n\\t// computes \\\"firstValue ^ isOdd( index )\\\".\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/animation/tracks/ColorKeyframeTrack.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * A Track of keyframe values that represent color.\\r\\n *\\r\\n *\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.ColorKeyframeTrack = function ( name, times, values, interpolation ) {\\r\\n\\r\\n\\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ColorKeyframeTrack.prototype =\\r\\n\\t\\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.ColorKeyframeTrack,\\r\\n\\r\\n\\tValueTypeName: 'color'\\r\\n\\r\\n\\t// ValueBufferType is inherited\\r\\n\\r\\n\\t// DefaultInterpolation is inherited\\r\\n\\r\\n\\r\\n\\t// Note: Very basic implementation and nothing special yet.\\r\\n\\t// However, this is the place for color space parameterization.\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/animation/tracks/NumberKeyframeTrack.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * A Track of numeric keyframe values.\\r\\n *\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.NumberKeyframeTrack = function ( name, times, values, interpolation ) {\\r\\n\\r\\n\\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.NumberKeyframeTrack.prototype =\\r\\n\\t\\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.NumberKeyframeTrack,\\r\\n\\r\\n\\tValueTypeName: 'number',\\r\\n\\r\\n\\t// ValueBufferType is inherited\\r\\n\\r\\n\\t// DefaultInterpolation is inherited\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/animation/tracks/QuaternionKeyframeTrack.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * A Track of quaternion keyframe values.\\r\\n *\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.QuaternionKeyframeTrack = function ( name, times, values, interpolation ) {\\r\\n\\r\\n\\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.QuaternionKeyframeTrack.prototype =\\r\\n\\t\\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.QuaternionKeyframeTrack,\\r\\n\\r\\n\\tValueTypeName: 'quaternion',\\r\\n\\r\\n\\t// ValueBufferType is inherited\\r\\n\\r\\n\\tDefaultInterpolation: THREE.InterpolateLinear,\\r\\n\\r\\n\\tInterpolantFactoryMethodLinear: function( result ) {\\r\\n\\r\\n\\t\\treturn new THREE.QuaternionLinearInterpolant(\\r\\n\\t\\t\\t\\tthis.times, this.values, this.getValueSize(), result );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/animation/tracks/StringKeyframeTrack.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * A Track that interpolates Strings\\r\\n *\\r\\n *\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.StringKeyframeTrack = function ( name, times, values, interpolation ) {\\r\\n\\r\\n\\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.StringKeyframeTrack.prototype =\\r\\n\\t\\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.StringKeyframeTrack,\\r\\n\\r\\n\\tValueTypeName: 'string',\\r\\n\\tValueBufferType: Array,\\r\\n\\r\\n\\tDefaultInterpolation: THREE.InterpolateDiscrete,\\r\\n\\r\\n\\tInterpolantFactoryMethodLinear: undefined,\\r\\n\\r\\n\\tInterpolantFactoryMethodSmooth: undefined\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/animation/tracks/VectorKeyframeTrack.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * A Track of vectored keyframe values.\\r\\n *\\r\\n *\\r\\n * @author Ben Houston / http://clara.io/\\r\\n * @author David Sarno / http://lighthaus.us/\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.VectorKeyframeTrack = function ( name, times, values, interpolation ) {\\r\\n\\r\\n\\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.VectorKeyframeTrack.prototype =\\r\\n\\t\\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.VectorKeyframeTrack,\\r\\n\\r\\n\\tValueTypeName: 'vector'\\r\\n\\r\\n\\t// ValueBufferType is inherited\\r\\n\\r\\n\\t// DefaultInterpolation is inherited\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/audio/Audio.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\\r\\n */\\r\\n\\r\\nTHREE.Audio = function ( listener ) {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'Audio';\\r\\n\\r\\n\\tthis.context = listener.context;\\r\\n\\tthis.source = this.context.createBufferSource();\\r\\n\\tthis.source.onended = this.onEnded.bind( this );\\r\\n\\r\\n\\tthis.gain = this.context.createGain();\\r\\n\\tthis.gain.connect( listener.getInput() );\\r\\n\\r\\n\\tthis.autoplay = false;\\r\\n\\r\\n\\tthis.startTime = 0;\\r\\n\\tthis.playbackRate = 1;\\r\\n\\tthis.isPlaying = false;\\r\\n\\tthis.hasPlaybackControl = true;\\r\\n\\tthis.sourceType = 'empty';\\r\\n\\r\\n\\tthis.filters = [];\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Audio.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.Audio,\\r\\n\\r\\n\\tgetOutput: function () {\\r\\n\\r\\n\\t\\treturn this.gain;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetNodeSource: function ( audioNode ) {\\r\\n\\r\\n\\t\\tthis.hasPlaybackControl = false;\\r\\n\\t\\tthis.sourceType = 'audioNode';\\r\\n\\t\\tthis.source = audioNode;\\r\\n\\t\\tthis.connect();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetBuffer: function ( audioBuffer ) {\\r\\n\\r\\n\\t\\tthis.source.buffer = audioBuffer;\\r\\n\\t\\tthis.sourceType = 'buffer';\\r\\n\\r\\n\\t\\tif ( this.autoplay ) this.play();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tplay: function () {\\r\\n\\r\\n\\t\\tif ( this.isPlaying === true ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.hasPlaybackControl === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar source = this.context.createBufferSource();\\r\\n\\r\\n\\t\\tsource.buffer = this.source.buffer;\\r\\n\\t\\tsource.loop = this.source.loop;\\r\\n\\t\\tsource.onended = this.source.onended;\\r\\n\\t\\tsource.start( 0, this.startTime );\\r\\n\\t\\tsource.playbackRate.value = this.playbackRate;\\r\\n\\r\\n\\t\\tthis.isPlaying = true;\\r\\n\\r\\n\\t\\tthis.source = source;\\r\\n\\r\\n\\t\\treturn this.connect();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tpause: function () {\\r\\n\\r\\n\\t\\tif ( this.hasPlaybackControl === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.source.stop();\\r\\n\\t\\tthis.startTime = this.context.currentTime;\\r\\n\\t\\tthis.isPlaying = false;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tstop: function () {\\r\\n\\r\\n\\t\\tif ( this.hasPlaybackControl === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.source.stop();\\r\\n\\t\\tthis.startTime = 0;\\r\\n\\t\\tthis.isPlaying = false;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tconnect: function () {\\r\\n\\r\\n\\t\\tif ( this.filters.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tthis.source.connect( this.filters[ 0 ] );\\r\\n\\r\\n\\t\\t\\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.source.connect( this.getOutput() );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdisconnect: function () {\\r\\n\\r\\n\\t\\tif ( this.filters.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tthis.source.disconnect( this.filters[ 0 ] );\\r\\n\\r\\n\\t\\t\\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.source.disconnect( this.getOutput() );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetFilters: function () {\\r\\n\\r\\n\\t\\treturn this.filters;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFilters: function ( value ) {\\r\\n\\r\\n\\t\\tif ( ! value ) value = [];\\r\\n\\r\\n\\t\\tif ( this.isPlaying === true ) {\\r\\n\\r\\n\\t\\t\\tthis.disconnect();\\r\\n\\t\\t\\tthis.filters = value;\\r\\n\\t\\t\\tthis.connect();\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.filters = value;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetFilter: function () {\\r\\n\\r\\n\\t\\treturn this.getFilters()[ 0 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFilter: function ( filter ) {\\r\\n\\r\\n\\t\\treturn this.setFilters( filter ? [ filter ] : [] );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetPlaybackRate: function ( value ) {\\r\\n\\r\\n\\t\\tif ( this.hasPlaybackControl === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.playbackRate = value;\\r\\n\\r\\n\\t\\tif ( this.isPlaying === true ) {\\r\\n\\r\\n\\t\\t\\tthis.source.playbackRate.value = this.playbackRate;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetPlaybackRate: function () {\\r\\n\\r\\n\\t\\treturn this.playbackRate;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tonEnded: function () {\\r\\n\\r\\n\\t\\tthis.isPlaying = false;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetLoop: function () {\\r\\n\\r\\n\\t\\tif ( this.hasPlaybackControl === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\r\\n\\t\\t\\treturn false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.source.loop;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetLoop: function ( value ) {\\r\\n\\r\\n\\t\\tif ( this.hasPlaybackControl === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.source.loop = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetVolume: function () {\\r\\n\\r\\n\\t\\treturn this.gain.gain.value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\r\\n\\tsetVolume: function ( value ) {\\r\\n\\r\\n\\t\\tthis.gain.gain.value = value;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/audio/AudioAnalyser.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.AudioAnalyser = function ( audio, fftSize ) {\\r\\n\\r\\n\\tthis.analyser = audio.context.createAnalyser();\\r\\n\\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\\r\\n\\r\\n\\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\\r\\n\\r\\n\\taudio.getOutput().connect( this.analyser );\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.AudioAnalyser.prototype, {\\r\\n\\r\\n\\tgetFrequencyData: function () {\\r\\n\\r\\n\\t\\tthis.analyser.getByteFrequencyData( this.data );\\r\\n\\r\\n\\t\\treturn this.data;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetAverageFrequency: function () {\\r\\n\\r\\n\\t\\tvar value = 0, data = this.getFrequencyData();\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < data.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvalue += data[ i ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn value / data.length;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/audio/AudioContext.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nObject.defineProperty( THREE, 'AudioContext', {\\r\\n\\r\\n\\tget: ( function () {\\r\\n\\r\\n\\t\\tvar context;\\r\\n\\r\\n\\t\\treturn function get() {\\r\\n\\r\\n\\t\\t\\tif ( context === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn context;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )()\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/audio/PositionalAudio.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.PositionalAudio = function ( listener ) {\\r\\n\\r\\n\\tTHREE.Audio.call( this, listener );\\r\\n\\r\\n\\tthis.panner = this.context.createPanner();\\r\\n\\tthis.panner.connect( this.gain );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PositionalAudio.prototype = Object.assign( Object.create( THREE.Audio.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.PositionalAudio,\\r\\n\\r\\n\\tgetOutput: function () {\\r\\n\\r\\n\\t\\treturn this.panner;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetRefDistance: function () {\\r\\n\\r\\n\\t\\treturn this.panner.refDistance;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetRefDistance: function ( value ) {\\r\\n\\r\\n\\t\\tthis.panner.refDistance = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetRolloffFactor: function () {\\r\\n\\r\\n\\t\\treturn this.panner.rolloffFactor;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetRolloffFactor: function ( value ) {\\r\\n\\r\\n\\t\\tthis.panner.rolloffFactor = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetDistanceModel: function () {\\r\\n\\r\\n\\t\\treturn this.panner.distanceModel;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetDistanceModel: function ( value ) {\\r\\n\\r\\n\\t\\tthis.panner.distanceModel = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetMaxDistance: function () {\\r\\n\\r\\n\\t\\treturn this.panner.maxDistance;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetMaxDistance: function ( value ) {\\r\\n\\r\\n\\t\\tthis.panner.maxDistance = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdateMatrixWorld: ( function () {\\r\\n\\r\\n\\t\\tvar position = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function updateMatrixWorld( force ) {\\r\\n\\r\\n\\t\\t\\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\\r\\n\\r\\n\\t\\t\\tposition.setFromMatrixPosition( this.matrixWorld );\\r\\n\\r\\n\\t\\t\\tthis.panner.setPosition( position.x, position.y, position.z );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )()\\r\\n\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/audio/AudioListener.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.AudioListener = function () {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'AudioListener';\\r\\n\\r\\n\\tthis.context = THREE.AudioContext;\\r\\n\\r\\n\\tthis.gain = this.context.createGain();\\r\\n\\tthis.gain.connect( this.context.destination );\\r\\n\\r\\n\\tthis.filter = null;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.AudioListener.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.AudioListener,\\r\\n\\r\\n\\tgetInput: function () {\\r\\n\\r\\n\\t\\treturn this.gain;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tremoveFilter: function ( ) {\\r\\n\\r\\n\\t\\tif ( this.filter !== null ) {\\r\\n\\r\\n\\t\\t\\tthis.gain.disconnect( this.filter );\\r\\n\\t\\t\\tthis.filter.disconnect( this.context.destination );\\r\\n\\t\\t\\tthis.gain.connect( this.context.destination );\\r\\n\\t\\t\\tthis.filter = null;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetFilter: function () {\\r\\n\\r\\n\\t\\treturn this.filter;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetFilter: function ( value ) {\\r\\n\\r\\n\\t\\tif ( this.filter !== null ) {\\r\\n\\r\\n\\t\\t\\tthis.gain.disconnect( this.filter );\\r\\n\\t\\t\\tthis.filter.disconnect( this.context.destination );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.gain.disconnect( this.context.destination );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.filter = value;\\r\\n\\t\\tthis.gain.connect( this.filter );\\r\\n\\t\\tthis.filter.connect( this.context.destination );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetMasterVolume: function () {\\r\\n\\r\\n\\t\\treturn this.gain.gain.value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetMasterVolume: function ( value ) {\\r\\n\\r\\n\\t\\tthis.gain.gain.value = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdateMatrixWorld: ( function () {\\r\\n\\r\\n\\t\\tvar position = new THREE.Vector3();\\r\\n\\t\\tvar quaternion = new THREE.Quaternion();\\r\\n\\t\\tvar scale = new THREE.Vector3();\\r\\n\\r\\n\\t\\tvar orientation = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function updateMatrixWorld( force ) {\\r\\n\\r\\n\\t\\t\\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\\r\\n\\r\\n\\t\\t\\tvar listener = this.context.listener;\\r\\n\\t\\t\\tvar up = this.up;\\r\\n\\r\\n\\t\\t\\tthis.matrixWorld.decompose( position, quaternion, scale );\\r\\n\\r\\n\\t\\t\\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\\r\\n\\r\\n\\t\\t\\tlistener.setPosition( position.x, position.y, position.z );\\r\\n\\t\\t\\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )()\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/cameras/Camera.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n*/\\r\\n\\r\\nTHREE.Camera = function () {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'Camera';\\r\\n\\r\\n\\tthis.matrixWorldInverse = new THREE.Matrix4();\\r\\n\\tthis.projectionMatrix = new THREE.Matrix4();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\\r\\nTHREE.Camera.prototype.constructor = THREE.Camera;\\r\\n\\r\\nTHREE.Camera.prototype.getWorldDirection = function () {\\r\\n\\r\\n\\tvar quaternion = new THREE.Quaternion();\\r\\n\\r\\n\\treturn function getWorldDirection( optionalTarget ) {\\r\\n\\r\\n\\t\\tvar result = optionalTarget || new THREE.Vector3();\\r\\n\\r\\n\\t\\tthis.getWorldQuaternion( quaternion );\\r\\n\\r\\n\\t\\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\\r\\n\\r\\n\\t};\\r\\n\\r\\n}();\\r\\n\\r\\nTHREE.Camera.prototype.lookAt = function () {\\r\\n\\r\\n\\t// This routine does not support cameras with rotated and/or translated parent(s)\\r\\n\\r\\n\\tvar m1 = new THREE.Matrix4();\\r\\n\\r\\n\\treturn function lookAt( vector ) {\\r\\n\\r\\n\\t\\tm1.lookAt( this.position, vector, this.up );\\r\\n\\r\\n\\t\\tthis.quaternion.setFromRotationMatrix( m1 );\\r\\n\\r\\n\\t};\\r\\n\\r\\n}();\\r\\n\\r\\nTHREE.Camera.prototype.clone = function () {\\r\\n\\r\\n\\treturn new this.constructor().copy( this );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Camera.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.Object3D.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\\r\\n\\tthis.projectionMatrix.copy( source.projectionMatrix );\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/cameras/CubeCamera.js\\r\\n\\r\\n/**\\r\\n * Camera for rendering cube maps\\r\\n *\\t- renders scene into axis-aligned cube\\r\\n *\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'CubeCamera';\\r\\n\\r\\n\\tvar fov = 90, aspect = 1;\\r\\n\\r\\n\\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\\r\\n\\tcameraPX.up.set( 0, - 1, 0 );\\r\\n\\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\\r\\n\\tthis.add( cameraPX );\\r\\n\\r\\n\\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\\r\\n\\tcameraNX.up.set( 0, - 1, 0 );\\r\\n\\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\\r\\n\\tthis.add( cameraNX );\\r\\n\\r\\n\\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\\r\\n\\tcameraPY.up.set( 0, 0, 1 );\\r\\n\\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\\r\\n\\tthis.add( cameraPY );\\r\\n\\r\\n\\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\\r\\n\\tcameraNY.up.set( 0, 0, - 1 );\\r\\n\\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\\r\\n\\tthis.add( cameraNY );\\r\\n\\r\\n\\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\\r\\n\\tcameraPZ.up.set( 0, - 1, 0 );\\r\\n\\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\\r\\n\\tthis.add( cameraPZ );\\r\\n\\r\\n\\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\\r\\n\\tcameraNZ.up.set( 0, - 1, 0 );\\r\\n\\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\\r\\n\\tthis.add( cameraNZ );\\r\\n\\r\\n\\tvar options = { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter };\\r\\n\\r\\n\\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\\r\\n\\r\\n\\tthis.updateCubeMap = function ( renderer, scene ) {\\r\\n\\r\\n\\t\\tif ( this.parent === null ) this.updateMatrixWorld();\\r\\n\\r\\n\\t\\tvar renderTarget = this.renderTarget;\\r\\n\\t\\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\\r\\n\\r\\n\\t\\trenderTarget.texture.generateMipmaps = false;\\r\\n\\r\\n\\t\\trenderTarget.activeCubeFace = 0;\\r\\n\\t\\trenderer.render( scene, cameraPX, renderTarget );\\r\\n\\r\\n\\t\\trenderTarget.activeCubeFace = 1;\\r\\n\\t\\trenderer.render( scene, cameraNX, renderTarget );\\r\\n\\r\\n\\t\\trenderTarget.activeCubeFace = 2;\\r\\n\\t\\trenderer.render( scene, cameraPY, renderTarget );\\r\\n\\r\\n\\t\\trenderTarget.activeCubeFace = 3;\\r\\n\\t\\trenderer.render( scene, cameraNY, renderTarget );\\r\\n\\r\\n\\t\\trenderTarget.activeCubeFace = 4;\\r\\n\\t\\trenderer.render( scene, cameraPZ, renderTarget );\\r\\n\\r\\n\\t\\trenderTarget.texture.generateMipmaps = generateMipmaps;\\r\\n\\r\\n\\t\\trenderTarget.activeCubeFace = 5;\\r\\n\\t\\trenderer.render( scene, cameraNZ, renderTarget );\\r\\n\\r\\n\\t\\trenderer.setRenderTarget( null );\\r\\n\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\\r\\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\\r\\n\\r\\n// File:src/cameras/OrthographicCamera.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author arose / http://github.com/arose\\r\\n */\\r\\n\\r\\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\\r\\n\\r\\n\\tTHREE.Camera.call( this );\\r\\n\\r\\n\\tthis.type = 'OrthographicCamera';\\r\\n\\r\\n\\tthis.zoom = 1;\\r\\n\\tthis.view = null;\\r\\n\\r\\n\\tthis.left = left;\\r\\n\\tthis.right = right;\\r\\n\\tthis.top = top;\\r\\n\\tthis.bottom = bottom;\\r\\n\\r\\n\\tthis.near = ( near !== undefined ) ? near : 0.1;\\r\\n\\tthis.far = ( far !== undefined ) ? far : 2000;\\r\\n\\r\\n\\tthis.updateProjectionMatrix();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.OrthographicCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.OrthographicCamera,\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tTHREE.Camera.prototype.copy.call( this, source );\\r\\n\\r\\n\\t\\tthis.left = source.left;\\r\\n\\t\\tthis.right = source.right;\\r\\n\\t\\tthis.top = source.top;\\r\\n\\t\\tthis.bottom = source.bottom;\\r\\n\\t\\tthis.near = source.near;\\r\\n\\t\\tthis.far = source.far;\\r\\n\\r\\n\\t\\tthis.zoom = source.zoom;\\r\\n\\t\\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\\r\\n\\r\\n\\t\\tthis.view = {\\r\\n\\t\\t\\tfullWidth: fullWidth,\\r\\n\\t\\t\\tfullHeight: fullHeight,\\r\\n\\t\\t\\toffsetX: x,\\r\\n\\t\\t\\toffsetY: y,\\r\\n\\t\\t\\twidth: width,\\r\\n\\t\\t\\theight: height\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tthis.updateProjectionMatrix();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclearViewOffset: function() {\\r\\n\\r\\n\\t\\tthis.view = null;\\r\\n\\t\\tthis.updateProjectionMatrix();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdateProjectionMatrix: function () {\\r\\n\\r\\n\\t\\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\\r\\n\\t\\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\\r\\n\\t\\tvar cx = ( this.right + this.left ) / 2;\\r\\n\\t\\tvar cy = ( this.top + this.bottom ) / 2;\\r\\n\\r\\n\\t\\tvar left = cx - dx;\\r\\n\\t\\tvar right = cx + dx;\\r\\n\\t\\tvar top = cy + dy;\\r\\n\\t\\tvar bottom = cy - dy;\\r\\n\\r\\n\\t\\tif ( this.view !== null ) {\\r\\n\\r\\n\\t\\t\\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\\r\\n\\t\\t\\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\\r\\n\\t\\t\\tvar scaleW = ( this.right - this.left ) / this.view.width;\\r\\n\\t\\t\\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\\r\\n\\r\\n\\t\\t\\tleft += scaleW * ( this.view.offsetX / zoomW );\\r\\n\\t\\t\\tright = left + scaleW * ( this.view.width / zoomW );\\r\\n\\t\\t\\ttop -= scaleH * ( this.view.offsetY / zoomH );\\r\\n\\t\\t\\tbottom = top - scaleH * ( this.view.height / zoomH );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoJSON: function ( meta ) {\\r\\n\\r\\n\\t\\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\\r\\n\\r\\n\\t\\tdata.object.zoom = this.zoom;\\r\\n\\t\\tdata.object.left = this.left;\\r\\n\\t\\tdata.object.right = this.right;\\r\\n\\t\\tdata.object.top = this.top;\\r\\n\\t\\tdata.object.bottom = this.bottom;\\r\\n\\t\\tdata.object.near = this.near;\\r\\n\\t\\tdata.object.far = this.far;\\r\\n\\r\\n\\t\\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\\r\\n\\r\\n\\t\\treturn data;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/cameras/PerspectiveCamera.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author greggman / http://games.greggman.com/\\r\\n * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.PerspectiveCamera = function( fov, aspect, near, far ) {\\r\\n\\r\\n\\tTHREE.Camera.call( this );\\r\\n\\r\\n\\tthis.type = 'PerspectiveCamera';\\r\\n\\r\\n\\tthis.fov = fov !== undefined ? fov : 50;\\r\\n\\tthis.zoom = 1;\\r\\n\\r\\n\\tthis.near = near !== undefined ? near : 0.1;\\r\\n\\tthis.far = far !== undefined ? far : 2000;\\r\\n\\tthis.focus = 10;\\r\\n\\r\\n\\tthis.aspect = aspect !== undefined ? aspect : 1;\\r\\n\\tthis.view = null;\\r\\n\\r\\n\\tthis.filmGauge = 35;\\t// width of the film (default in millimeters)\\r\\n\\tthis.filmOffset = 0;\\t// horizontal film offset (same unit as gauge)\\r\\n\\r\\n\\tthis.updateProjectionMatrix();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PerspectiveCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.PerspectiveCamera,\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tTHREE.Camera.prototype.copy.call( this, source );\\r\\n\\r\\n\\t\\tthis.fov = source.fov;\\r\\n\\t\\tthis.zoom = source.zoom;\\r\\n\\r\\n\\t\\tthis.near = source.near;\\r\\n\\t\\tthis.far = source.far;\\r\\n\\t\\tthis.focus = source.focus;\\r\\n\\r\\n\\t\\tthis.aspect = source.aspect;\\r\\n\\t\\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\\r\\n\\r\\n\\t\\tthis.filmGauge = source.filmGauge;\\r\\n\\t\\tthis.filmOffset = source.filmOffset;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t/**\\r\\n\\t * Sets the FOV by focal length in respect to the current .filmGauge.\\r\\n\\t *\\r\\n\\t * The default film gauge is 35, so that the focal length can be specified for\\r\\n\\t * a 35mm (full frame) camera.\\r\\n\\t *\\r\\n\\t * Values for focal length and film gauge must have the same unit.\\r\\n\\t */\\r\\n\\tsetFocalLength: function ( focalLength ) {\\r\\n\\r\\n\\t\\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\\r\\n\\t\\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\\r\\n\\r\\n\\t\\tthis.fov = THREE.Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\\r\\n\\t\\tthis.updateProjectionMatrix();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t/**\\r\\n\\t * Calculates the focal length from the current .fov and .filmGauge.\\r\\n\\t */\\r\\n\\tgetFocalLength: function () {\\r\\n\\r\\n\\t\\tvar vExtentSlope = Math.tan( THREE.Math.DEG2RAD * 0.5 * this.fov );\\r\\n\\r\\n\\t\\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetEffectiveFOV: function () {\\r\\n\\r\\n\\t\\treturn THREE.Math.RAD2DEG * 2 * Math.atan(\\r\\n\\t\\t\\t\\tMath.tan( THREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetFilmWidth: function () {\\r\\n\\r\\n\\t\\t// film not completely covered in portrait format (aspect < 1)\\r\\n\\t\\treturn this.filmGauge * Math.min( this.aspect, 1 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetFilmHeight: function () {\\r\\n\\r\\n\\t\\t// film not completely covered in landscape format (aspect > 1)\\r\\n\\t\\treturn this.filmGauge / Math.max( this.aspect, 1 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t/**\\r\\n\\t * Sets an offset in a larger frustum. This is useful for multi-window or\\r\\n\\t * multi-monitor/multi-machine setups.\\r\\n\\t *\\r\\n\\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\\r\\n\\t * the monitors are in grid like this\\r\\n\\t *\\r\\n\\t *   +---+---+---+\\r\\n\\t *   | A | B | C |\\r\\n\\t *   +---+---+---+\\r\\n\\t *   | D | E | F |\\r\\n\\t *   +---+---+---+\\r\\n\\t *\\r\\n\\t * then for each monitor you would call it like this\\r\\n\\t *\\r\\n\\t *   var w = 1920;\\r\\n\\t *   var h = 1080;\\r\\n\\t *   var fullWidth = w * 3;\\r\\n\\t *   var fullHeight = h * 2;\\r\\n\\t *\\r\\n\\t *   --A--\\r\\n\\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\\r\\n\\t *   --B--\\r\\n\\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\\r\\n\\t *   --C--\\r\\n\\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\\r\\n\\t *   --D--\\r\\n\\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\\r\\n\\t *   --E--\\r\\n\\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\\r\\n\\t *   --F--\\r\\n\\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\\r\\n\\t *\\r\\n\\t *   Note there is no reason monitors have to be the same size or in a grid.\\r\\n\\t */\\r\\n\\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\\r\\n\\r\\n\\t\\tthis.aspect = fullWidth / fullHeight;\\r\\n\\r\\n\\t\\tthis.view = {\\r\\n\\t\\t\\tfullWidth: fullWidth,\\r\\n\\t\\t\\tfullHeight: fullHeight,\\r\\n\\t\\t\\toffsetX: x,\\r\\n\\t\\t\\toffsetY: y,\\r\\n\\t\\t\\twidth: width,\\r\\n\\t\\t\\theight: height\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tthis.updateProjectionMatrix();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclearViewOffset: function() {\\r\\n\\r\\n\\t\\tthis.view = null;\\r\\n\\t\\tthis.updateProjectionMatrix();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdateProjectionMatrix: function () {\\r\\n\\r\\n\\t\\tvar near = this.near,\\r\\n\\t\\t\\ttop = near * Math.tan(\\r\\n\\t\\t\\t\\t\\tTHREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\\r\\n\\t\\t\\theight = 2 * top,\\r\\n\\t\\t\\twidth = this.aspect * height,\\r\\n\\t\\t\\tleft = - 0.5 * width,\\r\\n\\t\\t\\tview = this.view;\\r\\n\\r\\n\\t\\tif ( view !== null ) {\\r\\n\\r\\n\\t\\t\\tvar fullWidth = view.fullWidth,\\r\\n\\t\\t\\t\\tfullHeight = view.fullHeight;\\r\\n\\r\\n\\t\\t\\tleft += view.offsetX * width / fullWidth;\\r\\n\\t\\t\\ttop -= view.offsetY * height / fullHeight;\\r\\n\\t\\t\\twidth *= view.width / fullWidth;\\r\\n\\t\\t\\theight *= view.height / fullHeight;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar skew = this.filmOffset;\\r\\n\\t\\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\\r\\n\\r\\n\\t\\tthis.projectionMatrix.makeFrustum(\\r\\n\\t\\t\\t\\tleft, left + width, top - height, top, near, this.far );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoJSON: function ( meta ) {\\r\\n\\r\\n\\t\\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\\r\\n\\r\\n\\t\\tdata.object.fov = this.fov;\\r\\n\\t\\tdata.object.zoom = this.zoom;\\r\\n\\r\\n\\t\\tdata.object.near = this.near;\\r\\n\\t\\tdata.object.far = this.far;\\r\\n\\t\\tdata.object.focus = this.focus;\\r\\n\\r\\n\\t\\tdata.object.aspect = this.aspect;\\r\\n\\r\\n\\t\\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\\r\\n\\r\\n\\t\\tdata.object.filmGauge = this.filmGauge;\\r\\n\\t\\tdata.object.filmOffset = this.filmOffset;\\r\\n\\r\\n\\t\\treturn data;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/cameras/StereoCamera.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.StereoCamera = function () {\\r\\n\\r\\n\\tthis.type = 'StereoCamera';\\r\\n\\r\\n\\tthis.aspect = 1;\\r\\n\\r\\n\\tthis.cameraL = new THREE.PerspectiveCamera();\\r\\n\\tthis.cameraL.layers.enable( 1 );\\r\\n\\tthis.cameraL.matrixAutoUpdate = false;\\r\\n\\r\\n\\tthis.cameraR = new THREE.PerspectiveCamera();\\r\\n\\tthis.cameraR.layers.enable( 2 );\\r\\n\\tthis.cameraR.matrixAutoUpdate = false;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.StereoCamera.prototype, {\\r\\n\\r\\n\\tupdate: ( function () {\\r\\n\\r\\n\\t\\tvar focus, fov, aspect, near, far;\\r\\n\\r\\n\\t\\tvar eyeRight = new THREE.Matrix4();\\r\\n\\t\\tvar eyeLeft = new THREE.Matrix4();\\r\\n\\r\\n\\t\\treturn function update( camera ) {\\r\\n\\r\\n\\t\\t\\tvar needsUpdate = focus !== camera.focus || fov !== camera.fov ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taspect !== camera.aspect * this.aspect || near !== camera.near ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfar !== camera.far;\\r\\n\\r\\n\\t\\t\\tif ( needsUpdate ) {\\r\\n\\r\\n\\t\\t\\t\\tfocus = camera.focus;\\r\\n\\t\\t\\t\\tfov = camera.fov;\\r\\n\\t\\t\\t\\taspect = camera.aspect * this.aspect;\\r\\n\\t\\t\\t\\tnear = camera.near;\\r\\n\\t\\t\\t\\tfar = camera.far;\\r\\n\\r\\n\\t\\t\\t\\t// Off-axis stereoscopic effect based on\\r\\n\\t\\t\\t\\t// http://paulbourke.net/stereographics/stereorender/\\r\\n\\r\\n\\t\\t\\t\\tvar projectionMatrix = camera.projectionMatrix.clone();\\r\\n\\t\\t\\t\\tvar eyeSep = 0.064 / 2;\\r\\n\\t\\t\\t\\tvar eyeSepOnProjection = eyeSep * near / focus;\\r\\n\\t\\t\\t\\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\\r\\n\\t\\t\\t\\tvar xmin, xmax;\\r\\n\\r\\n\\t\\t\\t\\t// translate xOffset\\r\\n\\r\\n\\t\\t\\t\\teyeLeft.elements[ 12 ] = - eyeSep;\\r\\n\\t\\t\\t\\teyeRight.elements[ 12 ] = eyeSep;\\r\\n\\r\\n\\t\\t\\t\\t// for left eye\\r\\n\\r\\n\\t\\t\\t\\txmin = - ymax * aspect + eyeSepOnProjection;\\r\\n\\t\\t\\t\\txmax = ymax * aspect + eyeSepOnProjection;\\r\\n\\r\\n\\t\\t\\t\\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\\r\\n\\t\\t\\t\\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\\r\\n\\r\\n\\t\\t\\t\\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\\r\\n\\r\\n\\t\\t\\t\\t// for right eye\\r\\n\\r\\n\\t\\t\\t\\txmin = - ymax * aspect - eyeSepOnProjection;\\r\\n\\t\\t\\t\\txmax = ymax * aspect - eyeSepOnProjection;\\r\\n\\r\\n\\t\\t\\t\\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\\r\\n\\t\\t\\t\\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\\r\\n\\r\\n\\t\\t\\t\\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\\r\\n\\t\\t\\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )()\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/lights/Light.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.Light = function ( color, intensity ) {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'Light';\\r\\n\\r\\n\\tthis.color = new THREE.Color( color );\\r\\n\\tthis.intensity = intensity !== undefined ? intensity : 1;\\r\\n\\r\\n\\tthis.receiveShadow = undefined;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Light.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.Light,\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tTHREE.Object3D.prototype.copy.call( this, source );\\r\\n\\r\\n\\t\\tthis.color.copy( source.color );\\r\\n\\t\\tthis.intensity = source.intensity;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoJSON: function ( meta ) {\\r\\n\\r\\n\\t\\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\\r\\n\\r\\n\\t\\tdata.object.color = this.color.getHex();\\r\\n\\t\\tdata.object.intensity = this.intensity;\\r\\n\\r\\n\\t\\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\\r\\n\\r\\n\\t\\tif ( this.distance !== undefined ) data.object.distance = this.distance;\\r\\n\\t\\tif ( this.angle !== undefined ) data.object.angle = this.angle;\\r\\n\\t\\tif ( this.decay !== undefined ) data.object.decay = this.decay;\\r\\n\\t\\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\\r\\n\\r\\n\\t\\treturn data;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/lights/LightShadow.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.LightShadow = function ( camera ) {\\r\\n\\r\\n\\tthis.camera = camera;\\r\\n\\r\\n\\tthis.bias = 0;\\r\\n\\tthis.radius = 1;\\r\\n\\r\\n\\tthis.mapSize = new THREE.Vector2( 512, 512 );\\r\\n\\r\\n\\tthis.map = null;\\r\\n\\tthis.matrix = new THREE.Matrix4();\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.LightShadow.prototype, {\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tthis.camera = source.camera.clone();\\r\\n\\r\\n\\t\\tthis.bias = source.bias;\\r\\n\\t\\tthis.radius = source.radius;\\r\\n\\r\\n\\t\\tthis.mapSize.copy( source.mapSize );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/lights/AmbientLight.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.AmbientLight = function ( color, intensity ) {\\r\\n\\r\\n\\tTHREE.Light.call( this, color, intensity );\\r\\n\\r\\n\\tthis.type = 'AmbientLight';\\r\\n\\r\\n\\tthis.castShadow = undefined;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.AmbientLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.AmbientLight\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/lights/DirectionalLight.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.DirectionalLight = function ( color, intensity ) {\\r\\n\\r\\n\\tTHREE.Light.call( this, color, intensity );\\r\\n\\r\\n\\tthis.type = 'DirectionalLight';\\r\\n\\r\\n\\tthis.position.set( 0, 1, 0 );\\r\\n\\tthis.updateMatrix();\\r\\n\\r\\n\\tthis.target = new THREE.Object3D();\\r\\n\\r\\n\\tthis.shadow = new THREE.DirectionalLightShadow();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.DirectionalLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.DirectionalLight,\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tTHREE.Light.prototype.copy.call( this, source );\\r\\n\\r\\n\\t\\tthis.target = source.target.clone();\\r\\n\\r\\n\\t\\tthis.shadow = source.shadow.clone();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/lights/DirectionalLightShadow.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.DirectionalLightShadow = function ( light ) {\\r\\n\\r\\n\\tTHREE.LightShadow.call( this, new THREE.OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.DirectionalLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.DirectionalLightShadow\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/lights/HemisphereLight.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\\r\\n\\r\\n\\tTHREE.Light.call( this, skyColor, intensity );\\r\\n\\r\\n\\tthis.type = 'HemisphereLight';\\r\\n\\r\\n\\tthis.castShadow = undefined;\\r\\n\\r\\n\\tthis.position.set( 0, 1, 0 );\\r\\n\\tthis.updateMatrix();\\r\\n\\r\\n\\tthis.groundColor = new THREE.Color( groundColor );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.HemisphereLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.HemisphereLight,\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tTHREE.Light.prototype.copy.call( this, source );\\r\\n\\r\\n\\t\\tthis.groundColor.copy( source.groundColor );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/lights/PointLight.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\n\\r\\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\\r\\n\\r\\n\\tTHREE.Light.call( this, color, intensity );\\r\\n\\r\\n\\tthis.type = 'PointLight';\\r\\n\\r\\n\\tObject.defineProperty( this, 'power', {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\t// intensity = power per solid angle.\\r\\n\\t\\t\\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\r\\n\\t\\t\\treturn this.intensity * 4 * Math.PI;\\r\\n\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( power ) {\\r\\n\\t\\t\\t// intensity = power per solid angle.\\r\\n\\t\\t\\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\r\\n\\t\\t\\tthis.intensity = power / ( 4 * Math.PI );\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n\\r\\n\\tthis.distance = ( distance !== undefined ) ? distance : 0;\\r\\n\\tthis.decay = ( decay !== undefined ) ? decay : 1;\\t// for physically correct lights, should be 2.\\r\\n\\r\\n\\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 90, 1, 0.5, 500 ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PointLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.PointLight,\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tTHREE.Light.prototype.copy.call( this, source );\\r\\n\\r\\n\\t\\tthis.distance = source.distance;\\r\\n\\t\\tthis.decay = source.decay;\\r\\n\\r\\n\\t\\tthis.shadow = source.shadow.clone();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/lights/SpotLight.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.SpotLight = function ( color, intensity, distance, angle, penumbra, decay ) {\\r\\n\\r\\n\\tTHREE.Light.call( this, color, intensity );\\r\\n\\r\\n\\tthis.type = 'SpotLight';\\r\\n\\r\\n\\tthis.position.set( 0, 1, 0 );\\r\\n\\tthis.updateMatrix();\\r\\n\\r\\n\\tthis.target = new THREE.Object3D();\\r\\n\\r\\n\\tObject.defineProperty( this, 'power', {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\t// intensity = power per solid angle.\\r\\n\\t\\t\\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\r\\n\\t\\t\\treturn this.intensity * Math.PI;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( power ) {\\r\\n\\t\\t\\t// intensity = power per solid angle.\\r\\n\\t\\t\\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\r\\n\\t\\t\\tthis.intensity = power / Math.PI;\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n\\r\\n\\tthis.distance = ( distance !== undefined ) ? distance : 0;\\r\\n\\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\\r\\n\\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\\r\\n\\tthis.decay = ( decay !== undefined ) ? decay : 1;\\t// for physically correct lights, should be 2.\\r\\n\\r\\n\\tthis.shadow = new THREE.SpotLightShadow();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.SpotLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.SpotLight,\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tTHREE.Light.prototype.copy.call( this, source );\\r\\n\\r\\n\\t\\tthis.distance = source.distance;\\r\\n\\t\\tthis.angle = source.angle;\\r\\n\\t\\tthis.penumbra = source.penumbra;\\r\\n\\t\\tthis.decay = source.decay;\\r\\n\\r\\n\\t\\tthis.target = source.target.clone();\\r\\n\\r\\n\\t\\tthis.shadow = source.shadow.clone();\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/lights/SpotLightShadow.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.SpotLightShadow = function () {\\r\\n\\r\\n\\tTHREE.LightShadow.call( this, new THREE.PerspectiveCamera( 50, 1, 0.5, 500 ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.SpotLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.SpotLightShadow,\\r\\n\\r\\n\\tupdate: function ( light ) {\\r\\n\\r\\n\\t\\tvar fov = THREE.Math.RAD2DEG * 2 * light.angle;\\r\\n\\t\\tvar aspect = this.mapSize.width / this.mapSize.height;\\r\\n\\t\\tvar far = light.distance || 500;\\r\\n\\r\\n\\t\\tvar camera = this.camera;\\r\\n\\r\\n\\t\\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\\r\\n\\r\\n\\t\\t\\tcamera.fov = fov;\\r\\n\\t\\t\\tcamera.aspect = aspect;\\r\\n\\t\\t\\tcamera.far = far;\\r\\n\\t\\t\\tcamera.updateProjectionMatrix();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/loaders/AudioLoader.js\\r\\n\\r\\n/**\\r\\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\\r\\n */\\r\\n\\r\\nTHREE.AudioLoader = function ( manager ) {\\r\\n\\r\\n\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.AudioLoader.prototype, {\\r\\n\\r\\n\\tload: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\r\\n\\t\\tloader.setResponseType( 'arraybuffer' );\\r\\n\\t\\tloader.load( url, function ( buffer ) {\\r\\n\\r\\n\\t\\t\\tvar context = THREE.AudioContext;\\r\\n\\r\\n\\t\\t\\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\\r\\n\\r\\n\\t\\t\\t\\tonLoad( audioBuffer );\\r\\n\\r\\n\\t\\t\\t} );\\r\\n\\r\\n\\t\\t}, onProgress, onError );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/loaders/Cache.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.Cache = {\\r\\n\\r\\n\\tenabled: false,\\r\\n\\r\\n\\tfiles: {},\\r\\n\\r\\n\\tadd: function ( key, file ) {\\r\\n\\r\\n\\t\\tif ( this.enabled === false ) return;\\r\\n\\r\\n\\t\\t// console.log( 'THREE.Cache', 'Adding key:', key );\\r\\n\\r\\n\\t\\tthis.files[ key ] = file;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tget: function ( key ) {\\r\\n\\r\\n\\t\\tif ( this.enabled === false ) return;\\r\\n\\r\\n\\t\\t// console.log( 'THREE.Cache', 'Checking key:', key );\\r\\n\\r\\n\\t\\treturn this.files[ key ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tremove: function ( key ) {\\r\\n\\r\\n\\t\\tdelete this.files[ key ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclear: function () {\\r\\n\\r\\n\\t\\tthis.files = {};\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/loaders/Loader.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.Loader = function () {\\r\\n\\r\\n\\tthis.onLoadStart = function () {};\\r\\n\\tthis.onLoadProgress = function () {};\\r\\n\\tthis.onLoadComplete = function () {};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Loader.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Loader,\\r\\n\\r\\n\\tcrossOrigin: undefined,\\r\\n\\r\\n\\textractUrlBase: function ( url ) {\\r\\n\\r\\n\\t\\tvar parts = url.split( '/' );\\r\\n\\r\\n\\t\\tif ( parts.length === 1 ) return './';\\r\\n\\r\\n\\t\\tparts.pop();\\r\\n\\r\\n\\t\\treturn parts.join( '/' ) + '/';\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\\r\\n\\r\\n\\t\\tvar array = [];\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < materials.length; ++ i ) {\\r\\n\\r\\n\\t\\t\\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn array;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcreateMaterial: ( function () {\\r\\n\\r\\n\\t\\tvar color, textureLoader, materialLoader;\\r\\n\\r\\n\\t\\treturn function createMaterial( m, texturePath, crossOrigin ) {\\r\\n\\r\\n\\t\\t\\tif ( color === undefined ) color = new THREE.Color();\\r\\n\\t\\t\\tif ( textureLoader === undefined ) textureLoader = new THREE.TextureLoader();\\r\\n\\t\\t\\tif ( materialLoader === undefined ) materialLoader = new THREE.MaterialLoader();\\r\\n\\r\\n\\t\\t\\t// convert from old material format\\r\\n\\r\\n\\t\\t\\tvar textures = {};\\r\\n\\r\\n\\t\\t\\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\\r\\n\\r\\n\\t\\t\\t\\tvar fullPath = texturePath + path;\\r\\n\\t\\t\\t\\tvar loader = THREE.Loader.Handlers.get( fullPath );\\r\\n\\r\\n\\t\\t\\t\\tvar texture;\\r\\n\\r\\n\\t\\t\\t\\tif ( loader !== null ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttexture = loader.load( fullPath );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\ttextureLoader.setCrossOrigin( crossOrigin );\\r\\n\\t\\t\\t\\t\\ttexture = textureLoader.load( fullPath );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( repeat !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttexture.repeat.fromArray( repeat );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\\r\\n\\t\\t\\t\\t\\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( offset !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttexture.offset.fromArray( offset );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( wrap !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = THREE.RepeatWrapping;\\r\\n\\t\\t\\t\\t\\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = THREE.MirroredRepeatWrapping;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = THREE.RepeatWrapping;\\r\\n\\t\\t\\t\\t\\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = THREE.MirroredRepeatWrapping;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( anisotropy !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttexture.anisotropy = anisotropy;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tvar uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\t\\t\\t\\ttextures[ uuid ] = texture;\\r\\n\\r\\n\\t\\t\\t\\treturn uuid;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t//\\r\\n\\r\\n\\t\\t\\tvar json = {\\r\\n\\t\\t\\t\\tuuid: THREE.Math.generateUUID(),\\r\\n\\t\\t\\t\\ttype: 'MeshLambertMaterial'\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\tfor ( var name in m ) {\\r\\n\\r\\n\\t\\t\\t\\tvar value = m[ name ];\\r\\n\\r\\n\\t\\t\\t\\tswitch ( name ) {\\r\\n\\t\\t\\t\\t\\tcase 'DbgColor':\\r\\n\\t\\t\\t\\t\\tcase 'DbgIndex':\\r\\n\\t\\t\\t\\t\\tcase 'opticalDensity':\\r\\n\\t\\t\\t\\t\\tcase 'illumination':\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'DbgName':\\r\\n\\t\\t\\t\\t\\t\\tjson.name = value;\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'blending':\\r\\n\\t\\t\\t\\t\\t\\tjson.blending = THREE[ value ];\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'colorAmbient':\\r\\n\\t\\t\\t\\t\\tcase 'mapAmbient':\\r\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'colorDiffuse':\\r\\n\\t\\t\\t\\t\\t\\tjson.color = color.fromArray( value ).getHex();\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'colorSpecular':\\r\\n\\t\\t\\t\\t\\t\\tjson.specular = color.fromArray( value ).getHex();\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'colorEmissive':\\r\\n\\t\\t\\t\\t\\t\\tjson.emissive = color.fromArray( value ).getHex();\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'specularCoef':\\r\\n\\t\\t\\t\\t\\t\\tjson.shininess = value;\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'shading':\\r\\n\\t\\t\\t\\t\\t\\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\\r\\n\\t\\t\\t\\t\\t\\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\\r\\n\\t\\t\\t\\t\\t\\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapDiffuse':\\r\\n\\t\\t\\t\\t\\t\\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapDiffuseRepeat':\\r\\n\\t\\t\\t\\t\\tcase 'mapDiffuseOffset':\\r\\n\\t\\t\\t\\t\\tcase 'mapDiffuseWrap':\\r\\n\\t\\t\\t\\t\\tcase 'mapDiffuseAnisotropy':\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapEmissive':\\r\\n\\t\\t\\t\\t\\t\\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapEmissiveRepeat':\\r\\n\\t\\t\\t\\t\\tcase 'mapEmissiveOffset':\\r\\n\\t\\t\\t\\t\\tcase 'mapEmissiveWrap':\\r\\n\\t\\t\\t\\t\\tcase 'mapEmissiveAnisotropy':\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapLight':\\r\\n\\t\\t\\t\\t\\t\\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapLightRepeat':\\r\\n\\t\\t\\t\\t\\tcase 'mapLightOffset':\\r\\n\\t\\t\\t\\t\\tcase 'mapLightWrap':\\r\\n\\t\\t\\t\\t\\tcase 'mapLightAnisotropy':\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapAO':\\r\\n\\t\\t\\t\\t\\t\\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapAORepeat':\\r\\n\\t\\t\\t\\t\\tcase 'mapAOOffset':\\r\\n\\t\\t\\t\\t\\tcase 'mapAOWrap':\\r\\n\\t\\t\\t\\t\\tcase 'mapAOAnisotropy':\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapBump':\\r\\n\\t\\t\\t\\t\\t\\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapBumpScale':\\r\\n\\t\\t\\t\\t\\t\\tjson.bumpScale = value;\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapBumpRepeat':\\r\\n\\t\\t\\t\\t\\tcase 'mapBumpOffset':\\r\\n\\t\\t\\t\\t\\tcase 'mapBumpWrap':\\r\\n\\t\\t\\t\\t\\tcase 'mapBumpAnisotropy':\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapNormal':\\r\\n\\t\\t\\t\\t\\t\\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapNormalFactor':\\r\\n\\t\\t\\t\\t\\t\\tjson.normalScale = [ value, value ];\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapNormalRepeat':\\r\\n\\t\\t\\t\\t\\tcase 'mapNormalOffset':\\r\\n\\t\\t\\t\\t\\tcase 'mapNormalWrap':\\r\\n\\t\\t\\t\\t\\tcase 'mapNormalAnisotropy':\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapSpecular':\\r\\n\\t\\t\\t\\t\\t\\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapSpecularRepeat':\\r\\n\\t\\t\\t\\t\\tcase 'mapSpecularOffset':\\r\\n\\t\\t\\t\\t\\tcase 'mapSpecularWrap':\\r\\n\\t\\t\\t\\t\\tcase 'mapSpecularAnisotropy':\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapMetalness':\\r\\n\\t\\t\\t\\t\\t\\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapMetalnessRepeat':\\r\\n\\t\\t\\t\\t\\tcase 'mapMetalnessOffset':\\r\\n\\t\\t\\t\\t\\tcase 'mapMetalnessWrap':\\r\\n\\t\\t\\t\\t\\tcase 'mapMetalnessAnisotropy':\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapRoughness':\\r\\n\\t\\t\\t\\t\\t\\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapRoughnessRepeat':\\r\\n\\t\\t\\t\\t\\tcase 'mapRoughnessOffset':\\r\\n\\t\\t\\t\\t\\tcase 'mapRoughnessWrap':\\r\\n\\t\\t\\t\\t\\tcase 'mapRoughnessAnisotropy':\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapAlpha':\\r\\n\\t\\t\\t\\t\\t\\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'mapAlphaRepeat':\\r\\n\\t\\t\\t\\t\\tcase 'mapAlphaOffset':\\r\\n\\t\\t\\t\\t\\tcase 'mapAlphaWrap':\\r\\n\\t\\t\\t\\t\\tcase 'mapAlphaAnisotropy':\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'flipSided':\\r\\n\\t\\t\\t\\t\\t\\tjson.side = THREE.BackSide;\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'doubleSided':\\r\\n\\t\\t\\t\\t\\t\\tjson.side = THREE.DoubleSide;\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'transparency':\\r\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\\r\\n\\t\\t\\t\\t\\t\\tjson.opacity = value;\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'depthTest':\\r\\n\\t\\t\\t\\t\\tcase 'depthWrite':\\r\\n\\t\\t\\t\\t\\tcase 'colorWrite':\\r\\n\\t\\t\\t\\t\\tcase 'opacity':\\r\\n\\t\\t\\t\\t\\tcase 'reflectivity':\\r\\n\\t\\t\\t\\t\\tcase 'transparent':\\r\\n\\t\\t\\t\\t\\tcase 'visible':\\r\\n\\t\\t\\t\\t\\tcase 'wireframe':\\r\\n\\t\\t\\t\\t\\t\\tjson[ name ] = value;\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tcase 'vertexColors':\\r\\n\\t\\t\\t\\t\\t\\tif ( value === true ) json.vertexColors = THREE.VertexColors;\\r\\n\\t\\t\\t\\t\\t\\tif ( value === 'face' ) json.vertexColors = THREE.FaceColors;\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\tdefault:\\r\\n\\t\\t\\t\\t\\t\\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\\r\\n\\t\\t\\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\\r\\n\\r\\n\\t\\t\\tif ( json.opacity < 1 ) json.transparent = true;\\r\\n\\r\\n\\t\\t\\tmaterialLoader.setTextures( textures );\\r\\n\\r\\n\\t\\t\\treturn materialLoader.parse( json );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )()\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Loader.Handlers = {\\r\\n\\r\\n\\thandlers: [],\\r\\n\\r\\n\\tadd: function ( regex, loader ) {\\r\\n\\r\\n\\t\\tthis.handlers.push( regex, loader );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tget: function ( file ) {\\r\\n\\r\\n\\t\\tvar handlers = this.handlers;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\\r\\n\\r\\n\\t\\t\\tvar regex = handlers[ i ];\\r\\n\\t\\t\\tvar loader  = handlers[ i + 1 ];\\r\\n\\r\\n\\t\\t\\tif ( regex.test( file ) ) {\\r\\n\\r\\n\\t\\t\\t\\treturn loader;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn null;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/loaders/XHRLoader.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.XHRLoader = function ( manager ) {\\r\\n\\r\\n\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.XHRLoader.prototype, {\\r\\n\\r\\n\\tload: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n\\t\\tif ( this.path !== undefined ) url = this.path + url;\\r\\n\\r\\n\\t\\tvar scope = this;\\r\\n\\r\\n\\t\\tvar cached = THREE.Cache.get( url );\\r\\n\\r\\n\\t\\tif ( cached !== undefined ) {\\r\\n\\r\\n\\t\\t\\tif ( onLoad ) {\\r\\n\\r\\n\\t\\t\\t\\tsetTimeout( function () {\\r\\n\\r\\n\\t\\t\\t\\t\\tonLoad( cached );\\r\\n\\r\\n\\t\\t\\t\\t}, 0 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn cached;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar request = new XMLHttpRequest();\\r\\n\\t\\trequest.overrideMimeType( 'text/plain' );\\r\\n\\t\\trequest.open( 'GET', url, true );\\r\\n\\r\\n\\t\\trequest.addEventListener( 'load', function ( event ) {\\r\\n\\r\\n\\t\\t\\tvar response = event.target.response;\\r\\n\\r\\n\\t\\t\\tTHREE.Cache.add( url, response );\\r\\n\\r\\n\\t\\t\\tif ( this.status === 200 ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( onLoad ) onLoad( response );\\r\\n\\r\\n\\t\\t\\t\\tscope.manager.itemEnd( url );\\r\\n\\r\\n\\t\\t\\t} else if ( this.status === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t// Some browsers return HTTP Status 0 when using non-http protocol\\r\\n\\t\\t\\t\\t// e.g. 'file://' or 'data://'. Handle as success.\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\\r\\n\\r\\n\\t\\t\\t\\tif ( onLoad ) onLoad( response );\\r\\n\\r\\n\\t\\t\\t\\tscope.manager.itemEnd( url );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tif ( onError ) onError( event );\\r\\n\\r\\n\\t\\t\\t\\tscope.manager.itemError( url );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}, false );\\r\\n\\r\\n\\t\\tif ( onProgress !== undefined ) {\\r\\n\\r\\n\\t\\t\\trequest.addEventListener( 'progress', function ( event ) {\\r\\n\\r\\n\\t\\t\\t\\tonProgress( event );\\r\\n\\r\\n\\t\\t\\t}, false );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\trequest.addEventListener( 'error', function ( event ) {\\r\\n\\r\\n\\t\\t\\tif ( onError ) onError( event );\\r\\n\\r\\n\\t\\t\\tscope.manager.itemError( url );\\r\\n\\r\\n\\t\\t}, false );\\r\\n\\r\\n\\t\\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\\r\\n\\t\\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\\r\\n\\r\\n\\t\\trequest.send( null );\\r\\n\\r\\n\\t\\tscope.manager.itemStart( url );\\r\\n\\r\\n\\t\\treturn request;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetPath: function ( value ) {\\r\\n\\r\\n\\t\\tthis.path = value;\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetResponseType: function ( value ) {\\r\\n\\r\\n\\t\\tthis.responseType = value;\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetWithCredentials: function ( value ) {\\r\\n\\r\\n\\t\\tthis.withCredentials = value;\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/loaders/FontLoader.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.FontLoader = function ( manager ) {\\r\\n\\r\\n\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.FontLoader.prototype, {\\r\\n\\r\\n\\tload: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n\\t\\tvar scope = this;\\r\\n\\r\\n\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\r\\n\\t\\tloader.load( url, function ( text ) {\\r\\n\\r\\n\\t\\t\\tvar json;\\r\\n\\r\\n\\t\\t\\ttry {\\r\\n\\r\\n\\t\\t\\t\\tjson = JSON.parse( text );\\r\\n\\r\\n\\t\\t\\t} catch ( e ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\\r\\n\\t\\t\\t\\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar font = scope.parse( json );\\r\\n\\r\\n\\t\\t\\tif ( onLoad ) onLoad( font );\\r\\n\\r\\n\\t\\t}, onProgress, onError );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparse: function ( json ) {\\r\\n\\r\\n\\t\\treturn new THREE.Font( json );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/loaders/ImageLoader.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.ImageLoader = function ( manager ) {\\r\\n\\r\\n\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.ImageLoader.prototype, {\\r\\n\\r\\n\\tload: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n\\t\\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\\r\\n\\t\\timage.onload = function () {\\r\\n\\r\\n\\t\\t\\tURL.revokeObjectURL( image.src );\\r\\n\\t\\t\\tif ( onLoad ) onLoad( image );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tif ( url.indexOf( 'data:' ) === 0 ) {\\r\\n\\r\\n\\t\\t\\timage.src = url;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\r\\n\\t\\t\\tloader.setPath( this.path );\\r\\n\\t\\t\\tloader.setResponseType( 'blob' );\\r\\n\\t\\t\\tloader.load( url, function ( blob ) {\\r\\n\\r\\n\\t\\t\\t\\timage.src = URL.createObjectURL( blob );\\r\\n\\r\\n\\t\\t\\t}, onProgress, onError );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn image;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetCrossOrigin: function ( value ) {\\r\\n\\r\\n\\t\\tthis.crossOrigin = value;\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetPath: function ( value ) {\\r\\n\\r\\n\\t\\tthis.path = value;\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/loaders/JSONLoader.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.JSONLoader = function ( manager ) {\\r\\n\\r\\n\\tif ( typeof manager === 'boolean' ) {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\\r\\n\\t\\tmanager = undefined;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\r\\n\\r\\n\\tthis.withCredentials = false;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.JSONLoader.prototype, {\\r\\n\\r\\n\\tload: function( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n\\t\\tvar scope = this;\\r\\n\\r\\n\\t\\tvar texturePath = this.texturePath && ( typeof this.texturePath === \\\"string\\\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\\r\\n\\r\\n\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\r\\n\\t\\tloader.setWithCredentials( this.withCredentials );\\r\\n\\t\\tloader.load( url, function ( text ) {\\r\\n\\r\\n\\t\\t\\tvar json = JSON.parse( text );\\r\\n\\t\\t\\tvar metadata = json.metadata;\\r\\n\\r\\n\\t\\t\\tif ( metadata !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tvar type = metadata.type;\\r\\n\\r\\n\\t\\t\\t\\tif ( type !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( type.toLowerCase() === 'object' ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\\r\\n\\t\\t\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( type.toLowerCase() === 'scene' ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\\r\\n\\t\\t\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar object = scope.parse( json, texturePath );\\r\\n\\t\\t\\tonLoad( object.geometry, object.materials );\\r\\n\\r\\n\\t\\t}, onProgress, onError );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetTexturePath: function ( value ) {\\r\\n\\r\\n\\t\\tthis.texturePath = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparse: function ( json, texturePath ) {\\r\\n\\r\\n\\t\\tvar geometry = new THREE.Geometry(),\\r\\n\\t\\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\\r\\n\\r\\n\\t\\tparseModel( scale );\\r\\n\\r\\n\\t\\tparseSkin();\\r\\n\\t\\tparseMorphing( scale );\\r\\n\\t\\tparseAnimations();\\r\\n\\r\\n\\t\\tgeometry.computeFaceNormals();\\r\\n\\t\\tgeometry.computeBoundingSphere();\\r\\n\\r\\n\\t\\tfunction parseModel( scale ) {\\r\\n\\r\\n\\t\\t\\tfunction isBitSet( value, position ) {\\r\\n\\r\\n\\t\\t\\t\\treturn value & ( 1 << position );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar i, j, fi,\\r\\n\\r\\n\\t\\t\\toffset, zLength,\\r\\n\\r\\n\\t\\tcolorIndex, normalIndex, uvIndex, materialIndex,\\r\\n\\r\\n\\t\\t\\ttype,\\r\\n\\t\\t\\tisQuad,\\r\\n\\t\\t\\thasMaterial,\\r\\n\\t\\t\\thasFaceVertexUv,\\r\\n\\t\\t\\thasFaceNormal, hasFaceVertexNormal,\\r\\n\\t\\t\\thasFaceColor, hasFaceVertexColor,\\r\\n\\r\\n\\t\\tvertex, face, faceA, faceB, hex, normal,\\r\\n\\r\\n\\t\\t\\tuvLayer, uv, u, v,\\r\\n\\r\\n\\t\\t\\tfaces = json.faces,\\r\\n\\t\\t\\tvertices = json.vertices,\\r\\n\\t\\t\\tnormals = json.normals,\\r\\n\\t\\t\\tcolors = json.colors,\\r\\n\\r\\n\\t\\t\\tnUvLayers = 0;\\r\\n\\r\\n\\t\\t\\tif ( json.uvs !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t// disregard empty arrays\\r\\n\\r\\n\\t\\t\\t\\tfor ( i = 0; i < json.uvs.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( json.uvs[ i ].length ) nUvLayers ++;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tfor ( i = 0; i < nUvLayers; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ] = [];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\toffset = 0;\\r\\n\\t\\t\\tzLength = vertices.length;\\r\\n\\r\\n\\t\\t\\twhile ( offset < zLength ) {\\r\\n\\r\\n\\t\\t\\t\\tvertex = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\t\\tvertex.x = vertices[ offset ++ ] * scale;\\r\\n\\t\\t\\t\\tvertex.y = vertices[ offset ++ ] * scale;\\r\\n\\t\\t\\t\\tvertex.z = vertices[ offset ++ ] * scale;\\r\\n\\r\\n\\t\\t\\t\\tgeometry.vertices.push( vertex );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\toffset = 0;\\r\\n\\t\\t\\tzLength = faces.length;\\r\\n\\r\\n\\t\\t\\twhile ( offset < zLength ) {\\r\\n\\r\\n\\t\\t\\t\\ttype = faces[ offset ++ ];\\r\\n\\r\\n\\r\\n\\t\\t\\t\\tisQuad              = isBitSet( type, 0 );\\r\\n\\t\\t\\t\\thasMaterial         = isBitSet( type, 1 );\\r\\n\\t\\t\\t\\thasFaceVertexUv     = isBitSet( type, 3 );\\r\\n\\t\\t\\t\\thasFaceNormal       = isBitSet( type, 4 );\\r\\n\\t\\t\\t\\thasFaceVertexNormal = isBitSet( type, 5 );\\r\\n\\t\\t\\t\\thasFaceColor\\t     = isBitSet( type, 6 );\\r\\n\\t\\t\\t\\thasFaceVertexColor  = isBitSet( type, 7 );\\r\\n\\r\\n\\t\\t\\t\\t// console.log(\\\"type\\\", type, \\\"bits\\\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\\r\\n\\r\\n\\t\\t\\t\\tif ( isQuad ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tfaceA = new THREE.Face3();\\r\\n\\t\\t\\t\\t\\tfaceA.a = faces[ offset ];\\r\\n\\t\\t\\t\\t\\tfaceA.b = faces[ offset + 1 ];\\r\\n\\t\\t\\t\\t\\tfaceA.c = faces[ offset + 3 ];\\r\\n\\r\\n\\t\\t\\t\\t\\tfaceB = new THREE.Face3();\\r\\n\\t\\t\\t\\t\\tfaceB.a = faces[ offset + 1 ];\\r\\n\\t\\t\\t\\t\\tfaceB.b = faces[ offset + 2 ];\\r\\n\\t\\t\\t\\t\\tfaceB.c = faces[ offset + 3 ];\\r\\n\\r\\n\\t\\t\\t\\t\\toffset += 4;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( hasMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tmaterialIndex = faces[ offset ++ ];\\r\\n\\t\\t\\t\\t\\t\\tfaceA.materialIndex = materialIndex;\\r\\n\\t\\t\\t\\t\\t\\tfaceB.materialIndex = materialIndex;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// to get face <=> uv index correspondence\\r\\n\\r\\n\\t\\t\\t\\t\\tfi = geometry.faces.length;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( hasFaceVertexUv ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( i = 0; i < nUvLayers; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tuvLayer = json.uvs[ i ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi ] = [];\\r\\n\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tfor ( j = 0; j < 4; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tuvIndex = faces[ offset ++ ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tu = uvLayer[ uvIndex * 2 ];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tv = uvLayer[ uvIndex * 2 + 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tuv = new THREE.Vector2( u, v );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( hasFaceNormal ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfaceA.normal.set(\\r\\n\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\r\\n\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\r\\n\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfaceB.normal.copy( faceA.normal );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( hasFaceVertexNormal ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( i = 0; i < 4; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tnormal = new THREE.Vector3(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\r\\n\\t\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( hasFaceColor ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\r\\n\\t\\t\\t\\t\\t\\thex = colors[ colorIndex ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfaceA.color.setHex( hex );\\r\\n\\t\\t\\t\\t\\t\\tfaceB.color.setHex( hex );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( hasFaceVertexColor ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( i = 0; i < 4; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\r\\n\\t\\t\\t\\t\\t\\t\\thex = colors[ colorIndex ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tgeometry.faces.push( faceA );\\r\\n\\t\\t\\t\\t\\tgeometry.faces.push( faceB );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tface = new THREE.Face3();\\r\\n\\t\\t\\t\\t\\tface.a = faces[ offset ++ ];\\r\\n\\t\\t\\t\\t\\tface.b = faces[ offset ++ ];\\r\\n\\t\\t\\t\\t\\tface.c = faces[ offset ++ ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( hasMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tmaterialIndex = faces[ offset ++ ];\\r\\n\\t\\t\\t\\t\\t\\tface.materialIndex = materialIndex;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// to get face <=> uv index correspondence\\r\\n\\r\\n\\t\\t\\t\\t\\tfi = geometry.faces.length;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( hasFaceVertexUv ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( i = 0; i < nUvLayers; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tuvLayer = json.uvs[ i ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi ] = [];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tfor ( j = 0; j < 3; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tuvIndex = faces[ offset ++ ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tu = uvLayer[ uvIndex * 2 ];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tv = uvLayer[ uvIndex * 2 + 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tuv = new THREE.Vector2( u, v );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( hasFaceNormal ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tface.normal.set(\\r\\n\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\r\\n\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\r\\n\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( hasFaceVertexNormal ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( i = 0; i < 3; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tnormal = new THREE.Vector3(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\r\\n\\t\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tface.vertexNormals.push( normal );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( hasFaceColor ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\r\\n\\t\\t\\t\\t\\t\\tface.color.setHex( colors[ colorIndex ] );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( hasFaceVertexColor ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( i = 0; i < 3; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\r\\n\\t\\t\\t\\t\\t\\t\\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tgeometry.faces.push( face );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction parseSkin() {\\r\\n\\r\\n\\t\\t\\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\\r\\n\\r\\n\\t\\t\\tif ( json.skinWeights ) {\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar x =                               json.skinWeights[ i ];\\r\\n\\t\\t\\t\\t\\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\\r\\n\\t\\t\\t\\t\\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\\r\\n\\t\\t\\t\\t\\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\\r\\n\\r\\n\\t\\t\\t\\t\\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( json.skinIndices ) {\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar a =                               json.skinIndices[ i ];\\r\\n\\t\\t\\t\\t\\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\\r\\n\\t\\t\\t\\t\\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\\r\\n\\t\\t\\t\\t\\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\\r\\n\\r\\n\\t\\t\\t\\t\\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tgeometry.bones = json.bones;\\r\\n\\r\\n\\t\\t\\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\\r\\n\\t\\t\\t\\t\\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction parseMorphing( scale ) {\\r\\n\\r\\n\\t\\t\\tif ( json.morphTargets !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tgeometry.morphTargets[ i ] = {};\\r\\n\\t\\t\\t\\t\\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\\r\\n\\t\\t\\t\\t\\tgeometry.morphTargets[ i ].vertices = [];\\r\\n\\r\\n\\t\\t\\t\\t\\tvar dstVertices = geometry.morphTargets[ i ].vertices;\\r\\n\\t\\t\\t\\t\\tvar srcVertices = json.morphTargets[ i ].vertices;\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar vertex = new THREE.Vector3();\\r\\n\\t\\t\\t\\t\\t\\tvertex.x = srcVertices[ v ] * scale;\\r\\n\\t\\t\\t\\t\\t\\tvertex.y = srcVertices[ v + 1 ] * scale;\\r\\n\\t\\t\\t\\t\\t\\tvertex.z = srcVertices[ v + 2 ] * scale;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tdstVertices.push( vertex );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.JSONLoader: \\\"morphColors\\\" no longer supported. Using them as face colors.' );\\r\\n\\r\\n\\t\\t\\t\\tvar faces = geometry.faces;\\r\\n\\t\\t\\t\\tvar morphColors = json.morphColors[ 0 ].colors;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tfaces[ i ].color.fromArray( morphColors, i * 3 );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction parseAnimations() {\\r\\n\\r\\n\\t\\t\\tvar outputAnimations = [];\\r\\n\\r\\n\\t\\t\\t// parse old style Bone/Hierarchy animations\\r\\n\\t\\t\\tvar animations = [];\\r\\n\\r\\n\\t\\t\\tif ( json.animation !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tanimations.push( json.animation );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( json.animations !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( json.animations.length ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tanimations = animations.concat( json.animations );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tanimations.push( json.animations );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < animations.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar clip = THREE.AnimationClip.parseAnimation( animations[ i ], geometry.bones );\\r\\n\\t\\t\\t\\tif ( clip ) outputAnimations.push( clip );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// parse implicit morph animations\\r\\n\\t\\t\\tif ( geometry.morphTargets ) {\\r\\n\\r\\n\\t\\t\\t\\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\\r\\n\\t\\t\\t\\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\\r\\n\\t\\t\\t\\toutputAnimations = outputAnimations.concat( morphAnimationClips );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( json.materials === undefined || json.materials.length === 0 ) {\\r\\n\\r\\n\\t\\t\\treturn { geometry: geometry };\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\\r\\n\\r\\n\\t\\t\\treturn { geometry: geometry, materials: materials };\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/loaders/LoadingManager.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\\r\\n\\r\\n\\tthis.onStart = undefined;\\r\\n\\tthis.onLoad = onLoad;\\r\\n\\tthis.onProgress = onProgress;\\r\\n\\tthis.onError = onError;\\r\\n\\r\\n\\tthis.itemStart = function ( url ) {\\r\\n\\r\\n\\t\\titemsTotal ++;\\r\\n\\r\\n\\t\\tif ( isLoading === false ) {\\r\\n\\r\\n\\t\\t\\tif ( scope.onStart !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tscope.onStart( url, itemsLoaded, itemsTotal );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tisLoading = true;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.itemEnd = function ( url ) {\\r\\n\\r\\n\\t\\titemsLoaded ++;\\r\\n\\r\\n\\t\\tif ( scope.onProgress !== undefined ) {\\r\\n\\r\\n\\t\\t\\tscope.onProgress( url, itemsLoaded, itemsTotal );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( itemsLoaded === itemsTotal ) {\\r\\n\\r\\n\\t\\t\\tisLoading = false;\\r\\n\\r\\n\\t\\t\\tif ( scope.onLoad !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tscope.onLoad();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.itemError = function ( url ) {\\r\\n\\r\\n\\t\\tif ( scope.onError !== undefined ) {\\r\\n\\r\\n\\t\\t\\tscope.onError( url );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\\r\\n\\r\\n// File:src/loaders/BufferGeometryLoader.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.BufferGeometryLoader = function ( manager ) {\\r\\n\\r\\n\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.BufferGeometryLoader.prototype, {\\r\\n\\r\\n\\tload: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n\\t\\tvar scope = this;\\r\\n\\r\\n\\t\\tvar loader = new THREE.XHRLoader( scope.manager );\\r\\n\\t\\tloader.load( url, function ( text ) {\\r\\n\\r\\n\\t\\t\\tonLoad( scope.parse( JSON.parse( text ) ) );\\r\\n\\r\\n\\t\\t}, onProgress, onError );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparse: function ( json ) {\\r\\n\\r\\n\\t\\tvar geometry = new THREE.BufferGeometry();\\r\\n\\r\\n\\t\\tvar index = json.data.index;\\r\\n\\r\\n\\t\\tvar TYPED_ARRAYS = {\\r\\n\\t\\t\\t'Int8Array': Int8Array,\\r\\n\\t\\t\\t'Uint8Array': Uint8Array,\\r\\n\\t\\t\\t'Uint8ClampedArray': Uint8ClampedArray,\\r\\n\\t\\t\\t'Int16Array': Int16Array,\\r\\n\\t\\t\\t'Uint16Array': Uint16Array,\\r\\n\\t\\t\\t'Int32Array': Int32Array,\\r\\n\\t\\t\\t'Uint32Array': Uint32Array,\\r\\n\\t\\t\\t'Float32Array': Float32Array,\\r\\n\\t\\t\\t'Float64Array': Float64Array\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tif ( index !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\\r\\n\\t\\t\\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar attributes = json.data.attributes;\\r\\n\\r\\n\\t\\tfor ( var key in attributes ) {\\r\\n\\r\\n\\t\\t\\tvar attribute = attributes[ key ];\\r\\n\\t\\t\\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\\r\\n\\r\\n\\t\\t\\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\\r\\n\\r\\n\\t\\tif ( groups !== undefined ) {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\tvar group = groups[ i ];\\r\\n\\r\\n\\t\\t\\t\\tgeometry.addGroup( group.start, group.count, group.materialIndex );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar boundingSphere = json.data.boundingSphere;\\r\\n\\r\\n\\t\\tif ( boundingSphere !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar center = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\tif ( boundingSphere.center !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tcenter.fromArray( boundingSphere.center );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn geometry;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/loaders/MaterialLoader.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.MaterialLoader = function ( manager ) {\\r\\n\\r\\n\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\r\\n\\tthis.textures = {};\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.MaterialLoader.prototype, {\\r\\n\\r\\n\\tload: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n\\t\\tvar scope = this;\\r\\n\\r\\n\\t\\tvar loader = new THREE.XHRLoader( scope.manager );\\r\\n\\t\\tloader.load( url, function ( text ) {\\r\\n\\r\\n\\t\\t\\tonLoad( scope.parse( JSON.parse( text ) ) );\\r\\n\\r\\n\\t\\t}, onProgress, onError );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetTextures: function ( value ) {\\r\\n\\r\\n\\t\\tthis.textures = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetTexture: function ( name ) {\\r\\n\\r\\n\\t\\tvar textures = this.textures;\\r\\n\\r\\n\\t\\tif ( textures[ name ] === undefined ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn textures[ name ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparse: function ( json ) {\\r\\n\\r\\n\\t\\tvar material = new THREE[ json.type ];\\r\\n\\r\\n\\t\\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\\r\\n\\t\\tif ( json.name !== undefined ) material.name = json.name;\\r\\n\\t\\tif ( json.color !== undefined ) material.color.setHex( json.color );\\r\\n\\t\\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\\r\\n\\t\\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\\r\\n\\t\\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\\r\\n\\t\\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\\r\\n\\t\\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\\r\\n\\t\\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\\r\\n\\t\\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\\r\\n\\t\\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\\r\\n\\t\\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\\r\\n\\t\\tif ( json.shading !== undefined ) material.shading = json.shading;\\r\\n\\t\\tif ( json.blending !== undefined ) material.blending = json.blending;\\r\\n\\t\\tif ( json.side !== undefined ) material.side = json.side;\\r\\n\\t\\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\\r\\n\\t\\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\\r\\n\\t\\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\\r\\n\\t\\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\\r\\n\\t\\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\\r\\n\\t\\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\\r\\n\\t\\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\\r\\n\\t\\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\\r\\n\\r\\n\\t\\t// for PointsMaterial\\r\\n\\t\\tif ( json.size !== undefined ) material.size = json.size;\\r\\n\\t\\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\\r\\n\\r\\n\\t\\t// maps\\r\\n\\r\\n\\t\\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\\r\\n\\r\\n\\t\\tif ( json.alphaMap !== undefined ) {\\r\\n\\r\\n\\t\\t\\tmaterial.alphaMap = this.getTexture( json.alphaMap );\\r\\n\\t\\t\\tmaterial.transparent = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\\r\\n\\t\\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\\r\\n\\r\\n\\t\\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\\r\\n\\t\\tif ( json.normalScale !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar normalScale = json.normalScale;\\r\\n\\r\\n\\t\\t\\tif ( Array.isArray( normalScale ) === false ) {\\r\\n\\r\\n\\t\\t\\t\\t// Blender exporter used to export a scalar. See #7459\\r\\n\\r\\n\\t\\t\\t\\tnormalScale = [ normalScale, normalScale ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tmaterial.normalScale = new THREE.Vector2().fromArray( normalScale );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\\r\\n\\t\\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\\r\\n\\t\\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\\r\\n\\r\\n\\t\\tif ( json.roughnessMap !== undefined ) material.roughnessMap = this.getTexture( json.roughnessMap );\\r\\n\\t\\tif ( json.metalnessMap !== undefined ) material.metalnessMap = this.getTexture( json.metalnessMap );\\r\\n\\r\\n\\t\\tif ( json.emissiveMap !== undefined ) material.emissiveMap = this.getTexture( json.emissiveMap );\\r\\n\\t\\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\\r\\n\\r\\n\\t\\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\\r\\n\\r\\n\\t\\tif ( json.envMap !== undefined ) {\\r\\n\\r\\n\\t\\t\\tmaterial.envMap = this.getTexture( json.envMap );\\r\\n\\t\\t\\tmaterial.combine = THREE.MultiplyOperation;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\\r\\n\\r\\n\\t\\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\\r\\n\\t\\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\\r\\n\\r\\n\\t\\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\\r\\n\\t\\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\\r\\n\\r\\n\\t\\t// MultiMaterial\\r\\n\\r\\n\\t\\tif ( json.materials !== undefined ) {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn material;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/loaders/ObjectLoader.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.ObjectLoader = function ( manager ) {\\r\\n\\r\\n\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\r\\n\\tthis.texturePath = '';\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.ObjectLoader.prototype, {\\r\\n\\r\\n\\tload: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n\\t\\tif ( this.texturePath === '' ) {\\r\\n\\r\\n\\t\\t\\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar scope = this;\\r\\n\\r\\n\\t\\tvar loader = new THREE.XHRLoader( scope.manager );\\r\\n\\t\\tloader.load( url, function ( text ) {\\r\\n\\r\\n\\t\\t\\tscope.parse( JSON.parse( text ), onLoad );\\r\\n\\r\\n\\t\\t}, onProgress, onError );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetTexturePath: function ( value ) {\\r\\n\\r\\n\\t\\tthis.texturePath = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetCrossOrigin: function ( value ) {\\r\\n\\r\\n\\t\\tthis.crossOrigin = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparse: function ( json, onLoad ) {\\r\\n\\r\\n\\t\\tvar geometries = this.parseGeometries( json.geometries );\\r\\n\\r\\n\\t\\tvar images = this.parseImages( json.images, function () {\\r\\n\\r\\n\\t\\t\\tif ( onLoad !== undefined ) onLoad( object );\\r\\n\\r\\n\\t\\t} );\\r\\n\\r\\n\\t\\tvar textures  = this.parseTextures( json.textures, images );\\r\\n\\t\\tvar materials = this.parseMaterials( json.materials, textures );\\r\\n\\r\\n\\t\\tvar object = this.parseObject( json.object, geometries, materials );\\r\\n\\r\\n\\t\\tif ( json.animations ) {\\r\\n\\r\\n\\t\\t\\tobject.animations = this.parseAnimations( json.animations );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( json.images === undefined || json.images.length === 0 ) {\\r\\n\\r\\n\\t\\t\\tif ( onLoad !== undefined ) onLoad( object );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn object;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparseGeometries: function ( json ) {\\r\\n\\r\\n\\t\\tvar geometries = {};\\r\\n\\r\\n\\t\\tif ( json !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar geometryLoader = new THREE.JSONLoader();\\r\\n\\t\\t\\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar geometry;\\r\\n\\t\\t\\t\\tvar data = json[ i ];\\r\\n\\r\\n\\t\\t\\t\\tswitch ( data.type ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'PlaneGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'PlaneBufferGeometry':\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.width,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.height,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.widthSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.heightSegments\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'BoxGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'BoxBufferGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'CubeGeometry': // backwards compatible\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.width,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.height,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.depth,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.widthSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.heightSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.depthSegments\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'CircleGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'CircleBufferGeometry':\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.radius,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.segments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'CylinderGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'CylinderBufferGeometry':\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.radiusTop,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.radiusBottom,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.height,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.radialSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.heightSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.openEnded,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'ConeGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'ConeBufferGeometry':\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = new THREE [ data.type ](\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.radius,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.height,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.radialSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.heightSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.openEnded,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'SphereGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'SphereBufferGeometry':\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.radius,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.widthSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.heightSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.phiStart,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.phiLength,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'DodecahedronGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'IcosahedronGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'OctahedronGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'TetrahedronGeometry':\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.radius,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.detail\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'RingGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'RingBufferGeometry':\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.innerRadius,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.outerRadius,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.thetaSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.phiSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'TorusGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'TorusBufferGeometry':\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.radius,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.tube,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.radialSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.tubularSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.arc\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'TorusKnotGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'TorusKnotBufferGeometry':\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.radius,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.tube,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.tubularSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.radialSegments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.p,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.q\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'LatheGeometry':\\r\\n\\t\\t\\t\\t\\tcase 'LatheBufferGeometry':\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.points,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.segments,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.phiStart,\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.phiLength\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'BufferGeometry':\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = bufferGeometryLoader.parse( data );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase 'Geometry':\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tdefault:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \\\"' + data.type + '\\\"' );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tcontinue;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tgeometry.uuid = data.uuid;\\r\\n\\r\\n\\t\\t\\t\\tif ( data.name !== undefined ) geometry.name = data.name;\\r\\n\\r\\n\\t\\t\\t\\tgeometries[ data.uuid ] = geometry;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn geometries;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparseMaterials: function ( json, textures ) {\\r\\n\\r\\n\\t\\tvar materials = {};\\r\\n\\r\\n\\t\\tif ( json !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar loader = new THREE.MaterialLoader();\\r\\n\\t\\t\\tloader.setTextures( textures );\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar material = loader.parse( json[ i ] );\\r\\n\\t\\t\\t\\tmaterials[ material.uuid ] = material;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn materials;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparseAnimations: function ( json ) {\\r\\n\\r\\n\\t\\tvar animations = [];\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < json.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar clip = THREE.AnimationClip.parse( json[ i ] );\\r\\n\\r\\n\\t\\t\\tanimations.push( clip );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn animations;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparseImages: function ( json, onLoad ) {\\r\\n\\r\\n\\t\\tvar scope = this;\\r\\n\\t\\tvar images = {};\\r\\n\\r\\n\\t\\tfunction loadImage( url ) {\\r\\n\\r\\n\\t\\t\\tscope.manager.itemStart( url );\\r\\n\\r\\n\\t\\t\\treturn loader.load( url, function () {\\r\\n\\r\\n\\t\\t\\t\\tscope.manager.itemEnd( url );\\r\\n\\r\\n\\t\\t\\t} );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( json !== undefined && json.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tvar manager = new THREE.LoadingManager( onLoad );\\r\\n\\r\\n\\t\\t\\tvar loader = new THREE.ImageLoader( manager );\\r\\n\\t\\t\\tloader.setCrossOrigin( this.crossOrigin );\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar image = json[ i ];\\r\\n\\t\\t\\t\\tvar path = /^(\\\\/\\\\/)|([a-z]+:(\\\\/\\\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\\r\\n\\r\\n\\t\\t\\t\\timages[ image.uuid ] = loadImage( path );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn images;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparseTextures: function ( json, images ) {\\r\\n\\r\\n\\t\\tfunction parseConstant( value ) {\\r\\n\\r\\n\\t\\t\\tif ( typeof( value ) === 'number' ) return value;\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\\r\\n\\r\\n\\t\\t\\treturn THREE[ value ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar textures = {};\\r\\n\\r\\n\\t\\tif ( json !== undefined ) {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar data = json[ i ];\\r\\n\\r\\n\\t\\t\\t\\tif ( data.image === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: No \\\"image\\\" specified for', data.uuid );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( images[ data.image ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tvar texture = new THREE.Texture( images[ data.image ] );\\r\\n\\t\\t\\t\\ttexture.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t\\ttexture.uuid = data.uuid;\\r\\n\\r\\n\\t\\t\\t\\tif ( data.name !== undefined ) texture.name = data.name;\\r\\n\\t\\t\\t\\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\\r\\n\\t\\t\\t\\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\\r\\n\\t\\t\\t\\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\\r\\n\\t\\t\\t\\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\\r\\n\\t\\t\\t\\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\\r\\n\\t\\t\\t\\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\\r\\n\\t\\t\\t\\tif ( Array.isArray( data.wrap ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\\r\\n\\t\\t\\t\\t\\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\ttextures[ data.uuid ] = texture;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn textures;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparseObject: function () {\\r\\n\\r\\n\\t\\tvar matrix = new THREE.Matrix4();\\r\\n\\r\\n\\t\\treturn function parseObject( data, geometries, materials ) {\\r\\n\\r\\n\\t\\t\\tvar object;\\r\\n\\r\\n\\t\\t\\tfunction getGeometry( name ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( geometries[ name ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\treturn geometries[ name ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfunction getMaterial( name ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( name === undefined ) return undefined;\\r\\n\\r\\n\\t\\t\\t\\tif ( materials[ name ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\treturn materials[ name ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tswitch ( data.type ) {\\r\\n\\r\\n\\t\\t\\t\\tcase 'Scene':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.Scene();\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'PerspectiveCamera':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( data.focus !== undefined ) object.focus = data.focus;\\r\\n\\t\\t\\t\\t\\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\\r\\n\\t\\t\\t\\t\\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\\r\\n\\t\\t\\t\\t\\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\\r\\n\\t\\t\\t\\t\\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'OrthographicCamera':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'AmbientLight':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.AmbientLight( data.color, data.intensity );\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'DirectionalLight':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.DirectionalLight( data.color, data.intensity );\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'PointLight':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'SpotLight':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'HemisphereLight':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'Mesh':\\r\\n\\r\\n\\t\\t\\t\\t\\tvar geometry = getGeometry( data.geometry );\\r\\n\\t\\t\\t\\t\\tvar material = getMaterial( data.material );\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.Mesh( geometry, material );\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'LOD':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.LOD();\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'Line':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'PointCloud':\\r\\n\\t\\t\\t\\tcase 'Points':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'Sprite':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.Sprite( getMaterial( data.material ) );\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase 'Group':\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.Group();\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tdefault:\\r\\n\\r\\n\\t\\t\\t\\t\\tobject = new THREE.Object3D();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tobject.uuid = data.uuid;\\r\\n\\r\\n\\t\\t\\tif ( data.name !== undefined ) object.name = data.name;\\r\\n\\t\\t\\tif ( data.matrix !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tmatrix.fromArray( data.matrix );\\r\\n\\t\\t\\t\\tmatrix.decompose( object.position, object.quaternion, object.scale );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tif ( data.position !== undefined ) object.position.fromArray( data.position );\\r\\n\\t\\t\\t\\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\\r\\n\\t\\t\\t\\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\\r\\n\\t\\t\\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\\r\\n\\r\\n\\t\\t\\tif ( data.visible !== undefined ) object.visible = data.visible;\\r\\n\\t\\t\\tif ( data.userData !== undefined ) object.userData = data.userData;\\r\\n\\r\\n\\t\\t\\tif ( data.children !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tfor ( var child in data.children ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( data.type === 'LOD' ) {\\r\\n\\r\\n\\t\\t\\t\\tvar levels = data.levels;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var l = 0; l < levels.length; l ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar level = levels[ l ];\\r\\n\\t\\t\\t\\t\\tvar child = object.getObjectByProperty( 'uuid', level.object );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( child !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tobject.addLevel( child, level.distance );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn object;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}()\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/loaders/TextureLoader.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.TextureLoader = function ( manager ) {\\r\\n\\r\\n\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.TextureLoader.prototype, {\\r\\n\\r\\n\\tload: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n\\t\\tvar texture = new THREE.Texture();\\r\\n\\r\\n\\t\\tvar loader = new THREE.ImageLoader( this.manager );\\r\\n\\t\\tloader.setCrossOrigin( this.crossOrigin );\\r\\n\\t\\tloader.setPath( this.path );\\r\\n\\t\\tloader.load( url, function ( image ) {\\r\\n\\r\\n\\t\\t\\ttexture.image = image;\\r\\n\\t\\t\\ttexture.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\tif ( onLoad !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tonLoad( texture );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}, onProgress, onError );\\r\\n\\r\\n\\t\\treturn texture;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetCrossOrigin: function ( value ) {\\r\\n\\r\\n\\t\\tthis.crossOrigin = value;\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetPath: function ( value ) {\\r\\n\\r\\n\\t\\tthis.path = value;\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/loaders/CubeTextureLoader.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.CubeTextureLoader = function ( manager ) {\\r\\n\\r\\n\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.CubeTextureLoader.prototype, {\\r\\n\\r\\n\\tload: function ( urls, onLoad, onProgress, onError ) {\\r\\n\\r\\n\\t\\tvar texture = new THREE.CubeTexture();\\r\\n\\r\\n\\t\\tvar loader = new THREE.ImageLoader( this.manager );\\r\\n\\t\\tloader.setCrossOrigin( this.crossOrigin );\\r\\n\\t\\tloader.setPath( this.path );\\r\\n\\r\\n\\t\\tvar loaded = 0;\\r\\n\\r\\n\\t\\tfunction loadTexture( i ) {\\r\\n\\r\\n\\t\\t\\tloader.load( urls[ i ], function ( image ) {\\r\\n\\r\\n\\t\\t\\t\\ttexture.images[ i ] = image;\\r\\n\\r\\n\\t\\t\\t\\tloaded ++;\\r\\n\\r\\n\\t\\t\\t\\tif ( loaded === 6 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttexture.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( onLoad ) onLoad( texture );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}, undefined, onError );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < urls.length; ++ i ) {\\r\\n\\r\\n\\t\\t\\tloadTexture( i );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn texture;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetCrossOrigin: function ( value ) {\\r\\n\\r\\n\\t\\tthis.crossOrigin = value;\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetPath: function ( value ) {\\r\\n\\r\\n\\t\\tthis.path = value;\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/loaders/BinaryTextureLoader.js\\r\\n\\r\\n/**\\r\\n * @author Nikos M. / https://github.com/foo123/\\r\\n *\\r\\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\\r\\n */\\r\\n\\r\\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\\r\\n\\r\\n\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\r\\n\\r\\n\\t// override in sub classes\\r\\n\\tthis._parser = null;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.BinaryTextureLoader.prototype, {\\r\\n\\r\\n\\tload: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n\\t\\tvar scope = this;\\r\\n\\r\\n\\t\\tvar texture = new THREE.DataTexture();\\r\\n\\r\\n\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\r\\n\\t\\tloader.setResponseType( 'arraybuffer' );\\r\\n\\r\\n\\t\\tloader.load( url, function ( buffer ) {\\r\\n\\r\\n\\t\\t\\tvar texData = scope._parser( buffer );\\r\\n\\r\\n\\t\\t\\tif ( ! texData ) return;\\r\\n\\r\\n\\t\\t\\tif ( undefined !== texData.image ) {\\r\\n\\r\\n\\t\\t\\t\\ttexture.image = texData.image;\\r\\n\\r\\n\\t\\t\\t} else if ( undefined !== texData.data ) {\\r\\n\\r\\n\\t\\t\\t\\ttexture.image.width = texData.width;\\r\\n\\t\\t\\t\\ttexture.image.height = texData.height;\\r\\n\\t\\t\\t\\ttexture.image.data = texData.data;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\\r\\n\\t\\t\\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\\r\\n\\r\\n\\t\\t\\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\\r\\n\\t\\t\\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\\r\\n\\r\\n\\t\\t\\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\\r\\n\\r\\n\\t\\t\\tif ( undefined !== texData.format ) {\\r\\n\\r\\n\\t\\t\\t\\ttexture.format = texData.format;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( undefined !== texData.type ) {\\r\\n\\r\\n\\t\\t\\t\\ttexture.type = texData.type;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( undefined !== texData.mipmaps ) {\\r\\n\\r\\n\\t\\t\\t\\ttexture.mipmaps = texData.mipmaps;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( 1 === texData.mipmapCount ) {\\r\\n\\r\\n\\t\\t\\t\\ttexture.minFilter = THREE.LinearFilter;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ttexture.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\tif ( onLoad ) onLoad( texture, texData );\\r\\n\\r\\n\\t\\t}, onProgress, onError );\\r\\n\\r\\n\\r\\n\\t\\treturn texture;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/loaders/CompressedTextureLoader.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n *\\r\\n * Abstract Base class to block based textures loader (dds, pvr, ...)\\r\\n */\\r\\n\\r\\nTHREE.CompressedTextureLoader = function ( manager ) {\\r\\n\\r\\n\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\r\\n\\r\\n\\t// override in sub classes\\r\\n\\tthis._parser = null;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.CompressedTextureLoader.prototype, {\\r\\n\\r\\n\\tload: function ( url, onLoad, onProgress, onError ) {\\r\\n\\r\\n\\t\\tvar scope = this;\\r\\n\\r\\n\\t\\tvar images = [];\\r\\n\\r\\n\\t\\tvar texture = new THREE.CompressedTexture();\\r\\n\\t\\ttexture.image = images;\\r\\n\\r\\n\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\r\\n\\t\\tloader.setPath( this.path );\\r\\n\\t\\tloader.setResponseType( 'arraybuffer' );\\r\\n\\r\\n\\t\\tfunction loadTexture( i ) {\\r\\n\\r\\n\\t\\t\\tloader.load( url[ i ], function ( buffer ) {\\r\\n\\r\\n\\t\\t\\t\\tvar texDatas = scope._parser( buffer, true );\\r\\n\\r\\n\\t\\t\\t\\timages[ i ] = {\\r\\n\\t\\t\\t\\t\\twidth: texDatas.width,\\r\\n\\t\\t\\t\\t\\theight: texDatas.height,\\r\\n\\t\\t\\t\\t\\tformat: texDatas.format,\\r\\n\\t\\t\\t\\t\\tmipmaps: texDatas.mipmaps\\r\\n\\t\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t\\tloaded += 1;\\r\\n\\r\\n\\t\\t\\t\\tif ( loaded === 6 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( texDatas.mipmapCount === 1 )\\r\\n\\t\\t\\t\\t\\t\\ttexture.minFilter = THREE.LinearFilter;\\r\\n\\r\\n\\t\\t\\t\\t\\ttexture.format = texDatas.format;\\r\\n\\t\\t\\t\\t\\ttexture.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( onLoad ) onLoad( texture );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}, onProgress, onError );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( Array.isArray( url ) ) {\\r\\n\\r\\n\\t\\t\\tvar loaded = 0;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\tloadTexture( i );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// compressed cubemap texture stored in a single DDS file\\r\\n\\r\\n\\t\\t\\tloader.load( url, function ( buffer ) {\\r\\n\\r\\n\\t\\t\\t\\tvar texDatas = scope._parser( buffer, true );\\r\\n\\r\\n\\t\\t\\t\\tif ( texDatas.isCubemap ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var f = 0; f < faces; f ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\timages[ f ] = { mipmaps : [] };\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\\r\\n\\t\\t\\t\\t\\t\\t\\timages[ f ].format = texDatas.format;\\r\\n\\t\\t\\t\\t\\t\\t\\timages[ f ].width = texDatas.width;\\r\\n\\t\\t\\t\\t\\t\\t\\timages[ f ].height = texDatas.height;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\ttexture.image.width = texDatas.width;\\r\\n\\t\\t\\t\\t\\ttexture.image.height = texDatas.height;\\r\\n\\t\\t\\t\\t\\ttexture.mipmaps = texDatas.mipmaps;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( texDatas.mipmapCount === 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttexture.minFilter = THREE.LinearFilter;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\ttexture.format = texDatas.format;\\r\\n\\t\\t\\t\\ttexture.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t\\tif ( onLoad ) onLoad( texture );\\r\\n\\r\\n\\t\\t\\t}, onProgress, onError );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn texture;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetPath: function ( value ) {\\r\\n\\r\\n\\t\\tthis.path = value;\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/materials/Material.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.Material = function () {\\r\\n\\r\\n\\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\tthis.name = '';\\r\\n\\tthis.type = 'Material';\\r\\n\\r\\n\\tthis.fog = true;\\r\\n\\tthis.lights = true;\\r\\n\\r\\n\\tthis.blending = THREE.NormalBlending;\\r\\n\\tthis.side = THREE.FrontSide;\\r\\n\\tthis.shading = THREE.SmoothShading; // THREE.FlatShading, THREE.SmoothShading\\r\\n\\tthis.vertexColors = THREE.NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\\r\\n\\r\\n\\tthis.opacity = 1;\\r\\n\\tthis.transparent = false;\\r\\n\\r\\n\\tthis.blendSrc = THREE.SrcAlphaFactor;\\r\\n\\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\\r\\n\\tthis.blendEquation = THREE.AddEquation;\\r\\n\\tthis.blendSrcAlpha = null;\\r\\n\\tthis.blendDstAlpha = null;\\r\\n\\tthis.blendEquationAlpha = null;\\r\\n\\r\\n\\tthis.depthFunc = THREE.LessEqualDepth;\\r\\n\\tthis.depthTest = true;\\r\\n\\tthis.depthWrite = true;\\r\\n\\r\\n\\tthis.clippingPlanes = null;\\r\\n\\tthis.clipShadows = false;\\r\\n\\r\\n\\tthis.colorWrite = true;\\r\\n\\r\\n\\tthis.precision = null; // override the renderer's default precision for this material\\r\\n\\r\\n\\tthis.polygonOffset = false;\\r\\n\\tthis.polygonOffsetFactor = 0;\\r\\n\\tthis.polygonOffsetUnits = 0;\\r\\n\\r\\n\\tthis.alphaTest = 0;\\r\\n\\tthis.premultipliedAlpha = false;\\r\\n\\r\\n\\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\\r\\n\\r\\n\\tthis.visible = true;\\r\\n\\r\\n\\tthis._needsUpdate = true;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Material.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Material,\\r\\n\\r\\n\\tget needsUpdate() {\\r\\n\\r\\n\\t\\treturn this._needsUpdate;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset needsUpdate( value ) {\\r\\n\\r\\n\\t\\tif ( value === true ) this.update();\\r\\n\\t\\tthis._needsUpdate = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetValues: function ( values ) {\\r\\n\\r\\n\\t\\tif ( values === undefined ) return;\\r\\n\\r\\n\\t\\tfor ( var key in values ) {\\r\\n\\r\\n\\t\\t\\tvar newValue = values[ key ];\\r\\n\\r\\n\\t\\t\\tif ( newValue === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( \\\"THREE.Material: '\\\" + key + \\\"' parameter is undefined.\\\" );\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar currentValue = this[ key ];\\r\\n\\r\\n\\t\\t\\tif ( currentValue === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( \\\"THREE.\\\" + this.type + \\\": '\\\" + key + \\\"' is not a property of this material.\\\" );\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( currentValue instanceof THREE.Color ) {\\r\\n\\r\\n\\t\\t\\t\\tcurrentValue.set( newValue );\\r\\n\\r\\n\\t\\t\\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\\r\\n\\r\\n\\t\\t\\t\\tcurrentValue.copy( newValue );\\r\\n\\r\\n\\t\\t\\t} else if ( key === 'overdraw' ) {\\r\\n\\r\\n\\t\\t\\t\\t// ensure overdraw is backwards-compatible with legacy boolean type\\r\\n\\t\\t\\t\\tthis[ key ] = Number( newValue );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tthis[ key ] = newValue;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoJSON: function ( meta ) {\\r\\n\\r\\n\\t\\tvar isRoot = meta === undefined;\\r\\n\\r\\n\\t\\tif ( isRoot ) {\\r\\n\\r\\n\\t\\t\\tmeta = {\\r\\n\\t\\t\\t\\ttextures: {},\\r\\n\\t\\t\\t\\timages: {}\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar data = {\\r\\n\\t\\t\\tmetadata: {\\r\\n\\t\\t\\t\\tversion: 4.4,\\r\\n\\t\\t\\t\\ttype: 'Material',\\r\\n\\t\\t\\t\\tgenerator: 'Material.toJSON'\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// standard Material serialization\\r\\n\\t\\tdata.uuid = this.uuid;\\r\\n\\t\\tdata.type = this.type;\\r\\n\\r\\n\\t\\tif ( this.name !== '' ) data.name = this.name;\\r\\n\\r\\n\\t\\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\\r\\n\\r\\n\\t\\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\\r\\n\\t\\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\\r\\n\\r\\n\\t\\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\\r\\n\\t\\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\\r\\n\\t\\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\\r\\n\\r\\n\\t\\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\\r\\n\\t\\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\\r\\n\\t\\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\\r\\n\\t\\tif ( this.bumpMap instanceof THREE.Texture ) {\\r\\n\\r\\n\\t\\t\\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\\r\\n\\t\\t\\tdata.bumpScale = this.bumpScale;\\r\\n\\r\\n\\t\\t}\\r\\n\\t\\tif ( this.normalMap instanceof THREE.Texture ) {\\r\\n\\r\\n\\t\\t\\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\\r\\n\\t\\t\\tdata.normalScale = this.normalScale.toArray();\\r\\n\\r\\n\\t\\t}\\r\\n\\t\\tif ( this.displacementMap instanceof THREE.Texture ) {\\r\\n\\r\\n\\t\\t\\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\\r\\n\\t\\t\\tdata.displacementScale = this.displacementScale;\\r\\n\\t\\t\\tdata.displacementBias = this.displacementBias;\\r\\n\\r\\n\\t\\t}\\r\\n\\t\\tif ( this.roughnessMap instanceof THREE.Texture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\\r\\n\\t\\tif ( this.metalnessMap instanceof THREE.Texture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\\r\\n\\r\\n\\t\\tif ( this.emissiveMap instanceof THREE.Texture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\\r\\n\\t\\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\\r\\n\\r\\n\\t\\tif ( this.envMap instanceof THREE.Texture ) {\\r\\n\\r\\n\\t\\t\\tdata.envMap = this.envMap.toJSON( meta ).uuid;\\r\\n\\t\\t\\tdata.reflectivity = this.reflectivity; // Scale behind envMap\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.size !== undefined ) data.size = this.size;\\r\\n\\t\\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\\r\\n\\r\\n\\t\\tif ( this.blending !== THREE.NormalBlending ) data.blending = this.blending;\\r\\n\\t\\tif ( this.shading !== THREE.SmoothShading ) data.shading = this.shading;\\r\\n\\t\\tif ( this.side !== THREE.FrontSide ) data.side = this.side;\\r\\n\\t\\tif ( this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\\r\\n\\r\\n\\t\\tif ( this.opacity < 1 ) data.opacity = this.opacity;\\r\\n\\t\\tif ( this.transparent === true ) data.transparent = this.transparent;\\r\\n\\t\\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\\r\\n\\t\\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\\r\\n\\t\\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\\r\\n\\t\\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\\r\\n\\r\\n\\t\\t// TODO: Copied from Object3D.toJSON\\r\\n\\r\\n\\t\\tfunction extractFromCache ( cache ) {\\r\\n\\r\\n\\t\\t\\tvar values = [];\\r\\n\\r\\n\\t\\t\\tfor ( var key in cache ) {\\r\\n\\r\\n\\t\\t\\t\\tvar data = cache[ key ];\\r\\n\\t\\t\\t\\tdelete data.metadata;\\r\\n\\t\\t\\t\\tvalues.push( data );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn values;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( isRoot ) {\\r\\n\\r\\n\\t\\t\\tvar textures = extractFromCache( meta.textures );\\r\\n\\t\\t\\tvar images = extractFromCache( meta.images );\\r\\n\\r\\n\\t\\t\\tif ( textures.length > 0 ) data.textures = textures;\\r\\n\\t\\t\\tif ( images.length > 0 ) data.images = images;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn data;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tthis.name = source.name;\\r\\n\\r\\n\\t\\tthis.fog = source.fog;\\r\\n\\t\\tthis.lights = source.lights;\\r\\n\\r\\n\\t\\tthis.blending = source.blending;\\r\\n\\t\\tthis.side = source.side;\\r\\n\\t\\tthis.shading = source.shading;\\r\\n\\t\\tthis.vertexColors = source.vertexColors;\\r\\n\\r\\n\\t\\tthis.opacity = source.opacity;\\r\\n\\t\\tthis.transparent = source.transparent;\\r\\n\\r\\n\\t\\tthis.blendSrc = source.blendSrc;\\r\\n\\t\\tthis.blendDst = source.blendDst;\\r\\n\\t\\tthis.blendEquation = source.blendEquation;\\r\\n\\t\\tthis.blendSrcAlpha = source.blendSrcAlpha;\\r\\n\\t\\tthis.blendDstAlpha = source.blendDstAlpha;\\r\\n\\t\\tthis.blendEquationAlpha = source.blendEquationAlpha;\\r\\n\\r\\n\\t\\tthis.depthFunc = source.depthFunc;\\r\\n\\t\\tthis.depthTest = source.depthTest;\\r\\n\\t\\tthis.depthWrite = source.depthWrite;\\r\\n\\r\\n\\t\\tthis.colorWrite = source.colorWrite;\\r\\n\\r\\n\\t\\tthis.precision = source.precision;\\r\\n\\r\\n\\t\\tthis.polygonOffset = source.polygonOffset;\\r\\n\\t\\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\\r\\n\\t\\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\\r\\n\\r\\n\\t\\tthis.alphaTest = source.alphaTest;\\r\\n\\r\\n\\t\\tthis.premultipliedAlpha = source.premultipliedAlpha;\\r\\n\\r\\n\\t\\tthis.overdraw = source.overdraw;\\r\\n\\r\\n\\t\\tthis.visible = source.visible;\\r\\n\\t\\tthis.clipShadows = source.clipShadows;\\r\\n\\r\\n\\t\\tvar srcPlanes = source.clippingPlanes,\\r\\n\\t\\t\\tdstPlanes = null;\\r\\n\\r\\n\\t\\tif ( srcPlanes !== null ) {\\r\\n\\r\\n\\t\\t\\tvar n = srcPlanes.length;\\r\\n\\t\\t\\tdstPlanes = new Array( n );\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i !== n; ++ i )\\r\\n\\t\\t\\t\\tdstPlanes[ i ] = srcPlanes[ i ].clone();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.clippingPlanes = dstPlanes;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdate: function () {\\r\\n\\r\\n\\t\\tthis.dispatchEvent( { type: 'update' } );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdispose: function () {\\r\\n\\r\\n\\t\\tthis.dispatchEvent( { type: 'dispose' } );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.Material.prototype, THREE.EventDispatcher.prototype );\\r\\n\\r\\nTHREE.MaterialIdCount = 0;\\r\\n\\r\\n// File:src/materials/LineBasicMaterial.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n *\\r\\n * parameters = {\\r\\n *  color: <hex>,\\r\\n *  opacity: <float>,\\r\\n *\\r\\n *  linewidth: <float>,\\r\\n *  linecap: \\\"round\\\",\\r\\n *  linejoin: \\\"round\\\"\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.LineBasicMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.Material.call( this );\\r\\n\\r\\n\\tthis.type = 'LineBasicMaterial';\\r\\n\\r\\n\\tthis.color = new THREE.Color( 0xffffff );\\r\\n\\r\\n\\tthis.linewidth = 1;\\r\\n\\tthis.linecap = 'round';\\r\\n\\tthis.linejoin = 'round';\\r\\n\\r\\n\\tthis.lights = false;\\r\\n\\r\\n\\tthis.setValues( parameters );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\\r\\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\\r\\n\\r\\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.Material.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.color.copy( source.color );\\r\\n\\r\\n\\tthis.linewidth = source.linewidth;\\r\\n\\tthis.linecap = source.linecap;\\r\\n\\tthis.linejoin = source.linejoin;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/LineDashedMaterial.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n *\\r\\n * parameters = {\\r\\n *  color: <hex>,\\r\\n *  opacity: <float>,\\r\\n *\\r\\n *  linewidth: <float>,\\r\\n *\\r\\n *  scale: <float>,\\r\\n *  dashSize: <float>,\\r\\n *  gapSize: <float>\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.LineDashedMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.Material.call( this );\\r\\n\\r\\n\\tthis.type = 'LineDashedMaterial';\\r\\n\\r\\n\\tthis.color = new THREE.Color( 0xffffff );\\r\\n\\r\\n\\tthis.linewidth = 1;\\r\\n\\r\\n\\tthis.scale = 1;\\r\\n\\tthis.dashSize = 3;\\r\\n\\tthis.gapSize = 1;\\r\\n\\r\\n\\tthis.lights = false;\\r\\n\\r\\n\\tthis.setValues( parameters );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\\r\\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\\r\\n\\r\\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.Material.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.color.copy( source.color );\\r\\n\\r\\n\\tthis.linewidth = source.linewidth;\\r\\n\\r\\n\\tthis.scale = source.scale;\\r\\n\\tthis.dashSize = source.dashSize;\\r\\n\\tthis.gapSize = source.gapSize;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/MeshBasicMaterial.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n *\\r\\n * parameters = {\\r\\n *  color: <hex>,\\r\\n *  opacity: <float>,\\r\\n *  map: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  aoMap: new THREE.Texture( <Image> ),\\r\\n *  aoMapIntensity: <float>\\r\\n *\\r\\n *  specularMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  alphaMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\\r\\n *  combine: THREE.Multiply,\\r\\n *  reflectivity: <float>,\\r\\n *  refractionRatio: <float>,\\r\\n *\\r\\n *  shading: THREE.SmoothShading,\\r\\n *  depthTest: <bool>,\\r\\n *  depthWrite: <bool>,\\r\\n *\\r\\n *  wireframe: <boolean>,\\r\\n *  wireframeLinewidth: <float>,\\r\\n *\\r\\n *  skinning: <bool>,\\r\\n *  morphTargets: <bool>\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.MeshBasicMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.Material.call( this );\\r\\n\\r\\n\\tthis.type = 'MeshBasicMaterial';\\r\\n\\r\\n\\tthis.color = new THREE.Color( 0xffffff ); // emissive\\r\\n\\r\\n\\tthis.map = null;\\r\\n\\r\\n\\tthis.aoMap = null;\\r\\n\\tthis.aoMapIntensity = 1.0;\\r\\n\\r\\n\\tthis.specularMap = null;\\r\\n\\r\\n\\tthis.alphaMap = null;\\r\\n\\r\\n\\tthis.envMap = null;\\r\\n\\tthis.combine = THREE.MultiplyOperation;\\r\\n\\tthis.reflectivity = 1;\\r\\n\\tthis.refractionRatio = 0.98;\\r\\n\\r\\n\\tthis.wireframe = false;\\r\\n\\tthis.wireframeLinewidth = 1;\\r\\n\\tthis.wireframeLinecap = 'round';\\r\\n\\tthis.wireframeLinejoin = 'round';\\r\\n\\r\\n\\tthis.skinning = false;\\r\\n\\tthis.morphTargets = false;\\r\\n\\r\\n\\tthis.lights = false;\\r\\n\\r\\n\\tthis.setValues( parameters );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\\r\\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\\r\\n\\r\\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.Material.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.color.copy( source.color );\\r\\n\\r\\n\\tthis.map = source.map;\\r\\n\\r\\n\\tthis.aoMap = source.aoMap;\\r\\n\\tthis.aoMapIntensity = source.aoMapIntensity;\\r\\n\\r\\n\\tthis.specularMap = source.specularMap;\\r\\n\\r\\n\\tthis.alphaMap = source.alphaMap;\\r\\n\\r\\n\\tthis.envMap = source.envMap;\\r\\n\\tthis.combine = source.combine;\\r\\n\\tthis.reflectivity = source.reflectivity;\\r\\n\\tthis.refractionRatio = source.refractionRatio;\\r\\n\\r\\n\\tthis.wireframe = source.wireframe;\\r\\n\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\r\\n\\tthis.wireframeLinecap = source.wireframeLinecap;\\r\\n\\tthis.wireframeLinejoin = source.wireframeLinejoin;\\r\\n\\r\\n\\tthis.skinning = source.skinning;\\r\\n\\tthis.morphTargets = source.morphTargets;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/MeshDepthMaterial.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author bhouston / https://clara.io\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n *\\r\\n * parameters = {\\r\\n *\\r\\n *  opacity: <float>,\\r\\n *\\r\\n *  map: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  alphaMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  displacementMap: new THREE.Texture( <Image> ),\\r\\n *  displacementScale: <float>,\\r\\n *  displacementBias: <float>,\\r\\n *\\r\\n *  wireframe: <boolean>,\\r\\n *  wireframeLinewidth: <float>\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.MeshDepthMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.Material.call( this );\\r\\n\\r\\n\\tthis.type = 'MeshDepthMaterial';\\r\\n\\r\\n\\tthis.depthPacking = THREE.BasicDepthPacking;\\r\\n\\r\\n\\tthis.skinning = false;\\r\\n\\tthis.morphTargets = false;\\r\\n\\r\\n\\tthis.map = null;\\r\\n\\r\\n\\tthis.alphaMap = null;\\r\\n\\r\\n\\tthis.displacementMap = null;\\r\\n\\tthis.displacementScale = 1;\\r\\n\\tthis.displacementBias = 0;\\r\\n\\r\\n\\tthis.wireframe = false;\\r\\n\\tthis.wireframeLinewidth = 1;\\r\\n\\r\\n\\tthis.fog = false;\\r\\n\\tthis.lights = false;\\r\\n\\r\\n\\tthis.setValues( parameters );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\\r\\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\\r\\n\\r\\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.Material.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.depthPacking = source.depthPacking;\\r\\n\\r\\n\\tthis.skinning = source.skinning;\\r\\n\\tthis.morphTargets = source.morphTargets;\\r\\n\\r\\n\\tthis.map = source.map;\\r\\n\\r\\n\\tthis.alphaMap = source.alphaMap;\\r\\n\\r\\n\\tthis.displacementMap = source.displacementMap;\\r\\n\\tthis.displacementScale = source.displacementScale;\\r\\n\\tthis.displacementBias = source.displacementBias;\\r\\n\\r\\n\\tthis.wireframe = source.wireframe;\\r\\n\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/MeshLambertMaterial.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n *\\r\\n * parameters = {\\r\\n *  color: <hex>,\\r\\n *  opacity: <float>,\\r\\n *\\r\\n *  map: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  lightMap: new THREE.Texture( <Image> ),\\r\\n *  lightMapIntensity: <float>\\r\\n *\\r\\n *  aoMap: new THREE.Texture( <Image> ),\\r\\n *  aoMapIntensity: <float>\\r\\n *\\r\\n *  emissive: <hex>,\\r\\n *  emissiveIntensity: <float>\\r\\n *  emissiveMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  specularMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  alphaMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\\r\\n *  combine: THREE.Multiply,\\r\\n *  reflectivity: <float>,\\r\\n *  refractionRatio: <float>,\\r\\n *\\r\\n *  wireframe: <boolean>,\\r\\n *  wireframeLinewidth: <float>,\\r\\n *\\r\\n *  skinning: <bool>,\\r\\n *  morphTargets: <bool>,\\r\\n *  morphNormals: <bool>\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.MeshLambertMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.Material.call( this );\\r\\n\\r\\n\\tthis.type = 'MeshLambertMaterial';\\r\\n\\r\\n\\tthis.color = new THREE.Color( 0xffffff ); // diffuse\\r\\n\\r\\n\\tthis.map = null;\\r\\n\\r\\n\\tthis.lightMap = null;\\r\\n\\tthis.lightMapIntensity = 1.0;\\r\\n\\r\\n\\tthis.aoMap = null;\\r\\n\\tthis.aoMapIntensity = 1.0;\\r\\n\\r\\n\\tthis.emissive = new THREE.Color( 0x000000 );\\r\\n\\tthis.emissiveIntensity = 1.0;\\r\\n\\tthis.emissiveMap = null;\\r\\n\\r\\n\\tthis.specularMap = null;\\r\\n\\r\\n\\tthis.alphaMap = null;\\r\\n\\r\\n\\tthis.envMap = null;\\r\\n\\tthis.combine = THREE.MultiplyOperation;\\r\\n\\tthis.reflectivity = 1;\\r\\n\\tthis.refractionRatio = 0.98;\\r\\n\\r\\n\\tthis.wireframe = false;\\r\\n\\tthis.wireframeLinewidth = 1;\\r\\n\\tthis.wireframeLinecap = 'round';\\r\\n\\tthis.wireframeLinejoin = 'round';\\r\\n\\r\\n\\tthis.skinning = false;\\r\\n\\tthis.morphTargets = false;\\r\\n\\tthis.morphNormals = false;\\r\\n\\r\\n\\tthis.setValues( parameters );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\\r\\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\\r\\n\\r\\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.Material.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.color.copy( source.color );\\r\\n\\r\\n\\tthis.map = source.map;\\r\\n\\r\\n\\tthis.lightMap = source.lightMap;\\r\\n\\tthis.lightMapIntensity = source.lightMapIntensity;\\r\\n\\r\\n\\tthis.aoMap = source.aoMap;\\r\\n\\tthis.aoMapIntensity = source.aoMapIntensity;\\r\\n\\r\\n\\tthis.emissive.copy( source.emissive );\\r\\n\\tthis.emissiveMap = source.emissiveMap;\\r\\n\\tthis.emissiveIntensity = source.emissiveIntensity;\\r\\n\\r\\n\\tthis.specularMap = source.specularMap;\\r\\n\\r\\n\\tthis.alphaMap = source.alphaMap;\\r\\n\\r\\n\\tthis.envMap = source.envMap;\\r\\n\\tthis.combine = source.combine;\\r\\n\\tthis.reflectivity = source.reflectivity;\\r\\n\\tthis.refractionRatio = source.refractionRatio;\\r\\n\\r\\n\\tthis.wireframe = source.wireframe;\\r\\n\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\r\\n\\tthis.wireframeLinecap = source.wireframeLinecap;\\r\\n\\tthis.wireframeLinejoin = source.wireframeLinejoin;\\r\\n\\r\\n\\tthis.skinning = source.skinning;\\r\\n\\tthis.morphTargets = source.morphTargets;\\r\\n\\tthis.morphNormals = source.morphNormals;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/MeshNormalMaterial.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n *\\r\\n * parameters = {\\r\\n *  opacity: <float>,\\r\\n *\\r\\n *  wireframe: <boolean>,\\r\\n *  wireframeLinewidth: <float>\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.MeshNormalMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.Material.call( this, parameters );\\r\\n\\r\\n\\tthis.type = 'MeshNormalMaterial';\\r\\n\\r\\n\\tthis.wireframe = false;\\r\\n\\tthis.wireframeLinewidth = 1;\\r\\n\\r\\n\\tthis.fog = false;\\r\\n\\tthis.lights = false;\\r\\n\\tthis.morphTargets = false;\\r\\n\\r\\n\\tthis.setValues( parameters );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\\r\\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\\r\\n\\r\\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.Material.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.wireframe = source.wireframe;\\r\\n\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/MeshPhongMaterial.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n *\\r\\n * parameters = {\\r\\n *  color: <hex>,\\r\\n *  specular: <hex>,\\r\\n *  shininess: <float>,\\r\\n *  opacity: <float>,\\r\\n *\\r\\n *  map: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  lightMap: new THREE.Texture( <Image> ),\\r\\n *  lightMapIntensity: <float>\\r\\n *\\r\\n *  aoMap: new THREE.Texture( <Image> ),\\r\\n *  aoMapIntensity: <float>\\r\\n *\\r\\n *  emissive: <hex>,\\r\\n *  emissiveIntensity: <float>\\r\\n *  emissiveMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  bumpMap: new THREE.Texture( <Image> ),\\r\\n *  bumpScale: <float>,\\r\\n *\\r\\n *  normalMap: new THREE.Texture( <Image> ),\\r\\n *  normalScale: <Vector2>,\\r\\n *\\r\\n *  displacementMap: new THREE.Texture( <Image> ),\\r\\n *  displacementScale: <float>,\\r\\n *  displacementBias: <float>,\\r\\n *\\r\\n *  specularMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  alphaMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\\r\\n *  combine: THREE.Multiply,\\r\\n *  reflectivity: <float>,\\r\\n *  refractionRatio: <float>,\\r\\n *\\r\\n *  wireframe: <boolean>,\\r\\n *  wireframeLinewidth: <float>,\\r\\n *\\r\\n *  skinning: <bool>,\\r\\n *  morphTargets: <bool>,\\r\\n *  morphNormals: <bool>\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.MeshPhongMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.Material.call( this );\\r\\n\\r\\n\\tthis.type = 'MeshPhongMaterial';\\r\\n\\r\\n\\tthis.color = new THREE.Color( 0xffffff ); // diffuse\\r\\n\\tthis.specular = new THREE.Color( 0x111111 );\\r\\n\\tthis.shininess = 30;\\r\\n\\r\\n\\tthis.map = null;\\r\\n\\r\\n\\tthis.lightMap = null;\\r\\n\\tthis.lightMapIntensity = 1.0;\\r\\n\\r\\n\\tthis.aoMap = null;\\r\\n\\tthis.aoMapIntensity = 1.0;\\r\\n\\r\\n\\tthis.emissive = new THREE.Color( 0x000000 );\\r\\n\\tthis.emissiveIntensity = 1.0;\\r\\n\\tthis.emissiveMap = null;\\r\\n\\r\\n\\tthis.bumpMap = null;\\r\\n\\tthis.bumpScale = 1;\\r\\n\\r\\n\\tthis.normalMap = null;\\r\\n\\tthis.normalScale = new THREE.Vector2( 1, 1 );\\r\\n\\r\\n\\tthis.displacementMap = null;\\r\\n\\tthis.displacementScale = 1;\\r\\n\\tthis.displacementBias = 0;\\r\\n\\r\\n\\tthis.specularMap = null;\\r\\n\\r\\n\\tthis.alphaMap = null;\\r\\n\\r\\n\\tthis.envMap = null;\\r\\n\\tthis.combine = THREE.MultiplyOperation;\\r\\n\\tthis.reflectivity = 1;\\r\\n\\tthis.refractionRatio = 0.98;\\r\\n\\r\\n\\tthis.wireframe = false;\\r\\n\\tthis.wireframeLinewidth = 1;\\r\\n\\tthis.wireframeLinecap = 'round';\\r\\n\\tthis.wireframeLinejoin = 'round';\\r\\n\\r\\n\\tthis.skinning = false;\\r\\n\\tthis.morphTargets = false;\\r\\n\\tthis.morphNormals = false;\\r\\n\\r\\n\\tthis.setValues( parameters );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\\r\\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\\r\\n\\r\\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.Material.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.color.copy( source.color );\\r\\n\\tthis.specular.copy( source.specular );\\r\\n\\tthis.shininess = source.shininess;\\r\\n\\r\\n\\tthis.map = source.map;\\r\\n\\r\\n\\tthis.lightMap = source.lightMap;\\r\\n\\tthis.lightMapIntensity = source.lightMapIntensity;\\r\\n\\r\\n\\tthis.aoMap = source.aoMap;\\r\\n\\tthis.aoMapIntensity = source.aoMapIntensity;\\r\\n\\r\\n\\tthis.emissive.copy( source.emissive );\\r\\n\\tthis.emissiveMap = source.emissiveMap;\\r\\n\\tthis.emissiveIntensity = source.emissiveIntensity;\\r\\n\\r\\n\\tthis.bumpMap = source.bumpMap;\\r\\n\\tthis.bumpScale = source.bumpScale;\\r\\n\\r\\n\\tthis.normalMap = source.normalMap;\\r\\n\\tthis.normalScale.copy( source.normalScale );\\r\\n\\r\\n\\tthis.displacementMap = source.displacementMap;\\r\\n\\tthis.displacementScale = source.displacementScale;\\r\\n\\tthis.displacementBias = source.displacementBias;\\r\\n\\r\\n\\tthis.specularMap = source.specularMap;\\r\\n\\r\\n\\tthis.alphaMap = source.alphaMap;\\r\\n\\r\\n\\tthis.envMap = source.envMap;\\r\\n\\tthis.combine = source.combine;\\r\\n\\tthis.reflectivity = source.reflectivity;\\r\\n\\tthis.refractionRatio = source.refractionRatio;\\r\\n\\r\\n\\tthis.wireframe = source.wireframe;\\r\\n\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\r\\n\\tthis.wireframeLinecap = source.wireframeLinecap;\\r\\n\\tthis.wireframeLinejoin = source.wireframeLinejoin;\\r\\n\\r\\n\\tthis.skinning = source.skinning;\\r\\n\\tthis.morphTargets = source.morphTargets;\\r\\n\\tthis.morphNormals = source.morphNormals;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/MeshStandardMaterial.js\\r\\n\\r\\n/**\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n *\\r\\n * parameters = {\\r\\n *  color: <hex>,\\r\\n *  roughness: <float>,\\r\\n *  metalness: <float>,\\r\\n *  opacity: <float>,\\r\\n *\\r\\n *  map: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  lightMap: new THREE.Texture( <Image> ),\\r\\n *  lightMapIntensity: <float>\\r\\n *\\r\\n *  aoMap: new THREE.Texture( <Image> ),\\r\\n *  aoMapIntensity: <float>\\r\\n *\\r\\n *  emissive: <hex>,\\r\\n *  emissiveIntensity: <float>\\r\\n *  emissiveMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  bumpMap: new THREE.Texture( <Image> ),\\r\\n *  bumpScale: <float>,\\r\\n *\\r\\n *  normalMap: new THREE.Texture( <Image> ),\\r\\n *  normalScale: <Vector2>,\\r\\n *\\r\\n *  displacementMap: new THREE.Texture( <Image> ),\\r\\n *  displacementScale: <float>,\\r\\n *  displacementBias: <float>,\\r\\n *\\r\\n *  roughnessMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  metalnessMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  alphaMap: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\\r\\n *  envMapIntensity: <float>\\r\\n *\\r\\n *  refractionRatio: <float>,\\r\\n *\\r\\n *  wireframe: <boolean>,\\r\\n *  wireframeLinewidth: <float>,\\r\\n *\\r\\n *  skinning: <bool>,\\r\\n *  morphTargets: <bool>,\\r\\n *  morphNormals: <bool>\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.MeshStandardMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.Material.call( this );\\r\\n\\r\\n\\tthis.defines = { 'STANDARD': '' };\\r\\n\\r\\n\\tthis.type = 'MeshStandardMaterial';\\r\\n\\r\\n\\tthis.color = new THREE.Color( 0xffffff ); // diffuse\\r\\n\\tthis.roughness = 0.5;\\r\\n\\tthis.metalness = 0.5;\\r\\n\\r\\n\\tthis.map = null;\\r\\n\\r\\n\\tthis.lightMap = null;\\r\\n\\tthis.lightMapIntensity = 1.0;\\r\\n\\r\\n\\tthis.aoMap = null;\\r\\n\\tthis.aoMapIntensity = 1.0;\\r\\n\\r\\n\\tthis.emissive = new THREE.Color( 0x000000 );\\r\\n\\tthis.emissiveIntensity = 1.0;\\r\\n\\tthis.emissiveMap = null;\\r\\n\\r\\n\\tthis.bumpMap = null;\\r\\n\\tthis.bumpScale = 1;\\r\\n\\r\\n\\tthis.normalMap = null;\\r\\n\\tthis.normalScale = new THREE.Vector2( 1, 1 );\\r\\n\\r\\n\\tthis.displacementMap = null;\\r\\n\\tthis.displacementScale = 1;\\r\\n\\tthis.displacementBias = 0;\\r\\n\\r\\n\\tthis.roughnessMap = null;\\r\\n\\r\\n\\tthis.metalnessMap = null;\\r\\n\\r\\n\\tthis.alphaMap = null;\\r\\n\\r\\n\\tthis.envMap = null;\\r\\n\\tthis.envMapIntensity = 1.0;\\r\\n\\r\\n\\tthis.refractionRatio = 0.98;\\r\\n\\r\\n\\tthis.wireframe = false;\\r\\n\\tthis.wireframeLinewidth = 1;\\r\\n\\tthis.wireframeLinecap = 'round';\\r\\n\\tthis.wireframeLinejoin = 'round';\\r\\n\\r\\n\\tthis.skinning = false;\\r\\n\\tthis.morphTargets = false;\\r\\n\\tthis.morphNormals = false;\\r\\n\\r\\n\\tthis.setValues( parameters );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MeshStandardMaterial.prototype = Object.create( THREE.Material.prototype );\\r\\nTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\\r\\n\\r\\nTHREE.MeshStandardMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.Material.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.defines = { 'STANDARD': '' };\\r\\n\\r\\n\\tthis.color.copy( source.color );\\r\\n\\tthis.roughness = source.roughness;\\r\\n\\tthis.metalness = source.metalness;\\r\\n\\r\\n\\tthis.map = source.map;\\r\\n\\r\\n\\tthis.lightMap = source.lightMap;\\r\\n\\tthis.lightMapIntensity = source.lightMapIntensity;\\r\\n\\r\\n\\tthis.aoMap = source.aoMap;\\r\\n\\tthis.aoMapIntensity = source.aoMapIntensity;\\r\\n\\r\\n\\tthis.emissive.copy( source.emissive );\\r\\n\\tthis.emissiveMap = source.emissiveMap;\\r\\n\\tthis.emissiveIntensity = source.emissiveIntensity;\\r\\n\\r\\n\\tthis.bumpMap = source.bumpMap;\\r\\n\\tthis.bumpScale = source.bumpScale;\\r\\n\\r\\n\\tthis.normalMap = source.normalMap;\\r\\n\\tthis.normalScale.copy( source.normalScale );\\r\\n\\r\\n\\tthis.displacementMap = source.displacementMap;\\r\\n\\tthis.displacementScale = source.displacementScale;\\r\\n\\tthis.displacementBias = source.displacementBias;\\r\\n\\r\\n\\tthis.roughnessMap = source.roughnessMap;\\r\\n\\r\\n\\tthis.metalnessMap = source.metalnessMap;\\r\\n\\r\\n\\tthis.alphaMap = source.alphaMap;\\r\\n\\r\\n\\tthis.envMap = source.envMap;\\r\\n\\tthis.envMapIntensity = source.envMapIntensity;\\r\\n\\r\\n\\tthis.refractionRatio = source.refractionRatio;\\r\\n\\r\\n\\tthis.wireframe = source.wireframe;\\r\\n\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\r\\n\\tthis.wireframeLinecap = source.wireframeLinecap;\\r\\n\\tthis.wireframeLinejoin = source.wireframeLinejoin;\\r\\n\\r\\n\\tthis.skinning = source.skinning;\\r\\n\\tthis.morphTargets = source.morphTargets;\\r\\n\\tthis.morphNormals = source.morphNormals;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/MeshPhysicalMaterial.js\\r\\n\\r\\n/**\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n *\\r\\n * parameters = {\\r\\n *  reflectivity: <float>\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.MeshPhysicalMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.MeshStandardMaterial.call( this );\\r\\n\\r\\n\\tthis.defines = { 'PHYSICAL': '' };\\r\\n\\r\\n\\tthis.type = 'MeshPhysicalMaterial';\\r\\n\\r\\n\\tthis.reflectivity = 0.5; // maps to F0 = 0.04\\r\\n\\r\\n\\tthis.clearCoat = 0.0;\\r\\n\\tthis.clearCoatRoughness = 0.0;\\r\\n\\r\\n\\tthis.setValues( parameters );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MeshPhysicalMaterial.prototype = Object.create( THREE.MeshStandardMaterial.prototype );\\r\\nTHREE.MeshPhysicalMaterial.prototype.constructor = THREE.MeshPhysicalMaterial;\\r\\n\\r\\nTHREE.MeshPhysicalMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.MeshStandardMaterial.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.defines = { 'PHYSICAL': '' };\\r\\n\\r\\n\\tthis.reflectivity = source.reflectivity;\\r\\n\\r\\n\\tthis.clearCoat = source.clearCoat;\\r\\n\\tthis.clearCoatRoughness = source.clearCoatRoughness;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/MultiMaterial.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.MultiMaterial = function ( materials ) {\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\tthis.type = 'MultiMaterial';\\r\\n\\r\\n\\tthis.materials = materials instanceof Array ? materials : [];\\r\\n\\r\\n\\tthis.visible = true;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MultiMaterial.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.MultiMaterial,\\r\\n\\r\\n\\ttoJSON: function ( meta ) {\\r\\n\\r\\n\\t\\tvar output = {\\r\\n\\t\\t\\tmetadata: {\\r\\n\\t\\t\\t\\tversion: 4.2,\\r\\n\\t\\t\\t\\ttype: 'material',\\r\\n\\t\\t\\t\\tgenerator: 'MaterialExporter'\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tuuid: this.uuid,\\r\\n\\t\\t\\ttype: this.type,\\r\\n\\t\\t\\tmaterials: []\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tvar materials = this.materials;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar material = materials[ i ].toJSON( meta );\\r\\n\\t\\t\\tdelete material.metadata;\\r\\n\\r\\n\\t\\t\\toutput.materials.push( material );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\toutput.visible = this.visible;\\r\\n\\r\\n\\t\\treturn output;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\tvar material = new this.constructor();\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < this.materials.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tmaterial.materials.push( this.materials[ i ].clone() );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tmaterial.visible = this.visible;\\r\\n\\r\\n\\t\\treturn material;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/PointsMaterial.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n *\\r\\n * parameters = {\\r\\n *  color: <hex>,\\r\\n *  opacity: <float>,\\r\\n *  map: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *  size: <float>,\\r\\n *  sizeAttenuation: <bool>\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.PointsMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.Material.call( this );\\r\\n\\r\\n\\tthis.type = 'PointsMaterial';\\r\\n\\r\\n\\tthis.color = new THREE.Color( 0xffffff );\\r\\n\\r\\n\\tthis.map = null;\\r\\n\\r\\n\\tthis.size = 1;\\r\\n\\tthis.sizeAttenuation = true;\\r\\n\\r\\n\\tthis.lights = false;\\r\\n\\r\\n\\tthis.setValues( parameters );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\\r\\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\\r\\n\\r\\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.Material.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.color.copy( source.color );\\r\\n\\r\\n\\tthis.map = source.map;\\r\\n\\r\\n\\tthis.size = source.size;\\r\\n\\tthis.sizeAttenuation = source.sizeAttenuation;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/ShaderMaterial.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n *\\r\\n * parameters = {\\r\\n *  defines: { \\\"label\\\" : \\\"value\\\" },\\r\\n *  uniforms: { \\\"parameter1\\\": { value: 1.0 }, \\\"parameter2\\\": { value2: 2 } },\\r\\n *\\r\\n *  fragmentShader: <string>,\\r\\n *  vertexShader: <string>,\\r\\n *\\r\\n *  wireframe: <boolean>,\\r\\n *  wireframeLinewidth: <float>,\\r\\n *\\r\\n *  lights: <bool>,\\r\\n *\\r\\n *  skinning: <bool>,\\r\\n *  morphTargets: <bool>,\\r\\n *  morphNormals: <bool>\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.ShaderMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.Material.call( this );\\r\\n\\r\\n\\tthis.type = 'ShaderMaterial';\\r\\n\\r\\n\\tthis.defines = {};\\r\\n\\tthis.uniforms = {};\\r\\n\\r\\n\\tthis.vertexShader = 'void main() {\\\\n\\\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\\n}';\\r\\n\\tthis.fragmentShader = 'void main() {\\\\n\\\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\\\n}';\\r\\n\\r\\n\\tthis.linewidth = 1;\\r\\n\\r\\n\\tthis.wireframe = false;\\r\\n\\tthis.wireframeLinewidth = 1;\\r\\n\\r\\n\\tthis.fog = false; // set to use scene fog\\r\\n\\tthis.lights = false; // set to use scene lights\\r\\n\\tthis.clipping = false; // set to use user-defined clipping planes\\r\\n\\r\\n\\tthis.skinning = false; // set to use skinning attribute streams\\r\\n\\tthis.morphTargets = false; // set to use morph targets\\r\\n\\tthis.morphNormals = false; // set to use morph normals\\r\\n\\r\\n\\tthis.extensions = {\\r\\n\\t\\tderivatives: false, // set to use derivatives\\r\\n\\t\\tfragDepth: false, // set to use fragment depth values\\r\\n\\t\\tdrawBuffers: false, // set to use draw buffers\\r\\n\\t\\tshaderTextureLOD: false // set to use shader texture LOD\\r\\n\\t};\\r\\n\\r\\n\\t// When rendered geometry doesn't include these attributes but the material does,\\r\\n\\t// use these default values in WebGL. This avoids errors when buffer data is missing.\\r\\n\\tthis.defaultAttributeValues = {\\r\\n\\t\\t'color': [ 1, 1, 1 ],\\r\\n\\t\\t'uv': [ 0, 0 ],\\r\\n\\t\\t'uv2': [ 0, 0 ]\\r\\n\\t};\\r\\n\\r\\n\\tthis.index0AttributeName = undefined;\\r\\n\\r\\n\\tif ( parameters !== undefined ) {\\r\\n\\r\\n\\t\\tif ( parameters.attributes !== undefined ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.setValues( parameters );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\\r\\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\\r\\n\\r\\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.Material.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.fragmentShader = source.fragmentShader;\\r\\n\\tthis.vertexShader = source.vertexShader;\\r\\n\\r\\n\\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\\r\\n\\r\\n\\tthis.defines = source.defines;\\r\\n\\r\\n\\tthis.wireframe = source.wireframe;\\r\\n\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\r\\n\\r\\n\\tthis.lights = source.lights;\\r\\n\\tthis.clipping = source.clipping;\\r\\n\\r\\n\\tthis.skinning = source.skinning;\\r\\n\\r\\n\\tthis.morphTargets = source.morphTargets;\\r\\n\\tthis.morphNormals = source.morphNormals;\\r\\n\\r\\n\\tthis.extensions = source.extensions;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\\r\\n\\r\\n\\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\\r\\n\\r\\n\\tdata.uniforms = this.uniforms;\\r\\n\\tdata.vertexShader = this.vertexShader;\\r\\n\\tdata.fragmentShader = this.fragmentShader;\\r\\n\\r\\n\\treturn data;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/RawShaderMaterial.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.RawShaderMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.ShaderMaterial.call( this, parameters );\\r\\n\\r\\n\\tthis.type = 'RawShaderMaterial';\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\\r\\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\\r\\n\\r\\n// File:src/materials/SpriteMaterial.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n *\\r\\n * parameters = {\\r\\n *  color: <hex>,\\r\\n *  opacity: <float>,\\r\\n *  map: new THREE.Texture( <Image> ),\\r\\n *\\r\\n *\\tuvOffset: new THREE.Vector2(),\\r\\n *\\tuvScale: new THREE.Vector2()\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.SpriteMaterial = function ( parameters ) {\\r\\n\\r\\n\\tTHREE.Material.call( this );\\r\\n\\r\\n\\tthis.type = 'SpriteMaterial';\\r\\n\\r\\n\\tthis.color = new THREE.Color( 0xffffff );\\r\\n\\tthis.map = null;\\r\\n\\r\\n\\tthis.rotation = 0;\\r\\n\\r\\n\\tthis.fog = false;\\r\\n\\tthis.lights = false;\\r\\n\\r\\n\\tthis.setValues( parameters );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\\r\\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\\r\\n\\r\\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\\r\\n\\r\\n\\tTHREE.Material.prototype.copy.call( this, source );\\r\\n\\r\\n\\tthis.color.copy( source.color );\\r\\n\\tthis.map = source.map;\\r\\n\\r\\n\\tthis.rotation = source.rotation;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/materials/ShadowMaterial.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.ShadowMaterial = function () {\\r\\n\\r\\n\\tTHREE.ShaderMaterial.call( this, {\\r\\n\\t\\tuniforms: THREE.UniformsUtils.merge( [\\r\\n\\t\\t\\tTHREE.UniformsLib[ \\\"lights\\\" ],\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\topacity: { value: 1.0 }\\r\\n\\t\\t\\t}\\r\\n\\t\\t] ),\\r\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'shadow_vert' ],\\r\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'shadow_frag' ]\\r\\n\\t} );\\r\\n\\r\\n\\tthis.lights = true;\\r\\n\\tthis.transparent = true;\\r\\n\\r\\n\\tObject.defineProperties( this, {\\r\\n\\t\\topacity: {\\r\\n\\t\\t\\tenumerable: true,\\r\\n\\t\\t\\tget: function () {\\r\\n\\t\\t\\t\\treturn this.uniforms.opacity.value;\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tset: function ( value ) {\\r\\n\\t\\t\\t\\tthis.uniforms.opacity.value = value;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ShadowMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\\r\\nTHREE.ShadowMaterial.prototype.constructor = THREE.ShadowMaterial;\\r\\n\\r\\n// File:src/textures/Texture.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author szimek / https://github.com/szimek/\\r\\n */\\r\\n\\r\\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\\r\\n\\r\\n\\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\tthis.name = '';\\r\\n\\tthis.sourceFile = '';\\r\\n\\r\\n\\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\\r\\n\\tthis.mipmaps = [];\\r\\n\\r\\n\\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\\r\\n\\r\\n\\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\\r\\n\\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\\r\\n\\r\\n\\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\\r\\n\\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\\r\\n\\r\\n\\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\\r\\n\\r\\n\\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\\r\\n\\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\\r\\n\\r\\n\\tthis.offset = new THREE.Vector2( 0, 0 );\\r\\n\\tthis.repeat = new THREE.Vector2( 1, 1 );\\r\\n\\r\\n\\tthis.generateMipmaps = true;\\r\\n\\tthis.premultiplyAlpha = false;\\r\\n\\tthis.flipY = true;\\r\\n\\tthis.unpackAlignment = 4;\\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\\r\\n\\r\\n\\r\\n\\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\\r\\n\\t//\\r\\n\\t// Also changing the encoding after already used by a Material will not automatically make the Material\\r\\n\\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\\r\\n\\tthis.encoding = encoding !== undefined ? encoding :  THREE.LinearEncoding;\\r\\n\\r\\n\\tthis.version = 0;\\r\\n\\tthis.onUpdate = null;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Texture.DEFAULT_IMAGE = undefined;\\r\\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\\r\\n\\r\\nTHREE.Texture.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Texture,\\r\\n\\r\\n\\tset needsUpdate( value ) {\\r\\n\\r\\n\\t\\tif ( value === true ) this.version ++;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tthis.image = source.image;\\r\\n\\t\\tthis.mipmaps = source.mipmaps.slice( 0 );\\r\\n\\r\\n\\t\\tthis.mapping = source.mapping;\\r\\n\\r\\n\\t\\tthis.wrapS = source.wrapS;\\r\\n\\t\\tthis.wrapT = source.wrapT;\\r\\n\\r\\n\\t\\tthis.magFilter = source.magFilter;\\r\\n\\t\\tthis.minFilter = source.minFilter;\\r\\n\\r\\n\\t\\tthis.anisotropy = source.anisotropy;\\r\\n\\r\\n\\t\\tthis.format = source.format;\\r\\n\\t\\tthis.type = source.type;\\r\\n\\r\\n\\t\\tthis.offset.copy( source.offset );\\r\\n\\t\\tthis.repeat.copy( source.repeat );\\r\\n\\r\\n\\t\\tthis.generateMipmaps = source.generateMipmaps;\\r\\n\\t\\tthis.premultiplyAlpha = source.premultiplyAlpha;\\r\\n\\t\\tthis.flipY = source.flipY;\\r\\n\\t\\tthis.unpackAlignment = source.unpackAlignment;\\r\\n\\t\\tthis.encoding = source.encoding;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoJSON: function ( meta ) {\\r\\n\\r\\n\\t\\tif ( meta.textures[ this.uuid ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\treturn meta.textures[ this.uuid ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction getDataURL( image ) {\\r\\n\\r\\n\\t\\t\\tvar canvas;\\r\\n\\r\\n\\t\\t\\tif ( image.toDataURL !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tcanvas = image;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\r\\n\\t\\t\\t\\tcanvas.width = image.width;\\r\\n\\t\\t\\t\\tcanvas.height = image.height;\\r\\n\\r\\n\\t\\t\\t\\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\\r\\n\\r\\n\\t\\t\\t\\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\treturn canvas.toDataURL( 'image/png' );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar output = {\\r\\n\\t\\t\\tmetadata: {\\r\\n\\t\\t\\t\\tversion: 4.4,\\r\\n\\t\\t\\t\\ttype: 'Texture',\\r\\n\\t\\t\\t\\tgenerator: 'Texture.toJSON'\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tuuid: this.uuid,\\r\\n\\t\\t\\tname: this.name,\\r\\n\\r\\n\\t\\t\\tmapping: this.mapping,\\r\\n\\r\\n\\t\\t\\trepeat: [ this.repeat.x, this.repeat.y ],\\r\\n\\t\\t\\toffset: [ this.offset.x, this.offset.y ],\\r\\n\\t\\t\\twrap: [ this.wrapS, this.wrapT ],\\r\\n\\r\\n\\t\\t\\tminFilter: this.minFilter,\\r\\n\\t\\t\\tmagFilter: this.magFilter,\\r\\n\\t\\t\\tanisotropy: this.anisotropy\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tif ( this.image !== undefined ) {\\r\\n\\r\\n\\t\\t\\t// TODO: Move to THREE.Image\\r\\n\\r\\n\\t\\t\\tvar image = this.image;\\r\\n\\r\\n\\t\\t\\tif ( image.uuid === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\timage.uuid = THREE.Math.generateUUID(); // UGH\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( meta.images[ image.uuid ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tmeta.images[ image.uuid ] = {\\r\\n\\t\\t\\t\\t\\tuuid: image.uuid,\\r\\n\\t\\t\\t\\t\\turl: getDataURL( image ),\\r\\n\\t\\t\\t\\t//  CUSTOM MODIFY: replace dataURL with image.src. //\\r\\n\\t\\t\\t\\t//\\turl: image.src || getDataURL( image ), // default: dataURL.\\r\\n\\t\\t\\t\\t//\\turl: image.src  // modified // \\r\\n\\t\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\toutput.image = image.uuid;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tmeta.textures[ this.uuid ] = output;\\r\\n\\r\\n\\t\\treturn output;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdispose: function () {\\r\\n\\r\\n\\t\\tthis.dispatchEvent( { type: 'dispose' } );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttransformUv: function ( uv ) {\\r\\n\\r\\n\\t\\tif ( this.mapping !== THREE.UVMapping )  return;\\r\\n\\r\\n\\t\\tuv.multiply( this.repeat );\\r\\n\\t\\tuv.add( this.offset );\\r\\n\\r\\n\\t\\tif ( uv.x < 0 || uv.x > 1 ) {\\r\\n\\r\\n\\t\\t\\tswitch ( this.wrapS ) {\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.RepeatWrapping:\\r\\n\\r\\n\\t\\t\\t\\t\\tuv.x = uv.x - Math.floor( uv.x );\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.ClampToEdgeWrapping:\\r\\n\\r\\n\\t\\t\\t\\t\\tuv.x = uv.x < 0 ? 0 : 1;\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.MirroredRepeatWrapping:\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tuv.x = Math.ceil( uv.x ) - uv.x;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tuv.x = uv.x - Math.floor( uv.x );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( uv.y < 0 || uv.y > 1 ) {\\r\\n\\r\\n\\t\\t\\tswitch ( this.wrapT ) {\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.RepeatWrapping:\\r\\n\\r\\n\\t\\t\\t\\t\\tuv.y = uv.y - Math.floor( uv.y );\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.ClampToEdgeWrapping:\\r\\n\\r\\n\\t\\t\\t\\t\\tuv.y = uv.y < 0 ? 0 : 1;\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.MirroredRepeatWrapping:\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tuv.y = Math.ceil( uv.y ) - uv.y;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tuv.y = uv.y - Math.floor( uv.y );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.flipY ) {\\r\\n\\r\\n\\t\\t\\tuv.y = 1 - uv.y;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.Texture.prototype, THREE.EventDispatcher.prototype );\\r\\n\\r\\nTHREE.TextureIdCount = 0;\\r\\n\\r\\n// File:src/textures/DepthTexture.js\\r\\n\\r\\n/**\\r\\n * @author Matt DesLauriers / @mattdesl\\r\\n */\\r\\n\\r\\nTHREE.DepthTexture = function ( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\\r\\n\\r\\n  THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, THREE.DepthFormat, type, anisotropy );\\r\\n\\r\\n  this.image = { width: width, height: height };\\r\\n\\r\\n  this.type = type !== undefined ? type : THREE.UnsignedShortType;\\r\\n\\r\\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\\r\\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\\r\\n\\r\\n  this.flipY = false;\\r\\n  this.generateMipmaps  = false;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.DepthTexture.prototype = Object.create( THREE.Texture.prototype );\\r\\nTHREE.DepthTexture.prototype.constructor = THREE.DepthTexture;\\r\\n\\r\\n// File:src/textures/CanvasTexture.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\\r\\n\\r\\n\\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\\r\\n\\r\\n\\tthis.needsUpdate = true;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\\r\\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\\r\\n\\r\\n// File:src/textures/CubeTexture.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\\r\\n\\r\\n\\timages = images !== undefined ? images : [];\\r\\n\\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\\r\\n\\r\\n\\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\\r\\n\\r\\n\\tthis.flipY = false;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\\r\\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\\r\\n\\r\\nObject.defineProperty( THREE.CubeTexture.prototype, 'images', {\\r\\n\\r\\n\\tget: function () {\\r\\n\\r\\n\\t\\treturn this.image;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tset: function ( value ) {\\r\\n\\r\\n\\t\\tthis.image = value;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/textures/CompressedTexture.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\\r\\n\\r\\n\\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\\r\\n\\r\\n\\tthis.image = { width: width, height: height };\\r\\n\\tthis.mipmaps = mipmaps;\\r\\n\\r\\n\\t// no flipping for cube textures\\r\\n\\t// (also flipping doesn't work for compressed textures )\\r\\n\\r\\n\\tthis.flipY = false;\\r\\n\\r\\n\\t// can't generate mipmaps for compressed textures\\r\\n\\t// mips must be embedded in DDS files\\r\\n\\r\\n\\tthis.generateMipmaps = false;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\\r\\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\\r\\n\\r\\n// File:src/textures/DataTexture.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\\r\\n\\r\\n\\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\\r\\n\\r\\n\\tthis.image = { data: data, width: width, height: height };\\r\\n\\r\\n\\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\\r\\n\\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\\r\\n\\r\\n\\tthis.flipY = false;\\r\\n\\tthis.generateMipmaps  = false;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\\r\\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\\r\\n\\r\\n// File:src/textures/VideoTexture.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\\r\\n\\r\\n\\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\\r\\n\\r\\n\\tthis.generateMipmaps = false;\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tfunction update() {\\r\\n\\r\\n\\t\\trequestAnimationFrame( update );\\r\\n\\r\\n\\t\\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\\r\\n\\r\\n\\t\\t\\tscope.needsUpdate = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tupdate();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\\r\\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\\r\\n\\r\\n// File:src/objects/Group.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.Group = function () {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'Group';\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Group.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.Group\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/objects/Points.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.Points = function ( geometry, material ) {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'Points';\\r\\n\\r\\n\\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\\r\\n\\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Points.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.Points,\\r\\n\\r\\n\\traycast: ( function () {\\r\\n\\r\\n\\t\\tvar inverseMatrix = new THREE.Matrix4();\\r\\n\\t\\tvar ray = new THREE.Ray();\\r\\n\\t\\tvar sphere = new THREE.Sphere();\\r\\n\\r\\n\\t\\treturn function raycast( raycaster, intersects ) {\\r\\n\\r\\n\\t\\t\\tvar object = this;\\r\\n\\t\\t\\tvar geometry = this.geometry;\\r\\n\\t\\t\\tvar matrixWorld = this.matrixWorld;\\r\\n\\t\\t\\tvar threshold = raycaster.params.Points.threshold;\\r\\n\\r\\n\\t\\t\\t// Checking boundingSphere distance to ray\\r\\n\\r\\n\\t\\t\\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\\r\\n\\r\\n\\t\\t\\tsphere.copy( geometry.boundingSphere );\\r\\n\\t\\t\\tsphere.applyMatrix4( matrixWorld );\\r\\n\\r\\n\\t\\t\\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\\r\\n\\r\\n\\t\\t\\t//\\r\\n\\r\\n\\t\\t\\tinverseMatrix.getInverse( matrixWorld );\\r\\n\\t\\t\\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\\r\\n\\r\\n\\t\\t\\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\\r\\n\\t\\t\\tvar localThresholdSq = localThreshold * localThreshold;\\r\\n\\t\\t\\tvar position = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\tfunction testPoint( point, index ) {\\r\\n\\r\\n\\t\\t\\t\\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\\r\\n\\r\\n\\t\\t\\t\\tif ( rayPointDistanceSq < localThresholdSq ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar intersectPoint = ray.closestPointToPoint( point );\\r\\n\\t\\t\\t\\t\\tintersectPoint.applyMatrix4( matrixWorld );\\r\\n\\r\\n\\t\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) return;\\r\\n\\r\\n\\t\\t\\t\\t\\tintersects.push( {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tdistance: distance,\\r\\n\\t\\t\\t\\t\\t\\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\\r\\n\\t\\t\\t\\t\\t\\tpoint: intersectPoint.clone(),\\r\\n\\t\\t\\t\\t\\t\\tindex: index,\\r\\n\\t\\t\\t\\t\\t\\tface: null,\\r\\n\\t\\t\\t\\t\\t\\tobject: object\\r\\n\\r\\n\\t\\t\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( geometry instanceof THREE.BufferGeometry ) {\\r\\n\\r\\n\\t\\t\\t\\tvar index = geometry.index;\\r\\n\\t\\t\\t\\tvar attributes = geometry.attributes;\\r\\n\\t\\t\\t\\tvar positions = attributes.position.array;\\r\\n\\r\\n\\t\\t\\t\\tif ( index !== null ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar indices = index.array;\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar a = indices[ i ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tposition.fromArray( positions, a * 3 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ttestPoint( position, a );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tposition.fromArray( positions, i * 3 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ttestPoint( position, i );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tvar vertices = geometry.vertices;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttestPoint( vertices[ i ], i );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}() ),\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor( this.geometry, this.material ).copy( this );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/objects/Line.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.Line = function ( geometry, material, mode ) {\\r\\n\\r\\n\\tif ( mode === 1 ) {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\\r\\n\\t\\treturn new THREE.LineSegments( geometry, material );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'Line';\\r\\n\\r\\n\\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\\r\\n\\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Line.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.Line,\\r\\n\\r\\n\\traycast: ( function () {\\r\\n\\r\\n\\t\\tvar inverseMatrix = new THREE.Matrix4();\\r\\n\\t\\tvar ray = new THREE.Ray();\\r\\n\\t\\tvar sphere = new THREE.Sphere();\\r\\n\\r\\n\\t\\treturn function raycast( raycaster, intersects ) {\\r\\n\\r\\n\\t\\t\\tvar precision = raycaster.linePrecision;\\r\\n\\t\\t\\tvar precisionSq = precision * precision;\\r\\n\\r\\n\\t\\t\\tvar geometry = this.geometry;\\r\\n\\t\\t\\tvar matrixWorld = this.matrixWorld;\\r\\n\\r\\n\\t\\t\\t// Checking boundingSphere distance to ray\\r\\n\\r\\n\\t\\t\\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\\r\\n\\r\\n\\t\\t\\tsphere.copy( geometry.boundingSphere );\\r\\n\\t\\t\\tsphere.applyMatrix4( matrixWorld );\\r\\n\\r\\n\\t\\t\\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\\r\\n\\r\\n\\t\\t\\t//\\r\\n\\r\\n\\t\\t\\tinverseMatrix.getInverse( matrixWorld );\\r\\n\\t\\t\\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\\r\\n\\r\\n\\t\\t\\tvar vStart = new THREE.Vector3();\\r\\n\\t\\t\\tvar vEnd = new THREE.Vector3();\\r\\n\\t\\t\\tvar interSegment = new THREE.Vector3();\\r\\n\\t\\t\\tvar interRay = new THREE.Vector3();\\r\\n\\t\\t\\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\\r\\n\\r\\n\\t\\t\\tif ( geometry instanceof THREE.BufferGeometry ) {\\r\\n\\r\\n\\t\\t\\t\\tvar index = geometry.index;\\r\\n\\t\\t\\t\\tvar attributes = geometry.attributes;\\r\\n\\t\\t\\t\\tvar positions = attributes.position.array;\\r\\n\\r\\n\\t\\t\\t\\tif ( index !== null ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar indices = index.array;\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar a = indices[ i ];\\r\\n\\t\\t\\t\\t\\t\\tvar b = indices[ i + 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvStart.fromArray( positions, a * 3 );\\r\\n\\t\\t\\t\\t\\t\\tvEnd.fromArray( positions, b * 3 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( distSq > precisionSq ) continue;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( interRay );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tintersects.push( {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tdistance: distance,\\r\\n\\t\\t\\t\\t\\t\\t\\t// What do we want? intersection point on the ray or on the segment??\\r\\n\\t\\t\\t\\t\\t\\t\\t// point: raycaster.ray.at( distance ),\\r\\n\\t\\t\\t\\t\\t\\t\\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\\r\\n\\t\\t\\t\\t\\t\\t\\tindex: i,\\r\\n\\t\\t\\t\\t\\t\\t\\tface: null,\\r\\n\\t\\t\\t\\t\\t\\t\\tfaceIndex: null,\\r\\n\\t\\t\\t\\t\\t\\t\\tobject: this\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvStart.fromArray( positions, 3 * i );\\r\\n\\t\\t\\t\\t\\t\\tvEnd.fromArray( positions, 3 * i + 3 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( distSq > precisionSq ) continue;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( interRay );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tintersects.push( {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tdistance: distance,\\r\\n\\t\\t\\t\\t\\t\\t\\t// What do we want? intersection point on the ray or on the segment??\\r\\n\\t\\t\\t\\t\\t\\t\\t// point: raycaster.ray.at( distance ),\\r\\n\\t\\t\\t\\t\\t\\t\\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\\r\\n\\t\\t\\t\\t\\t\\t\\tindex: i,\\r\\n\\t\\t\\t\\t\\t\\t\\tface: null,\\r\\n\\t\\t\\t\\t\\t\\t\\tfaceIndex: null,\\r\\n\\t\\t\\t\\t\\t\\t\\tobject: this\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else if ( geometry instanceof THREE.Geometry ) {\\r\\n\\r\\n\\t\\t\\t\\tvar vertices = geometry.vertices;\\r\\n\\t\\t\\t\\tvar nbVertices = vertices.length;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( distSq > precisionSq ) continue;\\r\\n\\r\\n\\t\\t\\t\\t\\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\\r\\n\\r\\n\\t\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( interRay );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\\r\\n\\r\\n\\t\\t\\t\\t\\tintersects.push( {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tdistance: distance,\\r\\n\\t\\t\\t\\t\\t\\t// What do we want? intersection point on the ray or on the segment??\\r\\n\\t\\t\\t\\t\\t\\t// point: raycaster.ray.at( distance ),\\r\\n\\t\\t\\t\\t\\t\\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\\r\\n\\t\\t\\t\\t\\t\\tindex: i,\\r\\n\\t\\t\\t\\t\\t\\tface: null,\\r\\n\\t\\t\\t\\t\\t\\tfaceIndex: null,\\r\\n\\t\\t\\t\\t\\t\\tobject: this\\r\\n\\r\\n\\t\\t\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}() ),\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor( this.geometry, this.material ).copy( this );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/objects/LineSegments.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.LineSegments = function ( geometry, material ) {\\r\\n\\r\\n\\tTHREE.Line.call( this, geometry, material );\\r\\n\\r\\n\\tthis.type = 'LineSegments';\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.LineSegments.prototype = Object.assign( Object.create( THREE.Line.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.LineSegments\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/objects/Mesh.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author jonobr1 / http://jonobr1.com/\\r\\n */\\r\\n\\r\\nTHREE.Mesh = function ( geometry, material ) {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'Mesh';\\r\\n\\r\\n\\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\\r\\n\\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\\r\\n\\r\\n\\tthis.drawMode = THREE.TrianglesDrawMode;\\r\\n\\r\\n\\tthis.updateMorphTargets();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Mesh.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.Mesh,\\r\\n\\r\\n\\tsetDrawMode: function ( value ) {\\r\\n\\r\\n\\t\\tthis.drawMode = value;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tTHREE.Object3D.prototype.copy.call( this, source );\\r\\n\\r\\n\\t\\tthis.drawMode = source.drawMode;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdateMorphTargets: function () {\\r\\n\\r\\n\\t\\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\\r\\n\\r\\n\\t\\t\\tthis.morphTargetBase = - 1;\\r\\n\\t\\t\\tthis.morphTargetInfluences = [];\\r\\n\\t\\t\\tthis.morphTargetDictionary = {};\\r\\n\\r\\n\\t\\t\\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.morphTargetInfluences.push( 0 );\\r\\n\\t\\t\\t\\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetMorphTargetIndexByName: function ( name ) {\\r\\n\\r\\n\\t\\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\treturn this.morphTargetDictionary[ name ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\\r\\n\\r\\n\\t\\treturn 0;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\traycast: ( function () {\\r\\n\\r\\n\\t\\tvar inverseMatrix = new THREE.Matrix4();\\r\\n\\t\\tvar ray = new THREE.Ray();\\r\\n\\t\\tvar sphere = new THREE.Sphere();\\r\\n\\r\\n\\t\\tvar vA = new THREE.Vector3();\\r\\n\\t\\tvar vB = new THREE.Vector3();\\r\\n\\t\\tvar vC = new THREE.Vector3();\\r\\n\\r\\n\\t\\tvar tempA = new THREE.Vector3();\\r\\n\\t\\tvar tempB = new THREE.Vector3();\\r\\n\\t\\tvar tempC = new THREE.Vector3();\\r\\n\\r\\n\\t\\tvar uvA = new THREE.Vector2();\\r\\n\\t\\tvar uvB = new THREE.Vector2();\\r\\n\\t\\tvar uvC = new THREE.Vector2();\\r\\n\\r\\n\\t\\tvar barycoord = new THREE.Vector3();\\r\\n\\r\\n\\t\\tvar intersectionPoint = new THREE.Vector3();\\r\\n\\t\\tvar intersectionPointWorld = new THREE.Vector3();\\r\\n\\r\\n\\t\\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\\r\\n\\r\\n\\t\\t\\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\\r\\n\\r\\n\\t\\t\\tuv1.multiplyScalar( barycoord.x );\\r\\n\\t\\t\\tuv2.multiplyScalar( barycoord.y );\\r\\n\\t\\t\\tuv3.multiplyScalar( barycoord.z );\\r\\n\\r\\n\\t\\t\\tuv1.add( uv2 ).add( uv3 );\\r\\n\\r\\n\\t\\t\\treturn uv1.clone();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\\r\\n\\r\\n\\t\\t\\tvar intersect;\\r\\n\\t\\t\\tvar material = object.material;\\r\\n\\r\\n\\t\\t\\tif ( material.side === THREE.BackSide ) {\\r\\n\\r\\n\\t\\t\\t\\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== THREE.DoubleSide, point );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( intersect === null ) return null;\\r\\n\\r\\n\\t\\t\\tintersectionPointWorld.copy( point );\\r\\n\\t\\t\\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\\r\\n\\r\\n\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\\r\\n\\r\\n\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\\r\\n\\r\\n\\t\\t\\treturn {\\r\\n\\t\\t\\t\\tdistance: distance,\\r\\n\\t\\t\\t\\tpoint: intersectionPointWorld.clone(),\\r\\n\\t\\t\\t\\tobject: object\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\\r\\n\\r\\n\\t\\t\\tvA.fromArray( positions, a * 3 );\\r\\n\\t\\t\\tvB.fromArray( positions, b * 3 );\\r\\n\\t\\t\\tvC.fromArray( positions, c * 3 );\\r\\n\\r\\n\\t\\t\\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\\r\\n\\r\\n\\t\\t\\tif ( intersection ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( uvs ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tuvA.fromArray( uvs, a * 2 );\\r\\n\\t\\t\\t\\t\\tuvB.fromArray( uvs, b * 2 );\\r\\n\\t\\t\\t\\t\\tuvC.fromArray( uvs, c * 2 );\\r\\n\\r\\n\\t\\t\\t\\t\\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tintersection.face = new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) );\\r\\n\\t\\t\\t\\tintersection.faceIndex = a;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn intersection;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn function raycast( raycaster, intersects ) {\\r\\n\\r\\n\\t\\t\\tvar geometry = this.geometry;\\r\\n\\t\\t\\tvar material = this.material;\\r\\n\\t\\t\\tvar matrixWorld = this.matrixWorld;\\r\\n\\r\\n\\t\\t\\tif ( material === undefined ) return;\\r\\n\\r\\n\\t\\t\\t// Checking boundingSphere distance to ray\\r\\n\\r\\n\\t\\t\\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\\r\\n\\r\\n\\t\\t\\tsphere.copy( geometry.boundingSphere );\\r\\n\\t\\t\\tsphere.applyMatrix4( matrixWorld );\\r\\n\\r\\n\\t\\t\\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\\r\\n\\r\\n\\t\\t\\t//\\r\\n\\r\\n\\t\\t\\tinverseMatrix.getInverse( matrixWorld );\\r\\n\\t\\t\\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\\r\\n\\r\\n\\t\\t\\t// Check boundingBox before continuing\\r\\n\\r\\n\\t\\t\\tif ( geometry.boundingBox !== null ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar uvs, intersection;\\r\\n\\r\\n\\t\\t\\tif ( geometry instanceof THREE.BufferGeometry ) {\\r\\n\\r\\n\\t\\t\\t\\tvar a, b, c;\\r\\n\\t\\t\\t\\tvar index = geometry.index;\\r\\n\\t\\t\\t\\tvar attributes = geometry.attributes;\\r\\n\\t\\t\\t\\tvar positions = attributes.position.array;\\r\\n\\r\\n\\t\\t\\t\\tif ( attributes.uv !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tuvs = attributes.uv.array;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( index !== null ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar indices = index.array;\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ta = indices[ i ];\\r\\n\\t\\t\\t\\t\\t\\tb = indices[ i + 1 ];\\r\\n\\t\\t\\t\\t\\t\\tc = indices[ i + 2 ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( intersection ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\\r\\n\\t\\t\\t\\t\\t\\t\\tintersects.push( intersection );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ta = i / 3;\\r\\n\\t\\t\\t\\t\\t\\tb = a + 1;\\r\\n\\t\\t\\t\\t\\t\\tc = a + 2;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( intersection ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tintersection.index = a; // triangle number in positions buffer semantics\\r\\n\\t\\t\\t\\t\\t\\t\\tintersects.push( intersection );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else if ( geometry instanceof THREE.Geometry ) {\\r\\n\\r\\n\\t\\t\\t\\tvar fvA, fvB, fvC;\\r\\n\\t\\t\\t\\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\\r\\n\\t\\t\\t\\tvar materials = isFaceMaterial === true ? material.materials : null;\\r\\n\\r\\n\\t\\t\\t\\tvar vertices = geometry.vertices;\\r\\n\\t\\t\\t\\tvar faces = geometry.faces;\\r\\n\\t\\t\\t\\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\\r\\n\\t\\t\\t\\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar face = faces[ f ];\\r\\n\\t\\t\\t\\t\\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( faceMaterial === undefined ) continue;\\r\\n\\r\\n\\t\\t\\t\\t\\tfvA = vertices[ face.a ];\\r\\n\\t\\t\\t\\t\\tfvB = vertices[ face.b ];\\r\\n\\t\\t\\t\\t\\tfvC = vertices[ face.c ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( faceMaterial.morphTargets === true ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar morphTargets = geometry.morphTargets;\\r\\n\\t\\t\\t\\t\\t\\tvar morphInfluences = this.morphTargetInfluences;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvA.set( 0, 0, 0 );\\r\\n\\t\\t\\t\\t\\t\\tvB.set( 0, 0, 0 );\\r\\n\\t\\t\\t\\t\\t\\tvC.set( 0, 0, 0 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvar influence = morphInfluences[ t ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( influence === 0 ) continue;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvar targets = morphTargets[ t ].vertices;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\\r\\n\\t\\t\\t\\t\\t\\t\\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\\r\\n\\t\\t\\t\\t\\t\\t\\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvA.add( fvA );\\r\\n\\t\\t\\t\\t\\t\\tvB.add( fvB );\\r\\n\\t\\t\\t\\t\\t\\tvC.add( fvC );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfvA = vA;\\r\\n\\t\\t\\t\\t\\t\\tfvB = vB;\\r\\n\\t\\t\\t\\t\\t\\tfvC = vC;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( intersection ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( uvs ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvar uvs_f = uvs[ f ];\\r\\n\\t\\t\\t\\t\\t\\t\\tuvA.copy( uvs_f[ 0 ] );\\r\\n\\t\\t\\t\\t\\t\\t\\tuvB.copy( uvs_f[ 1 ] );\\r\\n\\t\\t\\t\\t\\t\\t\\tuvC.copy( uvs_f[ 2 ] );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tintersection.face = face;\\r\\n\\t\\t\\t\\t\\t\\tintersection.faceIndex = f;\\r\\n\\t\\t\\t\\t\\t\\tintersects.push( intersection );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}() ),\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor( this.geometry, this.material ).copy( this );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/objects/Bone.js\\r\\n\\r\\n/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author ikerr / http://verold.com\\r\\n */\\r\\n\\r\\nTHREE.Bone = function ( skin ) {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'Bone';\\r\\n\\r\\n\\tthis.skin = skin;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Bone.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.Bone,\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tTHREE.Object3D.prototype.copy.call( this, source );\\r\\n\\r\\n\\t\\tthis.skin = source.skin;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/objects/Skeleton.js\\r\\n\\r\\n/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author michael guerrero / http://realitymeltdown.com\\r\\n * @author ikerr / http://verold.com\\r\\n */\\r\\n\\r\\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\\r\\n\\r\\n\\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\\r\\n\\r\\n\\tthis.identityMatrix = new THREE.Matrix4();\\r\\n\\r\\n\\t// copy the bone array\\r\\n\\r\\n\\tbones = bones || [];\\r\\n\\r\\n\\tthis.bones = bones.slice( 0 );\\r\\n\\r\\n\\t// create a bone texture or an array of floats\\r\\n\\r\\n\\tif ( this.useVertexTexture ) {\\r\\n\\r\\n\\t\\t// layout (1 matrix = 4 pixels)\\r\\n\\t\\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\\r\\n\\t\\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\\r\\n\\t\\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\\r\\n\\t\\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\\r\\n\\t\\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\\r\\n\\r\\n\\r\\n\\t\\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\\r\\n\\t\\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\\r\\n\\t\\tsize = Math.max( size, 4 );\\r\\n\\r\\n\\t\\tthis.boneTextureWidth = size;\\r\\n\\t\\tthis.boneTextureHeight = size;\\r\\n\\r\\n\\t\\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\\r\\n\\t\\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\\r\\n\\r\\n\\t} else {\\r\\n\\r\\n\\t\\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// use the supplied bone inverses or calculate the inverses\\r\\n\\r\\n\\tif ( boneInverses === undefined ) {\\r\\n\\r\\n\\t\\tthis.calculateInverses();\\r\\n\\r\\n\\t} else {\\r\\n\\r\\n\\t\\tif ( this.bones.length === boneInverses.length ) {\\r\\n\\r\\n\\t\\t\\tthis.boneInverses = boneInverses.slice( 0 );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\\r\\n\\r\\n\\t\\t\\tthis.boneInverses = [];\\r\\n\\r\\n\\t\\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.boneInverses.push( new THREE.Matrix4() );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.Skeleton.prototype, {\\r\\n\\r\\n\\tcalculateInverses: function () {\\r\\n\\r\\n\\t\\tthis.boneInverses = [];\\r\\n\\r\\n\\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\r\\n\\r\\n\\t\\t\\tvar inverse = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\tif ( this.bones[ b ] ) {\\r\\n\\r\\n\\t\\t\\t\\tinverse.getInverse( this.bones[ b ].matrixWorld );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.boneInverses.push( inverse );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tpose: function () {\\r\\n\\r\\n\\t\\tvar bone;\\r\\n\\r\\n\\t\\t// recover the bind-time world matrices\\r\\n\\r\\n\\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\r\\n\\r\\n\\t\\t\\tbone = this.bones[ b ];\\r\\n\\r\\n\\t\\t\\tif ( bone ) {\\r\\n\\r\\n\\t\\t\\t\\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// compute the local matrices, positions, rotations and scales\\r\\n\\r\\n\\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\r\\n\\r\\n\\t\\t\\tbone = this.bones[ b ];\\r\\n\\r\\n\\t\\t\\tif ( bone ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( bone.parent instanceof THREE.Bone ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tbone.matrix.getInverse( bone.parent.matrixWorld );\\r\\n\\t\\t\\t\\t\\tbone.matrix.multiply( bone.matrixWorld );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tbone.matrix.copy( bone.matrixWorld );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdate: ( function () {\\r\\n\\r\\n\\t\\tvar offsetMatrix = new THREE.Matrix4();\\r\\n\\r\\n\\t\\treturn function update() {\\r\\n\\r\\n\\t\\t\\t// flatten bone matrices to array\\r\\n\\r\\n\\t\\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t// compute the offset between the current and the original transform\\r\\n\\r\\n\\t\\t\\t\\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\\r\\n\\r\\n\\t\\t\\t\\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\\r\\n\\t\\t\\t\\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( this.useVertexTexture ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.boneTexture.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )(),\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/objects/SkinnedMesh.js\\r\\n\\r\\n/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author ikerr / http://verold.com\\r\\n */\\r\\n\\r\\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\\r\\n\\r\\n\\tTHREE.Mesh.call( this, geometry, material );\\r\\n\\r\\n\\tthis.type = 'SkinnedMesh';\\r\\n\\r\\n\\tthis.bindMode = \\\"attached\\\";\\r\\n\\tthis.bindMatrix = new THREE.Matrix4();\\r\\n\\tthis.bindMatrixInverse = new THREE.Matrix4();\\r\\n\\r\\n\\t// init bones\\r\\n\\r\\n\\t// TODO: remove bone creation as there is no reason (other than\\r\\n\\t// convenience) for THREE.SkinnedMesh to do this.\\r\\n\\r\\n\\tvar bones = [];\\r\\n\\r\\n\\tif ( this.geometry && this.geometry.bones !== undefined ) {\\r\\n\\r\\n\\t\\tvar bone, gbone;\\r\\n\\r\\n\\t\\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\\r\\n\\r\\n\\t\\t\\tgbone = this.geometry.bones[ b ];\\r\\n\\r\\n\\t\\t\\tbone = new THREE.Bone( this );\\r\\n\\t\\t\\tbones.push( bone );\\r\\n\\r\\n\\t\\t\\tbone.name = gbone.name;\\r\\n\\t\\t\\tbone.position.fromArray( gbone.pos );\\r\\n\\t\\t\\tbone.quaternion.fromArray( gbone.rotq );\\r\\n\\t\\t\\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\\r\\n\\r\\n\\t\\t\\tgbone = this.geometry.bones[ b ];\\r\\n\\r\\n\\t\\t\\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\\r\\n\\t\\t\\t\\t\\tbones[ gbone.parent ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tbones[ gbone.parent ].add( bones[ b ] );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tthis.add( bones[ b ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.normalizeSkinWeights();\\r\\n\\r\\n\\tthis.updateMatrixWorld( true );\\r\\n\\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\nTHREE.SkinnedMesh.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.SkinnedMesh,\\r\\n\\r\\n\\tbind: function( skeleton, bindMatrix ) {\\r\\n\\r\\n\\t\\tthis.skeleton = skeleton;\\r\\n\\r\\n\\t\\tif ( bindMatrix === undefined ) {\\r\\n\\r\\n\\t\\t\\tthis.updateMatrixWorld( true );\\r\\n\\r\\n\\t\\t\\tthis.skeleton.calculateInverses();\\r\\n\\r\\n\\t\\t\\tbindMatrix = this.matrixWorld;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.bindMatrix.copy( bindMatrix );\\r\\n\\t\\tthis.bindMatrixInverse.getInverse( bindMatrix );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tpose: function () {\\r\\n\\r\\n\\t\\tthis.skeleton.pose();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnormalizeSkinWeights: function () {\\r\\n\\r\\n\\t\\tif ( this.geometry instanceof THREE.Geometry ) {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar sw = this.geometry.skinWeights[ i ];\\r\\n\\r\\n\\t\\t\\t\\tvar scale = 1.0 / sw.lengthManhattan();\\r\\n\\r\\n\\t\\t\\t\\tif ( scale !== Infinity ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tsw.multiplyScalar( scale );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tsw.set( 1, 0, 0, 0 ); // do something reasonable\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else if ( this.geometry instanceof THREE.BufferGeometry ) {\\r\\n\\r\\n\\t\\t\\tvar vec = new THREE.Vector4();\\r\\n\\r\\n\\t\\t\\tvar skinWeight = this.geometry.attributes.skinWeight;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvec.x = skinWeight.getX( i );\\r\\n\\t\\t\\t\\tvec.y = skinWeight.getY( i );\\r\\n\\t\\t\\t\\tvec.z = skinWeight.getZ( i );\\r\\n\\t\\t\\t\\tvec.w = skinWeight.getW( i );\\r\\n\\r\\n\\t\\t\\t\\tvar scale = 1.0 / vec.lengthManhattan();\\r\\n\\r\\n\\t\\t\\t\\tif ( scale !== Infinity ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvec.multiplyScalar( scale );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tvec.set( 1, 0, 0, 0 ); // do something reasonable\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdateMatrixWorld: function( force ) {\\r\\n\\r\\n\\t\\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\\r\\n\\r\\n\\t\\tif ( this.bindMode === \\\"attached\\\" ) {\\r\\n\\r\\n\\t\\t\\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\\r\\n\\r\\n\\t\\t} else if ( this.bindMode === \\\"detached\\\" ) {\\r\\n\\r\\n\\t\\t\\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function() {\\r\\n\\r\\n\\t\\treturn new this.constructor( this.geometry, this.material, this.skeleton.useVertexTexture ).copy( this );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/objects/LOD.js\\r\\n\\r\\n/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.LOD = function () {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'LOD';\\r\\n\\r\\n\\tObject.defineProperties( this, {\\r\\n\\t\\tlevels: {\\r\\n\\t\\t\\tenumerable: true,\\r\\n\\t\\t\\tvalue: []\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\nTHREE.LOD.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.LOD,\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tTHREE.Object3D.prototype.copy.call( this, source, false );\\r\\n\\r\\n\\t\\tvar levels = source.levels;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar level = levels[ i ];\\r\\n\\r\\n\\t\\t\\tthis.addLevel( level.object.clone(), level.distance );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taddLevel: function ( object, distance ) {\\r\\n\\r\\n\\t\\tif ( distance === undefined ) distance = 0;\\r\\n\\r\\n\\t\\tdistance = Math.abs( distance );\\r\\n\\r\\n\\t\\tvar levels = this.levels;\\r\\n\\r\\n\\t\\tfor ( var l = 0; l < levels.length; l ++ ) {\\r\\n\\r\\n\\t\\t\\tif ( distance < levels[ l ].distance ) {\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tlevels.splice( l, 0, { distance: distance, object: object } );\\r\\n\\r\\n\\t\\tthis.add( object );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetObjectForDistance: function ( distance ) {\\r\\n\\r\\n\\t\\tvar levels = this.levels;\\r\\n\\r\\n\\t\\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tif ( distance < levels[ i ].distance ) {\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn levels[ i - 1 ].object;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\traycast: ( function () {\\r\\n\\r\\n\\t\\tvar matrixPosition = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function raycast( raycaster, intersects ) {\\r\\n\\r\\n\\t\\t\\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\\r\\n\\r\\n\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\\r\\n\\r\\n\\t\\t\\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}() ),\\r\\n\\r\\n\\tupdate: function () {\\r\\n\\r\\n\\t\\tvar v1 = new THREE.Vector3();\\r\\n\\t\\tvar v2 = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function update( camera ) {\\r\\n\\r\\n\\t\\t\\tvar levels = this.levels;\\r\\n\\r\\n\\t\\t\\tif ( levels.length > 1 ) {\\r\\n\\r\\n\\t\\t\\t\\tv1.setFromMatrixPosition( camera.matrixWorld );\\r\\n\\t\\t\\t\\tv2.setFromMatrixPosition( this.matrixWorld );\\r\\n\\r\\n\\t\\t\\t\\tvar distance = v1.distanceTo( v2 );\\r\\n\\r\\n\\t\\t\\t\\tlevels[ 0 ].object.visible = true;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( distance >= levels[ i ].distance ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tlevels[ i - 1 ].object.visible = false;\\r\\n\\t\\t\\t\\t\\t\\tlevels[ i ].object.visible = true;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tfor ( ; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tlevels[ i ].object.visible = false;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}(),\\r\\n\\r\\n\\ttoJSON: function ( meta ) {\\r\\n\\r\\n\\t\\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\\r\\n\\r\\n\\t\\tdata.object.levels = [];\\r\\n\\r\\n\\t\\tvar levels = this.levels;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar level = levels[ i ];\\r\\n\\r\\n\\t\\t\\tdata.object.levels.push( {\\r\\n\\t\\t\\t\\tobject: level.object.uuid,\\r\\n\\t\\t\\t\\tdistance: level.distance\\r\\n\\t\\t\\t} );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn data;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/objects/Sprite.js\\r\\n\\r\\n/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.Sprite = function ( material ) {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'Sprite';\\r\\n\\r\\n\\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Sprite.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.Sprite,\\r\\n\\r\\n\\traycast: ( function () {\\r\\n\\r\\n\\t\\tvar matrixPosition = new THREE.Vector3();\\r\\n\\r\\n\\t\\treturn function raycast( raycaster, intersects ) {\\r\\n\\r\\n\\t\\t\\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\\r\\n\\r\\n\\t\\t\\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\\r\\n\\t\\t\\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\\r\\n\\r\\n\\t\\t\\tif ( distanceSq > guessSizeSq ) {\\r\\n\\r\\n\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tintersects.push( {\\r\\n\\r\\n\\t\\t\\t\\tdistance: Math.sqrt( distanceSq ),\\r\\n\\t\\t\\t\\tpoint: this.position,\\r\\n\\t\\t\\t\\tface: null,\\r\\n\\t\\t\\t\\tobject: this\\r\\n\\r\\n\\t\\t\\t} );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}() ),\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor( this.material ).copy( this );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/objects/LensFlare.js\\r\\n\\r\\n/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.lensFlares = [];\\r\\n\\r\\n\\tthis.positionScreen = new THREE.Vector3();\\r\\n\\tthis.customUpdateCallback = undefined;\\r\\n\\r\\n\\tif ( texture !== undefined ) {\\r\\n\\r\\n\\t\\tthis.add( texture, size, distance, blending, color );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.LensFlare.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.LensFlare,\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tTHREE.Object3D.prototype.copy.call( this, source );\\r\\n\\r\\n\\t\\tthis.positionScreen.copy( source.positionScreen );\\r\\n\\t\\tthis.customUpdateCallback = source.customUpdateCallback;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.lensFlares.push( source.lensFlares[ i ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tadd: function ( texture, size, distance, blending, color, opacity ) {\\r\\n\\r\\n\\t\\tif ( size === undefined ) size = - 1;\\r\\n\\t\\tif ( distance === undefined ) distance = 0;\\r\\n\\t\\tif ( opacity === undefined ) opacity = 1;\\r\\n\\t\\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\\r\\n\\t\\tif ( blending === undefined ) blending = THREE.NormalBlending;\\r\\n\\r\\n\\t\\tdistance = Math.min( distance, Math.max( 0, distance ) );\\r\\n\\r\\n\\t\\tthis.lensFlares.push( {\\r\\n\\t\\t\\ttexture: texture,\\t// THREE.Texture\\r\\n\\t\\t\\tsize: size, \\t\\t// size in pixels (-1 = use texture.width)\\r\\n\\t\\t\\tdistance: distance, \\t// distance (0-1) from light source (0=at light source)\\r\\n\\t\\t\\tx: 0, y: 0, z: 0,\\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\\r\\n\\t\\t\\tscale: 1, \\t\\t// scale\\r\\n\\t\\t\\trotation: 0, \\t\\t// rotation\\r\\n\\t\\t\\topacity: opacity,\\t// opacity\\r\\n\\t\\t\\tcolor: color,\\t\\t// color\\r\\n\\t\\t\\tblending: blending\\t// blending\\r\\n\\t\\t} );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t/*\\r\\n\\t * Update lens flares update positions on all flares based on the screen position\\r\\n\\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\\r\\n\\t */\\r\\n\\r\\n\\tupdateLensFlares: function () {\\r\\n\\r\\n\\t\\tvar f, fl = this.lensFlares.length;\\r\\n\\t\\tvar flare;\\r\\n\\t\\tvar vecX = - this.positionScreen.x * 2;\\r\\n\\t\\tvar vecY = - this.positionScreen.y * 2;\\r\\n\\r\\n\\t\\tfor ( f = 0; f < fl; f ++ ) {\\r\\n\\r\\n\\t\\t\\tflare = this.lensFlares[ f ];\\r\\n\\r\\n\\t\\t\\tflare.x = this.positionScreen.x + vecX * flare.distance;\\r\\n\\t\\t\\tflare.y = this.positionScreen.y + vecY * flare.distance;\\r\\n\\r\\n\\t\\t\\tflare.wantedRotation = flare.x * Math.PI * 0.25;\\r\\n\\t\\t\\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/scenes/Scene.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.Scene = function () {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.type = 'Scene';\\r\\n\\r\\n\\tthis.background = null;\\r\\n\\tthis.fog = null;\\r\\n\\tthis.overrideMaterial = null;\\r\\n\\r\\n\\tthis.autoUpdate = true; // checked by the renderer\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\\r\\nTHREE.Scene.prototype.constructor = THREE.Scene;\\r\\n\\r\\nTHREE.Scene.prototype.copy = function ( source, recursive ) {\\r\\n\\r\\n\\tTHREE.Object3D.prototype.copy.call( this, source, recursive );\\r\\n\\r\\n\\tif ( source.background !== null ) this.background = source.background.clone();\\r\\n\\tif ( source.fog !== null ) this.fog = source.fog.clone();\\r\\n\\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\\r\\n\\r\\n\\tthis.autoUpdate = source.autoUpdate;\\r\\n\\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/scenes/Fog.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.Fog = function ( color, near, far ) {\\r\\n\\r\\n\\tthis.name = '';\\r\\n\\r\\n\\tthis.color = new THREE.Color( color );\\r\\n\\r\\n\\tthis.near = ( near !== undefined ) ? near : 1;\\r\\n\\tthis.far = ( far !== undefined ) ? far : 1000;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Fog.prototype.clone = function () {\\r\\n\\r\\n\\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/scenes/FogExp2.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.FogExp2 = function ( color, density ) {\\r\\n\\r\\n\\tthis.name = '';\\r\\n\\r\\n\\tthis.color = new THREE.Color( color );\\r\\n\\tthis.density = ( density !== undefined ) ? density : 0.00025;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.FogExp2.prototype.clone = function () {\\r\\n\\r\\n\\treturn new THREE.FogExp2( this.color.getHex(), this.density );\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk.js\\r\\n\\r\\nTHREE.ShaderChunk = {};\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'alphamap_fragment' ] = \\\"#ifdef USE_ALPHAMAP\\\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'alphamap_pars_fragment' ] = \\\"#ifdef USE_ALPHAMAP\\\\n\\tuniform sampler2D alphaMap;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'alphatest_fragment' ] = \\\"#ifdef ALPHATEST\\\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'aomap_fragment' ] = \\\"#ifdef USE_AOMAP\\\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'aomap_pars_fragment' ] = \\\"#ifdef USE_AOMAP\\\\n\\tuniform sampler2D aoMap;\\\\n\\tuniform float aoMapIntensity;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'begin_vertex' ] = \\\"\\\\nvec3 transformed = vec3( position );\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'beginnormal_vertex' ] = \\\"\\\\nvec3 objectNormal = vec3( normal );\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/bsdfs.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'bsdfs' ] = \\\"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\\\n\\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\\\n}\\\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\\\n\\t\\tif( decayExponent > 0.0 ) {\\\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\\\n#else\\\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\\\n#endif\\\\n\\t\\t}\\\\n\\t\\treturn 1.0;\\\\n}\\\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\\\n\\treturn RECIPROCAL_PI * diffuseColor;\\\\n}\\\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\\\n}\\\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\\\n\\tfloat a2 = pow2( alpha );\\\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\\\n\\treturn 1.0 / ( gl * gv );\\\\n}\\\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\\\n\\tfloat a2 = pow2( alpha );\\\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\\\n}\\\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\\\n\\tfloat a2 = pow2( alpha );\\\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\\\n}\\\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\\\n\\tfloat alpha = pow2( roughness );\\\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\\\n\\tfloat D = D_GGX( alpha, dotNH );\\\\n\\treturn F * ( G * D );\\\\n}\\\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\\\n\\tvec4 r = roughness * c0 + c1;\\\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\\\n\\treturn specularColor * AB.x + AB.y;\\\\n}\\\\nfloat G_BlinnPhong_Implicit( ) {\\\\n\\treturn 0.25;\\\\n}\\\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\\\n}\\\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\\\n\\tfloat G = G_BlinnPhong_Implicit( );\\\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\\\n\\treturn F * ( G * D );\\\\n}\\\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\\\n}\\\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment' ] = \\\"#ifdef USE_BUMPMAP\\\\n\\tuniform sampler2D bumpMap;\\\\n\\tuniform float bumpScale;\\\\n\\tvec2 dHdxy_fwd() {\\\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\\\n\\t\\treturn vec2( dBx, dBy );\\\\n\\t}\\\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\\\n\\t\\tvec3 vN = surf_norm;\\\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\\\n\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'clipping_planes_fragment' ] = \\\"#if NUM_CLIPPING_PLANES > 0\\\\n\\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\\\n\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'clipping_planes_pars_fragment' ] = \\\"#if NUM_CLIPPING_PLANES > 0\\\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\\\n\\t\\tvarying vec3 vViewPosition;\\\\n\\t#endif\\\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'clipping_planes_pars_vertex' ] = \\\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\\\n\\tvarying vec3 vViewPosition;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'clipping_planes_vertex' ] = \\\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\\\n\\tvViewPosition = - mvPosition.xyz;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'color_fragment' ] = \\\"#ifdef USE_COLOR\\\\n\\tdiffuseColor.rgb *= vColor;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'color_pars_fragment' ] = \\\"#ifdef USE_COLOR\\\\n\\tvarying vec3 vColor;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'color_pars_vertex' ] = \\\"#ifdef USE_COLOR\\\\n\\tvarying vec3 vColor;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'color_vertex' ] = \\\"#ifdef USE_COLOR\\\\n\\tvColor.xyz = color.xyz;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/common.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'common' ] = \\\"#define PI 3.14159265359\\\\n#define PI2 6.28318530718\\\\n#define RECIPROCAL_PI 0.31830988618\\\\n#define RECIPROCAL_PI2 0.15915494\\\\n#define LOG2 1.442695\\\\n#define EPSILON 1e-6\\\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\\\nfloat pow2( const in float x ) { return x*x; }\\\\nfloat pow3( const in float x ) { return x*x*x; }\\\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\\\nhighp float rand( const in vec2 uv ) {\\\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\\\n\\treturn fract(sin(sn) * c);\\\\n}\\\\nstruct IncidentLight {\\\\n\\tvec3 color;\\\\n\\tvec3 direction;\\\\n\\tbool visible;\\\\n};\\\\nstruct ReflectedLight {\\\\n\\tvec3 directDiffuse;\\\\n\\tvec3 directSpecular;\\\\n\\tvec3 indirectDiffuse;\\\\n\\tvec3 indirectSpecular;\\\\n};\\\\nstruct GeometricContext {\\\\n\\tvec3 position;\\\\n\\tvec3 normal;\\\\n\\tvec3 viewDir;\\\\n};\\\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\\\n}\\\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\\\n}\\\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\\\n\\treturn - distance * planeNormal + point;\\\\n}\\\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\\\n}\\\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'cube_uv_reflection_fragment' ] = \\\"#ifdef ENVMAP_TYPE_CUBE_UV\\\\n#define cubeUV_textureSize (1024.0)\\\\nint getFaceFromDirection(vec3 direction) {\\\\n\\tvec3 absDirection = abs(direction);\\\\n\\tint face = -1;\\\\n\\tif( absDirection.x > absDirection.z ) {\\\\n\\t\\tif(absDirection.x > absDirection.y )\\\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\\\n\\t\\telse\\\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\\\n\\t}\\\\n\\telse {\\\\n\\t\\tif(absDirection.z > absDirection.y )\\\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\\\n\\t\\telse\\\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\\\n\\t}\\\\n\\treturn face;\\\\n}\\\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\\\n\\tfloat dxRoughness = dFdx(roughness);\\\\n\\tfloat dyRoughness = dFdy(roughness);\\\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\\\n\\tfloat mipLevel = 0.5 * log2(d);\\\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\\\n}\\\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\\\n\\tbool bRes = mipLevel == 0.0;\\\\n\\tscale =  bRes && (scale < a) ? a : scale;\\\\n\\tvec3 r;\\\\n\\tvec2 offset;\\\\n\\tint face = getFaceFromDirection(direction);\\\\n\\tfloat rcpPowScale = 1.0 / powScale;\\\\n\\tif( face == 0) {\\\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\\\n\\t}\\\\n\\telse if( face == 1) {\\\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\\\n\\t}\\\\n\\telse if( face == 2) {\\\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\\\n\\t}\\\\n\\telse if( face == 3) {\\\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\\\n\\t}\\\\n\\telse if( face == 4) {\\\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\\\n\\t}\\\\n\\telse {\\\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\\\n\\t}\\\\n\\tr = normalize(r);\\\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\\\n\\tvec2 base = offset + vec2( texelOffset );\\\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\\\n}\\\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\\\n\\tfloat r1 = floor(roughnessVal);\\\\n\\tfloat r2 = r1 + 1.0;\\\\n\\tfloat t = fract(roughnessVal);\\\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\\\n\\tfloat s = mipInfo.y;\\\\n\\tfloat level0 = mipInfo.x;\\\\n\\tfloat level1 = level0 + 1.0;\\\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\\\n\\tvec4 result = mix(color10, color20, t);\\\\n\\treturn vec4(result.rgb, 1.0);\\\\n}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'defaultnormal_vertex' ] = \\\"#ifdef FLIP_SIDED\\\\n\\tobjectNormal = -objectNormal;\\\\n#endif\\\\nvec3 transformedNormal = normalMatrix * objectNormal;\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'displacementmap_vertex' ] = \\\"#ifdef USE_DISPLACEMENTMAP\\\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex' ] = \\\"#ifdef USE_DISPLACEMENTMAP\\\\n\\tuniform sampler2D displacementMap;\\\\n\\tuniform float displacementScale;\\\\n\\tuniform float displacementBias;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'emissivemap_fragment' ] = \\\"#ifdef USE_EMISSIVEMAP\\\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment' ] = \\\"#ifdef USE_EMISSIVEMAP\\\\n\\tuniform sampler2D emissiveMap;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'encodings_pars_fragment' ] = \\\"\\\\nvec4 LinearToLinear( in vec4 value ) {\\\\n  return value;\\\\n}\\\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\\\n}\\\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\\\n}\\\\nvec4 sRGBToLinear( in vec4 value ) {\\\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\\\n}\\\\nvec4 LinearTosRGB( in vec4 value ) {\\\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\\\n}\\\\nvec4 RGBEToLinear( in vec4 value ) {\\\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\\\n}\\\\nvec4 LinearToRGBE( in vec4 value ) {\\\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\\\n}\\\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\\\n}\\\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\\\n  M            = ceil( M * 255.0 ) / 255.0;\\\\n  return vec4( value.rgb / ( M * maxRange ), M );\\\\n}\\\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\\\n}\\\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\\\n    float D      = max( maxRange / maxRGB, 1.0 );\\\\n    D            = min( floor( D ) / 255.0, 1.0 );\\\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\\\n}\\\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\\\nvec4 LinearToLogLuv( in vec4 value )  {\\\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\\\n  vec4 vResult;\\\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\\\n  vResult.w = fract(Le);\\\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\\\n  return vResult;\\\\n}\\\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\\\nvec4 LogLuvToLinear( in vec4 value ) {\\\\n  float Le = value.z * 255.0 + value.w;\\\\n  vec3 Xp_Y_XYZp;\\\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\\\n  return vec4( max(vRGB, 0.0), 1.0 );\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'encodings_fragment' ] = \\\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'envmap_fragment' ] = \\\"#ifdef USE_ENVMAP\\\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\\\n\\t\\t#else\\\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\\\n\\t\\t#endif\\\\n\\t#else\\\\n\\t\\tvec3 reflectVec = vReflect;\\\\n\\t#endif\\\\n\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\\\n\\t\\tvec2 sampleUV;\\\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\\\n\\t#endif\\\\n\\tenvColor = envMapTexelToLinear( envColor );\\\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'envmap_pars_fragment' ] = \\\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\\\n\\tuniform float reflectivity;\\\\n\\tuniform float envMapIntenstiy;\\\\n#endif\\\\n#ifdef USE_ENVMAP\\\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\\\n\\t\\tvarying vec3 vWorldPosition;\\\\n\\t#endif\\\\n\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\t\\tuniform samplerCube envMap;\\\\n\\t#else\\\\n\\t\\tuniform sampler2D envMap;\\\\n\\t#endif\\\\n\\tuniform float flipEnvMap;\\\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\\\n\\t\\tuniform float refractionRatio;\\\\n\\t#else\\\\n\\t\\tvarying vec3 vReflect;\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'envmap_pars_vertex' ] = \\\"#ifdef USE_ENVMAP\\\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\\\n\\t\\tvarying vec3 vWorldPosition;\\\\n\\t#else\\\\n\\t\\tvarying vec3 vReflect;\\\\n\\t\\tuniform float refractionRatio;\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'envmap_vertex' ] = \\\"#ifdef USE_ENVMAP\\\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\\\n\\t\\tvWorldPosition = worldPosition.xyz;\\\\n\\t#else\\\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\\\n\\t\\t#else\\\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\\\n\\t\\t#endif\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'fog_fragment' ] = \\\"#ifdef USE_FOG\\\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\\\n\\t#else\\\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\\\n\\t#endif\\\\n\\t#ifdef FOG_EXP2\\\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\\\n\\t#else\\\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\\\n\\t#endif\\\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'fog_pars_fragment' ] = \\\"#ifdef USE_FOG\\\\n\\tuniform vec3 fogColor;\\\\n\\t#ifdef FOG_EXP2\\\\n\\t\\tuniform float fogDensity;\\\\n\\t#else\\\\n\\t\\tuniform float fogNear;\\\\n\\t\\tuniform float fogFar;\\\\n\\t#endif\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'lightmap_fragment' ] = \\\"#ifdef USE_LIGHTMAP\\\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'lightmap_pars_fragment' ] = \\\"#ifdef USE_LIGHTMAP\\\\n\\tuniform sampler2D lightMap;\\\\n\\tuniform float lightMapIntensity;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'lights_lambert_vertex' ] = \\\"vec3 diffuse = vec3( 1.0 );\\\\nGeometricContext geometry;\\\\ngeometry.position = mvPosition.xyz;\\\\ngeometry.normal = normalize( transformedNormal );\\\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\\\nGeometricContext backGeometry;\\\\nbackGeometry.position = geometry.position;\\\\nbackGeometry.normal = -geometry.normal;\\\\nbackGeometry.viewDir = geometry.viewDir;\\\\nvLightFront = vec3( 0.0 );\\\\n#ifdef DOUBLE_SIDED\\\\n\\tvLightBack = vec3( 0.0 );\\\\n#endif\\\\nIncidentLight directLight;\\\\nfloat dotNL;\\\\nvec3 directLightColor_Diffuse;\\\\n#if NUM_POINT_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\\\n\\t\\t#ifdef DOUBLE_SIDED\\\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\\\n\\t\\t#endif\\\\n\\t}\\\\n#endif\\\\n#if NUM_SPOT_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\\\n\\t\\t#ifdef DOUBLE_SIDED\\\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\\\n\\t\\t#endif\\\\n\\t}\\\\n#endif\\\\n#if NUM_DIR_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\\\n\\t\\t#ifdef DOUBLE_SIDED\\\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\\\n\\t\\t#endif\\\\n\\t}\\\\n#endif\\\\n#if NUM_HEMI_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\\\n\\t\\t#ifdef DOUBLE_SIDED\\\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\\\n\\t\\t#endif\\\\n\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/lights_pars.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'lights_pars' ] = \\\"uniform vec3 ambientLightColor;\\\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\\\n\\tvec3 irradiance = ambientLightColor;\\\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\t\\tirradiance *= PI;\\\\n\\t#endif\\\\n\\treturn irradiance;\\\\n}\\\\n#if NUM_DIR_LIGHTS > 0\\\\n\\tstruct DirectionalLight {\\\\n\\t\\tvec3 direction;\\\\n\\t\\tvec3 color;\\\\n\\t\\tint shadow;\\\\n\\t\\tfloat shadowBias;\\\\n\\t\\tfloat shadowRadius;\\\\n\\t\\tvec2 shadowMapSize;\\\\n\\t};\\\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\\\n\\t\\tdirectLight.color = directionalLight.color;\\\\n\\t\\tdirectLight.direction = directionalLight.direction;\\\\n\\t\\tdirectLight.visible = true;\\\\n\\t}\\\\n#endif\\\\n#if NUM_POINT_LIGHTS > 0\\\\n\\tstruct PointLight {\\\\n\\t\\tvec3 position;\\\\n\\t\\tvec3 color;\\\\n\\t\\tfloat distance;\\\\n\\t\\tfloat decay;\\\\n\\t\\tint shadow;\\\\n\\t\\tfloat shadowBias;\\\\n\\t\\tfloat shadowRadius;\\\\n\\t\\tvec2 shadowMapSize;\\\\n\\t};\\\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\\\n\\t\\tdirectLight.direction = normalize( lVector );\\\\n\\t\\tfloat lightDistance = length( lVector );\\\\n\\t\\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\\\n\\t\\t\\tdirectLight.color = pointLight.color;\\\\n\\t\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\\\n\\t\\t\\tdirectLight.visible = true;\\\\n\\t\\t} else {\\\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\\\n\\t\\t\\tdirectLight.visible = false;\\\\n\\t\\t}\\\\n\\t}\\\\n#endif\\\\n#if NUM_SPOT_LIGHTS > 0\\\\n\\tstruct SpotLight {\\\\n\\t\\tvec3 position;\\\\n\\t\\tvec3 direction;\\\\n\\t\\tvec3 color;\\\\n\\t\\tfloat distance;\\\\n\\t\\tfloat decay;\\\\n\\t\\tfloat coneCos;\\\\n\\t\\tfloat penumbraCos;\\\\n\\t\\tint shadow;\\\\n\\t\\tfloat shadowBias;\\\\n\\t\\tfloat shadowRadius;\\\\n\\t\\tvec2 shadowMapSize;\\\\n\\t};\\\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\\\n\\t\\tdirectLight.direction = normalize( lVector );\\\\n\\t\\tfloat lightDistance = length( lVector );\\\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\\\n\\t\\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\\\n\\t\\t\\tdirectLight.color = spotLight.color;\\\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\\\n\\t\\t\\tdirectLight.visible = true;\\\\n\\t\\t} else {\\\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\\\n\\t\\t\\tdirectLight.visible = false;\\\\n\\t\\t}\\\\n\\t}\\\\n#endif\\\\n#if NUM_HEMI_LIGHTS > 0\\\\n\\tstruct HemisphereLight {\\\\n\\t\\tvec3 direction;\\\\n\\t\\tvec3 skyColor;\\\\n\\t\\tvec3 groundColor;\\\\n\\t};\\\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\t\\t\\tirradiance *= PI;\\\\n\\t\\t#endif\\\\n\\t\\treturn irradiance;\\\\n\\t}\\\\n#endif\\\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\\\n\\t\\t#include <normal_flip>\\\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\\\n\\t\\t\\t#else\\\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\\\n\\t\\t\\t#endif\\\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\\\n\\t\\t#else\\\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\\\n\\t\\t#endif\\\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\\\n\\t}\\\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\\\n\\t}\\\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\\\n\\t\\t#else\\\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\\\n\\t\\t#endif\\\\n\\t\\t#include <normal_flip>\\\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\\\n\\t\\t\\t#else\\\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\\\n\\t\\t\\t#endif\\\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\\\n\\t\\t\\tvec2 sampleUV;\\\\n\\t\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\\\n\\t\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\\\n\\t\\t\\t#else\\\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\\\n\\t\\t\\t#endif\\\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\\\n\\t\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\\\n\\t\\t\\t#else\\\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\\\n\\t\\t\\t#endif\\\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\t\\t#endif\\\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\\\n\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'lights_phong_fragment' ] = \\\"BlinnPhongMaterial material;\\\\nmaterial.diffuseColor = diffuseColor.rgb;\\\\nmaterial.specularColor = specular;\\\\nmaterial.specularShininess = shininess;\\\\nmaterial.specularStrength = specularStrength;\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment' ] = \\\"varying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\tvarying vec3 vNormal;\\\\n#endif\\\\nstruct BlinnPhongMaterial {\\\\n\\tvec3\\tdiffuseColor;\\\\n\\tvec3\\tspecularColor;\\\\n\\tfloat\\tspecularShininess;\\\\n\\tfloat\\tspecularStrength;\\\\n};\\\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\\\n\\tvec3 irradiance = dotNL * directLight.color;\\\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\t\\tirradiance *= PI;\\\\n\\t#endif\\\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\\\n}\\\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n}\\\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\\\n#define Material_LightProbeLOD( material )\\t(0)\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'lights_physical_fragment' ] = \\\"PhysicalMaterial material;\\\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\\\n#ifdef STANDARD\\\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\\\n#else\\\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'lights_physical_pars_fragment' ] = \\\"struct PhysicalMaterial {\\\\n\\tvec3\\tdiffuseColor;\\\\n\\tfloat\\tspecularRoughness;\\\\n\\tvec3\\tspecularColor;\\\\n\\t#ifndef STANDARD\\\\n\\t\\tfloat clearCoat;\\\\n\\t\\tfloat clearCoatRoughness;\\\\n\\t#endif\\\\n};\\\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\\\n\\tvec3 irradiance = dotNL * directLight.color;\\\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\t\\tirradiance *= PI;\\\\n\\t#endif\\\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n\\t#ifndef STANDARD\\\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\\\n\\t#endif\\\\n}\\\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n}\\\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\\\n\\t#ifndef STANDARD\\\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\\\n\\t#endif\\\\n}\\\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/lights_template.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'lights_template' ] = \\\"\\\\nGeometricContext geometry;\\\\ngeometry.position = - vViewPosition;\\\\ngeometry.normal = normal;\\\\ngeometry.viewDir = normalize( vViewPosition );\\\\nIncidentLight directLight;\\\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\\\n\\tPointLight pointLight;\\\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\t\\tpointLight = pointLights[ i ];\\\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\\\n\\t\\t#ifdef USE_SHADOWMAP\\\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\\\n\\t\\t#endif\\\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\\\n\\t}\\\\n#endif\\\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\\\n\\tSpotLight spotLight;\\\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\t\\tspotLight = spotLights[ i ];\\\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\\\n\\t\\t#ifdef USE_SHADOWMAP\\\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\\\n\\t\\t#endif\\\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\\\n\\t}\\\\n#endif\\\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\\\n\\tDirectionalLight directionalLight;\\\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\t\\tdirectionalLight = directionalLights[ i ];\\\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\\\n\\t\\t#ifdef USE_SHADOWMAP\\\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\\\n\\t\\t#endif\\\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\\\n\\t}\\\\n#endif\\\\n#if defined( RE_IndirectDiffuse )\\\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\\\n\\t#ifdef USE_LIGHTMAP\\\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\t\\t\\tlightMapIrradiance *= PI;\\\\n\\t\\t#endif\\\\n\\t\\tirradiance += lightMapIrradiance;\\\\n\\t#endif\\\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\\\n\\t\\t}\\\\n\\t#endif\\\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\\\n\\t \\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\\\n\\t#endif\\\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\\\n#endif\\\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\\\n\\t#ifndef STANDARD\\\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\\\n\\t#else\\\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\\\n\\t#endif\\\\n\\t\\t\\\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'logdepthbuf_fragment' ] = \\\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment' ] = \\\"#ifdef USE_LOGDEPTHBUF\\\\n\\tuniform float logDepthBufFC;\\\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\t\\tvarying float vFragDepth;\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex' ] = \\\"#ifdef USE_LOGDEPTHBUF\\\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\t\\tvarying float vFragDepth;\\\\n\\t#endif\\\\n\\tuniform float logDepthBufFC;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'logdepthbuf_vertex' ] = \\\"#ifdef USE_LOGDEPTHBUF\\\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\\\n\\t#else\\\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'map_fragment' ] = \\\"#ifdef USE_MAP\\\\n\\tvec4 texelColor = texture2D( map, vUv );\\\\n\\ttexelColor = mapTexelToLinear( texelColor );\\\\n\\tdiffuseColor *= texelColor;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'map_pars_fragment' ] = \\\"#ifdef USE_MAP\\\\n\\tuniform sampler2D map;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'map_particle_fragment' ] = \\\"#ifdef USE_MAP\\\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'map_particle_pars_fragment' ] = \\\"#ifdef USE_MAP\\\\n\\tuniform vec4 offsetRepeat;\\\\n\\tuniform sampler2D map;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'metalnessmap_fragment' ] = \\\"float metalnessFactor = metalness;\\\\n#ifdef USE_METALNESSMAP\\\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\\\n\\tmetalnessFactor *= texelMetalness.r;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'metalnessmap_pars_fragment' ] = \\\"#ifdef USE_METALNESSMAP\\\\n\\tuniform sampler2D metalnessMap;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'morphnormal_vertex' ] = \\\"#ifdef USE_MORPHNORMALS\\\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex' ] = \\\"#ifdef USE_MORPHTARGETS\\\\n\\t#ifndef USE_MORPHNORMALS\\\\n\\tuniform float morphTargetInfluences[ 8 ];\\\\n\\t#else\\\\n\\tuniform float morphTargetInfluences[ 4 ];\\\\n\\t#endif\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'morphtarget_vertex' ] = \\\"#ifdef USE_MORPHTARGETS\\\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\\\n\\t#ifndef USE_MORPHNORMALS\\\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/normal_flip.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'normal_flip' ] = \\\"#ifdef DOUBLE_SIDED\\\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\\\n#else\\\\n\\tfloat flipNormal = 1.0;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'normal_fragment' ] = \\\"#ifdef FLAT_SHADED\\\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\\\n#else\\\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\\\n#endif\\\\n#ifdef USE_NORMALMAP\\\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\\\n#elif defined( USE_BUMPMAP )\\\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'normalmap_pars_fragment' ] = \\\"#ifdef USE_NORMALMAP\\\\n\\tuniform sampler2D normalMap;\\\\n\\tuniform vec2 normalScale;\\\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\\\n\\t\\tvec3 N = normalize( surf_norm );\\\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\\\n\\t\\tmat3 tsn = mat3( S, T, N );\\\\n\\t\\treturn normalize( tsn * mapN );\\\\n\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/packing.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'packing' ] = \\\"vec3 packNormalToRGB( const in vec3 normal ) {\\\\n  return normalize( normal ) * 0.5 + 0.5;\\\\n}\\\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\\\n  return 1.0 - 2.0 * rgb.xyz;\\\\n}\\\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\\\nconst float ShiftRight8 = 1. / 256.;\\\\nvec4 packDepthToRGBA( const in float v ) {\\\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\\\n}\\\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\\\n\\treturn dot( v, UnpackFactors );\\\\n}\\\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\\\n  return ( viewZ + near ) / ( near - far );\\\\n}\\\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\\\n  return linearClipZ * ( near - far ) - near;\\\\n}\\\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\\\n}\\\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'premultiplied_alpha_fragment' ] = \\\"#ifdef PREMULTIPLIED_ALPHA\\\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'project_vertex' ] = \\\"#ifdef USE_SKINNING\\\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\\\n#else\\\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\\\n#endif\\\\ngl_Position = projectionMatrix * mvPosition;\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'roughnessmap_fragment' ] = \\\"float roughnessFactor = roughness;\\\\n#ifdef USE_ROUGHNESSMAP\\\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\\\n\\troughnessFactor *= texelRoughness.r;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'roughnessmap_pars_fragment' ] = \\\"#ifdef USE_ROUGHNESSMAP\\\\n\\tuniform sampler2D roughnessMap;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment' ] = \\\"#ifdef USE_SHADOWMAP\\\\n\\t#if NUM_DIR_LIGHTS > 0\\\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\\\n\\t#endif\\\\n\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\\\n\\t#endif\\\\n\\t#if NUM_POINT_LIGHTS > 0\\\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\\\n\\t#endif\\\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\\\n\\t}\\\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\\\n\\t\\tfloat a = mix( lb, lt, f.y );\\\\n\\t\\tfloat b = mix( rb, rt, f.y );\\\\n\\t\\tfloat c = mix( a, b, f.x );\\\\n\\t\\treturn c;\\\\n\\t}\\\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\\\n\\t\\tshadowCoord.z += shadowBias;\\\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\\\n\\t\\tbool inFrustum = all( inFrustumVec );\\\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\\\n\\t\\tbool frustumTest = all( frustumTestVec );\\\\n\\t\\tif ( frustumTest ) {\\\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\\\n\\t\\t\\treturn (\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\\\n\\t\\t\\treturn (\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\\\n\\t\\t#else\\\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\\\n\\t\\t#endif\\\\n\\t\\t}\\\\n\\t\\treturn 1.0;\\\\n\\t}\\\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\\\n\\t\\tvec3 absV = abs( v );\\\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\\\n\\t\\tabsV *= scaleToCube;\\\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\\\n\\t\\tvec2 planar = v.xy;\\\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\\\n\\t\\tif ( absV.z >= almostOne ) {\\\\n\\t\\t\\tif ( v.z > 0.0 )\\\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\\\n\\t\\t} else if ( absV.x >= almostOne ) {\\\\n\\t\\t\\tfloat signX = sign( v.x );\\\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\\\n\\t\\t} else if ( absV.y >= almostOne ) {\\\\n\\t\\t\\tfloat signY = sign( v.y );\\\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\\\n\\t\\t}\\\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\\\n\\t}\\\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\\\n\\t\\t\\treturn (\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\\\n\\t\\t#else\\\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\\\n\\t\\t#endif\\\\n\\t}\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex' ] = \\\"#ifdef USE_SHADOWMAP\\\\n\\t#if NUM_DIR_LIGHTS > 0\\\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\\\n\\t#endif\\\\n\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\\\n\\t#endif\\\\n\\t#if NUM_POINT_LIGHTS > 0\\\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'shadowmap_vertex' ] = \\\"#ifdef USE_SHADOWMAP\\\\n\\t#if NUM_DIR_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\\\n\\t}\\\\n\\t#endif\\\\n\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\\\n\\t}\\\\n\\t#endif\\\\n\\t#if NUM_POINT_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\\\n\\t}\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'shadowmask_pars_fragment' ] = \\\"float getShadowMask() {\\\\n\\tfloat shadow = 1.0;\\\\n\\t#ifdef USE_SHADOWMAP\\\\n\\t#if NUM_DIR_LIGHTS > 0\\\\n\\tDirectionalLight directionalLight;\\\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\t\\tdirectionalLight = directionalLights[ i ];\\\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\\\n\\t}\\\\n\\t#endif\\\\n\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\tSpotLight spotLight;\\\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\t\\tspotLight = spotLights[ i ];\\\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\\\n\\t}\\\\n\\t#endif\\\\n\\t#if NUM_POINT_LIGHTS > 0\\\\n\\tPointLight pointLight;\\\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\t\\tpointLight = pointLights[ i ];\\\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\\\n\\t}\\\\n\\t#endif\\\\n\\t#endif\\\\n\\treturn shadow;\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'skinbase_vertex' ] = \\\"#ifdef USE_SKINNING\\\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'skinning_pars_vertex' ] = \\\"#ifdef USE_SKINNING\\\\n\\tuniform mat4 bindMatrix;\\\\n\\tuniform mat4 bindMatrixInverse;\\\\n\\t#ifdef BONE_TEXTURE\\\\n\\t\\tuniform sampler2D boneTexture;\\\\n\\t\\tuniform int boneTextureWidth;\\\\n\\t\\tuniform int boneTextureHeight;\\\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\\\n\\t\\t\\tfloat j = i * 4.0;\\\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\\\n\\t\\t\\ty = dy * ( y + 0.5 );\\\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\\\n\\t\\t\\treturn bone;\\\\n\\t\\t}\\\\n\\t#else\\\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\\\n\\t\\t\\treturn bone;\\\\n\\t\\t}\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'skinning_vertex' ] = \\\"#ifdef USE_SKINNING\\\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\\\n\\tvec4 skinned = vec4( 0.0 );\\\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\\\n\\tskinned  = bindMatrixInverse * skinned;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'skinnormal_vertex' ] = \\\"#ifdef USE_SKINNING\\\\n\\tmat4 skinMatrix = mat4( 0.0 );\\\\n\\tskinMatrix += skinWeight.x * boneMatX;\\\\n\\tskinMatrix += skinWeight.y * boneMatY;\\\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\\\n\\tskinMatrix += skinWeight.w * boneMatW;\\\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'specularmap_fragment' ] = \\\"float specularStrength;\\\\n#ifdef USE_SPECULARMAP\\\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\\\n\\tspecularStrength = texelSpecular.r;\\\\n#else\\\\n\\tspecularStrength = 1.0;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'specularmap_pars_fragment' ] = \\\"#ifdef USE_SPECULARMAP\\\\n\\tuniform sampler2D specularMap;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'tonemapping_fragment' ] = \\\"#if defined( TONE_MAPPING )\\\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'tonemapping_pars_fragment' ] = \\\"#define saturate(a) clamp( a, 0.0, 1.0 )\\\\nuniform float toneMappingExposure;\\\\nuniform float toneMappingWhitePoint;\\\\nvec3 LinearToneMapping( vec3 color ) {\\\\n  return toneMappingExposure * color;\\\\n}\\\\nvec3 ReinhardToneMapping( vec3 color ) {\\\\n  color *= toneMappingExposure;\\\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\\\n}\\\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\\\n  color *= toneMappingExposure;\\\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\\\n}\\\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\\\n  color *= toneMappingExposure;\\\\n  color = max( vec3( 0.0 ), color - 0.004 );\\\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'uv2_pars_fragment' ] = \\\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\\\n\\tvarying vec2 vUv2;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'uv2_pars_vertex' ] = \\\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\\\n\\tattribute vec2 uv2;\\\\n\\tvarying vec2 vUv2;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'uv2_vertex' ] = \\\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\\\n\\tvUv2 = uv2;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'uv_pars_fragment' ] = \\\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\\\n\\tvarying vec2 vUv;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'uv_pars_vertex' ] = \\\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\\\n\\tvarying vec2 vUv;\\\\n\\tuniform vec4 offsetRepeat;\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'uv_vertex' ] = \\\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\\\n#endif\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'worldpos_vertex' ] = \\\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\\\n\\t#ifdef USE_SKINNING\\\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\\\n\\t#else\\\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/UniformsUtils.js\\r\\n\\r\\n/**\\r\\n * Uniform Utilities\\r\\n */\\r\\n\\r\\nTHREE.UniformsUtils = {\\r\\n\\r\\n\\tmerge: function ( uniforms ) {\\r\\n\\r\\n\\t\\tvar merged = {};\\r\\n\\r\\n\\t\\tfor ( var u = 0; u < uniforms.length; u ++ ) {\\r\\n\\r\\n\\t\\t\\tvar tmp = this.clone( uniforms[ u ] );\\r\\n\\r\\n\\t\\t\\tfor ( var p in tmp ) {\\r\\n\\r\\n\\t\\t\\t\\tmerged[ p ] = tmp[ p ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn merged;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function ( uniforms_src ) {\\r\\n\\r\\n\\t\\tvar uniforms_dst = {};\\r\\n\\r\\n\\t\\tfor ( var u in uniforms_src ) {\\r\\n\\r\\n\\t\\t\\tuniforms_dst[ u ] = {};\\r\\n\\r\\n\\t\\t\\tfor ( var p in uniforms_src[ u ] ) {\\r\\n\\r\\n\\t\\t\\t\\tvar parameter_src = uniforms_src[ u ][ p ];\\r\\n\\r\\n\\t\\t\\t\\tif ( parameter_src instanceof THREE.Color ||\\r\\n\\t\\t\\t\\t\\t parameter_src instanceof THREE.Vector2 ||\\r\\n\\t\\t\\t\\t\\t parameter_src instanceof THREE.Vector3 ||\\r\\n\\t\\t\\t\\t\\t parameter_src instanceof THREE.Vector4 ||\\r\\n\\t\\t\\t\\t\\t parameter_src instanceof THREE.Matrix3 ||\\r\\n\\t\\t\\t\\t\\t parameter_src instanceof THREE.Matrix4 ||\\r\\n\\t\\t\\t\\t\\t parameter_src instanceof THREE.Texture ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tuniforms_dst[ u ][ p ] = parameter_src.clone();\\r\\n\\r\\n\\t\\t\\t\\t} else if ( Array.isArray( parameter_src ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tuniforms_dst[ u ][ p ] = parameter_src.slice();\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tuniforms_dst[ u ][ p ] = parameter_src;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn uniforms_dst;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/shaders/UniformsLib.js\\r\\n\\r\\n/**\\r\\n * Uniforms library for shared webgl shaders\\r\\n */\\r\\n\\r\\nTHREE.UniformsLib = {\\r\\n\\r\\n\\tcommon: {\\r\\n\\r\\n\\t\\t\\\"diffuse\\\": { value: new THREE.Color( 0xeeeeee ) },\\r\\n\\t\\t\\\"opacity\\\": { value: 1.0 },\\r\\n\\r\\n\\t\\t\\\"map\\\": { value: null },\\r\\n\\t\\t\\\"offsetRepeat\\\": { value: new THREE.Vector4( 0, 0, 1, 1 ) },\\r\\n\\r\\n\\t\\t\\\"specularMap\\\": { value: null },\\r\\n\\t\\t\\\"alphaMap\\\": { value: null },\\r\\n\\r\\n\\t\\t\\\"envMap\\\": { value: null },\\r\\n\\t\\t\\\"flipEnvMap\\\": { value: - 1 },\\r\\n\\t\\t\\\"reflectivity\\\": { value: 1.0 },\\r\\n\\t\\t\\\"refractionRatio\\\": { value: 0.98 }\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\taomap: {\\r\\n\\r\\n\\t\\t\\\"aoMap\\\": { value: null },\\r\\n\\t\\t\\\"aoMapIntensity\\\": { value: 1 }\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlightmap: {\\r\\n\\r\\n\\t\\t\\\"lightMap\\\": { value: null },\\r\\n\\t\\t\\\"lightMapIntensity\\\": { value: 1 }\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\temissivemap: {\\r\\n\\r\\n\\t\\t\\\"emissiveMap\\\": { value: null }\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tbumpmap: {\\r\\n\\r\\n\\t\\t\\\"bumpMap\\\": { value: null },\\r\\n\\t\\t\\\"bumpScale\\\": { value: 1 }\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tnormalmap: {\\r\\n\\r\\n\\t\\t\\\"normalMap\\\": { value: null },\\r\\n\\t\\t\\\"normalScale\\\": { value: new THREE.Vector2( 1, 1 ) }\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdisplacementmap: {\\r\\n\\r\\n\\t\\t\\\"displacementMap\\\": { value: null },\\r\\n\\t\\t\\\"displacementScale\\\": { value: 1 },\\r\\n\\t\\t\\\"displacementBias\\\": { value: 0 }\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\troughnessmap: {\\r\\n\\r\\n\\t\\t\\\"roughnessMap\\\": { value: null }\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmetalnessmap: {\\r\\n\\r\\n\\t\\t\\\"metalnessMap\\\": { value: null }\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfog: {\\r\\n\\r\\n\\t\\t\\\"fogDensity\\\": { value: 0.00025 },\\r\\n\\t\\t\\\"fogNear\\\": { value: 1 },\\r\\n\\t\\t\\\"fogFar\\\": { value: 2000 },\\r\\n\\t\\t\\\"fogColor\\\": { value: new THREE.Color( 0xffffff ) }\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlights: {\\r\\n\\r\\n\\t\\t\\\"ambientLightColor\\\": { value: [] },\\r\\n\\r\\n\\t\\t\\\"directionalLights\\\": { value: [], properties: {\\r\\n\\t\\t\\t\\\"direction\\\": {},\\r\\n\\t\\t\\t\\\"color\\\": {},\\r\\n\\r\\n\\t\\t\\t\\\"shadow\\\": {},\\r\\n\\t\\t\\t\\\"shadowBias\\\": {},\\r\\n\\t\\t\\t\\\"shadowRadius\\\": {},\\r\\n\\t\\t\\t\\\"shadowMapSize\\\": {}\\r\\n\\t\\t} },\\r\\n\\r\\n\\t\\t\\\"directionalShadowMap\\\": { value: [] },\\r\\n\\t\\t\\\"directionalShadowMatrix\\\": { value: [] },\\r\\n\\r\\n\\t\\t\\\"spotLights\\\": { value: [], properties: {\\r\\n\\t\\t\\t\\\"color\\\": {},\\r\\n\\t\\t\\t\\\"position\\\": {},\\r\\n\\t\\t\\t\\\"direction\\\": {},\\r\\n\\t\\t\\t\\\"distance\\\": {},\\r\\n\\t\\t\\t\\\"coneCos\\\": {},\\r\\n\\t\\t\\t\\\"penumbraCos\\\": {},\\r\\n\\t\\t\\t\\\"decay\\\": {},\\r\\n\\r\\n\\t\\t\\t\\\"shadow\\\": {},\\r\\n\\t\\t\\t\\\"shadowBias\\\": {},\\r\\n\\t\\t\\t\\\"shadowRadius\\\": {},\\r\\n\\t\\t\\t\\\"shadowMapSize\\\": {}\\r\\n\\t\\t} },\\r\\n\\r\\n\\t\\t\\\"spotShadowMap\\\": { value: [] },\\r\\n\\t\\t\\\"spotShadowMatrix\\\": { value: [] },\\r\\n\\r\\n\\t\\t\\\"pointLights\\\": { value: [], properties: {\\r\\n\\t\\t\\t\\\"color\\\": {},\\r\\n\\t\\t\\t\\\"position\\\": {},\\r\\n\\t\\t\\t\\\"decay\\\": {},\\r\\n\\t\\t\\t\\\"distance\\\": {},\\r\\n\\r\\n\\t\\t\\t\\\"shadow\\\": {},\\r\\n\\t\\t\\t\\\"shadowBias\\\": {},\\r\\n\\t\\t\\t\\\"shadowRadius\\\": {},\\r\\n\\t\\t\\t\\\"shadowMapSize\\\": {}\\r\\n\\t\\t} },\\r\\n\\r\\n\\t\\t\\\"pointShadowMap\\\": { value: [] },\\r\\n\\t\\t\\\"pointShadowMatrix\\\": { value: [] },\\r\\n\\r\\n\\t\\t\\\"hemisphereLights\\\": { value: [], properties: {\\r\\n\\t\\t\\t\\\"direction\\\": {},\\r\\n\\t\\t\\t\\\"skyColor\\\": {},\\r\\n\\t\\t\\t\\\"groundColor\\\": {}\\r\\n\\t\\t} }\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tpoints: {\\r\\n\\r\\n\\t\\t\\\"diffuse\\\": { value: new THREE.Color( 0xeeeeee ) },\\r\\n\\t\\t\\\"opacity\\\": { value: 1.0 },\\r\\n\\t\\t\\\"size\\\": { value: 1.0 },\\r\\n\\t\\t\\\"scale\\\": { value: 1.0 },\\r\\n\\t\\t\\\"map\\\": { value: null },\\r\\n\\t\\t\\\"offsetRepeat\\\": { value: new THREE.Vector4( 0, 0, 1, 1 ) }\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/cube_frag.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'cube_frag' ] = \\\"uniform samplerCube tCube;\\\\nuniform float tFlip;\\\\nvarying vec3 vWorldPosition;\\\\n#include <common>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\\\n\\t#include <logdepthbuf_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/cube_vert.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'cube_vert' ] = \\\"varying vec3 vWorldPosition;\\\\n#include <common>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\\\n\\t#include <begin_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/depth_frag.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'depth_frag' ] = \\\"#if DEPTH_PACKING == 3200\\\\n\\tuniform float opacity;\\\\n#endif\\\\n#include <common>\\\\n#include <packing>\\\\n#include <uv_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec4 diffuseColor = vec4( 1.0 );\\\\n\\t#if DEPTH_PACKING == 3200\\\\n\\t\\tdiffuseColor.a = opacity;\\\\n\\t#endif\\\\n\\t#include <map_fragment>\\\\n\\t#include <alphamap_fragment>\\\\n\\t#include <alphatest_fragment>\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#if DEPTH_PACKING == 3200\\\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\\\n\\t#elif DEPTH_PACKING == 3201\\\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\\\n\\t#endif\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/depth_vert.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'depth_vert' ] = \\\"#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <uv_vertex>\\\\n\\t#include <skinbase_vertex>\\\\n\\t#include <begin_vertex>\\\\n\\t#include <displacementmap_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <skinning_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'distanceRGBA_frag' ] = \\\"uniform vec3 lightPos;\\\\nvarying vec4 vWorldPosition;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main () {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'distanceRGBA_vert' ] = \\\"varying vec4 vWorldPosition;\\\\n#include <common>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <skinbase_vertex>\\\\n\\t#include <begin_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <skinning_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n\\tvWorldPosition = worldPosition;\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/equirect_frag.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'equirect_frag' ] = \\\"uniform sampler2D tEquirect;\\\\nuniform float tFlip;\\\\nvarying vec3 vWorldPosition;\\\\n#include <common>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec3 direction = normalize( vWorldPosition );\\\\n\\tvec2 sampleUV;\\\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\\\n\\t#include <logdepthbuf_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/equirect_vert.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'equirect_vert' ] = \\\"varying vec3 vWorldPosition;\\\\n#include <common>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\\\n\\t#include <begin_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/linedashed_frag.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'linedashed_frag' ] = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\nuniform float dashSize;\\\\nuniform float totalSize;\\\\nvarying float vLineDistance;\\\\n#include <common>\\\\n#include <color_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\\\n\\t\\tdiscard;\\\\n\\t}\\\\n\\tvec3 outgoingLight = vec3( 0.0 );\\\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#include <color_fragment>\\\\n\\toutgoingLight = diffuseColor.rgb;\\\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\t#include <premultiplied_alpha_fragment>\\\\n\\t#include <tonemapping_fragment>\\\\n\\t#include <encodings_fragment>\\\\n\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/linedashed_vert.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'linedashed_vert' ] = \\\"uniform float scale;\\\\nattribute float lineDistance;\\\\nvarying float vLineDistance;\\\\n#include <common>\\\\n#include <color_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <color_vertex>\\\\n\\tvLineDistance = scale * lineDistance;\\\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\\\n\\tgl_Position = projectionMatrix * mvPosition;\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'meshbasic_frag' ] = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\n#ifndef FLAT_SHADED\\\\n\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#include <map_fragment>\\\\n\\t#include <color_fragment>\\\\n\\t#include <alphamap_fragment>\\\\n\\t#include <alphatest_fragment>\\\\n\\t#include <specularmap_fragment>\\\\n\\tReflectedLight reflectedLight;\\\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\\\n\\t#include <aomap_fragment>\\\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\\\n\\t#include <normal_flip>\\\\n\\t#include <envmap_fragment>\\\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\t#include <premultiplied_alpha_fragment>\\\\n\\t#include <tonemapping_fragment>\\\\n\\t#include <encodings_fragment>\\\\n\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'meshbasic_vert' ] = \\\"#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <envmap_pars_vertex>\\\\n#include <color_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <uv_vertex>\\\\n\\t#include <uv2_vertex>\\\\n\\t#include <color_vertex>\\\\n\\t#include <skinbase_vertex>\\\\n\\t#ifdef USE_ENVMAP\\\\n\\t#include <beginnormal_vertex>\\\\n\\t#include <morphnormal_vertex>\\\\n\\t#include <skinnormal_vertex>\\\\n\\t#include <defaultnormal_vertex>\\\\n\\t#endif\\\\n\\t#include <begin_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <skinning_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n\\t#include <envmap_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/meshlambert_frag.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'meshlambert_frag' ] = \\\"uniform vec3 diffuse;\\\\nuniform vec3 emissive;\\\\nuniform float opacity;\\\\nvarying vec3 vLightFront;\\\\n#ifdef DOUBLE_SIDED\\\\n\\tvarying vec3 vLightBack;\\\\n#endif\\\\n#include <common>\\\\n#include <packing>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <emissivemap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <lights_pars>\\\\n#include <fog_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <shadowmask_pars_fragment>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\tvec3 totalEmissiveRadiance = emissive;\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#include <map_fragment>\\\\n\\t#include <color_fragment>\\\\n\\t#include <alphamap_fragment>\\\\n\\t#include <alphatest_fragment>\\\\n\\t#include <specularmap_fragment>\\\\n\\t#include <emissivemap_fragment>\\\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\\\n\\t#include <lightmap_fragment>\\\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\\\n\\t#ifdef DOUBLE_SIDED\\\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\\\n\\t#else\\\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\\\n\\t#endif\\\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\\\n\\t#include <aomap_fragment>\\\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\\\n\\t#include <normal_flip>\\\\n\\t#include <envmap_fragment>\\\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\t#include <premultiplied_alpha_fragment>\\\\n\\t#include <tonemapping_fragment>\\\\n\\t#include <encodings_fragment>\\\\n\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/meshlambert_vert.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'meshlambert_vert' ] = \\\"#define LAMBERT\\\\nvarying vec3 vLightFront;\\\\n#ifdef DOUBLE_SIDED\\\\n\\tvarying vec3 vLightBack;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <envmap_pars_vertex>\\\\n#include <bsdfs>\\\\n#include <lights_pars>\\\\n#include <color_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <uv_vertex>\\\\n\\t#include <uv2_vertex>\\\\n\\t#include <color_vertex>\\\\n\\t#include <beginnormal_vertex>\\\\n\\t#include <morphnormal_vertex>\\\\n\\t#include <skinbase_vertex>\\\\n\\t#include <skinnormal_vertex>\\\\n\\t#include <defaultnormal_vertex>\\\\n\\t#include <begin_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <skinning_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <envmap_vertex>\\\\n\\t#include <lights_lambert_vertex>\\\\n\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/meshphong_frag.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'meshphong_frag' ] = \\\"#define PHONG\\\\nuniform vec3 diffuse;\\\\nuniform vec3 emissive;\\\\nuniform vec3 specular;\\\\nuniform float shininess;\\\\nuniform float opacity;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <emissivemap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <lights_pars>\\\\n#include <lights_phong_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <bumpmap_pars_fragment>\\\\n#include <normalmap_pars_fragment>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\tvec3 totalEmissiveRadiance = emissive;\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#include <map_fragment>\\\\n\\t#include <color_fragment>\\\\n\\t#include <alphamap_fragment>\\\\n\\t#include <alphatest_fragment>\\\\n\\t#include <specularmap_fragment>\\\\n\\t#include <normal_flip>\\\\n\\t#include <normal_fragment>\\\\n\\t#include <emissivemap_fragment>\\\\n\\t#include <lights_phong_fragment>\\\\n\\t#include <lights_template>\\\\n\\t#include <aomap_fragment>\\\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\\\n\\t#include <envmap_fragment>\\\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\t#include <premultiplied_alpha_fragment>\\\\n\\t#include <tonemapping_fragment>\\\\n\\t#include <encodings_fragment>\\\\n\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/meshphong_vert.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'meshphong_vert' ] = \\\"#define PHONG\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <envmap_pars_vertex>\\\\n#include <color_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <uv_vertex>\\\\n\\t#include <uv2_vertex>\\\\n\\t#include <color_vertex>\\\\n\\t#include <beginnormal_vertex>\\\\n\\t#include <morphnormal_vertex>\\\\n\\t#include <skinbase_vertex>\\\\n\\t#include <skinnormal_vertex>\\\\n\\t#include <defaultnormal_vertex>\\\\n#ifndef FLAT_SHADED\\\\n\\tvNormal = normalize( transformedNormal );\\\\n#endif\\\\n\\t#include <begin_vertex>\\\\n\\t#include <displacementmap_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <skinning_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n\\tvViewPosition = - mvPosition.xyz;\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <envmap_vertex>\\\\n\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/meshphysical_frag.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'meshphysical_frag' ] = \\\"#define PHYSICAL\\\\nuniform vec3 diffuse;\\\\nuniform vec3 emissive;\\\\nuniform float roughness;\\\\nuniform float metalness;\\\\nuniform float opacity;\\\\n#ifndef STANDARD\\\\n\\tuniform float clearCoat;\\\\n\\tuniform float clearCoatRoughness;\\\\n#endif\\\\nuniform float envMapIntensity;\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <packing>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <emissivemap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <cube_uv_reflection_fragment>\\\\n#include <lights_pars>\\\\n#include <lights_physical_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <bumpmap_pars_fragment>\\\\n#include <normalmap_pars_fragment>\\\\n#include <roughnessmap_pars_fragment>\\\\n#include <metalnessmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\tvec3 totalEmissiveRadiance = emissive;\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#include <map_fragment>\\\\n\\t#include <color_fragment>\\\\n\\t#include <alphamap_fragment>\\\\n\\t#include <alphatest_fragment>\\\\n\\t#include <specularmap_fragment>\\\\n\\t#include <roughnessmap_fragment>\\\\n\\t#include <metalnessmap_fragment>\\\\n\\t#include <normal_flip>\\\\n\\t#include <normal_fragment>\\\\n\\t#include <emissivemap_fragment>\\\\n\\t#include <lights_physical_fragment>\\\\n\\t#include <lights_template>\\\\n\\t#include <aomap_fragment>\\\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\t#include <premultiplied_alpha_fragment>\\\\n\\t#include <tonemapping_fragment>\\\\n\\t#include <encodings_fragment>\\\\n\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/meshphysical_vert.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'meshphysical_vert' ] = \\\"#define PHYSICAL\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <color_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <uv_vertex>\\\\n\\t#include <uv2_vertex>\\\\n\\t#include <color_vertex>\\\\n\\t#include <beginnormal_vertex>\\\\n\\t#include <morphnormal_vertex>\\\\n\\t#include <skinbase_vertex>\\\\n\\t#include <skinnormal_vertex>\\\\n\\t#include <defaultnormal_vertex>\\\\n#ifndef FLAT_SHADED\\\\n\\tvNormal = normalize( transformedNormal );\\\\n#endif\\\\n\\t#include <begin_vertex>\\\\n\\t#include <displacementmap_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <skinning_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n\\tvViewPosition = - mvPosition.xyz;\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/normal_frag.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'normal_frag' ] = \\\"uniform float opacity;\\\\nvarying vec3 vNormal;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\\\n\\t#include <logdepthbuf_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/normal_vert.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'normal_vert' ] = \\\"varying vec3 vNormal;\\\\n#include <common>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\tvNormal = normalize( normalMatrix * normal );\\\\n\\t#include <begin_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/points_frag.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'points_frag' ] = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\n#include <common>\\\\n#include <color_pars_fragment>\\\\n#include <map_particle_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec3 outgoingLight = vec3( 0.0 );\\\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#include <map_particle_fragment>\\\\n\\t#include <color_fragment>\\\\n\\t#include <alphatest_fragment>\\\\n\\toutgoingLight = diffuseColor.rgb;\\\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\t#include <premultiplied_alpha_fragment>\\\\n\\t#include <tonemapping_fragment>\\\\n\\t#include <encodings_fragment>\\\\n\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/points_vert.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'points_vert' ] = \\\"uniform float size;\\\\nuniform float scale;\\\\n#include <common>\\\\n#include <color_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <color_vertex>\\\\n\\t#include <begin_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#ifdef USE_SIZEATTENUATION\\\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\\\n\\t#else\\\\n\\t\\tgl_PointSize = size;\\\\n\\t#endif\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/shadow_frag.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'shadow_frag' ] = \\\"uniform float opacity;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <bsdfs>\\\\n#include <lights_pars>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <shadowmask_pars_fragment>\\\\nvoid main() {\\\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib/shadow_vert.glsl\\r\\n\\r\\nTHREE.ShaderChunk[ 'shadow_vert' ] = \\\"#include <shadowmap_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <begin_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\r\\n\\r\\n// File:src/renderers/shaders/ShaderLib.js\\r\\n\\r\\n/**\\r\\n * Webgl Shader Library for three.js\\r\\n *\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n */\\r\\n\\r\\n\\r\\nTHREE.ShaderLib = {\\r\\n\\r\\n\\t'basic': {\\r\\n\\r\\n\\t\\tuniforms: THREE.UniformsUtils.merge( [\\r\\n\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'common' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'aomap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'fog' ]\\r\\n\\r\\n\\t\\t] ),\\r\\n\\r\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'meshbasic_vert' ],\\r\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'meshbasic_frag' ]\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t'lambert': {\\r\\n\\r\\n\\t\\tuniforms: THREE.UniformsUtils.merge( [\\r\\n\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'common' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'aomap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'lightmap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'emissivemap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'fog' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'lights' ],\\r\\n\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\\"emissive\\\" : { value: new THREE.Color( 0x000000 ) }\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t] ),\\r\\n\\r\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'meshlambert_vert' ],\\r\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'meshlambert_frag' ]\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t'phong': {\\r\\n\\r\\n\\t\\tuniforms: THREE.UniformsUtils.merge( [\\r\\n\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'common' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'aomap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'lightmap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'emissivemap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'bumpmap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'normalmap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'displacementmap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'fog' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'lights' ],\\r\\n\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\\"emissive\\\" : { value: new THREE.Color( 0x000000 ) },\\r\\n\\t\\t\\t\\t\\\"specular\\\" : { value: new THREE.Color( 0x111111 ) },\\r\\n\\t\\t\\t\\t\\\"shininess\\\": { value: 30 }\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t] ),\\r\\n\\r\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'meshphong_vert' ],\\r\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'meshphong_frag' ]\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t'standard': {\\r\\n\\r\\n\\t\\tuniforms: THREE.UniformsUtils.merge( [\\r\\n\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'common' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'aomap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'lightmap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'emissivemap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'bumpmap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'normalmap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'displacementmap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'roughnessmap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'metalnessmap' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'fog' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'lights' ],\\r\\n\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\\"emissive\\\" : { value: new THREE.Color( 0x000000 ) },\\r\\n\\t\\t\\t\\t\\\"roughness\\\": { value: 0.5 },\\r\\n\\t\\t\\t\\t\\\"metalness\\\": { value: 0 },\\r\\n\\t\\t\\t\\t\\\"envMapIntensity\\\" : { value: 1 }, // temporary\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t] ),\\r\\n\\r\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\\r\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t'points': {\\r\\n\\r\\n\\t\\tuniforms: THREE.UniformsUtils.merge( [\\r\\n\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'points' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'fog' ]\\r\\n\\r\\n\\t\\t] ),\\r\\n\\r\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'points_vert' ],\\r\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'points_frag' ]\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t'dashed': {\\r\\n\\r\\n\\t\\tuniforms: THREE.UniformsUtils.merge( [\\r\\n\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'common' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'fog' ],\\r\\n\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\\"scale\\\"    : { value: 1 },\\r\\n\\t\\t\\t\\t\\\"dashSize\\\" : { value: 1 },\\r\\n\\t\\t\\t\\t\\\"totalSize\\\": { value: 2 }\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t] ),\\r\\n\\r\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'linedashed_vert' ],\\r\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'linedashed_frag' ]\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t'depth': {\\r\\n\\r\\n\\t\\tuniforms: THREE.UniformsUtils.merge( [\\r\\n\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'common' ],\\r\\n\\t\\t\\tTHREE.UniformsLib[ 'displacementmap' ]\\r\\n\\r\\n\\t\\t] ),\\r\\n\\r\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'depth_vert' ],\\r\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'depth_frag' ]\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t'normal': {\\r\\n\\r\\n\\t\\tuniforms: {\\r\\n\\r\\n\\t\\t\\t\\\"opacity\\\" : { value: 1.0 }\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'normal_vert' ],\\r\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'normal_frag' ]\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t/* -------------------------------------------------------------------------\\r\\n\\t//\\tCube map shader\\r\\n\\t ------------------------------------------------------------------------- */\\r\\n\\r\\n\\t'cube': {\\r\\n\\r\\n\\t\\tuniforms: {\\r\\n\\t\\t\\t\\\"tCube\\\": { value: null },\\r\\n\\t\\t\\t\\\"tFlip\\\": { value: - 1 }\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'cube_vert' ],\\r\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'cube_frag' ]\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t/* -------------------------------------------------------------------------\\r\\n\\t//\\tCube map shader\\r\\n\\t ------------------------------------------------------------------------- */\\r\\n\\r\\n\\t'equirect': {\\r\\n\\r\\n\\t\\tuniforms: {\\r\\n\\t\\t\\t\\\"tEquirect\\\": { value: null },\\r\\n\\t\\t\\t\\\"tFlip\\\": { value: - 1 }\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'equirect_vert' ],\\r\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'equirect_frag' ]\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t'distanceRGBA': {\\r\\n\\r\\n\\t\\tuniforms: {\\r\\n\\r\\n\\t\\t\\t\\\"lightPos\\\": { value: new THREE.Vector3() }\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'distanceRGBA_vert' ],\\r\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'distanceRGBA_frag' ]\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ShaderLib[ 'physical' ] = {\\r\\n\\r\\n\\tuniforms: THREE.UniformsUtils.merge( [\\r\\n\\r\\n\\t\\tTHREE.ShaderLib[ 'standard' ].uniforms,\\r\\n\\r\\n\\t\\t{\\r\\n\\t\\t\\t\\\"clearCoat\\\": { value: 0 },\\r\\n\\t\\t\\t\\\"clearCoatRoughness\\\": { value: 0 }\\r\\n\\t\\t}\\r\\n\\r\\n\\t] ),\\r\\n\\r\\n\\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\\r\\n\\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/WebGLRenderer.js\\r\\n\\r\\n/**\\r\\n * @author supereggbert / http://www.paulbrunt.co.uk/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author szimek / https://github.com/szimek/\\r\\n * @author tschw\\r\\n */\\r\\n\\r\\nTHREE.WebGLRenderer = function ( parameters ) {\\r\\n\\r\\n\\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\\r\\n\\r\\n\\tparameters = parameters || {};\\r\\n\\r\\n\\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\\r\\n\\t_context = parameters.context !== undefined ? parameters.context : null,\\r\\n\\r\\n\\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\\r\\n\\t_depth = parameters.depth !== undefined ? parameters.depth : true,\\r\\n\\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\\r\\n\\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\\r\\n\\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\\r\\n\\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\\r\\n\\r\\n\\tvar lights = [];\\r\\n\\r\\n\\tvar opaqueObjects = [];\\r\\n\\tvar opaqueObjectsLastIndex = - 1;\\r\\n\\tvar transparentObjects = [];\\r\\n\\tvar transparentObjectsLastIndex = - 1;\\r\\n\\r\\n\\tvar morphInfluences = new Float32Array( 8 );\\r\\n\\r\\n\\tvar sprites = [];\\r\\n\\tvar lensFlares = [];\\r\\n\\r\\n\\t// public properties\\r\\n\\r\\n\\tthis.domElement = _canvas;\\r\\n\\tthis.context = null;\\r\\n\\r\\n\\t// clearing\\r\\n\\r\\n\\tthis.autoClear = true;\\r\\n\\tthis.autoClearColor = true;\\r\\n\\tthis.autoClearDepth = true;\\r\\n\\tthis.autoClearStencil = true;\\r\\n\\r\\n\\t// scene graph\\r\\n\\r\\n\\tthis.sortObjects = true;\\r\\n\\r\\n\\t// user-defined clipping\\r\\n\\r\\n\\tthis.clippingPlanes = [];\\r\\n\\tthis.localClippingEnabled = false;\\r\\n\\r\\n\\t// physically based shading\\r\\n\\r\\n\\tthis.gammaFactor = 2.0;\\t// for backwards compatibility\\r\\n\\tthis.gammaInput = false;\\r\\n\\tthis.gammaOutput = false;\\r\\n\\r\\n\\t// physical lights\\r\\n\\r\\n\\tthis.physicallyCorrectLights = false;\\r\\n\\r\\n\\t// tone mapping\\r\\n\\r\\n\\tthis.toneMapping = THREE.LinearToneMapping;\\r\\n\\tthis.toneMappingExposure = 1.0;\\r\\n\\tthis.toneMappingWhitePoint = 1.0;\\r\\n\\r\\n\\t// morphs\\r\\n\\r\\n\\tthis.maxMorphTargets = 8;\\r\\n\\tthis.maxMorphNormals = 4;\\r\\n\\r\\n\\t// internal properties\\r\\n\\r\\n\\tvar _this = this,\\r\\n\\r\\n\\t// internal state cache\\r\\n\\r\\n\\t_currentProgram = null,\\r\\n\\t_currentRenderTarget = null,\\r\\n\\t_currentFramebuffer = null,\\r\\n\\t_currentMaterialId = - 1,\\r\\n\\t_currentGeometryProgram = '',\\r\\n\\t_currentCamera = null,\\r\\n\\r\\n\\t_currentScissor = new THREE.Vector4(),\\r\\n\\t_currentScissorTest = null,\\r\\n\\r\\n\\t_currentViewport = new THREE.Vector4(),\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\t_usedTextureUnits = 0,\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\t_clearColor = new THREE.Color( 0x000000 ),\\r\\n\\t_clearAlpha = 0,\\r\\n\\r\\n\\t_width = _canvas.width,\\r\\n\\t_height = _canvas.height,\\r\\n\\r\\n\\t_pixelRatio = 1,\\r\\n\\r\\n\\t_scissor = new THREE.Vector4( 0, 0, _width, _height ),\\r\\n\\t_scissorTest = false,\\r\\n\\r\\n\\t_viewport = new THREE.Vector4( 0, 0, _width, _height ),\\r\\n\\r\\n\\t// frustum\\r\\n\\r\\n\\t_frustum = new THREE.Frustum(),\\r\\n\\r\\n\\t// clipping\\r\\n\\r\\n\\t_clipping = new THREE.WebGLClipping(),\\r\\n\\t_clippingEnabled = false,\\r\\n\\t_localClippingEnabled = false,\\r\\n\\r\\n\\t_sphere = new THREE.Sphere(),\\r\\n\\r\\n\\t// camera matrices cache\\r\\n\\r\\n\\t_projScreenMatrix = new THREE.Matrix4(),\\r\\n\\r\\n\\t_vector3 = new THREE.Vector3(),\\r\\n\\r\\n\\t// light arrays cache\\r\\n\\r\\n\\t_lights = {\\r\\n\\r\\n\\t\\thash: '',\\r\\n\\r\\n\\t\\tambient: [ 0, 0, 0 ],\\r\\n\\t\\tdirectional: [],\\r\\n\\t\\tdirectionalShadowMap: [],\\r\\n\\t\\tdirectionalShadowMatrix: [],\\r\\n\\t\\tspot: [],\\r\\n\\t\\tspotShadowMap: [],\\r\\n\\t\\tspotShadowMatrix: [],\\r\\n\\t\\tpoint: [],\\r\\n\\t\\tpointShadowMap: [],\\r\\n\\t\\tpointShadowMatrix: [],\\r\\n\\t\\themi: [],\\r\\n\\r\\n\\t\\tshadows: []\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// info\\r\\n\\r\\n\\t_infoRender = {\\r\\n\\r\\n\\t\\tcalls: 0,\\r\\n\\t\\tvertices: 0,\\r\\n\\t\\tfaces: 0,\\r\\n\\t\\tpoints: 0\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.info = {\\r\\n\\r\\n\\t\\trender: _infoRender,\\r\\n\\t\\tmemory: {\\r\\n\\r\\n\\t\\t\\tgeometries: 0,\\r\\n\\t\\t\\ttextures: 0\\r\\n\\r\\n\\t\\t},\\r\\n\\t\\tprograms: null\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\r\\n\\t// initialize\\r\\n\\r\\n\\tvar _gl;\\r\\n\\r\\n\\ttry {\\r\\n\\r\\n\\t\\tvar attributes = {\\r\\n\\t\\t\\talpha: _alpha,\\r\\n\\t\\t\\tdepth: _depth,\\r\\n\\t\\t\\tstencil: _stencil,\\r\\n\\t\\t\\tantialias: _antialias,\\r\\n\\t\\t\\tpremultipliedAlpha: _premultipliedAlpha,\\r\\n\\t\\t\\tpreserveDrawingBuffer: _preserveDrawingBuffer\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\\r\\n\\r\\n\\t\\tif ( _gl === null ) {\\r\\n\\r\\n\\t\\t\\tif ( _canvas.getContext( 'webgl' ) !== null ) {\\r\\n\\r\\n\\t\\t\\t\\tthrow 'Error creating WebGL context with your selected attributes.';\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tthrow 'Error creating WebGL context.';\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\\r\\n\\r\\n\\t\\tif ( _gl.getShaderPrecisionFormat === undefined ) {\\r\\n\\r\\n\\t\\t\\t_gl.getShaderPrecisionFormat = function () {\\r\\n\\r\\n\\t\\t\\t\\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\\r\\n\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\\r\\n\\r\\n\\t} catch ( error ) {\\r\\n\\r\\n\\t\\tconsole.error( 'THREE.WebGLRenderer: ' + error );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar extensions = new THREE.WebGLExtensions( _gl );\\r\\n\\r\\n\\textensions.get( 'WEBGL_depth_texture' );\\r\\n\\textensions.get( 'OES_texture_float' );\\r\\n\\textensions.get( 'OES_texture_float_linear' );\\r\\n\\textensions.get( 'OES_texture_half_float' );\\r\\n\\textensions.get( 'OES_texture_half_float_linear' );\\r\\n\\textensions.get( 'OES_standard_derivatives' );\\r\\n\\textensions.get( 'ANGLE_instanced_arrays' );\\r\\n\\r\\n\\tif ( extensions.get( 'OES_element_index_uint' ) ) {\\r\\n\\r\\n\\t\\tTHREE.BufferGeometry.MaxIndex = 4294967296;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\\r\\n\\r\\n\\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\\r\\n\\tvar properties = new THREE.WebGLProperties();\\r\\n\\tvar textures = new THREE.WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, this.info );\\r\\n\\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\\r\\n\\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\\r\\n\\tvar lightCache = new THREE.WebGLLights();\\r\\n\\r\\n\\tthis.info.programs = programCache.programs;\\r\\n\\r\\n\\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\\r\\n\\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tvar backgroundCamera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\\r\\n\\tvar backgroundCamera2 = new THREE.PerspectiveCamera();\\r\\n\\tvar backgroundPlaneMesh = new THREE.Mesh(\\r\\n\\t\\tnew THREE.PlaneBufferGeometry( 2, 2 ),\\r\\n\\t\\tnew THREE.MeshBasicMaterial( { depthTest: false, depthWrite: false } )\\r\\n\\t);\\r\\n\\tvar backgroundBoxShader = THREE.ShaderLib[ 'cube' ];\\r\\n\\tvar backgroundBoxMesh = new THREE.Mesh(\\r\\n\\t\\tnew THREE.BoxBufferGeometry( 5, 5, 5 ),\\r\\n\\t\\tnew THREE.ShaderMaterial( {\\r\\n\\t\\t\\tuniforms: backgroundBoxShader.uniforms,\\r\\n\\t\\t\\tvertexShader: backgroundBoxShader.vertexShader,\\r\\n\\t\\t\\tfragmentShader: backgroundBoxShader.fragmentShader,\\r\\n\\t\\t\\tdepthTest: false,\\r\\n\\t\\t\\tdepthWrite: false,\\r\\n\\t\\t\\tside: THREE.BackSide\\r\\n\\t\\t} )\\r\\n\\t);\\r\\n\\tobjects.update( backgroundPlaneMesh );\\r\\n\\tobjects.update( backgroundBoxMesh );\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tfunction getTargetPixelRatio() {\\r\\n\\r\\n\\t\\treturn _currentRenderTarget === null ? _pixelRatio : 1;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction glClearColor( r, g, b, a ) {\\r\\n\\r\\n\\t\\tif ( _premultipliedAlpha === true ) {\\r\\n\\r\\n\\t\\t\\tr *= a; g *= a; b *= a;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tstate.clearColor( r, g, b, a );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction setDefaultGLState() {\\r\\n\\r\\n\\t\\tstate.init();\\r\\n\\r\\n\\t\\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\\r\\n\\t\\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\\r\\n\\r\\n\\t\\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction resetGLState() {\\r\\n\\r\\n\\t\\t_currentProgram = null;\\r\\n\\t\\t_currentCamera = null;\\r\\n\\r\\n\\t\\t_currentGeometryProgram = '';\\r\\n\\t\\t_currentMaterialId = - 1;\\r\\n\\r\\n\\t\\tstate.reset();\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tsetDefaultGLState();\\r\\n\\r\\n\\tthis.context = _gl;\\r\\n\\tthis.capabilities = capabilities;\\r\\n\\tthis.extensions = extensions;\\r\\n\\tthis.properties = properties;\\r\\n\\tthis.state = state;\\r\\n\\r\\n\\t// shadow map\\r\\n\\r\\n\\tvar shadowMap = new THREE.WebGLShadowMap( this, _lights, objects );\\r\\n\\r\\n\\tthis.shadowMap = shadowMap;\\r\\n\\r\\n\\r\\n\\t// Plugins\\r\\n\\r\\n\\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\\r\\n\\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\\r\\n\\r\\n\\t// API\\r\\n\\r\\n\\tthis.getContext = function () {\\r\\n\\r\\n\\t\\treturn _gl;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.getContextAttributes = function () {\\r\\n\\r\\n\\t\\treturn _gl.getContextAttributes();\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.forceContextLoss = function () {\\r\\n\\r\\n\\t\\textensions.get( 'WEBGL_lose_context' ).loseContext();\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.getMaxAnisotropy = function () {\\r\\n\\r\\n\\t\\treturn capabilities.getMaxAnisotropy();\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.getPrecision = function () {\\r\\n\\r\\n\\t\\treturn capabilities.precision;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.getPixelRatio = function () {\\r\\n\\r\\n\\t\\treturn _pixelRatio;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setPixelRatio = function ( value ) {\\r\\n\\r\\n\\t\\tif ( value === undefined ) return;\\r\\n\\r\\n\\t\\t_pixelRatio = value;\\r\\n\\r\\n\\t\\tthis.setSize( _viewport.z, _viewport.w, false );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.getSize = function () {\\r\\n\\r\\n\\t\\treturn {\\r\\n\\t\\t\\twidth: _width,\\r\\n\\t\\t\\theight: _height\\r\\n\\t\\t};\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setSize = function ( width, height, updateStyle ) {\\r\\n\\r\\n\\t\\t_width = width;\\r\\n\\t\\t_height = height;\\r\\n\\r\\n\\t\\t_canvas.width = width * _pixelRatio;\\r\\n\\t\\t_canvas.height = height * _pixelRatio;\\r\\n\\r\\n\\t\\tif ( updateStyle !== false ) {\\r\\n\\r\\n\\t\\t\\t_canvas.style.width = width + 'px';\\r\\n\\t\\t\\t_canvas.style.height = height + 'px';\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.setViewport( 0, 0, width, height );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setViewport = function ( x, y, width, height ) {\\r\\n\\r\\n\\t\\tstate.viewport( _viewport.set( x, y, width, height ) );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setScissor = function ( x, y, width, height ) {\\r\\n\\r\\n\\t\\tstate.scissor( _scissor.set( x, y, width, height ) );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setScissorTest = function ( boolean ) {\\r\\n\\r\\n\\t\\tstate.setScissorTest( _scissorTest = boolean );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// Clearing\\r\\n\\r\\n\\tthis.getClearColor = function () {\\r\\n\\r\\n\\t\\treturn _clearColor;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setClearColor = function ( color, alpha ) {\\r\\n\\r\\n\\t\\t_clearColor.set( color );\\r\\n\\r\\n\\t\\t_clearAlpha = alpha !== undefined ? alpha : 1;\\r\\n\\r\\n\\t\\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.getClearAlpha = function () {\\r\\n\\r\\n\\t\\treturn _clearAlpha;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setClearAlpha = function ( alpha ) {\\r\\n\\r\\n\\t\\t_clearAlpha = alpha;\\r\\n\\r\\n\\t\\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.clear = function ( color, depth, stencil ) {\\r\\n\\r\\n\\t\\tvar bits = 0;\\r\\n\\r\\n\\t\\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\\r\\n\\t\\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\\r\\n\\t\\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\\r\\n\\r\\n\\t\\t_gl.clear( bits );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.clearColor = function () {\\r\\n\\r\\n\\t\\tthis.clear( true, false, false );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.clearDepth = function () {\\r\\n\\r\\n\\t\\tthis.clear( false, true, false );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.clearStencil = function () {\\r\\n\\r\\n\\t\\tthis.clear( false, false, true );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\\r\\n\\r\\n\\t\\tthis.setRenderTarget( renderTarget );\\r\\n\\t\\tthis.clear( color, depth, stencil );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// Reset\\r\\n\\r\\n\\tthis.resetGLState = resetGLState;\\r\\n\\r\\n\\tthis.dispose = function() {\\r\\n\\r\\n\\t\\ttransparentObjects = [];\\r\\n\\t\\ttransparentObjectsLastIndex = -1;\\r\\n\\t\\topaqueObjects = [];\\r\\n\\t\\topaqueObjectsLastIndex = -1;\\r\\n\\r\\n\\t\\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// Events\\r\\n\\r\\n\\tfunction onContextLost( event ) {\\r\\n\\r\\n\\t\\tevent.preventDefault();\\r\\n\\r\\n\\t\\tresetGLState();\\r\\n\\t\\tsetDefaultGLState();\\r\\n\\r\\n\\t\\tproperties.clear();\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onMaterialDispose( event ) {\\r\\n\\r\\n\\t\\tvar material = event.target;\\r\\n\\r\\n\\t\\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\\r\\n\\r\\n\\t\\tdeallocateMaterial( material );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Buffer deallocation\\r\\n\\r\\n\\tfunction deallocateMaterial( material ) {\\r\\n\\r\\n\\t\\treleaseMaterialProgramReference( material );\\r\\n\\r\\n\\t\\tproperties.delete( material );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\tfunction releaseMaterialProgramReference( material ) {\\r\\n\\r\\n\\t\\tvar programInfo = properties.get( material ).program;\\r\\n\\r\\n\\t\\tmaterial.program = undefined;\\r\\n\\r\\n\\t\\tif ( programInfo !== undefined ) {\\r\\n\\r\\n\\t\\t\\tprogramCache.releaseProgram( programInfo );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Buffer rendering\\r\\n\\r\\n\\tthis.renderBufferImmediate = function ( object, program, material ) {\\r\\n\\r\\n\\t\\tstate.initAttributes();\\r\\n\\r\\n\\t\\tvar buffers = properties.get( object );\\r\\n\\r\\n\\t\\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\\r\\n\\t\\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\\r\\n\\t\\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\\r\\n\\t\\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\\r\\n\\r\\n\\t\\tvar attributes = program.getAttributes();\\r\\n\\r\\n\\t\\tif ( object.hasPositions ) {\\r\\n\\r\\n\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\\r\\n\\t\\t\\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\\r\\n\\r\\n\\t\\t\\tstate.enableAttribute( attributes.position );\\r\\n\\t\\t\\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( object.hasNormals ) {\\r\\n\\r\\n\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\\r\\n\\r\\n\\t\\t\\tif ( material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.type !== 'MeshPhysicalMaterial' && material.shading === THREE.FlatShading ) {\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar array = object.normalArray;\\r\\n\\r\\n\\t\\t\\t\\t\\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\\r\\n\\t\\t\\t\\t\\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\\r\\n\\t\\t\\t\\t\\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\\r\\n\\r\\n\\t\\t\\t\\t\\tarray[ i + 0 ] = nx;\\r\\n\\t\\t\\t\\t\\tarray[ i + 1 ] = ny;\\r\\n\\t\\t\\t\\t\\tarray[ i + 2 ] = nz;\\r\\n\\r\\n\\t\\t\\t\\t\\tarray[ i + 3 ] = nx;\\r\\n\\t\\t\\t\\t\\tarray[ i + 4 ] = ny;\\r\\n\\t\\t\\t\\t\\tarray[ i + 5 ] = nz;\\r\\n\\r\\n\\t\\t\\t\\t\\tarray[ i + 6 ] = nx;\\r\\n\\t\\t\\t\\t\\tarray[ i + 7 ] = ny;\\r\\n\\t\\t\\t\\t\\tarray[ i + 8 ] = nz;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\\r\\n\\r\\n\\t\\t\\tstate.enableAttribute( attributes.normal );\\r\\n\\r\\n\\t\\t\\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( object.hasUvs && material.map ) {\\r\\n\\r\\n\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\\r\\n\\t\\t\\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\\r\\n\\r\\n\\t\\t\\tstate.enableAttribute( attributes.uv );\\r\\n\\r\\n\\t\\t\\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\\r\\n\\r\\n\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\\r\\n\\t\\t\\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\\r\\n\\r\\n\\t\\t\\tstate.enableAttribute( attributes.color );\\r\\n\\r\\n\\t\\t\\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tstate.disableUnusedAttributes();\\r\\n\\r\\n\\t\\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\\r\\n\\r\\n\\t\\tobject.count = 0;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\\r\\n\\r\\n\\t\\tsetMaterial( material );\\r\\n\\r\\n\\t\\tvar program = setProgram( camera, fog, material, object );\\r\\n\\r\\n\\t\\tvar updateBuffers = false;\\r\\n\\t\\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\\r\\n\\r\\n\\t\\tif ( geometryProgram !== _currentGeometryProgram ) {\\r\\n\\r\\n\\t\\t\\t_currentGeometryProgram = geometryProgram;\\r\\n\\t\\t\\tupdateBuffers = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// morph targets\\r\\n\\r\\n\\t\\tvar morphTargetInfluences = object.morphTargetInfluences;\\r\\n\\r\\n\\t\\tif ( morphTargetInfluences !== undefined ) {\\r\\n\\r\\n\\t\\t\\tvar activeInfluences = [];\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar influence = morphTargetInfluences[ i ];\\r\\n\\t\\t\\t\\tactiveInfluences.push( [ influence, i ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tactiveInfluences.sort( absNumericalSort );\\r\\n\\r\\n\\t\\t\\tif ( activeInfluences.length > 8 ) {\\r\\n\\r\\n\\t\\t\\t\\tactiveInfluences.length = 8;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar morphAttributes = geometry.morphAttributes;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar influence = activeInfluences[ i ];\\r\\n\\t\\t\\t\\tmorphInfluences[ i ] = influence[ 0 ];\\r\\n\\r\\n\\t\\t\\t\\tif ( influence[ 0 ] !== 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar index = influence[ 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\\r\\n\\t\\t\\t\\t\\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\\r\\n\\t\\t\\t\\t\\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tprogram.getUniforms().setValue(\\r\\n\\t\\t\\t\\t\\t_gl, 'morphTargetInfluences', morphInfluences );\\r\\n\\r\\n\\t\\t\\tupdateBuffers = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tvar index = geometry.index;\\r\\n\\t\\tvar position = geometry.attributes.position;\\r\\n\\r\\n\\t\\tif ( material.wireframe === true ) {\\r\\n\\r\\n\\t\\t\\tindex = objects.getWireframeAttribute( geometry );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar renderer;\\r\\n\\r\\n\\t\\tif ( index !== null ) {\\r\\n\\r\\n\\t\\t\\trenderer = indexedBufferRenderer;\\r\\n\\t\\t\\trenderer.setIndex( index );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\trenderer = bufferRenderer;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( updateBuffers ) {\\r\\n\\r\\n\\t\\t\\tsetupVertexAttributes( material, program, geometry );\\r\\n\\r\\n\\t\\t\\tif ( index !== null ) {\\r\\n\\r\\n\\t\\t\\t\\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tvar dataStart = 0;\\r\\n\\t\\tvar dataCount = Infinity;\\r\\n\\r\\n\\t\\tif ( index !== null ) {\\r\\n\\r\\n\\t\\t\\tdataCount = index.count;\\r\\n\\r\\n\\t\\t} else if ( position !== undefined ) {\\r\\n\\r\\n\\t\\t\\tdataCount = position.count;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar rangeStart = geometry.drawRange.start;\\r\\n\\t\\tvar rangeCount = geometry.drawRange.count;\\r\\n\\r\\n\\t\\tvar groupStart = group !== null ? group.start : 0;\\r\\n\\t\\tvar groupCount = group !== null ? group.count : Infinity;\\r\\n\\r\\n\\t\\tvar drawStart = Math.max( dataStart, rangeStart, groupStart );\\r\\n\\t\\tvar drawEnd = Math.min( dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\\r\\n\\r\\n\\t\\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tif ( object instanceof THREE.Mesh ) {\\r\\n\\r\\n\\t\\t\\tif ( material.wireframe === true ) {\\r\\n\\r\\n\\t\\t\\t\\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\\r\\n\\t\\t\\t\\trenderer.setMode( _gl.LINES );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tswitch ( object.drawMode ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tcase THREE.TrianglesDrawMode:\\r\\n\\t\\t\\t\\t\\t\\trenderer.setMode( _gl.TRIANGLES );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase THREE.TriangleStripDrawMode:\\r\\n\\t\\t\\t\\t\\t\\trenderer.setMode( _gl.TRIANGLE_STRIP );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase THREE.TriangleFanDrawMode:\\r\\n\\t\\t\\t\\t\\t\\trenderer.setMode( _gl.TRIANGLE_FAN );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t} else if ( object instanceof THREE.Line ) {\\r\\n\\r\\n\\t\\t\\tvar lineWidth = material.linewidth;\\r\\n\\r\\n\\t\\t\\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\\r\\n\\r\\n\\t\\t\\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\\r\\n\\r\\n\\t\\t\\tif ( object instanceof THREE.LineSegments ) {\\r\\n\\r\\n\\t\\t\\t\\trenderer.setMode( _gl.LINES );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\trenderer.setMode( _gl.LINE_STRIP );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else if ( object instanceof THREE.Points ) {\\r\\n\\r\\n\\t\\t\\trenderer.setMode( _gl.POINTS );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\\r\\n\\r\\n\\t\\t\\tif ( geometry.maxInstancedCount > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\trenderer.renderInstances( geometry, drawStart, drawCount );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\trenderer.render( drawStart, drawCount );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\\r\\n\\r\\n\\t\\tvar extension;\\r\\n\\r\\n\\t\\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\\r\\n\\r\\n\\t\\t\\textension = extensions.get( 'ANGLE_instanced_arrays' );\\r\\n\\r\\n\\t\\t\\tif ( extension === null ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\\r\\n\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( startIndex === undefined ) startIndex = 0;\\r\\n\\r\\n\\t\\tstate.initAttributes();\\r\\n\\r\\n\\t\\tvar geometryAttributes = geometry.attributes;\\r\\n\\r\\n\\t\\tvar programAttributes = program.getAttributes();\\r\\n\\r\\n\\t\\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\\r\\n\\r\\n\\t\\tfor ( var name in programAttributes ) {\\r\\n\\r\\n\\t\\t\\tvar programAttribute = programAttributes[ name ];\\r\\n\\r\\n\\t\\t\\tif ( programAttribute >= 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tvar geometryAttribute = geometryAttributes[ name ];\\r\\n\\r\\n\\t\\t\\t\\tif ( geometryAttribute !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar type = _gl.FLOAT;\\r\\n\\t\\t\\t\\t\\tvar array = geometryAttribute.array;\\r\\n\\t\\t\\t\\t\\tvar normalized = geometryAttribute.normalized;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( array instanceof Float32Array ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ttype = _gl.FLOAT;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( array instanceof Float64Array ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tconsole.warn(\\\"Unsupported data buffer format: Float64Array\\\");\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( array instanceof Uint16Array ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ttype = _gl.UNSIGNED_SHORT;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( array instanceof Int16Array ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ttype = _gl.SHORT;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( array instanceof Uint32Array ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ttype = _gl.UNSIGNED_INT;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( array instanceof Int32Array ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ttype = _gl.INT;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( array instanceof Int8Array ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ttype = _gl.BYTE;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( array instanceof Uint8Array ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\ttype = _gl.UNSIGNED_BYTE;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tvar size = geometryAttribute.itemSize;\\r\\n\\t\\t\\t\\t\\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar data = geometryAttribute.data;\\r\\n\\t\\t\\t\\t\\t\\tvar stride = data.stride;\\r\\n\\t\\t\\t\\t\\t\\tvar offset = geometryAttribute.offset;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( geometry.maxInstancedCount === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tstate.enableAttribute( programAttribute );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\\r\\n\\t\\t\\t\\t\\t\\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( geometry.maxInstancedCount === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tstate.enableAttribute( programAttribute );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\\r\\n\\t\\t\\t\\t\\t\\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} else if ( materialDefaultAttributeValues !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar value = materialDefaultAttributeValues[ name ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( value !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tswitch ( value.length ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tcase 2:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttrib2fv( programAttribute, value );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tcase 3:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttrib3fv( programAttribute, value );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tcase 4:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttrib4fv( programAttribute, value );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tdefault:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttrib1fv( programAttribute, value );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tstate.disableUnusedAttributes();\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Sorting\\r\\n\\r\\n\\tfunction absNumericalSort( a, b ) {\\r\\n\\r\\n\\t\\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction painterSortStable ( a, b ) {\\r\\n\\r\\n\\t\\tif ( a.object.renderOrder !== b.object.renderOrder ) {\\r\\n\\r\\n\\t\\t\\treturn a.object.renderOrder - b.object.renderOrder;\\r\\n\\r\\n\\t\\t} else if ( a.material.id !== b.material.id ) {\\r\\n\\r\\n\\t\\t\\treturn a.material.id - b.material.id;\\r\\n\\r\\n\\t\\t} else if ( a.z !== b.z ) {\\r\\n\\r\\n\\t\\t\\treturn a.z - b.z;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\treturn a.id - b.id;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction reversePainterSortStable ( a, b ) {\\r\\n\\r\\n\\t\\tif ( a.object.renderOrder !== b.object.renderOrder ) {\\r\\n\\r\\n\\t\\t\\treturn a.object.renderOrder - b.object.renderOrder;\\r\\n\\r\\n\\t\\t} if ( a.z !== b.z ) {\\r\\n\\r\\n\\t\\t\\treturn b.z - a.z;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\treturn a.id - b.id;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Rendering\\r\\n\\r\\n\\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\\r\\n\\r\\n\\t\\tif ( camera instanceof THREE.Camera === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar fog = scene.fog;\\r\\n\\r\\n\\t\\t// reset caching for this frame\\r\\n\\r\\n\\t\\t_currentGeometryProgram = '';\\r\\n\\t\\t_currentMaterialId = - 1;\\r\\n\\t\\t_currentCamera = null;\\r\\n\\r\\n\\t\\t// update scene graph\\r\\n\\r\\n\\t\\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\\r\\n\\r\\n\\t\\t// update camera matrices and frustum\\r\\n\\r\\n\\t\\tif ( camera.parent === null ) camera.updateMatrixWorld();\\r\\n\\r\\n\\t\\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\\r\\n\\r\\n\\t\\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\\r\\n\\t\\t_frustum.setFromMatrix( _projScreenMatrix );\\r\\n\\r\\n\\t\\tlights.length = 0;\\r\\n\\r\\n\\t\\topaqueObjectsLastIndex = - 1;\\r\\n\\t\\ttransparentObjectsLastIndex = - 1;\\r\\n\\r\\n\\t\\tsprites.length = 0;\\r\\n\\t\\tlensFlares.length = 0;\\r\\n\\r\\n\\t\\t_localClippingEnabled = this.localClippingEnabled;\\r\\n\\t\\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\\r\\n\\r\\n\\t\\tprojectObject( scene, camera );\\r\\n\\r\\n\\t\\topaqueObjects.length = opaqueObjectsLastIndex + 1;\\r\\n\\t\\ttransparentObjects.length = transparentObjectsLastIndex + 1;\\r\\n\\r\\n\\t\\tif ( _this.sortObjects === true ) {\\r\\n\\r\\n\\t\\t\\topaqueObjects.sort( painterSortStable );\\r\\n\\t\\t\\ttransparentObjects.sort( reversePainterSortStable );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tif ( _clippingEnabled ) _clipping.beginShadows();\\r\\n\\r\\n\\t\\tsetupShadows( lights );\\r\\n\\r\\n\\t\\tshadowMap.render( scene, camera );\\r\\n\\r\\n\\t\\tsetupLights( lights, camera );\\r\\n\\r\\n\\t\\tif ( _clippingEnabled ) _clipping.endShadows();\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\t_infoRender.calls = 0;\\r\\n\\t\\t_infoRender.vertices = 0;\\r\\n\\t\\t_infoRender.faces = 0;\\r\\n\\t\\t_infoRender.points = 0;\\r\\n\\r\\n\\t\\tif ( renderTarget === undefined ) {\\r\\n\\r\\n\\t\\t\\trenderTarget = null;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.setRenderTarget( renderTarget );\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tvar background = scene.background;\\r\\n\\r\\n\\t\\tif ( background === null ) {\\r\\n\\r\\n\\t\\t\\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\\r\\n\\r\\n\\t\\t} else if ( background instanceof THREE.Color ) {\\r\\n\\r\\n\\t\\t\\tglClearColor( background.r, background.g, background.b, 1 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.autoClear || forceClear ) {\\r\\n\\r\\n\\t\\t\\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( background instanceof THREE.CubeTexture ) {\\r\\n\\r\\n\\t\\t\\tbackgroundCamera2.projectionMatrix.copy( camera.projectionMatrix );\\r\\n\\r\\n\\t\\t\\tbackgroundCamera2.matrixWorld.extractRotation( camera.matrixWorld );\\r\\n\\t\\t\\tbackgroundCamera2.matrixWorldInverse.getInverse( backgroundCamera2.matrixWorld );\\r\\n\\r\\n\\t\\t\\tbackgroundBoxMesh.material.uniforms[ \\\"tCube\\\" ].value = background;\\r\\n\\t\\t\\tbackgroundBoxMesh.modelViewMatrix.multiplyMatrices( backgroundCamera2.matrixWorldInverse, backgroundBoxMesh.matrixWorld );\\r\\n\\r\\n\\t\\t\\t_this.renderBufferDirect( backgroundCamera2, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null );\\r\\n\\r\\n\\t\\t} else if ( background instanceof THREE.Texture ) {\\r\\n\\r\\n\\t\\t\\tbackgroundPlaneMesh.material.map = background;\\r\\n\\r\\n\\t\\t\\t_this.renderBufferDirect( backgroundCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tif ( scene.overrideMaterial ) {\\r\\n\\r\\n\\t\\t\\tvar overrideMaterial = scene.overrideMaterial;\\r\\n\\r\\n\\t\\t\\trenderObjects( opaqueObjects, camera, fog, overrideMaterial );\\r\\n\\t\\t\\trenderObjects( transparentObjects, camera, fog, overrideMaterial );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// opaque pass (front-to-back order)\\r\\n\\r\\n\\t\\t\\tstate.setBlending( THREE.NoBlending );\\r\\n\\t\\t\\trenderObjects( opaqueObjects, camera, fog );\\r\\n\\r\\n\\t\\t\\t// transparent pass (back-to-front order)\\r\\n\\r\\n\\t\\t\\trenderObjects( transparentObjects, camera, fog );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// custom render plugins (post pass)\\r\\n\\r\\n\\t\\tspritePlugin.render( scene, camera );\\r\\n\\t\\tlensFlarePlugin.render( scene, camera, _currentViewport );\\r\\n\\r\\n\\t\\t// Generate mipmap if we're using any kind of mipmap filtering\\r\\n\\r\\n\\t\\tif ( renderTarget ) {\\r\\n\\r\\n\\t\\t\\ttextures.updateRenderTargetMipmap( renderTarget );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Ensure depth buffer writing is enabled so it can be cleared on next render\\r\\n\\r\\n\\t\\tstate.setDepthTest( true );\\r\\n\\t\\tstate.setDepthWrite( true );\\r\\n\\t\\tstate.setColorWrite( true );\\r\\n\\r\\n\\t\\t// _gl.finish();\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tfunction pushRenderItem( object, geometry, material, z, group ) {\\r\\n\\r\\n\\t\\tvar array, index;\\r\\n\\r\\n\\t\\t// allocate the next position in the appropriate array\\r\\n\\r\\n\\t\\tif ( material.transparent ) {\\r\\n\\r\\n\\t\\t\\tarray = transparentObjects;\\r\\n\\t\\t\\tindex = ++ transparentObjectsLastIndex;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tarray = opaqueObjects;\\r\\n\\t\\t\\tindex = ++ opaqueObjectsLastIndex;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// recycle existing render item or grow the array\\r\\n\\r\\n\\t\\tvar renderItem = array[ index ];\\r\\n\\r\\n\\t\\tif ( renderItem !== undefined ) {\\r\\n\\r\\n\\t\\t\\trenderItem.id = object.id;\\r\\n\\t\\t\\trenderItem.object = object;\\r\\n\\t\\t\\trenderItem.geometry = geometry;\\r\\n\\t\\t\\trenderItem.material = material;\\r\\n\\t\\t\\trenderItem.z = _vector3.z;\\r\\n\\t\\t\\trenderItem.group = group;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\trenderItem = {\\r\\n\\t\\t\\t\\tid: object.id,\\r\\n\\t\\t\\t\\tobject: object,\\r\\n\\t\\t\\t\\tgeometry: geometry,\\r\\n\\t\\t\\t\\tmaterial: material,\\r\\n\\t\\t\\t\\tz: _vector3.z,\\r\\n\\t\\t\\t\\tgroup: group\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t// assert( index === array.length );\\r\\n\\t\\t\\tarray.push( renderItem );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// TODO Duplicated code (Frustum)\\r\\n\\r\\n\\tfunction isObjectViewable( object ) {\\r\\n\\r\\n\\t\\tvar geometry = object.geometry;\\r\\n\\r\\n\\t\\tif ( geometry.boundingSphere === null )\\r\\n\\t\\t\\tgeometry.computeBoundingSphere();\\r\\n\\r\\n\\t\\t_sphere.copy( geometry.boundingSphere ).\\r\\n\\t\\t\\tapplyMatrix4( object.matrixWorld );\\r\\n\\r\\n\\t\\treturn isSphereViewable( _sphere );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction isSpriteViewable( sprite ) {\\r\\n\\r\\n\\t\\t_sphere.center.set( 0, 0, 0 );\\r\\n\\t\\t_sphere.radius = 0.7071067811865476;\\r\\n\\t\\t_sphere.applyMatrix4( sprite.matrixWorld );\\r\\n\\r\\n\\t\\treturn isSphereViewable( _sphere );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction isSphereViewable( sphere ) {\\r\\n\\r\\n\\t\\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\\r\\n\\r\\n\\t\\tvar numPlanes = _clipping.numPlanes;\\r\\n\\r\\n\\t\\tif ( numPlanes === 0 ) return true;\\r\\n\\r\\n\\t\\tvar planes = _this.clippingPlanes,\\r\\n\\r\\n\\t\\t\\tcenter = sphere.center,\\r\\n\\t\\t\\tnegRad = - sphere.radius,\\r\\n\\t\\t\\ti = 0;\\r\\n\\r\\n\\t\\tdo {\\r\\n\\r\\n\\t\\t\\t// out when deeper than radius in the negative halfspace\\r\\n\\t\\t\\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\\r\\n\\r\\n\\t\\t} while ( ++ i !== numPlanes );\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction projectObject( object, camera ) {\\r\\n\\r\\n\\t\\tif ( object.visible === false ) return;\\r\\n\\r\\n\\t\\tif ( object.layers.test( camera.layers ) ) {\\r\\n\\r\\n\\t\\t\\tif ( object instanceof THREE.Light ) {\\r\\n\\r\\n\\t\\t\\t\\tlights.push( object );\\r\\n\\r\\n\\t\\t\\t} else if ( object instanceof THREE.Sprite ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tsprites.push( object );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else if ( object instanceof THREE.LensFlare ) {\\r\\n\\r\\n\\t\\t\\t\\tlensFlares.push( object );\\r\\n\\r\\n\\t\\t\\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( _this.sortObjects === true ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( object.matrixWorld );\\r\\n\\t\\t\\t\\t\\t_vector3.applyProjection( _projScreenMatrix );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tpushRenderItem( object, null, object.material, _vector3.z, null );\\r\\n\\r\\n\\t\\t\\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( object instanceof THREE.SkinnedMesh ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tobject.skeleton.update();\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar material = object.material;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( material.visible === true ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( _this.sortObjects === true ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( object.matrixWorld );\\r\\n\\t\\t\\t\\t\\t\\t\\t_vector3.applyProjection( _projScreenMatrix );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar geometry = objects.update( object );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( material instanceof THREE.MultiMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvar groups = geometry.groups;\\r\\n\\t\\t\\t\\t\\t\\t\\tvar materials = material.materials;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tvar group = groups[ i ];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tvar groupMaterial = materials[ group.materialIndex ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( groupMaterial.visible === true ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tpushRenderItem( object, geometry, material, _vector3.z, null );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar children = object.children;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tprojectObject( children[ i ], camera );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction renderObjects( renderList, camera, fog, overrideMaterial ) {\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar renderItem = renderList[ i ];\\r\\n\\r\\n\\t\\t\\tvar object = renderItem.object;\\r\\n\\t\\t\\tvar geometry = renderItem.geometry;\\r\\n\\t\\t\\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\\r\\n\\t\\t\\tvar group = renderItem.group;\\r\\n\\r\\n\\t\\t\\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\\r\\n\\t\\t\\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\\r\\n\\r\\n\\t\\t\\tif ( object instanceof THREE.ImmediateRenderObject ) {\\r\\n\\r\\n\\t\\t\\t\\tsetMaterial( material );\\r\\n\\r\\n\\t\\t\\t\\tvar program = setProgram( camera, fog, material, object );\\r\\n\\r\\n\\t\\t\\t\\t_currentGeometryProgram = '';\\r\\n\\r\\n\\t\\t\\t\\tobject.render( function ( object ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t_this.renderBufferImmediate( object, program, material );\\r\\n\\r\\n\\t\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t_this.renderBufferDirect( camera, fog, geometry, material, object, group );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction initMaterial( material, fog, object ) {\\r\\n\\r\\n\\t\\tvar materialProperties = properties.get( material );\\r\\n\\r\\n\\t\\tvar parameters = programCache.getParameters(\\r\\n\\t\\t\\t\\tmaterial, _lights, fog, _clipping.numPlanes, object );\\r\\n\\r\\n\\t\\tvar code = programCache.getProgramCode( material, parameters );\\r\\n\\r\\n\\t\\tvar program = materialProperties.program;\\r\\n\\t\\tvar programChange = true;\\r\\n\\r\\n\\t\\tif ( program === undefined ) {\\r\\n\\r\\n\\t\\t\\t// new material\\r\\n\\t\\t\\tmaterial.addEventListener( 'dispose', onMaterialDispose );\\r\\n\\r\\n\\t\\t} else if ( program.code !== code ) {\\r\\n\\r\\n\\t\\t\\t// changed glsl or parameters\\r\\n\\t\\t\\treleaseMaterialProgramReference( material );\\r\\n\\r\\n\\t\\t} else if ( parameters.shaderID !== undefined ) {\\r\\n\\r\\n\\t\\t\\t// same glsl and uniform list\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// only rebuild uniform list\\r\\n\\t\\t\\tprogramChange = false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( programChange ) {\\r\\n\\r\\n\\t\\t\\tif ( parameters.shaderID ) {\\r\\n\\r\\n\\t\\t\\t\\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\\r\\n\\r\\n\\t\\t\\t\\tmaterialProperties.__webglShader = {\\r\\n\\t\\t\\t\\t\\tname: material.type,\\r\\n\\t\\t\\t\\t\\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\\r\\n\\t\\t\\t\\t\\tvertexShader: shader.vertexShader,\\r\\n\\t\\t\\t\\t\\tfragmentShader: shader.fragmentShader\\r\\n\\t\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tmaterialProperties.__webglShader = {\\r\\n\\t\\t\\t\\t\\tname: material.type,\\r\\n\\t\\t\\t\\t\\tuniforms: material.uniforms,\\r\\n\\t\\t\\t\\t\\tvertexShader: material.vertexShader,\\r\\n\\t\\t\\t\\t\\tfragmentShader: material.fragmentShader\\r\\n\\t\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tmaterial.__webglShader = materialProperties.__webglShader;\\r\\n\\r\\n\\t\\t\\tprogram = programCache.acquireProgram( material, parameters, code );\\r\\n\\r\\n\\t\\t\\tmaterialProperties.program = program;\\r\\n\\t\\t\\tmaterial.program = program;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar attributes = program.getAttributes();\\r\\n\\r\\n\\t\\tif ( material.morphTargets ) {\\r\\n\\r\\n\\t\\t\\tmaterial.numSupportedMorphTargets = 0;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tmaterial.numSupportedMorphTargets ++;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.morphNormals ) {\\r\\n\\r\\n\\t\\t\\tmaterial.numSupportedMorphNormals = 0;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tmaterial.numSupportedMorphNormals ++;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar uniforms = materialProperties.__webglShader.uniforms;\\r\\n\\r\\n\\t\\tif ( ! ( material instanceof THREE.ShaderMaterial ) &&\\r\\n\\t\\t\\t\\t! ( material instanceof THREE.RawShaderMaterial ) ||\\r\\n\\t\\t\\t\\tmaterial.clipping === true ) {\\r\\n\\r\\n\\t\\t\\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\\r\\n\\t\\t\\tuniforms.clippingPlanes = _clipping.uniform;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.lights ) {\\r\\n\\r\\n\\t\\t\\t// store the light setup it was created for\\r\\n\\r\\n\\t\\t\\tmaterialProperties.lightsHash = _lights.hash;\\r\\n\\r\\n\\t\\t\\t// wire up the material to this renderer's lighting state\\r\\n\\r\\n\\t\\t\\tuniforms.ambientLightColor.value = _lights.ambient;\\r\\n\\t\\t\\tuniforms.directionalLights.value = _lights.directional;\\r\\n\\t\\t\\tuniforms.spotLights.value = _lights.spot;\\r\\n\\t\\t\\tuniforms.pointLights.value = _lights.point;\\r\\n\\t\\t\\tuniforms.hemisphereLights.value = _lights.hemi;\\r\\n\\r\\n\\t\\t\\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\\r\\n\\t\\t\\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\\r\\n\\t\\t\\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\\r\\n\\t\\t\\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\\r\\n\\t\\t\\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\\r\\n\\t\\t\\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar progUniforms = materialProperties.program.getUniforms(),\\r\\n\\t\\t\\tuniformsList =\\r\\n\\t\\t\\t\\t\\tTHREE.WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\\r\\n\\r\\n\\t\\tmaterialProperties.uniformsList = uniformsList;\\r\\n\\t\\tmaterialProperties.dynamicUniforms =\\r\\n\\t\\t\\t\\tTHREE.WebGLUniforms.splitDynamic( uniformsList, uniforms );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction setMaterial( material ) {\\r\\n\\r\\n\\t\\tif ( material.side !== THREE.DoubleSide )\\r\\n\\t\\t\\tstate.enable( _gl.CULL_FACE );\\r\\n\\t\\telse\\r\\n\\t\\t\\tstate.disable( _gl.CULL_FACE );\\r\\n\\r\\n\\t\\tstate.setFlipSided( material.side === THREE.BackSide );\\r\\n\\r\\n\\t\\tif ( material.transparent === true ) {\\r\\n\\r\\n\\t\\t\\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tstate.setBlending( THREE.NoBlending );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tstate.setDepthFunc( material.depthFunc );\\r\\n\\t\\tstate.setDepthTest( material.depthTest );\\r\\n\\t\\tstate.setDepthWrite( material.depthWrite );\\r\\n\\t\\tstate.setColorWrite( material.colorWrite );\\r\\n\\t\\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction setProgram( camera, fog, material, object ) {\\r\\n\\r\\n\\t\\t_usedTextureUnits = 0;\\r\\n\\r\\n\\t\\tvar materialProperties = properties.get( material );\\r\\n\\r\\n\\t\\tif ( _clippingEnabled ) {\\r\\n\\r\\n\\t\\t\\tif ( _localClippingEnabled || camera !== _currentCamera ) {\\r\\n\\r\\n\\t\\t\\t\\tvar useCache =\\r\\n\\t\\t\\t\\t\\t\\tcamera === _currentCamera &&\\r\\n\\t\\t\\t\\t\\t\\tmaterial.id === _currentMaterialId;\\r\\n\\r\\n\\t\\t\\t\\t// we might want to call this function with some ClippingGroup\\r\\n\\t\\t\\t\\t// object instead of the material, once it becomes feasible\\r\\n\\t\\t\\t\\t// (#8465, #8379)\\r\\n\\t\\t\\t\\t_clipping.setState(\\r\\n\\t\\t\\t\\t\\t\\tmaterial.clippingPlanes, material.clipShadows,\\r\\n\\t\\t\\t\\t\\t\\tcamera, materialProperties, useCache );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( materialProperties.numClippingPlanes !== undefined &&\\r\\n\\t\\t\\t\\tmaterialProperties.numClippingPlanes !== _clipping.numPlanes ) {\\r\\n\\r\\n\\t\\t\\t\\tmaterial.needsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( materialProperties.program === undefined ) {\\r\\n\\r\\n\\t\\t\\tmaterial.needsUpdate = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( materialProperties.lightsHash !== undefined &&\\r\\n\\t\\t\\tmaterialProperties.lightsHash !== _lights.hash ) {\\r\\n\\r\\n\\t\\t\\tmaterial.needsUpdate = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.needsUpdate ) {\\r\\n\\r\\n\\t\\t\\tinitMaterial( material, fog, object );\\r\\n\\t\\t\\tmaterial.needsUpdate = false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar refreshProgram = false;\\r\\n\\t\\tvar refreshMaterial = false;\\r\\n\\t\\tvar refreshLights = false;\\r\\n\\r\\n\\t\\tvar program = materialProperties.program,\\r\\n\\t\\t\\tp_uniforms = program.getUniforms(),\\r\\n\\t\\t\\tm_uniforms = materialProperties.__webglShader.uniforms;\\r\\n\\r\\n\\t\\tif ( program.id !== _currentProgram ) {\\r\\n\\r\\n\\t\\t\\t_gl.useProgram( program.program );\\r\\n\\t\\t\\t_currentProgram = program.id;\\r\\n\\r\\n\\t\\t\\trefreshProgram = true;\\r\\n\\t\\t\\trefreshMaterial = true;\\r\\n\\t\\t\\trefreshLights = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.id !== _currentMaterialId ) {\\r\\n\\r\\n\\t\\t\\t_currentMaterialId = material.id;\\r\\n\\r\\n\\t\\t\\trefreshMaterial = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( refreshProgram || camera !== _currentCamera ) {\\r\\n\\r\\n\\t\\t\\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\\r\\n\\r\\n\\t\\t\\tif ( capabilities.logarithmicDepthBuffer ) {\\r\\n\\r\\n\\t\\t\\t\\tp_uniforms.setValue( _gl, 'logDepthBufFC',\\r\\n\\t\\t\\t\\t\\t\\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t\\tif ( camera !== _currentCamera ) {\\r\\n\\r\\n\\t\\t\\t\\t_currentCamera = camera;\\r\\n\\r\\n\\t\\t\\t\\t// lighting uniforms depend on the camera so enforce an update\\r\\n\\t\\t\\t\\t// now, in case this material supports lights - or later, when\\r\\n\\t\\t\\t\\t// the next material that does gets activated:\\r\\n\\r\\n\\t\\t\\t\\trefreshMaterial = true;\\t\\t// set to true on material change\\r\\n\\t\\t\\t\\trefreshLights = true;\\t\\t// remains set until update done\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// load material specific uniforms\\r\\n\\t\\t\\t// (shader material also gets them for the sake of genericity)\\r\\n\\r\\n\\t\\t\\tif ( material instanceof THREE.ShaderMaterial ||\\r\\n\\t\\t\\t\\t material instanceof THREE.MeshPhongMaterial ||\\r\\n\\t\\t\\t\\t material instanceof THREE.MeshStandardMaterial ||\\r\\n\\t\\t\\t\\t material.envMap ) {\\r\\n\\r\\n\\t\\t\\t\\tvar uCamPos = p_uniforms.map.cameraPosition;\\r\\n\\r\\n\\t\\t\\t\\tif ( uCamPos !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tuCamPos.setValue( _gl,\\r\\n\\t\\t\\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( material instanceof THREE.MeshPhongMaterial ||\\r\\n\\t\\t\\t\\t material instanceof THREE.MeshLambertMaterial ||\\r\\n\\t\\t\\t\\t material instanceof THREE.MeshBasicMaterial ||\\r\\n\\t\\t\\t\\t material instanceof THREE.MeshStandardMaterial ||\\r\\n\\t\\t\\t\\t material instanceof THREE.ShaderMaterial ||\\r\\n\\t\\t\\t\\t material.skinning ) {\\r\\n\\r\\n\\t\\t\\t\\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\\r\\n\\t\\t\\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// skinning uniforms must be set even if material didn't change\\r\\n\\t\\t// auto-setting of texture unit for bone texture must go before other textures\\r\\n\\t\\t// not sure why, but otherwise weird things happen\\r\\n\\r\\n\\t\\tif ( material.skinning ) {\\r\\n\\r\\n\\t\\t\\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\\r\\n\\t\\t\\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\\r\\n\\r\\n\\t\\t\\tvar skeleton = object.skeleton;\\r\\n\\r\\n\\t\\t\\tif ( skeleton ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\\r\\n\\t\\t\\t\\t\\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\\r\\n\\t\\t\\t\\t\\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( refreshMaterial ) {\\r\\n\\r\\n\\t\\t\\tif ( material.lights ) {\\r\\n\\r\\n\\t\\t\\t\\t// the current material requires lighting info\\r\\n\\r\\n\\t\\t\\t\\t// note: all lighting uniforms are always set correctly\\r\\n\\t\\t\\t\\t// they simply reference the renderer's state for their\\r\\n\\t\\t\\t\\t// values\\r\\n\\t\\t\\t\\t//\\r\\n\\t\\t\\t\\t// use the current material's .needsUpdate flags to set\\r\\n\\t\\t\\t\\t// the GL state when required\\r\\n\\r\\n\\t\\t\\t\\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// refresh uniforms common to several materials\\r\\n\\r\\n\\t\\t\\tif ( fog && material.fog ) {\\r\\n\\r\\n\\t\\t\\t\\trefreshUniformsFog( m_uniforms, fog );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( material instanceof THREE.MeshBasicMaterial ||\\r\\n\\t\\t\\t\\t material instanceof THREE.MeshLambertMaterial ||\\r\\n\\t\\t\\t\\t material instanceof THREE.MeshPhongMaterial ||\\r\\n\\t\\t\\t\\t material instanceof THREE.MeshStandardMaterial ||\\r\\n\\t\\t\\t\\t material instanceof THREE.MeshDepthMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\trefreshUniformsCommon( m_uniforms, material );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// refresh single material specific uniforms\\r\\n\\r\\n\\t\\t\\tif ( material instanceof THREE.LineBasicMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\trefreshUniformsLine( m_uniforms, material );\\r\\n\\r\\n\\t\\t\\t} else if ( material instanceof THREE.LineDashedMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\trefreshUniformsLine( m_uniforms, material );\\r\\n\\t\\t\\t\\trefreshUniformsDash( m_uniforms, material );\\r\\n\\r\\n\\t\\t\\t} else if ( material instanceof THREE.PointsMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\trefreshUniformsPoints( m_uniforms, material );\\r\\n\\r\\n\\t\\t\\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\trefreshUniformsLambert( m_uniforms, material );\\r\\n\\r\\n\\t\\t\\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\trefreshUniformsPhong( m_uniforms, material );\\r\\n\\r\\n\\t\\t\\t} else if ( material instanceof THREE.MeshPhysicalMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\trefreshUniformsPhysical( m_uniforms, material );\\r\\n\\r\\n\\t\\t\\t} else if ( material instanceof THREE.MeshStandardMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\trefreshUniformsStandard( m_uniforms, material );\\r\\n\\r\\n\\t\\t\\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( material.displacementMap ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tm_uniforms.displacementMap.value = material.displacementMap;\\r\\n\\t\\t\\t\\t\\tm_uniforms.displacementScale.value = material.displacementScale;\\r\\n\\t\\t\\t\\t\\tm_uniforms.displacementBias.value = material.displacementBias;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\tm_uniforms.opacity.value = material.opacity;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tTHREE.WebGLUniforms.upload(\\r\\n\\t\\t\\t\\t\\t_gl, materialProperties.uniformsList, m_uniforms, _this );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t// common matrices\\r\\n\\r\\n\\t\\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\\r\\n\\t\\tp_uniforms.set( _gl, object, 'normalMatrix' );\\r\\n\\t\\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\\r\\n\\r\\n\\r\\n\\t\\t// dynamic uniforms\\r\\n\\r\\n\\t\\tvar dynUniforms = materialProperties.dynamicUniforms;\\r\\n\\r\\n\\t\\tif ( dynUniforms !== null ) {\\r\\n\\r\\n\\t\\t\\tTHREE.WebGLUniforms.evalDynamic(\\r\\n\\t\\t\\t\\t\\tdynUniforms, m_uniforms, object, camera );\\r\\n\\r\\n\\t\\t\\tTHREE.WebGLUniforms.upload( _gl, dynUniforms, m_uniforms, _this );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn program;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Uniforms (refresh uniforms objects)\\r\\n\\r\\n\\tfunction refreshUniformsCommon ( uniforms, material ) {\\r\\n\\r\\n\\t\\tuniforms.opacity.value = material.opacity;\\r\\n\\r\\n\\t\\tuniforms.diffuse.value = material.color;\\r\\n\\r\\n\\t\\tif ( material.emissive ) {\\r\\n\\r\\n\\t\\t\\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuniforms.map.value = material.map;\\r\\n\\t\\tuniforms.specularMap.value = material.specularMap;\\r\\n\\t\\tuniforms.alphaMap.value = material.alphaMap;\\r\\n\\r\\n\\t\\tif ( material.aoMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.aoMap.value = material.aoMap;\\r\\n\\t\\t\\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// uv repeat and offset setting priorities\\r\\n\\t\\t// 1. color map\\r\\n\\t\\t// 2. specular map\\r\\n\\t\\t// 3. normal map\\r\\n\\t\\t// 4. bump map\\r\\n\\t\\t// 5. alpha map\\r\\n\\t\\t// 6. emissive map\\r\\n\\r\\n\\t\\tvar uvScaleMap;\\r\\n\\r\\n\\t\\tif ( material.map ) {\\r\\n\\r\\n\\t\\t\\tuvScaleMap = material.map;\\r\\n\\r\\n\\t\\t} else if ( material.specularMap ) {\\r\\n\\r\\n\\t\\t\\tuvScaleMap = material.specularMap;\\r\\n\\r\\n\\t\\t} else if ( material.displacementMap ) {\\r\\n\\r\\n\\t\\t\\tuvScaleMap = material.displacementMap;\\r\\n\\r\\n\\t\\t} else if ( material.normalMap ) {\\r\\n\\r\\n\\t\\t\\tuvScaleMap = material.normalMap;\\r\\n\\r\\n\\t\\t} else if ( material.bumpMap ) {\\r\\n\\r\\n\\t\\t\\tuvScaleMap = material.bumpMap;\\r\\n\\r\\n\\t\\t} else if ( material.roughnessMap ) {\\r\\n\\r\\n\\t\\t\\tuvScaleMap = material.roughnessMap;\\r\\n\\r\\n\\t\\t} else if ( material.metalnessMap ) {\\r\\n\\r\\n\\t\\t\\tuvScaleMap = material.metalnessMap;\\r\\n\\r\\n\\t\\t} else if ( material.alphaMap ) {\\r\\n\\r\\n\\t\\t\\tuvScaleMap = material.alphaMap;\\r\\n\\r\\n\\t\\t} else if ( material.emissiveMap ) {\\r\\n\\r\\n\\t\\t\\tuvScaleMap = material.emissiveMap;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( uvScaleMap !== undefined ) {\\r\\n\\r\\n\\t\\t\\t// backwards compatibility\\r\\n\\t\\t\\tif ( uvScaleMap instanceof THREE.WebGLRenderTarget ) {\\r\\n\\r\\n\\t\\t\\t\\tuvScaleMap = uvScaleMap.texture;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar offset = uvScaleMap.offset;\\r\\n\\t\\t\\tvar repeat = uvScaleMap.repeat;\\r\\n\\r\\n\\t\\t\\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuniforms.envMap.value = material.envMap;\\r\\n\\r\\n\\t\\t// don't flip CubeTexture envMaps, flip everything else:\\r\\n\\t\\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\\r\\n\\t\\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\\r\\n\\t\\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\\r\\n\\t\\tuniforms.flipEnvMap.value = ( ! ( material.envMap instanceof THREE.CubeTexture ) ) ? 1 : - 1;\\r\\n\\r\\n\\t\\tuniforms.reflectivity.value = material.reflectivity;\\r\\n\\t\\tuniforms.refractionRatio.value = material.refractionRatio;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction refreshUniformsLine ( uniforms, material ) {\\r\\n\\r\\n\\t\\tuniforms.diffuse.value = material.color;\\r\\n\\t\\tuniforms.opacity.value = material.opacity;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction refreshUniformsDash ( uniforms, material ) {\\r\\n\\r\\n\\t\\tuniforms.dashSize.value = material.dashSize;\\r\\n\\t\\tuniforms.totalSize.value = material.dashSize + material.gapSize;\\r\\n\\t\\tuniforms.scale.value = material.scale;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction refreshUniformsPoints ( uniforms, material ) {\\r\\n\\r\\n\\t\\tuniforms.diffuse.value = material.color;\\r\\n\\t\\tuniforms.opacity.value = material.opacity;\\r\\n\\t\\tuniforms.size.value = material.size * _pixelRatio;\\r\\n\\t\\tuniforms.scale.value = _canvas.clientHeight * 0.5;\\r\\n\\r\\n\\t\\tuniforms.map.value = material.map;\\r\\n\\r\\n\\t\\tif ( material.map !== null ) {\\r\\n\\r\\n\\t\\t\\tvar offset = material.map.offset;\\r\\n\\t\\t\\tvar repeat = material.map.repeat;\\r\\n\\r\\n\\t\\t\\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction refreshUniformsFog ( uniforms, fog ) {\\r\\n\\r\\n\\t\\tuniforms.fogColor.value = fog.color;\\r\\n\\r\\n\\t\\tif ( fog instanceof THREE.Fog ) {\\r\\n\\r\\n\\t\\t\\tuniforms.fogNear.value = fog.near;\\r\\n\\t\\t\\tuniforms.fogFar.value = fog.far;\\r\\n\\r\\n\\t\\t} else if ( fog instanceof THREE.FogExp2 ) {\\r\\n\\r\\n\\t\\t\\tuniforms.fogDensity.value = fog.density;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction refreshUniformsLambert ( uniforms, material ) {\\r\\n\\r\\n\\t\\tif ( material.lightMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.lightMap.value = material.lightMap;\\r\\n\\t\\t\\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.emissiveMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.emissiveMap.value = material.emissiveMap;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction refreshUniformsPhong ( uniforms, material ) {\\r\\n\\r\\n\\t\\tuniforms.specular.value = material.specular;\\r\\n\\t\\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\\r\\n\\r\\n\\t\\tif ( material.lightMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.lightMap.value = material.lightMap;\\r\\n\\t\\t\\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.emissiveMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.emissiveMap.value = material.emissiveMap;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.bumpMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.bumpMap.value = material.bumpMap;\\r\\n\\t\\t\\tuniforms.bumpScale.value = material.bumpScale;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.normalMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.normalMap.value = material.normalMap;\\r\\n\\t\\t\\tuniforms.normalScale.value.copy( material.normalScale );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.displacementMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.displacementMap.value = material.displacementMap;\\r\\n\\t\\t\\tuniforms.displacementScale.value = material.displacementScale;\\r\\n\\t\\t\\tuniforms.displacementBias.value = material.displacementBias;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction refreshUniformsStandard ( uniforms, material ) {\\r\\n\\r\\n\\t\\tuniforms.roughness.value = material.roughness;\\r\\n\\t\\tuniforms.metalness.value = material.metalness;\\r\\n\\r\\n\\t\\tif ( material.roughnessMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.roughnessMap.value = material.roughnessMap;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.metalnessMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.metalnessMap.value = material.metalnessMap;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.lightMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.lightMap.value = material.lightMap;\\r\\n\\t\\t\\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.emissiveMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.emissiveMap.value = material.emissiveMap;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.bumpMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.bumpMap.value = material.bumpMap;\\r\\n\\t\\t\\tuniforms.bumpScale.value = material.bumpScale;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.normalMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.normalMap.value = material.normalMap;\\r\\n\\t\\t\\tuniforms.normalScale.value.copy( material.normalScale );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.displacementMap ) {\\r\\n\\r\\n\\t\\t\\tuniforms.displacementMap.value = material.displacementMap;\\r\\n\\t\\t\\tuniforms.displacementScale.value = material.displacementScale;\\r\\n\\t\\t\\tuniforms.displacementBias.value = material.displacementBias;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.envMap ) {\\r\\n\\r\\n\\t\\t\\t//uniforms.envMap.value = material.envMap; // part of uniforms common\\r\\n\\t\\t\\tuniforms.envMapIntensity.value = material.envMapIntensity;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction refreshUniformsPhysical ( uniforms, material ) {\\r\\n\\r\\n\\t\\tuniforms.clearCoat.value = material.clearCoat;\\r\\n\\t\\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\\r\\n\\r\\n\\t\\trefreshUniformsStandard( uniforms, material );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\\r\\n\\r\\n\\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\\r\\n\\r\\n\\t\\tuniforms.ambientLightColor.needsUpdate = value;\\r\\n\\r\\n\\t\\tuniforms.directionalLights.needsUpdate = value;\\r\\n\\t\\tuniforms.pointLights.needsUpdate = value;\\r\\n\\t\\tuniforms.spotLights.needsUpdate = value;\\r\\n\\t\\tuniforms.hemisphereLights.needsUpdate = value;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Lighting\\r\\n\\r\\n\\tfunction setupShadows ( lights ) {\\r\\n\\r\\n\\t\\tvar lightShadowsLength = 0;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar light = lights[ i ];\\r\\n\\r\\n\\t\\t\\tif ( light.castShadow ) {\\r\\n\\r\\n\\t\\t\\t\\t_lights.shadows[ lightShadowsLength ++ ] = light;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t_lights.shadows.length = lightShadowsLength;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction setupLights ( lights, camera ) {\\r\\n\\r\\n\\t\\tvar l, ll, light,\\r\\n\\t\\tr = 0, g = 0, b = 0,\\r\\n\\t\\tcolor,\\r\\n\\t\\tintensity,\\r\\n\\t\\tdistance,\\r\\n\\t\\tshadowMap,\\r\\n\\r\\n\\t\\tviewMatrix = camera.matrixWorldInverse,\\r\\n\\r\\n\\t\\tdirectionalLength = 0,\\r\\n\\t\\tpointLength = 0,\\r\\n\\t\\tspotLength = 0,\\r\\n\\t\\themiLength = 0;\\r\\n\\r\\n\\t\\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\\r\\n\\r\\n\\t\\t\\tlight = lights[ l ];\\r\\n\\r\\n\\t\\t\\tcolor = light.color;\\r\\n\\t\\t\\tintensity = light.intensity;\\r\\n\\t\\t\\tdistance = light.distance;\\r\\n\\r\\n\\t\\t\\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\\r\\n\\r\\n\\t\\t\\tif ( light instanceof THREE.AmbientLight ) {\\r\\n\\r\\n\\t\\t\\t\\tr += color.r * intensity;\\r\\n\\t\\t\\t\\tg += color.g * intensity;\\r\\n\\t\\t\\t\\tb += color.b * intensity;\\r\\n\\r\\n\\t\\t\\t} else if ( light instanceof THREE.DirectionalLight ) {\\r\\n\\r\\n\\t\\t\\t\\tvar uniforms = lightCache.get( light );\\r\\n\\r\\n\\t\\t\\t\\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\\r\\n\\t\\t\\t\\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\\r\\n\\t\\t\\t\\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\\r\\n\\t\\t\\t\\tuniforms.direction.sub( _vector3 );\\r\\n\\t\\t\\t\\tuniforms.direction.transformDirection( viewMatrix );\\r\\n\\r\\n\\t\\t\\t\\tuniforms.shadow = light.castShadow;\\r\\n\\r\\n\\t\\t\\t\\tif ( light.castShadow ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tuniforms.shadowBias = light.shadow.bias;\\r\\n\\t\\t\\t\\t\\tuniforms.shadowRadius = light.shadow.radius;\\r\\n\\t\\t\\t\\t\\tuniforms.shadowMapSize = light.shadow.mapSize;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\\r\\n\\t\\t\\t\\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\\r\\n\\t\\t\\t\\t_lights.directional[ directionalLength ++ ] = uniforms;\\r\\n\\r\\n\\t\\t\\t} else if ( light instanceof THREE.SpotLight ) {\\r\\n\\r\\n\\t\\t\\t\\tvar uniforms = lightCache.get( light );\\r\\n\\r\\n\\t\\t\\t\\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\\r\\n\\t\\t\\t\\tuniforms.position.applyMatrix4( viewMatrix );\\r\\n\\r\\n\\t\\t\\t\\tuniforms.color.copy( color ).multiplyScalar( intensity );\\r\\n\\t\\t\\t\\tuniforms.distance = distance;\\r\\n\\r\\n\\t\\t\\t\\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\\r\\n\\t\\t\\t\\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\\r\\n\\t\\t\\t\\tuniforms.direction.sub( _vector3 );\\r\\n\\t\\t\\t\\tuniforms.direction.transformDirection( viewMatrix );\\r\\n\\r\\n\\t\\t\\t\\tuniforms.coneCos = Math.cos( light.angle );\\r\\n\\t\\t\\t\\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\\r\\n\\t\\t\\t\\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\\r\\n\\r\\n\\t\\t\\t\\tuniforms.shadow = light.castShadow;\\r\\n\\r\\n\\t\\t\\t\\tif ( light.castShadow ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tuniforms.shadowBias = light.shadow.bias;\\r\\n\\t\\t\\t\\t\\tuniforms.shadowRadius = light.shadow.radius;\\r\\n\\t\\t\\t\\t\\tuniforms.shadowMapSize = light.shadow.mapSize;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t_lights.spotShadowMap[ spotLength ] = shadowMap;\\r\\n\\t\\t\\t\\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\\r\\n\\t\\t\\t\\t_lights.spot[ spotLength ++ ] = uniforms;\\r\\n\\r\\n\\t\\t\\t} else if ( light instanceof THREE.PointLight ) {\\r\\n\\r\\n\\t\\t\\t\\tvar uniforms = lightCache.get( light );\\r\\n\\r\\n\\t\\t\\t\\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\\r\\n\\t\\t\\t\\tuniforms.position.applyMatrix4( viewMatrix );\\r\\n\\r\\n\\t\\t\\t\\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\\r\\n\\t\\t\\t\\tuniforms.distance = light.distance;\\r\\n\\t\\t\\t\\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\\r\\n\\r\\n\\t\\t\\t\\tuniforms.shadow = light.castShadow;\\r\\n\\r\\n\\t\\t\\t\\tif ( light.castShadow ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tuniforms.shadowBias = light.shadow.bias;\\r\\n\\t\\t\\t\\t\\tuniforms.shadowRadius = light.shadow.radius;\\r\\n\\t\\t\\t\\t\\tuniforms.shadowMapSize = light.shadow.mapSize;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t_lights.pointShadowMap[ pointLength ] = shadowMap;\\r\\n\\r\\n\\t\\t\\t\\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t_lights.pointShadowMatrix[ pointLength ] = new THREE.Matrix4();\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// for point lights we set the shadow matrix to be a translation-only matrix\\r\\n\\t\\t\\t\\t// equal to inverse of the light's position\\r\\n\\t\\t\\t\\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\\r\\n\\t\\t\\t\\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\\r\\n\\r\\n\\t\\t\\t\\t_lights.point[ pointLength ++ ] = uniforms;\\r\\n\\r\\n\\t\\t\\t} else if ( light instanceof THREE.HemisphereLight ) {\\r\\n\\r\\n\\t\\t\\t\\tvar uniforms = lightCache.get( light );\\r\\n\\r\\n\\t\\t\\t\\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\\r\\n\\t\\t\\t\\tuniforms.direction.transformDirection( viewMatrix );\\r\\n\\t\\t\\t\\tuniforms.direction.normalize();\\r\\n\\r\\n\\t\\t\\t\\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\\r\\n\\t\\t\\t\\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\\r\\n\\r\\n\\t\\t\\t\\t_lights.hemi[ hemiLength ++ ] = uniforms;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t_lights.ambient[ 0 ] = r;\\r\\n\\t\\t_lights.ambient[ 1 ] = g;\\r\\n\\t\\t_lights.ambient[ 2 ] = b;\\r\\n\\r\\n\\t\\t_lights.directional.length = directionalLength;\\r\\n\\t\\t_lights.spot.length = spotLength;\\r\\n\\t\\t_lights.point.length = pointLength;\\r\\n\\t\\t_lights.hemi.length = hemiLength;\\r\\n\\r\\n\\t\\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// GL state setting\\r\\n\\r\\n\\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\\r\\n\\r\\n\\t\\tstate.setCullFace( cullFace );\\r\\n\\t\\tstate.setFlipSided( frontFaceDirection === THREE.FrontFaceDirectionCW );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// Textures\\r\\n\\r\\n\\tfunction allocTextureUnit() {\\r\\n\\r\\n\\t\\tvar textureUnit = _usedTextureUnits;\\r\\n\\r\\n\\t\\tif ( textureUnit >= capabilities.maxTextures ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t_usedTextureUnits += 1;\\r\\n\\r\\n\\t\\treturn textureUnit;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.allocTextureUnit = allocTextureUnit;\\r\\n\\r\\n\\t// this.setTexture2D = setTexture2D;\\r\\n\\tthis.setTexture2D = ( function() {\\r\\n\\r\\n\\t\\tvar warned = false;\\r\\n\\r\\n\\t\\t// backwards compatibility: peel texture.texture\\r\\n\\t\\treturn function setTexture2D( texture, slot ) {\\r\\n\\r\\n\\t\\t\\tif ( texture instanceof THREE.WebGLRenderTarget ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( ! warned ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\\\" );\\r\\n\\t\\t\\t\\t\\twarned = true;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\ttexture = texture.texture;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ttextures.setTexture2D( texture, slot );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}() );\\r\\n\\r\\n\\tthis.setTexture = ( function() {\\r\\n\\r\\n\\t\\tvar warned = false;\\r\\n\\r\\n\\t\\treturn function setTexture( texture, slot ) {\\r\\n\\r\\n\\t\\t\\tif ( ! warned ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\\\" );\\r\\n\\t\\t\\t\\twarned = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ttextures.setTexture2D( texture, slot );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}() );\\r\\n\\r\\n\\tthis.setTextureCube = ( function() {\\r\\n\\r\\n\\t\\tvar warned = false;\\r\\n\\r\\n\\t\\treturn function setTextureCube( texture, slot ) {\\r\\n\\r\\n\\t\\t\\t// backwards compatibility: peel texture.texture\\r\\n\\t\\t\\tif ( texture instanceof THREE.WebGLRenderTargetCube ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( ! warned ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\\\" );\\r\\n\\t\\t\\t\\t\\twarned = true;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\ttexture = texture.texture;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\\r\\n\\t\\t\\t// TODO: unify these code paths\\r\\n\\t\\t\\tif ( texture instanceof THREE.CubeTexture ||\\r\\n\\t\\t\\t\\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// CompressedTexture can have Array in image :/\\r\\n\\r\\n\\t\\t\\t\\t// this function alone should take care of cube textures\\r\\n\\t\\t\\t\\ttextures.setTextureCube( texture, slot );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// assumed: texture property of THREE.WebGLRenderTargetCube\\r\\n\\r\\n\\t\\t\\t\\ttextures.setTextureCubeDynamic( texture, slot );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t}() );\\r\\n\\r\\n\\tthis.getCurrentRenderTarget = function() {\\r\\n\\r\\n\\t\\treturn _currentRenderTarget;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setRenderTarget = function ( renderTarget ) {\\r\\n\\r\\n\\t\\t_currentRenderTarget = renderTarget;\\r\\n\\r\\n\\t\\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\\r\\n\\r\\n\\t\\t\\ttextures.setupRenderTarget( renderTarget );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\\r\\n\\t\\tvar framebuffer;\\r\\n\\r\\n\\t\\tif ( renderTarget ) {\\r\\n\\r\\n\\t\\t\\tvar renderTargetProperties = properties.get( renderTarget );\\r\\n\\r\\n\\t\\t\\tif ( isCube ) {\\r\\n\\r\\n\\t\\t\\t\\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tframebuffer = renderTargetProperties.__webglFramebuffer;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t_currentScissor.copy( renderTarget.scissor );\\r\\n\\t\\t\\t_currentScissorTest = renderTarget.scissorTest;\\r\\n\\r\\n\\t\\t\\t_currentViewport.copy( renderTarget.viewport );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tframebuffer = null;\\r\\n\\r\\n\\t\\t\\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\\r\\n\\t\\t\\t_currentScissorTest = _scissorTest;\\r\\n\\r\\n\\t\\t\\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( _currentFramebuffer !== framebuffer ) {\\r\\n\\r\\n\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\r\\n\\t\\t\\t_currentFramebuffer = framebuffer;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tstate.scissor( _currentScissor );\\r\\n\\t\\tstate.setScissorTest( _currentScissorTest );\\r\\n\\r\\n\\t\\tstate.viewport( _currentViewport );\\r\\n\\r\\n\\t\\tif ( isCube ) {\\r\\n\\r\\n\\t\\t\\tvar textureProperties = properties.get( renderTarget.texture );\\r\\n\\t\\t\\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\\r\\n\\r\\n\\t\\tif ( renderTarget instanceof THREE.WebGLRenderTarget === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\\r\\n\\r\\n\\t\\tif ( framebuffer ) {\\r\\n\\r\\n\\t\\t\\tvar restore = false;\\r\\n\\r\\n\\t\\t\\tif ( framebuffer !== _currentFramebuffer ) {\\r\\n\\r\\n\\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\r\\n\\r\\n\\t\\t\\t\\trestore = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ttry {\\r\\n\\r\\n\\t\\t\\t\\tvar texture = renderTarget.texture;\\r\\n\\r\\n\\t\\t\\t\\tif ( texture.format !== THREE.RGBAFormat && paramThreeToGL( texture.format ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\\r\\n\\t\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( texture.type !== THREE.UnsignedByteType &&\\r\\n\\t\\t\\t\\t     paramThreeToGL( texture.type ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) &&\\r\\n\\t\\t\\t\\t     ! ( texture.type === THREE.FloatType && extensions.get( 'WEBGL_color_buffer_float' ) ) &&\\r\\n\\t\\t\\t\\t     ! ( texture.type === THREE.HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\\r\\n\\t\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t_gl.readPixels( x, y, width, height, paramThreeToGL( texture.format ), paramThreeToGL( texture.type ), buffer );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} finally {\\r\\n\\r\\n\\t\\t\\t\\tif ( restore ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// Map three.js constants to WebGL constants\\r\\n\\r\\n\\tfunction paramThreeToGL ( p ) {\\r\\n\\r\\n\\t\\tvar extension;\\r\\n\\r\\n\\t\\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\\r\\n\\t\\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\\r\\n\\t\\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\\r\\n\\r\\n\\t\\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\\r\\n\\t\\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\\r\\n\\t\\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\\r\\n\\r\\n\\t\\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\\r\\n\\t\\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\\r\\n\\t\\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\\r\\n\\r\\n\\t\\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\\r\\n\\t\\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\\r\\n\\t\\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\\r\\n\\t\\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\\r\\n\\r\\n\\t\\tif ( p === THREE.ByteType ) return _gl.BYTE;\\r\\n\\t\\tif ( p === THREE.ShortType ) return _gl.SHORT;\\r\\n\\t\\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\\r\\n\\t\\tif ( p === THREE.IntType ) return _gl.INT;\\r\\n\\t\\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\\r\\n\\t\\tif ( p === THREE.FloatType ) return _gl.FLOAT;\\r\\n\\r\\n\\t\\textension = extensions.get( 'OES_texture_half_float' );\\r\\n\\r\\n\\t\\tif ( extension !== null ) {\\r\\n\\r\\n\\t\\t\\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\\r\\n\\t\\tif ( p === THREE.RGBFormat ) return _gl.RGB;\\r\\n\\t\\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\\r\\n\\t\\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\\r\\n\\t\\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\\r\\n\\t\\tif ( p === THREE.DepthFormat ) return _gl.DEPTH_COMPONENT;\\r\\n\\r\\n\\t\\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\\r\\n\\t\\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\\r\\n\\t\\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\\r\\n\\r\\n\\t\\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\\r\\n\\t\\tif ( p === THREE.OneFactor ) return _gl.ONE;\\r\\n\\t\\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\\r\\n\\t\\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\\r\\n\\t\\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\\r\\n\\t\\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\\r\\n\\t\\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\\r\\n\\t\\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\\r\\n\\r\\n\\t\\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\\r\\n\\t\\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\\r\\n\\t\\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\\r\\n\\r\\n\\t\\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\\r\\n\\r\\n\\t\\tif ( extension !== null ) {\\r\\n\\r\\n\\t\\t\\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\\r\\n\\t\\t\\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\\r\\n\\t\\t\\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\\r\\n\\t\\t\\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\\r\\n\\r\\n\\t\\tif ( extension !== null ) {\\r\\n\\r\\n\\t\\t\\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\\r\\n\\t\\t\\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\\r\\n\\t\\t\\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\\r\\n\\t\\t\\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\\r\\n\\r\\n\\t\\tif ( extension !== null ) {\\r\\n\\r\\n\\t\\t\\tif ( p === THREE.RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\textension = extensions.get( 'EXT_blend_minmax' );\\r\\n\\r\\n\\t\\tif ( extension !== null ) {\\r\\n\\r\\n\\t\\t\\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\\r\\n\\t\\t\\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn 0;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/WebGLRenderTarget.js\\r\\n\\r\\n/**\\r\\n * @author szimek / https://github.com/szimek/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author Marius Kintel / https://github.com/kintel\\r\\n */\\r\\n\\r\\n/*\\r\\n In options, we can specify:\\r\\n * Texture parameters for an auto-generated target texture\\r\\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\\r\\n*/\\r\\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\\r\\n\\r\\n\\tthis.uuid = THREE.Math.generateUUID();\\r\\n\\r\\n\\tthis.width = width;\\r\\n\\tthis.height = height;\\r\\n\\r\\n\\tthis.scissor = new THREE.Vector4( 0, 0, width, height );\\r\\n\\tthis.scissorTest = false;\\r\\n\\r\\n\\tthis.viewport = new THREE.Vector4( 0, 0, width, height );\\r\\n\\r\\n\\toptions = options || {};\\r\\n\\r\\n\\tif ( options.minFilter === undefined ) options.minFilter = THREE.LinearFilter;\\r\\n\\r\\n\\tthis.texture = new THREE.Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\\r\\n\\r\\n\\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\\r\\n\\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\\r\\n\\tthis.depthTexture = null;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.WebGLRenderTarget.prototype, THREE.EventDispatcher.prototype, {\\r\\n\\r\\n\\tsetSize: function ( width, height ) {\\r\\n\\r\\n\\t\\tif ( this.width !== width || this.height !== height ) {\\r\\n\\r\\n\\t\\t\\tthis.width = width;\\r\\n\\t\\t\\tthis.height = height;\\r\\n\\r\\n\\t\\t\\tthis.dispose();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.viewport.set( 0, 0, width, height );\\r\\n\\t\\tthis.scissor.set( 0, 0, width, height );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclone: function () {\\r\\n\\r\\n\\t\\treturn new this.constructor().copy( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcopy: function ( source ) {\\r\\n\\r\\n\\t\\tthis.width = source.width;\\r\\n\\t\\tthis.height = source.height;\\r\\n\\r\\n\\t\\tthis.viewport.copy( source.viewport );\\r\\n\\r\\n\\t\\tthis.texture = source.texture.clone();\\r\\n\\r\\n\\t\\tthis.depthBuffer = source.depthBuffer;\\r\\n\\t\\tthis.stencilBuffer = source.stencilBuffer;\\r\\n\\t\\tthis.depthTexture = source.depthTexture;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdispose: function () {\\r\\n\\r\\n\\t\\tthis.dispatchEvent( { type: 'dispose' } );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/renderers/WebGLRenderTargetCube.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com\\r\\n */\\r\\n\\r\\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\\r\\n\\r\\n\\tTHREE.WebGLRenderTarget.call( this, width, height, options );\\r\\n\\r\\n\\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\\r\\n\\tthis.activeMipMapLevel = 0;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\\r\\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\\r\\n\\r\\n// File:src/renderers/webgl/WebGLBufferRenderer.js\\r\\n\\r\\n/**\\r\\n* @author mrdoob / http://mrdoob.com/\\r\\n*/\\r\\n\\r\\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\\r\\n\\r\\n\\tvar mode;\\r\\n\\r\\n\\tfunction setMode( value ) {\\r\\n\\r\\n\\t\\tmode = value;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction render( start, count ) {\\r\\n\\r\\n\\t\\t_gl.drawArrays( mode, start, count );\\r\\n\\r\\n\\t\\t_infoRender.calls ++;\\r\\n\\t\\t_infoRender.vertices += count;\\r\\n\\t\\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction renderInstances( geometry ) {\\r\\n\\r\\n\\t\\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\\r\\n\\r\\n\\t\\tif ( extension === null ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar position = geometry.attributes.position;\\r\\n\\r\\n\\t\\tvar count = 0;\\r\\n\\r\\n\\t\\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\\r\\n\\r\\n\\t\\t\\tcount = position.data.count;\\r\\n\\r\\n\\t\\t\\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tcount = position.count;\\r\\n\\r\\n\\t\\t\\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t_infoRender.calls ++;\\r\\n\\t\\t_infoRender.vertices += count * geometry.maxInstancedCount;\\r\\n\\t\\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.setMode = setMode;\\r\\n\\tthis.render = render;\\r\\n\\tthis.renderInstances = renderInstances;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/WebGLClipping.js\\r\\n\\r\\nTHREE.WebGLClipping = function() {\\r\\n\\r\\n\\tvar scope = this,\\r\\n\\r\\n\\t\\tglobalState = null,\\r\\n\\t\\tnumGlobalPlanes = 0,\\r\\n\\t\\tlocalClippingEnabled = false,\\r\\n\\t\\trenderingShadows = false,\\r\\n\\r\\n\\t\\tplane = new THREE.Plane(),\\r\\n\\t\\tviewNormalMatrix = new THREE.Matrix3(),\\r\\n\\r\\n\\t\\tuniform = { value: null, needsUpdate: false };\\r\\n\\r\\n\\tthis.uniform = uniform;\\r\\n\\tthis.numPlanes = 0;\\r\\n\\r\\n\\tthis.init = function( planes, enableLocalClipping, camera ) {\\r\\n\\r\\n\\t\\tvar enabled =\\r\\n\\t\\t\\tplanes.length !== 0 ||\\r\\n\\t\\t\\tenableLocalClipping ||\\r\\n\\t\\t\\t// enable state of previous frame - the clipping code has to\\r\\n\\t\\t\\t// run another frame in order to reset the state:\\r\\n\\t\\t\\tnumGlobalPlanes !== 0 ||\\r\\n\\t\\t\\tlocalClippingEnabled;\\r\\n\\r\\n\\t\\tlocalClippingEnabled = enableLocalClipping;\\r\\n\\r\\n\\t\\tglobalState = projectPlanes( planes, camera, 0 );\\r\\n\\t\\tnumGlobalPlanes = planes.length;\\r\\n\\r\\n\\t\\treturn enabled;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.beginShadows = function() {\\r\\n\\r\\n\\t\\trenderingShadows = true;\\r\\n\\t\\tprojectPlanes( null );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.endShadows = function() {\\r\\n\\r\\n\\t\\trenderingShadows = false;\\r\\n\\t\\tresetGlobalState();\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setState = function( planes, clipShadows, camera, cache, fromCache ) {\\r\\n\\r\\n\\t\\tif ( ! localClippingEnabled ||\\r\\n\\t\\t\\t\\tplanes === null || planes.length === 0 ||\\r\\n\\t\\t\\t\\trenderingShadows && ! clipShadows ) {\\r\\n\\t\\t\\t// there's no local clipping\\r\\n\\r\\n\\t\\t\\tif ( renderingShadows ) {\\r\\n\\t\\t\\t\\t// there's no global clipping\\r\\n\\r\\n\\t\\t\\t\\tprojectPlanes( null );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tresetGlobalState();\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\\r\\n\\t\\t\\t\\tlGlobal = nGlobal * 4,\\r\\n\\r\\n\\t\\t\\t\\tdstArray = cache.clippingState || null;\\r\\n\\r\\n\\t\\t\\tuniform.value = dstArray; // ensure unique state\\r\\n\\r\\n\\t\\t\\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i !== lGlobal; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\tdstArray[ i ] = globalState[ i ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tcache.clippingState = dstArray;\\r\\n\\t\\t\\tthis.numPlanes += nGlobal;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tfunction resetGlobalState() {\\r\\n\\r\\n\\t\\tif ( uniform.value !== globalState ) {\\r\\n\\r\\n\\t\\t\\tuniform.value = globalState;\\r\\n\\t\\t\\tuniform.needsUpdate = numGlobalPlanes > 0;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tscope.numPlanes = numGlobalPlanes;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\\r\\n\\r\\n\\t\\tvar nPlanes = planes !== null ? planes.length : 0,\\r\\n\\t\\t\\tdstArray = null;\\r\\n\\r\\n\\t\\tif ( nPlanes !== 0 ) {\\r\\n\\r\\n\\t\\t\\tdstArray = uniform.value;\\r\\n\\r\\n\\t\\t\\tif ( skipTransform !== true || dstArray === null ) {\\r\\n\\r\\n\\t\\t\\t\\tvar flatSize = dstOffset + nPlanes * 4,\\r\\n\\t\\t\\t\\t\\tviewMatrix = camera.matrixWorldInverse;\\r\\n\\r\\n\\t\\t\\t\\tviewNormalMatrix.getNormalMatrix( viewMatrix );\\r\\n\\r\\n\\t\\t\\t\\tif ( dstArray === null || dstArray.length < flatSize ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tdstArray = new Float32Array( flatSize );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, i4 = dstOffset;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ti !== nPlanes; ++ i, i4 += 4 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tplane.copy( planes[ i ] ).\\r\\n\\t\\t\\t\\t\\t\\t\\tapplyMatrix4( viewMatrix, viewNormalMatrix );\\r\\n\\r\\n\\t\\t\\t\\t\\tplane.normal.toArray( dstArray, i4 );\\r\\n\\t\\t\\t\\t\\tdstArray[ i4 + 3 ] = plane.constant;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tuniform.value = dstArray;\\r\\n\\t\\t\\tuniform.needsUpdate = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tscope.numPlanes = nPlanes;\\r\\n\\t\\treturn dstArray;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\\r\\n\\r\\n/**\\r\\n* @author mrdoob / http://mrdoob.com/\\r\\n*/\\r\\n\\r\\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\\r\\n\\r\\n\\tvar mode;\\r\\n\\r\\n\\tfunction setMode( value ) {\\r\\n\\r\\n\\t\\tmode = value;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar type, size;\\r\\n\\r\\n\\tfunction setIndex( index ) {\\r\\n\\r\\n\\t\\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\\r\\n\\r\\n\\t\\t\\ttype = _gl.UNSIGNED_INT;\\r\\n\\t\\t\\tsize = 4;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\ttype = _gl.UNSIGNED_SHORT;\\r\\n\\t\\t\\tsize = 2;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction render( start, count ) {\\r\\n\\r\\n\\t\\t_gl.drawElements( mode, count, type, start * size );\\r\\n\\r\\n\\t\\t_infoRender.calls ++;\\r\\n\\t\\t_infoRender.vertices += count;\\r\\n\\t\\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction renderInstances( geometry, start, count ) {\\r\\n\\r\\n\\t\\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\\r\\n\\r\\n\\t\\tif ( extension === null ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\\r\\n\\r\\n\\t\\t_infoRender.calls ++;\\r\\n\\t\\t_infoRender.vertices += count * geometry.maxInstancedCount;\\r\\n\\t\\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\\r\\n\\t}\\r\\n\\r\\n\\tthis.setMode = setMode;\\r\\n\\tthis.setIndex = setIndex;\\r\\n\\tthis.render = render;\\r\\n\\tthis.renderInstances = renderInstances;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/WebGLExtensions.js\\r\\n\\r\\n/**\\r\\n* @author mrdoob / http://mrdoob.com/\\r\\n*/\\r\\n\\r\\nTHREE.WebGLExtensions = function ( gl ) {\\r\\n\\r\\n\\tvar extensions = {};\\r\\n\\r\\n\\tthis.get = function ( name ) {\\r\\n\\r\\n\\t\\tif ( extensions[ name ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\treturn extensions[ name ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar extension;\\r\\n\\r\\n\\t\\tswitch ( name ) {\\r\\n\\r\\n\\t\\t\\tcase 'WEBGL_depth_texture':\\r\\n\\t\\t\\t\\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'EXT_texture_filter_anisotropic':\\r\\n\\t\\t\\t\\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'WEBGL_compressed_texture_s3tc':\\r\\n\\t\\t\\t\\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'WEBGL_compressed_texture_pvrtc':\\r\\n\\t\\t\\t\\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'WEBGL_compressed_texture_etc1':\\r\\n\\t\\t\\t\\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tdefault:\\r\\n\\t\\t\\t\\textension = gl.getExtension( name );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( extension === null ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\textensions[ name ] = extension;\\r\\n\\r\\n\\t\\treturn extension;\\r\\n\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/WebGLCapabilities.js\\r\\n\\r\\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\\r\\n\\r\\n\\tvar maxAnisotropy;\\r\\n\\r\\n\\tfunction getMaxAnisotropy() {\\r\\n\\r\\n\\t\\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\\r\\n\\r\\n\\t\\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\\r\\n\\r\\n\\t\\tif ( extension !== null ) {\\r\\n\\r\\n\\t\\t\\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tmaxAnisotropy = 0;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn maxAnisotropy;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction getMaxPrecision( precision ) {\\r\\n\\r\\n\\t\\tif ( precision === 'highp' ) {\\r\\n\\r\\n\\t\\t\\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\\r\\n\\t\\t\\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\treturn 'highp';\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tprecision = 'mediump';\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( precision === 'mediump' ) {\\r\\n\\r\\n\\t\\t\\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\\r\\n\\t\\t\\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\treturn 'mediump';\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn 'lowp';\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.getMaxAnisotropy = getMaxAnisotropy;\\r\\n\\tthis.getMaxPrecision = getMaxPrecision;\\r\\n\\r\\n\\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp';\\r\\n\\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\\r\\n\\r\\n\\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\\r\\n\\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\\r\\n\\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\\r\\n\\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\\r\\n\\r\\n\\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\\r\\n\\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\\r\\n\\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\\r\\n\\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\\r\\n\\r\\n\\tthis.vertexTextures = this.maxVertexTextures > 0;\\r\\n\\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\\r\\n\\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\\r\\n\\r\\n\\tvar _maxPrecision = getMaxPrecision( this.precision );\\r\\n\\r\\n\\tif ( _maxPrecision !== this.precision ) {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\\r\\n\\t\\tthis.precision = _maxPrecision;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tif ( this.logarithmicDepthBuffer ) {\\r\\n\\r\\n\\t\\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/WebGLGeometries.js\\r\\n\\r\\n/**\\r\\n* @author mrdoob / http://mrdoob.com/\\r\\n*/\\r\\n\\r\\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\\r\\n\\r\\n\\tvar geometries = {};\\r\\n\\r\\n\\tfunction get( object ) {\\r\\n\\r\\n\\t\\tvar geometry = object.geometry;\\r\\n\\r\\n\\t\\tif ( geometries[ geometry.id ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\treturn geometries[ geometry.id ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tgeometry.addEventListener( 'dispose', onGeometryDispose );\\r\\n\\r\\n\\t\\tvar buffergeometry;\\r\\n\\r\\n\\t\\tif ( geometry instanceof THREE.BufferGeometry ) {\\r\\n\\r\\n\\t\\t\\tbuffergeometry = geometry;\\r\\n\\r\\n\\t\\t} else if ( geometry instanceof THREE.Geometry ) {\\r\\n\\r\\n\\t\\t\\tif ( geometry._bufferGeometry === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tbuffergeometry = geometry._bufferGeometry;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tgeometries[ geometry.id ] = buffergeometry;\\r\\n\\r\\n\\t\\tinfo.memory.geometries ++;\\r\\n\\r\\n\\t\\treturn buffergeometry;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onGeometryDispose( event ) {\\r\\n\\r\\n\\t\\tvar geometry = event.target;\\r\\n\\t\\tvar buffergeometry = geometries[ geometry.id ];\\r\\n\\r\\n\\t\\tif ( buffergeometry.index !== null ) {\\r\\n\\r\\n\\t\\t\\tdeleteAttribute( buffergeometry.index );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tdeleteAttributes( buffergeometry.attributes );\\r\\n\\r\\n\\t\\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\\r\\n\\r\\n\\t\\tdelete geometries[ geometry.id ];\\r\\n\\r\\n\\t\\t// TODO\\r\\n\\r\\n\\t\\tvar property = properties.get( geometry );\\r\\n\\r\\n\\t\\tif ( property.wireframe ) {\\r\\n\\r\\n\\t\\t\\tdeleteAttribute( property.wireframe );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tproperties.delete( geometry );\\r\\n\\r\\n\\t\\tvar bufferproperty = properties.get( buffergeometry );\\r\\n\\r\\n\\t\\tif ( bufferproperty.wireframe ) {\\r\\n\\r\\n\\t\\t\\tdeleteAttribute( bufferproperty.wireframe );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tproperties.delete( buffergeometry );\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tinfo.memory.geometries --;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction getAttributeBuffer( attribute ) {\\r\\n\\r\\n\\t\\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\\r\\n\\r\\n\\t\\t\\treturn properties.get( attribute.data ).__webglBuffer;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn properties.get( attribute ).__webglBuffer;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction deleteAttribute( attribute ) {\\r\\n\\r\\n\\t\\tvar buffer = getAttributeBuffer( attribute );\\r\\n\\r\\n\\t\\tif ( buffer !== undefined ) {\\r\\n\\r\\n\\t\\t\\tgl.deleteBuffer( buffer );\\r\\n\\t\\t\\tremoveAttributeBuffer( attribute );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction deleteAttributes( attributes ) {\\r\\n\\r\\n\\t\\tfor ( var name in attributes ) {\\r\\n\\r\\n\\t\\t\\tdeleteAttribute( attributes[ name ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction removeAttributeBuffer( attribute ) {\\r\\n\\r\\n\\t\\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\\r\\n\\r\\n\\t\\t\\tproperties.delete( attribute.data );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tproperties.delete( attribute );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.get = get;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/WebGLLights.js\\r\\n\\r\\n/**\\r\\n* @author mrdoob / http://mrdoob.com/\\r\\n*/\\r\\n\\r\\nTHREE.WebGLLights = function () {\\r\\n\\r\\n\\tvar lights = {};\\r\\n\\r\\n\\tthis.get = function ( light ) {\\r\\n\\r\\n\\t\\tif ( lights[ light.id ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\treturn lights[ light.id ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar uniforms;\\r\\n\\r\\n\\t\\tswitch ( light.type ) {\\r\\n\\r\\n\\t\\t\\tcase 'DirectionalLight':\\r\\n\\t\\t\\t\\tuniforms = {\\r\\n\\t\\t\\t\\t\\tdirection: new THREE.Vector3(),\\r\\n\\t\\t\\t\\t\\tcolor: new THREE.Color(),\\r\\n\\r\\n\\t\\t\\t\\t\\tshadow: false,\\r\\n\\t\\t\\t\\t\\tshadowBias: 0,\\r\\n\\t\\t\\t\\t\\tshadowRadius: 1,\\r\\n\\t\\t\\t\\t\\tshadowMapSize: new THREE.Vector2()\\r\\n\\t\\t\\t\\t};\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'SpotLight':\\r\\n\\t\\t\\t\\tuniforms = {\\r\\n\\t\\t\\t\\t\\tposition: new THREE.Vector3(),\\r\\n\\t\\t\\t\\t\\tdirection: new THREE.Vector3(),\\r\\n\\t\\t\\t\\t\\tcolor: new THREE.Color(),\\r\\n\\t\\t\\t\\t\\tdistance: 0,\\r\\n\\t\\t\\t\\t\\tconeCos: 0,\\r\\n\\t\\t\\t\\t\\tpenumbraCos: 0,\\r\\n\\t\\t\\t\\t\\tdecay: 0,\\r\\n\\r\\n\\t\\t\\t\\t\\tshadow: false,\\r\\n\\t\\t\\t\\t\\tshadowBias: 0,\\r\\n\\t\\t\\t\\t\\tshadowRadius: 1,\\r\\n\\t\\t\\t\\t\\tshadowMapSize: new THREE.Vector2()\\r\\n\\t\\t\\t\\t};\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'PointLight':\\r\\n\\t\\t\\t\\tuniforms = {\\r\\n\\t\\t\\t\\t\\tposition: new THREE.Vector3(),\\r\\n\\t\\t\\t\\t\\tcolor: new THREE.Color(),\\r\\n\\t\\t\\t\\t\\tdistance: 0,\\r\\n\\t\\t\\t\\t\\tdecay: 0,\\r\\n\\r\\n\\t\\t\\t\\t\\tshadow: false,\\r\\n\\t\\t\\t\\t\\tshadowBias: 0,\\r\\n\\t\\t\\t\\t\\tshadowRadius: 1,\\r\\n\\t\\t\\t\\t\\tshadowMapSize: new THREE.Vector2()\\r\\n\\t\\t\\t\\t};\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'HemisphereLight':\\r\\n\\t\\t\\t\\tuniforms = {\\r\\n\\t\\t\\t\\t\\tdirection: new THREE.Vector3(),\\r\\n\\t\\t\\t\\t\\tskyColor: new THREE.Color(),\\r\\n\\t\\t\\t\\t\\tgroundColor: new THREE.Color()\\r\\n\\t\\t\\t\\t};\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tlights[ light.id ] = uniforms;\\r\\n\\r\\n\\t\\treturn uniforms;\\r\\n\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/WebGLObjects.js\\r\\n\\r\\n/**\\r\\n* @author mrdoob / http://mrdoob.com/\\r\\n*/\\r\\n\\r\\nTHREE.WebGLObjects = function ( gl, properties, info ) {\\r\\n\\r\\n\\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tfunction update( object ) {\\r\\n\\r\\n\\t\\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\\r\\n\\r\\n\\t\\tvar geometry = geometries.get( object );\\r\\n\\r\\n\\t\\tif ( object.geometry instanceof THREE.Geometry ) {\\r\\n\\r\\n\\t\\t\\tgeometry.updateFromObject( object );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar index = geometry.index;\\r\\n\\t\\tvar attributes = geometry.attributes;\\r\\n\\r\\n\\t\\tif ( index !== null ) {\\r\\n\\r\\n\\t\\t\\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var name in attributes ) {\\r\\n\\r\\n\\t\\t\\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// morph targets\\r\\n\\r\\n\\t\\tvar morphAttributes = geometry.morphAttributes;\\r\\n\\r\\n\\t\\tfor ( var name in morphAttributes ) {\\r\\n\\r\\n\\t\\t\\tvar array = morphAttributes[ name ];\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn geometry;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction updateAttribute( attribute, bufferType ) {\\r\\n\\r\\n\\t\\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\\r\\n\\r\\n\\t\\tvar attributeProperties = properties.get( data );\\r\\n\\r\\n\\t\\tif ( attributeProperties.__webglBuffer === undefined ) {\\r\\n\\r\\n\\t\\t\\tcreateBuffer( attributeProperties, data, bufferType );\\r\\n\\r\\n\\t\\t} else if ( attributeProperties.version !== data.version ) {\\r\\n\\r\\n\\t\\t\\tupdateBuffer( attributeProperties, data, bufferType );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction createBuffer( attributeProperties, data, bufferType ) {\\r\\n\\r\\n\\t\\tattributeProperties.__webglBuffer = gl.createBuffer();\\r\\n\\t\\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\\r\\n\\r\\n\\t\\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\\r\\n\\r\\n\\t\\tgl.bufferData( bufferType, data.array, usage );\\r\\n\\r\\n\\t\\tattributeProperties.version = data.version;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction updateBuffer( attributeProperties, data, bufferType ) {\\r\\n\\r\\n\\t\\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\\r\\n\\r\\n\\t\\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\\r\\n\\r\\n\\t\\t\\t// Not using update ranges\\r\\n\\r\\n\\t\\t\\tgl.bufferSubData( bufferType, 0, data.array );\\r\\n\\r\\n\\t\\t} else if ( data.updateRange.count === 0 ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\\r\\n\\t\\t\\t\\t\\t\\t\\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\\r\\n\\r\\n\\t\\t\\tdata.updateRange.count = 0; // reset range\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tattributeProperties.version = data.version;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction getAttributeBuffer( attribute ) {\\r\\n\\r\\n\\t\\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\\r\\n\\r\\n\\t\\t\\treturn properties.get( attribute.data ).__webglBuffer;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn properties.get( attribute ).__webglBuffer;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction getWireframeAttribute( geometry ) {\\r\\n\\r\\n\\t\\tvar property = properties.get( geometry );\\r\\n\\r\\n\\t\\tif ( property.wireframe !== undefined ) {\\r\\n\\r\\n\\t\\t\\treturn property.wireframe;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar indices = [];\\r\\n\\r\\n\\t\\tvar index = geometry.index;\\r\\n\\t\\tvar attributes = geometry.attributes;\\r\\n\\t\\tvar position = attributes.position;\\r\\n\\r\\n\\t\\t// console.time( 'wireframe' );\\r\\n\\r\\n\\t\\tif ( index !== null ) {\\r\\n\\r\\n\\t\\t\\tvar edges = {};\\r\\n\\t\\t\\tvar array = index.array;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\tvar a = array[ i + 0 ];\\r\\n\\t\\t\\t\\tvar b = array[ i + 1 ];\\r\\n\\t\\t\\t\\tvar c = array[ i + 2 ];\\r\\n\\r\\n\\t\\t\\t\\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\\r\\n\\t\\t\\t\\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\\r\\n\\t\\t\\t\\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tvar array = attributes.position.array;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\tvar a = i + 0;\\r\\n\\t\\t\\t\\tvar b = i + 1;\\r\\n\\t\\t\\t\\tvar c = i + 2;\\r\\n\\r\\n\\t\\t\\t\\tindices.push( a, b, b, c, c, a );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// console.timeEnd( 'wireframe' );\\r\\n\\r\\n\\t\\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\\r\\n\\t\\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\\r\\n\\r\\n\\t\\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\\r\\n\\r\\n\\t\\tproperty.wireframe = attribute;\\r\\n\\r\\n\\t\\treturn attribute;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction checkEdge( edges, a, b ) {\\r\\n\\r\\n\\t\\tif ( a > b ) {\\r\\n\\r\\n\\t\\t\\tvar tmp = a;\\r\\n\\t\\t\\ta = b;\\r\\n\\t\\t\\tb = tmp;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar list = edges[ a ];\\r\\n\\r\\n\\t\\tif ( list === undefined ) {\\r\\n\\r\\n\\t\\t\\tedges[ a ] = [ b ];\\r\\n\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t} else if ( list.indexOf( b ) === -1 ) {\\r\\n\\r\\n\\t\\t\\tlist.push( b );\\r\\n\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn false;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.getAttributeBuffer = getAttributeBuffer;\\r\\n\\tthis.getWireframeAttribute = getWireframeAttribute;\\r\\n\\r\\n\\tthis.update = update;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/WebGLProgram.js\\r\\n\\r\\nTHREE.WebGLProgram = ( function () {\\r\\n\\r\\n\\tvar programIdCount = 0;\\r\\n\\r\\n\\tfunction getEncodingComponents( encoding ) {\\r\\n\\r\\n\\t\\tswitch ( encoding ) {\\r\\n\\r\\n\\t\\t\\tcase THREE.LinearEncoding:\\r\\n\\t\\t\\t\\treturn [ 'Linear','( value )' ];\\r\\n\\t\\t\\tcase THREE.sRGBEncoding:\\r\\n\\t\\t\\t\\treturn [ 'sRGB','( value )' ];\\r\\n\\t\\t\\tcase THREE.RGBEEncoding:\\r\\n\\t\\t\\t\\treturn [ 'RGBE','( value )' ];\\r\\n\\t\\t\\tcase THREE.RGBM7Encoding:\\r\\n\\t\\t\\t\\treturn [ 'RGBM','( value, 7.0 )' ];\\r\\n\\t\\t\\tcase THREE.RGBM16Encoding:\\r\\n\\t\\t\\t\\treturn [ 'RGBM','( value, 16.0 )' ];\\r\\n\\t\\t\\tcase THREE.RGBDEncoding:\\r\\n\\t\\t\\t\\treturn [ 'RGBD','( value, 256.0 )' ];\\r\\n\\t\\t\\tcase THREE.GammaEncoding:\\r\\n\\t\\t\\t\\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\\r\\n\\t\\t\\tdefault:\\r\\n\\t\\t\\t\\tthrow new Error( 'unsupported encoding: ' + encoding );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTexelDecodingFunction( functionName, encoding ) {\\r\\n\\r\\n\\t\\tvar components = getEncodingComponents( encoding );\\r\\n\\t\\treturn \\\"vec4 \\\" + functionName + \\\"( vec4 value ) { return \\\" + components[ 0 ] + \\\"ToLinear\\\" + components[ 1 ] + \\\"; }\\\";\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTexelEncodingFunction( functionName, encoding ) {\\r\\n\\r\\n\\t\\tvar components = getEncodingComponents( encoding );\\r\\n\\t\\treturn \\\"vec4 \\\" + functionName + \\\"( vec4 value ) { return LinearTo\\\" + components[ 0 ] + components[ 1 ] + \\\"; }\\\";\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction getToneMappingFunction( functionName, toneMapping ) {\\r\\n\\r\\n\\t\\tvar toneMappingName;\\r\\n\\r\\n\\t\\tswitch ( toneMapping ) {\\r\\n\\r\\n\\t\\t\\tcase THREE.LinearToneMapping:\\r\\n\\t\\t\\t\\ttoneMappingName = \\\"Linear\\\";\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase THREE.ReinhardToneMapping:\\r\\n\\t\\t\\t\\ttoneMappingName = \\\"Reinhard\\\";\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase THREE.Uncharted2ToneMapping:\\r\\n\\t\\t\\t\\ttoneMappingName = \\\"Uncharted2\\\";\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase THREE.CineonToneMapping:\\r\\n\\t\\t\\t\\ttoneMappingName = \\\"OptimizedCineon\\\";\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tdefault:\\r\\n\\t\\t\\t\\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn \\\"vec3 \\\" + functionName + \\\"( vec3 color ) { return \\\" + toneMappingName + \\\"ToneMapping( color ); }\\\";\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\\r\\n\\r\\n\\t\\textensions = extensions || {};\\r\\n\\r\\n\\t\\tvar chunks = [\\r\\n\\t\\t\\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\\r\\n\\t\\t\\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\\r\\n\\t\\t\\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\\r\\n\\t\\t\\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\\r\\n\\t\\t];\\r\\n\\r\\n\\t\\treturn chunks.filter( filterEmptyLine ).join( '\\\\n' );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction generateDefines( defines ) {\\r\\n\\r\\n\\t\\tvar chunks = [];\\r\\n\\r\\n\\t\\tfor ( var name in defines ) {\\r\\n\\r\\n\\t\\t\\tvar value = defines[ name ];\\r\\n\\r\\n\\t\\t\\tif ( value === false ) continue;\\r\\n\\r\\n\\t\\t\\tchunks.push( '#define ' + name + ' ' + value );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn chunks.join( '\\\\n' );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction fetchAttributeLocations( gl, program, identifiers ) {\\r\\n\\r\\n\\t\\tvar attributes = {};\\r\\n\\r\\n\\t\\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < n; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar info = gl.getActiveAttrib( program, i );\\r\\n\\t\\t\\tvar name = info.name;\\r\\n\\r\\n\\t\\t\\t// console.log(\\\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\\\", name, i );\\r\\n\\r\\n\\t\\t\\tattributes[ name ] = gl.getAttribLocation( program, name );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn attributes;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction filterEmptyLine( string ) {\\r\\n\\r\\n\\t\\treturn string !== '';\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction replaceLightNums( string, parameters ) {\\r\\n\\r\\n\\t\\treturn string\\r\\n\\t\\t\\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\\r\\n\\t\\t\\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\\r\\n\\t\\t\\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\\r\\n\\t\\t\\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction parseIncludes( string ) {\\r\\n\\r\\n\\t\\tvar pattern = /#include +<([\\\\w\\\\d.]+)>/g;\\r\\n\\r\\n\\t\\tfunction replace( match, include ) {\\r\\n\\r\\n\\t\\t\\tvar replace = THREE.ShaderChunk[ include ];\\r\\n\\r\\n\\t\\t\\tif ( replace === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tthrow new Error( 'Can not resolve #include <' + include + '>' );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn parseIncludes( replace );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn string.replace( pattern, replace );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction unrollLoops( string ) {\\r\\n\\r\\n\\t\\tvar pattern = /for \\\\( int i \\\\= (\\\\d+)\\\\; i < (\\\\d+)\\\\; i \\\\+\\\\+ \\\\) \\\\{([\\\\s\\\\S]+?)(?=\\\\})\\\\}/g;\\r\\n\\r\\n\\t\\tfunction replace( match, start, end, snippet ) {\\r\\n\\r\\n\\t\\t\\tvar unroll = '';\\r\\n\\r\\n\\t\\t\\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tunroll += snippet.replace( /\\\\[ i \\\\]/g, '[ ' + i + ' ]' );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn unroll;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn string.replace( pattern, replace );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn function WebGLProgram( renderer, code, material, parameters ) {\\r\\n\\r\\n\\t\\tvar gl = renderer.context;\\r\\n\\r\\n\\t\\tvar extensions = material.extensions;\\r\\n\\t\\tvar defines = material.defines;\\r\\n\\r\\n\\t\\tvar vertexShader = material.__webglShader.vertexShader;\\r\\n\\t\\tvar fragmentShader = material.__webglShader.fragmentShader;\\r\\n\\r\\n\\t\\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\\r\\n\\r\\n\\t\\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\\r\\n\\r\\n\\t\\t\\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\\r\\n\\r\\n\\t\\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\\r\\n\\r\\n\\t\\t\\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\\r\\n\\t\\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\\r\\n\\t\\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\\r\\n\\r\\n\\t\\tif ( parameters.envMap ) {\\r\\n\\r\\n\\t\\t\\tswitch ( material.envMap.mapping ) {\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.CubeReflectionMapping:\\r\\n\\t\\t\\t\\tcase THREE.CubeRefractionMapping:\\r\\n\\t\\t\\t\\t\\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.CubeUVReflectionMapping:\\r\\n\\t\\t\\t\\tcase THREE.CubeUVRefractionMapping:\\r\\n\\t\\t\\t\\t\\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.EquirectangularReflectionMapping:\\r\\n\\t\\t\\t\\tcase THREE.EquirectangularRefractionMapping:\\r\\n\\t\\t\\t\\t\\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.SphericalReflectionMapping:\\r\\n\\t\\t\\t\\t\\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tswitch ( material.envMap.mapping ) {\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.CubeRefractionMapping:\\r\\n\\t\\t\\t\\tcase THREE.EquirectangularRefractionMapping:\\r\\n\\t\\t\\t\\t\\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tswitch ( material.combine ) {\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.MultiplyOperation:\\r\\n\\t\\t\\t\\t\\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.MixOperation:\\r\\n\\t\\t\\t\\t\\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\tcase THREE.AddOperation:\\r\\n\\t\\t\\t\\t\\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\\r\\n\\r\\n\\t\\t// console.log( 'building new program ' );\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\\r\\n\\r\\n\\t\\tvar customDefines = generateDefines( defines );\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tvar program = gl.createProgram();\\r\\n\\r\\n\\t\\tvar prefixVertex, prefixFragment;\\r\\n\\r\\n\\t\\tif ( material instanceof THREE.RawShaderMaterial ) {\\r\\n\\r\\n\\t\\t\\tprefixVertex = [\\r\\n\\r\\n\\t\\t\\t\\tcustomDefines\\r\\n\\r\\n\\t\\t\\t].filter( filterEmptyLine ).join( '\\\\n' );\\r\\n\\r\\n\\t\\t\\tprefixFragment = [\\r\\n\\r\\n\\t\\t\\t\\tcustomDefines\\r\\n\\r\\n\\t\\t\\t].filter( filterEmptyLine ).join( '\\\\n' );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tprefixVertex = [\\r\\n\\r\\n\\t\\t\\t\\t'precision ' + parameters.precision + ' float;',\\r\\n\\t\\t\\t\\t'precision ' + parameters.precision + ' int;',\\r\\n\\r\\n\\t\\t\\t\\t'#define SHADER_NAME ' + material.__webglShader.name,\\r\\n\\r\\n\\t\\t\\t\\tcustomDefines,\\r\\n\\r\\n\\t\\t\\t\\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\\r\\n\\r\\n\\t\\t\\t\\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\\r\\n\\r\\n\\t\\t\\t\\t'#define MAX_BONES ' + parameters.maxBones,\\r\\n\\r\\n\\t\\t\\t\\tparameters.map ? '#define USE_MAP' : '',\\r\\n\\t\\t\\t\\tparameters.envMap ? '#define USE_ENVMAP' : '',\\r\\n\\t\\t\\t\\tparameters.envMap ? '#define ' + envMapModeDefine : '',\\r\\n\\t\\t\\t\\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\\r\\n\\t\\t\\t\\tparameters.aoMap ? '#define USE_AOMAP' : '',\\r\\n\\t\\t\\t\\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\\r\\n\\t\\t\\t\\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\\r\\n\\t\\t\\t\\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\\r\\n\\t\\t\\t\\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\\r\\n\\t\\t\\t\\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\\r\\n\\t\\t\\t\\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\\r\\n\\t\\t\\t\\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\\r\\n\\t\\t\\t\\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\\r\\n\\t\\t\\t\\tparameters.vertexColors ? '#define USE_COLOR' : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.flatShading ? '#define FLAT_SHADED' : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.skinning ? '#define USE_SKINNING' : '',\\r\\n\\t\\t\\t\\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\\r\\n\\t\\t\\t\\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\\r\\n\\t\\t\\t\\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\\r\\n\\t\\t\\t\\tparameters.flipSided ? '#define FLIP_SIDED' : '',\\r\\n\\r\\n\\t\\t\\t\\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\\r\\n\\r\\n\\t\\t\\t\\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\\r\\n\\t\\t\\t\\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\\r\\n\\t\\t\\t\\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\\r\\n\\r\\n\\t\\t\\t\\t'uniform mat4 modelMatrix;',\\r\\n\\t\\t\\t\\t'uniform mat4 modelViewMatrix;',\\r\\n\\t\\t\\t\\t'uniform mat4 projectionMatrix;',\\r\\n\\t\\t\\t\\t'uniform mat4 viewMatrix;',\\r\\n\\t\\t\\t\\t'uniform mat3 normalMatrix;',\\r\\n\\t\\t\\t\\t'uniform vec3 cameraPosition;',\\r\\n\\r\\n\\t\\t\\t\\t'attribute vec3 position;',\\r\\n\\t\\t\\t\\t'attribute vec3 normal;',\\r\\n\\t\\t\\t\\t'attribute vec2 uv;',\\r\\n\\r\\n\\t\\t\\t\\t'#ifdef USE_COLOR',\\r\\n\\r\\n\\t\\t\\t\\t'\\tattribute vec3 color;',\\r\\n\\r\\n\\t\\t\\t\\t'#endif',\\r\\n\\r\\n\\t\\t\\t\\t'#ifdef USE_MORPHTARGETS',\\r\\n\\r\\n\\t\\t\\t\\t'\\tattribute vec3 morphTarget0;',\\r\\n\\t\\t\\t\\t'\\tattribute vec3 morphTarget1;',\\r\\n\\t\\t\\t\\t'\\tattribute vec3 morphTarget2;',\\r\\n\\t\\t\\t\\t'\\tattribute vec3 morphTarget3;',\\r\\n\\r\\n\\t\\t\\t\\t'\\t#ifdef USE_MORPHNORMALS',\\r\\n\\r\\n\\t\\t\\t\\t'\\t\\tattribute vec3 morphNormal0;',\\r\\n\\t\\t\\t\\t'\\t\\tattribute vec3 morphNormal1;',\\r\\n\\t\\t\\t\\t'\\t\\tattribute vec3 morphNormal2;',\\r\\n\\t\\t\\t\\t'\\t\\tattribute vec3 morphNormal3;',\\r\\n\\r\\n\\t\\t\\t\\t'\\t#else',\\r\\n\\r\\n\\t\\t\\t\\t'\\t\\tattribute vec3 morphTarget4;',\\r\\n\\t\\t\\t\\t'\\t\\tattribute vec3 morphTarget5;',\\r\\n\\t\\t\\t\\t'\\t\\tattribute vec3 morphTarget6;',\\r\\n\\t\\t\\t\\t'\\t\\tattribute vec3 morphTarget7;',\\r\\n\\r\\n\\t\\t\\t\\t'\\t#endif',\\r\\n\\r\\n\\t\\t\\t\\t'#endif',\\r\\n\\r\\n\\t\\t\\t\\t'#ifdef USE_SKINNING',\\r\\n\\r\\n\\t\\t\\t\\t'\\tattribute vec4 skinIndex;',\\r\\n\\t\\t\\t\\t'\\tattribute vec4 skinWeight;',\\r\\n\\r\\n\\t\\t\\t\\t'#endif',\\r\\n\\r\\n\\t\\t\\t\\t'\\\\n'\\r\\n\\r\\n\\t\\t\\t].filter( filterEmptyLine ).join( '\\\\n' );\\r\\n\\r\\n\\t\\t\\tprefixFragment = [\\r\\n\\r\\n\\t\\t\\t\\tcustomExtensions,\\r\\n\\r\\n\\t\\t\\t\\t'precision ' + parameters.precision + ' float;',\\r\\n\\t\\t\\t\\t'precision ' + parameters.precision + ' int;',\\r\\n\\r\\n\\t\\t\\t\\t'#define SHADER_NAME ' + material.__webglShader.name,\\r\\n\\r\\n\\t\\t\\t\\tcustomDefines,\\r\\n\\r\\n\\t\\t\\t\\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\\r\\n\\r\\n\\t\\t\\t\\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\\r\\n\\r\\n\\t\\t\\t\\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\\r\\n\\t\\t\\t\\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.map ? '#define USE_MAP' : '',\\r\\n\\t\\t\\t\\tparameters.envMap ? '#define USE_ENVMAP' : '',\\r\\n\\t\\t\\t\\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\\r\\n\\t\\t\\t\\tparameters.envMap ? '#define ' + envMapModeDefine : '',\\r\\n\\t\\t\\t\\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\\r\\n\\t\\t\\t\\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\\r\\n\\t\\t\\t\\tparameters.aoMap ? '#define USE_AOMAP' : '',\\r\\n\\t\\t\\t\\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\\r\\n\\t\\t\\t\\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\\r\\n\\t\\t\\t\\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\\r\\n\\t\\t\\t\\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\\r\\n\\t\\t\\t\\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\\r\\n\\t\\t\\t\\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\\r\\n\\t\\t\\t\\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\\r\\n\\t\\t\\t\\tparameters.vertexColors ? '#define USE_COLOR' : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.flatShading ? '#define FLAT_SHADED' : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\\r\\n\\t\\t\\t\\tparameters.flipSided ? '#define FLIP_SIDED' : '',\\r\\n\\r\\n\\t\\t\\t\\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\\r\\n\\r\\n\\t\\t\\t\\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\\r\\n\\t\\t\\t\\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.premultipliedAlpha ? \\\"#define PREMULTIPLIED_ALPHA\\\" : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.physicallyCorrectLights ? \\\"#define PHYSICALLY_CORRECT_LIGHTS\\\" : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\\r\\n\\t\\t\\t\\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\\r\\n\\r\\n\\t\\t\\t\\t'uniform mat4 viewMatrix;',\\r\\n\\t\\t\\t\\t'uniform vec3 cameraPosition;',\\r\\n\\r\\n\\t\\t\\t\\t( parameters.toneMapping !== THREE.NoToneMapping ) ? \\\"#define TONE_MAPPING\\\" : '',\\r\\n\\t\\t\\t\\t( parameters.toneMapping !== THREE.NoToneMapping ) ? THREE.ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\\r\\n\\t\\t\\t\\t( parameters.toneMapping !== THREE.NoToneMapping ) ? getToneMappingFunction( \\\"toneMapping\\\", parameters.toneMapping ) : '',\\r\\n\\r\\n\\t\\t\\t\\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? THREE.ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\\r\\n\\t\\t\\t\\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\\r\\n\\t\\t\\t\\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\\r\\n\\t\\t\\t\\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\\r\\n\\t\\t\\t\\tparameters.outputEncoding ? getTexelEncodingFunction( \\\"linearToOutputTexel\\\", parameters.outputEncoding ) : '',\\r\\n\\r\\n\\t\\t\\t\\tparameters.depthPacking ? \\\"#define DEPTH_PACKING \\\" + material.depthPacking : '',\\r\\n\\r\\n\\t\\t\\t\\t'\\\\n'\\r\\n\\r\\n\\t\\t\\t].filter( filterEmptyLine ).join( '\\\\n' );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvertexShader = parseIncludes( vertexShader, parameters );\\r\\n\\t\\tvertexShader = replaceLightNums( vertexShader, parameters );\\r\\n\\r\\n\\t\\tfragmentShader = parseIncludes( fragmentShader, parameters );\\r\\n\\t\\tfragmentShader = replaceLightNums( fragmentShader, parameters );\\r\\n\\r\\n\\t\\tif ( material instanceof THREE.ShaderMaterial === false ) {\\r\\n\\r\\n\\t\\t\\tvertexShader = unrollLoops( vertexShader );\\r\\n\\t\\t\\tfragmentShader = unrollLoops( fragmentShader );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar vertexGlsl = prefixVertex + vertexShader;\\r\\n\\t\\tvar fragmentGlsl = prefixFragment + fragmentShader;\\r\\n\\r\\n\\t\\t// console.log( '*VERTEX*', vertexGlsl );\\r\\n\\t\\t// console.log( '*FRAGMENT*', fragmentGlsl );\\r\\n\\r\\n\\t\\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\\r\\n\\t\\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\\r\\n\\r\\n\\t\\tgl.attachShader( program, glVertexShader );\\r\\n\\t\\tgl.attachShader( program, glFragmentShader );\\r\\n\\r\\n\\t\\t// Force a particular attribute to index 0.\\r\\n\\r\\n\\t\\tif ( material.index0AttributeName !== undefined ) {\\r\\n\\r\\n\\t\\t\\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\\r\\n\\r\\n\\t\\t} else if ( parameters.morphTargets === true ) {\\r\\n\\r\\n\\t\\t\\t// programs with morphTargets displace position out of attribute 0\\r\\n\\t\\t\\tgl.bindAttribLocation( program, 0, 'position' );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tgl.linkProgram( program );\\r\\n\\r\\n\\t\\tvar programLog = gl.getProgramInfoLog( program );\\r\\n\\t\\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\\r\\n\\t\\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\\r\\n\\r\\n\\t\\tvar runnable = true;\\r\\n\\t\\tvar haveDiagnostics = true;\\r\\n\\r\\n\\t\\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\\r\\n\\t\\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\\r\\n\\r\\n\\t\\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\\r\\n\\r\\n\\t\\t\\trunnable = false;\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\\r\\n\\r\\n\\t\\t} else if ( programLog !== '' ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\\r\\n\\r\\n\\t\\t} else if ( vertexLog === '' || fragmentLog === '' ) {\\r\\n\\r\\n\\t\\t\\thaveDiagnostics = false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( haveDiagnostics ) {\\r\\n\\r\\n\\t\\t\\tthis.diagnostics = {\\r\\n\\r\\n\\t\\t\\t\\trunnable: runnable,\\r\\n\\t\\t\\t\\tmaterial: material,\\r\\n\\r\\n\\t\\t\\t\\tprogramLog: programLog,\\r\\n\\r\\n\\t\\t\\t\\tvertexShader: {\\r\\n\\r\\n\\t\\t\\t\\t\\tlog: vertexLog,\\r\\n\\t\\t\\t\\t\\tprefix: prefixVertex\\r\\n\\r\\n\\t\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t\\tfragmentShader: {\\r\\n\\r\\n\\t\\t\\t\\t\\tlog: fragmentLog,\\r\\n\\t\\t\\t\\t\\tprefix: prefixFragment\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// clean up\\r\\n\\r\\n\\t\\tgl.deleteShader( glVertexShader );\\r\\n\\t\\tgl.deleteShader( glFragmentShader );\\r\\n\\r\\n\\t\\t// set up caching for uniform locations\\r\\n\\r\\n\\t\\tvar cachedUniforms;\\r\\n\\r\\n\\t\\tthis.getUniforms = function() {\\r\\n\\r\\n\\t\\t\\tif ( cachedUniforms === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tcachedUniforms =\\r\\n\\t\\t\\t\\t\\t\\tnew THREE.WebGLUniforms( gl, program, renderer );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn cachedUniforms;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// set up caching for attribute locations\\r\\n\\r\\n\\t\\tvar cachedAttributes;\\r\\n\\r\\n\\t\\tthis.getAttributes = function() {\\r\\n\\r\\n\\t\\t\\tif ( cachedAttributes === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tcachedAttributes = fetchAttributeLocations( gl, program );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn cachedAttributes;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// free resource\\r\\n\\r\\n\\t\\tthis.destroy = function() {\\r\\n\\r\\n\\t\\t\\tgl.deleteProgram( program );\\r\\n\\t\\t\\tthis.program = undefined;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// DEPRECATED\\r\\n\\r\\n\\t\\tObject.defineProperties( this, {\\r\\n\\r\\n\\t\\t\\tuniforms: {\\r\\n\\t\\t\\t\\tget: function() {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\\r\\n\\t\\t\\t\\t\\treturn this.getUniforms();\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tattributes: {\\r\\n\\t\\t\\t\\tget: function() {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\\r\\n\\t\\t\\t\\t\\treturn this.getAttributes();\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} );\\r\\n\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tthis.id = programIdCount ++;\\r\\n\\t\\tthis.code = code;\\r\\n\\t\\tthis.usedTimes = 1;\\r\\n\\t\\tthis.program = program;\\r\\n\\t\\tthis.vertexShader = glVertexShader;\\r\\n\\t\\tthis.fragmentShader = glFragmentShader;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t};\\r\\n\\r\\n} )();\\r\\n\\r\\n// File:src/renderers/webgl/WebGLPrograms.js\\r\\n\\r\\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\\r\\n\\r\\n\\tvar programs = [];\\r\\n\\r\\n\\tvar shaderIDs = {\\r\\n\\t\\tMeshDepthMaterial: 'depth',\\r\\n\\t\\tMeshNormalMaterial: 'normal',\\r\\n\\t\\tMeshBasicMaterial: 'basic',\\r\\n\\t\\tMeshLambertMaterial: 'lambert',\\r\\n\\t\\tMeshPhongMaterial: 'phong',\\r\\n\\t\\tMeshStandardMaterial: 'physical',\\r\\n\\t\\tMeshPhysicalMaterial: 'physical',\\r\\n\\t\\tLineBasicMaterial: 'basic',\\r\\n\\t\\tLineDashedMaterial: 'dashed',\\r\\n\\t\\tPointsMaterial: 'points'\\r\\n\\t};\\r\\n\\r\\n\\tvar parameterNames = [\\r\\n\\t\\t\\\"precision\\\", \\\"supportsVertexTextures\\\", \\\"map\\\", \\\"mapEncoding\\\", \\\"envMap\\\", \\\"envMapMode\\\", \\\"envMapEncoding\\\",\\r\\n\\t\\t\\\"lightMap\\\", \\\"aoMap\\\", \\\"emissiveMap\\\", \\\"emissiveMapEncoding\\\", \\\"bumpMap\\\", \\\"normalMap\\\", \\\"displacementMap\\\", \\\"specularMap\\\",\\r\\n\\t\\t\\\"roughnessMap\\\", \\\"metalnessMap\\\",\\r\\n\\t\\t\\\"alphaMap\\\", \\\"combine\\\", \\\"vertexColors\\\", \\\"fog\\\", \\\"useFog\\\", \\\"fogExp\\\",\\r\\n\\t\\t\\\"flatShading\\\", \\\"sizeAttenuation\\\", \\\"logarithmicDepthBuffer\\\", \\\"skinning\\\",\\r\\n\\t\\t\\\"maxBones\\\", \\\"useVertexTexture\\\", \\\"morphTargets\\\", \\\"morphNormals\\\",\\r\\n\\t\\t\\\"maxMorphTargets\\\", \\\"maxMorphNormals\\\", \\\"premultipliedAlpha\\\",\\r\\n\\t\\t\\\"numDirLights\\\", \\\"numPointLights\\\", \\\"numSpotLights\\\", \\\"numHemiLights\\\",\\r\\n\\t\\t\\\"shadowMapEnabled\\\", \\\"shadowMapType\\\", \\\"toneMapping\\\", 'physicallyCorrectLights',\\r\\n\\t\\t\\\"alphaTest\\\", \\\"doubleSided\\\", \\\"flipSided\\\", \\\"numClippingPlanes\\\", \\\"depthPacking\\\"\\r\\n\\t];\\r\\n\\r\\n\\r\\n\\tfunction allocateBones ( object ) {\\r\\n\\r\\n\\t\\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\\r\\n\\r\\n\\t\\t\\treturn 1024;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// default for when object is not specified\\r\\n\\t\\t\\t// ( for example when prebuilding shader to be used with multiple objects )\\r\\n\\t\\t\\t//\\r\\n\\t\\t\\t//  - leave some extra space for other uniforms\\r\\n\\t\\t\\t//  - limit here is ANGLE's 254 max uniform vectors\\r\\n\\t\\t\\t//    (up to 54 should be safe)\\r\\n\\r\\n\\t\\t\\tvar nVertexUniforms = capabilities.maxVertexUniforms;\\r\\n\\t\\t\\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\\r\\n\\r\\n\\t\\t\\tvar maxBones = nVertexMatrices;\\r\\n\\r\\n\\t\\t\\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\\r\\n\\r\\n\\t\\t\\t\\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\\r\\n\\r\\n\\t\\t\\t\\tif ( maxBones < object.skeleton.bones.length ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn maxBones;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\\r\\n\\r\\n\\t\\tvar encoding;\\r\\n\\r\\n\\t\\tif ( ! map ) {\\r\\n\\r\\n\\t\\t\\tencoding = THREE.LinearEncoding;\\r\\n\\r\\n\\t\\t} else if ( map instanceof THREE.Texture ) {\\r\\n\\r\\n\\t\\t\\tencoding = map.encoding;\\r\\n\\r\\n\\t\\t} else if ( map instanceof THREE.WebGLRenderTarget ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( \\\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\\\" );\\r\\n\\t\\t\\tencoding = map.texture.encoding;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\\r\\n\\t\\tif ( encoding === THREE.LinearEncoding && gammaOverrideLinear ) {\\r\\n\\r\\n\\t\\t\\tencoding = THREE.GammaEncoding;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn encoding;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.getParameters = function ( material, lights, fog, nClipPlanes, object ) {\\r\\n\\r\\n\\t\\tvar shaderID = shaderIDs[ material.type ];\\r\\n\\r\\n\\t\\t// heuristics to create shader parameters according to lights in the scene\\r\\n\\t\\t// (not to blow over maxLights budget)\\r\\n\\r\\n\\t\\tvar maxBones = allocateBones( object );\\r\\n\\t\\tvar precision = renderer.getPrecision();\\r\\n\\r\\n\\t\\tif ( material.precision !== null ) {\\r\\n\\r\\n\\t\\t\\tprecision = capabilities.getMaxPrecision( material.precision );\\r\\n\\r\\n\\t\\t\\tif ( precision !== material.precision ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\\r\\n\\r\\n\\t\\tvar parameters = {\\r\\n\\r\\n\\t\\t\\tshaderID: shaderID,\\r\\n\\r\\n\\t\\t\\tprecision: precision,\\r\\n\\t\\t\\tsupportsVertexTextures: capabilities.vertexTextures,\\r\\n\\t\\t\\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\\r\\n\\t\\t\\tmap: !! material.map,\\r\\n\\t\\t\\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\\r\\n\\t\\t\\tenvMap: !! material.envMap,\\r\\n\\t\\t\\tenvMapMode: material.envMap && material.envMap.mapping,\\r\\n\\t\\t\\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\\r\\n\\t\\t\\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === THREE.CubeUVReflectionMapping ) || ( material.envMap.mapping === THREE.CubeUVRefractionMapping ) ),\\r\\n\\t\\t\\tlightMap: !! material.lightMap,\\r\\n\\t\\t\\taoMap: !! material.aoMap,\\r\\n\\t\\t\\temissiveMap: !! material.emissiveMap,\\r\\n\\t\\t\\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\\r\\n\\t\\t\\tbumpMap: !! material.bumpMap,\\r\\n\\t\\t\\tnormalMap: !! material.normalMap,\\r\\n\\t\\t\\tdisplacementMap: !! material.displacementMap,\\r\\n\\t\\t\\troughnessMap: !! material.roughnessMap,\\r\\n\\t\\t\\tmetalnessMap: !! material.metalnessMap,\\r\\n\\t\\t\\tspecularMap: !! material.specularMap,\\r\\n\\t\\t\\talphaMap: !! material.alphaMap,\\r\\n\\r\\n\\t\\t\\tcombine: material.combine,\\r\\n\\r\\n\\t\\t\\tvertexColors: material.vertexColors,\\r\\n\\r\\n\\t\\t\\tfog: fog,\\r\\n\\t\\t\\tuseFog: material.fog,\\r\\n\\t\\t\\tfogExp: fog instanceof THREE.FogExp2,\\r\\n\\r\\n\\t\\t\\tflatShading: material.shading === THREE.FlatShading,\\r\\n\\r\\n\\t\\t\\tsizeAttenuation: material.sizeAttenuation,\\r\\n\\t\\t\\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\\r\\n\\r\\n\\t\\t\\tskinning: material.skinning,\\r\\n\\t\\t\\tmaxBones: maxBones,\\r\\n\\t\\t\\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\\r\\n\\r\\n\\t\\t\\tmorphTargets: material.morphTargets,\\r\\n\\t\\t\\tmorphNormals: material.morphNormals,\\r\\n\\t\\t\\tmaxMorphTargets: renderer.maxMorphTargets,\\r\\n\\t\\t\\tmaxMorphNormals: renderer.maxMorphNormals,\\r\\n\\r\\n\\t\\t\\tnumDirLights: lights.directional.length,\\r\\n\\t\\t\\tnumPointLights: lights.point.length,\\r\\n\\t\\t\\tnumSpotLights: lights.spot.length,\\r\\n\\t\\t\\tnumHemiLights: lights.hemi.length,\\r\\n\\r\\n\\t\\t\\tnumClippingPlanes: nClipPlanes,\\r\\n\\r\\n\\t\\t\\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\\r\\n\\t\\t\\tshadowMapType: renderer.shadowMap.type,\\r\\n\\r\\n\\t\\t\\ttoneMapping: renderer.toneMapping,\\r\\n\\t\\t\\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\\r\\n\\r\\n\\t\\t\\tpremultipliedAlpha: material.premultipliedAlpha,\\r\\n\\r\\n\\t\\t\\talphaTest: material.alphaTest,\\r\\n\\t\\t\\tdoubleSided: material.side === THREE.DoubleSide,\\r\\n\\t\\t\\tflipSided: material.side === THREE.BackSide,\\r\\n\\r\\n\\t\\t\\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\treturn parameters;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.getProgramCode = function ( material, parameters ) {\\r\\n\\r\\n\\t\\tvar array = [];\\r\\n\\r\\n\\t\\tif ( parameters.shaderID ) {\\r\\n\\r\\n\\t\\t\\tarray.push( parameters.shaderID );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tarray.push( material.fragmentShader );\\r\\n\\t\\t\\tarray.push( material.vertexShader );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( material.defines !== undefined ) {\\r\\n\\r\\n\\t\\t\\tfor ( var name in material.defines ) {\\r\\n\\r\\n\\t\\t\\t\\tarray.push( name );\\r\\n\\t\\t\\t\\tarray.push( material.defines[ name ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tarray.push( parameters[ parameterNames[ i ] ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn array.join();\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.acquireProgram = function ( material, parameters, code ) {\\r\\n\\r\\n\\t\\tvar program;\\r\\n\\r\\n\\t\\t// Check if code has been already compiled\\r\\n\\t\\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\\r\\n\\r\\n\\t\\t\\tvar programInfo = programs[ p ];\\r\\n\\r\\n\\t\\t\\tif ( programInfo.code === code ) {\\r\\n\\r\\n\\t\\t\\t\\tprogram = programInfo;\\r\\n\\t\\t\\t\\t++ program.usedTimes;\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( program === undefined ) {\\r\\n\\r\\n\\t\\t\\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\\r\\n\\t\\t\\tprograms.push( program );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn program;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.releaseProgram = function( program ) {\\r\\n\\r\\n\\t\\tif ( -- program.usedTimes === 0 ) {\\r\\n\\r\\n\\t\\t\\t// Remove from unordered set\\r\\n\\t\\t\\tvar i = programs.indexOf( program );\\r\\n\\t\\t\\tprograms[ i ] = programs[ programs.length - 1 ];\\r\\n\\t\\t\\tprograms.pop();\\r\\n\\r\\n\\t\\t\\t// Free WebGL resources\\r\\n\\t\\t\\tprogram.destroy();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// Exposed for resource monitoring & error feedback via renderer.info:\\r\\n\\tthis.programs = programs;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/WebGLProperties.js\\r\\n\\r\\n/**\\r\\n* @author fordacious / fordacious.github.io\\r\\n*/\\r\\n\\r\\nTHREE.WebGLProperties = function () {\\r\\n\\r\\n\\tvar properties = {};\\r\\n\\r\\n\\tthis.get = function ( object ) {\\r\\n\\r\\n\\t\\tvar uuid = object.uuid;\\r\\n\\t\\tvar map = properties[ uuid ];\\r\\n\\r\\n\\t\\tif ( map === undefined ) {\\r\\n\\r\\n\\t\\t\\tmap = {};\\r\\n\\t\\t\\tproperties[ uuid ] = map;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn map;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.delete = function ( object ) {\\r\\n\\r\\n\\t\\tdelete properties[ object.uuid ];\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.clear = function () {\\r\\n\\r\\n\\t\\tproperties = {};\\r\\n\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/WebGLShader.js\\r\\n\\r\\nTHREE.WebGLShader = ( function () {\\r\\n\\r\\n\\tfunction addLineNumbers( string ) {\\r\\n\\r\\n\\t\\tvar lines = string.split( '\\\\n' );\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < lines.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn lines.join( '\\\\n' );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn function WebGLShader( gl, type, string ) {\\r\\n\\r\\n\\t\\tvar shader = gl.createShader( type );\\r\\n\\r\\n\\t\\tgl.shaderSource( shader, string );\\r\\n\\t\\tgl.compileShader( shader );\\r\\n\\r\\n\\t\\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( 'THREE.WebGLShader: Shader couldn\\\\'t compile.' );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// --enable-privileged-webgl-extension\\r\\n\\t\\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\\r\\n\\r\\n\\t\\treturn shader;\\r\\n\\r\\n\\t};\\r\\n\\r\\n} )();\\r\\n\\r\\n// File:src/renderers/webgl/WebGLShadowMap.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\\r\\n\\r\\n\\tvar _gl = _renderer.context,\\r\\n\\t_state = _renderer.state,\\r\\n\\t_frustum = new THREE.Frustum(),\\r\\n\\t_projScreenMatrix = new THREE.Matrix4(),\\r\\n\\r\\n\\t_lightShadows = _lights.shadows,\\r\\n\\r\\n\\t_shadowMapSize = new THREE.Vector2(),\\r\\n\\r\\n\\t_lookTarget = new THREE.Vector3(),\\r\\n\\t_lightPositionWorld = new THREE.Vector3(),\\r\\n\\r\\n\\t_renderList = [],\\r\\n\\r\\n\\t_MorphingFlag = 1,\\r\\n\\t_SkinningFlag = 2,\\r\\n\\r\\n\\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\\r\\n\\r\\n\\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\\r\\n\\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\\r\\n\\r\\n\\t_materialCache = {};\\r\\n\\r\\n\\tvar cubeDirections = [\\r\\n\\t\\tnew THREE.Vector3( 1, 0, 0 ), new THREE.Vector3( - 1, 0, 0 ), new THREE.Vector3( 0, 0, 1 ),\\r\\n\\t\\tnew THREE.Vector3( 0, 0, - 1 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 )\\r\\n\\t];\\r\\n\\r\\n\\tvar cubeUps = [\\r\\n\\t\\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ),\\r\\n\\t\\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 0, 1 ),\\tnew THREE.Vector3( 0, 0, - 1 )\\r\\n\\t];\\r\\n\\r\\n\\tvar cube2DViewPorts = [\\r\\n\\t\\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(),\\r\\n\\t\\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()\\r\\n\\t];\\r\\n\\r\\n\\t// init\\r\\n\\r\\n\\tvar depthMaterialTemplate = new THREE.MeshDepthMaterial();\\r\\n\\tdepthMaterialTemplate.depthPacking = THREE.RGBADepthPacking;\\r\\n\\tdepthMaterialTemplate.clipping = true;\\r\\n\\r\\n\\tvar distanceShader = THREE.ShaderLib[ \\\"distanceRGBA\\\" ];\\r\\n\\tvar distanceUniforms = THREE.UniformsUtils.clone( distanceShader.uniforms );\\r\\n\\r\\n\\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\\r\\n\\r\\n\\t\\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\\r\\n\\t\\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\\r\\n\\r\\n\\t\\tvar depthMaterial = depthMaterialTemplate.clone();\\r\\n\\t\\tdepthMaterial.morphTargets = useMorphing;\\r\\n\\t\\tdepthMaterial.skinning = useSkinning;\\r\\n\\r\\n\\t\\t_depthMaterials[ i ] = depthMaterial;\\r\\n\\r\\n\\t\\tvar distanceMaterial = new THREE.ShaderMaterial( {\\r\\n\\t\\t\\tdefines: {\\r\\n\\t\\t\\t\\t'USE_SHADOWMAP': ''\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tuniforms: distanceUniforms,\\r\\n\\t\\t\\tvertexShader: distanceShader.vertexShader,\\r\\n\\t\\t\\tfragmentShader: distanceShader.fragmentShader,\\r\\n\\t\\t\\tmorphTargets: useMorphing,\\r\\n\\t\\t\\tskinning: useSkinning,\\r\\n\\t\\t\\tclipping: true\\r\\n\\t\\t} );\\r\\n\\r\\n\\t\\t_distanceMaterials[ i ] = distanceMaterial;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tthis.enabled = false;\\r\\n\\r\\n\\tthis.autoUpdate = true;\\r\\n\\tthis.needsUpdate = false;\\r\\n\\r\\n\\tthis.type = THREE.PCFShadowMap;\\r\\n\\r\\n\\tthis.renderReverseSided = true;\\r\\n\\tthis.renderSingleSided = true;\\r\\n\\r\\n\\tthis.render = function ( scene, camera ) {\\r\\n\\r\\n\\t\\tif ( scope.enabled === false ) return;\\r\\n\\t\\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\\r\\n\\r\\n\\t\\tif ( _lightShadows.length === 0 ) return;\\r\\n\\r\\n\\t\\t// Set GL state for depth map.\\r\\n\\t\\t_state.clearColor( 1, 1, 1, 1 );\\r\\n\\t\\t_state.disable( _gl.BLEND );\\r\\n\\t\\t_state.setDepthTest( true );\\r\\n\\t\\t_state.setScissorTest( false );\\r\\n\\r\\n\\t\\t// render depth map\\r\\n\\r\\n\\t\\tvar faceCount, isPointLight;\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar light = _lightShadows[ i ];\\r\\n\\t\\t\\tvar shadow = light.shadow;\\r\\n\\r\\n\\t\\t\\tif ( shadow === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar shadowCamera = shadow.camera;\\r\\n\\r\\n\\t\\t\\t_shadowMapSize.copy( shadow.mapSize );\\r\\n\\r\\n\\t\\t\\tif ( light instanceof THREE.PointLight ) {\\r\\n\\r\\n\\t\\t\\t\\tfaceCount = 6;\\r\\n\\t\\t\\t\\tisPointLight = true;\\r\\n\\r\\n\\t\\t\\t\\tvar vpWidth = _shadowMapSize.x;\\r\\n\\t\\t\\t\\tvar vpHeight = _shadowMapSize.y;\\r\\n\\r\\n\\t\\t\\t\\t// These viewports map a cube-map onto a 2D texture with the\\r\\n\\t\\t\\t\\t// following orientation:\\r\\n\\t\\t\\t\\t//\\r\\n\\t\\t\\t\\t//  xzXZ\\r\\n\\t\\t\\t\\t//   y Y\\r\\n\\t\\t\\t\\t//\\r\\n\\t\\t\\t\\t// X - Positive x direction\\r\\n\\t\\t\\t\\t// x - Negative x direction\\r\\n\\t\\t\\t\\t// Y - Positive y direction\\r\\n\\t\\t\\t\\t// y - Negative y direction\\r\\n\\t\\t\\t\\t// Z - Positive z direction\\r\\n\\t\\t\\t\\t// z - Negative z direction\\r\\n\\r\\n\\t\\t\\t\\t// positive X\\r\\n\\t\\t\\t\\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\\r\\n\\t\\t\\t\\t// negative X\\r\\n\\t\\t\\t\\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\\r\\n\\t\\t\\t\\t// positive Z\\r\\n\\t\\t\\t\\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\\r\\n\\t\\t\\t\\t// negative Z\\r\\n\\t\\t\\t\\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\\r\\n\\t\\t\\t\\t// positive Y\\r\\n\\t\\t\\t\\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\\r\\n\\t\\t\\t\\t// negative Y\\r\\n\\t\\t\\t\\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\\r\\n\\r\\n\\t\\t\\t\\t_shadowMapSize.x *= 4.0;\\r\\n\\t\\t\\t\\t_shadowMapSize.y *= 2.0;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tfaceCount = 1;\\r\\n\\t\\t\\t\\tisPointLight = false;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( shadow.map === null ) {\\r\\n\\r\\n\\t\\t\\t\\tvar pars = { minFilter: THREE.NearestFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\\r\\n\\r\\n\\t\\t\\t\\tshadow.map = new THREE.WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\\r\\n\\r\\n\\t\\t\\t\\tshadowCamera.updateProjectionMatrix();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( shadow instanceof THREE.SpotLightShadow ) {\\r\\n\\r\\n\\t\\t\\t\\tshadow.update( light );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar shadowMap = shadow.map;\\r\\n\\t\\t\\tvar shadowMatrix = shadow.matrix;\\r\\n\\r\\n\\t\\t\\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\\r\\n\\t\\t\\tshadowCamera.position.copy( _lightPositionWorld );\\r\\n\\r\\n\\t\\t\\t_renderer.setRenderTarget( shadowMap );\\r\\n\\t\\t\\t_renderer.clear();\\r\\n\\r\\n\\t\\t\\t// render shadow map for each cube face (if omni-directional) or\\r\\n\\t\\t\\t// run a single pass if not\\r\\n\\r\\n\\t\\t\\tfor ( var face = 0; face < faceCount; face ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( isPointLight ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t_lookTarget.copy( shadowCamera.position );\\r\\n\\t\\t\\t\\t\\t_lookTarget.add( cubeDirections[ face ] );\\r\\n\\t\\t\\t\\t\\tshadowCamera.up.copy( cubeUps[ face ] );\\r\\n\\t\\t\\t\\t\\tshadowCamera.lookAt( _lookTarget );\\r\\n\\r\\n\\t\\t\\t\\t\\tvar vpDimensions = cube2DViewPorts[ face ];\\r\\n\\t\\t\\t\\t\\t_state.viewport( vpDimensions );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\\r\\n\\t\\t\\t\\t\\tshadowCamera.lookAt( _lookTarget );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tshadowCamera.updateMatrixWorld();\\r\\n\\t\\t\\t\\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\\r\\n\\r\\n\\t\\t\\t\\t// compute shadow matrix\\r\\n\\r\\n\\t\\t\\t\\tshadowMatrix.set(\\r\\n\\t\\t\\t\\t\\t0.5, 0.0, 0.0, 0.5,\\r\\n\\t\\t\\t\\t\\t0.0, 0.5, 0.0, 0.5,\\r\\n\\t\\t\\t\\t\\t0.0, 0.0, 0.5, 0.5,\\r\\n\\t\\t\\t\\t\\t0.0, 0.0, 0.0, 1.0\\r\\n\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\\r\\n\\t\\t\\t\\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\\r\\n\\r\\n\\t\\t\\t\\t// update camera matrices and frustum\\r\\n\\r\\n\\t\\t\\t\\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\\r\\n\\t\\t\\t\\t_frustum.setFromMatrix( _projScreenMatrix );\\r\\n\\r\\n\\t\\t\\t\\t// set object matrices & frustum culling\\r\\n\\r\\n\\t\\t\\t\\t_renderList.length = 0;\\r\\n\\r\\n\\t\\t\\t\\tprojectObject( scene, camera, shadowCamera );\\r\\n\\r\\n\\t\\t\\t\\t// render shadow map\\r\\n\\t\\t\\t\\t// render regular objects\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar object = _renderList[ j ];\\r\\n\\t\\t\\t\\t\\tvar geometry = _objects.update( object );\\r\\n\\t\\t\\t\\t\\tvar material = object.material;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( material instanceof THREE.MultiMaterial ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar groups = geometry.groups;\\r\\n\\t\\t\\t\\t\\t\\tvar materials = material.materials;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvar group = groups[ k ];\\r\\n\\t\\t\\t\\t\\t\\t\\tvar groupMaterial = materials[ group.materialIndex ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( groupMaterial.visible === true ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\\r\\n\\t\\t\\t\\t\\t\\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Restore GL state.\\r\\n\\t\\tvar clearColor = _renderer.getClearColor(),\\r\\n\\t\\tclearAlpha = _renderer.getClearAlpha();\\r\\n\\t\\t_renderer.setClearColor( clearColor, clearAlpha );\\r\\n\\r\\n\\t\\tscope.needsUpdate = false;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\\r\\n\\r\\n\\t\\tvar geometry = object.geometry;\\r\\n\\r\\n\\t\\tvar result = null;\\r\\n\\r\\n\\t\\tvar materialVariants = _depthMaterials;\\r\\n\\t\\tvar customMaterial = object.customDepthMaterial;\\r\\n\\r\\n\\t\\tif ( isPointLight ) {\\r\\n\\r\\n\\t\\t\\tmaterialVariants = _distanceMaterials;\\r\\n\\t\\t\\tcustomMaterial = object.customDistanceMaterial;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( ! customMaterial ) {\\r\\n\\r\\n\\t\\t\\tvar useMorphing = geometry.morphTargets !== undefined &&\\r\\n\\t\\t\\t\\t\\tgeometry.morphTargets.length > 0 && material.morphTargets;\\r\\n\\r\\n\\t\\t\\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\\r\\n\\r\\n\\t\\t\\tvar variantIndex = 0;\\r\\n\\r\\n\\t\\t\\tif ( useMorphing ) variantIndex |= _MorphingFlag;\\r\\n\\t\\t\\tif ( useSkinning ) variantIndex |= _SkinningFlag;\\r\\n\\r\\n\\t\\t\\tresult = materialVariants[ variantIndex ];\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tresult = customMaterial;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( _renderer.localClippingEnabled &&\\r\\n\\t\\t\\t material.clipShadows === true &&\\r\\n\\t\\t\\t\\tmaterial.clippingPlanes.length !== 0 ) {\\r\\n\\r\\n\\t\\t\\t// in this case we need a unique material instance reflecting the\\r\\n\\t\\t\\t// appropriate state\\r\\n\\r\\n\\t\\t\\tvar keyA = result.uuid, keyB = material.uuid;\\r\\n\\r\\n\\t\\t\\tvar materialsForVariant = _materialCache[ keyA ];\\r\\n\\r\\n\\t\\t\\tif ( materialsForVariant === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tmaterialsForVariant = {};\\r\\n\\t\\t\\t\\t_materialCache[ keyA ] = materialsForVariant;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar cachedMaterial = materialsForVariant[ keyB ];\\r\\n\\r\\n\\t\\t\\tif ( cachedMaterial === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tcachedMaterial = result.clone();\\r\\n\\t\\t\\t\\tmaterialsForVariant[ keyB ] = cachedMaterial;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tresult = cachedMaterial;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tresult.visible = material.visible;\\r\\n\\t\\tresult.wireframe = material.wireframe;\\r\\n\\r\\n\\t\\tvar side = material.side;\\r\\n\\r\\n\\t\\tif ( scope.renderSingleSided && side == THREE.DoubleSide ) {\\r\\n\\r\\n\\t\\t\\tside = THREE.FrontSide;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( scope.renderReverseSided ) {\\r\\n\\r\\n\\t\\t\\tif ( side === THREE.FrontSide ) side = THREE.BackSide;\\r\\n\\t\\t\\telse if ( side === THREE.BackSide ) side = THREE.FrontSide;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tresult.side = side;\\r\\n\\r\\n\\t\\tresult.clipShadows = material.clipShadows;\\r\\n\\t\\tresult.clippingPlanes = material.clippingPlanes;\\r\\n\\r\\n\\t\\tresult.wireframeLinewidth = material.wireframeLinewidth;\\r\\n\\t\\tresult.linewidth = material.linewidth;\\r\\n\\r\\n\\t\\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\\r\\n\\r\\n\\t\\t\\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn result;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction projectObject( object, camera, shadowCamera ) {\\r\\n\\r\\n\\t\\tif ( object.visible === false ) return;\\r\\n\\r\\n\\t\\tif ( object.layers.test( camera.layers ) && ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) ) {\\r\\n\\r\\n\\t\\t\\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\\r\\n\\r\\n\\t\\t\\t\\tvar material = object.material;\\r\\n\\r\\n\\t\\t\\t\\tif ( material.visible === true ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\\r\\n\\t\\t\\t\\t\\t_renderList.push( object );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar children = object.children;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tprojectObject( children[ i ], camera, shadowCamera );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/WebGLState.js\\r\\n\\r\\n/**\\r\\n* @author mrdoob / http://mrdoob.com/\\r\\n*/\\r\\n\\r\\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\\r\\n\\r\\n\\tvar _this = this;\\r\\n\\r\\n\\tthis.buffers = {\\r\\n\\t\\tcolor: new THREE.WebGLColorBuffer( gl, this ),\\r\\n\\t\\tdepth: new THREE.WebGLDepthBuffer( gl, this ),\\r\\n\\t\\tstencil: new THREE.WebGLStencilBuffer( gl, this )\\r\\n\\t};\\r\\n\\r\\n\\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\\r\\n\\tvar newAttributes = new Uint8Array( maxVertexAttributes );\\r\\n\\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\\r\\n\\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\\r\\n\\r\\n\\tvar capabilities = {};\\r\\n\\r\\n\\tvar compressedTextureFormats = null;\\r\\n\\r\\n\\tvar currentBlending = null;\\r\\n\\tvar currentBlendEquation = null;\\r\\n\\tvar currentBlendSrc = null;\\r\\n\\tvar currentBlendDst = null;\\r\\n\\tvar currentBlendEquationAlpha = null;\\r\\n\\tvar currentBlendSrcAlpha = null;\\r\\n\\tvar currentBlendDstAlpha = null;\\r\\n\\tvar currentPremultipledAlpha = false;\\r\\n\\r\\n\\tvar currentFlipSided = null;\\r\\n\\tvar currentCullFace = null;\\r\\n\\r\\n\\tvar currentLineWidth = null;\\r\\n\\r\\n\\tvar currentPolygonOffsetFactor = null;\\r\\n\\tvar currentPolygonOffsetUnits = null;\\r\\n\\r\\n\\tvar currentScissorTest = null;\\r\\n\\r\\n\\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\\r\\n\\r\\n\\tvar currentTextureSlot = null;\\r\\n\\tvar currentBoundTextures = {};\\r\\n\\r\\n\\tvar currentScissor = new THREE.Vector4();\\r\\n\\tvar currentViewport = new THREE.Vector4();\\r\\n\\r\\n\\tfunction createTexture( type, target, count ) {\\r\\n\\r\\n\\t\\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\\r\\n\\t\\tvar texture = gl.createTexture();\\r\\n\\r\\n\\t\\tgl.bindTexture( type, texture );\\r\\n\\t\\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\\r\\n\\t\\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < count; i ++ ) {\\r\\n\\r\\n\\t\\t\\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn texture;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar emptyTextures = {};\\r\\n\\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\\r\\n\\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tthis.init = function () {\\r\\n\\r\\n\\t\\tthis.clearColor( 0, 0, 0, 1 );\\r\\n\\t\\tthis.clearDepth( 1 );\\r\\n\\t\\tthis.clearStencil( 0 );\\r\\n\\r\\n\\t\\tthis.enable( gl.DEPTH_TEST );\\r\\n\\t\\tthis.setDepthFunc( THREE.LessEqualDepth );\\r\\n\\r\\n\\t\\tthis.setFlipSided( false );\\r\\n\\t\\tthis.setCullFace( THREE.CullFaceBack );\\r\\n\\t\\tthis.enable( gl.CULL_FACE );\\r\\n\\r\\n\\t\\tthis.enable( gl.BLEND );\\r\\n\\t\\tthis.setBlending( THREE.NormalBlending );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.initAttributes = function () {\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tnewAttributes[ i ] = 0;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.enableAttribute = function ( attribute ) {\\r\\n\\r\\n\\t\\tnewAttributes[ attribute ] = 1;\\r\\n\\r\\n\\t\\tif ( enabledAttributes[ attribute ] === 0 ) {\\r\\n\\r\\n\\t\\t\\tgl.enableVertexAttribArray( attribute );\\r\\n\\t\\t\\tenabledAttributes[ attribute ] = 1;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( attributeDivisors[ attribute ] !== 0 ) {\\r\\n\\r\\n\\t\\t\\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\\r\\n\\r\\n\\t\\t\\textension.vertexAttribDivisorANGLE( attribute, 0 );\\r\\n\\t\\t\\tattributeDivisors[ attribute ] = 0;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.enableAttributeAndDivisor = function ( attribute, meshPerAttribute, extension ) {\\r\\n\\r\\n\\t\\tnewAttributes[ attribute ] = 1;\\r\\n\\r\\n\\t\\tif ( enabledAttributes[ attribute ] === 0 ) {\\r\\n\\r\\n\\t\\t\\tgl.enableVertexAttribArray( attribute );\\r\\n\\t\\t\\tenabledAttributes[ attribute ] = 1;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\\r\\n\\r\\n\\t\\t\\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\\r\\n\\t\\t\\tattributeDivisors[ attribute ] = meshPerAttribute;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.disableUnusedAttributes = function () {\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\\r\\n\\r\\n\\t\\t\\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\\r\\n\\r\\n\\t\\t\\t\\tgl.disableVertexAttribArray( i );\\r\\n\\t\\t\\t\\tenabledAttributes[ i ] = 0;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.enable = function ( id ) {\\r\\n\\r\\n\\t\\tif ( capabilities[ id ] !== true ) {\\r\\n\\r\\n\\t\\t\\tgl.enable( id );\\r\\n\\t\\t\\tcapabilities[ id ] = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.disable = function ( id ) {\\r\\n\\r\\n\\t\\tif ( capabilities[ id ] !== false ) {\\r\\n\\r\\n\\t\\t\\tgl.disable( id );\\r\\n\\t\\t\\tcapabilities[ id ] = false;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.getCompressedTextureFormats = function () {\\r\\n\\r\\n\\t\\tif ( compressedTextureFormats === null ) {\\r\\n\\r\\n\\t\\t\\tcompressedTextureFormats = [];\\r\\n\\r\\n\\t\\t\\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\\r\\n\\t\\t\\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\\r\\n\\t\\t\\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\\r\\n\\r\\n\\t\\t\\t\\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0; i < formats.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tcompressedTextureFormats.push( formats[ i ] );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn compressedTextureFormats;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\\r\\n\\r\\n\\t\\tif ( blending !== THREE.NoBlending ) {\\r\\n\\r\\n\\t\\t\\tthis.enable( gl.BLEND );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.disable( gl.BLEND );\\r\\n\\t\\t\\tcurrentBlending = blending; // no blending, that is\\r\\n\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\\r\\n\\r\\n\\t\\t\\tif ( blending === THREE.AdditiveBlending ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( premultipliedAlpha ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\r\\n\\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tgl.blendEquation( gl.FUNC_ADD );\\r\\n\\t\\t\\t\\t\\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else if ( blending === THREE.SubtractiveBlending ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( premultipliedAlpha ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\r\\n\\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tgl.blendEquation( gl.FUNC_ADD );\\r\\n\\t\\t\\t\\t\\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else if ( blending === THREE.MultiplyBlending ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( premultipliedAlpha ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\r\\n\\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tgl.blendEquation( gl.FUNC_ADD );\\r\\n\\t\\t\\t\\t\\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tif ( premultipliedAlpha ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\r\\n\\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\r\\n\\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tcurrentBlending = blending;\\r\\n\\t\\t\\tcurrentPremultipledAlpha = premultipliedAlpha;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( blending === THREE.CustomBlending ) {\\r\\n\\r\\n\\t\\t\\tblendEquationAlpha = blendEquationAlpha || blendEquation;\\r\\n\\t\\t\\tblendSrcAlpha = blendSrcAlpha || blendSrc;\\r\\n\\t\\t\\tblendDstAlpha = blendDstAlpha || blendDst;\\r\\n\\r\\n\\t\\t\\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\\r\\n\\r\\n\\t\\t\\t\\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\\r\\n\\r\\n\\t\\t\\t\\tcurrentBlendEquation = blendEquation;\\r\\n\\t\\t\\t\\tcurrentBlendEquationAlpha = blendEquationAlpha;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\\r\\n\\r\\n\\t\\t\\t\\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\\r\\n\\r\\n\\t\\t\\t\\tcurrentBlendSrc = blendSrc;\\r\\n\\t\\t\\t\\tcurrentBlendDst = blendDst;\\r\\n\\t\\t\\t\\tcurrentBlendSrcAlpha = blendSrcAlpha;\\r\\n\\t\\t\\t\\tcurrentBlendDstAlpha = blendDstAlpha;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tcurrentBlendEquation = null;\\r\\n\\t\\t\\tcurrentBlendSrc = null;\\r\\n\\t\\t\\tcurrentBlendDst = null;\\r\\n\\t\\t\\tcurrentBlendEquationAlpha = null;\\r\\n\\t\\t\\tcurrentBlendSrcAlpha = null;\\r\\n\\t\\t\\tcurrentBlendDstAlpha = null;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// TODO Deprecate\\r\\n\\r\\n\\tthis.setColorWrite = function ( colorWrite ) {\\r\\n\\r\\n\\t\\tthis.buffers.color.setMask( colorWrite );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setDepthTest = function ( depthTest ) {\\r\\n\\r\\n\\t\\tthis.buffers.depth.setTest( depthTest );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setDepthWrite = function ( depthWrite ) {\\r\\n\\r\\n\\t\\tthis.buffers.depth.setMask( depthWrite );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setDepthFunc = function ( depthFunc ) {\\r\\n\\r\\n\\t\\tthis.buffers.depth.setFunc( depthFunc );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setStencilTest = function ( stencilTest ) {\\r\\n\\r\\n\\t\\tthis.buffers.stencil.setTest( stencilTest );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setStencilWrite = function ( stencilWrite ) {\\r\\n\\r\\n\\t\\tthis.buffers.stencil.setMask( stencilWrite );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setStencilFunc = function ( stencilFunc, stencilRef, stencilMask ) {\\r\\n\\r\\n\\t\\tthis.buffers.stencil.setFunc( stencilFunc, stencilRef, stencilMask );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setStencilOp = function ( stencilFail, stencilZFail, stencilZPass ) {\\r\\n\\r\\n\\t\\tthis.buffers.stencil.setOp( stencilFail, stencilZFail, stencilZPass );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tthis.setFlipSided = function ( flipSided ) {\\r\\n\\r\\n\\t\\tif ( currentFlipSided !== flipSided ) {\\r\\n\\r\\n\\t\\t\\tif ( flipSided ) {\\r\\n\\r\\n\\t\\t\\t\\tgl.frontFace( gl.CW );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tgl.frontFace( gl.CCW );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tcurrentFlipSided = flipSided;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setCullFace = function ( cullFace ) {\\r\\n\\r\\n\\t\\tif ( cullFace !== THREE.CullFaceNone ) {\\r\\n\\r\\n\\t\\t\\tthis.enable( gl.CULL_FACE );\\r\\n\\r\\n\\t\\t\\tif ( cullFace !== currentCullFace ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( cullFace === THREE.CullFaceBack ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tgl.cullFace( gl.BACK );\\r\\n\\r\\n\\t\\t\\t\\t} else if ( cullFace === THREE.CullFaceFront ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tgl.cullFace( gl.FRONT );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tgl.cullFace( gl.FRONT_AND_BACK );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.disable( gl.CULL_FACE );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tcurrentCullFace = cullFace;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setLineWidth = function ( width ) {\\r\\n\\r\\n\\t\\tif ( width !== currentLineWidth ) {\\r\\n\\r\\n\\t\\t\\tgl.lineWidth( width );\\r\\n\\r\\n\\t\\t\\tcurrentLineWidth = width;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\\r\\n\\r\\n\\t\\tif ( polygonOffset ) {\\r\\n\\r\\n\\t\\t\\tthis.enable( gl.POLYGON_OFFSET_FILL );\\r\\n\\r\\n\\t\\t\\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\\r\\n\\r\\n\\t\\t\\t\\tgl.polygonOffset( factor, units );\\r\\n\\r\\n\\t\\t\\t\\tcurrentPolygonOffsetFactor = factor;\\r\\n\\t\\t\\t\\tcurrentPolygonOffsetUnits = units;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.disable( gl.POLYGON_OFFSET_FILL );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.getScissorTest = function () {\\r\\n\\r\\n\\t\\treturn currentScissorTest;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setScissorTest = function ( scissorTest ) {\\r\\n\\r\\n\\t\\tcurrentScissorTest = scissorTest;\\r\\n\\r\\n\\t\\tif ( scissorTest ) {\\r\\n\\r\\n\\t\\t\\tthis.enable( gl.SCISSOR_TEST );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.disable( gl.SCISSOR_TEST );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// texture\\r\\n\\r\\n\\tthis.activeTexture = function ( webglSlot ) {\\r\\n\\r\\n\\t\\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\\r\\n\\r\\n\\t\\tif ( currentTextureSlot !== webglSlot ) {\\r\\n\\r\\n\\t\\t\\tgl.activeTexture( webglSlot );\\r\\n\\t\\t\\tcurrentTextureSlot = webglSlot;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.bindTexture = function ( webglType, webglTexture ) {\\r\\n\\r\\n\\t\\tif ( currentTextureSlot === null ) {\\r\\n\\r\\n\\t\\t\\t_this.activeTexture();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\\r\\n\\r\\n\\t\\tif ( boundTexture === undefined ) {\\r\\n\\r\\n\\t\\t\\tboundTexture = { type: undefined, texture: undefined };\\r\\n\\t\\t\\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\\r\\n\\r\\n\\t\\t\\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\\r\\n\\r\\n\\t\\t\\tboundTexture.type = webglType;\\r\\n\\t\\t\\tboundTexture.texture = webglTexture;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.compressedTexImage2D = function () {\\r\\n\\r\\n\\t\\ttry {\\r\\n\\r\\n\\t\\t\\tgl.compressedTexImage2D.apply( gl, arguments );\\r\\n\\r\\n\\t\\t} catch ( error ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( error );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.texImage2D = function () {\\r\\n\\r\\n\\t\\ttry {\\r\\n\\r\\n\\t\\t\\tgl.texImage2D.apply( gl, arguments );\\r\\n\\r\\n\\t\\t} catch ( error ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( error );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// TODO Deprecate\\r\\n\\r\\n\\tthis.clearColor = function ( r, g, b, a ) {\\r\\n\\r\\n\\t\\tthis.buffers.color.setClear( r, g, b, a );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.clearDepth = function ( depth ) {\\r\\n\\r\\n\\t\\tthis.buffers.depth.setClear( depth );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.clearStencil = function ( stencil ) {\\r\\n\\r\\n\\t\\tthis.buffers.stencil.setClear( stencil );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tthis.scissor = function ( scissor ) {\\r\\n\\r\\n\\t\\tif ( currentScissor.equals( scissor ) === false ) {\\r\\n\\r\\n\\t\\t\\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\\r\\n\\t\\t\\tcurrentScissor.copy( scissor );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.viewport = function ( viewport ) {\\r\\n\\r\\n\\t\\tif ( currentViewport.equals( viewport ) === false ) {\\r\\n\\r\\n\\t\\t\\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\\r\\n\\t\\t\\tcurrentViewport.copy( viewport );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tthis.reset = function () {\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tif ( enabledAttributes[ i ] === 1 ) {\\r\\n\\r\\n\\t\\t\\t\\tgl.disableVertexAttribArray( i );\\r\\n\\t\\t\\t\\tenabledAttributes[ i ] = 0;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tcapabilities = {};\\r\\n\\r\\n\\t\\tcompressedTextureFormats = null;\\r\\n\\r\\n\\t\\tcurrentTextureSlot = null;\\r\\n\\t\\tcurrentBoundTextures = {};\\r\\n\\r\\n\\t\\tcurrentBlending = null;\\r\\n\\r\\n\\t\\tcurrentFlipSided = null;\\r\\n\\t\\tcurrentCullFace = null;\\r\\n\\r\\n\\t\\tthis.buffers.color.reset();\\r\\n\\t\\tthis.buffers.depth.reset();\\r\\n\\t\\tthis.buffers.stencil.reset();\\r\\n\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.WebGLColorBuffer = function ( gl, state ) {\\r\\n\\r\\n\\tvar locked = false;\\r\\n\\r\\n\\tvar color = new THREE.Vector4();\\r\\n\\tvar currentColorMask = null;\\r\\n\\tvar currentColorClear = new THREE.Vector4();\\r\\n\\r\\n\\tthis.setMask = function ( colorMask ) {\\r\\n\\r\\n\\t\\tif ( currentColorMask !== colorMask && ! locked ) {\\r\\n\\r\\n\\t\\t\\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\\r\\n\\t\\t\\tcurrentColorMask = colorMask;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setLocked = function ( lock ) {\\r\\n\\r\\n\\t\\tlocked = lock;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setClear = function ( r, g, b, a ) {\\r\\n\\r\\n\\t\\tcolor.set( r, g, b, a );\\r\\n\\r\\n\\t\\tif ( currentColorClear.equals( color ) === false ) {\\r\\n\\r\\n\\t\\t\\tgl.clearColor( r, g, b, a );\\r\\n\\t\\t\\tcurrentColorClear.copy( color );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.reset = function () {\\r\\n\\r\\n\\t\\tlocked = false;\\r\\n\\r\\n\\t\\tcurrentColorMask = null;\\r\\n\\t\\tcurrentColorClear = new THREE.Vector4();\\r\\n\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.WebGLDepthBuffer = function( gl, state ) {\\r\\n\\r\\n\\tvar locked = false;\\r\\n\\r\\n\\tvar currentDepthMask = null;\\r\\n\\tvar currentDepthFunc = null;\\r\\n\\tvar currentDepthClear = null;\\r\\n\\r\\n\\tthis.setTest = function ( depthTest ) {\\r\\n\\r\\n\\t\\tif ( depthTest ) {\\r\\n\\r\\n\\t\\t\\tstate.enable( gl.DEPTH_TEST );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tstate.disable( gl.DEPTH_TEST );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setMask = function( depthMask ){\\r\\n\\r\\n\\t\\tif ( currentDepthMask !== depthMask && ! locked ) {\\r\\n\\r\\n\\t\\t\\tgl.depthMask( depthMask );\\r\\n\\t\\t\\tcurrentDepthMask = depthMask;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setFunc = function ( depthFunc ) {\\r\\n\\r\\n\\t\\tif ( currentDepthFunc !== depthFunc ) {\\r\\n\\r\\n\\t\\t\\tif ( depthFunc ) {\\r\\n\\r\\n\\t\\t\\t\\tswitch ( depthFunc ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tcase THREE.NeverDepth:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.NEVER );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase THREE.AlwaysDepth:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.ALWAYS );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase THREE.LessDepth:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.LESS );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase THREE.LessEqualDepth:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.LEQUAL );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase THREE.EqualDepth:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.EQUAL );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase THREE.GreaterEqualDepth:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.GEQUAL );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase THREE.GreaterDepth:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.GREATER );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tcase THREE.NotEqualDepth:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.NOTEQUAL );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\tdefault:\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.LEQUAL );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tgl.depthFunc( gl.LEQUAL );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tcurrentDepthFunc = depthFunc;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setLocked = function ( lock ) {\\r\\n\\r\\n\\t\\tlocked = lock;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setClear = function ( depth ) {\\r\\n\\r\\n\\t\\tif ( currentDepthClear !== depth ) {\\r\\n\\r\\n\\t\\t\\tgl.clearDepth( depth );\\r\\n\\t\\t\\tcurrentDepthClear = depth;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.reset = function () {\\r\\n\\r\\n\\t\\tlocked = false;\\r\\n\\r\\n\\t\\tcurrentDepthMask = null;\\r\\n\\t\\tcurrentDepthFunc = null;\\r\\n\\t\\tcurrentDepthClear = null;\\r\\n\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.WebGLStencilBuffer = function ( gl, state ) {\\r\\n\\r\\n\\tvar locked = false;\\r\\n\\r\\n\\tvar currentStencilMask = null;\\r\\n\\tvar currentStencilFunc = null;\\r\\n\\tvar currentStencilRef = null;\\r\\n\\tvar currentStencilFuncMask = null;\\r\\n\\tvar currentStencilFail  = null;\\r\\n\\tvar currentStencilZFail = null;\\r\\n\\tvar currentStencilZPass = null;\\r\\n\\tvar currentStencilClear = null;\\r\\n\\r\\n\\tthis.setTest = function ( stencilTest ) {\\r\\n\\r\\n\\t\\tif ( stencilTest ) {\\r\\n\\r\\n\\t\\t\\tstate.enable( gl.STENCIL_TEST );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tstate.disable( gl.STENCIL_TEST );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setMask = function ( stencilMask ) {\\r\\n\\r\\n\\t\\tif ( currentStencilMask !== stencilMask && ! locked ) {\\r\\n\\r\\n\\t\\t\\tgl.stencilMask( stencilMask );\\r\\n\\t\\t\\tcurrentStencilMask = stencilMask;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setFunc = function ( stencilFunc, stencilRef, stencilMask ) {\\r\\n\\r\\n\\t\\tif ( currentStencilFunc !== stencilFunc ||\\r\\n\\t\\t     currentStencilRef \\t!== stencilRef \\t||\\r\\n\\t\\t     currentStencilFuncMask !== stencilMask ) {\\r\\n\\r\\n\\t\\t\\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\\r\\n\\r\\n\\t\\t\\tcurrentStencilFunc = stencilFunc;\\r\\n\\t\\t\\tcurrentStencilRef  = stencilRef;\\r\\n\\t\\t\\tcurrentStencilFuncMask = stencilMask;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setOp\\t = function ( stencilFail, stencilZFail, stencilZPass ) {\\r\\n\\r\\n\\t\\tif ( currentStencilFail\\t !== stencilFail \\t||\\r\\n\\t\\t     currentStencilZFail !== stencilZFail ||\\r\\n\\t\\t     currentStencilZPass !== stencilZPass ) {\\r\\n\\r\\n\\t\\t\\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\\r\\n\\r\\n\\t\\t\\tcurrentStencilFail  = stencilFail;\\r\\n\\t\\t\\tcurrentStencilZFail = stencilZFail;\\r\\n\\t\\t\\tcurrentStencilZPass = stencilZPass;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setLocked = function ( lock ) {\\r\\n\\r\\n\\t\\tlocked = lock;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.setClear = function ( stencil ) {\\r\\n\\r\\n\\t\\tif ( currentStencilClear !== stencil ) {\\r\\n\\r\\n\\t\\t\\tgl.clearStencil( stencil );\\r\\n\\t\\t\\tcurrentStencilClear = stencil;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.reset = function () {\\r\\n\\r\\n\\t\\tlocked = false;\\r\\n\\r\\n\\t\\tcurrentStencilMask = null;\\r\\n\\t\\tcurrentStencilFunc = null;\\r\\n\\t\\tcurrentStencilRef = null;\\r\\n\\t\\tcurrentStencilFuncMask = null;\\r\\n\\t\\tcurrentStencilFail = null;\\r\\n\\t\\tcurrentStencilZFail = null;\\r\\n\\t\\tcurrentStencilZPass = null;\\r\\n\\t\\tcurrentStencilClear = null;\\r\\n\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/WebGLTextures.js\\r\\n\\r\\n/**\\r\\n* @author mrdoob / http://mrdoob.com/\\r\\n*/\\r\\n\\r\\nTHREE.WebGLTextures = function ( _gl, extensions, state, properties, capabilities, paramThreeToGL, info ) {\\r\\n\\r\\n\\tvar _infoMemory = info.memory;\\r\\n\\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tfunction clampToMaxSize ( image, maxSize ) {\\r\\n\\r\\n\\t\\tif ( image.width > maxSize || image.height > maxSize ) {\\r\\n\\r\\n\\t\\t\\t// Warning: Scaling through the canvas will only work with images that use\\r\\n\\t\\t\\t// premultiplied alpha.\\r\\n\\r\\n\\t\\t\\tvar scale = maxSize / Math.max( image.width, image.height );\\r\\n\\r\\n\\t\\t\\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\r\\n\\t\\t\\tcanvas.width = Math.floor( image.width * scale );\\r\\n\\t\\t\\tcanvas.height = Math.floor( image.height * scale );\\r\\n\\r\\n\\t\\t\\tvar context = canvas.getContext( '2d' );\\r\\n\\t\\t\\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\\r\\n\\r\\n\\t\\t\\treturn canvas;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn image;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction isPowerOfTwo( image ) {\\r\\n\\r\\n\\t\\treturn THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction makePowerOfTwo( image ) {\\r\\n\\r\\n\\t\\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\\r\\n\\r\\n\\t\\t\\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\r\\n\\t\\t\\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\\r\\n\\t\\t\\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\\r\\n\\r\\n\\t\\t\\tvar context = canvas.getContext( '2d' );\\r\\n\\t\\t\\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\\r\\n\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\\r\\n\\r\\n\\t\\t\\treturn canvas;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn image;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction textureNeedsPowerOfTwo( texture ) {\\r\\n\\r\\n\\t\\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) return true;\\r\\n\\t\\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) return true;\\r\\n\\r\\n\\t\\treturn false;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Fallback filters for non-power-of-2 textures\\r\\n\\r\\n\\tfunction filterFallback ( f ) {\\r\\n\\r\\n\\t\\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\\r\\n\\r\\n\\t\\t\\treturn _gl.NEAREST;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn _gl.LINEAR;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tfunction onTextureDispose( event ) {\\r\\n\\r\\n\\t\\tvar texture = event.target;\\r\\n\\r\\n\\t\\ttexture.removeEventListener( 'dispose', onTextureDispose );\\r\\n\\r\\n\\t\\tdeallocateTexture( texture );\\r\\n\\r\\n\\t\\t_infoMemory.textures --;\\r\\n\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onRenderTargetDispose( event ) {\\r\\n\\r\\n\\t\\tvar renderTarget = event.target;\\r\\n\\r\\n\\t\\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\\r\\n\\r\\n\\t\\tdeallocateRenderTarget( renderTarget );\\r\\n\\r\\n\\t\\t_infoMemory.textures --;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tfunction deallocateTexture( texture ) {\\r\\n\\r\\n\\t\\tvar textureProperties = properties.get( texture );\\r\\n\\r\\n\\t\\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\\r\\n\\r\\n\\t\\t\\t// cube texture\\r\\n\\r\\n\\t\\t\\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// 2D texture\\r\\n\\r\\n\\t\\t\\tif ( textureProperties.__webglInit === undefined ) return;\\r\\n\\r\\n\\t\\t\\t_gl.deleteTexture( textureProperties.__webglTexture );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// remove all webgl properties\\r\\n\\t\\tproperties.delete( texture );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction deallocateRenderTarget( renderTarget ) {\\r\\n\\r\\n\\t\\tvar renderTargetProperties = properties.get( renderTarget );\\r\\n\\t\\tvar textureProperties = properties.get( renderTarget.texture );\\r\\n\\r\\n\\t\\tif ( ! renderTarget ) return;\\r\\n\\r\\n\\t\\tif ( textureProperties.__webglTexture !== undefined ) {\\r\\n\\r\\n\\t\\t\\t_gl.deleteTexture( textureProperties.__webglTexture );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( renderTarget.depthTexture ) {\\r\\n\\r\\n\\t\\t\\trenderTarget.depthTexture.dispose();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\\r\\n\\t\\t\\t\\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\\r\\n\\t\\t\\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tproperties.delete( renderTarget.texture );\\r\\n\\t\\tproperties.delete( renderTarget );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\r\\n\\r\\n\\tfunction setTexture2D( texture, slot ) {\\r\\n\\r\\n\\t\\tvar textureProperties = properties.get( texture );\\r\\n\\r\\n\\t\\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\\r\\n\\r\\n\\t\\t\\tvar image = texture.image;\\r\\n\\r\\n\\t\\t\\tif ( image === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\\r\\n\\r\\n\\t\\t\\t} else if ( image.complete === false ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tuploadTexture( textureProperties, texture, slot );\\r\\n\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\r\\n\\t\\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction setTextureCube ( texture, slot ) {\\r\\n\\r\\n\\t\\tvar textureProperties = properties.get( texture );\\r\\n\\r\\n\\t\\tif ( texture.image.length === 6 ) {\\r\\n\\r\\n\\t\\t\\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( ! textureProperties.__image__webglTextureCube ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttexture.addEventListener( 'dispose', onTextureDispose );\\r\\n\\r\\n\\t\\t\\t\\t\\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\\r\\n\\r\\n\\t\\t\\t\\t\\t_infoMemory.textures ++;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\r\\n\\t\\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\\r\\n\\r\\n\\t\\t\\t\\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\\r\\n\\r\\n\\t\\t\\t\\tvar isCompressed = texture instanceof THREE.CompressedTexture;\\r\\n\\t\\t\\t\\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\\r\\n\\r\\n\\t\\t\\t\\tvar cubeImage = [];\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ! isCompressed && ! isDataTexture ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tvar image = cubeImage[ 0 ],\\r\\n\\t\\t\\t\\tisPowerOfTwoImage = isPowerOfTwo( image ),\\r\\n\\t\\t\\t\\tglFormat = paramThreeToGL( texture.format ),\\r\\n\\t\\t\\t\\tglType = paramThreeToGL( texture.type );\\r\\n\\r\\n\\t\\t\\t\\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ! isCompressed ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( isDataTexture ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tmipmap = mipmaps[ j ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\\\" );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\ttextureProperties.__version = texture.version;\\r\\n\\r\\n\\t\\t\\t\\tif ( texture.onUpdate ) texture.onUpdate( texture );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\r\\n\\t\\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction setTextureCubeDynamic ( texture, slot ) {\\r\\n\\r\\n\\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\r\\n\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction setTextureParameters ( textureType, texture, isPowerOfTwoImage ) {\\r\\n\\r\\n\\t\\tvar extension;\\r\\n\\r\\n\\t\\tif ( isPowerOfTwoImage ) {\\r\\n\\r\\n\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\\r\\n\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\\r\\n\\r\\n\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\\r\\n\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\\r\\n\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\\r\\n\\r\\n\\t\\t\\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\\r\\n\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\\r\\n\\r\\n\\t\\t\\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\\r\\n\\r\\n\\t\\tif ( extension ) {\\r\\n\\r\\n\\t\\t\\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\\r\\n\\t\\t\\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\\r\\n\\r\\n\\t\\t\\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\\r\\n\\r\\n\\t\\t\\t\\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\\r\\n\\t\\t\\t\\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction uploadTexture( textureProperties, texture, slot ) {\\r\\n\\r\\n\\t\\tif ( textureProperties.__webglInit === undefined ) {\\r\\n\\r\\n\\t\\t\\ttextureProperties.__webglInit = true;\\r\\n\\r\\n\\t\\t\\ttexture.addEventListener( 'dispose', onTextureDispose );\\r\\n\\r\\n\\t\\t\\ttextureProperties.__webglTexture = _gl.createTexture();\\r\\n\\r\\n\\t\\t\\t_infoMemory.textures ++;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\r\\n\\t\\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\\r\\n\\r\\n\\t\\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\\r\\n\\t\\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\\r\\n\\t\\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\\r\\n\\r\\n\\t\\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\\r\\n\\r\\n\\t\\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\\r\\n\\r\\n\\t\\t\\timage = makePowerOfTwo( image );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\\r\\n\\t\\tglFormat = paramThreeToGL( texture.format ),\\r\\n\\t\\tglType = paramThreeToGL( texture.type );\\r\\n\\r\\n\\t\\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\\r\\n\\r\\n\\t\\tvar mipmap, mipmaps = texture.mipmaps;\\r\\n\\r\\n\\t\\tif ( texture instanceof THREE.DepthTexture ) {\\r\\n\\r\\n\\t\\t\\t// populate depth texture with dummy data\\r\\n\\r\\n\\t\\t\\tvar internalFormat = _gl.DEPTH_COMPONENT;\\r\\n\\r\\n\\t\\t\\tif ( texture.type === THREE.FloatType ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\\r\\n\\t\\t\\t\\tinternalFormat = _gl.DEPTH_COMPONENT32F;\\r\\n\\r\\n\\t\\t\\t} else if ( _isWebGL2 ) {\\r\\n\\r\\n\\t\\t\\t\\t// WebGL 2.0 requires signed internalformat for glTexImage2D\\r\\n\\t\\t\\t\\tinternalFormat = _gl.DEPTH_COMPONENT16;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\\r\\n\\r\\n\\t\\t} else if ( texture instanceof THREE.DataTexture ) {\\r\\n\\r\\n\\t\\t\\t// use manually created mipmaps if available\\r\\n\\t\\t\\t// if there are no manual mipmaps\\r\\n\\t\\t\\t// set 0 level mipmap and then use GL to generate other mipmap levels\\r\\n\\r\\n\\t\\t\\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tmipmap = mipmaps[ i ];\\r\\n\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\ttexture.generateMipmaps = false;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else if ( texture instanceof THREE.CompressedTexture ) {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tmipmap = mipmaps[ i ];\\r\\n\\r\\n\\t\\t\\t\\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\\\" );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// regular Texture (image, video, canvas)\\r\\n\\r\\n\\t\\t\\t// use manually created mipmaps if available\\r\\n\\t\\t\\t// if there are no manual mipmaps\\r\\n\\t\\t\\t// set 0 level mipmap and then use GL to generate other mipmap levels\\r\\n\\r\\n\\t\\t\\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tmipmap = mipmaps[ i ];\\r\\n\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\ttexture.generateMipmaps = false;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\\r\\n\\r\\n\\t\\ttextureProperties.__version = texture.version;\\r\\n\\r\\n\\t\\tif ( texture.onUpdate ) texture.onUpdate( texture );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Render targets\\r\\n\\r\\n\\t// Setup storage for target texture and bind it to correct framebuffer\\r\\n\\tfunction setupFrameBufferTexture ( framebuffer, renderTarget, attachment, textureTarget ) {\\r\\n\\r\\n\\t\\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\\r\\n\\t\\tvar glType = paramThreeToGL( renderTarget.texture.type );\\r\\n\\t\\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\\r\\n\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\r\\n\\t\\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\\r\\n\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\\r\\n\\tfunction setupRenderBufferStorage ( renderbuffer, renderTarget ) {\\r\\n\\r\\n\\t\\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\\r\\n\\r\\n\\t\\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\\r\\n\\r\\n\\t\\t\\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\\r\\n\\t\\t\\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\\r\\n\\r\\n\\t\\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\\r\\n\\r\\n\\t\\t\\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\\r\\n\\t\\t\\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// FIXME: We don't support !depth !stencil\\r\\n\\t\\t\\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Setup resources for a Depth Texture for a FBO (needs an extension)\\r\\n\\tfunction setupDepthTexture ( framebuffer, renderTarget ) {\\r\\n\\r\\n\\t\\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\\r\\n\\t\\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\\r\\n\\r\\n\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\r\\n\\r\\n\\t\\tif ( !( renderTarget.depthTexture instanceof THREE.DepthTexture ) ) {\\r\\n\\r\\n\\t\\t\\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// upload an empty depth texture with framebuffer size\\r\\n\\t\\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\\r\\n\\t\\t\\t\\trenderTarget.depthTexture.image.width !== renderTarget.width ||\\r\\n\\t\\t\\t\\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\\r\\n\\t\\t\\trenderTarget.depthTexture.image.width = renderTarget.width;\\r\\n\\t\\t\\trenderTarget.depthTexture.image.height = renderTarget.height;\\r\\n\\t\\t\\trenderTarget.depthTexture.needsUpdate = true;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tsetTexture2D( renderTarget.depthTexture, 0 );\\r\\n\\r\\n\\t\\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\\r\\n\\t\\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Setup GL resources for a non-texture depth buffer\\r\\n\\tfunction setupDepthRenderbuffer( renderTarget ) {\\r\\n\\r\\n\\t\\tvar renderTargetProperties = properties.get( renderTarget );\\r\\n\\r\\n\\t\\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\\r\\n\\r\\n\\t\\tif ( renderTarget.depthTexture ) {\\r\\n\\r\\n\\t\\t\\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\\r\\n\\r\\n\\t\\t\\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tif ( isCube ) {\\r\\n\\r\\n\\t\\t\\t\\trenderTargetProperties.__webglDepthbuffer = [];\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\\r\\n\\t\\t\\t\\t\\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\\r\\n\\t\\t\\t\\t\\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\\r\\n\\t\\t\\t\\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\\r\\n\\t\\t\\t\\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Set up GL resources for the render target\\r\\n\\tfunction setupRenderTarget( renderTarget ) {\\r\\n\\r\\n\\t\\tvar renderTargetProperties = properties.get( renderTarget );\\r\\n\\t\\tvar textureProperties = properties.get( renderTarget.texture );\\r\\n\\r\\n\\t\\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\\r\\n\\r\\n\\t\\ttextureProperties.__webglTexture = _gl.createTexture();\\r\\n\\r\\n\\t\\t_infoMemory.textures ++;\\r\\n\\r\\n\\t\\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\\r\\n\\t\\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\\r\\n\\r\\n\\t\\t// Setup framebuffer\\r\\n\\r\\n\\t\\tif ( isCube ) {\\r\\n\\r\\n\\t\\t\\trenderTargetProperties.__webglFramebuffer = [];\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Setup color buffer\\r\\n\\r\\n\\t\\tif ( isCube ) {\\r\\n\\r\\n\\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\\r\\n\\t\\t\\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\\r\\n\\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\\r\\n\\t\\t\\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\\r\\n\\t\\t\\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\\r\\n\\r\\n\\t\\t\\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\\r\\n\\t\\t\\tstate.bindTexture( _gl.TEXTURE_2D, null );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Setup depth and stencil buffers\\r\\n\\r\\n\\t\\tif ( renderTarget.depthBuffer ) {\\r\\n\\r\\n\\t\\t\\tsetupDepthRenderbuffer( renderTarget );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction updateRenderTargetMipmap( renderTarget ) {\\r\\n\\r\\n\\t\\tvar texture = renderTarget.texture;\\r\\n\\r\\n\\t\\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\\r\\n\\t\\t\\t\\ttexture.minFilter !== THREE.NearestFilter &&\\r\\n\\t\\t\\t\\ttexture.minFilter !== THREE.LinearFilter ) {\\r\\n\\r\\n\\t\\t\\tvar target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\\r\\n\\t\\t\\tvar webglTexture = properties.get( texture ).__webglTexture;\\r\\n\\r\\n\\t\\t\\tstate.bindTexture( target, webglTexture );\\r\\n\\t\\t\\t_gl.generateMipmap( target );\\r\\n\\t\\t\\tstate.bindTexture( target, null );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.setTexture2D = setTexture2D;\\r\\n\\tthis.setTextureCube = setTextureCube;\\r\\n\\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\\r\\n\\tthis.setupRenderTarget = setupRenderTarget;\\r\\n\\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/WebGLUniforms.js\\r\\n\\r\\n/**\\r\\n *\\r\\n * Uniforms of a program.\\r\\n * Those form a tree structure with a special top-level container for the root,\\r\\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\\r\\n *\\r\\n *\\r\\n * Properties of inner nodes including the top-level container:\\r\\n *\\r\\n * .seq - array of nested uniforms\\r\\n * .map - nested uniforms by name\\r\\n *\\r\\n *\\r\\n * Methods of all nodes except the top-level container:\\r\\n *\\r\\n * .setValue( gl, value, [renderer] )\\r\\n *\\r\\n * \\t\\tuploads a uniform value(s)\\r\\n *  \\tthe 'renderer' parameter is needed for sampler uniforms\\r\\n *\\r\\n *\\r\\n * Static methods of the top-level container (renderer factorizations):\\r\\n *\\r\\n * .upload( gl, seq, values, renderer )\\r\\n *\\r\\n * \\t\\tsets uniforms in 'seq' to 'values[id].value'\\r\\n *\\r\\n * .seqWithValue( seq, values ) : filteredSeq\\r\\n *\\r\\n * \\t\\tfilters 'seq' entries with corresponding entry in values\\r\\n *\\r\\n * .splitDynamic( seq, values ) : filteredSeq\\r\\n *\\r\\n * \\t\\tfilters 'seq' entries with dynamic entry and removes them from 'seq'\\r\\n *\\r\\n *\\r\\n * Methods of the top-level container (renderer factorizations):\\r\\n *\\r\\n * .setValue( gl, name, value )\\r\\n *\\r\\n * \\t\\tsets uniform with  name 'name' to 'value'\\r\\n *\\r\\n * .set( gl, obj, prop )\\r\\n *\\r\\n * \\t\\tsets uniform from object and property with same name than uniform\\r\\n *\\r\\n * .setOptional( gl, obj, prop )\\r\\n *\\r\\n * \\t\\tlike .set for an optional property of the object\\r\\n *\\r\\n *\\r\\n * @author tschw\\r\\n *\\r\\n */\\r\\n\\r\\nTHREE.WebGLUniforms = ( function() { // scope\\r\\n\\r\\n\\tvar emptyTexture = new THREE.Texture();\\r\\n\\tvar emptyCubeTexture = new THREE.CubeTexture();\\r\\n\\r\\n\\t// --- Base for inner nodes (including the root) ---\\r\\n\\r\\n\\tvar UniformContainer = function() {\\r\\n\\r\\n\\t\\t\\tthis.seq = [];\\r\\n\\t\\t\\tthis.map = {};\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t// --- Utilities ---\\r\\n\\r\\n\\t// Array Caches (provide typed arrays for temporary by size)\\r\\n\\r\\n\\t\\tarrayCacheF32 = [],\\r\\n\\t\\tarrayCacheI32 = [],\\r\\n\\r\\n\\t\\tuncacheTemporaryArrays = function() {\\r\\n\\r\\n\\t\\t\\tarrayCacheF32.length = 0;\\r\\n\\t\\t\\tarrayCacheI32.length = 0;\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t// Flattening for arrays of vectors and matrices\\r\\n\\r\\n\\t\\tflatten = function( array, nBlocks, blockSize ) {\\r\\n\\r\\n\\t\\t\\tvar firstElem = array[ 0 ];\\r\\n\\r\\n\\t\\t\\tif ( firstElem <= 0 || firstElem > 0 ) return array;\\r\\n\\t\\t\\t// unoptimized: ! isNaN( firstElem )\\r\\n\\t\\t\\t// see http://jacksondunstan.com/articles/983\\r\\n\\r\\n\\t\\t\\tvar n = nBlocks * blockSize,\\r\\n\\t\\t\\t\\tr = arrayCacheF32[ n ];\\r\\n\\r\\n\\t\\t\\tif ( r === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tr = new Float32Array( n );\\r\\n\\t\\t\\t\\tarrayCacheF32[ n ] = r;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( nBlocks !== 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tfirstElem.toArray( r, 0 );\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\t\\toffset += blockSize;\\r\\n\\t\\t\\t\\t\\tarray[ i ].toArray( r, offset );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn r;\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t// Texture unit allocation\\r\\n\\r\\n\\t\\tallocTexUnits = function( renderer, n ) {\\r\\n\\r\\n\\t\\t\\tvar r = arrayCacheI32[ n ];\\r\\n\\r\\n\\t\\t\\tif ( r === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tr = new Int32Array( n );\\r\\n\\t\\t\\t\\tarrayCacheI32[ n ] = r;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i !== n; ++ i )\\r\\n\\t\\t\\t\\tr[ i ] = renderer.allocTextureUnit();\\r\\n\\r\\n\\t\\t\\treturn r;\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t// --- Setters ---\\r\\n\\r\\n\\t// Note: Defining these methods externally, because they come in a bunch\\r\\n\\t// and this way their names minify.\\r\\n\\r\\n\\t\\t// Single scalar\\r\\n\\r\\n\\t\\tsetValue1f = function( gl, v ) { gl.uniform1f( this.addr, v ); },\\r\\n\\t\\tsetValue1i = function( gl, v ) { gl.uniform1i( this.addr, v ); },\\r\\n\\r\\n\\t\\t// Single float vector (from flat array or THREE.VectorN)\\r\\n\\r\\n\\t\\tsetValue2fv = function( gl, v ) {\\r\\n\\r\\n\\t\\t\\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\\r\\n\\t\\t\\telse gl.uniform2f( this.addr, v.x, v.y );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tsetValue3fv = function( gl, v ) {\\r\\n\\r\\n\\t\\t\\tif ( v.x !== undefined )\\r\\n\\t\\t\\t\\tgl.uniform3f( this.addr, v.x, v.y, v.z );\\r\\n\\t\\t\\telse if ( v.r !== undefined )\\r\\n\\t\\t\\t\\tgl.uniform3f( this.addr, v.r, v.g, v.b );\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\tgl.uniform3fv( this.addr, v );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tsetValue4fv = function( gl, v ) {\\r\\n\\r\\n\\t\\t\\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\\r\\n\\t\\t\\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Single matrix (from flat array or MatrixN)\\r\\n\\r\\n\\t\\tsetValue2fm = function( gl, v ) {\\r\\n\\r\\n\\t\\t\\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tsetValue3fm = function( gl, v ) {\\r\\n\\r\\n\\t\\t\\tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tsetValue4fm = function( gl, v ) {\\r\\n\\r\\n\\t\\t\\tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Single texture (2D / Cube)\\r\\n\\r\\n\\t\\tsetValueT1 = function( gl, v, renderer ) {\\r\\n\\r\\n\\t\\t\\tvar unit = renderer.allocTextureUnit();\\r\\n\\t\\t\\tgl.uniform1i( this.addr, unit );\\r\\n\\t\\t\\trenderer.setTexture2D( v || emptyTexture, unit );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tsetValueT6 = function( gl, v, renderer ) {\\r\\n\\r\\n\\t\\t\\tvar unit = renderer.allocTextureUnit();\\r\\n\\t\\t\\tgl.uniform1i( this.addr, unit );\\r\\n\\t\\t\\trenderer.setTextureCube( v || emptyCubeTexture, unit );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\\r\\n\\r\\n\\t\\tsetValue2iv = function( gl, v ) { gl.uniform2iv( this.addr, v ); },\\r\\n\\t\\tsetValue3iv = function( gl, v ) { gl.uniform3iv( this.addr, v ); },\\r\\n\\t\\tsetValue4iv = function( gl, v ) { gl.uniform4iv( this.addr, v ); },\\r\\n\\r\\n\\t\\t// Helper to pick the right setter for the singular case\\r\\n\\r\\n\\t\\tgetSingularSetter = function( type ) {\\r\\n\\r\\n\\t\\t\\tswitch ( type ) {\\r\\n\\r\\n\\t\\t\\t\\tcase 0x1406: return setValue1f; // FLOAT\\r\\n\\t\\t\\t\\tcase 0x8b50: return setValue2fv; // _VEC2\\r\\n\\t\\t\\t\\tcase 0x8b51: return setValue3fv; // _VEC3\\r\\n\\t\\t\\t\\tcase 0x8b52: return setValue4fv; // _VEC4\\r\\n\\r\\n\\t\\t\\t\\tcase 0x8b5a: return setValue2fm; // _MAT2\\r\\n\\t\\t\\t\\tcase 0x8b5b: return setValue3fm; // _MAT3\\r\\n\\t\\t\\t\\tcase 0x8b5c: return setValue4fm; // _MAT4\\r\\n\\r\\n\\t\\t\\t\\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\\r\\n\\t\\t\\t\\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\\r\\n\\r\\n\\t\\t\\t\\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\\r\\n\\t\\t\\t\\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\\r\\n\\t\\t\\t\\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\\r\\n\\t\\t\\t\\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Array of scalars\\r\\n\\r\\n\\t\\tsetValue1fv = function( gl, v ) { gl.uniform1fv( this.addr, v ); },\\r\\n\\t\\tsetValue1iv = function( gl, v ) { gl.uniform1iv( this.addr, v ); },\\r\\n\\r\\n\\t\\t// Array of vectors (flat or from THREE classes)\\r\\n\\r\\n\\t\\tsetValueV2a = function( gl, v ) {\\r\\n\\r\\n\\t\\t\\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tsetValueV3a = function( gl, v ) {\\r\\n\\r\\n\\t\\t\\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tsetValueV4a = function( gl, v ) {\\r\\n\\r\\n\\t\\t\\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Array of matrices (flat or from THREE clases)\\r\\n\\r\\n\\t\\tsetValueM2a = function( gl, v ) {\\r\\n\\r\\n\\t\\t\\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tsetValueM3a = function( gl, v ) {\\r\\n\\r\\n\\t\\t\\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tsetValueM4a = function( gl, v ) {\\r\\n\\r\\n\\t\\t\\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Array of textures (2D / Cube)\\r\\n\\r\\n\\t\\tsetValueT1a = function( gl, v, renderer ) {\\r\\n\\r\\n\\t\\t\\tvar n = v.length,\\r\\n\\t\\t\\t\\tunits = allocTexUnits( renderer, n );\\r\\n\\r\\n\\t\\t\\tgl.uniform1iv( this.addr, units );\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tsetValueT6a = function( gl, v, renderer ) {\\r\\n\\r\\n\\t\\t\\tvar n = v.length,\\r\\n\\t\\t\\t\\tunits = allocTexUnits( renderer, n );\\r\\n\\r\\n\\t\\t\\tgl.uniform1iv( this.addr, units );\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\r\\n\\t\\t// Helper to pick the right setter for a pure (bottom-level) array\\r\\n\\r\\n\\t\\tgetPureArraySetter = function( type ) {\\r\\n\\r\\n\\t\\t\\tswitch ( type ) {\\r\\n\\r\\n\\t\\t\\t\\tcase 0x1406: return setValue1fv; // FLOAT\\r\\n\\t\\t\\t\\tcase 0x8b50: return setValueV2a; // _VEC2\\r\\n\\t\\t\\t\\tcase 0x8b51: return setValueV3a; // _VEC3\\r\\n\\t\\t\\t\\tcase 0x8b52: return setValueV4a; // _VEC4\\r\\n\\r\\n\\t\\t\\t\\tcase 0x8b5a: return setValueM2a; // _MAT2\\r\\n\\t\\t\\t\\tcase 0x8b5b: return setValueM3a; // _MAT3\\r\\n\\t\\t\\t\\tcase 0x8b5c: return setValueM4a; // _MAT4\\r\\n\\r\\n\\t\\t\\t\\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\\r\\n\\t\\t\\t\\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\\r\\n\\r\\n\\t\\t\\t\\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\\r\\n\\t\\t\\t\\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\\r\\n\\t\\t\\t\\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\\r\\n\\t\\t\\t\\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t// --- Uniform Classes ---\\r\\n\\r\\n\\t\\tSingleUniform = function SingleUniform( id, activeInfo, addr ) {\\r\\n\\r\\n\\t\\t\\tthis.id = id;\\r\\n\\t\\t\\tthis.addr = addr;\\r\\n\\t\\t\\tthis.setValue = getSingularSetter( activeInfo.type );\\r\\n\\r\\n\\t\\t\\t// this.path = activeInfo.name; // DEBUG\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tPureArrayUniform = function( id, activeInfo, addr ) {\\r\\n\\r\\n\\t\\t\\tthis.id = id;\\r\\n\\t\\t\\tthis.addr = addr;\\r\\n\\t\\t\\tthis.size = activeInfo.size;\\r\\n\\t\\t\\tthis.setValue = getPureArraySetter( activeInfo.type );\\r\\n\\r\\n\\t\\t\\t// this.path = activeInfo.name; // DEBUG\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tStructuredUniform = function( id ) {\\r\\n\\r\\n\\t\\t\\tthis.id = id;\\r\\n\\r\\n\\t\\t\\tUniformContainer.call( this ); // mix-in\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\tStructuredUniform.prototype.setValue = function( gl, value ) {\\r\\n\\r\\n\\t\\t// Note: Don't need an extra 'renderer' parameter, since samplers\\r\\n\\t\\t// are not allowed in structured uniforms.\\r\\n\\r\\n\\t\\tvar seq = this.seq;\\r\\n\\r\\n\\t\\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar u = seq[ i ];\\r\\n\\t\\t\\tu.setValue( gl, value[ u.id ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// --- Top-level ---\\r\\n\\r\\n\\t// Parser - builds up the property tree from the path strings\\r\\n\\r\\n\\tvar RePathPart = /([\\\\w\\\\d_]+)(\\\\])?(\\\\[|\\\\.)?/g,\\r\\n\\t\\t// extracts\\r\\n\\t\\t// \\t- the identifier (member name or array index)\\r\\n\\t\\t//  - followed by an optional right bracket (found when array index)\\r\\n\\t\\t//  - followed by an optional left bracket or dot (type of subscript)\\r\\n\\t\\t//\\r\\n\\t\\t// Note: These portions can be read in a non-overlapping fashion and\\r\\n\\t\\t// allow straightforward parsing of the hierarchy that WebGL encodes\\r\\n\\t\\t// in the uniform names.\\r\\n\\r\\n\\t\\taddUniform = function( container, uniformObject ) {\\r\\n\\r\\n\\t\\t\\tcontainer.seq.push( uniformObject );\\r\\n\\t\\t\\tcontainer.map[ uniformObject.id ] = uniformObject;\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tparseUniform = function( activeInfo, addr, container ) {\\r\\n\\r\\n\\t\\t\\tvar path = activeInfo.name,\\r\\n\\t\\t\\t\\tpathLength = path.length;\\r\\n\\r\\n\\t\\t\\t// reset RegExp object, because of the early exit of a previous run\\r\\n\\t\\t\\tRePathPart.lastIndex = 0;\\r\\n\\r\\n\\t\\t\\tfor (; ;) {\\r\\n\\r\\n\\t\\t\\t\\tvar match = RePathPart.exec( path ),\\r\\n\\t\\t\\t\\t\\tmatchEnd = RePathPart.lastIndex,\\r\\n\\r\\n\\t\\t\\t\\t\\tid = match[ 1 ],\\r\\n\\t\\t\\t\\t\\tidIsIndex = match[ 2 ] === ']',\\r\\n\\t\\t\\t\\t\\tsubscript = match[ 3 ];\\r\\n\\r\\n\\t\\t\\t\\tif ( idIsIndex ) id = id | 0; // convert to integer\\r\\n\\r\\n\\t\\t\\t\\tif ( subscript === undefined ||\\r\\n\\t\\t\\t\\t\\t\\tsubscript === '[' && matchEnd + 2 === pathLength ) {\\r\\n\\t\\t\\t\\t\\t// bare name or \\\"pure\\\" bottom-level array \\\"[0]\\\" suffix\\r\\n\\r\\n\\t\\t\\t\\t\\taddUniform( container, subscript === undefined ?\\r\\n\\t\\t\\t\\t\\t\\t\\tnew SingleUniform( id, activeInfo, addr ) :\\r\\n\\t\\t\\t\\t\\t\\t\\tnew PureArrayUniform( id, activeInfo, addr ) );\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t// step into inner node / create it in case it doesn't exist\\r\\n\\r\\n\\t\\t\\t\\t\\tvar map = container.map,\\r\\n\\t\\t\\t\\t\\t\\tnext = map[ id ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( next === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tnext = new StructuredUniform( id );\\r\\n\\t\\t\\t\\t\\t\\taddUniform( container, next );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tcontainer = next;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t// Root Container\\r\\n\\r\\n\\t\\tWebGLUniforms = function WebGLUniforms( gl, program, renderer ) {\\r\\n\\r\\n\\t\\t\\tUniformContainer.call( this );\\r\\n\\r\\n\\t\\t\\tthis.renderer = renderer;\\r\\n\\r\\n\\t\\t\\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\t\\tvar info = gl.getActiveUniform( program, i ),\\r\\n\\t\\t\\t\\t\\tpath = info.name,\\r\\n\\t\\t\\t\\t\\taddr = gl.getUniformLocation( program, path );\\r\\n\\r\\n\\t\\t\\t\\tparseUniform( info, addr, this );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\r\\n\\tWebGLUniforms.prototype.setValue = function( gl, name, value ) {\\r\\n\\r\\n\\t\\tvar u = this.map[ name ];\\r\\n\\r\\n\\t\\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tWebGLUniforms.prototype.set = function( gl, object, name ) {\\r\\n\\r\\n\\t\\tvar u = this.map[ name ];\\r\\n\\r\\n\\t\\tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tWebGLUniforms.prototype.setOptional = function( gl, object, name ) {\\r\\n\\r\\n\\t\\tvar v = object[ name ];\\r\\n\\r\\n\\t\\tif ( v !== undefined ) this.setValue( gl, name, v );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\r\\n\\t// Static interface\\r\\n\\r\\n\\tWebGLUniforms.upload = function( gl, seq, values, renderer ) {\\r\\n\\r\\n\\t\\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar u = seq[ i ],\\r\\n\\t\\t\\t\\tv = values[ u.id ];\\r\\n\\r\\n\\t\\t\\tif ( v.needsUpdate !== false ) {\\r\\n\\t\\t\\t\\t// note: always updating when .needsUpdate is undefined\\r\\n\\r\\n\\t\\t\\t\\tu.setValue( gl, v.value, renderer );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tWebGLUniforms.seqWithValue = function( seq, values ) {\\r\\n\\r\\n\\t\\tvar r = [];\\r\\n\\r\\n\\t\\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar u = seq[ i ];\\r\\n\\t\\t\\tif ( u.id in values ) r.push( u );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn r;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tWebGLUniforms.splitDynamic = function( seq, values ) {\\r\\n\\r\\n\\t\\tvar r = null,\\r\\n\\t\\t\\tn = seq.length,\\r\\n\\t\\t\\tw = 0;\\r\\n\\r\\n\\t\\tfor ( var i = 0; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar u = seq[ i ],\\r\\n\\t\\t\\t\\tv = values[ u.id ];\\r\\n\\r\\n\\t\\t\\tif ( v && v.dynamic === true ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( r === null ) r = [];\\r\\n\\t\\t\\t\\tr.push( u );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// in-place compact 'seq', removing the matches\\r\\n\\t\\t\\t\\tif ( w < i ) seq[ w ] = u;\\r\\n\\t\\t\\t\\t++ w;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( w < n ) seq.length = w;\\r\\n\\r\\n\\t\\treturn r;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tWebGLUniforms.evalDynamic = function( seq, values, object, camera ) {\\r\\n\\r\\n\\t\\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\\r\\n\\r\\n\\t\\t\\tvar v = values[ seq[ i ].id ],\\r\\n\\t\\t\\t\\tf = v.onUpdateCallback;\\r\\n\\r\\n\\t\\t\\tif ( f !== undefined ) f.call( v, object, camera );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\treturn WebGLUniforms;\\r\\n\\r\\n} )();\\r\\n\\r\\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\\r\\n\\r\\n/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\\r\\n\\r\\n\\tvar gl = renderer.context;\\r\\n\\tvar state = renderer.state;\\r\\n\\r\\n\\tvar vertexBuffer, elementBuffer;\\r\\n\\tvar shader, program, attributes, uniforms;\\r\\n\\r\\n\\tvar tempTexture, occlusionTexture;\\r\\n\\r\\n\\tfunction init() {\\r\\n\\r\\n\\t\\tvar vertices = new Float32Array( [\\r\\n\\t\\t\\t- 1, - 1,  0, 0,\\r\\n\\t\\t\\t 1, - 1,  1, 0,\\r\\n\\t\\t\\t 1,  1,  1, 1,\\r\\n\\t\\t\\t- 1,  1,  0, 1\\r\\n\\t\\t] );\\r\\n\\r\\n\\t\\tvar faces = new Uint16Array( [\\r\\n\\t\\t\\t0, 1, 2,\\r\\n\\t\\t\\t0, 2, 3\\r\\n\\t\\t] );\\r\\n\\r\\n\\t\\t// buffers\\r\\n\\r\\n\\t\\tvertexBuffer     = gl.createBuffer();\\r\\n\\t\\telementBuffer    = gl.createBuffer();\\r\\n\\r\\n\\t\\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\\r\\n\\t\\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\\r\\n\\r\\n\\t\\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\\r\\n\\t\\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\\r\\n\\r\\n\\t\\t// textures\\r\\n\\r\\n\\t\\ttempTexture      = gl.createTexture();\\r\\n\\t\\tocclusionTexture = gl.createTexture();\\r\\n\\r\\n\\t\\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\\r\\n\\t\\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\\r\\n\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\\r\\n\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\\r\\n\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\\r\\n\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\\r\\n\\r\\n\\t\\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\\r\\n\\t\\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\\r\\n\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\\r\\n\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\\r\\n\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\\r\\n\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\\r\\n\\r\\n\\t\\tshader = {\\r\\n\\r\\n\\t\\t\\tvertexShader: [\\r\\n\\r\\n\\t\\t\\t\\t\\\"uniform lowp int renderType;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\\"uniform vec3 screenPosition;\\\",\\r\\n\\t\\t\\t\\t\\\"uniform vec2 scale;\\\",\\r\\n\\t\\t\\t\\t\\\"uniform float rotation;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\\"uniform sampler2D occlusionMap;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\\"attribute vec2 position;\\\",\\r\\n\\t\\t\\t\\t\\\"attribute vec2 uv;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\\"varying vec2 vUV;\\\",\\r\\n\\t\\t\\t\\t\\\"varying float vVisibility;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\\"void main() {\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t\\\"vUV = uv;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t\\\"vec2 pos = position;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t\\\"if ( renderType == 2 ) {\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\\"vVisibility =        visibility.r / 9.0;\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"vVisibility *= 1.0 - visibility.g / 9.0;\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"vVisibility *=       visibility.b / 9.0;\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"vVisibility *= 1.0 - visibility.a / 9.0;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t\\\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\\"}\\\"\\r\\n\\r\\n\\t\\t\\t].join( \\\"\\\\n\\\" ),\\r\\n\\r\\n\\t\\t\\tfragmentShader: [\\r\\n\\r\\n\\t\\t\\t\\t\\\"uniform lowp int renderType;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\\"uniform sampler2D map;\\\",\\r\\n\\t\\t\\t\\t\\\"uniform float opacity;\\\",\\r\\n\\t\\t\\t\\t\\\"uniform vec3 color;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\\"varying vec2 vUV;\\\",\\r\\n\\t\\t\\t\\t\\\"varying float vVisibility;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\\"void main() {\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t// pink square\\r\\n\\r\\n\\t\\t\\t\\t\\t\\\"if ( renderType == 0 ) {\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t// restore\\r\\n\\r\\n\\t\\t\\t\\t\\t\\\"} else if ( renderType == 1 ) {\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\\"gl_FragColor = texture2D( map, vUV );\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t// flare\\r\\n\\r\\n\\t\\t\\t\\t\\t\\\"} else {\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\\"vec4 texture = texture2D( map, vUV );\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"texture.a *= opacity * vVisibility;\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"gl_FragColor = texture;\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"gl_FragColor.rgb *= color;\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\t\\t\\t\\\"}\\\"\\r\\n\\r\\n\\t\\t\\t].join( \\\"\\\\n\\\" )\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tprogram = createProgram( shader );\\r\\n\\r\\n\\t\\tattributes = {\\r\\n\\t\\t\\tvertex: gl.getAttribLocation ( program, \\\"position\\\" ),\\r\\n\\t\\t\\tuv:     gl.getAttribLocation ( program, \\\"uv\\\" )\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tuniforms = {\\r\\n\\t\\t\\trenderType:     gl.getUniformLocation( program, \\\"renderType\\\" ),\\r\\n\\t\\t\\tmap:            gl.getUniformLocation( program, \\\"map\\\" ),\\r\\n\\t\\t\\tocclusionMap:   gl.getUniformLocation( program, \\\"occlusionMap\\\" ),\\r\\n\\t\\t\\topacity:        gl.getUniformLocation( program, \\\"opacity\\\" ),\\r\\n\\t\\t\\tcolor:          gl.getUniformLocation( program, \\\"color\\\" ),\\r\\n\\t\\t\\tscale:          gl.getUniformLocation( program, \\\"scale\\\" ),\\r\\n\\t\\t\\trotation:       gl.getUniformLocation( program, \\\"rotation\\\" ),\\r\\n\\t\\t\\tscreenPosition: gl.getUniformLocation( program, \\\"screenPosition\\\" )\\r\\n\\t\\t};\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t/*\\r\\n\\t * Render lens flares\\r\\n\\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\\r\\n\\t *         reads these back and calculates occlusion.\\r\\n\\t */\\r\\n\\r\\n\\tthis.render = function ( scene, camera, viewport ) {\\r\\n\\r\\n\\t\\tif ( flares.length === 0 ) return;\\r\\n\\r\\n\\t\\tvar tempPosition = new THREE.Vector3();\\r\\n\\r\\n\\t\\tvar invAspect = viewport.w / viewport.z,\\r\\n\\t\\t\\thalfViewportWidth = viewport.z * 0.5,\\r\\n\\t\\t\\thalfViewportHeight = viewport.w * 0.5;\\r\\n\\r\\n\\t\\tvar size = 16 / viewport.w,\\r\\n\\t\\t\\tscale = new THREE.Vector2( size * invAspect, size );\\r\\n\\r\\n\\t\\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\\r\\n\\t\\t\\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\\r\\n\\r\\n\\t\\tvar validArea = new THREE.Box2();\\r\\n\\r\\n\\t\\tvalidArea.min.set( 0, 0 );\\r\\n\\t\\tvalidArea.max.set( viewport.z - 16, viewport.w - 16 );\\r\\n\\r\\n\\t\\tif ( program === undefined ) {\\r\\n\\r\\n\\t\\t\\tinit();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tgl.useProgram( program );\\r\\n\\r\\n\\t\\tstate.initAttributes();\\r\\n\\t\\tstate.enableAttribute( attributes.vertex );\\r\\n\\t\\tstate.enableAttribute( attributes.uv );\\r\\n\\t\\tstate.disableUnusedAttributes();\\r\\n\\r\\n\\t\\t// loop through all lens flares to update their occlusion and positions\\r\\n\\t\\t// setup gl and common used attribs/uniforms\\r\\n\\r\\n\\t\\tgl.uniform1i( uniforms.occlusionMap, 0 );\\r\\n\\t\\tgl.uniform1i( uniforms.map, 1 );\\r\\n\\r\\n\\t\\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\\r\\n\\t\\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\\r\\n\\t\\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\\r\\n\\r\\n\\t\\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\\r\\n\\r\\n\\t\\tstate.disable( gl.CULL_FACE );\\r\\n\\t\\tstate.setDepthWrite( false );\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tsize = 16 / viewport.w;\\r\\n\\t\\t\\tscale.set( size * invAspect, size );\\r\\n\\r\\n\\t\\t\\t// calc object screen position\\r\\n\\r\\n\\t\\t\\tvar flare = flares[ i ];\\r\\n\\r\\n\\t\\t\\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\\r\\n\\r\\n\\t\\t\\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\\r\\n\\t\\t\\ttempPosition.applyProjection( camera.projectionMatrix );\\r\\n\\r\\n\\t\\t\\t// setup arrays for gl programs\\r\\n\\r\\n\\t\\t\\tscreenPosition.copy( tempPosition );\\r\\n\\r\\n\\t\\t\\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\\r\\n\\r\\n\\t\\t\\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\\r\\n\\t\\t\\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\\r\\n\\r\\n\\t\\t\\t// screen cull\\r\\n\\r\\n\\t\\t\\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\\r\\n\\r\\n\\t\\t\\t\\t// save current RGB to temp texture\\r\\n\\r\\n\\t\\t\\t\\tstate.activeTexture( gl.TEXTURE0 );\\r\\n\\t\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, null );\\r\\n\\t\\t\\t\\tstate.activeTexture( gl.TEXTURE1 );\\r\\n\\t\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\\r\\n\\t\\t\\t\\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t// render pink quad\\r\\n\\r\\n\\t\\t\\t\\tgl.uniform1i( uniforms.renderType, 0 );\\r\\n\\t\\t\\t\\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\\r\\n\\t\\t\\t\\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\\r\\n\\r\\n\\t\\t\\t\\tstate.disable( gl.BLEND );\\r\\n\\t\\t\\t\\tstate.enable( gl.DEPTH_TEST );\\r\\n\\r\\n\\t\\t\\t\\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t// copy result to occlusionMap\\r\\n\\r\\n\\t\\t\\t\\tstate.activeTexture( gl.TEXTURE0 );\\r\\n\\t\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\\r\\n\\t\\t\\t\\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t// restore graphics\\r\\n\\r\\n\\t\\t\\t\\tgl.uniform1i( uniforms.renderType, 1 );\\r\\n\\t\\t\\t\\tstate.disable( gl.DEPTH_TEST );\\r\\n\\r\\n\\t\\t\\t\\tstate.activeTexture( gl.TEXTURE1 );\\r\\n\\t\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\\r\\n\\t\\t\\t\\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t// update object positions\\r\\n\\r\\n\\t\\t\\t\\tflare.positionScreen.copy( screenPosition );\\r\\n\\r\\n\\t\\t\\t\\tif ( flare.customUpdateCallback ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tflare.customUpdateCallback( flare );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tflare.updateLensFlares();\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// render flares\\r\\n\\r\\n\\t\\t\\t\\tgl.uniform1i( uniforms.renderType, 2 );\\r\\n\\t\\t\\t\\tstate.enable( gl.BLEND );\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar sprite = flare.lensFlares[ j ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tscreenPosition.x = sprite.x;\\r\\n\\t\\t\\t\\t\\t\\tscreenPosition.y = sprite.y;\\r\\n\\t\\t\\t\\t\\t\\tscreenPosition.z = sprite.z;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tsize = sprite.size * sprite.scale / viewport.w;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tscale.x = size * invAspect;\\r\\n\\t\\t\\t\\t\\t\\tscale.y = size;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\\r\\n\\t\\t\\t\\t\\t\\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\\r\\n\\t\\t\\t\\t\\t\\tgl.uniform1f( uniforms.rotation, sprite.rotation );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgl.uniform1f( uniforms.opacity, sprite.opacity );\\r\\n\\t\\t\\t\\t\\t\\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\\r\\n\\t\\t\\t\\t\\t\\trenderer.setTexture2D( sprite.texture, 1 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// restore gl\\r\\n\\r\\n\\t\\tstate.enable( gl.CULL_FACE );\\r\\n\\t\\tstate.enable( gl.DEPTH_TEST );\\r\\n\\t\\tstate.setDepthWrite( true );\\r\\n\\r\\n\\t\\trenderer.resetGLState();\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tfunction createProgram ( shader ) {\\r\\n\\r\\n\\t\\tvar program = gl.createProgram();\\r\\n\\r\\n\\t\\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\\r\\n\\t\\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\\r\\n\\r\\n\\t\\tvar prefix = \\\"precision \\\" + renderer.getPrecision() + \\\" float;\\\\n\\\";\\r\\n\\r\\n\\t\\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\\r\\n\\t\\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\\r\\n\\r\\n\\t\\tgl.compileShader( fragmentShader );\\r\\n\\t\\tgl.compileShader( vertexShader );\\r\\n\\r\\n\\t\\tgl.attachShader( program, fragmentShader );\\r\\n\\t\\tgl.attachShader( program, vertexShader );\\r\\n\\r\\n\\t\\tgl.linkProgram( program );\\r\\n\\r\\n\\t\\treturn program;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/renderers/webgl/plugins/SpritePlugin.js\\r\\n\\r\\n/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.SpritePlugin = function ( renderer, sprites ) {\\r\\n\\r\\n\\tvar gl = renderer.context;\\r\\n\\tvar state = renderer.state;\\r\\n\\r\\n\\tvar vertexBuffer, elementBuffer;\\r\\n\\tvar program, attributes, uniforms;\\r\\n\\r\\n\\tvar texture;\\r\\n\\r\\n\\t// decompose matrixWorld\\r\\n\\r\\n\\tvar spritePosition = new THREE.Vector3();\\r\\n\\tvar spriteRotation = new THREE.Quaternion();\\r\\n\\tvar spriteScale = new THREE.Vector3();\\r\\n\\r\\n\\tfunction init() {\\r\\n\\r\\n\\t\\tvar vertices = new Float32Array( [\\r\\n\\t\\t\\t- 0.5, - 0.5,  0, 0,\\r\\n\\t\\t\\t  0.5, - 0.5,  1, 0,\\r\\n\\t\\t\\t  0.5,   0.5,  1, 1,\\r\\n\\t\\t\\t- 0.5,   0.5,  0, 1\\r\\n\\t\\t] );\\r\\n\\r\\n\\t\\tvar faces = new Uint16Array( [\\r\\n\\t\\t\\t0, 1, 2,\\r\\n\\t\\t\\t0, 2, 3\\r\\n\\t\\t] );\\r\\n\\r\\n\\t\\tvertexBuffer  = gl.createBuffer();\\r\\n\\t\\telementBuffer = gl.createBuffer();\\r\\n\\r\\n\\t\\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\\r\\n\\t\\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\\r\\n\\r\\n\\t\\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\\r\\n\\t\\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\\r\\n\\r\\n\\t\\tprogram = createProgram();\\r\\n\\r\\n\\t\\tattributes = {\\r\\n\\t\\t\\tposition:\\t\\t\\tgl.getAttribLocation ( program, 'position' ),\\r\\n\\t\\t\\tuv:\\t\\t\\t\\t\\tgl.getAttribLocation ( program, 'uv' )\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tuniforms = {\\r\\n\\t\\t\\tuvOffset:\\t\\t\\tgl.getUniformLocation( program, 'uvOffset' ),\\r\\n\\t\\t\\tuvScale:\\t\\t\\tgl.getUniformLocation( program, 'uvScale' ),\\r\\n\\r\\n\\t\\t\\trotation:\\t\\t\\tgl.getUniformLocation( program, 'rotation' ),\\r\\n\\t\\t\\tscale:\\t\\t\\t\\tgl.getUniformLocation( program, 'scale' ),\\r\\n\\r\\n\\t\\t\\tcolor:\\t\\t\\t\\tgl.getUniformLocation( program, 'color' ),\\r\\n\\t\\t\\tmap:\\t\\t\\t\\tgl.getUniformLocation( program, 'map' ),\\r\\n\\t\\t\\topacity:\\t\\t\\tgl.getUniformLocation( program, 'opacity' ),\\r\\n\\r\\n\\t\\t\\tmodelViewMatrix: \\tgl.getUniformLocation( program, 'modelViewMatrix' ),\\r\\n\\t\\t\\tprojectionMatrix:\\tgl.getUniformLocation( program, 'projectionMatrix' ),\\r\\n\\r\\n\\t\\t\\tfogType:\\t\\t\\tgl.getUniformLocation( program, 'fogType' ),\\r\\n\\t\\t\\tfogDensity:\\t\\t\\tgl.getUniformLocation( program, 'fogDensity' ),\\r\\n\\t\\t\\tfogNear:\\t\\t\\tgl.getUniformLocation( program, 'fogNear' ),\\r\\n\\t\\t\\tfogFar:\\t\\t\\t\\tgl.getUniformLocation( program, 'fogFar' ),\\r\\n\\t\\t\\tfogColor:\\t\\t\\tgl.getUniformLocation( program, 'fogColor' ),\\r\\n\\r\\n\\t\\t\\talphaTest:\\t\\t\\tgl.getUniformLocation( program, 'alphaTest' )\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\r\\n\\t\\tcanvas.width = 8;\\r\\n\\t\\tcanvas.height = 8;\\r\\n\\r\\n\\t\\tvar context = canvas.getContext( '2d' );\\r\\n\\t\\tcontext.fillStyle = 'white';\\r\\n\\t\\tcontext.fillRect( 0, 0, 8, 8 );\\r\\n\\r\\n\\t\\ttexture = new THREE.Texture( canvas );\\r\\n\\t\\ttexture.needsUpdate = true;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.render = function ( scene, camera ) {\\r\\n\\r\\n\\t\\tif ( sprites.length === 0 ) return;\\r\\n\\r\\n\\t\\t// setup gl\\r\\n\\r\\n\\t\\tif ( program === undefined ) {\\r\\n\\r\\n\\t\\t\\tinit();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tgl.useProgram( program );\\r\\n\\r\\n\\t\\tstate.initAttributes();\\r\\n\\t\\tstate.enableAttribute( attributes.position );\\r\\n\\t\\tstate.enableAttribute( attributes.uv );\\r\\n\\t\\tstate.disableUnusedAttributes();\\r\\n\\r\\n\\t\\tstate.disable( gl.CULL_FACE );\\r\\n\\t\\tstate.enable( gl.BLEND );\\r\\n\\r\\n\\t\\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\\r\\n\\t\\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\\r\\n\\t\\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\\r\\n\\r\\n\\t\\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\\r\\n\\r\\n\\t\\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\\r\\n\\r\\n\\t\\tstate.activeTexture( gl.TEXTURE0 );\\r\\n\\t\\tgl.uniform1i( uniforms.map, 0 );\\r\\n\\r\\n\\t\\tvar oldFogType = 0;\\r\\n\\t\\tvar sceneFogType = 0;\\r\\n\\t\\tvar fog = scene.fog;\\r\\n\\r\\n\\t\\tif ( fog ) {\\r\\n\\r\\n\\t\\t\\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\\r\\n\\r\\n\\t\\t\\tif ( fog instanceof THREE.Fog ) {\\r\\n\\r\\n\\t\\t\\t\\tgl.uniform1f( uniforms.fogNear, fog.near );\\r\\n\\t\\t\\t\\tgl.uniform1f( uniforms.fogFar, fog.far );\\r\\n\\r\\n\\t\\t\\t\\tgl.uniform1i( uniforms.fogType, 1 );\\r\\n\\t\\t\\t\\toldFogType = 1;\\r\\n\\t\\t\\t\\tsceneFogType = 1;\\r\\n\\r\\n\\t\\t\\t} else if ( fog instanceof THREE.FogExp2 ) {\\r\\n\\r\\n\\t\\t\\t\\tgl.uniform1f( uniforms.fogDensity, fog.density );\\r\\n\\r\\n\\t\\t\\t\\tgl.uniform1i( uniforms.fogType, 2 );\\r\\n\\t\\t\\t\\toldFogType = 2;\\r\\n\\t\\t\\t\\tsceneFogType = 2;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tgl.uniform1i( uniforms.fogType, 0 );\\r\\n\\t\\t\\toldFogType = 0;\\r\\n\\t\\t\\tsceneFogType = 0;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t// update positions and sort\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar sprite = sprites[ i ];\\r\\n\\r\\n\\t\\t\\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\\r\\n\\t\\t\\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tsprites.sort( painterSortStable );\\r\\n\\r\\n\\t\\t// render all sprites\\r\\n\\r\\n\\t\\tvar scale = [];\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar sprite = sprites[ i ];\\r\\n\\t\\t\\tvar material = sprite.material;\\r\\n\\r\\n\\t\\t\\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\\r\\n\\t\\t\\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\\r\\n\\r\\n\\t\\t\\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\\r\\n\\r\\n\\t\\t\\tscale[ 0 ] = spriteScale.x;\\r\\n\\t\\t\\tscale[ 1 ] = spriteScale.y;\\r\\n\\r\\n\\t\\t\\tvar fogType = 0;\\r\\n\\r\\n\\t\\t\\tif ( scene.fog && material.fog ) {\\r\\n\\r\\n\\t\\t\\t\\tfogType = sceneFogType;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( oldFogType !== fogType ) {\\r\\n\\r\\n\\t\\t\\t\\tgl.uniform1i( uniforms.fogType, fogType );\\r\\n\\t\\t\\t\\toldFogType = fogType;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( material.map !== null ) {\\r\\n\\r\\n\\t\\t\\t\\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\\r\\n\\t\\t\\t\\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\\r\\n\\t\\t\\t\\tgl.uniform2f( uniforms.uvScale, 1, 1 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tgl.uniform1f( uniforms.opacity, material.opacity );\\r\\n\\t\\t\\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\\r\\n\\r\\n\\t\\t\\tgl.uniform1f( uniforms.rotation, material.rotation );\\r\\n\\t\\t\\tgl.uniform2fv( uniforms.scale, scale );\\r\\n\\r\\n\\t\\t\\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\\r\\n\\t\\t\\tstate.setDepthTest( material.depthTest );\\r\\n\\t\\t\\tstate.setDepthWrite( material.depthWrite );\\r\\n\\r\\n\\t\\t\\tif ( material.map ) {\\r\\n\\r\\n\\t\\t\\t\\trenderer.setTexture2D( material.map, 0 );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\trenderer.setTexture2D( texture, 0 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// restore gl\\r\\n\\r\\n\\t\\tstate.enable( gl.CULL_FACE );\\r\\n\\r\\n\\t\\trenderer.resetGLState();\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tfunction createProgram () {\\r\\n\\r\\n\\t\\tvar program = gl.createProgram();\\r\\n\\r\\n\\t\\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\\r\\n\\t\\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\\r\\n\\r\\n\\t\\tgl.shaderSource( vertexShader, [\\r\\n\\r\\n\\t\\t\\t'precision ' + renderer.getPrecision() + ' float;',\\r\\n\\r\\n\\t\\t\\t'uniform mat4 modelViewMatrix;',\\r\\n\\t\\t\\t'uniform mat4 projectionMatrix;',\\r\\n\\t\\t\\t'uniform float rotation;',\\r\\n\\t\\t\\t'uniform vec2 scale;',\\r\\n\\t\\t\\t'uniform vec2 uvOffset;',\\r\\n\\t\\t\\t'uniform vec2 uvScale;',\\r\\n\\r\\n\\t\\t\\t'attribute vec2 position;',\\r\\n\\t\\t\\t'attribute vec2 uv;',\\r\\n\\r\\n\\t\\t\\t'varying vec2 vUV;',\\r\\n\\r\\n\\t\\t\\t'void main() {',\\r\\n\\r\\n\\t\\t\\t\\t'vUV = uvOffset + uv * uvScale;',\\r\\n\\r\\n\\t\\t\\t\\t'vec2 alignedPosition = position * scale;',\\r\\n\\r\\n\\t\\t\\t\\t'vec2 rotatedPosition;',\\r\\n\\t\\t\\t\\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\\r\\n\\t\\t\\t\\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\\r\\n\\r\\n\\t\\t\\t\\t'vec4 finalPosition;',\\r\\n\\r\\n\\t\\t\\t\\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\\r\\n\\t\\t\\t\\t'finalPosition.xy += rotatedPosition;',\\r\\n\\t\\t\\t\\t'finalPosition = projectionMatrix * finalPosition;',\\r\\n\\r\\n\\t\\t\\t\\t'gl_Position = finalPosition;',\\r\\n\\r\\n\\t\\t\\t'}'\\r\\n\\r\\n\\t\\t].join( '\\\\n' ) );\\r\\n\\r\\n\\t\\tgl.shaderSource( fragmentShader, [\\r\\n\\r\\n\\t\\t\\t'precision ' + renderer.getPrecision() + ' float;',\\r\\n\\r\\n\\t\\t\\t'uniform vec3 color;',\\r\\n\\t\\t\\t'uniform sampler2D map;',\\r\\n\\t\\t\\t'uniform float opacity;',\\r\\n\\r\\n\\t\\t\\t'uniform int fogType;',\\r\\n\\t\\t\\t'uniform vec3 fogColor;',\\r\\n\\t\\t\\t'uniform float fogDensity;',\\r\\n\\t\\t\\t'uniform float fogNear;',\\r\\n\\t\\t\\t'uniform float fogFar;',\\r\\n\\t\\t\\t'uniform float alphaTest;',\\r\\n\\r\\n\\t\\t\\t'varying vec2 vUV;',\\r\\n\\r\\n\\t\\t\\t'void main() {',\\r\\n\\r\\n\\t\\t\\t\\t'vec4 texture = texture2D( map, vUV );',\\r\\n\\r\\n\\t\\t\\t\\t'if ( texture.a < alphaTest ) discard;',\\r\\n\\r\\n\\t\\t\\t\\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\\r\\n\\r\\n\\t\\t\\t\\t'if ( fogType > 0 ) {',\\r\\n\\r\\n\\t\\t\\t\\t\\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\\r\\n\\t\\t\\t\\t\\t'float fogFactor = 0.0;',\\r\\n\\r\\n\\t\\t\\t\\t\\t'if ( fogType == 1 ) {',\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\\r\\n\\r\\n\\t\\t\\t\\t\\t'} else {',\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t'const float LOG2 = 1.442695;',\\r\\n\\t\\t\\t\\t\\t\\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\\r\\n\\t\\t\\t\\t\\t\\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\\r\\n\\r\\n\\t\\t\\t\\t\\t'}',\\r\\n\\r\\n\\t\\t\\t\\t\\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\\r\\n\\r\\n\\t\\t\\t\\t'}',\\r\\n\\r\\n\\t\\t\\t'}'\\r\\n\\r\\n\\t\\t].join( '\\\\n' ) );\\r\\n\\r\\n\\t\\tgl.compileShader( vertexShader );\\r\\n\\t\\tgl.compileShader( fragmentShader );\\r\\n\\r\\n\\t\\tgl.attachShader( program, vertexShader );\\r\\n\\t\\tgl.attachShader( program, fragmentShader );\\r\\n\\r\\n\\t\\tgl.linkProgram( program );\\r\\n\\r\\n\\t\\treturn program;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction painterSortStable ( a, b ) {\\r\\n\\t\\t\\r\\n\\t\\tif ( a.renderOrder !== b.renderOrder ) {\\r\\n\\r\\n\\t\\t\\treturn a.renderOrder - b.renderOrder;\\r\\n\\r\\n\\t\\t} else if ( a.z !== b.z ) {\\r\\n\\r\\n\\t\\t\\treturn b.z - a.z;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\treturn b.id - a.id;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/Three.Legacy.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nObject.assign( THREE, {\\r\\n\\tFace4: function ( a, b, c, d, normal, color, materialIndex ) {\\r\\n\\t\\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\\r\\n\\t\\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\\r\\n\\t},\\r\\n\\tLineStrip: 0,\\r\\n\\tLinePieces: 1,\\r\\n\\tMeshFaceMaterial: THREE.MultiMaterial,\\r\\n\\tPointCloud: function ( geometry, material ) {\\r\\n\\t\\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\\r\\n\\t\\treturn new THREE.Points( geometry, material );\\r\\n\\t},\\r\\n\\tParticle: THREE.Sprite,\\r\\n\\tParticleSystem: function ( geometry, material ) {\\r\\n\\t\\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\\r\\n\\t\\treturn new THREE.Points( geometry, material );\\r\\n\\t},\\r\\n\\tPointCloudMaterial: function ( parameters ) {\\r\\n\\t\\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\\r\\n\\t\\treturn new THREE.PointsMaterial( parameters );\\r\\n\\t},\\r\\n\\tParticleBasicMaterial: function ( parameters ) {\\r\\n\\t\\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\\r\\n\\t\\treturn new THREE.PointsMaterial( parameters );\\r\\n\\t},\\r\\n\\tParticleSystemMaterial: function ( parameters ) {\\r\\n\\t\\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\\r\\n\\t\\treturn new THREE.PointsMaterial( parameters );\\r\\n\\t},\\r\\n\\tVertex: function ( x, y, z ) {\\r\\n\\t\\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\\r\\n\\t\\treturn new THREE.Vector3( x, y, z );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n//\\r\\n\\r\\nObject.assign( THREE.Box2.prototype, {\\r\\n\\tempty: function () {\\r\\n\\t\\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\\r\\n\\t\\treturn this.isEmpty();\\r\\n\\t},\\r\\n\\tisIntersectionBox: function ( box ) {\\r\\n\\t\\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\\r\\n\\t\\treturn this.intersectsBox( box );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.assign( THREE.Box3.prototype, {\\r\\n\\tempty: function () {\\r\\n\\t\\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\\r\\n\\t\\treturn this.isEmpty();\\r\\n\\t},\\r\\n\\tisIntersectionBox: function ( box ) {\\r\\n\\t\\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\\r\\n\\t\\treturn this.intersectsBox( box );\\r\\n\\t},\\r\\n\\tisIntersectionSphere: function ( sphere ) {\\r\\n\\t\\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\\r\\n\\t\\treturn this.intersectsSphere( sphere );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.assign( THREE.Matrix3.prototype, {\\r\\n\\tmultiplyVector3: function ( vector ) {\\r\\n\\t\\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\\r\\n\\t\\treturn vector.applyMatrix3( this );\\r\\n\\t},\\r\\n\\tmultiplyVector3Array: function ( a ) {\\r\\n\\t\\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\\r\\n\\t\\treturn this.applyToVector3Array( a );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.assign( THREE.Matrix4.prototype, {\\r\\n\\textractPosition: function ( m ) {\\r\\n\\t\\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\\r\\n\\t\\treturn this.copyPosition( m );\\r\\n\\t},\\r\\n\\tsetRotationFromQuaternion: function ( q ) {\\r\\n\\t\\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\\r\\n\\t\\treturn this.makeRotationFromQuaternion( q );\\r\\n\\t},\\r\\n\\tmultiplyVector3: function ( vector ) {\\r\\n\\t\\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\\r\\n\\t\\treturn vector.applyProjection( this );\\r\\n\\t},\\r\\n\\tmultiplyVector4: function ( vector ) {\\r\\n\\t\\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\\r\\n\\t\\treturn vector.applyMatrix4( this );\\r\\n\\t},\\r\\n\\tmultiplyVector3Array: function ( a ) {\\r\\n\\t\\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\\r\\n\\t\\treturn this.applyToVector3Array( a );\\r\\n\\t},\\r\\n\\trotateAxis: function ( v ) {\\r\\n\\t\\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\\r\\n\\t\\tv.transformDirection( this );\\r\\n\\t},\\r\\n\\tcrossVector: function ( vector ) {\\r\\n\\t\\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\\r\\n\\t\\treturn vector.applyMatrix4( this );\\r\\n\\t},\\r\\n\\ttranslate: function ( v ) {\\r\\n\\t\\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\\r\\n\\t},\\r\\n\\trotateX: function ( angle ) {\\r\\n\\t\\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\\r\\n\\t},\\r\\n\\trotateY: function ( angle ) {\\r\\n\\t\\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\\r\\n\\t},\\r\\n\\trotateZ: function ( angle ) {\\r\\n\\t\\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\\r\\n\\t},\\r\\n\\trotateByAxis: function ( axis, angle ) {\\r\\n\\t\\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.assign( THREE.Plane.prototype, {\\r\\n\\tisIntersectionLine: function ( line ) {\\r\\n\\t\\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\\r\\n\\t\\treturn this.intersectsLine( line );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.assign( THREE.Quaternion.prototype, {\\r\\n\\tmultiplyVector3: function ( vector ) {\\r\\n\\t\\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\\r\\n\\t\\treturn vector.applyQuaternion( this );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.assign( THREE.Ray.prototype, {\\r\\n\\tisIntersectionBox: function ( box ) {\\r\\n\\t\\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\\r\\n\\t\\treturn this.intersectsBox( box );\\r\\n\\t},\\r\\n\\tisIntersectionPlane: function ( plane ) {\\r\\n\\t\\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\\r\\n\\t\\treturn this.intersectsPlane( plane );\\r\\n\\t},\\r\\n\\tisIntersectionSphere: function ( sphere ) {\\r\\n\\t\\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\\r\\n\\t\\treturn this.intersectsSphere( sphere );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.assign( THREE.Vector3.prototype, {\\r\\n\\tsetEulerFromRotationMatrix: function () {\\r\\n\\t\\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\\r\\n\\t},\\r\\n\\tsetEulerFromQuaternion: function () {\\r\\n\\t\\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\\r\\n\\t},\\r\\n\\tgetPositionFromMatrix: function ( m ) {\\r\\n\\t\\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\\r\\n\\t\\treturn this.setFromMatrixPosition( m );\\r\\n\\t},\\r\\n\\tgetScaleFromMatrix: function ( m ) {\\r\\n\\t\\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\\r\\n\\t\\treturn this.setFromMatrixScale( m );\\r\\n\\t},\\r\\n\\tgetColumnFromMatrix: function ( index, matrix ) {\\r\\n\\t\\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\\r\\n\\t\\treturn this.setFromMatrixColumn( matrix, index );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n//\\r\\n\\r\\nObject.assign( THREE.Object3D.prototype, {\\r\\n\\tgetChildByName: function ( name ) {\\r\\n\\t\\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\\r\\n\\t\\treturn this.getObjectByName( name );\\r\\n\\t},\\r\\n\\trenderDepth: function ( value ) {\\r\\n\\t\\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\\r\\n\\t},\\r\\n\\ttranslate: function ( distance, axis ) {\\r\\n\\t\\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\\r\\n\\t\\treturn this.translateOnAxis( axis, distance );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.defineProperties( THREE.Object3D.prototype, {\\r\\n\\teulerOrder: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\\r\\n\\t\\t\\treturn this.rotation.order;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\\r\\n\\t\\t\\tthis.rotation.order = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tuseQuaternion: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.defineProperties( THREE.LOD.prototype, {\\r\\n\\tobjects: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\\r\\n\\t\\t\\treturn this.levels;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n//\\r\\n\\r\\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\\r\\n\\r\\n\\tconsole.warn( \\\"THREE.PerspectiveCamera.setLens is deprecated. \\\" +\\r\\n\\t\\t\\t\\\"Use .setFocalLength and .filmGauge for a photographic setup.\\\" );\\r\\n\\r\\n\\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\\r\\n\\tthis.setFocalLength( focalLength );\\r\\n\\r\\n};\\r\\n\\r\\n//\\r\\n\\r\\nObject.defineProperties( THREE.Light.prototype, {\\r\\n\\tonlyShadow: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowCameraFov: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\\r\\n\\t\\t\\tthis.shadow.camera.fov = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowCameraLeft: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\\r\\n\\t\\t\\tthis.shadow.camera.left = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowCameraRight: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\\r\\n\\t\\t\\tthis.shadow.camera.right = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowCameraTop: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\\r\\n\\t\\t\\tthis.shadow.camera.top = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowCameraBottom: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\\r\\n\\t\\t\\tthis.shadow.camera.bottom = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowCameraNear: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\\r\\n\\t\\t\\tthis.shadow.camera.near = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowCameraFar: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\\r\\n\\t\\t\\tthis.shadow.camera.far = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowCameraVisible: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowBias: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\\r\\n\\t\\t\\tthis.shadow.bias = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowDarkness: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowMapWidth: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\\r\\n\\t\\t\\tthis.shadow.mapSize.width = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowMapHeight: {\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\\r\\n\\t\\t\\tthis.shadow.mapSize.height = value;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n//\\r\\n\\r\\nObject.defineProperties( THREE.BufferAttribute.prototype, {\\r\\n\\tlength: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\\r\\n\\t\\t\\treturn this.array.length;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.assign( THREE.BufferGeometry.prototype, {\\r\\n\\taddIndex: function ( index ) {\\r\\n\\t\\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\\r\\n\\t\\tthis.setIndex( index );\\r\\n\\t},\\r\\n\\taddDrawCall: function ( start, count, indexOffset ) {\\r\\n\\t\\tif ( indexOffset !== undefined ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\\r\\n\\t\\t}\\r\\n\\t\\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\\r\\n\\t\\tthis.addGroup( start, count );\\r\\n\\t},\\r\\n\\tclearDrawCalls: function () {\\r\\n\\t\\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\\r\\n\\t\\tthis.clearGroups();\\r\\n\\t},\\r\\n\\tcomputeTangents: function () {\\r\\n\\t\\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\\r\\n\\t},\\r\\n\\tcomputeOffsets: function () {\\r\\n\\t\\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.defineProperties( THREE.BufferGeometry.prototype, {\\r\\n\\tdrawcalls: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\\r\\n\\t\\t\\treturn this.groups;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\toffsets: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\\r\\n\\t\\t\\treturn this.groups;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n//\\r\\n\\r\\nObject.defineProperties( THREE.Material.prototype, {\\r\\n\\twrapAround: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\twrapRGB: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\\r\\n\\t\\t\\treturn new THREE.Color();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.defineProperties( THREE.MeshPhongMaterial.prototype, {\\r\\n\\tmetal: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\\r\\n\\t\\t\\treturn false;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.defineProperties( THREE.ShaderMaterial.prototype, {\\r\\n\\tderivatives: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\\r\\n\\t\\t\\treturn this.extensions.derivatives;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\\r\\n\\t\\t\\tthis.extensions.derivatives = value;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n//\\r\\n\\r\\nTHREE.EventDispatcher.prototype = Object.assign( Object.create( {\\r\\n\\r\\n\\t// Note: Extra base ensures these properties are not 'assign'ed.\\r\\n\\r\\n\\tconstructor: THREE.EventDispatcher,\\r\\n\\r\\n\\tapply: function ( target ) {\\r\\n\\r\\n\\t\\tconsole.warn( \\\"THREE.EventDispatcher: .apply is deprecated, \\\" +\\r\\n\\t\\t\\t\\t\\\"just inherit or Object.assign the prototype to mix-in.\\\" );\\r\\n\\r\\n\\t\\tObject.assign( target, this );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} ), THREE.EventDispatcher.prototype );\\r\\n\\r\\n//\\r\\n\\r\\nObject.assign( THREE.WebGLRenderer.prototype, {\\r\\n\\tsupportsFloatTextures: function () {\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\\\'OES_texture_float\\\\' ).' );\\r\\n\\t\\treturn this.extensions.get( 'OES_texture_float' );\\r\\n\\t},\\r\\n\\tsupportsHalfFloatTextures: function () {\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\\\'OES_texture_half_float\\\\' ).' );\\r\\n\\t\\treturn this.extensions.get( 'OES_texture_half_float' );\\r\\n\\t},\\r\\n\\tsupportsStandardDerivatives: function () {\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\\\'OES_standard_derivatives\\\\' ).' );\\r\\n\\t\\treturn this.extensions.get( 'OES_standard_derivatives' );\\r\\n\\t},\\r\\n\\tsupportsCompressedTextureS3TC: function () {\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\\\'WEBGL_compressed_texture_s3tc\\\\' ).' );\\r\\n\\t\\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\\r\\n\\t},\\r\\n\\tsupportsCompressedTexturePVRTC: function () {\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\\\'WEBGL_compressed_texture_pvrtc\\\\' ).' );\\r\\n\\t\\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\\r\\n\\t},\\r\\n\\tsupportsBlendMinMax: function () {\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\\\'EXT_blend_minmax\\\\' ).' );\\r\\n\\t\\treturn this.extensions.get( 'EXT_blend_minmax' );\\r\\n\\t},\\r\\n\\tsupportsVertexTextures: function () {\\r\\n\\t\\treturn this.capabilities.vertexTextures;\\r\\n\\t},\\r\\n\\tsupportsInstancedArrays: function () {\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\\\'ANGLE_instanced_arrays\\\\' ).' );\\r\\n\\t\\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\\r\\n\\t},\\r\\n\\tenableScissorTest: function ( boolean ) {\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\\r\\n\\t\\tthis.setScissorTest( boolean );\\r\\n\\t},\\r\\n\\tinitMaterial: function () {\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\\r\\n\\t},\\r\\n\\taddPrePlugin: function () {\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\\r\\n\\t},\\r\\n\\taddPostPlugin: function () {\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\\r\\n\\t},\\r\\n\\tupdateShadowMap: function () {\\r\\n\\t\\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.defineProperties( THREE.WebGLRenderer.prototype, {\\r\\n\\tshadowMapEnabled: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\treturn this.shadowMap.enabled;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\\r\\n\\t\\t\\tthis.shadowMap.enabled = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowMapType: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\treturn this.shadowMap.type;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\\r\\n\\t\\t\\tthis.shadowMap.type = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tshadowMapCullFace: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\treturn this.shadowMap.cullFace;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\\r\\n\\t\\t\\tthis.shadowMap.cullFace = value;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.defineProperties( THREE.WebGLShadowMap.prototype, {\\r\\n\\tcullFace: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\treturn this.renderReverseSided ? THREE.CullFaceFront : THREE.CullFaceBack;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( cullFace ) {\\r\\n\\t\\t\\tvar value = ( cullFace !== THREE.CullFaceBack );\\r\\n\\t\\t\\tconsole.warn( \\\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \\\" + value + \\\".\\\" );\\r\\n\\t\\t\\tthis.renderReverseSided = value;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n//\\r\\n\\r\\nObject.defineProperties( THREE.WebGLRenderTarget.prototype, {\\r\\n\\twrapS: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\\r\\n\\t\\t\\treturn this.texture.wrapS;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\\r\\n\\t\\t\\tthis.texture.wrapS = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\twrapT: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\\r\\n\\t\\t\\treturn this.texture.wrapT;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\\r\\n\\t\\t\\tthis.texture.wrapT = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tmagFilter: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\\r\\n\\t\\t\\treturn this.texture.magFilter;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\\r\\n\\t\\t\\tthis.texture.magFilter = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tminFilter: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\\r\\n\\t\\t\\treturn this.texture.minFilter;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\\r\\n\\t\\t\\tthis.texture.minFilter = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tanisotropy: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\\r\\n\\t\\t\\treturn this.texture.anisotropy;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\\r\\n\\t\\t\\tthis.texture.anisotropy = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\toffset: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\\r\\n\\t\\t\\treturn this.texture.offset;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\\r\\n\\t\\t\\tthis.texture.offset = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\trepeat: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\\r\\n\\t\\t\\treturn this.texture.repeat;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\\r\\n\\t\\t\\tthis.texture.repeat = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tformat: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\\r\\n\\t\\t\\treturn this.texture.format;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\\r\\n\\t\\t\\tthis.texture.format = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\ttype: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\\r\\n\\t\\t\\treturn this.texture.type;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\\r\\n\\t\\t\\tthis.texture.type = value;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tgenerateMipmaps: {\\r\\n\\t\\tget: function () {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\\r\\n\\t\\t\\treturn this.texture.generateMipmaps;\\r\\n\\t\\t},\\r\\n\\t\\tset: function ( value ) {\\r\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\\r\\n\\t\\t\\tthis.texture.generateMipmaps = value;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n//\\r\\n\\r\\nObject.assign( THREE.Audio.prototype, {\\r\\n\\tload: function ( file ) {\\r\\n\\t\\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\\r\\n\\t\\tvar scope = this;\\r\\n\\t\\tvar audioLoader = new THREE.AudioLoader();\\r\\n\\t\\taudioLoader.load( file, function ( buffer ) {\\r\\n\\t\\t\\tscope.setBuffer( buffer );\\r\\n\\t\\t} );\\r\\n\\t\\treturn this;\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nObject.assign( THREE.AudioAnalyser.prototype, {\\r\\n\\tgetData: function ( file ) {\\r\\n\\t\\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\\r\\n\\t\\treturn this.getFrequencyData();\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n//\\r\\n\\r\\nTHREE.GeometryUtils = {\\r\\n\\r\\n\\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\\r\\n\\r\\n\\t\\tvar matrix;\\r\\n\\r\\n\\t\\tif ( geometry2 instanceof THREE.Mesh ) {\\r\\n\\r\\n\\t\\t\\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\\r\\n\\r\\n\\t\\t\\tmatrix = geometry2.matrix;\\r\\n\\t\\t\\tgeometry2 = geometry2.geometry;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcenter: function ( geometry ) {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\\r\\n\\t\\treturn geometry.center();\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ImageUtils = {\\r\\n\\r\\n\\tcrossOrigin: undefined,\\r\\n\\r\\n\\tloadTexture: function ( url, mapping, onLoad, onError ) {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\\r\\n\\r\\n\\t\\tvar loader = new THREE.TextureLoader();\\r\\n\\t\\tloader.setCrossOrigin( this.crossOrigin );\\r\\n\\r\\n\\t\\tvar texture = loader.load( url, onLoad, undefined, onError );\\r\\n\\r\\n\\t\\tif ( mapping ) texture.mapping = mapping;\\r\\n\\r\\n\\t\\treturn texture;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\\r\\n\\r\\n\\t\\tvar loader = new THREE.CubeTextureLoader();\\r\\n\\t\\tloader.setCrossOrigin( this.crossOrigin );\\r\\n\\r\\n\\t\\tvar texture = loader.load( urls, onLoad, undefined, onError );\\r\\n\\r\\n\\t\\tif ( mapping ) texture.mapping = mapping;\\r\\n\\r\\n\\t\\treturn texture;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tloadCompressedTexture: function () {\\r\\n\\r\\n\\t\\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tloadCompressedTextureCube: function () {\\r\\n\\r\\n\\t\\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n//\\r\\n\\r\\nTHREE.Projector = function () {\\r\\n\\r\\n\\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\\r\\n\\r\\n\\tthis.projectVector = function ( vector, camera ) {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\\r\\n\\t\\tvector.project( camera );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.unprojectVector = function ( vector, camera ) {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\\r\\n\\t\\tvector.unproject( camera );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.pickingRay = function ( vector, camera ) {\\r\\n\\r\\n\\t\\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\\r\\n\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\n//\\r\\n\\r\\nTHREE.CanvasRenderer = function () {\\r\\n\\r\\n\\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\\r\\n\\r\\n\\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\r\\n\\tthis.clear = function () {};\\r\\n\\tthis.render = function () {};\\r\\n\\tthis.setClearColor = function () {};\\r\\n\\tthis.setSize = function () {};\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/CurveUtils.js\\r\\n\\r\\n/**\\r\\n * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n */\\r\\n\\r\\nTHREE.CurveUtils = {\\r\\n\\r\\n\\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\\r\\n\\r\\n\\t\\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Puay Bing, thanks for helping with this derivative!\\r\\n\\r\\n\\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\\r\\n\\r\\n\\t\\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\\r\\n\\t\\t\\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\\r\\n\\t\\t\\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\\r\\n\\t\\t\\t3 * t * t * p3;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\\r\\n\\r\\n\\t\\t// To check if my formulas are correct\\r\\n\\r\\n\\t\\tvar h00 = 6 * t * t - 6 * t; \\t// derived from 2t^3 − 3t^2 + 1\\r\\n\\t\\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\\r\\n\\t\\tvar h01 = - 6 * t * t + 6 * t; \\t// − 2t3 + 3t2\\r\\n\\t\\tvar h11 = 3 * t * t - 2 * t;\\t// t3 − t2\\r\\n\\r\\n\\t\\treturn h00 + h10 + h01 + h11;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Catmull-Rom\\r\\n\\r\\n\\tinterpolate: function( p0, p1, p2, p3, t ) {\\r\\n\\r\\n\\t\\tvar v0 = ( p2 - p0 ) * 0.5;\\r\\n\\t\\tvar v1 = ( p3 - p1 ) * 0.5;\\r\\n\\t\\tvar t2 = t * t;\\r\\n\\t\\tvar t3 = t * t2;\\r\\n\\t\\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/SceneUtils.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.SceneUtils = {\\r\\n\\r\\n\\tcreateMultiMaterialObject: function ( geometry, materials ) {\\r\\n\\r\\n\\t\\tvar group = new THREE.Group();\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn group;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tdetach: function ( child, parent, scene ) {\\r\\n\\r\\n\\t\\tchild.applyMatrix( parent.matrixWorld );\\r\\n\\t\\tparent.remove( child );\\r\\n\\t\\tscene.add( child );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tattach: function ( child, scene, parent ) {\\r\\n\\r\\n\\t\\tvar matrixWorldInverse = new THREE.Matrix4();\\r\\n\\t\\tmatrixWorldInverse.getInverse( parent.matrixWorld );\\r\\n\\t\\tchild.applyMatrix( matrixWorldInverse );\\r\\n\\r\\n\\t\\tscene.remove( child );\\r\\n\\t\\tparent.add( child );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/ShapeUtils.js\\r\\n\\r\\n/**\\r\\n * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n */\\r\\n\\r\\nTHREE.ShapeUtils = {\\r\\n\\r\\n\\t// calculate area of the contour polygon\\r\\n\\r\\n\\tarea: function ( contour ) {\\r\\n\\r\\n\\t\\tvar n = contour.length;\\r\\n\\t\\tvar a = 0.0;\\r\\n\\r\\n\\t\\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\\r\\n\\r\\n\\t\\t\\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn a * 0.5;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttriangulate: ( function () {\\r\\n\\r\\n\\t\\t/**\\r\\n\\t\\t * This code is a quick port of code written in C++ which was submitted to\\r\\n\\t\\t * flipcode.com by John W. Ratcliff  // July 22, 2000\\r\\n\\t\\t * See original code and more information here:\\r\\n\\t\\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\\r\\n\\t\\t *\\r\\n\\t\\t * ported to actionscript by Zevan Rosser\\r\\n\\t\\t * www.actionsnippet.com\\r\\n\\t\\t *\\r\\n\\t\\t * ported to javascript by Joshua Koo\\r\\n\\t\\t * http://www.lab4games.net/zz85/blog\\r\\n\\t\\t *\\r\\n\\t\\t */\\r\\n\\r\\n\\t\\tfunction snip( contour, u, v, w, n, verts ) {\\r\\n\\r\\n\\t\\t\\tvar p;\\r\\n\\t\\t\\tvar ax, ay, bx, by;\\r\\n\\t\\t\\tvar cx, cy, px, py;\\r\\n\\r\\n\\t\\t\\tax = contour[ verts[ u ] ].x;\\r\\n\\t\\t\\tay = contour[ verts[ u ] ].y;\\r\\n\\r\\n\\t\\t\\tbx = contour[ verts[ v ] ].x;\\r\\n\\t\\t\\tby = contour[ verts[ v ] ].y;\\r\\n\\r\\n\\t\\t\\tcx = contour[ verts[ w ] ].x;\\r\\n\\t\\t\\tcy = contour[ verts[ w ] ].y;\\r\\n\\r\\n\\t\\t\\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\\r\\n\\r\\n\\t\\t\\tvar aX, aY, bX, bY, cX, cY;\\r\\n\\t\\t\\tvar apx, apy, bpx, bpy, cpx, cpy;\\r\\n\\t\\t\\tvar cCROSSap, bCROSScp, aCROSSbp;\\r\\n\\r\\n\\t\\t\\taX = cx - bx;  aY = cy - by;\\r\\n\\t\\t\\tbX = ax - cx;  bY = ay - cy;\\r\\n\\t\\t\\tcX = bx - ax;  cY = by - ay;\\r\\n\\r\\n\\t\\t\\tfor ( p = 0; p < n; p ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tpx = contour[ verts[ p ] ].x;\\r\\n\\t\\t\\t\\tpy = contour[ verts[ p ] ].y;\\r\\n\\r\\n\\t\\t\\t\\tif ( ( ( px === ax ) && ( py === ay ) ) ||\\r\\n\\t\\t\\t\\t\\t ( ( px === bx ) && ( py === by ) ) ||\\r\\n\\t\\t\\t\\t\\t ( ( px === cx ) && ( py === cy ) ) )\\tcontinue;\\r\\n\\r\\n\\t\\t\\t\\tapx = px - ax;  apy = py - ay;\\r\\n\\t\\t\\t\\tbpx = px - bx;  bpy = py - by;\\r\\n\\t\\t\\t\\tcpx = px - cx;  cpy = py - cy;\\r\\n\\r\\n\\t\\t\\t\\t// see if p is inside triangle abc\\r\\n\\r\\n\\t\\t\\t\\taCROSSbp = aX * bpy - aY * bpx;\\r\\n\\t\\t\\t\\tcCROSSap = cX * apy - cY * apx;\\r\\n\\t\\t\\t\\tbCROSScp = bX * cpy - bY * cpx;\\r\\n\\r\\n\\t\\t\\t\\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// takes in an contour array and returns\\r\\n\\r\\n\\t\\treturn function triangulate( contour, indices ) {\\r\\n\\r\\n\\t\\t\\tvar n = contour.length;\\r\\n\\r\\n\\t\\t\\tif ( n < 3 ) return null;\\r\\n\\r\\n\\t\\t\\tvar result = [],\\r\\n\\t\\t\\t\\tverts = [],\\r\\n\\t\\t\\t\\tvertIndices = [];\\r\\n\\r\\n\\t\\t\\t/* we want a counter-clockwise polygon in verts */\\r\\n\\r\\n\\t\\t\\tvar u, v, w;\\r\\n\\r\\n\\t\\t\\tif ( THREE.ShapeUtils.area( contour ) > 0.0 ) {\\r\\n\\r\\n\\t\\t\\t\\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar nv = n;\\r\\n\\r\\n\\t\\t\\t/*  remove nv - 2 vertices, creating 1 triangle every time */\\r\\n\\r\\n\\t\\t\\tvar count = 2 * nv;   /* error detection */\\r\\n\\r\\n\\t\\t\\tfor ( v = nv - 1; nv > 2; ) {\\r\\n\\r\\n\\t\\t\\t\\t/* if we loop, it is probably a non-simple polygon */\\r\\n\\r\\n\\t\\t\\t\\tif ( ( count -- ) <= 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t//** Triangulate: ERROR - probable bad polygon!\\r\\n\\r\\n\\t\\t\\t\\t\\t//throw ( \\\"Warning, unable to triangulate polygon!\\\" );\\r\\n\\t\\t\\t\\t\\t//return null;\\r\\n\\t\\t\\t\\t\\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\\r\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( indices ) return vertIndices;\\r\\n\\t\\t\\t\\t\\treturn result;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t/* three consecutive vertices in current polygon, <u,v,w> */\\r\\n\\r\\n\\t\\t\\t\\tu = v; \\t \\tif ( nv <= u ) u = 0;     /* previous */\\r\\n\\t\\t\\t\\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\\r\\n\\t\\t\\t\\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\\r\\n\\r\\n\\t\\t\\t\\tif ( snip( contour, u, v, w, nv, verts ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar a, b, c, s, t;\\r\\n\\r\\n\\t\\t\\t\\t\\t/* true names of the vertices */\\r\\n\\r\\n\\t\\t\\t\\t\\ta = verts[ u ];\\r\\n\\t\\t\\t\\t\\tb = verts[ v ];\\r\\n\\t\\t\\t\\t\\tc = verts[ w ];\\r\\n\\r\\n\\t\\t\\t\\t\\t/* output Triangle */\\r\\n\\r\\n\\t\\t\\t\\t\\tresult.push( [ contour[ a ],\\r\\n\\t\\t\\t\\t\\t\\tcontour[ b ],\\r\\n\\t\\t\\t\\t\\t\\tcontour[ c ] ] );\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\\r\\n\\r\\n\\t\\t\\t\\t\\t/* remove v from the remaining polygon */\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tverts[ s ] = verts[ t ];\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tnv --;\\r\\n\\r\\n\\t\\t\\t\\t\\t/* reset error detection counter */\\r\\n\\r\\n\\t\\t\\t\\t\\tcount = 2 * nv;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( indices ) return vertIndices;\\r\\n\\t\\t\\treturn result;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t} )(),\\r\\n\\r\\n\\ttriangulateShape: function ( contour, holes ) {\\r\\n\\r\\n\\t\\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\\r\\n\\r\\n\\t\\t\\t// inOtherPt needs to be collinear to the inSegment\\r\\n\\t\\t\\tif ( inSegPt1.x !== inSegPt2.x ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( inSegPt1.x < inSegPt2.x ) {\\r\\n\\r\\n\\t\\t\\t\\t\\treturn\\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\treturn\\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tif ( inSegPt1.y < inSegPt2.y ) {\\r\\n\\r\\n\\t\\t\\t\\t\\treturn\\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\treturn\\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\\r\\n\\r\\n\\t\\t\\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\\r\\n\\t\\t\\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\\r\\n\\r\\n\\t\\t\\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\\r\\n\\t\\t\\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\\r\\n\\r\\n\\t\\t\\tvar limit\\t\\t= seg1dy * seg2dx - seg1dx * seg2dy;\\r\\n\\t\\t\\tvar perpSeg1\\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\\r\\n\\r\\n\\t\\t\\tif ( Math.abs( limit ) > Number.EPSILON ) {\\r\\n\\r\\n\\t\\t\\t\\t// not parallel\\r\\n\\r\\n\\t\\t\\t\\tvar perpSeg2;\\r\\n\\t\\t\\t\\tif ( limit > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \\t\\treturn [];\\r\\n\\t\\t\\t\\t\\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\\r\\n\\t\\t\\t\\t\\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \\t\\treturn [];\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \\t\\treturn [];\\r\\n\\t\\t\\t\\t\\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\\r\\n\\t\\t\\t\\t\\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \\t\\treturn [];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// i.e. to reduce rounding errors\\r\\n\\t\\t\\t\\t// intersection at endpoint of segment#1?\\r\\n\\t\\t\\t\\tif ( perpSeg2 === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ( inExcludeAdjacentSegs ) &&\\r\\n\\t\\t\\t\\t\\t\\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\\t\\treturn [];\\r\\n\\t\\t\\t\\t\\treturn [ inSeg1Pt1 ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tif ( perpSeg2 === limit ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ( inExcludeAdjacentSegs ) &&\\r\\n\\t\\t\\t\\t\\t\\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\\t\\treturn [];\\r\\n\\t\\t\\t\\t\\treturn [ inSeg1Pt2 ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t// intersection at endpoint of segment#2?\\r\\n\\t\\t\\t\\tif ( perpSeg1 === 0 )\\t\\treturn [ inSeg2Pt1 ];\\r\\n\\t\\t\\t\\tif ( perpSeg1 === limit )\\treturn [ inSeg2Pt2 ];\\r\\n\\r\\n\\t\\t\\t\\t// return real intersection point\\r\\n\\t\\t\\t\\tvar factorSeg1 = perpSeg2 / limit;\\r\\n\\t\\t\\t\\treturn\\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\\r\\n\\t\\t\\t\\t\\t\\t\\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// parallel or collinear\\r\\n\\t\\t\\t\\tif ( ( perpSeg1 !== 0 ) ||\\r\\n\\t\\t\\t\\t\\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \\t\\t\\treturn [];\\r\\n\\r\\n\\t\\t\\t\\t// they are collinear or degenerate\\r\\n\\t\\t\\t\\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\\t// segment1 is just a point?\\r\\n\\t\\t\\t\\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\\t// segment2 is just a point?\\r\\n\\t\\t\\t\\t// both segments are points\\r\\n\\t\\t\\t\\tif ( seg1Pt && seg2Pt ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\\r\\n\\t\\t\\t\\t\\t\\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\\t\\treturn [];\\t// they are distinct  points\\r\\n\\t\\t\\t\\t\\treturn [ inSeg1Pt1 ];                 \\t\\t\\t\\t\\t\\t// they are the same point\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t// segment#1  is a single point\\r\\n\\t\\t\\t\\tif ( seg1Pt ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\\t\\treturn [];\\t\\t// but not in segment#2\\r\\n\\t\\t\\t\\t\\treturn [ inSeg1Pt1 ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t// segment#2  is a single point\\r\\n\\t\\t\\t\\tif ( seg2Pt ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\\t\\treturn [];\\t\\t// but not in segment#1\\r\\n\\t\\t\\t\\t\\treturn [ inSeg2Pt1 ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// they are collinear segments, which might overlap\\r\\n\\t\\t\\t\\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\\r\\n\\t\\t\\t\\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\\r\\n\\t\\t\\t\\tif ( seg1dx !== 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// the segments are NOT on a vertical line\\r\\n\\t\\t\\t\\t\\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\\r\\n\\t\\t\\t\\t\\t\\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\\r\\n\\t\\t\\t\\t\\t\\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\\r\\n\\t\\t\\t\\t\\t\\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\\r\\n\\t\\t\\t\\t\\t\\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t// the segments are on a vertical line\\r\\n\\t\\t\\t\\t\\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\\r\\n\\t\\t\\t\\t\\t\\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\\r\\n\\t\\t\\t\\t\\t\\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\\r\\n\\t\\t\\t\\t\\t\\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\\r\\n\\t\\t\\t\\t\\t\\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tif ( seg1minVal <= seg2minVal ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( seg1maxVal <  seg2minVal )\\treturn [];\\r\\n\\t\\t\\t\\t\\tif ( seg1maxVal === seg2minVal )\\t{\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( inExcludeAdjacentSegs )\\t\\treturn [];\\r\\n\\t\\t\\t\\t\\t\\treturn [ seg2min ];\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tif ( seg1maxVal <= seg2maxVal )\\treturn [ seg2min, seg1max ];\\r\\n\\t\\t\\t\\t\\treturn\\t[ seg2min, seg2max ];\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( seg1minVal >  seg2maxVal )\\treturn [];\\r\\n\\t\\t\\t\\t\\tif ( seg1minVal === seg2maxVal )\\t{\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( inExcludeAdjacentSegs )\\t\\treturn [];\\r\\n\\t\\t\\t\\t\\t\\treturn [ seg1min ];\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tif ( seg1maxVal <= seg2maxVal )\\treturn [ seg1min, seg1max ];\\r\\n\\t\\t\\t\\t\\treturn\\t[ seg1min, seg2max ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\\r\\n\\r\\n\\t\\t\\t// The order of legs is important\\r\\n\\r\\n\\t\\t\\t// translation of all points, so that Vertex is at (0,0)\\r\\n\\t\\t\\tvar legFromPtX\\t= inLegFromPt.x - inVertex.x,  legFromPtY\\t= inLegFromPt.y - inVertex.y;\\r\\n\\t\\t\\tvar legToPtX\\t= inLegToPt.x\\t- inVertex.x,  legToPtY\\t\\t= inLegToPt.y\\t- inVertex.y;\\r\\n\\t\\t\\tvar otherPtX\\t= inOtherPt.x\\t- inVertex.x,  otherPtY\\t\\t= inOtherPt.y\\t- inVertex.y;\\r\\n\\r\\n\\t\\t\\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\\r\\n\\t\\t\\tvar from2toAngle\\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\\r\\n\\t\\t\\tvar from2otherAngle\\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\\r\\n\\r\\n\\t\\t\\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\\r\\n\\r\\n\\t\\t\\t\\t// angle != 180 deg.\\r\\n\\r\\n\\t\\t\\t\\tvar other2toAngle\\t\\t= otherPtX * legToPtY - otherPtY * legToPtX;\\r\\n\\t\\t\\t\\t// console.log( \\\"from2to: \\\" + from2toAngle + \\\", from2other: \\\" + from2otherAngle + \\\", other2to: \\\" + other2toAngle );\\r\\n\\r\\n\\t\\t\\t\\tif ( from2toAngle > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// main angle < 180 deg.\\r\\n\\t\\t\\t\\t\\treturn\\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t// main angle > 180 deg.\\r\\n\\t\\t\\t\\t\\treturn\\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// angle == 180 deg.\\r\\n\\t\\t\\t\\t// console.log( \\\"from2to: 180 deg., from2other: \\\" + from2otherAngle  );\\r\\n\\t\\t\\t\\treturn\\t( from2otherAngle > 0 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\tfunction removeHoles( contour, holes ) {\\r\\n\\r\\n\\t\\t\\tvar shape = contour.concat(); // work on this shape\\r\\n\\t\\t\\tvar hole;\\r\\n\\r\\n\\t\\t\\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\\r\\n\\r\\n\\t\\t\\t\\t// Check if hole point lies within angle around shape point\\r\\n\\t\\t\\t\\tvar lastShapeIdx = shape.length - 1;\\r\\n\\r\\n\\t\\t\\t\\tvar prevShapeIdx = inShapeIdx - 1;\\r\\n\\t\\t\\t\\tif ( prevShapeIdx < 0 )\\t\\t\\tprevShapeIdx = lastShapeIdx;\\r\\n\\r\\n\\t\\t\\t\\tvar nextShapeIdx = inShapeIdx + 1;\\r\\n\\t\\t\\t\\tif ( nextShapeIdx > lastShapeIdx )\\tnextShapeIdx = 0;\\r\\n\\r\\n\\t\\t\\t\\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\\r\\n\\t\\t\\t\\tif ( ! insideAngle ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// console.log( \\\"Vertex (Shape): \\\" + inShapeIdx + \\\", Point: \\\" + hole[inHoleIdx].x + \\\"/\\\" + hole[inHoleIdx].y );\\r\\n\\t\\t\\t\\t\\treturn\\tfalse;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Check if shape point lies within angle around hole point\\r\\n\\t\\t\\t\\tvar lastHoleIdx = hole.length - 1;\\r\\n\\r\\n\\t\\t\\t\\tvar prevHoleIdx = inHoleIdx - 1;\\r\\n\\t\\t\\t\\tif ( prevHoleIdx < 0 )\\t\\t\\tprevHoleIdx = lastHoleIdx;\\r\\n\\r\\n\\t\\t\\t\\tvar nextHoleIdx = inHoleIdx + 1;\\r\\n\\t\\t\\t\\tif ( nextHoleIdx > lastHoleIdx )\\tnextHoleIdx = 0;\\r\\n\\r\\n\\t\\t\\t\\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\\r\\n\\t\\t\\t\\tif ( ! insideAngle ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// console.log( \\\"Vertex (Hole): \\\" + inHoleIdx + \\\", Point: \\\" + shape[inShapeIdx].x + \\\"/\\\" + shape[inShapeIdx].y );\\r\\n\\t\\t\\t\\t\\treturn\\tfalse;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\treturn\\ttrue;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\\r\\n\\r\\n\\t\\t\\t\\t// checks for intersections with shape edges\\r\\n\\t\\t\\t\\tvar sIdx, nextIdx, intersection;\\r\\n\\t\\t\\t\\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tnextIdx = sIdx + 1; nextIdx %= shape.length;\\r\\n\\t\\t\\t\\t\\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\\r\\n\\t\\t\\t\\t\\tif ( intersection.length > 0 )\\t\\treturn\\ttrue;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\treturn\\tfalse;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar indepHoles = [];\\r\\n\\r\\n\\t\\t\\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\\r\\n\\r\\n\\t\\t\\t\\t// checks for intersections with hole edges\\r\\n\\t\\t\\t\\tvar ihIdx, chkHole,\\r\\n\\t\\t\\t\\t\\thIdx, nextIdx, intersection;\\r\\n\\t\\t\\t\\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tchkHole = holes[ indepHoles[ ihIdx ]];\\r\\n\\t\\t\\t\\t\\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\\r\\n\\t\\t\\t\\t\\t\\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\\r\\n\\t\\t\\t\\t\\t\\tif ( intersection.length > 0 )\\t\\treturn\\ttrue;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\treturn\\tfalse;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar holeIndex, shapeIndex,\\r\\n\\t\\t\\t\\tshapePt, holePt,\\r\\n\\t\\t\\t\\tholeIdx, cutKey, failedCuts = [],\\r\\n\\t\\t\\t\\ttmpShape1, tmpShape2,\\r\\n\\t\\t\\t\\ttmpHole1, tmpHole2;\\r\\n\\r\\n\\t\\t\\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tindepHoles.push( h );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar minShapeIndex = 0;\\r\\n\\t\\t\\tvar counter = indepHoles.length * 2;\\r\\n\\t\\t\\twhile ( indepHoles.length > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tcounter --;\\r\\n\\t\\t\\t\\tif ( counter < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.log( \\\"Infinite Loop! Holes left:\\\" + indepHoles.length + \\\", Probably Hole outside Shape!\\\" );\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// search for shape-vertex and hole-vertex,\\r\\n\\t\\t\\t\\t// which can be connected without intersections\\r\\n\\t\\t\\t\\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tshapePt = shape[ shapeIndex ];\\r\\n\\t\\t\\t\\t\\tholeIndex\\t= - 1;\\r\\n\\r\\n\\t\\t\\t\\t\\t// search for hole which can be reached without intersections\\r\\n\\t\\t\\t\\t\\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tholeIdx = indepHoles[ h ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// prevent multiple checks\\r\\n\\t\\t\\t\\t\\t\\tcutKey = shapePt.x + \\\":\\\" + shapePt.y + \\\":\\\" + holeIdx;\\r\\n\\t\\t\\t\\t\\t\\tif ( failedCuts[ cutKey ] !== undefined )\\t\\t\\tcontinue;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\thole = holes[ holeIdx ];\\r\\n\\t\\t\\t\\t\\t\\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tholePt = hole[ h2 ];\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\\t\\tcontinue;\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( intersectsShapeEdge( shapePt, holePt ) )\\t\\tcontinue;\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( intersectsHoleEdge( shapePt, holePt ) )\\t\\tcontinue;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tholeIndex = h2;\\r\\n\\t\\t\\t\\t\\t\\t\\tindepHoles.splice( h, 1 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\\r\\n\\t\\t\\t\\t\\t\\t\\ttmpShape2 = shape.slice( shapeIndex );\\r\\n\\t\\t\\t\\t\\t\\t\\ttmpHole1 = hole.slice( holeIndex );\\r\\n\\t\\t\\t\\t\\t\\t\\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tminShapeIndex = shapeIndex;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Debug only, to show the selected cuts\\r\\n\\t\\t\\t\\t\\t\\t\\t// glob_CutLines.push( [ shapePt, holePt ] );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\tif ( holeIndex >= 0 )\\tbreak;\\t\\t// hole-vertex found\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfailedCuts[ cutKey ] = true;\\t\\t\\t// remember failure\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tif ( holeIndex >= 0 )\\tbreak;\\t\\t// hole-vertex found\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn shape; \\t\\t\\t/* shape with no holes */\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\tvar i, il, f, face,\\r\\n\\t\\t\\tkey, index,\\r\\n\\t\\t\\tallPointsMap = {};\\r\\n\\r\\n\\t\\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\\r\\n\\r\\n\\t\\tvar allpoints = contour.concat();\\r\\n\\r\\n\\t\\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\tArray.prototype.push.apply( allpoints, holes[ h ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//console.log( \\\"allpoints\\\",allpoints, allpoints.length );\\r\\n\\r\\n\\t\\t// prepare all points map\\r\\n\\r\\n\\t\\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tkey = allpoints[ i ].x + \\\":\\\" + allpoints[ i ].y;\\r\\n\\r\\n\\t\\t\\tif ( allPointsMap[ key ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tconsole.warn( \\\"THREE.Shape: Duplicate point\\\", key );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tallPointsMap[ key ] = i;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// remove holes by cutting paths to holes and adding them to the shape\\r\\n\\t\\tvar shapeWithoutHoles = removeHoles( contour, holes );\\r\\n\\r\\n\\t\\tvar triangles = THREE.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\\r\\n\\t\\t//console.log( \\\"triangles\\\",triangles, triangles.length );\\r\\n\\r\\n\\t\\t// check all face vertices against all points map\\r\\n\\r\\n\\t\\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tface = triangles[ i ];\\r\\n\\r\\n\\t\\t\\tfor ( f = 0; f < 3; f ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tkey = face[ f ].x + \\\":\\\" + face[ f ].y;\\r\\n\\r\\n\\t\\t\\t\\tindex = allPointsMap[ key ];\\r\\n\\r\\n\\t\\t\\t\\tif ( index !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tface[ f ] = index;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn triangles.concat();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tisClockWise: function ( pts ) {\\r\\n\\r\\n\\t\\treturn THREE.ShapeUtils.area( pts ) < 0;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Bezier Curves formulas obtained from\\r\\n\\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\\r\\n\\r\\n\\t// Quad Bezier Functions\\r\\n\\r\\n\\tb2: ( function () {\\r\\n\\r\\n\\t\\tfunction b2p0( t, p ) {\\r\\n\\r\\n\\t\\t\\tvar k = 1 - t;\\r\\n\\t\\t\\treturn k * k * p;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction b2p1( t, p ) {\\r\\n\\r\\n\\t\\t\\treturn 2 * ( 1 - t ) * t * p;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction b2p2( t, p ) {\\r\\n\\r\\n\\t\\t\\treturn t * t * p;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn function b2( t, p0, p1, p2 ) {\\r\\n\\r\\n\\t\\t\\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )(),\\r\\n\\r\\n\\t// Cubic Bezier Functions\\r\\n\\r\\n\\tb3: ( function () {\\r\\n\\r\\n\\t\\tfunction b3p0( t, p ) {\\r\\n\\r\\n\\t\\t\\tvar k = 1 - t;\\r\\n\\t\\t\\treturn k * k * k * p;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction b3p1( t, p ) {\\r\\n\\r\\n\\t\\t\\tvar k = 1 - t;\\r\\n\\t\\t\\treturn 3 * k * k * t * p;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction b3p2( t, p ) {\\r\\n\\r\\n\\t\\t\\tvar k = 1 - t;\\r\\n\\t\\t\\treturn 3 * k * t * t * p;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction b3p3( t, p ) {\\r\\n\\r\\n\\t\\t\\treturn t * t * t * p;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn function b3( t, p0, p1, p2, p3 ) {\\r\\n\\r\\n\\t\\t\\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )()\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/core/Curve.js\\r\\n\\r\\n/**\\r\\n * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n * Extensible curve object\\r\\n *\\r\\n * Some common of Curve methods\\r\\n * .getPoint(t), getTangent(t)\\r\\n * .getPointAt(u), getTagentAt(u)\\r\\n * .getPoints(), .getSpacedPoints()\\r\\n * .getLength()\\r\\n * .updateArcLengths()\\r\\n *\\r\\n * This following classes subclasses THREE.Curve:\\r\\n *\\r\\n * -- 2d classes --\\r\\n * THREE.LineCurve\\r\\n * THREE.QuadraticBezierCurve\\r\\n * THREE.CubicBezierCurve\\r\\n * THREE.SplineCurve\\r\\n * THREE.ArcCurve\\r\\n * THREE.EllipseCurve\\r\\n *\\r\\n * -- 3d classes --\\r\\n * THREE.LineCurve3\\r\\n * THREE.QuadraticBezierCurve3\\r\\n * THREE.CubicBezierCurve3\\r\\n * THREE.SplineCurve3\\r\\n *\\r\\n * A series of curves can be represented as a THREE.CurvePath\\r\\n *\\r\\n **/\\r\\n\\r\\n/**************************************************************\\r\\n *\\tAbstract Curve base class\\r\\n **************************************************************/\\r\\n\\r\\nTHREE.Curve = function () {\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Curve.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Curve,\\r\\n\\r\\n\\t// Virtual base class method to overwrite and implement in subclasses\\r\\n\\t//\\t- t [0 .. 1]\\r\\n\\r\\n\\tgetPoint: function ( t ) {\\r\\n\\r\\n\\t\\tconsole.warn( \\\"THREE.Curve: Warning, getPoint() not implemented!\\\" );\\r\\n\\t\\treturn null;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Get point at relative position in curve according to arc length\\r\\n\\t// - u [0 .. 1]\\r\\n\\r\\n\\tgetPointAt: function ( u ) {\\r\\n\\r\\n\\t\\tvar t = this.getUtoTmapping( u );\\r\\n\\t\\treturn this.getPoint( t );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Get sequence of points using getPoint( t )\\r\\n\\r\\n\\tgetPoints: function ( divisions ) {\\r\\n\\r\\n\\t\\tif ( ! divisions ) divisions = 5;\\r\\n\\r\\n\\t\\tvar d, pts = [];\\r\\n\\r\\n\\t\\tfor ( d = 0; d <= divisions; d ++ ) {\\r\\n\\r\\n\\t\\t\\tpts.push( this.getPoint( d / divisions ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn pts;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Get sequence of points using getPointAt( u )\\r\\n\\r\\n\\tgetSpacedPoints: function ( divisions ) {\\r\\n\\r\\n\\t\\tif ( ! divisions ) divisions = 5;\\r\\n\\r\\n\\t\\tvar d, pts = [];\\r\\n\\r\\n\\t\\tfor ( d = 0; d <= divisions; d ++ ) {\\r\\n\\r\\n\\t\\t\\tpts.push( this.getPointAt( d / divisions ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn pts;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Get total curve arc length\\r\\n\\r\\n\\tgetLength: function () {\\r\\n\\r\\n\\t\\tvar lengths = this.getLengths();\\r\\n\\t\\treturn lengths[ lengths.length - 1 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Get list of cumulative segment lengths\\r\\n\\r\\n\\tgetLengths: function ( divisions ) {\\r\\n\\r\\n\\t\\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\\r\\n\\r\\n\\t\\tif ( this.cacheArcLengths\\r\\n\\t\\t\\t&& ( this.cacheArcLengths.length === divisions + 1 )\\r\\n\\t\\t\\t&& ! this.needsUpdate ) {\\r\\n\\r\\n\\t\\t\\t//console.log( \\\"cached\\\", this.cacheArcLengths );\\r\\n\\t\\t\\treturn this.cacheArcLengths;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.needsUpdate = false;\\r\\n\\r\\n\\t\\tvar cache = [];\\r\\n\\t\\tvar current, last = this.getPoint( 0 );\\r\\n\\t\\tvar p, sum = 0;\\r\\n\\r\\n\\t\\tcache.push( 0 );\\r\\n\\r\\n\\t\\tfor ( p = 1; p <= divisions; p ++ ) {\\r\\n\\r\\n\\t\\t\\tcurrent = this.getPoint ( p / divisions );\\r\\n\\t\\t\\tsum += current.distanceTo( last );\\r\\n\\t\\t\\tcache.push( sum );\\r\\n\\t\\t\\tlast = current;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.cacheArcLengths = cache;\\r\\n\\r\\n\\t\\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdateArcLengths: function() {\\r\\n\\r\\n\\t\\tthis.needsUpdate = true;\\r\\n\\t\\tthis.getLengths();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\\r\\n\\r\\n\\tgetUtoTmapping: function ( u, distance ) {\\r\\n\\r\\n\\t\\tvar arcLengths = this.getLengths();\\r\\n\\r\\n\\t\\tvar i = 0, il = arcLengths.length;\\r\\n\\r\\n\\t\\tvar targetArcLength; // The targeted u distance value to get\\r\\n\\r\\n\\t\\tif ( distance ) {\\r\\n\\r\\n\\t\\t\\ttargetArcLength = distance;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\ttargetArcLength = u * arcLengths[ il - 1 ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//var time = Date.now();\\r\\n\\r\\n\\t\\t// binary search for the index with largest value smaller than target u distance\\r\\n\\r\\n\\t\\tvar low = 0, high = il - 1, comparison;\\r\\n\\r\\n\\t\\twhile ( low <= high ) {\\r\\n\\r\\n\\t\\t\\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\\r\\n\\r\\n\\t\\t\\tcomparison = arcLengths[ i ] - targetArcLength;\\r\\n\\r\\n\\t\\t\\tif ( comparison < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tlow = i + 1;\\r\\n\\r\\n\\t\\t\\t} else if ( comparison > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\thigh = i - 1;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\thigh = i;\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t// DONE\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\ti = high;\\r\\n\\r\\n\\t\\t//console.log('b' , i, low, high, Date.now()- time);\\r\\n\\r\\n\\t\\tif ( arcLengths[ i ] === targetArcLength ) {\\r\\n\\r\\n\\t\\t\\tvar t = i / ( il - 1 );\\r\\n\\t\\t\\treturn t;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// we could get finer grain at lengths, or use simple interpolation between two points\\r\\n\\r\\n\\t\\tvar lengthBefore = arcLengths[ i ];\\r\\n\\t\\tvar lengthAfter = arcLengths[ i + 1 ];\\r\\n\\r\\n\\t\\tvar segmentLength = lengthAfter - lengthBefore;\\r\\n\\r\\n\\t\\t// determine where we are between the 'before' and 'after' points\\r\\n\\r\\n\\t\\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\\r\\n\\r\\n\\t\\t// add that fractional amount to t\\r\\n\\r\\n\\t\\tvar t = ( i + segmentFraction ) / ( il - 1 );\\r\\n\\r\\n\\t\\treturn t;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Returns a unit vector tangent at t\\r\\n\\t// In case any sub curve does not implement its tangent derivation,\\r\\n\\t// 2 points a small delta apart will be used to find its gradient\\r\\n\\t// which seems to give a reasonable approximation\\r\\n\\r\\n\\tgetTangent: function( t ) {\\r\\n\\r\\n\\t\\tvar delta = 0.0001;\\r\\n\\t\\tvar t1 = t - delta;\\r\\n\\t\\tvar t2 = t + delta;\\r\\n\\r\\n\\t\\t// Capping in case of danger\\r\\n\\r\\n\\t\\tif ( t1 < 0 ) t1 = 0;\\r\\n\\t\\tif ( t2 > 1 ) t2 = 1;\\r\\n\\r\\n\\t\\tvar pt1 = this.getPoint( t1 );\\r\\n\\t\\tvar pt2 = this.getPoint( t2 );\\r\\n\\r\\n\\t\\tvar vec = pt2.clone().sub( pt1 );\\r\\n\\t\\treturn vec.normalize();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetTangentAt: function ( u ) {\\r\\n\\r\\n\\t\\tvar t = this.getUtoTmapping( u );\\r\\n\\t\\treturn this.getTangent( t );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// TODO: Transformation for Curves?\\r\\n\\r\\n/**************************************************************\\r\\n *\\t3D Curves\\r\\n **************************************************************/\\r\\n\\r\\n// A Factory method for creating new curve subclasses\\r\\n\\r\\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\\r\\n\\r\\n\\tconstructor.prototype = Object.create( THREE.Curve.prototype );\\r\\n\\tconstructor.prototype.constructor = constructor;\\r\\n\\tconstructor.prototype.getPoint = getPointFunc;\\r\\n\\r\\n\\treturn constructor;\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/core/CurvePath.js\\r\\n\\r\\n/**\\r\\n * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n *\\r\\n **/\\r\\n\\r\\n/**************************************************************\\r\\n *\\tCurved Path - a curve path is simply a array of connected\\r\\n *  curves, but retains the api of a curve\\r\\n **************************************************************/\\r\\n\\r\\nTHREE.CurvePath = function () {\\r\\n\\r\\n\\tthis.curves = [];\\r\\n\\r\\n\\tthis.autoClose = false; // Automatically closes the path\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CurvePath.prototype = Object.assign( Object.create( THREE.Curve.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.CurvePath,\\r\\n\\r\\n\\tadd: function ( curve ) {\\r\\n\\r\\n\\t\\tthis.curves.push( curve );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclosePath: function () {\\r\\n\\r\\n\\t\\t// TODO Test\\r\\n\\t\\t// and verify for vector3 (needs to implement equals)\\r\\n\\t\\t// Add a line curve if start and end of lines are not connected\\r\\n\\t\\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\\r\\n\\t\\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\\r\\n\\r\\n\\t\\tif ( ! startPoint.equals( endPoint ) ) {\\r\\n\\r\\n\\t\\t\\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// To get accurate point with reference to\\r\\n\\t// entire path distance at time t,\\r\\n\\t// following has to be done:\\r\\n\\r\\n\\t// 1. Length of each sub path have to be known\\r\\n\\t// 2. Locate and identify type of curve\\r\\n\\t// 3. Get t for the curve\\r\\n\\t// 4. Return curve.getPointAt(t')\\r\\n\\r\\n\\tgetPoint: function ( t ) {\\r\\n\\r\\n\\t\\tvar d = t * this.getLength();\\r\\n\\t\\tvar curveLengths = this.getCurveLengths();\\r\\n\\t\\tvar i = 0;\\r\\n\\r\\n\\t\\t// To think about boundaries points.\\r\\n\\r\\n\\t\\twhile ( i < curveLengths.length ) {\\r\\n\\r\\n\\t\\t\\tif ( curveLengths[ i ] >= d ) {\\r\\n\\r\\n\\t\\t\\t\\tvar diff = curveLengths[ i ] - d;\\r\\n\\t\\t\\t\\tvar curve = this.curves[ i ];\\r\\n\\r\\n\\t\\t\\t\\tvar u = 1 - diff / curve.getLength();\\r\\n\\r\\n\\t\\t\\t\\treturn curve.getPointAt( u );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ti ++;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn null;\\r\\n\\r\\n\\t\\t// loop where sum != 0, sum > d , sum+1 <d\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\\r\\n\\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\\r\\n\\t// getPoint() depends on getLength\\r\\n\\r\\n\\tgetLength: function () {\\r\\n\\r\\n\\t\\tvar lens = this.getCurveLengths();\\r\\n\\t\\treturn lens[ lens.length - 1 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// cacheLengths must be recalculated.\\r\\n\\tupdateArcLengths: function () {\\r\\n\\r\\n\\t\\tthis.needsUpdate = true;\\r\\n\\t\\tthis.cacheLengths = null;\\r\\n\\t\\tthis.getLengths();\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Compute lengths and cache them\\r\\n\\t// We cannot overwrite getLengths() because UtoT mapping uses it.\\r\\n\\r\\n\\tgetCurveLengths: function () {\\r\\n\\r\\n\\t\\t// We use cache values if curves and cache array are same length\\r\\n\\r\\n\\t\\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\\r\\n\\r\\n\\t\\t\\treturn this.cacheLengths;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Get length of sub-curve\\r\\n\\t\\t// Push sums into cached array\\r\\n\\r\\n\\t\\tvar lengths = [], sums = 0;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tsums += this.curves[ i ].getLength();\\r\\n\\t\\t\\tlengths.push( sums );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.cacheLengths = lengths;\\r\\n\\r\\n\\t\\treturn lengths;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t/**************************************************************\\r\\n\\t *\\tCreate Geometries Helpers\\r\\n\\t **************************************************************/\\r\\n\\r\\n\\t/// Generate geometry from path points (for Line or Points objects)\\r\\n\\r\\n\\tcreatePointsGeometry: function ( divisions ) {\\r\\n\\r\\n\\t\\tvar pts = this.getPoints( divisions );\\r\\n\\t\\treturn this.createGeometry( pts );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Generate geometry from equidistant sampling along the path\\r\\n\\r\\n\\tcreateSpacedPointsGeometry: function ( divisions ) {\\r\\n\\r\\n\\t\\tvar pts = this.getSpacedPoints( divisions );\\r\\n\\t\\treturn this.createGeometry( pts );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tcreateGeometry: function ( points ) {\\r\\n\\r\\n\\t\\tvar geometry = new THREE.Geometry();\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar point = points[ i ];\\r\\n\\t\\t\\tgeometry.vertices.push( new THREE.Vector3( point.x, point.y, point.z || 0 ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn geometry;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/extras/core/Font.js\\r\\n\\r\\n/**\\r\\n * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.Font = function ( data ) {\\r\\n\\r\\n\\tthis.data = data;\\r\\n\\r\\n};\\r\\n\\r\\nObject.assign( THREE.Font.prototype, {\\r\\n\\r\\n\\tgenerateShapes: function ( text, size, divisions ) {\\r\\n\\r\\n\\t\\tfunction createPaths( text ) {\\r\\n\\r\\n\\t\\t\\tvar chars = String( text ).split( '' );\\r\\n\\t\\t\\tvar scale = size / data.resolution;\\r\\n\\t\\t\\tvar offset = 0;\\r\\n\\r\\n\\t\\t\\tvar paths = [];\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0; i < chars.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar ret = createPath( chars[ i ], scale, offset );\\r\\n\\t\\t\\t\\toffset += ret.offset;\\r\\n\\r\\n\\t\\t\\t\\tpaths.push( ret.path );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn paths;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction createPath( c, scale, offset ) {\\r\\n\\r\\n\\t\\t\\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\\r\\n\\r\\n\\t\\t\\tif ( ! glyph ) return;\\r\\n\\r\\n\\t\\t\\tvar path = new THREE.Path();\\r\\n\\r\\n\\t\\t\\tvar pts = [], b2 = THREE.ShapeUtils.b2, b3 = THREE.ShapeUtils.b3;\\r\\n\\t\\t\\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\\r\\n\\r\\n\\t\\t\\tif ( glyph.o ) {\\r\\n\\r\\n\\t\\t\\t\\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = 0, l = outline.length; i < l; ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar action = outline[ i ++ ];\\r\\n\\r\\n\\t\\t\\t\\t\\tswitch ( action ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tcase 'm': // moveTo\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tx = outline[ i ++ ] * scale + offset;\\r\\n\\t\\t\\t\\t\\t\\t\\ty = outline[ i ++ ] * scale;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tpath.moveTo( x, y );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tcase 'l': // lineTo\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tx = outline[ i ++ ] * scale + offset;\\r\\n\\t\\t\\t\\t\\t\\t\\ty = outline[ i ++ ] * scale;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tpath.lineTo( x, y );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tcase 'q': // quadraticCurveTo\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tcpx  = outline[ i ++ ] * scale + offset;\\r\\n\\t\\t\\t\\t\\t\\t\\tcpy  = outline[ i ++ ] * scale;\\r\\n\\t\\t\\t\\t\\t\\t\\tcpx1 = outline[ i ++ ] * scale + offset;\\r\\n\\t\\t\\t\\t\\t\\t\\tcpy1 = outline[ i ++ ] * scale;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tlaste = pts[ pts.length - 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( laste ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcpx0 = laste.x;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcpy0 = laste.y;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar t = i2 / divisions;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tb2( t, cpx0, cpx1, cpx );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tb2( t, cpy0, cpy1, cpy );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tcase 'b': // bezierCurveTo\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tcpx  = outline[ i ++ ] * scale + offset;\\r\\n\\t\\t\\t\\t\\t\\t\\tcpy  = outline[ i ++ ] * scale;\\r\\n\\t\\t\\t\\t\\t\\t\\tcpx1 = outline[ i ++ ] * scale + offset;\\r\\n\\t\\t\\t\\t\\t\\t\\tcpy1 = outline[ i ++ ] * scale;\\r\\n\\t\\t\\t\\t\\t\\t\\tcpx2 = outline[ i ++ ] * scale + offset;\\r\\n\\t\\t\\t\\t\\t\\t\\tcpy2 = outline[ i ++ ] * scale;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tlaste = pts[ pts.length - 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( laste ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcpx0 = laste.x;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcpy0 = laste.y;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar t = i2 / divisions;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tb3( t, cpx0, cpx1, cpx2, cpx );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tb3( t, cpy0, cpy1, cpy2, cpy );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn { offset: glyph.ha * scale, path: path };\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tif ( size === undefined ) size = 100;\\r\\n\\t\\tif ( divisions === undefined ) divisions = 4;\\r\\n\\r\\n\\t\\tvar data = this.data;\\r\\n\\r\\n\\t\\tvar paths = createPaths( text );\\r\\n\\t\\tvar shapes = [];\\r\\n\\r\\n\\t\\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\\r\\n\\r\\n\\t\\t\\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn shapes;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/extras/core/Path.js\\r\\n\\r\\n/**\\r\\n * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n * Creates free form 2d path using series of points, lines or curves.\\r\\n *\\r\\n **/\\r\\n\\r\\nTHREE.Path = function ( points ) {\\r\\n\\r\\n\\tTHREE.CurvePath.call( this );\\r\\n\\r\\n\\tthis.actions = [];\\r\\n\\r\\n\\tif ( points ) {\\r\\n\\r\\n\\t\\tthis.fromPoints( points );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Path.prototype = Object.assign( Object.create( THREE.CurvePath.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.Path,\\r\\n\\r\\n\\t// TODO Clean up PATH API\\r\\n\\r\\n\\t// Create path using straight lines to connect all points\\r\\n\\t// - vectors: array of Vector2\\r\\n\\r\\n\\tfromPoints: function ( vectors ) {\\r\\n\\r\\n\\t\\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\\r\\n\\r\\n\\t\\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tmoveTo: function ( x, y ) {\\r\\n\\r\\n\\t\\tthis.actions.push( { action: 'moveTo', args: [ x, y ] } );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tlineTo: function ( x, y ) {\\r\\n\\r\\n\\t\\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\\r\\n\\r\\n\\t\\tvar x0 = lastargs[ lastargs.length - 2 ];\\r\\n\\t\\tvar y0 = lastargs[ lastargs.length - 1 ];\\r\\n\\r\\n\\t\\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\\r\\n\\t\\tthis.curves.push( curve );\\r\\n\\r\\n\\t\\tthis.actions.push( { action: 'lineTo', args: [ x, y ] } );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\\r\\n\\r\\n\\t\\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\\r\\n\\r\\n\\t\\tvar x0 = lastargs[ lastargs.length - 2 ];\\r\\n\\t\\tvar y0 = lastargs[ lastargs.length - 1 ];\\r\\n\\r\\n\\t\\tvar curve = new THREE.QuadraticBezierCurve(\\r\\n\\t\\t\\tnew THREE.Vector2( x0, y0 ),\\r\\n\\t\\t\\tnew THREE.Vector2( aCPx, aCPy ),\\r\\n\\t\\t\\tnew THREE.Vector2( aX, aY )\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tthis.curves.push( curve );\\r\\n\\r\\n\\t\\tthis.actions.push( { action: 'quadraticCurveTo', args: [ aCPx, aCPy, aX, aY ] } );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\\r\\n\\r\\n\\t\\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\\r\\n\\r\\n\\t\\tvar x0 = lastargs[ lastargs.length - 2 ];\\r\\n\\t\\tvar y0 = lastargs[ lastargs.length - 1 ];\\r\\n\\r\\n\\t\\tvar curve = new THREE.CubicBezierCurve(\\r\\n\\t\\t\\tnew THREE.Vector2( x0, y0 ),\\r\\n\\t\\t\\tnew THREE.Vector2( aCP1x, aCP1y ),\\r\\n\\t\\t\\tnew THREE.Vector2( aCP2x, aCP2y ),\\r\\n\\t\\t\\tnew THREE.Vector2( aX, aY )\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tthis.curves.push( curve );\\r\\n\\r\\n\\t\\tthis.actions.push( { action: 'bezierCurveTo', args: [ aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ] } );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsplineThru: function ( pts /*Array of Vector*/ ) {\\r\\n\\r\\n\\t\\tvar args = Array.prototype.slice.call( arguments );\\r\\n\\r\\n\\t\\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\\r\\n\\r\\n\\t\\tvar x0 = lastargs[ lastargs.length - 2 ];\\r\\n\\t\\tvar y0 = lastargs[ lastargs.length - 1 ];\\r\\n\\r\\n\\t\\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\\r\\n\\t\\tArray.prototype.push.apply( npts, pts );\\r\\n\\r\\n\\t\\tvar curve = new THREE.SplineCurve( npts );\\r\\n\\t\\tthis.curves.push( curve );\\r\\n\\r\\n\\t\\tvar lastPoint = pts[ pts.length - 1 ];\\r\\n\\t\\targs.push( lastPoint.x );\\r\\n\\t\\targs.push( lastPoint.y );\\r\\n\\r\\n\\t\\tthis.actions.push( { action: 'splineThru', args: args } );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\\r\\n\\r\\n\\t\\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\\r\\n\\t\\tvar x0 = lastargs[ lastargs.length - 2 ];\\r\\n\\t\\tvar y0 = lastargs[ lastargs.length - 1 ];\\r\\n\\r\\n\\t\\tthis.absarc( aX + x0, aY + y0, aRadius,\\r\\n\\t\\t\\taStartAngle, aEndAngle, aClockwise );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\\r\\n\\r\\n\\t\\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\\r\\n\\r\\n\\t\\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\\r\\n\\t\\tvar x0 = lastargs[ lastargs.length - 2 ];\\r\\n\\t\\tvar y0 = lastargs[ lastargs.length - 1 ];\\r\\n\\r\\n\\t\\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\\r\\n\\r\\n\\t\\tvar args = [\\r\\n\\t\\t\\taX, aY,\\r\\n\\t\\t\\txRadius, yRadius,\\r\\n\\t\\t\\taStartAngle, aEndAngle,\\r\\n\\t\\t\\taClockwise,\\r\\n\\t\\t\\taRotation || 0 // aRotation is optional.\\r\\n\\t\\t];\\r\\n\\r\\n\\t\\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\\r\\n\\t\\tthis.curves.push( curve );\\r\\n\\r\\n\\t\\tvar lastPoint = curve.getPoint( 1 );\\r\\n\\t\\targs.push( lastPoint.x );\\r\\n\\t\\targs.push( lastPoint.y );\\r\\n\\r\\n\\t\\tthis.actions.push( { action: 'ellipse', args: args } );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetSpacedPoints: function ( divisions ) {\\r\\n\\r\\n\\t\\tif ( ! divisions ) divisions = 40;\\r\\n\\r\\n\\t\\tvar points = [];\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < divisions; i ++ ) {\\r\\n\\r\\n\\t\\t\\tpoints.push( this.getPoint( i / divisions ) );\\r\\n\\r\\n\\t\\t\\t//if ( !this.getPoint( i / divisions ) ) throw \\\"DIE\\\";\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.autoClose ) {\\r\\n\\r\\n\\t\\t\\tpoints.push( points[ 0 ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn points;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetPoints: function ( divisions ) {\\r\\n\\r\\n\\t\\tdivisions = divisions || 12;\\r\\n\\r\\n\\t\\tvar b2 = THREE.ShapeUtils.b2;\\r\\n\\t\\tvar b3 = THREE.ShapeUtils.b3;\\r\\n\\r\\n\\t\\tvar points = [];\\r\\n\\r\\n\\t\\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\\r\\n\\t\\t\\tlaste, tx, ty;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = this.actions.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar item = this.actions[ i ];\\r\\n\\r\\n\\t\\t\\tvar action = item.action;\\r\\n\\t\\t\\tvar args = item.args;\\r\\n\\r\\n\\t\\t\\tswitch ( action ) {\\r\\n\\r\\n\\t\\t\\tcase 'moveTo':\\r\\n\\r\\n\\t\\t\\t\\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'lineTo':\\r\\n\\r\\n\\t\\t\\t\\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'quadraticCurveTo':\\r\\n\\r\\n\\t\\t\\t\\tcpx  = args[ 2 ];\\r\\n\\t\\t\\t\\tcpy  = args[ 3 ];\\r\\n\\r\\n\\t\\t\\t\\tcpx1 = args[ 0 ];\\r\\n\\t\\t\\t\\tcpy1 = args[ 1 ];\\r\\n\\r\\n\\t\\t\\t\\tif ( points.length > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tlaste = points[ points.length - 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\tcpx0 = laste.x;\\r\\n\\t\\t\\t\\t\\tcpy0 = laste.y;\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tlaste = this.actions[ i - 1 ].args;\\r\\n\\r\\n\\t\\t\\t\\t\\tcpx0 = laste[ laste.length - 2 ];\\r\\n\\t\\t\\t\\t\\tcpy0 = laste[ laste.length - 1 ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 1; j <= divisions; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar t = j / divisions;\\r\\n\\r\\n\\t\\t\\t\\t\\ttx = b2( t, cpx0, cpx1, cpx );\\r\\n\\t\\t\\t\\t\\tty = b2( t, cpy0, cpy1, cpy );\\r\\n\\r\\n\\t\\t\\t\\t\\tpoints.push( new THREE.Vector2( tx, ty ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'bezierCurveTo':\\r\\n\\r\\n\\t\\t\\t\\tcpx  = args[ 4 ];\\r\\n\\t\\t\\t\\tcpy  = args[ 5 ];\\r\\n\\r\\n\\t\\t\\t\\tcpx1 = args[ 0 ];\\r\\n\\t\\t\\t\\tcpy1 = args[ 1 ];\\r\\n\\r\\n\\t\\t\\t\\tcpx2 = args[ 2 ];\\r\\n\\t\\t\\t\\tcpy2 = args[ 3 ];\\r\\n\\r\\n\\t\\t\\t\\tif ( points.length > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tlaste = points[ points.length - 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\tcpx0 = laste.x;\\r\\n\\t\\t\\t\\t\\tcpy0 = laste.y;\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tlaste = this.actions[ i - 1 ].args;\\r\\n\\r\\n\\t\\t\\t\\t\\tcpx0 = laste[ laste.length - 2 ];\\r\\n\\t\\t\\t\\t\\tcpy0 = laste[ laste.length - 1 ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 1; j <= divisions; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar t = j / divisions;\\r\\n\\r\\n\\t\\t\\t\\t\\ttx = b3( t, cpx0, cpx1, cpx2, cpx );\\r\\n\\t\\t\\t\\t\\tty = b3( t, cpy0, cpy1, cpy2, cpy );\\r\\n\\r\\n\\t\\t\\t\\t\\tpoints.push( new THREE.Vector2( tx, ty ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'splineThru':\\r\\n\\r\\n\\t\\t\\t\\tlaste = this.actions[ i - 1 ].args;\\r\\n\\r\\n\\t\\t\\t\\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\\r\\n\\t\\t\\t\\tvar spts = [ last ];\\r\\n\\r\\n\\t\\t\\t\\tvar n = divisions * args[ 0 ].length;\\r\\n\\r\\n\\t\\t\\t\\tspts = spts.concat( args[ 0 ] );\\r\\n\\r\\n\\t\\t\\t\\tvar spline = new THREE.SplineCurve( spts );\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 1; j <= n; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tpoints.push( spline.getPointAt( j / n ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'arc':\\r\\n\\r\\n\\t\\t\\t\\tvar aX = args[ 0 ], aY = args[ 1 ],\\r\\n\\t\\t\\t\\t\\taRadius = args[ 2 ],\\r\\n\\t\\t\\t\\t\\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\\r\\n\\t\\t\\t\\t\\taClockwise = !! args[ 5 ];\\r\\n\\r\\n\\t\\t\\t\\tvar deltaAngle = aEndAngle - aStartAngle;\\r\\n\\t\\t\\t\\tvar angle;\\r\\n\\t\\t\\t\\tvar tdivisions = divisions * 2;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 1; j <= tdivisions; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar t = j / tdivisions;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ! aClockwise ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tt = 1 - t;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tangle = aStartAngle + t * deltaAngle;\\r\\n\\r\\n\\t\\t\\t\\t\\ttx = aX + aRadius * Math.cos( angle );\\r\\n\\t\\t\\t\\t\\tty = aY + aRadius * Math.sin( angle );\\r\\n\\r\\n\\t\\t\\t\\t\\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\\r\\n\\r\\n\\t\\t\\t\\t\\tpoints.push( new THREE.Vector2( tx, ty ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t//console.log(points);\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 'ellipse':\\r\\n\\r\\n\\t\\t\\t\\tvar aX = args[ 0 ], aY = args[ 1 ],\\r\\n\\t\\t\\t\\t\\txRadius = args[ 2 ],\\r\\n\\t\\t\\t\\t\\tyRadius = args[ 3 ],\\r\\n\\t\\t\\t\\t\\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\\r\\n\\t\\t\\t\\t\\taClockwise = !! args[ 6 ],\\r\\n\\t\\t\\t\\t\\taRotation = args[ 7 ];\\r\\n\\r\\n\\r\\n\\t\\t\\t\\tvar deltaAngle = aEndAngle - aStartAngle;\\r\\n\\t\\t\\t\\tvar angle;\\r\\n\\t\\t\\t\\tvar tdivisions = divisions * 2;\\r\\n\\r\\n\\t\\t\\t\\tvar cos, sin;\\r\\n\\t\\t\\t\\tif ( aRotation !== 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tcos = Math.cos( aRotation );\\r\\n\\t\\t\\t\\t\\tsin = Math.sin( aRotation );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 1; j <= tdivisions; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar t = j / tdivisions;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ! aClockwise ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tt = 1 - t;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tangle = aStartAngle + t * deltaAngle;\\r\\n\\r\\n\\t\\t\\t\\t\\ttx = aX + xRadius * Math.cos( angle );\\r\\n\\t\\t\\t\\t\\tty = aY + yRadius * Math.sin( angle );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( aRotation !== 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar x = tx, y = ty;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Rotate the point about the center of the ellipse.\\r\\n\\t\\t\\t\\t\\t\\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\\r\\n\\t\\t\\t\\t\\t\\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\\r\\n\\r\\n\\t\\t\\t\\t\\tpoints.push( new THREE.Vector2( tx, ty ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t//console.log(points);\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t} // end switch\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t// Normalize to remove the closing point by default.\\r\\n\\t\\tvar lastPoint = points[ points.length - 1 ];\\r\\n\\t\\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < Number.EPSILON &&\\r\\n\\t\\t\\t\\t Math.abs( lastPoint.y - points[ 0 ].y ) < Number.EPSILON )\\r\\n\\t\\t\\tpoints.splice( points.length - 1, 1 );\\r\\n\\r\\n\\t\\tif ( this.autoClose ) {\\r\\n\\r\\n\\t\\t\\tpoints.push( points[ 0 ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn points;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\ttoShapes: function ( isCCW, noHoles ) {\\r\\n\\r\\n\\t\\tfunction extractSubpaths( inActions ) {\\r\\n\\r\\n\\t\\t\\tvar subPaths = [], lastPath = new THREE.Path();\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = inActions.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar item = inActions[ i ];\\r\\n\\r\\n\\t\\t\\t\\tvar args = item.args;\\r\\n\\t\\t\\t\\tvar action = item.action;\\r\\n\\r\\n\\t\\t\\t\\tif ( action === 'moveTo' ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( lastPath.actions.length !== 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tsubPaths.push( lastPath );\\r\\n\\t\\t\\t\\t\\t\\tlastPath = new THREE.Path();\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tlastPath[ action ].apply( lastPath, args );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( lastPath.actions.length !== 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tsubPaths.push( lastPath );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// console.log(subPaths);\\r\\n\\r\\n\\t\\t\\treturn\\tsubPaths;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction toShapesNoHoles( inSubpaths ) {\\r\\n\\r\\n\\t\\t\\tvar shapes = [];\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar tmpPath = inSubpaths[ i ];\\r\\n\\r\\n\\t\\t\\t\\tvar tmpShape = new THREE.Shape();\\r\\n\\t\\t\\t\\ttmpShape.actions = tmpPath.actions;\\r\\n\\t\\t\\t\\ttmpShape.curves = tmpPath.curves;\\r\\n\\r\\n\\t\\t\\t\\tshapes.push( tmpShape );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t//console.log(\\\"shape\\\", shapes);\\r\\n\\r\\n\\t\\t\\treturn shapes;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfunction isPointInsidePolygon( inPt, inPolygon ) {\\r\\n\\r\\n\\t\\t\\tvar polyLen = inPolygon.length;\\r\\n\\r\\n\\t\\t\\t// inPt on polygon contour => immediate success    or\\r\\n\\t\\t\\t// toggling of inside/outside at every single! intersection point of an edge\\r\\n\\t\\t\\t//  with the horizontal line through inPt, left of inPt\\r\\n\\t\\t\\t//  not counting lowerY endpoints of edges and whole edges on that line\\r\\n\\t\\t\\tvar inside = false;\\r\\n\\t\\t\\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar edgeLowPt  = inPolygon[ p ];\\r\\n\\t\\t\\t\\tvar edgeHighPt = inPolygon[ q ];\\r\\n\\r\\n\\t\\t\\t\\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\\r\\n\\t\\t\\t\\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\\r\\n\\r\\n\\t\\t\\t\\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// not parallel\\r\\n\\t\\t\\t\\t\\tif ( edgeDy < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\\r\\n\\t\\t\\t\\t\\t\\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \\t\\tcontinue;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( inPt.y === edgeLowPt.y ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( inPt.x === edgeLowPt.x )\\t\\treturn\\ttrue;\\t\\t// inPt is on contour ?\\r\\n\\t\\t\\t\\t\\t\\t// continue;\\t\\t\\t\\t// no intersection or edgeLowPt => doesn't count !!!\\r\\n\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\\r\\n\\t\\t\\t\\t\\t\\tif ( perpEdge === 0 )\\t\\t\\t\\treturn\\ttrue;\\t\\t// inPt is on contour ?\\r\\n\\t\\t\\t\\t\\t\\tif ( perpEdge < 0 ) \\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t\\t\\t\\tinside = ! inside;\\t\\t// true intersection left of inPt\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t// parallel or collinear\\r\\n\\t\\t\\t\\t\\tif ( inPt.y !== edgeLowPt.y ) \\t\\tcontinue;\\t\\t\\t// parallel\\r\\n\\t\\t\\t\\t\\t// edge lies on the same horizontal line as inPt\\r\\n\\t\\t\\t\\t\\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\\r\\n\\t\\t\\t\\t\\t\\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\\t\\treturn\\ttrue;\\t// inPt: Point on contour !\\r\\n\\t\\t\\t\\t\\t// continue;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn\\tinside;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar isClockWise = THREE.ShapeUtils.isClockWise;\\r\\n\\r\\n\\t\\tvar subPaths = extractSubpaths( this.actions );\\r\\n\\t\\tif ( subPaths.length === 0 ) return [];\\r\\n\\r\\n\\t\\tif ( noHoles === true )\\treturn\\ttoShapesNoHoles( subPaths );\\r\\n\\r\\n\\r\\n\\t\\tvar solid, tmpPath, tmpShape, shapes = [];\\r\\n\\r\\n\\t\\tif ( subPaths.length === 1 ) {\\r\\n\\r\\n\\t\\t\\ttmpPath = subPaths[ 0 ];\\r\\n\\t\\t\\ttmpShape = new THREE.Shape();\\r\\n\\t\\t\\ttmpShape.actions = tmpPath.actions;\\r\\n\\t\\t\\ttmpShape.curves = tmpPath.curves;\\r\\n\\t\\t\\tshapes.push( tmpShape );\\r\\n\\t\\t\\treturn shapes;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\\r\\n\\t\\tholesFirst = isCCW ? ! holesFirst : holesFirst;\\r\\n\\r\\n\\t\\t// console.log(\\\"Holes first\\\", holesFirst);\\r\\n\\r\\n\\t\\tvar betterShapeHoles = [];\\r\\n\\t\\tvar newShapes = [];\\r\\n\\t\\tvar newShapeHoles = [];\\r\\n\\t\\tvar mainIdx = 0;\\r\\n\\t\\tvar tmpPoints;\\r\\n\\r\\n\\t\\tnewShapes[ mainIdx ] = undefined;\\r\\n\\t\\tnewShapeHoles[ mainIdx ] = [];\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\ttmpPath = subPaths[ i ];\\r\\n\\t\\t\\ttmpPoints = tmpPath.getPoints();\\r\\n\\t\\t\\tsolid = isClockWise( tmpPoints );\\r\\n\\t\\t\\tsolid = isCCW ? ! solid : solid;\\r\\n\\r\\n\\t\\t\\tif ( solid ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\\tmainIdx ++;\\r\\n\\r\\n\\t\\t\\t\\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\\r\\n\\t\\t\\t\\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\\r\\n\\t\\t\\t\\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\\r\\n\\r\\n\\t\\t\\t\\tif ( holesFirst )\\tmainIdx ++;\\r\\n\\t\\t\\t\\tnewShapeHoles[ mainIdx ] = [];\\r\\n\\r\\n\\t\\t\\t\\t//console.log('cw', i);\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\\r\\n\\r\\n\\t\\t\\t\\t//console.log('ccw', i);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// only Holes? -> probably all Shapes with wrong orientation\\r\\n\\t\\tif ( ! newShapes[ 0 ] )\\treturn\\ttoShapesNoHoles( subPaths );\\r\\n\\r\\n\\r\\n\\t\\tif ( newShapes.length > 1 ) {\\r\\n\\r\\n\\t\\t\\tvar ambiguous = false;\\r\\n\\t\\t\\tvar toChange = [];\\r\\n\\r\\n\\t\\t\\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tbetterShapeHoles[ sIdx ] = [];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar sho = newShapeHoles[ sIdx ];\\r\\n\\r\\n\\t\\t\\t\\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar ho = sho[ hIdx ];\\r\\n\\t\\t\\t\\t\\tvar hole_unassigned = true;\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( sIdx !== s2Idx )\\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( hole_unassigned ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\thole_unassigned = false;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tbetterShapeHoles[ s2Idx ].push( ho );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tambiguous = true;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tif ( hole_unassigned ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tbetterShapeHoles[ sIdx ].push( ho );\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t// console.log(\\\"ambiguous: \\\", ambiguous);\\r\\n\\t\\t\\tif ( toChange.length > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t// console.log(\\\"to change: \\\", toChange);\\r\\n\\t\\t\\t\\tif ( ! ambiguous )\\tnewShapeHoles = betterShapeHoles;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar tmpHoles;\\r\\n\\r\\n\\t\\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\ttmpShape = newShapes[ i ].s;\\r\\n\\t\\t\\tshapes.push( tmpShape );\\r\\n\\t\\t\\ttmpHoles = newShapeHoles[ i ];\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\ttmpShape.holes.push( tmpHoles[ j ].h );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t//console.log(\\\"shape\\\", shapes);\\r\\n\\r\\n\\t\\treturn shapes;\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/extras/core/Shape.js\\r\\n\\r\\n/**\\r\\n * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n * Defines a 2d shape plane using paths.\\r\\n **/\\r\\n\\r\\n// STEP 1 Create a path.\\r\\n// STEP 2 Turn path into shape.\\r\\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\\r\\n// STEP 3a - Extract points from each shape, turn to vertices\\r\\n// STEP 3b - Triangulate each shape, add faces.\\r\\n\\r\\nTHREE.Shape = function () {\\r\\n\\r\\n\\tTHREE.Path.apply( this, arguments );\\r\\n\\r\\n\\tthis.holes = [];\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Shape.prototype = Object.assign( Object.create( THREE.Path.prototype ), {\\r\\n\\r\\n\\tconstructor: THREE.Shape,\\r\\n\\r\\n\\t// Convenience method to return ExtrudeGeometry\\r\\n\\r\\n\\textrude: function ( options ) {\\r\\n\\r\\n\\t\\treturn new THREE.ExtrudeGeometry( this, options );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Convenience method to return ShapeGeometry\\r\\n\\r\\n\\tmakeGeometry: function ( options ) {\\r\\n\\r\\n\\t\\treturn new THREE.ShapeGeometry( this, options );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetPointsHoles: function ( divisions ) {\\r\\n\\r\\n\\t\\tvar holesPts = [];\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn holesPts;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Get points of shape and holes (keypoints based on segments parameter)\\r\\n\\r\\n\\textractAllPoints: function ( divisions ) {\\r\\n\\r\\n\\t\\treturn {\\r\\n\\r\\n\\t\\t\\tshape: this.getPoints( divisions ),\\r\\n\\t\\t\\tholes: this.getPointsHoles( divisions )\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\textractPoints: function ( divisions ) {\\r\\n\\r\\n\\t\\treturn this.extractAllPoints( divisions );\\r\\n\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// File:src/extras/curves/LineCurve.js\\r\\n\\r\\n/**************************************************************\\r\\n *\\tLine\\r\\n **************************************************************/\\r\\n\\r\\nTHREE.LineCurve = function ( v1, v2 ) {\\r\\n\\r\\n\\tthis.v1 = v1;\\r\\n\\tthis.v2 = v2;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\\r\\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\\r\\n\\r\\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\\r\\n\\r\\n\\tvar point = this.v2.clone().sub( this.v1 );\\r\\n\\tpoint.multiplyScalar( t ).add( this.v1 );\\r\\n\\r\\n\\treturn point;\\r\\n\\r\\n};\\r\\n\\r\\n// Line curve is linear, so we can overwrite default getPointAt\\r\\n\\r\\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\\r\\n\\r\\n\\treturn this.getPoint( u );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.LineCurve.prototype.getTangent = function( t ) {\\r\\n\\r\\n\\tvar tangent = this.v2.clone().sub( this.v1 );\\r\\n\\r\\n\\treturn tangent.normalize();\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/curves/QuadraticBezierCurve.js\\r\\n\\r\\n/**************************************************************\\r\\n *\\tQuadratic Bezier curve\\r\\n **************************************************************/\\r\\n\\r\\n\\r\\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\\r\\n\\r\\n\\tthis.v0 = v0;\\r\\n\\tthis.v1 = v1;\\r\\n\\tthis.v2 = v2;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\\r\\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\\r\\n\\r\\n\\r\\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\\r\\n\\r\\n\\tvar b2 = THREE.ShapeUtils.b2;\\r\\n\\r\\n\\treturn new THREE.Vector2(\\r\\n\\t\\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\\r\\n\\t\\tb2( t, this.v0.y, this.v1.y, this.v2.y )\\r\\n\\t);\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\\r\\n\\r\\n\\tvar tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\\r\\n\\r\\n\\treturn new THREE.Vector2(\\r\\n\\t\\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\\r\\n\\t\\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\\r\\n\\t).normalize();\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/curves/CubicBezierCurve.js\\r\\n\\r\\n/**************************************************************\\r\\n *\\tCubic Bezier curve\\r\\n **************************************************************/\\r\\n\\r\\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\\r\\n\\r\\n\\tthis.v0 = v0;\\r\\n\\tthis.v1 = v1;\\r\\n\\tthis.v2 = v2;\\r\\n\\tthis.v3 = v3;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\\r\\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\\r\\n\\r\\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\\r\\n\\r\\n\\tvar b3 = THREE.ShapeUtils.b3;\\r\\n\\r\\n\\treturn new THREE.Vector2( \\r\\n\\t\\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\\r\\n\\t\\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\\r\\n\\t);\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\\r\\n\\r\\n\\tvar tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\\r\\n\\r\\n\\treturn new THREE.Vector2( \\r\\n\\t\\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\\r\\n\\t\\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\\r\\n\\t).normalize();\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/curves/SplineCurve.js\\r\\n\\r\\n/**************************************************************\\r\\n *\\tSpline curve\\r\\n **************************************************************/\\r\\n\\r\\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\\r\\n\\r\\n\\tthis.points = ( points == undefined ) ? [] : points;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\\r\\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\\r\\n\\r\\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\\r\\n\\r\\n\\tvar points = this.points;\\r\\n\\tvar point = ( points.length - 1 ) * t;\\r\\n\\r\\n\\tvar intPoint = Math.floor( point );\\r\\n\\tvar weight = point - intPoint;\\r\\n\\r\\n\\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\\r\\n\\tvar point1 = points[ intPoint ];\\r\\n\\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\\r\\n\\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\\r\\n\\r\\n\\tvar interpolate = THREE.CurveUtils.interpolate;\\r\\n\\r\\n\\treturn new THREE.Vector2(\\r\\n\\t\\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\\r\\n\\t\\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\\r\\n\\t);\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/curves/EllipseCurve.js\\r\\n\\r\\n/**************************************************************\\r\\n *\\tEllipse curve\\r\\n **************************************************************/\\r\\n\\r\\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\\r\\n\\r\\n\\tthis.aX = aX;\\r\\n\\tthis.aY = aY;\\r\\n\\r\\n\\tthis.xRadius = xRadius;\\r\\n\\tthis.yRadius = yRadius;\\r\\n\\r\\n\\tthis.aStartAngle = aStartAngle;\\r\\n\\tthis.aEndAngle = aEndAngle;\\r\\n\\r\\n\\tthis.aClockwise = aClockwise;\\r\\n\\t\\r\\n\\tthis.aRotation = aRotation || 0;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\\r\\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\\r\\n\\r\\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\\r\\n\\r\\n\\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\\r\\n\\r\\n\\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\\r\\n\\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\\r\\n\\r\\n\\tvar angle;\\r\\n\\r\\n\\tif ( this.aClockwise === true ) {\\r\\n\\r\\n\\t\\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\\r\\n\\r\\n\\t} else {\\r\\n\\r\\n\\t\\tangle = this.aStartAngle + t * deltaAngle;\\r\\n\\r\\n\\t}\\r\\n\\t\\r\\n\\tvar x = this.aX + this.xRadius * Math.cos( angle );\\r\\n\\tvar y = this.aY + this.yRadius * Math.sin( angle );\\r\\n\\r\\n\\tif ( this.aRotation !== 0 ) {\\r\\n\\r\\n\\t\\tvar cos = Math.cos( this.aRotation );\\r\\n\\t\\tvar sin = Math.sin( this.aRotation );\\r\\n\\r\\n\\t\\tvar tx = x, ty = y;\\r\\n\\r\\n\\t\\t// Rotate the point about the center of the ellipse.\\r\\n\\t\\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\\r\\n\\t\\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn new THREE.Vector2( x, y );\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/curves/ArcCurve.js\\r\\n\\r\\n/**************************************************************\\r\\n *\\tArc curve\\r\\n **************************************************************/\\r\\n\\r\\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\\r\\n\\r\\n\\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\\r\\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\\r\\n\\r\\n// File:src/extras/curves/LineCurve3.js\\r\\n\\r\\n/**************************************************************\\r\\n *\\tLine3D\\r\\n **************************************************************/\\r\\n\\r\\nTHREE.LineCurve3 = THREE.Curve.create(\\r\\n\\r\\n\\tfunction ( v1, v2 ) {\\r\\n\\r\\n\\t\\tthis.v1 = v1;\\r\\n\\t\\tthis.v2 = v2;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfunction ( t ) {\\r\\n\\r\\n\\t\\tvar vector = new THREE.Vector3();\\r\\n\\r\\n\\t\\tvector.subVectors( this.v2, this.v1 ); // diff\\r\\n\\t\\tvector.multiplyScalar( t );\\r\\n\\t\\tvector.add( this.v1 );\\r\\n\\r\\n\\t\\treturn vector;\\r\\n\\r\\n\\t}\\r\\n\\r\\n);\\r\\n\\r\\n// File:src/extras/curves/QuadraticBezierCurve3.js\\r\\n\\r\\n/**************************************************************\\r\\n *\\tQuadratic Bezier 3D curve\\r\\n **************************************************************/\\r\\n\\r\\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\\r\\n\\r\\n\\tfunction ( v0, v1, v2 ) {\\r\\n\\r\\n\\t\\tthis.v0 = v0;\\r\\n\\t\\tthis.v1 = v1;\\r\\n\\t\\tthis.v2 = v2;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfunction ( t ) {\\r\\n\\r\\n\\t\\tvar b2 = THREE.ShapeUtils.b2;\\t\\t\\r\\n\\r\\n\\t\\treturn new THREE.Vector3(\\r\\n\\t\\t\\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\\r\\n\\t\\t\\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\\r\\n\\t\\t\\tb2( t, this.v0.z, this.v1.z, this.v2.z )\\r\\n\\t\\t);\\r\\n\\r\\n\\t}\\r\\n\\r\\n);\\r\\n\\r\\n// File:src/extras/curves/CubicBezierCurve3.js\\r\\n\\r\\n/**************************************************************\\r\\n *\\tCubic Bezier 3D curve\\r\\n **************************************************************/\\r\\n\\r\\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\\r\\n\\r\\n\\tfunction ( v0, v1, v2, v3 ) {\\r\\n\\r\\n\\t\\tthis.v0 = v0;\\r\\n\\t\\tthis.v1 = v1;\\r\\n\\t\\tthis.v2 = v2;\\r\\n\\t\\tthis.v3 = v3;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfunction ( t ) {\\r\\n\\r\\n\\t\\tvar b3 = THREE.ShapeUtils.b3;\\r\\n\\r\\n\\t\\treturn new THREE.Vector3(\\r\\n\\t\\t\\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\\r\\n\\t\\t\\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\\r\\n\\t\\t\\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\\r\\n\\t\\t);\\r\\n\\r\\n\\t}\\r\\n\\r\\n);\\r\\n\\r\\n// File:src/extras/curves/SplineCurve3.js\\r\\n\\r\\n/**************************************************************\\r\\n *\\tSpline 3D curve\\r\\n **************************************************************/\\r\\n\\r\\n\\r\\nTHREE.SplineCurve3 = THREE.Curve.create(\\r\\n\\r\\n\\tfunction ( points /* array of Vector3 */ ) {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\\r\\n\\t\\tthis.points = ( points == undefined ) ? [] : points;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tfunction ( t ) {\\r\\n\\r\\n\\t\\tvar points = this.points;\\r\\n\\t\\tvar point = ( points.length - 1 ) * t;\\r\\n\\r\\n\\t\\tvar intPoint = Math.floor( point );\\r\\n\\t\\tvar weight = point - intPoint;\\r\\n\\r\\n\\t\\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\\r\\n\\t\\tvar point1 = points[ intPoint ];\\r\\n\\t\\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\\r\\n\\t\\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\\r\\n\\r\\n\\t\\tvar interpolate = THREE.CurveUtils.interpolate;\\r\\n\\r\\n\\t\\treturn new THREE.Vector3(\\r\\n\\t\\t\\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\\r\\n\\t\\t\\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\\r\\n\\t\\t\\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\\r\\n\\t\\t);\\r\\n\\r\\n\\t}\\r\\n\\r\\n);\\r\\n\\r\\n// File:src/extras/curves/CatmullRomCurve3.js\\r\\n\\r\\n/**\\r\\n * @author zz85 https://github.com/zz85\\r\\n *\\r\\n * Centripetal CatmullRom Curve - which is useful for avoiding\\r\\n * cusps and self-intersections in non-uniform catmull rom curves.\\r\\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\\r\\n *\\r\\n * curve.type accepts centripetal(default), chordal and catmullrom\\r\\n * curve.tension is used for catmullrom which defaults to 0.5\\r\\n */\\r\\n\\r\\nTHREE.CatmullRomCurve3 = ( function() {\\r\\n\\r\\n\\tvar\\r\\n\\t\\ttmp = new THREE.Vector3(),\\r\\n\\t\\tpx = new CubicPoly(),\\r\\n\\t\\tpy = new CubicPoly(),\\r\\n\\t\\tpz = new CubicPoly();\\r\\n\\r\\n\\t/*\\r\\n\\tBased on an optimized c++ solution in\\r\\n\\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\\r\\n\\t - http://ideone.com/NoEbVM\\r\\n\\r\\n\\tThis CubicPoly class could be used for reusing some variables and calculations,\\r\\n\\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\\r\\n\\twhich can be placed in CurveUtils.\\r\\n\\t*/\\r\\n\\r\\n\\tfunction CubicPoly() {\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t/*\\r\\n\\t * Compute coefficients for a cubic polynomial\\r\\n\\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\\r\\n\\t * such that\\r\\n\\t *   p(0) = x0, p(1) = x1\\r\\n\\t *  and\\r\\n\\t *   p'(0) = t0, p'(1) = t1.\\r\\n\\t */\\r\\n\\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\\r\\n\\r\\n\\t\\tthis.c0 = x0;\\r\\n\\t\\tthis.c1 = t0;\\r\\n\\t\\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\\r\\n\\t\\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\\r\\n\\r\\n\\t\\t// compute tangents when parameterized in [t1,t2]\\r\\n\\t\\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\\r\\n\\t\\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\\r\\n\\r\\n\\t\\t// rescale tangents for parametrization in [0,1]\\r\\n\\t\\tt1 *= dt1;\\r\\n\\t\\tt2 *= dt1;\\r\\n\\r\\n\\t\\t// initCubicPoly\\r\\n\\t\\tthis.init( x1, x2, t1, t2 );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\\r\\n\\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\\r\\n\\r\\n\\t\\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tCubicPoly.prototype.calc = function( t ) {\\r\\n\\r\\n\\t\\tvar t2 = t * t;\\r\\n\\t\\tvar t3 = t2 * t;\\r\\n\\t\\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// Subclass Three.js curve\\r\\n\\treturn THREE.Curve.create(\\r\\n\\r\\n\\t\\tfunction ( p /* array of Vector3 */ ) {\\r\\n\\r\\n\\t\\t\\tthis.points = p || [];\\r\\n\\t\\t\\tthis.closed = false;\\r\\n\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tfunction ( t ) {\\r\\n\\r\\n\\t\\t\\tvar points = this.points,\\r\\n\\t\\t\\t\\tpoint, intPoint, weight, l;\\r\\n\\r\\n\\t\\t\\tl = points.length;\\r\\n\\r\\n\\t\\t\\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\\r\\n\\r\\n\\t\\t\\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\\r\\n\\t\\t\\tintPoint = Math.floor( point );\\r\\n\\t\\t\\tweight = point - intPoint;\\r\\n\\r\\n\\t\\t\\tif ( this.closed ) {\\r\\n\\r\\n\\t\\t\\t\\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\\r\\n\\r\\n\\t\\t\\t} else if ( weight === 0 && intPoint === l - 1 ) {\\r\\n\\r\\n\\t\\t\\t\\tintPoint = l - 2;\\r\\n\\t\\t\\t\\tweight = 1;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar p0, p1, p2, p3; // 4 points\\r\\n\\r\\n\\t\\t\\tif ( this.closed || intPoint > 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tp0 = points[ ( intPoint - 1 ) % l ];\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// extrapolate first point\\r\\n\\t\\t\\t\\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\\r\\n\\t\\t\\t\\tp0 = tmp;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tp1 = points[ intPoint % l ];\\r\\n\\t\\t\\tp2 = points[ ( intPoint + 1 ) % l ];\\r\\n\\r\\n\\t\\t\\tif ( this.closed || intPoint + 2 < l ) {\\r\\n\\r\\n\\t\\t\\t\\tp3 = points[ ( intPoint + 2 ) % l ];\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// extrapolate last point\\r\\n\\t\\t\\t\\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\\r\\n\\t\\t\\t\\tp3 = tmp;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\\r\\n\\r\\n\\t\\t\\t\\t// init Centripetal / Chordal Catmull-Rom\\r\\n\\t\\t\\t\\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\\r\\n\\t\\t\\t\\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\\r\\n\\t\\t\\t\\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\\r\\n\\t\\t\\t\\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\\r\\n\\r\\n\\t\\t\\t\\t// safety check for repeated points\\r\\n\\t\\t\\t\\tif ( dt1 < 1e-4 ) dt1 = 1.0;\\r\\n\\t\\t\\t\\tif ( dt0 < 1e-4 ) dt0 = dt1;\\r\\n\\t\\t\\t\\tif ( dt2 < 1e-4 ) dt2 = dt1;\\r\\n\\r\\n\\t\\t\\t\\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\\r\\n\\t\\t\\t\\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\\r\\n\\t\\t\\t\\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\\r\\n\\r\\n\\t\\t\\t} else if ( this.type === 'catmullrom' ) {\\r\\n\\r\\n\\t\\t\\t\\tvar tension = this.tension !== undefined ? this.tension : 0.5;\\r\\n\\t\\t\\t\\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\\r\\n\\t\\t\\t\\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\\r\\n\\t\\t\\t\\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar v = new THREE.Vector3(\\r\\n\\t\\t\\t\\tpx.calc( weight ),\\r\\n\\t\\t\\t\\tpy.calc( weight ),\\r\\n\\t\\t\\t\\tpz.calc( weight )\\r\\n\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\treturn v;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t);\\r\\n\\r\\n} )();\\r\\n\\r\\n// File:src/extras/curves/ClosedSplineCurve3.js\\r\\n\\r\\n/**************************************************************\\r\\n *\\tClosed Spline 3D curve\\r\\n **************************************************************/\\r\\n\\r\\n\\r\\nTHREE.ClosedSplineCurve3 = function ( points ) {\\r\\n\\r\\n\\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\\r\\n\\r\\n\\tTHREE.CatmullRomCurve3.call( this, points );\\r\\n\\tthis.type = 'catmullrom';\\r\\n\\tthis.closed = true;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ClosedSplineCurve3.prototype = Object.create( THREE.CatmullRomCurve3.prototype );\\r\\n\\r\\n// File:src/extras/geometries/BoxGeometry.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\\r\\n */\\r\\n\\r\\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'BoxGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\twidth: width,\\r\\n\\t\\theight: height,\\r\\n\\t\\tdepth: depth,\\r\\n\\t\\twidthSegments: widthSegments,\\r\\n\\t\\theightSegments: heightSegments,\\r\\n\\t\\tdepthSegments: depthSegments\\r\\n\\t};\\r\\n\\r\\n\\tthis.fromBufferGeometry( new THREE.BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\\r\\n\\tthis.mergeVertices();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\\r\\n\\r\\nTHREE.CubeGeometry = THREE.BoxGeometry;\\r\\n\\r\\n// File:src/extras/geometries/BoxBufferGeometry.js\\r\\n\\r\\n/**\\r\\n * @author Mugen87 / https://github.com/Mugen87\\r\\n */\\r\\n\\r\\nTHREE.BoxBufferGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\\r\\n\\r\\n\\tTHREE.BufferGeometry.call( this );\\r\\n\\r\\n\\tthis.type = 'BoxBufferGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\twidth: width,\\r\\n\\t\\theight: height,\\r\\n\\t\\tdepth: depth,\\r\\n\\t\\twidthSegments: widthSegments,\\r\\n\\t\\theightSegments: heightSegments,\\r\\n\\t\\tdepthSegments: depthSegments\\r\\n\\t};\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\t// segments\\r\\n\\twidthSegments = Math.floor( widthSegments ) || 1;\\r\\n\\theightSegments = Math.floor( heightSegments ) || 1;\\r\\n\\tdepthSegments = Math.floor( depthSegments ) || 1;\\r\\n\\r\\n\\t// these are used to calculate buffer length\\r\\n\\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\\r\\n\\tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\\r\\n\\r\\n\\t// buffers\\r\\n\\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\\r\\n\\tvar vertices = new Float32Array( vertexCount * 3 );\\r\\n\\tvar normals = new Float32Array( vertexCount * 3 );\\r\\n\\tvar uvs = new Float32Array( vertexCount * 2 );\\r\\n\\r\\n\\t// offset variables\\r\\n\\tvar vertexBufferOffset = 0;\\r\\n\\tvar uvBufferOffset = 0;\\r\\n\\tvar indexBufferOffset = 0;\\r\\n\\tvar numberOfVertices = 0;\\r\\n\\r\\n\\t// group variables\\r\\n\\tvar groupStart = 0;\\r\\n\\r\\n\\t// build each side of the box geometry\\r\\n\\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\\r\\n\\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\\r\\n\\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\\r\\n\\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\\r\\n\\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\\r\\n\\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\\r\\n\\r\\n\\t// build geometry\\r\\n\\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\\r\\n\\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\\r\\n\\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\\r\\n\\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n\\t// helper functions\\r\\n\\r\\n\\tfunction calculateVertexCount ( w, h, d ) {\\r\\n\\r\\n\\t\\tvar vertices = 0;\\r\\n\\r\\n\\t\\t// calculate the amount of vertices for each side (plane)\\r\\n\\t\\tvertices += (w + 1) * (h + 1) * 2; // xy\\r\\n\\t\\tvertices += (w + 1) * (d + 1) * 2; // xz\\r\\n\\t\\tvertices += (d + 1) * (h + 1) * 2; // zy\\r\\n\\r\\n\\t\\treturn vertices;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction calculateIndexCount ( w, h, d ) {\\r\\n\\r\\n\\t\\tvar index = 0;\\r\\n\\r\\n\\t\\t// calculate the amount of squares for each side\\r\\n\\t\\tindex += w * h * 2; // xy\\r\\n\\t\\tindex += w * d * 2; // xz\\r\\n\\t\\tindex += d * h * 2; // zy\\r\\n\\r\\n\\t\\treturn index * 6; // two triangles per square => six vertices per square\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction buildPlane ( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\\r\\n\\r\\n\\t\\tvar segmentWidth\\t= width / gridX;\\r\\n\\t\\tvar segmentHeight = height / gridY;\\r\\n\\r\\n\\t\\tvar widthHalf = width / 2;\\r\\n\\t\\tvar heightHalf = height / 2;\\r\\n\\t\\tvar depthHalf = depth / 2;\\r\\n\\r\\n\\t\\tvar gridX1 = gridX + 1;\\r\\n\\t\\tvar gridY1 = gridY + 1;\\r\\n\\r\\n\\t\\tvar vertexCounter = 0;\\r\\n\\t\\tvar groupCount = 0;\\r\\n\\r\\n\\t\\tvar vector = new THREE.Vector3();\\r\\n\\r\\n\\t\\t// generate vertices, normals and uvs\\r\\n\\r\\n\\t\\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\\r\\n\\r\\n\\t\\t\\tvar y = iy * segmentHeight - heightHalf;\\r\\n\\r\\n\\t\\t\\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar x = ix * segmentWidth - widthHalf;\\r\\n\\r\\n\\t\\t\\t\\t// set values to correct vector component\\r\\n\\t\\t\\t\\tvector[ u ] = x * udir;\\r\\n\\t\\t\\t\\tvector[ v ] = y * vdir;\\r\\n\\t\\t\\t\\tvector[ w ] = depthHalf;\\r\\n\\r\\n\\t\\t\\t\\t// now apply vector to vertex buffer\\r\\n\\t\\t\\t\\tvertices[ vertexBufferOffset ] = vector.x;\\r\\n\\t\\t\\t\\tvertices[ vertexBufferOffset + 1 ] = vector.y;\\r\\n\\t\\t\\t\\tvertices[ vertexBufferOffset + 2 ] = vector.z;\\r\\n\\r\\n\\t\\t\\t\\t// set values to correct vector component\\r\\n\\t\\t\\t\\tvector[ u ] = 0;\\r\\n\\t\\t\\t\\tvector[ v ] = 0;\\r\\n\\t\\t\\t\\tvector[ w ] = depth > 0 ? 1 : - 1;\\r\\n\\r\\n\\t\\t\\t\\t// now apply vector to normal buffer\\r\\n\\t\\t\\t\\tnormals[ vertexBufferOffset ] = vector.x;\\r\\n\\t\\t\\t\\tnormals[ vertexBufferOffset + 1 ] = vector.y;\\r\\n\\t\\t\\t\\tnormals[ vertexBufferOffset + 2 ] = vector.z;\\r\\n\\r\\n\\t\\t\\t\\t// uvs\\r\\n\\t\\t\\t\\tuvs[ uvBufferOffset ] = ix / gridX;\\r\\n\\t\\t\\t\\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\\r\\n\\r\\n\\t\\t\\t\\t// update offsets and counters\\r\\n\\t\\t\\t\\tvertexBufferOffset += 3;\\r\\n\\t\\t\\t\\tuvBufferOffset += 2;\\r\\n\\t\\t\\t\\tvertexCounter += 1;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// 1. you need three indices to draw a single face\\r\\n\\t\\t// 2. a single segment consists of two faces\\r\\n\\t\\t// 3. so we need to generate six (2*3) indices per segment\\r\\n\\r\\n\\t\\tfor ( iy = 0; iy < gridY; iy ++ ) {\\r\\n\\r\\n\\t\\t\\tfor ( ix = 0; ix < gridX; ix ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t// indices\\r\\n\\t\\t\\t\\tvar a = numberOfVertices + ix + gridX1 * iy;\\r\\n\\t\\t\\t\\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\\r\\n\\t\\t\\t\\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\\r\\n\\t\\t\\t\\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\\r\\n\\r\\n\\t\\t\\t\\t// face one\\r\\n\\t\\t\\t\\tindices[ indexBufferOffset ] = a;\\r\\n\\t\\t\\t\\tindices[ indexBufferOffset + 1 ] = b;\\r\\n\\t\\t\\t\\tindices[ indexBufferOffset + 2 ] = d;\\r\\n\\r\\n\\t\\t\\t\\t// face two\\r\\n\\t\\t\\t\\tindices[ indexBufferOffset + 3 ] = b;\\r\\n\\t\\t\\t\\tindices[ indexBufferOffset + 4 ] = c;\\r\\n\\t\\t\\t\\tindices[ indexBufferOffset + 5 ] = d;\\r\\n\\r\\n\\t\\t\\t\\t// update offsets and counters\\r\\n\\t\\t\\t\\tindexBufferOffset += 6;\\r\\n\\t\\t\\t\\tgroupCount += 6;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// add a group to the geometry. this will ensure multi material support\\r\\n\\t\\tscope.addGroup( groupStart, groupCount, materialIndex );\\r\\n\\r\\n\\t\\t// calculate new start value for groups\\r\\n\\t\\tgroupStart += groupCount;\\r\\n\\r\\n\\t\\t// update total number of vertices\\r\\n\\t\\tnumberOfVertices += vertexCounter;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.BoxBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry;\\r\\n\\r\\n// File:src/extras/geometries/CircleGeometry.js\\r\\n\\r\\n/**\\r\\n * @author hughes\\r\\n */\\r\\n\\r\\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'CircleGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\tsegments: segments,\\r\\n\\t\\tthetaStart: thetaStart,\\r\\n\\t\\tthetaLength: thetaLength\\r\\n\\t};\\r\\n\\r\\n\\tthis.fromBufferGeometry( new THREE.CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\\r\\n\\r\\n// File:src/extras/geometries/CircleBufferGeometry.js\\r\\n\\r\\n/**\\r\\n * @author benaadams / https://twitter.com/ben_a_adams\\r\\n */\\r\\n\\r\\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\\r\\n\\r\\n\\tTHREE.BufferGeometry.call( this );\\r\\n\\r\\n\\tthis.type = 'CircleBufferGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\tsegments: segments,\\r\\n\\t\\tthetaStart: thetaStart,\\r\\n\\t\\tthetaLength: thetaLength\\r\\n\\t};\\r\\n\\r\\n\\tradius = radius || 50;\\r\\n\\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\\r\\n\\r\\n\\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\\r\\n\\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\\r\\n\\r\\n\\tvar vertices = segments + 2;\\r\\n\\r\\n\\tvar positions = new Float32Array( vertices * 3 );\\r\\n\\tvar normals = new Float32Array( vertices * 3 );\\r\\n\\tvar uvs = new Float32Array( vertices * 2 );\\r\\n\\r\\n\\t// center data is already zero, but need to set a few extras\\r\\n\\tnormals[ 2 ] = 1.0;\\r\\n\\tuvs[ 0 ] = 0.5;\\r\\n\\tuvs[ 1 ] = 0.5;\\r\\n\\r\\n\\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\\r\\n\\r\\n\\t\\tvar segment = thetaStart + s / segments * thetaLength;\\r\\n\\r\\n\\t\\tpositions[ i ] = radius * Math.cos( segment );\\r\\n\\t\\tpositions[ i + 1 ] = radius * Math.sin( segment );\\r\\n\\r\\n\\t\\tnormals[ i + 2 ] = 1; // normal z\\r\\n\\r\\n\\t\\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\\r\\n\\t\\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar indices = [];\\r\\n\\r\\n\\tfor ( var i = 1; i <= segments; i ++ ) {\\r\\n\\r\\n\\t\\tindices.push( i, i + 1, 0 );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\\r\\n\\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\\r\\n\\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\\r\\n\\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n\\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\\r\\n\\r\\n// File:src/extras/geometries/CylinderBufferGeometry.js\\r\\n\\r\\n/**\\r\\n * @author Mugen87 / https://github.com/Mugen87\\r\\n */\\r\\n\\r\\nTHREE.CylinderBufferGeometry = function( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\\r\\n\\r\\n\\tTHREE.BufferGeometry.call( this );\\r\\n\\r\\n\\tthis.type = 'CylinderBufferGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradiusTop: radiusTop,\\r\\n\\t\\tradiusBottom: radiusBottom,\\r\\n\\t\\theight: height,\\r\\n\\t\\tradialSegments: radialSegments,\\r\\n\\t\\theightSegments: heightSegments,\\r\\n\\t\\topenEnded: openEnded,\\r\\n\\t\\tthetaStart: thetaStart,\\r\\n\\t\\tthetaLength: thetaLength\\r\\n\\t};\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\\r\\n\\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\\r\\n\\theight = height !== undefined ? height : 100;\\r\\n\\r\\n\\tradialSegments = Math.floor( radialSegments ) || 8;\\r\\n\\theightSegments = Math.floor( heightSegments ) || 1;\\r\\n\\r\\n\\topenEnded = openEnded !== undefined ? openEnded : false;\\r\\n\\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\\r\\n\\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\\r\\n\\r\\n\\t// used to calculate buffer length\\r\\n\\r\\n\\tvar nbCap = 0;\\r\\n\\r\\n\\tif ( openEnded === false ) {\\r\\n\\r\\n\\t\\tif ( radiusTop > 0 ) nbCap ++;\\r\\n\\t\\tif ( radiusBottom > 0 ) nbCap ++;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar vertexCount = calculateVertexCount();\\r\\n\\tvar indexCount = calculateIndexCount();\\r\\n\\r\\n\\t// buffers\\r\\n\\r\\n\\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\\r\\n\\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\r\\n\\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\r\\n\\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\r\\n\\r\\n\\t// helper variables\\r\\n\\r\\n\\tvar index = 0,\\r\\n\\t    indexOffset = 0,\\r\\n\\t    indexArray = [],\\r\\n\\t    halfHeight = height / 2;\\r\\n\\r\\n\\t// group variables\\r\\n\\tvar groupStart = 0;\\r\\n\\r\\n\\t// generate geometry\\r\\n\\r\\n\\tgenerateTorso();\\r\\n\\r\\n\\tif ( openEnded === false ) {\\r\\n\\r\\n\\t\\tif ( radiusTop > 0 ) generateCap( true );\\r\\n\\t\\tif ( radiusBottom > 0 ) generateCap( false );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// build geometry\\r\\n\\r\\n\\tthis.setIndex( indices );\\r\\n\\tthis.addAttribute( 'position', vertices );\\r\\n\\tthis.addAttribute( 'normal', normals );\\r\\n\\tthis.addAttribute( 'uv', uvs );\\r\\n\\r\\n\\t// helper functions\\r\\n\\r\\n\\tfunction calculateVertexCount() {\\r\\n\\r\\n\\t\\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\\r\\n\\r\\n\\t\\tif ( openEnded === false ) {\\r\\n\\r\\n\\t\\t\\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn count;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction calculateIndexCount() {\\r\\n\\r\\n\\t\\tvar count = radialSegments * heightSegments * 2 * 3;\\r\\n\\r\\n\\t\\tif ( openEnded === false ) {\\r\\n\\r\\n\\t\\t\\tcount += radialSegments * nbCap * 3;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn count;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction generateTorso() {\\r\\n\\r\\n\\t\\tvar x, y;\\r\\n\\t\\tvar normal = new THREE.Vector3();\\r\\n\\t\\tvar vertex = new THREE.Vector3();\\r\\n\\r\\n\\t\\tvar groupCount = 0;\\r\\n\\r\\n\\t\\t// this will be used to calculate the normal\\r\\n\\t\\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\\r\\n\\r\\n\\t\\t// generate vertices, normals and uvs\\r\\n\\r\\n\\t\\tfor ( y = 0; y <= heightSegments; y ++ ) {\\r\\n\\r\\n\\t\\t\\tvar indexRow = [];\\r\\n\\r\\n\\t\\t\\tvar v = y / heightSegments;\\r\\n\\r\\n\\t\\t\\t// calculate the radius of the current row\\r\\n\\t\\t\\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\\r\\n\\r\\n\\t\\t\\tfor ( x = 0; x <= radialSegments; x ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar u = x / radialSegments;\\r\\n\\r\\n\\t\\t\\t\\t// vertex\\r\\n\\t\\t\\t\\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\\r\\n\\t\\t\\t\\tvertex.y = - v * height + halfHeight;\\r\\n\\t\\t\\t\\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\\r\\n\\t\\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n\\t\\t\\t\\t// normal\\r\\n\\t\\t\\t\\tnormal.copy( vertex );\\r\\n\\r\\n\\t\\t\\t\\t// handle special case if radiusTop/radiusBottom is zero\\r\\n\\r\\n\\t\\t\\t\\tif ( ( radiusTop === 0 && y === 0 ) || ( radiusBottom === 0 && y === heightSegments ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tnormal.x = Math.sin( u * thetaLength + thetaStart );\\r\\n\\t\\t\\t\\t\\tnormal.z = Math.cos( u * thetaLength + thetaStart );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tnormal.setY( Math.sqrt( normal.x * normal.x + normal.z * normal.z ) * tanTheta ).normalize();\\r\\n\\t\\t\\t\\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\\r\\n\\r\\n\\t\\t\\t\\t// uv\\r\\n\\t\\t\\t\\tuvs.setXY( index, u, 1 - v );\\r\\n\\r\\n\\t\\t\\t\\t// save index of vertex in respective row\\r\\n\\t\\t\\t\\tindexRow.push( index );\\r\\n\\r\\n\\t\\t\\t\\t// increase index\\r\\n\\t\\t\\t\\tindex ++;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// now save vertices of the row in our index array\\r\\n\\t\\t\\tindexArray.push( indexRow );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// generate indices\\r\\n\\r\\n\\t\\tfor ( x = 0; x < radialSegments; x ++ ) {\\r\\n\\r\\n\\t\\t\\tfor ( y = 0; y < heightSegments; y ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t// we use the index array to access the correct indices\\r\\n\\t\\t\\t\\tvar i1 = indexArray[ y ][ x ];\\r\\n\\t\\t\\t\\tvar i2 = indexArray[ y + 1 ][ x ];\\r\\n\\t\\t\\t\\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\\r\\n\\t\\t\\t\\tvar i4 = indexArray[ y ][ x + 1 ];\\r\\n\\r\\n\\t\\t\\t\\t// face one\\r\\n\\t\\t\\t\\tindices.setX( indexOffset, i1 ); indexOffset ++;\\r\\n\\t\\t\\t\\tindices.setX( indexOffset, i2 ); indexOffset ++;\\r\\n\\t\\t\\t\\tindices.setX( indexOffset, i4 ); indexOffset ++;\\r\\n\\r\\n\\t\\t\\t\\t// face two\\r\\n\\t\\t\\t\\tindices.setX( indexOffset, i2 ); indexOffset ++;\\r\\n\\t\\t\\t\\tindices.setX( indexOffset, i3 ); indexOffset ++;\\r\\n\\t\\t\\t\\tindices.setX( indexOffset, i4 ); indexOffset ++;\\r\\n\\r\\n\\t\\t\\t\\t// update counters\\r\\n\\t\\t\\t\\tgroupCount += 6;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// add a group to the geometry. this will ensure multi material support\\r\\n\\t\\tscope.addGroup( groupStart, groupCount, 0 );\\r\\n\\r\\n\\t\\t// calculate new start value for groups\\r\\n\\t\\tgroupStart += groupCount;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction generateCap( top ) {\\r\\n\\r\\n\\t\\tvar x, centerIndexStart, centerIndexEnd;\\r\\n\\r\\n\\t\\tvar uv = new THREE.Vector2();\\r\\n\\t\\tvar vertex = new THREE.Vector3();\\r\\n\\r\\n\\t\\tvar groupCount = 0;\\r\\n\\r\\n\\t\\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\\r\\n\\t\\tvar sign = ( top === true ) ? 1 : - 1;\\r\\n\\r\\n\\t\\t// save the index of the first center vertex\\r\\n\\t\\tcenterIndexStart = index;\\r\\n\\r\\n\\t\\t// first we generate the center vertex data of the cap.\\r\\n\\t\\t// because the geometry needs one set of uvs per face,\\r\\n\\t\\t// we must generate a center vertex per face/segment\\r\\n\\r\\n\\t\\tfor ( x = 1; x <= radialSegments; x ++ ) {\\r\\n\\r\\n\\t\\t\\t// vertex\\r\\n\\t\\t\\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\\r\\n\\r\\n\\t\\t\\t// normal\\r\\n\\t\\t\\tnormals.setXYZ( index, 0, sign, 0 );\\r\\n\\r\\n\\t\\t\\t// uv\\r\\n\\t\\t\\tuv.x = 0.5;\\r\\n\\t\\t\\tuv.y = 0.5;\\r\\n\\r\\n\\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\r\\n\\r\\n\\t\\t\\t// increase index\\r\\n\\t\\t\\tindex ++;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// save the index of the last center vertex\\r\\n\\t\\tcenterIndexEnd = index;\\r\\n\\r\\n\\t\\t// now we generate the surrounding vertices, normals and uvs\\r\\n\\r\\n\\t\\tfor ( x = 0; x <= radialSegments; x ++ ) {\\r\\n\\r\\n\\t\\t\\tvar u = x / radialSegments;\\r\\n\\t\\t\\tvar theta = u * thetaLength + thetaStart;\\r\\n\\r\\n\\t\\t\\tvar cosTheta = Math.cos( theta );\\r\\n\\t\\t\\tvar sinTheta = Math.sin( theta );\\r\\n\\r\\n\\t\\t\\t// vertex\\r\\n\\t\\t\\tvertex.x = radius * sinTheta;\\r\\n\\t\\t\\tvertex.y = halfHeight * sign;\\r\\n\\t\\t\\tvertex.z = radius * cosTheta;\\r\\n\\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n\\t\\t\\t// normal\\r\\n\\t\\t\\tnormals.setXYZ( index, 0, sign, 0 );\\r\\n\\r\\n\\t\\t\\t// uv\\r\\n\\t\\t\\tuv.x = ( cosTheta * 0.5 ) + 0.5;\\r\\n\\t\\t\\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\\r\\n\\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\r\\n\\r\\n\\t\\t\\t// increase index\\r\\n\\t\\t\\tindex ++;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// generate indices\\r\\n\\r\\n\\t\\tfor ( x = 0; x < radialSegments; x ++ ) {\\r\\n\\r\\n\\t\\t\\tvar c = centerIndexStart + x;\\r\\n\\t\\t\\tvar i = centerIndexEnd + x;\\r\\n\\r\\n\\t\\t\\tif ( top === true ) {\\r\\n\\r\\n\\t\\t\\t\\t// face top\\r\\n\\t\\t\\t\\tindices.setX( indexOffset, i ); indexOffset ++;\\r\\n\\t\\t\\t\\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\\r\\n\\t\\t\\t\\tindices.setX( indexOffset, c ); indexOffset ++;\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// face bottom\\r\\n\\t\\t\\t\\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\\r\\n\\t\\t\\t\\tindices.setX( indexOffset, i ); indexOffset ++;\\r\\n\\t\\t\\t\\tindices.setX( indexOffset, c ); indexOffset ++;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// update counters\\r\\n\\t\\t\\tgroupCount += 3;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// add a group to the geometry. this will ensure multi material support\\r\\n\\t\\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\\r\\n\\r\\n\\t\\t// calculate new start value for groups\\r\\n\\t\\tgroupStart += groupCount;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CylinderBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry;\\r\\n\\r\\n// File:src/extras/geometries/CylinderGeometry.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'CylinderGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradiusTop: radiusTop,\\r\\n\\t\\tradiusBottom: radiusBottom,\\r\\n\\t\\theight: height,\\r\\n\\t\\tradialSegments: radialSegments,\\r\\n\\t\\theightSegments: heightSegments,\\r\\n\\t\\topenEnded: openEnded,\\r\\n\\t\\tthetaStart: thetaStart,\\r\\n\\t\\tthetaLength: thetaLength\\r\\n\\t};\\r\\n\\r\\n\\tthis.fromBufferGeometry( new THREE.CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\\r\\n\\tthis.mergeVertices();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\\r\\n\\r\\n// File:src/extras/geometries/ConeBufferGeometry.js\\r\\n\\r\\n/*\\r\\n * @author: abelnation / http://github.com/abelnation\\r\\n */\\r\\n\\r\\nTHREE.ConeBufferGeometry = function (\\r\\n\\tradius, height,\\r\\n\\tradialSegments, heightSegments,\\r\\n\\topenEnded, thetaStart, thetaLength ) {\\r\\n\\r\\n\\tTHREE.CylinderBufferGeometry.call( this,\\r\\n\\t\\t0, radius, height,\\r\\n\\t\\tradialSegments, heightSegments,\\r\\n\\t\\topenEnded, thetaStart, thetaLength );\\r\\n\\r\\n\\tthis.type = 'ConeBufferGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\theight: height,\\r\\n\\t\\tradialSegments: radialSegments,\\r\\n\\t\\theightSegments: heightSegments,\\r\\n\\t\\tthetaStart: thetaStart,\\r\\n\\t\\tthetaLength: thetaLength\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ConeBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.ConeBufferGeometry.prototype.constructor = THREE.ConeBufferGeometry;\\r\\n\\r\\n// File:src/extras/geometries/ConeGeometry.js\\r\\n\\r\\n/**\\r\\n * @author abelnation / http://github.com/abelnation\\r\\n */\\r\\n\\r\\nTHREE.ConeGeometry = function (\\r\\n\\tradius, height,\\r\\n\\tradialSegments, heightSegments,\\r\\n\\topenEnded, thetaStart, thetaLength ) {\\r\\n\\r\\n\\tTHREE.CylinderGeometry.call( this,\\r\\n\\t\\t0, radius, height,\\r\\n\\t\\tradialSegments, heightSegments,\\r\\n\\t\\topenEnded, thetaStart, thetaLength );\\r\\n\\r\\n\\tthis.type = 'ConeGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\theight: height,\\r\\n\\t\\tradialSegments: radialSegments,\\r\\n\\t\\theightSegments: heightSegments,\\r\\n\\t\\topenEnded: openEnded,\\r\\n\\t\\tthetaStart: thetaStart,\\r\\n\\t\\tthetaLength: thetaLength\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ConeGeometry.prototype = Object.create( THREE.CylinderGeometry.prototype );\\r\\nTHREE.ConeGeometry.prototype.constructor = THREE.ConeGeometry;\\r\\n\\r\\n// File:src/extras/geometries/EdgesGeometry.js\\r\\n\\r\\n/**\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n */\\r\\n\\r\\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\\r\\n\\r\\n\\tTHREE.BufferGeometry.call( this );\\r\\n\\r\\n\\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\\r\\n\\r\\n\\tvar thresholdDot = Math.cos( THREE.Math.DEG2RAD * thresholdAngle );\\r\\n\\r\\n\\tvar edge = [ 0, 0 ], hash = {};\\r\\n\\r\\n\\tfunction sortFunction( a, b ) {\\r\\n\\r\\n\\t\\treturn a - b;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar keys = [ 'a', 'b', 'c' ];\\r\\n\\r\\n\\tvar geometry2;\\r\\n\\r\\n\\tif ( geometry instanceof THREE.BufferGeometry ) {\\r\\n\\r\\n\\t\\tgeometry2 = new THREE.Geometry();\\r\\n\\t\\tgeometry2.fromBufferGeometry( geometry );\\r\\n\\r\\n\\t} else {\\r\\n\\r\\n\\t\\tgeometry2 = geometry.clone();\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tgeometry2.mergeVertices();\\r\\n\\tgeometry2.computeFaceNormals();\\r\\n\\r\\n\\tvar vertices = geometry2.vertices;\\r\\n\\tvar faces = geometry2.faces;\\r\\n\\r\\n\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\tvar face = faces[ i ];\\r\\n\\r\\n\\t\\tfor ( var j = 0; j < 3; j ++ ) {\\r\\n\\r\\n\\t\\t\\tedge[ 0 ] = face[ keys[ j ] ];\\r\\n\\t\\t\\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\\r\\n\\t\\t\\tedge.sort( sortFunction );\\r\\n\\r\\n\\t\\t\\tvar key = edge.toString();\\r\\n\\r\\n\\t\\t\\tif ( hash[ key ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\thash[ key ].face2 = i;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar coords = [];\\r\\n\\r\\n\\tfor ( var key in hash ) {\\r\\n\\r\\n\\t\\tvar h = hash[ key ];\\r\\n\\r\\n\\t\\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\\r\\n\\r\\n\\t\\t\\tvar vertex = vertices[ h.vert1 ];\\r\\n\\t\\t\\tcoords.push( vertex.x );\\r\\n\\t\\t\\tcoords.push( vertex.y );\\r\\n\\t\\t\\tcoords.push( vertex.z );\\r\\n\\r\\n\\t\\t\\tvertex = vertices[ h.vert2 ];\\r\\n\\t\\t\\tcoords.push( vertex.x );\\r\\n\\t\\t\\tcoords.push( vertex.y );\\r\\n\\t\\t\\tcoords.push( vertex.z );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\\r\\n\\r\\n// File:src/extras/geometries/ExtrudeGeometry.js\\r\\n\\r\\n/**\\r\\n * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n *\\r\\n * Creates extruded geometry from a path shape.\\r\\n *\\r\\n * parameters = {\\r\\n *\\r\\n *  curveSegments: <int>, // number of points on the curves\\r\\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\\r\\n *  amount: <int>, // Depth to extrude the shape\\r\\n *\\r\\n *  bevelEnabled: <bool>, // turn on bevel\\r\\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\\r\\n *  bevelSize: <float>, // how far from shape outline is bevel\\r\\n *  bevelSegments: <int>, // number of bevel layers\\r\\n *\\r\\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\\r\\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\\r\\n *\\r\\n *  uvGenerator: <Object> // object that provides UV generator functions\\r\\n *\\r\\n * }\\r\\n **/\\r\\n\\r\\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\\r\\n\\r\\n\\tif ( typeof( shapes ) === \\\"undefined\\\" ) {\\r\\n\\r\\n\\t\\tshapes = [];\\r\\n\\t\\treturn;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'ExtrudeGeometry';\\r\\n\\r\\n\\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\\r\\n\\r\\n\\tthis.addShapeList( shapes, options );\\r\\n\\r\\n\\tthis.computeFaceNormals();\\r\\n\\r\\n\\t// can't really use automatic vertex normals\\r\\n\\t// as then front and back sides get smoothed too\\r\\n\\t// should do separate smoothing just for sides\\r\\n\\r\\n\\t//this.computeVertexNormals();\\r\\n\\r\\n\\t//console.log( \\\"took\\\", ( Date.now() - startTime ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\\r\\n\\r\\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\\r\\n\\r\\n\\tvar sl = shapes.length;\\r\\n\\r\\n\\tfor ( var s = 0; s < sl; s ++ ) {\\r\\n\\r\\n\\t\\tvar shape = shapes[ s ];\\r\\n\\t\\tthis.addShape( shape, options );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\\r\\n\\r\\n\\tvar amount = options.amount !== undefined ? options.amount : 100;\\r\\n\\r\\n\\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\\r\\n\\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\\r\\n\\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\\r\\n\\r\\n\\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\\r\\n\\r\\n\\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\\r\\n\\r\\n\\tvar steps = options.steps !== undefined ? options.steps : 1;\\r\\n\\r\\n\\tvar extrudePath = options.extrudePath;\\r\\n\\tvar extrudePts, extrudeByPath = false;\\r\\n\\r\\n\\t// Use default WorldUVGenerator if no UV generators are specified.\\r\\n\\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\\r\\n\\r\\n\\tvar splineTube, binormal, normal, position2;\\r\\n\\tif ( extrudePath ) {\\r\\n\\r\\n\\t\\textrudePts = extrudePath.getSpacedPoints( steps );\\r\\n\\r\\n\\t\\textrudeByPath = true;\\r\\n\\t\\tbevelEnabled = false; // bevels not supported for path extrusion\\r\\n\\r\\n\\t\\t// SETUP TNB variables\\r\\n\\r\\n\\t\\t// Reuse TNB from TubeGeomtry for now.\\r\\n\\t\\t// TODO1 - have a .isClosed in spline?\\r\\n\\r\\n\\t\\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\\r\\n\\r\\n\\t\\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\\r\\n\\r\\n\\t\\tbinormal = new THREE.Vector3();\\r\\n\\t\\tnormal = new THREE.Vector3();\\r\\n\\t\\tposition2 = new THREE.Vector3();\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Safeguards if bevels are not enabled\\r\\n\\r\\n\\tif ( ! bevelEnabled ) {\\r\\n\\r\\n\\t\\tbevelSegments = 0;\\r\\n\\t\\tbevelThickness = 0;\\r\\n\\t\\tbevelSize = 0;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Variables initialization\\r\\n\\r\\n\\tvar ahole, h, hl; // looping of holes\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tvar shapesOffset = this.vertices.length;\\r\\n\\r\\n\\tvar shapePoints = shape.extractPoints( curveSegments );\\r\\n\\r\\n\\tvar vertices = shapePoints.shape;\\r\\n\\tvar holes = shapePoints.holes;\\r\\n\\r\\n\\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\\r\\n\\r\\n\\tif ( reverse ) {\\r\\n\\r\\n\\t\\tvertices = vertices.reverse();\\r\\n\\r\\n\\t\\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\\r\\n\\r\\n\\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\tahole = holes[ h ];\\r\\n\\r\\n\\t\\t\\tif ( THREE.ShapeUtils.isClockWise( ahole ) ) {\\r\\n\\r\\n\\t\\t\\t\\tholes[ h ] = ahole.reverse();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\\r\\n\\r\\n\\t/* Vertices */\\r\\n\\r\\n\\tvar contour = vertices; // vertices has all points but contour has only points of circumference\\r\\n\\r\\n\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\tahole = holes[ h ];\\r\\n\\r\\n\\t\\tvertices = vertices.concat( ahole );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\tfunction scalePt2 ( pt, vec, size ) {\\r\\n\\r\\n\\t\\tif ( ! vec ) console.error( \\\"THREE.ExtrudeGeometry: vec does not exist\\\" );\\r\\n\\r\\n\\t\\treturn vec.clone().multiplyScalar( size ).add( pt );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar b, bs, t, z,\\r\\n\\t\\tvert, vlen = vertices.length,\\r\\n\\t\\tface, flen = faces.length;\\r\\n\\r\\n\\r\\n\\t// Find directions for point movement\\r\\n\\r\\n\\r\\n\\tfunction getBevelVec( inPt, inPrev, inNext ) {\\r\\n\\r\\n\\t\\t// computes for inPt the corresponding point inPt' on a new contour\\r\\n\\t\\t//   shifted by 1 unit (length of normalized vector) to the left\\r\\n\\t\\t// if we walk along contour clockwise, this new contour is outside the old one\\r\\n\\t\\t//\\r\\n\\t\\t// inPt' is the intersection of the two lines parallel to the two\\r\\n\\t\\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\\r\\n\\r\\n\\t\\tvar v_trans_x, v_trans_y, shrink_by = 1;\\t\\t// resulting translation vector for inPt\\r\\n\\r\\n\\t\\t// good reading for geometry algorithms (here: line-line intersection)\\r\\n\\t\\t// http://geomalgorithms.com/a05-_intersect-1.html\\r\\n\\r\\n\\t\\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\\r\\n\\t\\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\\r\\n\\r\\n\\t\\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\\r\\n\\r\\n\\t\\t// check for collinear edges\\r\\n\\t\\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\\r\\n\\r\\n\\t\\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\\r\\n\\r\\n\\t\\t\\t// not collinear\\r\\n\\r\\n\\t\\t\\t// length of vectors for normalizing\\r\\n\\r\\n\\t\\t\\tvar v_prev_len = Math.sqrt( v_prev_lensq );\\r\\n\\t\\t\\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\\r\\n\\r\\n\\t\\t\\t// shift adjacent points by unit vectors to the left\\r\\n\\r\\n\\t\\t\\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\\r\\n\\t\\t\\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\\r\\n\\r\\n\\t\\t\\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\\r\\n\\t\\t\\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\\r\\n\\r\\n\\t\\t\\t// scaling factor for v_prev to intersection point\\r\\n\\r\\n\\t\\t\\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\\r\\n\\t\\t\\t\\t\\t\\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\\r\\n\\t\\t\\t\\t\\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\\r\\n\\r\\n\\t\\t\\t// vector from inPt to intersection point\\r\\n\\r\\n\\t\\t\\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\\r\\n\\t\\t\\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\\r\\n\\r\\n\\t\\t\\t// Don't normalize!, otherwise sharp corners become ugly\\r\\n\\t\\t\\t//  but prevent crazy spikes\\r\\n\\t\\t\\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\\r\\n\\t\\t\\tif ( v_trans_lensq <= 2 ) {\\r\\n\\r\\n\\t\\t\\t\\treturn\\tnew THREE.Vector2( v_trans_x, v_trans_y );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// handle special case of collinear edges\\r\\n\\r\\n\\t\\t\\tvar direction_eq = false;\\t\\t// assumes: opposite\\r\\n\\t\\t\\tif ( v_prev_x > Number.EPSILON ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( v_next_x > Number.EPSILON ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tdirection_eq = true;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tif ( v_prev_x < - Number.EPSILON ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( v_next_x < - Number.EPSILON ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tdirection_eq = true;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tdirection_eq = true;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( direction_eq ) {\\r\\n\\r\\n\\t\\t\\t\\t// console.log(\\\"Warning: lines are a straight sequence\\\");\\r\\n\\t\\t\\t\\tv_trans_x = - v_prev_y;\\r\\n\\t\\t\\t\\tv_trans_y =  v_prev_x;\\r\\n\\t\\t\\t\\tshrink_by = Math.sqrt( v_prev_lensq );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// console.log(\\\"Warning: lines are a straight spike\\\");\\r\\n\\t\\t\\t\\tv_trans_x = v_prev_x;\\r\\n\\t\\t\\t\\tv_trans_y = v_prev_y;\\r\\n\\t\\t\\t\\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn\\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\tvar contourMovements = [];\\r\\n\\r\\n\\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\\r\\n\\r\\n\\t\\tif ( j === il ) j = 0;\\r\\n\\t\\tif ( k === il ) k = 0;\\r\\n\\r\\n\\t\\t//  (j)---(i)---(k)\\r\\n\\t\\t// console.log('i,j,k', i, j , k)\\r\\n\\r\\n\\t\\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\\r\\n\\r\\n\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\tahole = holes[ h ];\\r\\n\\r\\n\\t\\toneHoleMovements = [];\\r\\n\\r\\n\\t\\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\\r\\n\\r\\n\\t\\t\\tif ( j === il ) j = 0;\\r\\n\\t\\t\\tif ( k === il ) k = 0;\\r\\n\\r\\n\\t\\t\\t//  (j)---(i)---(k)\\r\\n\\t\\t\\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tholesMovements.push( oneHoleMovements );\\r\\n\\t\\tverticesMovements = verticesMovements.concat( oneHoleMovements );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// Loop bevelSegments, 1 for the front, 1 for the back\\r\\n\\r\\n\\tfor ( b = 0; b < bevelSegments; b ++ ) {\\r\\n\\r\\n\\t\\t//for ( b = bevelSegments; b > 0; b -- ) {\\r\\n\\r\\n\\t\\tt = b / bevelSegments;\\r\\n\\t\\tz = bevelThickness * ( 1 - t );\\r\\n\\r\\n\\t\\t//z = bevelThickness * t;\\r\\n\\t\\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\\r\\n\\t\\t//bs = bevelSize * t; // linear\\r\\n\\r\\n\\t\\t// contract shape\\r\\n\\r\\n\\t\\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\\r\\n\\r\\n\\t\\t\\tv( vert.x, vert.y,  - z );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// expand holes\\r\\n\\r\\n\\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\tahole = holes[ h ];\\r\\n\\t\\t\\toneHoleMovements = holesMovements[ h ];\\r\\n\\r\\n\\t\\t\\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\\r\\n\\r\\n\\t\\t\\t\\tv( vert.x, vert.y,  - z );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tbs = bevelSize;\\r\\n\\r\\n\\t// Back facing vertices\\r\\n\\r\\n\\tfor ( i = 0; i < vlen; i ++ ) {\\r\\n\\r\\n\\t\\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\\r\\n\\r\\n\\t\\tif ( ! extrudeByPath ) {\\r\\n\\r\\n\\t\\t\\tv( vert.x, vert.y, 0 );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\\r\\n\\r\\n\\t\\t\\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\\r\\n\\t\\t\\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\\r\\n\\r\\n\\t\\t\\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\\r\\n\\r\\n\\t\\t\\tv( position2.x, position2.y, position2.z );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Add stepped vertices...\\r\\n\\t// Including front facing vertices\\r\\n\\r\\n\\tvar s;\\r\\n\\r\\n\\tfor ( s = 1; s <= steps; s ++ ) {\\r\\n\\r\\n\\t\\tfor ( i = 0; i < vlen; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\\r\\n\\r\\n\\t\\t\\tif ( ! extrudeByPath ) {\\r\\n\\r\\n\\t\\t\\t\\tv( vert.x, vert.y, amount / steps * s );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\\r\\n\\r\\n\\t\\t\\t\\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\\r\\n\\t\\t\\t\\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\\r\\n\\r\\n\\t\\t\\t\\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\\r\\n\\r\\n\\t\\t\\t\\tv( position2.x, position2.y, position2.z );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// Add bevel segments planes\\r\\n\\r\\n\\t//for ( b = 1; b <= bevelSegments; b ++ ) {\\r\\n\\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\\r\\n\\r\\n\\t\\tt = b / bevelSegments;\\r\\n\\t\\tz = bevelThickness * ( 1 - t );\\r\\n\\t\\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\\r\\n\\t\\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\\r\\n\\r\\n\\t\\t// contract shape\\r\\n\\r\\n\\t\\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\\r\\n\\t\\t\\tv( vert.x, vert.y,  amount + z );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// expand holes\\r\\n\\r\\n\\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\tahole = holes[ h ];\\r\\n\\t\\t\\toneHoleMovements = holesMovements[ h ];\\r\\n\\r\\n\\t\\t\\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\\r\\n\\r\\n\\t\\t\\t\\tif ( ! extrudeByPath ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tv( vert.x, vert.y,  amount + z );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t/* Faces */\\r\\n\\r\\n\\t// Top and bottom faces\\r\\n\\r\\n\\tbuildLidFaces();\\r\\n\\r\\n\\t// Sides faces\\r\\n\\r\\n\\tbuildSideFaces();\\r\\n\\r\\n\\r\\n\\t/////  Internal functions\\r\\n\\r\\n\\tfunction buildLidFaces() {\\r\\n\\r\\n\\t\\tif ( bevelEnabled ) {\\r\\n\\r\\n\\t\\t\\tvar layer = 0; // steps + 1\\r\\n\\t\\t\\tvar offset = vlen * layer;\\r\\n\\r\\n\\t\\t\\t// Bottom faces\\r\\n\\r\\n\\t\\t\\tfor ( i = 0; i < flen; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tface = faces[ i ];\\r\\n\\t\\t\\t\\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tlayer = steps + bevelSegments * 2;\\r\\n\\t\\t\\toffset = vlen * layer;\\r\\n\\r\\n\\t\\t\\t// Top faces\\r\\n\\r\\n\\t\\t\\tfor ( i = 0; i < flen; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tface = faces[ i ];\\r\\n\\t\\t\\t\\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// Bottom faces\\r\\n\\r\\n\\t\\t\\tfor ( i = 0; i < flen; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tface = faces[ i ];\\r\\n\\t\\t\\t\\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Top faces\\r\\n\\r\\n\\t\\t\\tfor ( i = 0; i < flen; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tface = faces[ i ];\\r\\n\\t\\t\\t\\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Create faces for the z-sides of the shape\\r\\n\\r\\n\\tfunction buildSideFaces() {\\r\\n\\r\\n\\t\\tvar layeroffset = 0;\\r\\n\\t\\tsidewalls( contour, layeroffset );\\r\\n\\t\\tlayeroffset += contour.length;\\r\\n\\r\\n\\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\tahole = holes[ h ];\\r\\n\\t\\t\\tsidewalls( ahole, layeroffset );\\r\\n\\r\\n\\t\\t\\t//, true\\r\\n\\t\\t\\tlayeroffset += ahole.length;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction sidewalls( contour, layeroffset ) {\\r\\n\\r\\n\\t\\tvar j, k;\\r\\n\\t\\ti = contour.length;\\r\\n\\r\\n\\t\\twhile ( -- i >= 0 ) {\\r\\n\\r\\n\\t\\t\\tj = i;\\r\\n\\t\\t\\tk = i - 1;\\r\\n\\t\\t\\tif ( k < 0 ) k = contour.length - 1;\\r\\n\\r\\n\\t\\t\\t//console.log('b', i,j, i-1, k,vertices.length);\\r\\n\\r\\n\\t\\t\\tvar s = 0, sl = steps  + bevelSegments * 2;\\r\\n\\r\\n\\t\\t\\tfor ( s = 0; s < sl; s ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar slen1 = vlen * s;\\r\\n\\t\\t\\t\\tvar slen2 = vlen * ( s + 1 );\\r\\n\\r\\n\\t\\t\\t\\tvar a = layeroffset + j + slen1,\\r\\n\\t\\t\\t\\t\\tb = layeroffset + k + slen1,\\r\\n\\t\\t\\t\\t\\tc = layeroffset + k + slen2,\\r\\n\\t\\t\\t\\t\\td = layeroffset + j + slen2;\\r\\n\\r\\n\\t\\t\\t\\tf4( a, b, c, d, contour, s, sl, j, k );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\tfunction v( x, y, z ) {\\r\\n\\r\\n\\t\\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction f3( a, b, c ) {\\r\\n\\r\\n\\t\\ta += shapesOffset;\\r\\n\\t\\tb += shapesOffset;\\r\\n\\t\\tc += shapesOffset;\\r\\n\\r\\n\\t\\tscope.faces.push( new THREE.Face3( a, b, c, null, null, 0 ) );\\r\\n\\r\\n\\t\\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\\r\\n\\r\\n\\t\\tscope.faceVertexUvs[ 0 ].push( uvs );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\\r\\n\\r\\n\\t\\ta += shapesOffset;\\r\\n\\t\\tb += shapesOffset;\\r\\n\\t\\tc += shapesOffset;\\r\\n\\t\\td += shapesOffset;\\r\\n\\r\\n\\t\\tscope.faces.push( new THREE.Face3( a, b, d, null, null, 1 ) );\\r\\n\\t\\tscope.faces.push( new THREE.Face3( b, c, d, null, null, 1 ) );\\r\\n\\r\\n\\t\\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\\r\\n\\r\\n\\t\\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\\r\\n\\t\\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\\r\\n\\r\\n\\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\\r\\n\\r\\n\\t\\tvar vertices = geometry.vertices;\\r\\n\\r\\n\\t\\tvar a = vertices[ indexA ];\\r\\n\\t\\tvar b = vertices[ indexB ];\\r\\n\\t\\tvar c = vertices[ indexC ];\\r\\n\\r\\n\\t\\treturn [\\r\\n\\t\\t\\tnew THREE.Vector2( a.x, a.y ),\\r\\n\\t\\t\\tnew THREE.Vector2( b.x, b.y ),\\r\\n\\t\\t\\tnew THREE.Vector2( c.x, c.y )\\r\\n\\t\\t];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\\r\\n\\r\\n\\t\\tvar vertices = geometry.vertices;\\r\\n\\r\\n\\t\\tvar a = vertices[ indexA ];\\r\\n\\t\\tvar b = vertices[ indexB ];\\r\\n\\t\\tvar c = vertices[ indexC ];\\r\\n\\t\\tvar d = vertices[ indexD ];\\r\\n\\r\\n\\t\\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\\r\\n\\r\\n\\t\\t\\treturn [\\r\\n\\t\\t\\t\\tnew THREE.Vector2( a.x, 1 - a.z ),\\r\\n\\t\\t\\t\\tnew THREE.Vector2( b.x, 1 - b.z ),\\r\\n\\t\\t\\t\\tnew THREE.Vector2( c.x, 1 - c.z ),\\r\\n\\t\\t\\t\\tnew THREE.Vector2( d.x, 1 - d.z )\\r\\n\\t\\t\\t];\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\treturn [\\r\\n\\t\\t\\t\\tnew THREE.Vector2( a.y, 1 - a.z ),\\r\\n\\t\\t\\t\\tnew THREE.Vector2( b.y, 1 - b.z ),\\r\\n\\t\\t\\t\\tnew THREE.Vector2( c.y, 1 - c.z ),\\r\\n\\t\\t\\t\\tnew THREE.Vector2( d.y, 1 - d.z )\\r\\n\\t\\t\\t];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n};\\r\\n\\r\\n// File:src/extras/geometries/ShapeGeometry.js\\r\\n\\r\\n/**\\r\\n * @author jonobr1 / http://jonobr1.com\\r\\n *\\r\\n * Creates a one-sided polygonal geometry from a path shape. Similar to\\r\\n * ExtrudeGeometry.\\r\\n *\\r\\n * parameters = {\\r\\n *\\r\\n *\\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\\r\\n *\\r\\n *\\tmaterial: <int> // material index for front and back faces\\r\\n *\\tuvGenerator: <Object> // object that provides UV generator functions\\r\\n *\\r\\n * }\\r\\n **/\\r\\n\\r\\nTHREE.ShapeGeometry = function ( shapes, options ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'ShapeGeometry';\\r\\n\\r\\n\\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\\r\\n\\r\\n\\tthis.addShapeList( shapes, options );\\r\\n\\r\\n\\tthis.computeFaceNormals();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\\r\\n\\r\\n/**\\r\\n * Add an array of shapes to THREE.ShapeGeometry.\\r\\n */\\r\\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\\r\\n\\r\\n\\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\tthis.addShape( shapes[ i ], options );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n/**\\r\\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\\r\\n */\\r\\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\\r\\n\\r\\n\\tif ( options === undefined ) options = {};\\r\\n\\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\\r\\n\\r\\n\\tvar material = options.material;\\r\\n\\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tvar i, l, hole;\\r\\n\\r\\n\\tvar shapesOffset = this.vertices.length;\\r\\n\\tvar shapePoints = shape.extractPoints( curveSegments );\\r\\n\\r\\n\\tvar vertices = shapePoints.shape;\\r\\n\\tvar holes = shapePoints.holes;\\r\\n\\r\\n\\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\\r\\n\\r\\n\\tif ( reverse ) {\\r\\n\\r\\n\\t\\tvertices = vertices.reverse();\\r\\n\\r\\n\\t\\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\\r\\n\\r\\n\\t\\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\thole = holes[ i ];\\r\\n\\r\\n\\t\\t\\tif ( THREE.ShapeUtils.isClockWise( hole ) ) {\\r\\n\\r\\n\\t\\t\\t\\tholes[ i ] = hole.reverse();\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treverse = false;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\\r\\n\\r\\n\\t// Vertices\\r\\n\\r\\n\\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\thole = holes[ i ];\\r\\n\\t\\tvertices = vertices.concat( hole );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tvar vert, vlen = vertices.length;\\r\\n\\tvar face, flen = faces.length;\\r\\n\\r\\n\\tfor ( i = 0; i < vlen; i ++ ) {\\r\\n\\r\\n\\t\\tvert = vertices[ i ];\\r\\n\\r\\n\\t\\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfor ( i = 0; i < flen; i ++ ) {\\r\\n\\r\\n\\t\\tface = faces[ i ];\\r\\n\\r\\n\\t\\tvar a = face[ 0 ] + shapesOffset;\\r\\n\\t\\tvar b = face[ 1 ] + shapesOffset;\\r\\n\\t\\tvar c = face[ 2 ] + shapesOffset;\\r\\n\\r\\n\\t\\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\\r\\n\\t\\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/geometries/LatheBufferGeometry.js\\r\\n\\r\\n/**\\r\\n * @author Mugen87 / https://github.com/Mugen87\\r\\n */\\r\\n\\r\\n // points - to create a closed torus, one must use a set of points\\r\\n //    like so: [ a, b, c, d, a ], see first is the same as last.\\r\\n // segments - the number of circumference segments to create\\r\\n // phiStart - the starting radian\\r\\n // phiLength - the radian (0 to 2PI) range of the lathed section\\r\\n //    2PI is a closed lathe, less than 2PI is a portion.\\r\\n\\r\\nTHREE.LatheBufferGeometry = function ( points, segments, phiStart, phiLength ) {\\r\\n\\r\\n\\tTHREE.BufferGeometry.call( this );\\r\\n\\r\\n\\tthis.type = 'LatheBufferGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tpoints: points,\\r\\n\\t\\tsegments: segments,\\r\\n\\t\\tphiStart: phiStart,\\r\\n\\t\\tphiLength: phiLength\\r\\n\\t};\\r\\n\\r\\n\\tsegments = Math.floor( segments ) || 12;\\r\\n\\tphiStart = phiStart || 0;\\r\\n\\tphiLength = phiLength || Math.PI * 2;\\r\\n\\r\\n\\t// clamp phiLength so it's in range of [ 0, 2PI ]\\r\\n\\tphiLength = THREE.Math.clamp( phiLength, 0, Math.PI * 2 );\\r\\n\\r\\n\\t// these are used to calculate buffer length\\r\\n\\tvar vertexCount = ( segments + 1 ) * points.length;\\r\\n\\tvar indexCount = segments * points.length * 2 * 3;\\r\\n\\r\\n\\t// buffers\\r\\n\\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\\r\\n\\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\r\\n\\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\r\\n\\r\\n\\t// helper variables\\r\\n\\tvar index = 0, indexOffset = 0, base;\\r\\n\\tvar inversePointLength = 1.0 / ( points.length - 1 );\\r\\n\\tvar inverseSegments = 1.0 / segments;\\r\\n\\tvar vertex = new THREE.Vector3();\\r\\n\\tvar uv = new THREE.Vector2();\\r\\n\\tvar i, j;\\r\\n\\r\\n\\t// generate vertices and uvs\\r\\n\\r\\n\\tfor ( i = 0; i <= segments; i ++ ) {\\r\\n\\r\\n\\t\\tvar phi = phiStart + i * inverseSegments * phiLength;\\r\\n\\r\\n\\t\\tvar sin = Math.sin( phi );\\r\\n\\t\\tvar cos = Math.cos( phi );\\r\\n\\r\\n\\t\\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\\r\\n\\r\\n\\t\\t\\t// vertex\\r\\n\\t\\t\\tvertex.x = points[ j ].x * sin;\\r\\n\\t\\t\\tvertex.y = points[ j ].y;\\r\\n\\t\\t\\tvertex.z = points[ j ].x * cos;\\r\\n\\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n\\t\\t\\t// uv\\r\\n\\t\\t\\tuv.x = i / segments;\\r\\n\\t\\t\\tuv.y = j / ( points.length - 1 );\\r\\n\\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\r\\n\\r\\n\\t\\t\\t// increase index\\r\\n\\t\\t\\tindex ++;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// generate indices\\r\\n\\r\\n\\tfor ( i = 0; i < segments; i ++ ) {\\r\\n\\r\\n\\t\\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\\r\\n\\r\\n\\t\\t\\tbase = j + i * points.length;\\r\\n\\r\\n\\t\\t\\t// indices\\r\\n\\t\\t\\tvar a = base;\\r\\n\\t\\t\\tvar b = base + points.length;\\r\\n\\t\\t\\tvar c = base + points.length + 1;\\r\\n\\t\\t\\tvar d = base + 1;\\r\\n\\r\\n\\t\\t\\t// face one\\r\\n\\t\\t\\tindices.setX( indexOffset, a ); indexOffset++;\\r\\n\\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\r\\n\\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\r\\n\\r\\n\\t\\t\\t// face two\\r\\n\\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\r\\n\\t\\t\\tindices.setX( indexOffset, c ); indexOffset++;\\r\\n\\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// build geometry\\r\\n\\r\\n\\tthis.setIndex( indices );\\r\\n\\tthis.addAttribute( 'position', vertices );\\r\\n\\tthis.addAttribute( 'uv', uvs );\\r\\n\\r\\n\\t// generate normals\\r\\n\\r\\n\\tthis.computeVertexNormals();\\r\\n\\r\\n\\t// if the geometry is closed, we need to average the normals along the seam.\\r\\n\\t// because the corresponding vertices are identical (but still have different UVs).\\r\\n\\r\\n\\tif( phiLength === Math.PI * 2 ) {\\r\\n\\r\\n\\t\\tvar normals = this.attributes.normal.array;\\r\\n\\t\\tvar n1 = new THREE.Vector3();\\r\\n\\t\\tvar n2 = new THREE.Vector3();\\r\\n\\t\\tvar n = new THREE.Vector3();\\r\\n\\r\\n\\t\\t// this is the buffer offset for the last line of vertices\\r\\n\\t\\tbase = segments * points.length * 3;\\r\\n\\r\\n\\t\\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\\r\\n\\r\\n\\t\\t\\t// select the normal of the vertex in the first line\\r\\n\\t\\t\\tn1.x = normals[ j + 0 ];\\r\\n\\t\\t\\tn1.y = normals[ j + 1 ];\\r\\n\\t\\t\\tn1.z = normals[ j + 2 ];\\r\\n\\r\\n\\t\\t\\t// select the normal of the vertex in the last line\\r\\n\\t\\t\\tn2.x = normals[ base + j + 0 ];\\r\\n\\t\\t\\tn2.y = normals[ base + j + 1 ];\\r\\n\\t\\t\\tn2.z = normals[ base + j + 2 ];\\r\\n\\r\\n\\t\\t\\t// average normals\\r\\n\\t\\t\\tn.addVectors( n1, n2 ).normalize();\\r\\n\\r\\n\\t\\t\\t// assign the new values to both normals\\r\\n\\t\\t\\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\\r\\n\\t\\t\\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\\r\\n\\t\\t\\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\\r\\n\\r\\n\\t\\t} // next row\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.LatheBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry;\\r\\n\\r\\n// File:src/extras/geometries/LatheGeometry.js\\r\\n\\r\\n/**\\r\\n * @author astrodud / http://astrodud.isgreat.org/\\r\\n * @author zz85 / https://github.com/zz85\\r\\n * @author bhouston / http://clara.io\\r\\n */\\r\\n\\r\\n// points - to create a closed torus, one must use a set of points\\r\\n//    like so: [ a, b, c, d, a ], see first is the same as last.\\r\\n// segments - the number of circumference segments to create\\r\\n// phiStart - the starting radian\\r\\n// phiLength - the radian (0 to 2PI) range of the lathed section\\r\\n//    2PI is a closed lathe, less than 2PI is a portion.\\r\\n\\r\\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'LatheGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tpoints: points,\\r\\n\\t\\tsegments: segments,\\r\\n\\t\\tphiStart: phiStart,\\r\\n\\t\\tphiLength: phiLength\\r\\n\\t};\\r\\n\\r\\n\\tthis.fromBufferGeometry( new THREE.LatheBufferGeometry( points, segments, phiStart, phiLength ) );\\r\\n\\tthis.mergeVertices();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\\r\\n\\r\\n// File:src/extras/geometries/PlaneGeometry.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\\r\\n */\\r\\n\\r\\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'PlaneGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\twidth: width,\\r\\n\\t\\theight: height,\\r\\n\\t\\twidthSegments: widthSegments,\\r\\n\\t\\theightSegments: heightSegments\\r\\n\\t};\\r\\n\\r\\n\\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\\r\\n\\r\\n// File:src/extras/geometries/PlaneBufferGeometry.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\\r\\n */\\r\\n\\r\\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\\r\\n\\r\\n\\tTHREE.BufferGeometry.call( this );\\r\\n\\r\\n\\tthis.type = 'PlaneBufferGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\twidth: width,\\r\\n\\t\\theight: height,\\r\\n\\t\\twidthSegments: widthSegments,\\r\\n\\t\\theightSegments: heightSegments\\r\\n\\t};\\r\\n\\r\\n\\tvar width_half = width / 2;\\r\\n\\tvar height_half = height / 2;\\r\\n\\r\\n\\tvar gridX = Math.floor( widthSegments ) || 1;\\r\\n\\tvar gridY = Math.floor( heightSegments ) || 1;\\r\\n\\r\\n\\tvar gridX1 = gridX + 1;\\r\\n\\tvar gridY1 = gridY + 1;\\r\\n\\r\\n\\tvar segment_width = width / gridX;\\r\\n\\tvar segment_height = height / gridY;\\r\\n\\r\\n\\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\\r\\n\\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\\r\\n\\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\\r\\n\\r\\n\\tvar offset = 0;\\r\\n\\tvar offset2 = 0;\\r\\n\\r\\n\\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\\r\\n\\r\\n\\t\\tvar y = iy * segment_height - height_half;\\r\\n\\r\\n\\t\\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\\r\\n\\r\\n\\t\\t\\tvar x = ix * segment_width - width_half;\\r\\n\\r\\n\\t\\t\\tvertices[ offset ] = x;\\r\\n\\t\\t\\tvertices[ offset + 1 ] = - y;\\r\\n\\r\\n\\t\\t\\tnormals[ offset + 2 ] = 1;\\r\\n\\r\\n\\t\\t\\tuvs[ offset2 ] = ix / gridX;\\r\\n\\t\\t\\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\\r\\n\\r\\n\\t\\t\\toffset += 3;\\r\\n\\t\\t\\toffset2 += 2;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\toffset = 0;\\r\\n\\r\\n\\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\\r\\n\\r\\n\\tfor ( var iy = 0; iy < gridY; iy ++ ) {\\r\\n\\r\\n\\t\\tfor ( var ix = 0; ix < gridX; ix ++ ) {\\r\\n\\r\\n\\t\\t\\tvar a = ix + gridX1 * iy;\\r\\n\\t\\t\\tvar b = ix + gridX1 * ( iy + 1 );\\r\\n\\t\\t\\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\\r\\n\\t\\t\\tvar d = ( ix + 1 ) + gridX1 * iy;\\r\\n\\r\\n\\t\\t\\tindices[ offset ] = a;\\r\\n\\t\\t\\tindices[ offset + 1 ] = b;\\r\\n\\t\\t\\tindices[ offset + 2 ] = d;\\r\\n\\r\\n\\t\\t\\tindices[ offset + 3 ] = b;\\r\\n\\t\\t\\tindices[ offset + 4 ] = c;\\r\\n\\t\\t\\tindices[ offset + 5 ] = d;\\r\\n\\r\\n\\t\\t\\toffset += 6;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\\r\\n\\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\\r\\n\\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\\r\\n\\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\\r\\n\\r\\n// File:src/extras/geometries/RingBufferGeometry.js\\r\\n\\r\\n/**\\r\\n * @author Mugen87 / https://github.com/Mugen87\\r\\n */\\r\\n\\r\\nTHREE.RingBufferGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\\r\\n\\r\\n\\tTHREE.BufferGeometry.call( this );\\r\\n\\r\\n\\tthis.type = 'RingBufferGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tinnerRadius: innerRadius,\\r\\n\\t\\touterRadius: outerRadius,\\r\\n\\t\\tthetaSegments: thetaSegments,\\r\\n\\t\\tphiSegments: phiSegments,\\r\\n\\t\\tthetaStart: thetaStart,\\r\\n\\t\\tthetaLength: thetaLength\\r\\n\\t};\\r\\n\\r\\n\\tinnerRadius = innerRadius || 20;\\r\\n\\touterRadius = outerRadius || 50;\\r\\n\\r\\n\\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\\r\\n\\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\\r\\n\\r\\n\\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\\r\\n\\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\\r\\n\\r\\n\\t// these are used to calculate buffer length\\r\\n\\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\\r\\n\\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\\r\\n\\r\\n\\t// buffers\\r\\n\\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\\r\\n\\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\r\\n\\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\r\\n\\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\r\\n\\r\\n\\t// some helper variables\\r\\n\\tvar index = 0, indexOffset = 0, segment;\\r\\n\\tvar radius = innerRadius;\\r\\n\\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\\r\\n\\tvar vertex = new THREE.Vector3();\\r\\n\\tvar uv = new THREE.Vector2();\\r\\n\\tvar j, i;\\r\\n\\r\\n\\t// generate vertices, normals and uvs\\r\\n\\r\\n\\t// values are generate from the inside of the ring to the outside\\r\\n\\r\\n\\tfor ( j = 0; j <= phiSegments; j ++ ) {\\r\\n\\r\\n\\t\\tfor ( i = 0; i <= thetaSegments; i ++ ) {\\r\\n\\r\\n\\t\\t\\tsegment = thetaStart + i / thetaSegments * thetaLength;\\r\\n\\r\\n\\t\\t\\t// vertex\\r\\n\\t\\t\\tvertex.x = radius * Math.cos( segment );\\r\\n\\t\\t\\tvertex.y = radius * Math.sin( segment );\\r\\n\\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n\\t\\t\\t// normal\\r\\n\\t\\t\\tnormals.setXYZ( index, 0, 0, 1 );\\r\\n\\r\\n\\t\\t\\t// uv\\r\\n\\t\\t\\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\\r\\n\\t\\t\\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\\r\\n\\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\r\\n\\r\\n\\t\\t\\t// increase index\\r\\n\\t\\t\\tindex++;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// increase the radius for next row of vertices\\r\\n\\t\\tradius += radiusStep;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// generate indices\\r\\n\\r\\n\\tfor ( j = 0; j < phiSegments; j ++ ) {\\r\\n\\r\\n\\t\\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\\r\\n\\r\\n\\t\\tfor ( i = 0; i < thetaSegments; i ++ ) {\\r\\n\\r\\n\\t\\t\\tsegment = i + thetaSegmentLevel;\\r\\n\\r\\n\\t\\t\\t// indices\\r\\n\\t\\t\\tvar a = segment;\\r\\n\\t\\t\\tvar b = segment + thetaSegments + 1;\\r\\n\\t\\t\\tvar c = segment + thetaSegments + 2;\\r\\n\\t\\t\\tvar d = segment + 1;\\r\\n\\r\\n\\t\\t\\t// face one\\r\\n\\t\\t\\tindices.setX( indexOffset, a ); indexOffset++;\\r\\n\\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\r\\n\\t\\t\\tindices.setX( indexOffset, c ); indexOffset++;\\r\\n\\r\\n\\t\\t\\t// face two\\r\\n\\t\\t\\tindices.setX( indexOffset, a ); indexOffset++;\\r\\n\\t\\t\\tindices.setX( indexOffset, c ); indexOffset++;\\r\\n\\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// build geometry\\r\\n\\r\\n\\tthis.setIndex( indices );\\r\\n\\tthis.addAttribute( 'position', vertices );\\r\\n\\tthis.addAttribute( 'normal', normals );\\r\\n\\tthis.addAttribute( 'uv', uvs );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.RingBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry;\\r\\n\\r\\n// File:src/extras/geometries/RingGeometry.js\\r\\n\\r\\n/**\\r\\n * @author Kaleb Murphy\\r\\n */\\r\\n\\r\\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'RingGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tinnerRadius: innerRadius,\\r\\n\\t\\touterRadius: outerRadius,\\r\\n\\t\\tthetaSegments: thetaSegments,\\r\\n\\t\\tphiSegments: phiSegments,\\r\\n\\t\\tthetaStart: thetaStart,\\r\\n\\t\\tthetaLength: thetaLength\\r\\n\\t};\\r\\n\\r\\n\\tthis.fromBufferGeometry( new THREE.RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\\r\\n\\r\\n// File:src/extras/geometries/SphereGeometry.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'SphereGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\twidthSegments: widthSegments,\\r\\n\\t\\theightSegments: heightSegments,\\r\\n\\t\\tphiStart: phiStart,\\r\\n\\t\\tphiLength: phiLength,\\r\\n\\t\\tthetaStart: thetaStart,\\r\\n\\t\\tthetaLength: thetaLength\\r\\n\\t};\\r\\n\\r\\n\\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\\r\\n\\r\\n// File:src/extras/geometries/SphereBufferGeometry.js\\r\\n\\r\\n/**\\r\\n * @author benaadams / https://twitter.com/ben_a_adams\\r\\n * based on THREE.SphereGeometry\\r\\n */\\r\\n\\r\\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\\r\\n\\r\\n\\tTHREE.BufferGeometry.call( this );\\r\\n\\r\\n\\tthis.type = 'SphereBufferGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\twidthSegments: widthSegments,\\r\\n\\t\\theightSegments: heightSegments,\\r\\n\\t\\tphiStart: phiStart,\\r\\n\\t\\tphiLength: phiLength,\\r\\n\\t\\tthetaStart: thetaStart,\\r\\n\\t\\tthetaLength: thetaLength\\r\\n\\t};\\r\\n\\r\\n\\tradius = radius || 50;\\r\\n\\r\\n\\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\\r\\n\\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\\r\\n\\r\\n\\tphiStart = phiStart !== undefined ? phiStart : 0;\\r\\n\\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\\r\\n\\r\\n\\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\\r\\n\\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\\r\\n\\r\\n\\tvar thetaEnd = thetaStart + thetaLength;\\r\\n\\r\\n\\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\\r\\n\\r\\n\\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\r\\n\\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\r\\n\\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\r\\n\\r\\n\\tvar index = 0, vertices = [], normal = new THREE.Vector3();\\r\\n\\r\\n\\tfor ( var y = 0; y <= heightSegments; y ++ ) {\\r\\n\\r\\n\\t\\tvar verticesRow = [];\\r\\n\\r\\n\\t\\tvar v = y / heightSegments;\\r\\n\\r\\n\\t\\tfor ( var x = 0; x <= widthSegments; x ++ ) {\\r\\n\\r\\n\\t\\t\\tvar u = x / widthSegments;\\r\\n\\r\\n\\t\\t\\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\\r\\n\\t\\t\\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\\r\\n\\t\\t\\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\\r\\n\\r\\n\\t\\t\\tnormal.set( px, py, pz ).normalize();\\r\\n\\r\\n\\t\\t\\tpositions.setXYZ( index, px, py, pz );\\r\\n\\t\\t\\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\\r\\n\\t\\t\\tuvs.setXY( index, u, 1 - v );\\r\\n\\r\\n\\t\\t\\tverticesRow.push( index );\\r\\n\\r\\n\\t\\t\\tindex ++;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvertices.push( verticesRow );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar indices = [];\\r\\n\\r\\n\\tfor ( var y = 0; y < heightSegments; y ++ ) {\\r\\n\\r\\n\\t\\tfor ( var x = 0; x < widthSegments; x ++ ) {\\r\\n\\r\\n\\t\\t\\tvar v1 = vertices[ y ][ x + 1 ];\\r\\n\\t\\t\\tvar v2 = vertices[ y ][ x ];\\r\\n\\t\\t\\tvar v3 = vertices[ y + 1 ][ x ];\\r\\n\\t\\t\\tvar v4 = vertices[ y + 1 ][ x + 1 ];\\r\\n\\r\\n\\t\\t\\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\\r\\n\\t\\t\\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.setIndex( new ( positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute )( indices, 1 ) );\\r\\n\\tthis.addAttribute( 'position', positions );\\r\\n\\tthis.addAttribute( 'normal', normals );\\r\\n\\tthis.addAttribute( 'uv', uvs );\\r\\n\\r\\n\\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\\r\\n\\r\\n// File:src/extras/geometries/TextGeometry.js\\r\\n\\r\\n/**\\r\\n * @author zz85 / http://www.lab4games.net/zz85/blog\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n *\\r\\n * Text = 3D Text\\r\\n *\\r\\n * parameters = {\\r\\n *  font: <THREE.Font>, // font\\r\\n *\\r\\n *  size: <float>, // size of the text\\r\\n *  height: <float>, // thickness to extrude text\\r\\n *  curveSegments: <int>, // number of points on the curves\\r\\n *\\r\\n *  bevelEnabled: <bool>, // turn on bevel\\r\\n *  bevelThickness: <float>, // how deep into text bevel goes\\r\\n *  bevelSize: <float> // how far from text outline is bevel\\r\\n * }\\r\\n */\\r\\n\\r\\nTHREE.TextGeometry = function ( text, parameters ) {\\r\\n\\r\\n\\tparameters = parameters || {};\\r\\n\\r\\n\\tvar font = parameters.font;\\r\\n\\r\\n\\tif ( font instanceof THREE.Font === false ) {\\r\\n\\r\\n\\t\\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\\r\\n\\t\\treturn new THREE.Geometry();\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\\r\\n\\r\\n\\t// translate parameters to ExtrudeGeometry API\\r\\n\\r\\n\\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\\r\\n\\r\\n\\t// defaults\\r\\n\\r\\n\\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\\r\\n\\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\\r\\n\\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\\r\\n\\r\\n\\tTHREE.ExtrudeGeometry.call( this, shapes, parameters );\\r\\n\\r\\n\\tthis.type = 'TextGeometry';\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\\r\\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\\r\\n\\r\\n// File:src/extras/geometries/TorusBufferGeometry.js\\r\\n\\r\\n/**\\r\\n * @author Mugen87 / https://github.com/Mugen87\\r\\n */\\r\\n\\r\\nTHREE.TorusBufferGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\\r\\n\\r\\n\\tTHREE.BufferGeometry.call( this );\\r\\n\\r\\n\\tthis.type = 'TorusBufferGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\ttube: tube,\\r\\n\\t\\tradialSegments: radialSegments,\\r\\n\\t\\ttubularSegments: tubularSegments,\\r\\n\\t\\tarc: arc\\r\\n\\t};\\r\\n\\r\\n\\tradius = radius || 100;\\r\\n\\ttube = tube || 40;\\r\\n\\tradialSegments = Math.floor( radialSegments ) || 8;\\r\\n\\ttubularSegments = Math.floor( tubularSegments ) || 6;\\r\\n\\tarc = arc || Math.PI * 2;\\r\\n\\r\\n\\t// used to calculate buffer length\\r\\n\\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\\r\\n\\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\\r\\n\\r\\n\\t// buffers\\r\\n\\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\\r\\n\\tvar vertices = new Float32Array( vertexCount * 3 );\\r\\n\\tvar normals = new Float32Array( vertexCount * 3 );\\r\\n\\tvar uvs = new Float32Array( vertexCount * 2 );\\r\\n\\r\\n\\t// offset variables\\r\\n\\tvar vertexBufferOffset = 0;\\r\\n\\tvar uvBufferOffset = 0;\\r\\n\\tvar indexBufferOffset = 0;\\r\\n\\r\\n\\t// helper variables\\r\\n\\tvar center = new THREE.Vector3();\\r\\n\\tvar vertex = new THREE.Vector3();\\r\\n\\tvar normal = new THREE.Vector3();\\r\\n\\r\\n\\tvar j, i;\\r\\n\\r\\n\\t// generate vertices, normals and uvs\\r\\n\\r\\n\\tfor ( j = 0; j <= radialSegments; j ++ ) {\\r\\n\\r\\n\\t\\tfor ( i = 0; i <= tubularSegments; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar u = i / tubularSegments * arc;\\r\\n\\t\\t\\tvar v = j / radialSegments * Math.PI * 2;\\r\\n\\r\\n\\t\\t\\t// vertex\\r\\n\\t\\t\\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\\r\\n\\t\\t\\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\\r\\n\\t\\t\\tvertex.z = tube * Math.sin( v );\\r\\n\\r\\n\\t\\t\\tvertices[ vertexBufferOffset ] = vertex.x;\\r\\n\\t\\t\\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\\r\\n\\t\\t\\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\\r\\n\\r\\n\\t\\t\\t// this vector is used to calculate the normal\\r\\n\\t\\t\\tcenter.x = radius * Math.cos( u );\\r\\n\\t\\t\\tcenter.y = radius * Math.sin( u );\\r\\n\\r\\n\\t\\t\\t// normal\\r\\n\\t\\t\\tnormal.subVectors( vertex, center ).normalize();\\r\\n\\r\\n\\t\\t\\tnormals[ vertexBufferOffset ] = normal.x;\\r\\n\\t\\t\\tnormals[ vertexBufferOffset + 1 ] = normal.y;\\r\\n\\t\\t\\tnormals[ vertexBufferOffset + 2 ] = normal.z;\\r\\n\\r\\n\\t\\t\\t// uv\\r\\n\\t\\t\\tuvs[ uvBufferOffset ] = i / tubularSegments;\\r\\n\\t\\t\\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\\r\\n\\r\\n\\t\\t\\t// update offsets\\r\\n\\t\\t\\tvertexBufferOffset += 3;\\r\\n\\t\\t\\tuvBufferOffset += 2;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// generate indices\\r\\n\\r\\n\\tfor ( j = 1; j <= radialSegments; j ++ ) {\\r\\n\\r\\n\\t\\tfor ( i = 1; i <= tubularSegments; i ++ ) {\\r\\n\\r\\n\\t\\t\\t// indices\\r\\n\\t\\t\\tvar a = ( tubularSegments + 1 ) * j + i - 1;\\r\\n\\t\\t\\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\\r\\n\\t\\t\\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\\r\\n\\t\\t\\tvar d = ( tubularSegments + 1 ) * j + i;\\r\\n\\r\\n\\t\\t\\t// face one\\r\\n\\t\\t\\tindices[ indexBufferOffset ] = a;\\r\\n\\t\\t\\tindices[ indexBufferOffset + 1 ] = b;\\r\\n\\t\\t\\tindices[ indexBufferOffset + 2 ] = d;\\r\\n\\r\\n\\t\\t\\t// face two\\r\\n\\t\\t\\tindices[ indexBufferOffset + 3 ] = b;\\r\\n\\t\\t\\tindices[ indexBufferOffset + 4 ] = c;\\r\\n\\t\\t\\tindices[ indexBufferOffset + 5 ] = d;\\r\\n\\r\\n\\t\\t\\t// update offset\\r\\n\\t\\t\\tindexBufferOffset += 6;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// build geometry\\r\\n\\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\\r\\n\\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\\r\\n\\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\\r\\n\\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.TorusBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry;\\r\\n\\r\\n// File:src/extras/geometries/TorusGeometry.js\\r\\n\\r\\n/**\\r\\n * @author oosmoxiecode\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\\r\\n */\\r\\n\\r\\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'TorusGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\ttube: tube,\\r\\n\\t\\tradialSegments: radialSegments,\\r\\n\\t\\ttubularSegments: tubularSegments,\\r\\n\\t\\tarc: arc\\r\\n\\t};\\r\\n\\r\\n\\tthis.fromBufferGeometry( new THREE.TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\\r\\n\\r\\n// File:src/extras/geometries/TorusKnotBufferGeometry.js\\r\\n\\r\\n/**\\r\\n * @author Mugen87 / https://github.com/Mugen87\\r\\n *\\r\\n * see: http://www.blackpawn.com/texts/pqtorus/\\r\\n */\\r\\nTHREE.TorusKnotBufferGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q ) {\\r\\n\\r\\n\\tTHREE.BufferGeometry.call( this );\\r\\n\\r\\n\\tthis.type = 'TorusKnotBufferGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\ttube: tube,\\r\\n\\t\\ttubularSegments: tubularSegments,\\r\\n\\t\\tradialSegments: radialSegments,\\r\\n\\t\\tp: p,\\r\\n\\t\\tq: q\\r\\n\\t};\\r\\n\\r\\n\\tradius = radius || 100;\\r\\n\\ttube = tube || 40;\\r\\n\\ttubularSegments = Math.floor( tubularSegments ) || 64;\\r\\n\\tradialSegments = Math.floor( radialSegments ) || 8;\\r\\n\\tp = p || 2;\\r\\n\\tq = q || 3;\\r\\n\\r\\n\\t// used to calculate buffer length\\r\\n\\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\\r\\n\\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\\r\\n\\r\\n\\t// buffers\\r\\n\\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\\r\\n\\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\r\\n\\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\r\\n\\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\r\\n\\r\\n\\t// helper variables\\r\\n\\tvar i, j, index = 0, indexOffset = 0;\\r\\n\\r\\n\\tvar vertex = new THREE.Vector3();\\r\\n\\tvar normal = new THREE.Vector3();\\r\\n\\tvar uv = new THREE.Vector2();\\r\\n\\r\\n\\tvar P1 = new THREE.Vector3();\\r\\n\\tvar P2 = new THREE.Vector3();\\r\\n\\r\\n\\tvar B = new THREE.Vector3();\\r\\n\\tvar T = new THREE.Vector3();\\r\\n\\tvar N = new THREE.Vector3();\\r\\n\\r\\n\\t// generate vertices, normals and uvs\\r\\n\\r\\n\\tfor ( i = 0; i <= tubularSegments; ++ i ) {\\r\\n\\r\\n\\t\\t// the radian \\\"u\\\" is used to calculate the position on the torus curve of the current tubular segement\\r\\n\\r\\n\\t\\tvar u = i / tubularSegments * p * Math.PI * 2;\\r\\n\\r\\n\\t\\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\\r\\n\\t\\t// these points are used to create a special \\\"coordinate space\\\", which is necessary to calculate the correct vertex positions\\r\\n\\r\\n\\t\\tcalculatePositionOnCurve( u, p, q, radius, P1 );\\r\\n\\t\\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\\r\\n\\r\\n\\t\\t// calculate orthonormal basis\\r\\n\\r\\n\\t\\tT.subVectors( P2, P1 );\\r\\n\\t\\tN.addVectors( P2, P1 );\\r\\n\\t\\tB.crossVectors( T, N );\\r\\n\\t\\tN.crossVectors( B, T );\\r\\n\\r\\n\\t\\t// normalize B, N. T can be ignored, we don't use it\\r\\n\\r\\n\\t\\tB.normalize();\\r\\n\\t\\tN.normalize();\\r\\n\\r\\n\\t\\tfor ( j = 0; j <= radialSegments; ++ j ) {\\r\\n\\r\\n\\t\\t\\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\\r\\n\\t\\t\\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\\r\\n\\r\\n\\t\\t\\tvar v = j / radialSegments * Math.PI * 2;\\r\\n\\t\\t\\tvar cx = - tube * Math.cos( v );\\r\\n\\t\\t\\tvar cy = tube * Math.sin( v );\\r\\n\\r\\n\\t\\t\\t// now calculate the final vertex position.\\r\\n\\t\\t\\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\\r\\n\\r\\n\\t\\t\\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\\r\\n\\t\\t\\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\\r\\n\\t\\t\\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\\r\\n\\r\\n\\t\\t\\t// vertex\\r\\n\\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\r\\n\\r\\n\\t\\t\\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\\r\\n\\t\\t\\tnormal.subVectors( vertex, P1 ).normalize();\\r\\n\\t\\t\\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\\r\\n\\r\\n\\t\\t\\t// uv\\r\\n\\t\\t\\tuv.x = i / tubularSegments;\\r\\n\\t\\t\\tuv.y = j / radialSegments;\\r\\n\\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\r\\n\\r\\n\\t\\t\\t// increase index\\r\\n\\t\\t\\tindex ++;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// generate indices\\r\\n\\r\\n\\tfor ( j = 1; j <= tubularSegments; j ++ ) {\\r\\n\\r\\n\\t\\tfor ( i = 1; i <= radialSegments; i ++ ) {\\r\\n\\r\\n\\t\\t\\t// indices\\r\\n\\t\\t\\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\\r\\n\\t\\t\\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\\r\\n\\t\\t\\tvar c = ( radialSegments + 1 ) * j + i;\\r\\n\\t\\t\\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\\r\\n\\r\\n\\t\\t\\t// face one\\r\\n\\t\\t\\tindices.setX( indexOffset, a ); indexOffset++;\\r\\n\\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\r\\n\\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\r\\n\\r\\n\\t\\t\\t// face two\\r\\n\\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\r\\n\\t\\t\\tindices.setX( indexOffset, c ); indexOffset++;\\r\\n\\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// build geometry\\r\\n\\r\\n\\tthis.setIndex( indices );\\r\\n\\tthis.addAttribute( 'position', vertices );\\r\\n\\tthis.addAttribute( 'normal', normals );\\r\\n\\tthis.addAttribute( 'uv', uvs );\\r\\n\\r\\n\\t// this function calculates the current position on the torus curve\\r\\n\\r\\n\\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\\r\\n\\r\\n\\t\\tvar cu = Math.cos( u );\\r\\n\\t\\tvar su = Math.sin( u );\\r\\n\\t\\tvar quOverP = q / p * u;\\r\\n\\t\\tvar cs = Math.cos( quOverP );\\r\\n\\r\\n\\t\\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\\r\\n\\t\\tposition.y = radius * ( 2 + cs ) * su * 0.5;\\r\\n\\t\\tposition.z = radius * Math.sin( quOverP ) * 0.5;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.TorusKnotBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry;\\r\\n\\r\\n// File:src/extras/geometries/TorusKnotGeometry.js\\r\\n\\r\\n/**\\r\\n * @author oosmoxiecode\\r\\n */\\r\\n\\r\\nTHREE.TorusKnotGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'TorusKnotGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\ttube: tube,\\r\\n\\t\\ttubularSegments: tubularSegments,\\r\\n\\t\\tradialSegments: radialSegments,\\r\\n\\t\\tp: p,\\r\\n\\t\\tq: q\\r\\n\\t};\\r\\n\\r\\n\\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\\r\\n\\r\\n\\tthis.fromBufferGeometry( new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\\r\\n\\tthis.mergeVertices();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\\r\\n\\r\\n// File:src/extras/geometries/TubeGeometry.js\\r\\n\\r\\n/**\\r\\n * @author WestLangley / https://github.com/WestLangley\\r\\n * @author zz85 / https://github.com/zz85\\r\\n * @author miningold / https://github.com/miningold\\r\\n * @author jonobr1 / https://github.com/jonobr1\\r\\n *\\r\\n * Modified from the TorusKnotGeometry by @oosmoxiecode\\r\\n *\\r\\n * Creates a tube which extrudes along a 3d spline\\r\\n *\\r\\n * Uses parallel transport frames as described in\\r\\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\\r\\n */\\r\\n\\r\\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'TubeGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tpath: path,\\r\\n\\t\\tsegments: segments,\\r\\n\\t\\tradius: radius,\\r\\n\\t\\tradialSegments: radialSegments,\\r\\n\\t\\tclosed: closed,\\r\\n\\t\\ttaper: taper\\r\\n\\t};\\r\\n\\r\\n\\tsegments = segments || 64;\\r\\n\\tradius = radius || 1;\\r\\n\\tradialSegments = radialSegments || 8;\\r\\n\\tclosed = closed || false;\\r\\n\\ttaper = taper || THREE.TubeGeometry.NoTaper;\\r\\n\\r\\n\\tvar grid = [];\\r\\n\\r\\n\\tvar scope = this,\\r\\n\\r\\n\\t\\ttangent,\\r\\n\\t\\tnormal,\\r\\n\\t\\tbinormal,\\r\\n\\r\\n\\t\\tnumpoints = segments + 1,\\r\\n\\r\\n\\t\\tu, v, r,\\r\\n\\r\\n\\t\\tcx, cy,\\r\\n\\t\\tpos, pos2 = new THREE.Vector3(),\\r\\n\\t\\ti, j,\\r\\n\\t\\tip, jp,\\r\\n\\t\\ta, b, c, d,\\r\\n\\t\\tuva, uvb, uvc, uvd;\\r\\n\\r\\n\\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\\r\\n\\t\\ttangents = frames.tangents,\\r\\n\\t\\tnormals = frames.normals,\\r\\n\\t\\tbinormals = frames.binormals;\\r\\n\\r\\n\\t// proxy internals\\r\\n\\tthis.tangents = tangents;\\r\\n\\tthis.normals = normals;\\r\\n\\tthis.binormals = binormals;\\r\\n\\r\\n\\tfunction vert( x, y, z ) {\\r\\n\\r\\n\\t\\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// construct the grid\\r\\n\\r\\n\\tfor ( i = 0; i < numpoints; i ++ ) {\\r\\n\\r\\n\\t\\tgrid[ i ] = [];\\r\\n\\r\\n\\t\\tu = i / ( numpoints - 1 );\\r\\n\\r\\n\\t\\tpos = path.getPointAt( u );\\r\\n\\r\\n\\t\\ttangent = tangents[ i ];\\r\\n\\t\\tnormal = normals[ i ];\\r\\n\\t\\tbinormal = binormals[ i ];\\r\\n\\r\\n\\t\\tr = radius * taper( u );\\r\\n\\r\\n\\t\\tfor ( j = 0; j < radialSegments; j ++ ) {\\r\\n\\r\\n\\t\\t\\tv = j / radialSegments * 2 * Math.PI;\\r\\n\\r\\n\\t\\t\\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\\r\\n\\t\\t\\tcy = r * Math.sin( v );\\r\\n\\r\\n\\t\\t\\tpos2.copy( pos );\\r\\n\\t\\t\\tpos2.x += cx * normal.x + cy * binormal.x;\\r\\n\\t\\t\\tpos2.y += cx * normal.y + cy * binormal.y;\\r\\n\\t\\t\\tpos2.z += cx * normal.z + cy * binormal.z;\\r\\n\\r\\n\\t\\t\\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// construct the mesh\\r\\n\\r\\n\\tfor ( i = 0; i < segments; i ++ ) {\\r\\n\\r\\n\\t\\tfor ( j = 0; j < radialSegments; j ++ ) {\\r\\n\\r\\n\\t\\t\\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\\r\\n\\t\\t\\tjp = ( j + 1 ) % radialSegments;\\r\\n\\r\\n\\t\\t\\ta = grid[ i ][ j ];\\t\\t// *** NOT NECESSARILY PLANAR ! ***\\r\\n\\t\\t\\tb = grid[ ip ][ j ];\\r\\n\\t\\t\\tc = grid[ ip ][ jp ];\\r\\n\\t\\t\\td = grid[ i ][ jp ];\\r\\n\\r\\n\\t\\t\\tuva = new THREE.Vector2( i / segments, j / radialSegments );\\r\\n\\t\\t\\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\\r\\n\\t\\t\\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\\r\\n\\t\\t\\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\\r\\n\\r\\n\\t\\t\\tthis.faces.push( new THREE.Face3( a, b, d ) );\\r\\n\\t\\t\\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\\r\\n\\r\\n\\t\\t\\tthis.faces.push( new THREE.Face3( b, c, d ) );\\r\\n\\t\\t\\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.computeFaceNormals();\\r\\n\\tthis.computeVertexNormals();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\\r\\n\\r\\nTHREE.TubeGeometry.NoTaper = function ( u ) {\\r\\n\\r\\n\\treturn 1;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\\r\\n\\r\\n\\treturn Math.sin( Math.PI * u );\\r\\n\\r\\n};\\r\\n\\r\\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\\r\\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\\r\\n\\r\\n\\tvar\\tnormal = new THREE.Vector3(),\\r\\n\\r\\n\\t\\ttangents = [],\\r\\n\\t\\tnormals = [],\\r\\n\\t\\tbinormals = [],\\r\\n\\r\\n\\t\\tvec = new THREE.Vector3(),\\r\\n\\t\\tmat = new THREE.Matrix4(),\\r\\n\\r\\n\\t\\tnumpoints = segments + 1,\\r\\n\\t\\ttheta,\\r\\n\\t\\tsmallest,\\r\\n\\r\\n\\t\\ttx, ty, tz,\\r\\n\\t\\ti, u;\\r\\n\\r\\n\\r\\n\\t// expose internals\\r\\n\\tthis.tangents = tangents;\\r\\n\\tthis.normals = normals;\\r\\n\\tthis.binormals = binormals;\\r\\n\\r\\n\\t// compute the tangent vectors for each segment on the path\\r\\n\\r\\n\\tfor ( i = 0; i < numpoints; i ++ ) {\\r\\n\\r\\n\\t\\tu = i / ( numpoints - 1 );\\r\\n\\r\\n\\t\\ttangents[ i ] = path.getTangentAt( u );\\r\\n\\t\\ttangents[ i ].normalize();\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tinitialNormal3();\\r\\n\\r\\n\\t/*\\r\\n\\tfunction initialNormal1(lastBinormal) {\\r\\n\\t\\t// fixed start binormal. Has dangers of 0 vectors\\r\\n\\t\\tnormals[ 0 ] = new THREE.Vector3();\\r\\n\\t\\tbinormals[ 0 ] = new THREE.Vector3();\\r\\n\\t\\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\\r\\n\\t\\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\\r\\n\\t\\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\\r\\n\\t}\\r\\n\\r\\n\\tfunction initialNormal2() {\\r\\n\\r\\n\\t\\t// This uses the Frenet-Serret formula for deriving binormal\\r\\n\\t\\tvar t2 = path.getTangentAt( epsilon );\\r\\n\\r\\n\\t\\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\\r\\n\\t\\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\\r\\n\\r\\n\\t\\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\\r\\n\\t\\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\\r\\n\\r\\n\\t}\\r\\n\\t*/\\r\\n\\r\\n\\tfunction initialNormal3() {\\r\\n\\r\\n\\t\\t// select an initial normal vector perpendicular to the first tangent vector,\\r\\n\\t\\t// and in the direction of the smallest tangent xyz component\\r\\n\\r\\n\\t\\tnormals[ 0 ] = new THREE.Vector3();\\r\\n\\t\\tbinormals[ 0 ] = new THREE.Vector3();\\r\\n\\t\\tsmallest = Number.MAX_VALUE;\\r\\n\\t\\ttx = Math.abs( tangents[ 0 ].x );\\r\\n\\t\\tty = Math.abs( tangents[ 0 ].y );\\r\\n\\t\\ttz = Math.abs( tangents[ 0 ].z );\\r\\n\\r\\n\\t\\tif ( tx <= smallest ) {\\r\\n\\r\\n\\t\\t\\tsmallest = tx;\\r\\n\\t\\t\\tnormal.set( 1, 0, 0 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( ty <= smallest ) {\\r\\n\\r\\n\\t\\t\\tsmallest = ty;\\r\\n\\t\\t\\tnormal.set( 0, 1, 0 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( tz <= smallest ) {\\r\\n\\r\\n\\t\\t\\tnormal.set( 0, 0, 1 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\\r\\n\\r\\n\\t\\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\\r\\n\\t\\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// compute the slowly-varying normal and binormal vectors for each segment on the path\\r\\n\\r\\n\\tfor ( i = 1; i < numpoints; i ++ ) {\\r\\n\\r\\n\\t\\tnormals[ i ] = normals[ i - 1 ].clone();\\r\\n\\r\\n\\t\\tbinormals[ i ] = binormals[ i - 1 ].clone();\\r\\n\\r\\n\\t\\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\\r\\n\\r\\n\\t\\tif ( vec.length() > Number.EPSILON ) {\\r\\n\\r\\n\\t\\t\\tvec.normalize();\\r\\n\\r\\n\\t\\t\\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\\r\\n\\r\\n\\t\\t\\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\\r\\n\\r\\n\\tif ( closed ) {\\r\\n\\r\\n\\t\\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\\r\\n\\t\\ttheta /= ( numpoints - 1 );\\r\\n\\r\\n\\t\\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\\r\\n\\r\\n\\t\\t\\ttheta = - theta;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( i = 1; i < numpoints; i ++ ) {\\r\\n\\r\\n\\t\\t\\t// twist a little...\\r\\n\\t\\t\\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\\r\\n\\t\\t\\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/geometries/PolyhedronGeometry.js\\r\\n\\r\\n/**\\r\\n * @author clockworkgeek / https://github.com/clockworkgeek\\r\\n * @author timothypratley / https://github.com/timothypratley\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n*/\\r\\n\\r\\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'PolyhedronGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tvertices: vertices,\\r\\n\\t\\tindices: indices,\\r\\n\\t\\tradius: radius,\\r\\n\\t\\tdetail: detail\\r\\n\\t};\\r\\n\\r\\n\\tradius = radius || 1;\\r\\n\\tdetail = detail || 0;\\r\\n\\r\\n\\tvar that = this;\\r\\n\\r\\n\\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\\r\\n\\r\\n\\t\\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar p = this.vertices;\\r\\n\\r\\n\\tvar faces = [];\\r\\n\\r\\n\\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\\r\\n\\r\\n\\t\\tvar v1 = p[ indices[ i ] ];\\r\\n\\t\\tvar v2 = p[ indices[ i + 1 ] ];\\r\\n\\t\\tvar v3 = p[ indices[ i + 2 ] ];\\r\\n\\r\\n\\t\\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar centroid = new THREE.Vector3();\\r\\n\\r\\n\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\tsubdivide( faces[ i ], detail );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// Handle case when face straddles the seam\\r\\n\\r\\n\\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\\r\\n\\r\\n\\t\\tvar x0 = uvs[ 0 ].x;\\r\\n\\t\\tvar x1 = uvs[ 1 ].x;\\r\\n\\t\\tvar x2 = uvs[ 2 ].x;\\r\\n\\r\\n\\t\\tvar max = Math.max( x0, x1, x2 );\\r\\n\\t\\tvar min = Math.min( x0, x1, x2 );\\r\\n\\r\\n\\t\\tif ( max > 0.9 && min < 0.1 ) {\\r\\n\\r\\n\\t\\t\\t// 0.9 is somewhat arbitrary\\r\\n\\r\\n\\t\\t\\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\\r\\n\\t\\t\\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\\r\\n\\t\\t\\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// Apply radius\\r\\n\\r\\n\\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\tthis.vertices[ i ].multiplyScalar( radius );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// Merge vertices\\r\\n\\r\\n\\tthis.mergeVertices();\\r\\n\\r\\n\\tthis.computeFaceNormals();\\r\\n\\r\\n\\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\\r\\n\\r\\n\\r\\n\\t// Project vector onto sphere's surface\\r\\n\\r\\n\\tfunction prepare( vector ) {\\r\\n\\r\\n\\t\\tvar vertex = vector.normalize().clone();\\r\\n\\t\\tvertex.index = that.vertices.push( vertex ) - 1;\\r\\n\\r\\n\\t\\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\\r\\n\\r\\n\\t\\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\\r\\n\\t\\tvar v = inclination( vector ) / Math.PI + 0.5;\\r\\n\\t\\tvertex.uv = new THREE.Vector2( u, 1 - v );\\r\\n\\r\\n\\t\\treturn vertex;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// Approximate a curved face with recursively sub-divided triangles.\\r\\n\\r\\n\\tfunction make( v1, v2, v3 ) {\\r\\n\\r\\n\\t\\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\\r\\n\\t\\tthat.faces.push( face );\\r\\n\\r\\n\\t\\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\\r\\n\\r\\n\\t\\tvar azi = azimuth( centroid );\\r\\n\\r\\n\\t\\tthat.faceVertexUvs[ 0 ].push( [\\r\\n\\t\\t\\tcorrectUV( v1.uv, v1, azi ),\\r\\n\\t\\t\\tcorrectUV( v2.uv, v2, azi ),\\r\\n\\t\\t\\tcorrectUV( v3.uv, v3, azi )\\r\\n\\t\\t] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// Analytically subdivide a face to the required detail level.\\r\\n\\r\\n\\tfunction subdivide( face, detail ) {\\r\\n\\r\\n\\t\\tvar cols = Math.pow( 2, detail );\\r\\n\\t\\tvar a = prepare( that.vertices[ face.a ] );\\r\\n\\t\\tvar b = prepare( that.vertices[ face.b ] );\\r\\n\\t\\tvar c = prepare( that.vertices[ face.c ] );\\r\\n\\t\\tvar v = [];\\r\\n\\r\\n\\t\\t// Construct all of the vertices for this subdivision.\\r\\n\\r\\n\\t\\tfor ( var i = 0 ; i <= cols; i ++ ) {\\r\\n\\r\\n\\t\\t\\tv[ i ] = [];\\r\\n\\r\\n\\t\\t\\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\\r\\n\\t\\t\\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\\r\\n\\t\\t\\tvar rows = cols - i;\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0; j <= rows; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( j === 0 && i === cols ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tv[ i ][ j ] = aj;\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Construct all of the faces.\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < cols ; i ++ ) {\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar k = Math.floor( j / 2 );\\r\\n\\r\\n\\t\\t\\t\\tif ( j % 2 === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tmake(\\r\\n\\t\\t\\t\\t\\t\\tv[ i ][ k + 1 ],\\r\\n\\t\\t\\t\\t\\t\\tv[ i + 1 ][ k ],\\r\\n\\t\\t\\t\\t\\t\\tv[ i ][ k ]\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tmake(\\r\\n\\t\\t\\t\\t\\t\\tv[ i ][ k + 1 ],\\r\\n\\t\\t\\t\\t\\t\\tv[ i + 1 ][ k + 1 ],\\r\\n\\t\\t\\t\\t\\t\\tv[ i + 1 ][ k ]\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// Angle around the Y axis, counter-clockwise when looking from above.\\r\\n\\r\\n\\tfunction azimuth( vector ) {\\r\\n\\r\\n\\t\\treturn Math.atan2( vector.z, - vector.x );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// Angle above the XZ plane.\\r\\n\\r\\n\\tfunction inclination( vector ) {\\r\\n\\r\\n\\t\\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// Texture fixing helper. Spheres have some odd behaviours.\\r\\n\\r\\n\\tfunction correctUV( uv, vector, azimuth ) {\\r\\n\\r\\n\\t\\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\\r\\n\\t\\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\\r\\n\\t\\treturn uv.clone();\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\\r\\n\\r\\n// File:src/extras/geometries/DodecahedronGeometry.js\\r\\n\\r\\n/**\\r\\n * @author Abe Pazos / https://hamoid.com\\r\\n */\\r\\n\\r\\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\\r\\n\\r\\n\\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\\r\\n\\tvar r = 1 / t;\\r\\n\\r\\n\\tvar vertices = [\\r\\n\\r\\n\\t\\t// (±1, ±1, ±1)\\r\\n\\t\\t- 1, - 1, - 1,    - 1, - 1,  1,\\r\\n\\t\\t- 1,  1, - 1,    - 1,  1,  1,\\r\\n\\t\\t 1, - 1, - 1,     1, - 1,  1,\\r\\n\\t\\t 1,  1, - 1,     1,  1,  1,\\r\\n\\r\\n\\t\\t// (0, ±1/φ, ±φ)\\r\\n\\t\\t 0, - r, - t,     0, - r,  t,\\r\\n\\t\\t 0,  r, - t,     0,  r,  t,\\r\\n\\r\\n\\t\\t// (±1/φ, ±φ, 0)\\r\\n\\t\\t- r, - t,  0,    - r,  t,  0,\\r\\n\\t\\t r, - t,  0,     r,  t,  0,\\r\\n\\r\\n\\t\\t// (±φ, 0, ±1/φ)\\r\\n\\t\\t- t,  0, - r,     t,  0, - r,\\r\\n\\t\\t- t,  0,  r,     t,  0,  r\\r\\n\\t];\\r\\n\\r\\n\\tvar indices = [\\r\\n\\t\\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\\r\\n\\t\\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\\r\\n\\t\\t17,  4,  8,     17,  8, 10,     17, 10,  6,\\r\\n\\t\\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\\r\\n\\t\\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\\r\\n\\t\\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\\r\\n\\t\\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\\r\\n\\t\\t18,  1,  9,     18,  9, 11,     18, 11,  3,\\r\\n\\t\\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\\r\\n\\t\\t11,  9,  5,     11,  5, 19,     11, 19,  7,\\r\\n\\t\\t19,  5, 14,     19, 14,  4,     19,  4, 17,\\r\\n\\t\\t 1, 12, 14,      1, 14,  5,      1,  5,  9\\r\\n\\t];\\r\\n\\r\\n\\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\\r\\n\\r\\n\\tthis.type = 'DodecahedronGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\tdetail: detail\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\\r\\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\\r\\n\\r\\n// File:src/extras/geometries/IcosahedronGeometry.js\\r\\n\\r\\n/**\\r\\n * @author timothypratley / https://github.com/timothypratley\\r\\n */\\r\\n\\r\\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\\r\\n\\r\\n\\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\\r\\n\\r\\n\\tvar vertices = [\\r\\n\\t\\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\\r\\n\\t\\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\\r\\n\\t\\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\\r\\n\\t];\\r\\n\\r\\n\\tvar indices = [\\r\\n\\t\\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\\r\\n\\t\\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\\r\\n\\t\\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\\r\\n\\t\\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\\r\\n\\t];\\r\\n\\r\\n\\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\\r\\n\\r\\n\\tthis.type = 'IcosahedronGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\tdetail: detail\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\\r\\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\\r\\n\\r\\n// File:src/extras/geometries/OctahedronGeometry.js\\r\\n\\r\\n/**\\r\\n * @author timothypratley / https://github.com/timothypratley\\r\\n */\\r\\n\\r\\nTHREE.OctahedronGeometry = function ( radius, detail ) {\\r\\n\\r\\n\\tvar vertices = [\\r\\n\\t\\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\\r\\n\\t];\\r\\n\\r\\n\\tvar indices = [\\r\\n\\t\\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\\r\\n\\t];\\r\\n\\r\\n\\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\\r\\n\\r\\n\\tthis.type = 'OctahedronGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\tdetail: detail\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\\r\\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\\r\\n\\r\\n// File:src/extras/geometries/TetrahedronGeometry.js\\r\\n\\r\\n/**\\r\\n * @author timothypratley / https://github.com/timothypratley\\r\\n */\\r\\n\\r\\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\\r\\n\\r\\n\\tvar vertices = [\\r\\n\\t\\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\\r\\n\\t];\\r\\n\\r\\n\\tvar indices = [\\r\\n\\t\\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\\r\\n\\t];\\r\\n\\r\\n\\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\\r\\n\\r\\n\\tthis.type = 'TetrahedronGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tradius: radius,\\r\\n\\t\\tdetail: detail\\r\\n\\t};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\\r\\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\\r\\n\\r\\n// File:src/extras/geometries/ParametricGeometry.js\\r\\n\\r\\n/**\\r\\n * @author zz85 / https://github.com/zz85\\r\\n * Parametric Surfaces Geometry\\r\\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\\r\\n *\\r\\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\\r\\n *\\r\\n */\\r\\n\\r\\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\\r\\n\\r\\n\\tTHREE.Geometry.call( this );\\r\\n\\r\\n\\tthis.type = 'ParametricGeometry';\\r\\n\\r\\n\\tthis.parameters = {\\r\\n\\t\\tfunc: func,\\r\\n\\t\\tslices: slices,\\r\\n\\t\\tstacks: stacks\\r\\n\\t};\\r\\n\\r\\n\\tvar verts = this.vertices;\\r\\n\\tvar faces = this.faces;\\r\\n\\tvar uvs = this.faceVertexUvs[ 0 ];\\r\\n\\r\\n\\tvar i, j, p;\\r\\n\\tvar u, v;\\r\\n\\r\\n\\tvar sliceCount = slices + 1;\\r\\n\\r\\n\\tfor ( i = 0; i <= stacks; i ++ ) {\\r\\n\\r\\n\\t\\tv = i / stacks;\\r\\n\\r\\n\\t\\tfor ( j = 0; j <= slices; j ++ ) {\\r\\n\\r\\n\\t\\t\\tu = j / slices;\\r\\n\\r\\n\\t\\t\\tp = func( u, v );\\r\\n\\t\\t\\tverts.push( p );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar a, b, c, d;\\r\\n\\tvar uva, uvb, uvc, uvd;\\r\\n\\r\\n\\tfor ( i = 0; i < stacks; i ++ ) {\\r\\n\\r\\n\\t\\tfor ( j = 0; j < slices; j ++ ) {\\r\\n\\r\\n\\t\\t\\ta = i * sliceCount + j;\\r\\n\\t\\t\\tb = i * sliceCount + j + 1;\\r\\n\\t\\t\\tc = ( i + 1 ) * sliceCount + j + 1;\\r\\n\\t\\t\\td = ( i + 1 ) * sliceCount + j;\\r\\n\\r\\n\\t\\t\\tuva = new THREE.Vector2( j / slices, i / stacks );\\r\\n\\t\\t\\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\\r\\n\\t\\t\\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\\r\\n\\t\\t\\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\\r\\n\\r\\n\\t\\t\\tfaces.push( new THREE.Face3( a, b, d ) );\\r\\n\\t\\t\\tuvs.push( [ uva, uvb, uvd ] );\\r\\n\\r\\n\\t\\t\\tfaces.push( new THREE.Face3( b, c, d ) );\\r\\n\\t\\t\\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// console.log(this);\\r\\n\\r\\n\\t// magic bullet\\r\\n\\t// var diff = this.mergeVertices();\\r\\n\\t// console.log('removed ', diff, ' vertices by merging');\\r\\n\\r\\n\\tthis.computeFaceNormals();\\r\\n\\tthis.computeVertexNormals();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\\r\\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\\r\\n\\r\\n// File:src/extras/geometries/WireframeGeometry.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.WireframeGeometry = function ( geometry ) {\\r\\n\\r\\n\\tTHREE.BufferGeometry.call( this );\\r\\n\\r\\n\\tvar edge = [ 0, 0 ], hash = {};\\r\\n\\r\\n\\tfunction sortFunction( a, b ) {\\r\\n\\r\\n\\t\\treturn a - b;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar keys = [ 'a', 'b', 'c' ];\\r\\n\\r\\n\\tif ( geometry instanceof THREE.Geometry ) {\\r\\n\\r\\n\\t\\tvar vertices = geometry.vertices;\\r\\n\\t\\tvar faces = geometry.faces;\\r\\n\\t\\tvar numEdges = 0;\\r\\n\\r\\n\\t\\t// allocate maximal size\\r\\n\\t\\tvar edges = new Uint32Array( 6 * faces.length );\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar face = faces[ i ];\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0; j < 3; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tedge[ 0 ] = face[ keys[ j ] ];\\r\\n\\t\\t\\t\\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\\r\\n\\t\\t\\t\\tedge.sort( sortFunction );\\r\\n\\r\\n\\t\\t\\t\\tvar key = edge.toString();\\r\\n\\r\\n\\t\\t\\t\\tif ( hash[ key ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tedges[ 2 * numEdges ] = edge[ 0 ];\\r\\n\\t\\t\\t\\t\\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\\r\\n\\t\\t\\t\\t\\thash[ key ] = true;\\r\\n\\t\\t\\t\\t\\tnumEdges ++;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar coords = new Float32Array( numEdges * 2 * 3 );\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0; j < 2; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar vertex = vertices[ edges [ 2 * i + j ] ];\\r\\n\\r\\n\\t\\t\\t\\tvar index = 6 * i + 3 * j;\\r\\n\\t\\t\\t\\tcoords[ index + 0 ] = vertex.x;\\r\\n\\t\\t\\t\\tcoords[ index + 1 ] = vertex.y;\\r\\n\\t\\t\\t\\tcoords[ index + 2 ] = vertex.z;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\\r\\n\\r\\n\\t} else if ( geometry instanceof THREE.BufferGeometry ) {\\r\\n\\r\\n\\t\\tif ( geometry.index !== null ) {\\r\\n\\r\\n\\t\\t\\t// Indexed BufferGeometry\\r\\n\\r\\n\\t\\t\\tvar indices = geometry.index.array;\\r\\n\\t\\t\\tvar vertices = geometry.attributes.position;\\r\\n\\t\\t\\tvar groups = geometry.groups;\\r\\n\\t\\t\\tvar numEdges = 0;\\r\\n\\r\\n\\t\\t\\tif ( groups.length === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tgeometry.addGroup( 0, indices.length );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// allocate maximal size\\r\\n\\t\\t\\tvar edges = new Uint32Array( 2 * indices.length );\\r\\n\\r\\n\\t\\t\\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\\r\\n\\r\\n\\t\\t\\t\\tvar group = groups[ o ];\\r\\n\\r\\n\\t\\t\\t\\tvar start = group.start;\\r\\n\\t\\t\\t\\tvar count = group.count;\\r\\n\\r\\n\\t\\t\\t\\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var j = 0; j < 3; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tedge[ 0 ] = indices[ i + j ];\\r\\n\\t\\t\\t\\t\\t\\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\\r\\n\\t\\t\\t\\t\\t\\tedge.sort( sortFunction );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar key = edge.toString();\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( hash[ key ] === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tedges[ 2 * numEdges ] = edge[ 0 ];\\r\\n\\t\\t\\t\\t\\t\\t\\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\\r\\n\\t\\t\\t\\t\\t\\t\\thash[ key ] = true;\\r\\n\\t\\t\\t\\t\\t\\t\\tnumEdges ++;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar coords = new Float32Array( numEdges * 2 * 3 );\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 0; j < 2; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar index = 6 * i + 3 * j;\\r\\n\\t\\t\\t\\t\\tvar index2 = edges[ 2 * i + j ];\\r\\n\\r\\n\\t\\t\\t\\t\\tcoords[ index + 0 ] = vertices.getX( index2 );\\r\\n\\t\\t\\t\\t\\tcoords[ index + 1 ] = vertices.getY( index2 );\\r\\n\\t\\t\\t\\t\\tcoords[ index + 2 ] = vertices.getZ( index2 );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// non-indexed BufferGeometry\\r\\n\\r\\n\\t\\t\\tvar vertices = geometry.attributes.position.array;\\r\\n\\t\\t\\tvar numEdges = vertices.length / 3;\\r\\n\\t\\t\\tvar numTris = numEdges / 3;\\r\\n\\r\\n\\t\\t\\tvar coords = new Float32Array( numEdges * 2 * 3 );\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 0; j < 3; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar index = 18 * i + 6 * j;\\r\\n\\r\\n\\t\\t\\t\\t\\tvar index1 = 9 * i + 3 * j;\\r\\n\\t\\t\\t\\t\\tcoords[ index + 0 ] = vertices[ index1 ];\\r\\n\\t\\t\\t\\t\\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\\r\\n\\t\\t\\t\\t\\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\\r\\n\\r\\n\\t\\t\\t\\t\\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\\r\\n\\t\\t\\t\\t\\tcoords[ index + 3 ] = vertices[ index2 ];\\r\\n\\t\\t\\t\\t\\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\\r\\n\\t\\t\\t\\t\\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\r\\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\\r\\n\\r\\n// File:src/extras/helpers/AxisHelper.js\\r\\n\\r\\n/**\\r\\n * @author sroucheray / http://sroucheray.org/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.AxisHelper = function ( size ) {\\r\\n\\r\\n\\tsize = size || 1;\\r\\n\\r\\n\\tvar vertices = new Float32Array( [\\r\\n\\t\\t0, 0, 0,  size, 0, 0,\\r\\n\\t\\t0, 0, 0,  0, size, 0,\\r\\n\\t\\t0, 0, 0,  0, 0, size\\r\\n\\t] );\\r\\n\\r\\n\\tvar colors = new Float32Array( [\\r\\n\\t\\t1, 0, 0,  1, 0.6, 0,\\r\\n\\t\\t0, 1, 0,  0.6, 1, 0,\\r\\n\\t\\t0, 0, 1,  0, 0.6, 1\\r\\n\\t] );\\r\\n\\r\\n\\tvar geometry = new THREE.BufferGeometry();\\r\\n\\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\\r\\n\\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\\r\\n\\r\\n\\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\\r\\n\\r\\n\\tTHREE.LineSegments.call( this, geometry, material );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\\r\\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\\r\\n\\r\\n// File:src/extras/helpers/ArrowHelper.js\\r\\n\\r\\n/**\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n * @author zz85 / http://github.com/zz85\\r\\n * @author bhouston / http://clara.io\\r\\n *\\r\\n * Creates an arrow for visualizing directions\\r\\n *\\r\\n * Parameters:\\r\\n *  dir - Vector3\\r\\n *  origin - Vector3\\r\\n *  length - Number\\r\\n *  color - color in hex value\\r\\n *  headLength - Number\\r\\n *  headWidth - Number\\r\\n */\\r\\n\\r\\nTHREE.ArrowHelper = ( function () {\\r\\n\\r\\n\\tvar lineGeometry = new THREE.BufferGeometry();\\r\\n\\tlineGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\\r\\n\\r\\n\\tvar coneGeometry = new THREE.CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\\r\\n\\tconeGeometry.translate( 0, - 0.5, 0 );\\r\\n\\r\\n\\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\\r\\n\\r\\n\\t\\t// dir is assumed to be normalized\\r\\n\\r\\n\\t\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\t\\tif ( color === undefined ) color = 0xffff00;\\r\\n\\t\\tif ( length === undefined ) length = 1;\\r\\n\\t\\tif ( headLength === undefined ) headLength = 0.2 * length;\\r\\n\\t\\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\\r\\n\\r\\n\\t\\tthis.position.copy( origin );\\r\\n\\r\\n\\t\\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\\r\\n\\t\\tthis.line.matrixAutoUpdate = false;\\r\\n\\t\\tthis.add( this.line );\\r\\n\\r\\n\\t\\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\\r\\n\\t\\tthis.cone.matrixAutoUpdate = false;\\r\\n\\t\\tthis.add( this.cone );\\r\\n\\r\\n\\t\\tthis.setDirection( dir );\\r\\n\\t\\tthis.setLength( length, headLength, headWidth );\\r\\n\\r\\n\\t};\\r\\n\\r\\n}() );\\r\\n\\r\\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\\r\\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\\r\\n\\r\\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\\r\\n\\r\\n\\tvar axis = new THREE.Vector3();\\r\\n\\tvar radians;\\r\\n\\r\\n\\treturn function setDirection( dir ) {\\r\\n\\r\\n\\t\\t// dir is assumed to be normalized\\r\\n\\r\\n\\t\\tif ( dir.y > 0.99999 ) {\\r\\n\\r\\n\\t\\t\\tthis.quaternion.set( 0, 0, 0, 1 );\\r\\n\\r\\n\\t\\t} else if ( dir.y < - 0.99999 ) {\\r\\n\\r\\n\\t\\t\\tthis.quaternion.set( 1, 0, 0, 0 );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\taxis.set( dir.z, 0, - dir.x ).normalize();\\r\\n\\r\\n\\t\\t\\tradians = Math.acos( dir.y );\\r\\n\\r\\n\\t\\t\\tthis.quaternion.setFromAxisAngle( axis, radians );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t};\\r\\n\\r\\n}() );\\r\\n\\r\\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\\r\\n\\r\\n\\tif ( headLength === undefined ) headLength = 0.2 * length;\\r\\n\\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\\r\\n\\r\\n\\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\\r\\n\\tthis.line.updateMatrix();\\r\\n\\r\\n\\tthis.cone.scale.set( headWidth, headLength, headWidth );\\r\\n\\tthis.cone.position.y = length;\\r\\n\\tthis.cone.updateMatrix();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\\r\\n\\r\\n\\tthis.line.material.color.copy( color );\\r\\n\\tthis.cone.material.color.copy( color );\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/helpers/BoxHelper.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.BoxHelper = function ( object, color ) {\\r\\n\\t\\r\\n\\tif ( color === undefined ) color = 0xffff00;\\r\\n\\r\\n\\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\\r\\n\\tvar positions = new Float32Array( 8 * 3 );\\r\\n\\r\\n\\tvar geometry = new THREE.BufferGeometry();\\r\\n\\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\\r\\n\\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\\r\\n\\r\\n\\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ) );\\r\\n\\r\\n\\tif ( object !== undefined ) {\\r\\n\\r\\n\\t\\tthis.update( object );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\\r\\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\\r\\n\\r\\nTHREE.BoxHelper.prototype.update = ( function () {\\r\\n\\r\\n\\tvar box = new THREE.Box3();\\r\\n\\r\\n\\treturn function update( object ) {\\r\\n\\r\\n\\t\\tif ( object instanceof THREE.Box3 ) {\\r\\n\\r\\n\\t\\t\\tbox.copy( object );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tbox.setFromObject( object );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( box.isEmpty() ) return;\\r\\n\\r\\n\\t\\tvar min = box.min;\\r\\n\\t\\tvar max = box.max;\\r\\n\\r\\n\\t\\t/*\\r\\n\\t\\t  5____4\\r\\n\\t\\t1/___0/|\\r\\n\\t\\t| 6__|_7\\r\\n\\t\\t2/___3/\\r\\n\\r\\n\\t\\t0: max.x, max.y, max.z\\r\\n\\t\\t1: min.x, max.y, max.z\\r\\n\\t\\t2: min.x, min.y, max.z\\r\\n\\t\\t3: max.x, min.y, max.z\\r\\n\\t\\t4: max.x, max.y, min.z\\r\\n\\t\\t5: min.x, max.y, min.z\\r\\n\\t\\t6: min.x, min.y, min.z\\r\\n\\t\\t7: max.x, min.y, min.z\\r\\n\\t\\t*/\\r\\n\\r\\n\\t\\tvar position = this.geometry.attributes.position;\\r\\n\\t\\tvar array = position.array;\\r\\n\\r\\n\\t\\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\\r\\n\\t\\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\\r\\n\\t\\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\\r\\n\\t\\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\\r\\n\\t\\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\\r\\n\\t\\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\\r\\n\\t\\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\\r\\n\\t\\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\\r\\n\\r\\n\\t\\tposition.needsUpdate = true;\\r\\n\\r\\n\\t\\tthis.geometry.computeBoundingSphere();\\r\\n\\r\\n\\t};\\r\\n\\r\\n} )();\\r\\n\\r\\n// File:src/extras/helpers/BoundingBoxHelper.js\\r\\n\\r\\n/**\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n */\\r\\n\\r\\n// a helper to show the world-axis-aligned bounding box for an object\\r\\n\\r\\nTHREE.BoundingBoxHelper = function ( object, hex ) {\\r\\n\\r\\n\\tvar color = ( hex !== undefined ) ? hex : 0x888888;\\r\\n\\r\\n\\tthis.object = object;\\r\\n\\r\\n\\tthis.box = new THREE.Box3();\\r\\n\\r\\n\\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\\r\\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\\r\\n\\r\\nTHREE.BoundingBoxHelper.prototype.update = function () {\\r\\n\\r\\n\\tthis.box.setFromObject( this.object );\\r\\n\\r\\n\\tthis.box.size( this.scale );\\r\\n\\r\\n\\tthis.box.center( this.position );\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/helpers/CameraHelper.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n *\\r\\n *\\t- shows frustum, line of sight and up of the camera\\r\\n *\\t- suitable for fast updates\\r\\n * \\t- based on frustum visualization in lightgl.js shadowmap example\\r\\n *\\t\\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\\r\\n */\\r\\n\\r\\nTHREE.CameraHelper = function ( camera ) {\\r\\n\\r\\n\\tvar geometry = new THREE.Geometry();\\r\\n\\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\\r\\n\\r\\n\\tvar pointMap = {};\\r\\n\\r\\n\\t// colors\\r\\n\\r\\n\\tvar hexFrustum = 0xffaa00;\\r\\n\\tvar hexCone = 0xff0000;\\r\\n\\tvar hexUp = 0x00aaff;\\r\\n\\tvar hexTarget = 0xffffff;\\r\\n\\tvar hexCross = 0x333333;\\r\\n\\r\\n\\t// near\\r\\n\\r\\n\\taddLine( \\\"n1\\\", \\\"n2\\\", hexFrustum );\\r\\n\\taddLine( \\\"n2\\\", \\\"n4\\\", hexFrustum );\\r\\n\\taddLine( \\\"n4\\\", \\\"n3\\\", hexFrustum );\\r\\n\\taddLine( \\\"n3\\\", \\\"n1\\\", hexFrustum );\\r\\n\\r\\n\\t// far\\r\\n\\r\\n\\taddLine( \\\"f1\\\", \\\"f2\\\", hexFrustum );\\r\\n\\taddLine( \\\"f2\\\", \\\"f4\\\", hexFrustum );\\r\\n\\taddLine( \\\"f4\\\", \\\"f3\\\", hexFrustum );\\r\\n\\taddLine( \\\"f3\\\", \\\"f1\\\", hexFrustum );\\r\\n\\r\\n\\t// sides\\r\\n\\r\\n\\taddLine( \\\"n1\\\", \\\"f1\\\", hexFrustum );\\r\\n\\taddLine( \\\"n2\\\", \\\"f2\\\", hexFrustum );\\r\\n\\taddLine( \\\"n3\\\", \\\"f3\\\", hexFrustum );\\r\\n\\taddLine( \\\"n4\\\", \\\"f4\\\", hexFrustum );\\r\\n\\r\\n\\t// cone\\r\\n\\r\\n\\taddLine( \\\"p\\\", \\\"n1\\\", hexCone );\\r\\n\\taddLine( \\\"p\\\", \\\"n2\\\", hexCone );\\r\\n\\taddLine( \\\"p\\\", \\\"n3\\\", hexCone );\\r\\n\\taddLine( \\\"p\\\", \\\"n4\\\", hexCone );\\r\\n\\r\\n\\t// up\\r\\n\\r\\n\\taddLine( \\\"u1\\\", \\\"u2\\\", hexUp );\\r\\n\\taddLine( \\\"u2\\\", \\\"u3\\\", hexUp );\\r\\n\\taddLine( \\\"u3\\\", \\\"u1\\\", hexUp );\\r\\n\\r\\n\\t// target\\r\\n\\r\\n\\taddLine( \\\"c\\\", \\\"t\\\", hexTarget );\\r\\n\\taddLine( \\\"p\\\", \\\"c\\\", hexCross );\\r\\n\\r\\n\\t// cross\\r\\n\\r\\n\\taddLine( \\\"cn1\\\", \\\"cn2\\\", hexCross );\\r\\n\\taddLine( \\\"cn3\\\", \\\"cn4\\\", hexCross );\\r\\n\\r\\n\\taddLine( \\\"cf1\\\", \\\"cf2\\\", hexCross );\\r\\n\\taddLine( \\\"cf3\\\", \\\"cf4\\\", hexCross );\\r\\n\\r\\n\\tfunction addLine( a, b, hex ) {\\r\\n\\r\\n\\t\\taddPoint( a, hex );\\r\\n\\t\\taddPoint( b, hex );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction addPoint( id, hex ) {\\r\\n\\r\\n\\t\\tgeometry.vertices.push( new THREE.Vector3() );\\r\\n\\t\\tgeometry.colors.push( new THREE.Color( hex ) );\\r\\n\\r\\n\\t\\tif ( pointMap[ id ] === undefined ) {\\r\\n\\r\\n\\t\\t\\tpointMap[ id ] = [];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tpointMap[ id ].push( geometry.vertices.length - 1 );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tTHREE.LineSegments.call( this, geometry, material );\\r\\n\\r\\n\\tthis.camera = camera;\\r\\n\\tif( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\\r\\n\\r\\n\\tthis.matrix = camera.matrixWorld;\\r\\n\\tthis.matrixAutoUpdate = false;\\r\\n\\r\\n\\tthis.pointMap = pointMap;\\r\\n\\r\\n\\tthis.update();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\\r\\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\\r\\n\\r\\nTHREE.CameraHelper.prototype.update = function () {\\r\\n\\r\\n\\tvar geometry, pointMap;\\r\\n\\r\\n\\tvar vector = new THREE.Vector3();\\r\\n\\tvar camera = new THREE.Camera();\\r\\n\\r\\n\\tfunction setPoint( point, x, y, z ) {\\r\\n\\r\\n\\t\\tvector.set( x, y, z ).unproject( camera );\\r\\n\\r\\n\\t\\tvar points = pointMap[ point ];\\r\\n\\r\\n\\t\\tif ( points !== undefined ) {\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tgeometry.vertices[ points[ i ] ].copy( vector );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn function update() {\\r\\n\\r\\n\\t\\tgeometry = this.geometry;\\r\\n\\t\\tpointMap = this.pointMap;\\r\\n\\r\\n\\t\\tvar w = 1, h = 1;\\r\\n\\r\\n\\t\\t// we need just camera projection matrix\\r\\n\\t\\t// world matrix must be identity\\r\\n\\r\\n\\t\\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\\r\\n\\r\\n\\t\\t// center / target\\r\\n\\r\\n\\t\\tsetPoint( \\\"c\\\", 0, 0, - 1 );\\r\\n\\t\\tsetPoint( \\\"t\\\", 0, 0,  1 );\\r\\n\\r\\n\\t\\t// near\\r\\n\\r\\n\\t\\tsetPoint( \\\"n1\\\", - w, - h, - 1 );\\r\\n\\t\\tsetPoint( \\\"n2\\\",   w, - h, - 1 );\\r\\n\\t\\tsetPoint( \\\"n3\\\", - w,   h, - 1 );\\r\\n\\t\\tsetPoint( \\\"n4\\\",   w,   h, - 1 );\\r\\n\\r\\n\\t\\t// far\\r\\n\\r\\n\\t\\tsetPoint( \\\"f1\\\", - w, - h, 1 );\\r\\n\\t\\tsetPoint( \\\"f2\\\",   w, - h, 1 );\\r\\n\\t\\tsetPoint( \\\"f3\\\", - w,   h, 1 );\\r\\n\\t\\tsetPoint( \\\"f4\\\",   w,   h, 1 );\\r\\n\\r\\n\\t\\t// up\\r\\n\\r\\n\\t\\tsetPoint( \\\"u1\\\",   w * 0.7, h * 1.1, - 1 );\\r\\n\\t\\tsetPoint( \\\"u2\\\", - w * 0.7, h * 1.1, - 1 );\\r\\n\\t\\tsetPoint( \\\"u3\\\",         0, h * 2,   - 1 );\\r\\n\\r\\n\\t\\t// cross\\r\\n\\r\\n\\t\\tsetPoint( \\\"cf1\\\", - w,   0, 1 );\\r\\n\\t\\tsetPoint( \\\"cf2\\\",   w,   0, 1 );\\r\\n\\t\\tsetPoint( \\\"cf3\\\",   0, - h, 1 );\\r\\n\\t\\tsetPoint( \\\"cf4\\\",   0,   h, 1 );\\r\\n\\r\\n\\t\\tsetPoint( \\\"cn1\\\", - w,   0, - 1 );\\r\\n\\t\\tsetPoint( \\\"cn2\\\",   w,   0, - 1 );\\r\\n\\t\\tsetPoint( \\\"cn3\\\",   0, - h, - 1 );\\r\\n\\t\\tsetPoint( \\\"cn4\\\",   0,   h, - 1 );\\r\\n\\r\\n\\t\\tgeometry.verticesNeedUpdate = true;\\r\\n\\r\\n\\t};\\r\\n\\r\\n}();\\r\\n\\r\\n// File:src/extras/helpers/DirectionalLightHelper.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n */\\r\\n\\r\\nTHREE.DirectionalLightHelper = function ( light, size ) {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.light = light;\\r\\n\\tthis.light.updateMatrixWorld();\\r\\n\\r\\n\\tthis.matrix = light.matrixWorld;\\r\\n\\tthis.matrixAutoUpdate = false;\\r\\n\\r\\n\\tif ( size === undefined ) size = 1;\\r\\n\\r\\n\\tvar geometry = new THREE.BufferGeometry();\\r\\n\\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [\\r\\n\\t\\t- size,   size, 0,\\r\\n\\t\\t  size,   size, 0,\\r\\n\\t\\t  size, - size, 0,\\r\\n\\t\\t- size, - size, 0,\\r\\n\\t\\t- size,   size, 0\\r\\n\\t], 3 ) );\\r\\n\\r\\n\\tvar material = new THREE.LineBasicMaterial( { fog: false } );\\r\\n\\r\\n\\tthis.add( new THREE.Line( geometry, material ) );\\r\\n\\r\\n\\tgeometry = new THREE.BufferGeometry();\\r\\n\\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\\r\\n\\r\\n\\tthis.add( new THREE.Line( geometry, material ));\\r\\n\\r\\n\\tthis.update();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\\r\\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\\r\\n\\r\\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\\r\\n\\r\\n\\tvar lightPlane = this.children[ 0 ];\\r\\n\\tvar targetLine = this.children[ 1 ];\\r\\n\\r\\n\\tlightPlane.geometry.dispose();\\r\\n\\tlightPlane.material.dispose();\\r\\n\\ttargetLine.geometry.dispose();\\r\\n\\ttargetLine.material.dispose();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.DirectionalLightHelper.prototype.update = function () {\\r\\n\\r\\n\\tvar v1 = new THREE.Vector3();\\r\\n\\tvar v2 = new THREE.Vector3();\\r\\n\\tvar v3 = new THREE.Vector3();\\r\\n\\r\\n\\treturn function update() {\\r\\n\\r\\n\\t\\tv1.setFromMatrixPosition( this.light.matrixWorld );\\r\\n\\t\\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\\r\\n\\t\\tv3.subVectors( v2, v1 );\\r\\n\\r\\n\\t\\tvar lightPlane = this.children[ 0 ];\\r\\n\\t\\tvar targetLine = this.children[ 1 ];\\r\\n\\r\\n\\t\\tlightPlane.lookAt( v3 );\\r\\n\\t\\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\\r\\n\\r\\n\\t\\ttargetLine.lookAt( v3 );\\r\\n\\t\\ttargetLine.scale.z = v3.length();\\r\\n\\r\\n\\t};\\r\\n\\r\\n}();\\r\\n\\r\\n// File:src/extras/helpers/EdgesHelper.js\\r\\n\\r\\n/**\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n * @param object THREE.Mesh whose geometry will be used\\r\\n * @param hex line color\\r\\n * @param thresholdAngle the minimum angle (in degrees),\\r\\n * between the face normals of adjacent faces,\\r\\n * that is required to render an edge. A value of 10 means\\r\\n * an edge is only rendered if the angle is at least 10 degrees.\\r\\n */\\r\\n\\r\\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\\r\\n\\r\\n\\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\\r\\n\\r\\n\\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\\r\\n\\r\\n\\tthis.matrix = object.matrixWorld;\\r\\n\\tthis.matrixAutoUpdate = false;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\\r\\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\\r\\n\\r\\n// File:src/extras/helpers/FaceNormalsHelper.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n*/\\r\\n\\r\\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\\r\\n\\r\\n\\t// FaceNormalsHelper only supports THREE.Geometry\\r\\n\\r\\n\\tthis.object = object;\\r\\n\\r\\n\\tthis.size = ( size !== undefined ) ? size : 1;\\r\\n\\r\\n\\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\\r\\n\\r\\n\\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tvar nNormals = 0;\\r\\n\\r\\n\\tvar objGeometry = this.object.geometry;\\r\\n\\r\\n\\tif ( objGeometry instanceof THREE.Geometry ) {\\r\\n\\r\\n\\t\\tnNormals = objGeometry.faces.length;\\r\\n\\r\\n\\t} else {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tvar geometry = new THREE.BufferGeometry();\\r\\n\\r\\n\\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\\r\\n\\r\\n\\tgeometry.addAttribute( 'position', positions );\\r\\n\\r\\n\\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tthis.matrixAutoUpdate = false;\\r\\n\\tthis.update();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\\r\\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\\r\\n\\r\\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\\r\\n\\r\\n\\tvar v1 = new THREE.Vector3();\\r\\n\\tvar v2 = new THREE.Vector3();\\r\\n\\tvar normalMatrix = new THREE.Matrix3();\\r\\n\\r\\n\\treturn function update() {\\r\\n\\r\\n\\t\\tthis.object.updateMatrixWorld( true );\\r\\n\\r\\n\\t\\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\\r\\n\\r\\n\\t\\tvar matrixWorld = this.object.matrixWorld;\\r\\n\\r\\n\\t\\tvar position = this.geometry.attributes.position;\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tvar objGeometry = this.object.geometry;\\r\\n\\r\\n\\t\\tvar vertices = objGeometry.vertices;\\r\\n\\r\\n\\t\\tvar faces = objGeometry.faces;\\r\\n\\r\\n\\t\\tvar idx = 0;\\r\\n\\r\\n\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar face = faces[ i ];\\r\\n\\r\\n\\t\\t\\tvar normal = face.normal;\\r\\n\\r\\n\\t\\t\\tv1.copy( vertices[ face.a ] )\\r\\n\\t\\t\\t\\t.add( vertices[ face.b ] )\\r\\n\\t\\t\\t\\t.add( vertices[ face.c ] )\\r\\n\\t\\t\\t\\t.divideScalar( 3 )\\r\\n\\t\\t\\t\\t.applyMatrix4( matrixWorld );\\r\\n\\r\\n\\t\\t\\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\\r\\n\\r\\n\\t\\t\\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\\r\\n\\r\\n\\t\\t\\tidx = idx + 1;\\r\\n\\r\\n\\t\\t\\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\\r\\n\\r\\n\\t\\t\\tidx = idx + 1;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tposition.needsUpdate = true;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t};\\r\\n\\r\\n}() );\\r\\n\\r\\n// File:src/extras/helpers/GridHelper.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.GridHelper = function ( size, step, color1, color2 ) {\\r\\n\\r\\n\\tcolor1 = new THREE.Color( color1 !== undefined ? color1 : 0x444444 );\\r\\n\\tcolor2 = new THREE.Color( color2 !== undefined ? color2 : 0x888888 );\\r\\n\\r\\n\\tvar vertices = [];\\r\\n\\tvar colors = [];\\r\\n\\r\\n\\tfor ( var i = - size, j = 0; i <= size; i += step ) {\\r\\n\\r\\n\\t\\tvertices.push( - size, 0, i, size, 0, i );\\r\\n\\t\\tvertices.push( i, 0, - size, i, 0, size );\\r\\n\\r\\n\\t\\tvar color = i === 0 ? color1 : color2;\\r\\n\\r\\n\\t\\tcolor.toArray( colors, j ); j += 3;\\r\\n\\t\\tcolor.toArray( colors, j ); j += 3;\\r\\n\\t\\tcolor.toArray( colors, j ); j += 3;\\r\\n\\t\\tcolor.toArray( colors, j ); j += 3;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar geometry = new THREE.BufferGeometry();\\r\\n\\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( vertices, 3 ) );\\r\\n\\tgeometry.addAttribute( 'color', new THREE.Float32Attribute( colors, 3 ) );\\r\\n\\r\\n\\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\\r\\n\\r\\n\\tTHREE.LineSegments.call( this, geometry, material );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\\r\\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\\r\\n\\r\\nTHREE.GridHelper.prototype.setColors = function () {\\r\\n\\r\\n\\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/helpers/HemisphereLightHelper.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.light = light;\\r\\n\\tthis.light.updateMatrixWorld();\\r\\n\\r\\n\\tthis.matrix = light.matrixWorld;\\r\\n\\tthis.matrixAutoUpdate = false;\\r\\n\\r\\n\\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\\r\\n\\r\\n\\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\\r\\n\\tgeometry.rotateX( - Math.PI / 2 );\\r\\n\\r\\n\\tfor ( var i = 0, il = 8; i < il; i ++ ) {\\r\\n\\r\\n\\t\\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\\r\\n\\r\\n\\tthis.lightSphere = new THREE.Mesh( geometry, material );\\r\\n\\tthis.add( this.lightSphere );\\r\\n\\r\\n\\tthis.update();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\\r\\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\\r\\n\\r\\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\\r\\n\\r\\n\\tthis.lightSphere.geometry.dispose();\\r\\n\\tthis.lightSphere.material.dispose();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.HemisphereLightHelper.prototype.update = function () {\\r\\n\\r\\n\\tvar vector = new THREE.Vector3();\\r\\n\\r\\n\\treturn function update() {\\r\\n\\r\\n\\t\\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\\r\\n\\t\\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\\r\\n\\r\\n\\t\\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\\r\\n\\t\\tthis.lightSphere.geometry.colorsNeedUpdate = true;\\r\\n\\r\\n\\t};\\r\\n\\r\\n}();\\r\\n\\r\\n// File:src/extras/helpers/PointLightHelper.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.PointLightHelper = function ( light, sphereSize ) {\\r\\n\\r\\n\\tthis.light = light;\\r\\n\\tthis.light.updateMatrixWorld();\\r\\n\\r\\n\\tvar geometry = new THREE.SphereBufferGeometry( sphereSize, 4, 2 );\\r\\n\\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\\r\\n\\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\\r\\n\\r\\n\\tTHREE.Mesh.call( this, geometry, material );\\r\\n\\r\\n\\tthis.matrix = this.light.matrixWorld;\\r\\n\\tthis.matrixAutoUpdate = false;\\r\\n\\r\\n\\t/*\\r\\n\\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\\r\\n\\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\\r\\n\\r\\n\\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\\r\\n\\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\\r\\n\\r\\n\\tvar d = light.distance;\\r\\n\\r\\n\\tif ( d === 0.0 ) {\\r\\n\\r\\n\\t\\tthis.lightDistance.visible = false;\\r\\n\\r\\n\\t} else {\\r\\n\\r\\n\\t\\tthis.lightDistance.scale.set( d, d, d );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.add( this.lightDistance );\\r\\n\\t*/\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\\r\\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\\r\\n\\r\\nTHREE.PointLightHelper.prototype.dispose = function () {\\r\\n\\r\\n\\tthis.geometry.dispose();\\r\\n\\tthis.material.dispose();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.PointLightHelper.prototype.update = function () {\\r\\n\\r\\n\\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\\r\\n\\r\\n\\t/*\\r\\n\\tvar d = this.light.distance;\\r\\n\\r\\n\\tif ( d === 0.0 ) {\\r\\n\\r\\n\\t\\tthis.lightDistance.visible = false;\\r\\n\\r\\n\\t} else {\\r\\n\\r\\n\\t\\tthis.lightDistance.visible = true;\\r\\n\\t\\tthis.lightDistance.scale.set( d, d, d );\\r\\n\\r\\n\\t}\\r\\n\\t*/\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/helpers/SkeletonHelper.js\\r\\n\\r\\n/**\\r\\n * @author Sean Griffin / http://twitter.com/sgrif\\r\\n * @author Michael Guerrero / http://realitymeltdown.com\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author ikerr / http://verold.com\\r\\n */\\r\\n\\r\\nTHREE.SkeletonHelper = function ( object ) {\\r\\n\\r\\n\\tthis.bones = this.getBoneList( object );\\r\\n\\r\\n\\tvar geometry = new THREE.Geometry();\\r\\n\\r\\n\\tfor ( var i = 0; i < this.bones.length; i ++ ) {\\r\\n\\r\\n\\t\\tvar bone = this.bones[ i ];\\r\\n\\r\\n\\t\\tif ( bone.parent instanceof THREE.Bone ) {\\r\\n\\r\\n\\t\\t\\tgeometry.vertices.push( new THREE.Vector3() );\\r\\n\\t\\t\\tgeometry.vertices.push( new THREE.Vector3() );\\r\\n\\t\\t\\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\\r\\n\\t\\t\\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tgeometry.dynamic = true;\\r\\n\\r\\n\\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\\r\\n\\r\\n\\tTHREE.LineSegments.call( this, geometry, material );\\r\\n\\r\\n\\tthis.root = object;\\r\\n\\r\\n\\tthis.matrix = object.matrixWorld;\\r\\n\\tthis.matrixAutoUpdate = false;\\r\\n\\r\\n\\tthis.update();\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\\r\\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\\r\\n\\r\\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\\r\\n\\r\\n\\tvar boneList = [];\\r\\n\\r\\n\\tif ( object instanceof THREE.Bone ) {\\r\\n\\r\\n\\t\\tboneList.push( object );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfor ( var i = 0; i < object.children.length; i ++ ) {\\r\\n\\r\\n\\t\\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn boneList;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.SkeletonHelper.prototype.update = function () {\\r\\n\\r\\n\\tvar geometry = this.geometry;\\r\\n\\r\\n\\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\\r\\n\\r\\n\\tvar boneMatrix = new THREE.Matrix4();\\r\\n\\r\\n\\tvar j = 0;\\r\\n\\r\\n\\tfor ( var i = 0; i < this.bones.length; i ++ ) {\\r\\n\\r\\n\\t\\tvar bone = this.bones[ i ];\\r\\n\\r\\n\\t\\tif ( bone.parent instanceof THREE.Bone ) {\\r\\n\\r\\n\\t\\t\\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\\r\\n\\t\\t\\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\\r\\n\\r\\n\\t\\t\\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\\r\\n\\t\\t\\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\\r\\n\\r\\n\\t\\t\\tj += 2;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tgeometry.verticesNeedUpdate = true;\\r\\n\\r\\n\\tgeometry.computeBoundingSphere();\\r\\n\\r\\n};\\r\\n\\r\\n// File:src/extras/helpers/SpotLightHelper.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n*/\\r\\n\\r\\nTHREE.SpotLightHelper = function ( light ) {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.light = light;\\r\\n\\tthis.light.updateMatrixWorld();\\r\\n\\r\\n\\tthis.matrix = light.matrixWorld;\\r\\n\\tthis.matrixAutoUpdate = false;\\r\\n\\r\\n\\tvar geometry = new THREE.BufferGeometry();\\r\\n\\r\\n\\tvar positions = [\\r\\n\\t\\t0, 0, 0,   0,   0,   1,\\r\\n\\t\\t0, 0, 0,   1,   0,   1,\\r\\n\\t\\t0, 0, 0, - 1,   0,   1,\\r\\n\\t\\t0, 0, 0,   0,   1,   1,\\r\\n\\t\\t0, 0, 0,   0, - 1,   1\\r\\n\\t];\\r\\n\\r\\n\\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\\r\\n\\r\\n\\t\\tvar p1 = ( i / l ) * Math.PI * 2;\\r\\n\\t\\tvar p2 = ( j / l ) * Math.PI * 2;\\r\\n\\r\\n\\t\\tpositions.push(\\r\\n\\t\\t\\tMath.cos( p1 ), Math.sin( p1 ), 1,\\r\\n\\t\\t\\tMath.cos( p2 ), Math.sin( p2 ), 1\\r\\n\\t\\t);\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( positions, 3 ) );\\r\\n\\r\\n\\tvar material = new THREE.LineBasicMaterial( { fog: false } );\\r\\n\\r\\n\\tthis.cone = new THREE.LineSegments( geometry, material );\\r\\n\\tthis.add( this.cone );\\r\\n\\r\\n\\tthis.update();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\\r\\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\\r\\n\\r\\nTHREE.SpotLightHelper.prototype.dispose = function () {\\r\\n\\r\\n\\tthis.cone.geometry.dispose();\\r\\n\\tthis.cone.material.dispose();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.SpotLightHelper.prototype.update = function () {\\r\\n\\r\\n\\tvar vector = new THREE.Vector3();\\r\\n\\tvar vector2 = new THREE.Vector3();\\r\\n\\r\\n\\treturn function update() {\\r\\n\\r\\n\\t\\tvar coneLength = this.light.distance ? this.light.distance : 1000;\\r\\n\\t\\tvar coneWidth = coneLength * Math.tan( this.light.angle );\\r\\n\\r\\n\\t\\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\\r\\n\\r\\n\\t\\tvector.setFromMatrixPosition( this.light.matrixWorld );\\r\\n\\t\\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\\r\\n\\r\\n\\t\\tthis.cone.lookAt( vector2.sub( vector ) );\\r\\n\\r\\n\\t\\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\\r\\n\\r\\n\\t};\\r\\n\\r\\n}();\\r\\n\\r\\n// File:src/extras/helpers/VertexNormalsHelper.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n*/\\r\\n\\r\\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\\r\\n\\r\\n\\tthis.object = object;\\r\\n\\r\\n\\tthis.size = ( size !== undefined ) ? size : 1;\\r\\n\\r\\n\\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\\r\\n\\r\\n\\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tvar nNormals = 0;\\r\\n\\r\\n\\tvar objGeometry = this.object.geometry;\\r\\n\\r\\n\\tif ( objGeometry instanceof THREE.Geometry ) {\\r\\n\\r\\n\\t\\tnNormals = objGeometry.faces.length * 3;\\r\\n\\r\\n\\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\\r\\n\\r\\n\\t\\tnNormals = objGeometry.attributes.normal.count;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tvar geometry = new THREE.BufferGeometry();\\r\\n\\r\\n\\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\\r\\n\\r\\n\\tgeometry.addAttribute( 'position', positions );\\r\\n\\r\\n\\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tthis.matrixAutoUpdate = false;\\r\\n\\r\\n\\tthis.update();\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\\r\\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\\r\\n\\r\\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\\r\\n\\r\\n\\tvar v1 = new THREE.Vector3();\\r\\n\\tvar v2 = new THREE.Vector3();\\r\\n\\tvar normalMatrix = new THREE.Matrix3();\\r\\n\\r\\n\\treturn function update() {\\r\\n\\r\\n\\t\\tvar keys = [ 'a', 'b', 'c' ];\\r\\n\\r\\n\\t\\tthis.object.updateMatrixWorld( true );\\r\\n\\r\\n\\t\\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\\r\\n\\r\\n\\t\\tvar matrixWorld = this.object.matrixWorld;\\r\\n\\r\\n\\t\\tvar position = this.geometry.attributes.position;\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tvar objGeometry = this.object.geometry;\\r\\n\\r\\n\\t\\tif ( objGeometry instanceof THREE.Geometry ) {\\r\\n\\r\\n\\t\\t\\tvar vertices = objGeometry.vertices;\\r\\n\\r\\n\\t\\t\\tvar faces = objGeometry.faces;\\r\\n\\r\\n\\t\\t\\tvar idx = 0;\\r\\n\\r\\n\\t\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar face = faces[ i ];\\r\\n\\r\\n\\t\\t\\t\\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar vertex = vertices[ face[ keys[ j ] ] ];\\r\\n\\r\\n\\t\\t\\t\\t\\tvar normal = face.vertexNormals[ j ];\\r\\n\\r\\n\\t\\t\\t\\t\\tv1.copy( vertex ).applyMatrix4( matrixWorld );\\r\\n\\r\\n\\t\\t\\t\\t\\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\\r\\n\\r\\n\\t\\t\\t\\t\\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\\r\\n\\r\\n\\t\\t\\t\\t\\tidx = idx + 1;\\r\\n\\r\\n\\t\\t\\t\\t\\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\\r\\n\\r\\n\\t\\t\\t\\t\\tidx = idx + 1;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\\r\\n\\r\\n\\t\\t\\tvar objPos = objGeometry.attributes.position;\\r\\n\\r\\n\\t\\t\\tvar objNorm = objGeometry.attributes.normal;\\r\\n\\r\\n\\t\\t\\tvar idx = 0;\\r\\n\\r\\n\\t\\t\\t// for simplicity, ignore index and drawcalls, and render every normal\\r\\n\\r\\n\\t\\t\\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\\r\\n\\r\\n\\t\\t\\t\\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\\r\\n\\r\\n\\t\\t\\t\\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\\r\\n\\r\\n\\t\\t\\t\\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\\r\\n\\r\\n\\t\\t\\t\\tidx = idx + 1;\\r\\n\\r\\n\\t\\t\\t\\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\\r\\n\\r\\n\\t\\t\\t\\tidx = idx + 1;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tposition.needsUpdate = true;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t};\\r\\n\\r\\n}() );\\r\\n\\r\\n// File:src/extras/helpers/WireframeHelper.js\\r\\n\\r\\n/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nTHREE.WireframeHelper = function ( object, hex ) {\\r\\n\\r\\n\\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\\r\\n\\r\\n\\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\\r\\n\\r\\n\\tthis.matrix = object.matrixWorld;\\r\\n\\tthis.matrixAutoUpdate = false;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\\r\\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\\r\\n\\r\\n// File:src/extras/objects/ImmediateRenderObject.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.ImmediateRenderObject = function ( material ) {\\r\\n\\r\\n\\tTHREE.Object3D.call( this );\\r\\n\\r\\n\\tthis.material = material;\\r\\n\\tthis.render = function ( renderCallback ) {};\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\\r\\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\\r\\n\\r\\n// File:src/extras/objects/MorphBlendMesh.js\\r\\n\\r\\n/**\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.MorphBlendMesh = function( geometry, material ) {\\r\\n\\r\\n\\tTHREE.Mesh.call( this, geometry, material );\\r\\n\\r\\n\\tthis.animationsMap = {};\\r\\n\\tthis.animationsList = [];\\r\\n\\r\\n\\t// prepare default animation\\r\\n\\t// (all frames played together in 1 second)\\r\\n\\r\\n\\tvar numFrames = this.geometry.morphTargets.length;\\r\\n\\r\\n\\tvar name = \\\"__default\\\";\\r\\n\\r\\n\\tvar startFrame = 0;\\r\\n\\tvar endFrame = numFrames - 1;\\r\\n\\r\\n\\tvar fps = numFrames / 1;\\r\\n\\r\\n\\tthis.createAnimation( name, startFrame, endFrame, fps );\\r\\n\\tthis.setAnimationWeight( name, 1 );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\\r\\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\\r\\n\\r\\n\\tvar animation = {\\r\\n\\r\\n\\t\\tstart: start,\\r\\n\\t\\tend: end,\\r\\n\\r\\n\\t\\tlength: end - start + 1,\\r\\n\\r\\n\\t\\tfps: fps,\\r\\n\\t\\tduration: ( end - start ) / fps,\\r\\n\\r\\n\\t\\tlastFrame: 0,\\r\\n\\t\\tcurrentFrame: 0,\\r\\n\\r\\n\\t\\tactive: false,\\r\\n\\r\\n\\t\\ttime: 0,\\r\\n\\t\\tdirection: 1,\\r\\n\\t\\tweight: 1,\\r\\n\\r\\n\\t\\tdirectionBackwards: false,\\r\\n\\t\\tmirroredLoop: false\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.animationsMap[ name ] = animation;\\r\\n\\tthis.animationsList.push( animation );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\\r\\n\\r\\n\\tvar pattern = /([a-z]+)_?(\\\\d+)/i;\\r\\n\\r\\n\\tvar firstAnimation, frameRanges = {};\\r\\n\\r\\n\\tvar geometry = this.geometry;\\r\\n\\r\\n\\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\tvar morph = geometry.morphTargets[ i ];\\r\\n\\t\\tvar chunks = morph.name.match( pattern );\\r\\n\\r\\n\\t\\tif ( chunks && chunks.length > 1 ) {\\r\\n\\r\\n\\t\\t\\tvar name = chunks[ 1 ];\\r\\n\\r\\n\\t\\t\\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\\r\\n\\r\\n\\t\\t\\tvar range = frameRanges[ name ];\\r\\n\\r\\n\\t\\t\\tif ( i < range.start ) range.start = i;\\r\\n\\t\\t\\tif ( i > range.end ) range.end = i;\\r\\n\\r\\n\\t\\t\\tif ( ! firstAnimation ) firstAnimation = name;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfor ( var name in frameRanges ) {\\r\\n\\r\\n\\t\\tvar range = frameRanges[ name ];\\r\\n\\t\\tthis.createAnimation( name, range.start, range.end, fps );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.firstAnimation = firstAnimation;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\\r\\n\\r\\n\\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n\\tif ( animation ) {\\r\\n\\r\\n\\t\\tanimation.direction = 1;\\r\\n\\t\\tanimation.directionBackwards = false;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\\r\\n\\r\\n\\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n\\tif ( animation ) {\\r\\n\\r\\n\\t\\tanimation.direction = - 1;\\r\\n\\t\\tanimation.directionBackwards = true;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\\r\\n\\r\\n\\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n\\tif ( animation ) {\\r\\n\\r\\n\\t\\tanimation.fps = fps;\\r\\n\\t\\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\\r\\n\\r\\n\\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n\\tif ( animation ) {\\r\\n\\r\\n\\t\\tanimation.duration = duration;\\r\\n\\t\\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\\r\\n\\r\\n\\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n\\tif ( animation ) {\\r\\n\\r\\n\\t\\tanimation.weight = weight;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\\r\\n\\r\\n\\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n\\tif ( animation ) {\\r\\n\\r\\n\\t\\tanimation.time = time;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\\r\\n\\r\\n\\tvar time = 0;\\r\\n\\r\\n\\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n\\tif ( animation ) {\\r\\n\\r\\n\\t\\ttime = animation.time;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn time;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\\r\\n\\r\\n\\tvar duration = - 1;\\r\\n\\r\\n\\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n\\tif ( animation ) {\\r\\n\\r\\n\\t\\tduration = animation.duration;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn duration;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\\r\\n\\r\\n\\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n\\tif ( animation ) {\\r\\n\\r\\n\\t\\tanimation.time = 0;\\r\\n\\t\\tanimation.active = true;\\r\\n\\r\\n\\t} else {\\r\\n\\r\\n\\t\\tconsole.warn( \\\"THREE.MorphBlendMesh: animation[\\\" + name + \\\"] undefined in .playAnimation()\\\" );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\\r\\n\\r\\n\\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n\\tif ( animation ) {\\r\\n\\r\\n\\t\\tanimation.active = false;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\\r\\n\\r\\n\\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\tvar animation = this.animationsList[ i ];\\r\\n\\r\\n\\t\\tif ( ! animation.active ) continue;\\r\\n\\r\\n\\t\\tvar frameTime = animation.duration / animation.length;\\r\\n\\r\\n\\t\\tanimation.time += animation.direction * delta;\\r\\n\\r\\n\\t\\tif ( animation.mirroredLoop ) {\\r\\n\\r\\n\\t\\t\\tif ( animation.time > animation.duration || animation.time < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tanimation.direction *= - 1;\\r\\n\\r\\n\\t\\t\\t\\tif ( animation.time > animation.duration ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tanimation.time = animation.duration;\\r\\n\\t\\t\\t\\t\\tanimation.directionBackwards = true;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( animation.time < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tanimation.time = 0;\\r\\n\\t\\t\\t\\t\\tanimation.directionBackwards = false;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tanimation.time = animation.time % animation.duration;\\r\\n\\r\\n\\t\\t\\tif ( animation.time < 0 ) animation.time += animation.duration;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\\r\\n\\t\\tvar weight = animation.weight;\\r\\n\\r\\n\\t\\tif ( keyframe !== animation.currentFrame ) {\\r\\n\\r\\n\\t\\t\\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\\r\\n\\t\\t\\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\\r\\n\\r\\n\\t\\t\\tthis.morphTargetInfluences[ keyframe ] = 0;\\r\\n\\r\\n\\t\\t\\tanimation.lastFrame = animation.currentFrame;\\r\\n\\t\\t\\tanimation.currentFrame = keyframe;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar mix = ( animation.time % frameTime ) / frameTime;\\r\\n\\r\\n\\t\\tif ( animation.directionBackwards ) mix = 1 - mix;\\r\\n\\r\\n\\t\\tif ( animation.currentFrame !== animation.lastFrame ) {\\r\\n\\r\\n\\t\\t\\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\\r\\n\\t\\t\\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\""
		},
		{
			"name": "EditorControls.js",
			"source": "\"/**\\r\\n * @author qiao / https://github.com/qiao\\r\\n * @author mrdoob / http://mrdoob.com\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n */\\r\\n\\r\\nTHREE.EditorControls = function ( object, domElement ) {\\r\\n\\r\\n\\tdomElement = ( domElement !== undefined ) ? domElement : document;\\r\\n\\r\\n\\t// API\\r\\n\\r\\n\\tthis.enabled = true;\\r\\n\\tthis.center = new THREE.Vector3();\\r\\n\\r\\n\\t// internals\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\tvar vector = new THREE.Vector3();\\r\\n\\r\\n\\tvar STATE = { NONE: - 1, ROTATE: 0, ZOOM: 1, PAN: 2 };\\r\\n\\tvar state = STATE.NONE;\\r\\n\\r\\n\\tvar center = this.center;\\r\\n\\tvar normalMatrix = new THREE.Matrix3();\\r\\n\\tvar pointer = new THREE.Vector2();\\r\\n\\tvar pointerOld = new THREE.Vector2();\\r\\n\\tvar spherical = new THREE.Spherical();\\r\\n\\r\\n\\t// events\\r\\n\\r\\n\\tvar changeEvent = { type: 'change' };\\r\\n\\r\\n\\tthis.focus = function ( target, frame ) {\\r\\n\\r\\n\\t\\tvar scale = new THREE.Vector3();\\r\\n\\t\\ttarget.matrixWorld.decompose( center, new THREE.Quaternion(), scale );\\r\\n\\r\\n\\t\\tif ( frame && target.geometry ) {\\r\\n\\r\\n\\t\\t\\tscale = ( scale.x + scale.y + scale.z ) / 3;\\r\\n\\t\\t\\tcenter.add( target.geometry.boundingSphere.center.clone().multiplyScalar( scale ) );\\r\\n\\t\\t\\tvar radius = target.geometry.boundingSphere.radius * ( scale );\\r\\n\\t\\t\\tvar pos = object.position.clone().sub( center ).normalize().multiplyScalar( radius * 2 );\\r\\n\\t\\t\\tobject.position.copy( center ).add( pos );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tobject.lookAt( center );\\r\\n\\r\\n\\t\\tscope.dispatchEvent( changeEvent );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.pan = function ( delta ) {\\r\\n\\r\\n\\t\\tvar distance = object.position.distanceTo( center );\\r\\n\\r\\n\\t\\tdelta.multiplyScalar( distance * 0.001 );\\r\\n\\t\\tdelta.applyMatrix3( normalMatrix.getNormalMatrix( object.matrix ) );\\r\\n\\r\\n\\t\\tobject.position.add( delta );\\r\\n\\t\\tcenter.add( delta );\\r\\n\\r\\n\\t\\tscope.dispatchEvent( changeEvent );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.zoom = function ( delta ) {\\r\\n\\r\\n\\t\\tvar distance = object.position.distanceTo( center );\\r\\n\\r\\n\\t\\tdelta.multiplyScalar( distance * 0.001 );\\r\\n\\r\\n\\t\\tif ( delta.length() > distance ) return;\\r\\n\\r\\n\\t\\tdelta.applyMatrix3( normalMatrix.getNormalMatrix( object.matrix ) );\\r\\n\\r\\n\\t\\tobject.position.add( delta );\\r\\n\\r\\n\\t\\tscope.dispatchEvent( changeEvent );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.rotate = function ( delta ) {\\r\\n\\r\\n\\t\\tvector.copy( object.position ).sub( center );\\r\\n\\r\\n\\t\\tspherical.setFromVector3( vector );\\r\\n\\r\\n\\t\\tspherical.theta += delta.x;\\r\\n\\t\\tspherical.phi += delta.y;\\r\\n\\r\\n\\t\\tspherical.makeSafe();\\r\\n\\r\\n\\t\\tvector.setFromSpherical( spherical );\\r\\n\\r\\n\\t\\tobject.position.copy( center ).add( vector );\\r\\n\\r\\n\\t\\tobject.lookAt( center );\\r\\n\\r\\n\\t\\tscope.dispatchEvent( changeEvent );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// mouse\\r\\n\\r\\n\\tfunction onMouseDown( event ) {\\r\\n\\r\\n\\t\\tif ( scope.enabled === false ) return;\\r\\n\\r\\n\\t\\tif ( event.button === 0 ) {\\r\\n\\r\\n\\t\\t\\tstate = STATE.ROTATE;\\r\\n\\r\\n\\t\\t} else if ( event.button === 1 ) {\\r\\n\\r\\n\\t\\t\\tstate = STATE.ZOOM;\\r\\n\\r\\n\\t\\t} else if ( event.button === 2 ) {\\r\\n\\r\\n\\t\\t\\tstate = STATE.PAN;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tpointerOld.set( event.clientX, event.clientY );\\r\\n\\r\\n\\t\\tdomElement.addEventListener( 'mousemove', onMouseMove, false );\\r\\n\\t\\tdomElement.addEventListener( 'mouseup', onMouseUp, false );\\r\\n\\t\\tdomElement.addEventListener( 'mouseout', onMouseUp, false );\\r\\n\\t\\tdomElement.addEventListener( 'dblclick', onMouseUp, false );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onMouseMove( event ) {\\r\\n\\r\\n\\t\\tif ( scope.enabled === false ) return;\\r\\n\\r\\n\\t\\tpointer.set( event.clientX, event.clientY );\\r\\n\\r\\n\\t\\tvar movementX = pointer.x - pointerOld.x;\\r\\n\\t\\tvar movementY = pointer.y - pointerOld.y;\\r\\n\\r\\n\\t\\tif ( state === STATE.ROTATE ) {\\r\\n\\r\\n\\t\\t\\tscope.rotate( new THREE.Vector3( - movementX * 0.005, - movementY * 0.005, 0 ) );\\r\\n\\r\\n\\t\\t} else if ( state === STATE.ZOOM ) {\\r\\n\\r\\n\\t\\t\\tscope.zoom( new THREE.Vector3( 0, 0, movementY ) );\\r\\n\\r\\n\\t\\t} else if ( state === STATE.PAN ) {\\r\\n\\r\\n\\t\\t\\tscope.pan( new THREE.Vector3( - movementX, movementY, 0 ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tpointerOld.set( event.clientX, event.clientY );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onMouseUp( event ) {\\r\\n\\r\\n\\t\\tdomElement.removeEventListener( 'mousemove', onMouseMove, false );\\r\\n\\t\\tdomElement.removeEventListener( 'mouseup', onMouseUp, false );\\r\\n\\t\\tdomElement.removeEventListener( 'mouseout', onMouseUp, false );\\r\\n\\t\\tdomElement.removeEventListener( 'dblclick', onMouseUp, false );\\r\\n\\r\\n\\t\\tstate = STATE.NONE;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onMouseWheel( event ) {\\r\\n\\r\\n\\t\\tevent.preventDefault();\\r\\n\\r\\n\\t\\t// if ( scope.enabled === false ) return;\\r\\n\\r\\n\\t\\tvar delta = 0;\\r\\n\\r\\n\\t\\tif ( event.wheelDelta ) {\\r\\n\\r\\n\\t\\t\\t// WebKit / Opera / Explorer 9\\r\\n\\r\\n\\t\\t\\tdelta = - event.wheelDelta;\\r\\n\\r\\n\\t\\t} else if ( event.detail ) {\\r\\n\\r\\n\\t\\t\\t// Firefox\\r\\n\\r\\n\\t\\t\\tdelta = event.detail * 10;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tscope.zoom( new THREE.Vector3( 0, 0, delta ) );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction contextmenu( event ) {\\r\\n\\r\\n\\t\\tevent.preventDefault();\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.dispose = function() {\\r\\n\\r\\n\\t\\tdomElement.removeEventListener( 'contextmenu', contextmenu, false );\\r\\n\\t\\tdomElement.removeEventListener( 'mousedown', onMouseDown, false );\\r\\n\\t\\tdomElement.removeEventListener( 'mousewheel', onMouseWheel, false );\\r\\n\\t\\tdomElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\\r\\n\\r\\n\\t\\tdomElement.removeEventListener( 'mousemove', onMouseMove, false );\\r\\n\\t\\tdomElement.removeEventListener( 'mouseup', onMouseUp, false );\\r\\n\\t\\tdomElement.removeEventListener( 'mouseout', onMouseUp, false );\\r\\n\\t\\tdomElement.removeEventListener( 'dblclick', onMouseUp, false );\\r\\n\\r\\n\\t\\tdomElement.removeEventListener( 'touchstart', touchStart, false );\\r\\n\\t\\tdomElement.removeEventListener( 'touchmove', touchMove, false );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tdomElement.addEventListener( 'contextmenu', contextmenu, false );\\r\\n\\tdomElement.addEventListener( 'mousedown', onMouseDown, false );\\r\\n\\tdomElement.addEventListener( 'mousewheel', onMouseWheel, false );\\r\\n\\tdomElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\\r\\n\\r\\n\\t// touch\\r\\n\\r\\n\\tvar touch = new THREE.Vector3();\\r\\n\\r\\n\\tvar touches = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\\r\\n\\tvar prevTouches = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\\r\\n\\r\\n\\tvar prevDistance = null;\\r\\n\\r\\n\\tfunction touchStart( event ) {\\r\\n\\r\\n\\t\\tif ( scope.enabled === false ) return;\\r\\n\\r\\n\\t\\tswitch ( event.touches.length ) {\\r\\n\\r\\n\\t\\t\\tcase 1:\\r\\n\\t\\t\\t\\ttouches[ 0 ].set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY, 0 );\\r\\n\\t\\t\\t\\ttouches[ 1 ].set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY, 0 );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 2:\\r\\n\\t\\t\\t\\ttouches[ 0 ].set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY, 0 );\\r\\n\\t\\t\\t\\ttouches[ 1 ].set( event.touches[ 1 ].pageX, event.touches[ 1 ].pageY, 0 );\\r\\n\\t\\t\\t\\tprevDistance = touches[ 0 ].distanceTo( touches[ 1 ] );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tprevTouches[ 0 ].copy( touches[ 0 ] );\\r\\n\\t\\tprevTouches[ 1 ].copy( touches[ 1 ] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\tfunction touchMove( event ) {\\r\\n\\r\\n\\t\\tif ( scope.enabled === false ) return;\\r\\n\\r\\n\\t\\tevent.preventDefault();\\r\\n\\t\\tevent.stopPropagation();\\r\\n\\r\\n\\t\\tfunction getClosest( touch, touches ) {\\r\\n\\r\\n\\t\\t\\tvar closest = touches[ 0 ];\\r\\n\\r\\n\\t\\t\\tfor ( var i in touches ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( closest.distanceTo( touch ) > touches[ i ].distanceTo( touch ) ) closest = touches[ i ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn closest;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tswitch ( event.touches.length ) {\\r\\n\\r\\n\\t\\t\\tcase 1:\\r\\n\\t\\t\\t\\ttouches[ 0 ].set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY, 0 );\\r\\n\\t\\t\\t\\ttouches[ 1 ].set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY, 0 );\\r\\n\\t\\t\\t\\tscope.rotate( touches[ 0 ].sub( getClosest( touches[ 0 ], prevTouches ) ).multiplyScalar( - 0.005 ) );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 2:\\r\\n\\t\\t\\t\\ttouches[ 0 ].set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY, 0 );\\r\\n\\t\\t\\t\\ttouches[ 1 ].set( event.touches[ 1 ].pageX, event.touches[ 1 ].pageY, 0 );\\r\\n\\t\\t\\t\\tdistance = touches[ 0 ].distanceTo( touches[ 1 ] );\\r\\n\\t\\t\\t\\tscope.zoom( new THREE.Vector3( 0, 0, prevDistance - distance ) );\\r\\n\\t\\t\\t\\tprevDistance = distance;\\r\\n\\r\\n\\r\\n\\t\\t\\t\\tvar offset0 = touches[ 0 ].clone().sub( getClosest( touches[ 0 ], prevTouches ) );\\r\\n\\t\\t\\t\\tvar offset1 = touches[ 1 ].clone().sub( getClosest( touches[ 1 ], prevTouches ) );\\r\\n\\t\\t\\t\\toffset0.x = - offset0.x;\\r\\n\\t\\t\\t\\toffset1.x = - offset1.x;\\r\\n\\r\\n\\t\\t\\t\\tscope.pan( offset0.add( offset1 ).multiplyScalar( 0.5 ) );\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tprevTouches[ 0 ].copy( touches[ 0 ] );\\r\\n\\t\\tprevTouches[ 1 ].copy( touches[ 1 ] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tdomElement.addEventListener( 'touchstart', touchStart, false );\\r\\n\\tdomElement.addEventListener( 'touchmove', touchMove, false );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.EditorControls.prototype = Object.create( THREE.EventDispatcher.prototype );\\r\\nTHREE.EditorControls.prototype.constructor = THREE.EditorControls;\\r\\n\""
		},
		{
			"name": "Animation.js",
			"source": "\"/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.Animation = function ( root, data ) {\\r\\n\\r\\n\\tthis.root = root;\\r\\n\\tthis.data = THREE.AnimationHandler.init( data );\\r\\n\\tthis.hierarchy = THREE.AnimationHandler.parse( root );\\r\\n\\r\\n\\tthis.currentTime = 0;\\r\\n\\tthis.timeScale = 1;\\r\\n\\r\\n\\tthis.isPlaying = false;\\r\\n\\tthis.loop = true;\\r\\n\\tthis.weight = 0;\\r\\n\\r\\n\\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Animation.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Animation,\\r\\n\\r\\n\\tkeyTypes:  [ \\\"pos\\\", \\\"rot\\\", \\\"scl\\\" ],\\r\\n\\r\\n\\tplay: function ( startTime, weight ) {\\r\\n\\r\\n\\t\\tthis.currentTime = startTime !== undefined ? startTime : 0;\\r\\n\\t\\tthis.weight = weight !== undefined ? weight : 1;\\r\\n\\r\\n\\t\\tthis.isPlaying = true;\\r\\n\\r\\n\\t\\tthis.reset();\\r\\n\\r\\n\\t\\tTHREE.AnimationHandler.play( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tstop: function() {\\r\\n\\r\\n\\t\\tthis.isPlaying = false;\\r\\n\\r\\n\\t\\tTHREE.AnimationHandler.stop( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\treset: function () {\\r\\n\\r\\n\\t\\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\tvar object = this.hierarchy[ h ];\\r\\n\\r\\n\\t\\t\\tif ( object.animationCache === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tobject.animationCache = {\\r\\n\\t\\t\\t\\t\\tanimations: {},\\r\\n\\t\\t\\t\\t\\tblending: {\\r\\n\\t\\t\\t\\t\\t\\tpositionWeight: 0.0,\\r\\n\\t\\t\\t\\t\\t\\tquaternionWeight: 0.0,\\r\\n\\t\\t\\t\\t\\t\\tscaleWeight: 0.0\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar name = this.data.name;\\r\\n\\t\\t\\tvar animations = object.animationCache.animations;\\r\\n\\t\\t\\tvar animationCache = animations[ name ];\\r\\n\\r\\n\\t\\t\\tif ( animationCache === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tanimationCache = {\\r\\n\\t\\t\\t\\t\\tprevKey: { pos: 0, rot: 0, scl: 0 },\\r\\n\\t\\t\\t\\t\\tnextKey: { pos: 0, rot: 0, scl: 0 },\\r\\n\\t\\t\\t\\t\\toriginalMatrix: object.matrix\\r\\n\\t\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t\\tanimations[ name ] = animationCache;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Get keys to match our current time\\r\\n\\r\\n\\t\\t\\tfor ( var t = 0; t < 3; t ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar type = this.keyTypes[ t ];\\r\\n\\r\\n\\t\\t\\t\\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\\r\\n\\t\\t\\t\\tvar nextKey = this.getNextKeyWith( type, h, 1 );\\r\\n\\r\\n\\t\\t\\t\\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tprevKey = nextKey;\\r\\n\\t\\t\\t\\t\\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tanimationCache.prevKey[ type ] = prevKey;\\r\\n\\t\\t\\t\\tanimationCache.nextKey[ type ] = nextKey;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tresetBlendWeights: function () {\\r\\n\\r\\n\\t\\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\tvar object = this.hierarchy[ h ];\\r\\n\\t\\t\\tvar animationCache = object.animationCache;\\r\\n\\r\\n\\t\\t\\tif ( animationCache !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tvar blending = animationCache.blending;\\r\\n\\r\\n\\t\\t\\t\\tblending.positionWeight = 0.0;\\r\\n\\t\\t\\t\\tblending.quaternionWeight = 0.0;\\r\\n\\t\\t\\t\\tblending.scaleWeight = 0.0;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdate: ( function() {\\r\\n\\r\\n\\t\\tvar points = [];\\r\\n\\t\\tvar target = new THREE.Vector3();\\r\\n\\t\\tvar newVector = new THREE.Vector3();\\r\\n\\t\\tvar newQuat = new THREE.Quaternion();\\r\\n\\r\\n\\t\\t// Catmull-Rom spline\\r\\n\\r\\n\\t\\tvar interpolateCatmullRom = function ( points, scale ) {\\r\\n\\r\\n\\t\\t\\tvar c = [], v3 = [],\\r\\n\\t\\t\\tpoint, intPoint, weight, w2, w3,\\r\\n\\t\\t\\tpa, pb, pc, pd;\\r\\n\\r\\n\\t\\t\\tpoint = ( points.length - 1 ) * scale;\\r\\n\\t\\t\\tintPoint = Math.floor( point );\\r\\n\\t\\t\\tweight = point - intPoint;\\r\\n\\r\\n\\t\\t\\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\\r\\n\\t\\t\\tc[ 1 ] = intPoint;\\r\\n\\t\\t\\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\\r\\n\\t\\t\\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\\r\\n\\r\\n\\t\\t\\tpa = points[ c[ 0 ] ];\\r\\n\\t\\t\\tpb = points[ c[ 1 ] ];\\r\\n\\t\\t\\tpc = points[ c[ 2 ] ];\\r\\n\\t\\t\\tpd = points[ c[ 3 ] ];\\r\\n\\r\\n\\t\\t\\tw2 = weight * weight;\\r\\n\\t\\t\\tw3 = weight * w2;\\r\\n\\r\\n\\t\\t\\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\\r\\n\\t\\t\\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\\r\\n\\t\\t\\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\\r\\n\\r\\n\\t\\t\\treturn v3;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\\r\\n\\r\\n\\t\\t\\tvar v0 = ( p2 - p0 ) * 0.5,\\r\\n\\t\\t\\t\\tv1 = ( p3 - p1 ) * 0.5;\\r\\n\\r\\n\\t\\t\\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\treturn function ( delta ) {\\r\\n\\r\\n\\t\\t\\tif ( this.isPlaying === false ) return;\\r\\n\\r\\n\\t\\t\\tthis.currentTime += delta * this.timeScale;\\r\\n\\r\\n\\t\\t\\tif ( this.weight === 0 )\\r\\n\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t//\\r\\n\\r\\n\\t\\t\\tvar duration = this.data.length;\\r\\n\\r\\n\\t\\t\\tif ( this.currentTime > duration || this.currentTime < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( this.loop ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.currentTime %= duration;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( this.currentTime < 0 )\\r\\n\\t\\t\\t\\t\\t\\tthis.currentTime += duration;\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.reset();\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.stop();\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar object = this.hierarchy[ h ];\\r\\n\\t\\t\\t\\tvar animationCache = object.animationCache.animations[ this.data.name ];\\r\\n\\t\\t\\t\\tvar blending = object.animationCache.blending;\\r\\n\\r\\n\\t\\t\\t\\t// loop through pos/rot/scl\\r\\n\\r\\n\\t\\t\\t\\tfor ( var t = 0; t < 3; t ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// get keys\\r\\n\\r\\n\\t\\t\\t\\t\\tvar type    = this.keyTypes[ t ];\\r\\n\\t\\t\\t\\t\\tvar prevKey = animationCache.prevKey[ type ];\\r\\n\\t\\t\\t\\t\\tvar nextKey = animationCache.nextKey[ type ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\\r\\n\\t\\t\\t\\t\\t\\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\\r\\n\\t\\t\\t\\t\\t\\tnextKey = this.getNextKeyWith( type, h, 1 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tprevKey = nextKey;\\r\\n\\t\\t\\t\\t\\t\\t\\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tanimationCache.prevKey[ type ] = prevKey;\\r\\n\\t\\t\\t\\t\\t\\tanimationCache.nextKey[ type ] = nextKey;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\\r\\n\\r\\n\\t\\t\\t\\t\\tvar prevXYZ = prevKey[ type ];\\r\\n\\t\\t\\t\\t\\tvar nextXYZ = nextKey[ type ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( scale < 0 ) scale = 0;\\r\\n\\t\\t\\t\\t\\tif ( scale > 1 ) scale = 1;\\r\\n\\r\\n\\t\\t\\t\\t\\t// interpolate\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( type === \\\"pos\\\" ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\\r\\n\\t\\t\\t\\t\\t\\t\\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\\r\\n\\t\\t\\t\\t\\t\\t\\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// blend\\r\\n\\t\\t\\t\\t\\t\\t\\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\\r\\n\\t\\t\\t\\t\\t\\t\\tobject.position.lerp( newVector, proportionalWeight );\\r\\n\\t\\t\\t\\t\\t\\t\\tblending.positionWeight += this.weight;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tpoints[ 0 ] = this.getPrevKeyWith( \\\"pos\\\", h, prevKey.index - 1 )[ \\\"pos\\\" ];\\r\\n\\t\\t\\t\\t\\t\\t\\tpoints[ 1 ] = prevXYZ;\\r\\n\\t\\t\\t\\t\\t\\t\\tpoints[ 2 ] = nextXYZ;\\r\\n\\t\\t\\t\\t\\t\\t\\tpoints[ 3 ] = this.getNextKeyWith( \\\"pos\\\", h, nextKey.index + 1 )[ \\\"pos\\\" ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tscale = scale * 0.33 + 0.33;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvar currentPoint = interpolateCatmullRom( points, scale );\\r\\n\\t\\t\\t\\t\\t\\t\\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\\r\\n\\t\\t\\t\\t\\t\\t\\tblending.positionWeight += this.weight;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// blend\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvar vector = object.position;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\\r\\n\\t\\t\\t\\t\\t\\t\\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\\r\\n\\t\\t\\t\\t\\t\\t\\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttarget.sub( vector );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttarget.y = 0;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttarget.normalize();\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tvar angle = Math.atan2( target.x, target.z );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tobject.rotation.set( 0, angle, 0 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( type === \\\"rot\\\" ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Avoid paying the cost of an additional slerp if we don't have to\\r\\n\\t\\t\\t\\t\\t\\tif ( blending.quaternionWeight === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tobject.quaternion.copy( newQuat );\\r\\n\\t\\t\\t\\t\\t\\t\\tblending.quaternionWeight = this.weight;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\\r\\n\\t\\t\\t\\t\\t\\t\\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\\r\\n\\t\\t\\t\\t\\t\\t\\tblending.quaternionWeight += this.weight;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( type === \\\"scl\\\" ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\\r\\n\\t\\t\\t\\t\\t\\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\\r\\n\\t\\t\\t\\t\\t\\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\\r\\n\\t\\t\\t\\t\\t\\tobject.scale.lerp( newVector, proportionalWeight );\\r\\n\\t\\t\\t\\t\\t\\tblending.scaleWeight += this.weight;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )(),\\r\\n\\r\\n\\tgetNextKeyWith: function ( type, h, key ) {\\r\\n\\r\\n\\t\\tvar keys = this.data.hierarchy[ h ].keys;\\r\\n\\r\\n\\t\\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\\r\\n\\t\\t\\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\\r\\n\\r\\n\\t\\t\\tkey = key < keys.length - 1 ? key : keys.length - 1;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tkey = key % keys.length;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( ; key < keys.length; key ++ ) {\\r\\n\\r\\n\\t\\t\\tif ( keys[ key ][ type ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\treturn keys[ key ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.data.hierarchy[ h ].keys[ 0 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetPrevKeyWith: function ( type, h, key ) {\\r\\n\\r\\n\\t\\tvar keys = this.data.hierarchy[ h ].keys;\\r\\n\\r\\n\\t\\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\\r\\n\\t\\t\\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\\r\\n\\r\\n\\t\\t\\tkey = key > 0 ? key : 0;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tkey = key >= 0 ? key : key + keys.length;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\tfor ( ; key >= 0; key -- ) {\\r\\n\\r\\n\\t\\t\\tif ( keys[ key ][ type ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\treturn keys[ key ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\""
		},
		{
			"name": "AnimationHandler.js",
			"source": "\"/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n */\\r\\n\\r\\nTHREE.AnimationHandler = {\\r\\n\\r\\n\\tLINEAR: 0,\\r\\n\\tCATMULLROM: 1,\\r\\n\\tCATMULLROM_FORWARD: 2,\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tadd: function () {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\\r\\n\\r\\n\\t},\\r\\n\\tget: function () {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\\r\\n\\r\\n\\t},\\r\\n\\tremove: function () {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tanimations: [],\\r\\n\\r\\n\\tinit: function ( data ) {\\r\\n\\r\\n\\t\\tif ( data.initialized === true ) return data;\\r\\n\\r\\n\\t\\t// loop through all keys\\r\\n\\r\\n\\t\\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\\r\\n\\r\\n\\t\\t\\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t// remove minus times\\r\\n\\r\\n\\t\\t\\t\\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t data.hierarchy[ h ].keys[ k ].time = 0;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// create quaternions\\r\\n\\r\\n\\t\\t\\t\\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\\r\\n\\t\\t\\t\\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\\r\\n\\t\\t\\t\\t\\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// prepare morph target keys\\r\\n\\r\\n\\t\\t\\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t// get all used\\r\\n\\r\\n\\t\\t\\t\\tvar usedMorphTargets = {};\\r\\n\\r\\n\\t\\t\\t\\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\\r\\n\\t\\t\\t\\t\\t\\tusedMorphTargets[ morphTargetName ] = - 1;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t// set all used on all frames\\r\\n\\r\\n\\t\\t\\t\\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar influences = {};\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var morphTargetName in usedMorphTargets ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tinfluences[ morphTargetName ] = 0;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t\\t// remove all keys that are on the same time\\r\\n\\r\\n\\t\\t\\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tdata.hierarchy[ h ].keys.splice( k, 1 );\\r\\n\\t\\t\\t\\t\\tk --;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t\\t// set index\\r\\n\\r\\n\\t\\t\\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tdata.hierarchy[ h ].keys[ k ].index = k;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tdata.initialized = true;\\r\\n\\r\\n\\t\\treturn data;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparse: function ( root ) {\\r\\n\\r\\n\\t\\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\\r\\n\\r\\n\\t\\t\\thierarchy.push( root );\\r\\n\\r\\n\\t\\t\\tfor ( var c = 0; c < root.children.length; c ++ )\\r\\n\\t\\t\\t\\tparseRecurseHierarchy( root.children[ c ], hierarchy );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// setup hierarchy\\r\\n\\r\\n\\t\\tvar hierarchy = [];\\r\\n\\r\\n\\t\\tif ( root instanceof THREE.SkinnedMesh ) {\\r\\n\\r\\n\\t\\t\\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\\r\\n\\r\\n\\t\\t\\t\\thierarchy.push( root.skeleton.bones[ b ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tparseRecurseHierarchy( root, hierarchy );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn hierarchy;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tplay: function ( animation ) {\\r\\n\\r\\n\\t\\tif ( this.animations.indexOf( animation ) === - 1 ) {\\r\\n\\r\\n\\t\\t\\tthis.animations.push( animation );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tstop: function ( animation ) {\\r\\n\\r\\n\\t\\tvar index = this.animations.indexOf( animation );\\r\\n\\r\\n\\t\\tif ( index !== - 1 ) {\\r\\n\\r\\n\\t\\t\\tthis.animations.splice( index, 1 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdate: function ( deltaTimeMS ) {\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < this.animations.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.animations[ i ].resetBlendWeights();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < this.animations.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.animations[ i ].update( deltaTimeMS );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\""
		},
		{
			"name": "KeyFrameAnimation.js",
			"source": "\"/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author khang duong\\r\\n * @author erik kitson\\r\\n */\\r\\n\\r\\nTHREE.KeyFrameAnimation = function ( data ) {\\r\\n\\r\\n\\tthis.root = data.node;\\r\\n\\tthis.data = THREE.AnimationHandler.init( data );\\r\\n\\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\\r\\n\\tthis.currentTime = 0;\\r\\n\\tthis.timeScale = 0.001;\\r\\n\\tthis.isPlaying = false;\\r\\n\\tthis.isPaused = true;\\r\\n\\tthis.loop = true;\\r\\n\\r\\n\\t// initialize to first keyframes\\r\\n\\r\\n\\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\tvar keys = this.data.hierarchy[ h ].keys,\\r\\n\\t\\t\\tsids = this.data.hierarchy[ h ].sids,\\r\\n\\t\\t\\tobj = this.hierarchy[ h ];\\r\\n\\r\\n\\t\\tif ( keys.length && sids ) {\\r\\n\\r\\n\\t\\t\\tfor ( var s = 0; s < sids.length; s ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar sid = sids[ s ],\\r\\n\\t\\t\\t\\t\\tnext = this.getNextKeyWith( sid, h, 0 );\\r\\n\\r\\n\\t\\t\\t\\tif ( next ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tnext.apply( sid );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tobj.matrixAutoUpdate = false;\\r\\n\\t\\t\\tthis.data.hierarchy[ h ].node.updateMatrix();\\r\\n\\t\\t\\tobj.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.KeyFrameAnimation.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.KeyFrameAnimation,\\r\\n\\r\\n\\tplay: function ( startTime ) {\\r\\n\\r\\n\\t\\tthis.currentTime = startTime !== undefined ? startTime : 0;\\r\\n\\r\\n\\t\\tif ( this.isPlaying === false ) {\\r\\n\\r\\n\\t\\t\\tthis.isPlaying = true;\\r\\n\\r\\n\\t\\t\\t// reset key cache\\r\\n\\r\\n\\t\\t\\tvar h, hl = this.hierarchy.length,\\r\\n\\t\\t\\t\\tobject,\\r\\n\\t\\t\\t\\tnode;\\r\\n\\r\\n\\t\\t\\tfor ( h = 0; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tobject = this.hierarchy[ h ];\\r\\n\\t\\t\\t\\tnode = this.data.hierarchy[ h ];\\r\\n\\r\\n\\t\\t\\t\\tif ( node.animationCache === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tnode.animationCache = {};\\r\\n\\t\\t\\t\\t\\tnode.animationCache.prevKey = null;\\r\\n\\t\\t\\t\\t\\tnode.animationCache.nextKey = null;\\r\\n\\t\\t\\t\\t\\tnode.animationCache.originalMatrix = object.matrix;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tvar keys = this.data.hierarchy[ h ].keys;\\r\\n\\r\\n\\t\\t\\t\\tif ( keys.length > 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tnode.animationCache.prevKey = keys[ 0 ];\\r\\n\\t\\t\\t\\t\\tnode.animationCache.nextKey = keys[ 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\\r\\n\\t\\t\\t\\t\\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.update( 0 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.isPaused = false;\\r\\n\\t},\\r\\n\\r\\n\\tstop: function () {\\r\\n\\r\\n\\t\\tthis.isPlaying = false;\\r\\n\\t\\tthis.isPaused  = false;\\r\\n\\r\\n\\t\\t// reset JIT matrix and remove cache\\r\\n\\r\\n\\t\\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\\r\\n\\r\\n\\t\\t\\tvar obj = this.hierarchy[ h ];\\r\\n\\t\\t\\tvar node = this.data.hierarchy[ h ];\\r\\n\\r\\n\\t\\t\\tif ( node.animationCache !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tvar original = node.animationCache.originalMatrix;\\r\\n\\r\\n\\t\\t\\t\\toriginal.copy( obj.matrix );\\r\\n\\t\\t\\t\\tobj.matrix = original;\\r\\n\\r\\n\\t\\t\\t\\tdelete node.animationCache;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdate: function ( delta ) {\\r\\n\\r\\n\\t\\tif ( this.isPlaying === false ) return;\\r\\n\\r\\n\\t\\tthis.currentTime += delta * this.timeScale;\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tvar duration = this.data.length;\\r\\n\\r\\n\\t\\tif ( this.loop === true && this.currentTime > duration ) {\\r\\n\\r\\n\\t\\t\\tthis.currentTime %= duration;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.currentTime = Math.min( this.currentTime, duration );\\r\\n\\r\\n\\t\\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\tvar object = this.hierarchy[ h ];\\r\\n\\t\\t\\tvar node = this.data.hierarchy[ h ];\\r\\n\\r\\n\\t\\t\\tvar keys = node.keys,\\r\\n\\t\\t\\t\\tanimationCache = node.animationCache;\\r\\n\\r\\n\\r\\n\\t\\t\\tif ( keys.length ) {\\r\\n\\r\\n\\t\\t\\t\\tvar prevKey = animationCache.prevKey;\\r\\n\\t\\t\\t\\tvar nextKey = animationCache.nextKey;\\r\\n\\r\\n\\t\\t\\t\\tif ( nextKey.time <= this.currentTime ) {\\r\\n\\r\\n\\t\\t\\t\\t\\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tprevKey = nextKey;\\r\\n\\t\\t\\t\\t\\t\\tnextKey = keys[ prevKey.index + 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tanimationCache.prevKey = prevKey;\\r\\n\\t\\t\\t\\t\\tanimationCache.nextKey = nextKey;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( nextKey.time >= this.currentTime ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tprevKey.interpolate( nextKey, this.currentTime );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tprevKey.interpolate( nextKey, nextKey.time );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tthis.data.hierarchy[ h ].node.updateMatrix();\\r\\n\\t\\t\\t\\tobject.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetNextKeyWith: function ( sid, h, key ) {\\r\\n\\r\\n\\t\\tvar keys = this.data.hierarchy[ h ].keys;\\r\\n\\t\\tkey = key % keys.length;\\r\\n\\r\\n\\t\\tfor ( ; key < keys.length; key ++ ) {\\r\\n\\r\\n\\t\\t\\tif ( keys[ key ].hasTarget( sid ) ) {\\r\\n\\r\\n\\t\\t\\t\\treturn keys[ key ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn keys[ 0 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetPrevKeyWith: function ( sid, h, key ) {\\r\\n\\r\\n\\t\\tvar keys = this.data.hierarchy[ h ].keys;\\r\\n\\t\\tkey = key >= 0 ? key : key + keys.length;\\r\\n\\r\\n\\t\\tfor ( ; key >= 0; key -- ) {\\r\\n\\r\\n\\t\\t\\tif ( keys[ key ].hasTarget( sid ) ) {\\r\\n\\r\\n\\t\\t\\t\\treturn keys[ key ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn keys[ keys.length - 1 ];\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\""
		},
		{
			"name": "UVsDebug.js",
			"source": "\"/* \\r\\n * @author zz85 / http://github.com/zz85\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n *\\r\\n * tool for \\\"unwrapping\\\" and debugging three.js \\r\\n * geometries UV mapping\\r\\n *\\r\\n * Sample usage:\\r\\n *\\tdocument.body.appendChild( THREE.UVsDebug( new THREE.SphereGeometry( 10, 10, 10, 10 ) );\\r\\n *\\r\\n */\\r\\n \\r\\nTHREE.UVsDebug = function( geometry, size ) {\\r\\n\\r\\n\\t// handles wrapping of uv.x > 1 only\\r\\n    \\r\\n\\tvar abc = 'abc';\\r\\n\\r\\n\\tvar uv, u, ax, ay;\\r\\n\\tvar i, il, j, jl;\\r\\n\\tvar vnum;\\r\\n\\r\\n\\tvar a = new THREE.Vector2();\\r\\n\\tvar b = new THREE.Vector2();\\r\\n\\r\\n\\tvar geo = ( geometry instanceof THREE.BufferGeometry ) ? new THREE.Geometry().fromBufferGeometry( geometry ) : geometry;\\r\\n\\r\\n\\tvar faces = geo.faces;\\r\\n\\tvar uvs = geo.faceVertexUvs[ 0 ];\\r\\n\\r\\n\\tvar canvas = document.createElement( 'canvas' );\\r\\n\\tvar width = size || 1024;   // power of 2 required for wrapping\\r\\n\\tvar height = size || 1024;\\r\\n\\tcanvas.width = width;\\r\\n\\tcanvas.height = height;\\r\\n\\r\\n\\tvar ctx = canvas.getContext( '2d' );\\r\\n\\tctx.lineWidth = 1;\\r\\n\\tctx.strokeStyle = 'rgba( 0, 0, 0, 1.0 )';\\r\\n\\tctx.textAlign = 'center';\\r\\n\\r\\n\\t// paint background white\\r\\n\\r\\n\\tctx.fillStyle = 'rgba( 255, 255, 255, 1.0 )';\\r\\n\\tctx.fillRect( 0, 0, width, height );\\r\\n\\r\\n\\tfor ( i = 0, il = uvs.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\tuv = uvs[ i ];\\r\\n\\r\\n\\t\\t// draw lines\\r\\n\\r\\n\\t\\tctx.beginPath();\\r\\n\\r\\n\\t\\ta.set( 0, 0 );\\r\\n\\r\\n\\t\\tfor ( j = 0, jl = uv.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\tu = uv[ j ];\\r\\n\\r\\n\\t\\t\\ta.x += u.x;\\r\\n\\t\\t\\ta.y += u.y;\\r\\n\\r\\n\\t\\t\\tif ( j == 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tctx.moveTo( u.x * width, ( 1 - u.y ) * height );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tctx.lineTo( u.x * width, ( 1 - u.y ) * height );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tctx.closePath();\\r\\n\\t\\tctx.stroke();\\r\\n\\r\\n\\t\\ta.divideScalar( jl );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn canvas;\\r\\n\\r\\n};\\r\\n\\r\\n//  disable labels.\\r\\n\\r\\n/*\\r\\n\\t\\t// label the face number\\r\\n\\r\\n\\t\\tctx.font = \\\"12pt Arial bold\\\";\\r\\n\\t\\tctx.fillStyle = 'rgba( 0, 0, 0, 1.0 )';\\r\\n\\t\\tctx.fillText( i, a.x * width, ( 1 - a.y ) * height );\\r\\n\\r\\n\\t\\tif ( a.x > 0.95 ) {\\r\\n\\r\\n\\t\\t\\t// wrap x // 0.95 is arbitrary\\r\\n\\r\\n\\t\\t\\tctx.fillText( i, ( a.x % 1 ) * width, ( 1 - a.y ) * height );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tctx.font = \\\"8pt Arial bold\\\";\\r\\n\\t\\tctx.fillStyle = 'rgba( 0, 0, 0, 1.0 )';\\r\\n\\r\\n\\t\\t// label uv edge orders\\r\\n\\r\\n\\t\\tfor ( j = 0, jl = uv.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\tu = uv[ j ];\\r\\n\\t\\t\\tb.addVectors( a, u ).divideScalar( 2 );\\r\\n\\r\\n\\t\\t\\tvnum = faces[ i ][ abc[ j ] ];\\r\\n\\t\\t\\tctx.fillText( abc[ j ] + vnum, b.x * width, ( 1 - b.y ) * height );\\r\\n\\r\\n\\t\\t\\tif ( b.x > 0.95 ) {\\r\\n\\r\\n\\t\\t\\t\\t// wrap x\\r\\n\\r\\n\\t\\t\\t\\tctx.fillText( abc[ j ] + vnum, ( b.x % 1 ) * width, ( 1 - b.y ) * height );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn canvas;\\r\\n\\r\\n};\\r\\n*/\\r\\n\\r\\n\""
		},
		{
			"name": "SubdivisionModifier.js",
			"source": "\"/*\\r\\n *\\t@author zz85 / http://twitter.com/blurspline / http://www.lab4games.net/zz85/blog\\r\\n *\\t@author centerionware / http://www.centerionware.com\\r\\n *\\r\\n *\\tSubdivision Geometry Modifier\\r\\n *\\t\\tusing Loop Subdivision Scheme\\r\\n *\\r\\n *\\tReferences:\\r\\n *\\t\\thttp://graphics.stanford.edu/~mdfisher/subdivision.html\\r\\n *\\t\\thttp://www.holmes3d.net/graphics/subdivision/\\r\\n *\\t\\thttp://www.cs.rutgers.edu/~decarlo/readings/subdiv-sg00c.pdf\\r\\n *\\r\\n *\\tKnown Issues:\\r\\n *\\t\\t- currently doesn't handle \\\"Sharp Edges\\\"\\r\\n */\\r\\n\\r\\nTHREE.SubdivisionModifier = function ( subdivisions ) {\\r\\n\\r\\n\\tthis.subdivisions = ( subdivisions === undefined ) ? 1 : subdivisions;\\r\\n\\r\\n};\\r\\n\\r\\n// Applies the \\\"modify\\\" pattern\\r\\nTHREE.SubdivisionModifier.prototype.modify = function ( geometry ) {\\r\\n\\r\\n\\tvar repeats = this.subdivisions;\\r\\n\\r\\n\\twhile ( repeats -- > 0 ) {\\r\\n\\r\\n\\t\\tthis.smooth( geometry );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tgeometry.computeFaceNormals();\\r\\n\\tgeometry.computeVertexNormals();\\r\\n\\r\\n};\\r\\n\\r\\n( function() {\\r\\n\\r\\n\\t// Some constants\\r\\n\\tvar WARNINGS = ! true; // Set to true for development\\r\\n\\tvar ABC = [ 'a', 'b', 'c' ];\\r\\n\\r\\n\\r\\n\\tfunction getEdge( a, b, map ) {\\r\\n\\r\\n\\t\\tvar vertexIndexA = Math.min( a, b );\\r\\n\\t\\tvar vertexIndexB = Math.max( a, b );\\r\\n\\r\\n\\t\\tvar key = vertexIndexA + \\\"_\\\" + vertexIndexB;\\r\\n\\r\\n\\t\\treturn map[ key ];\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\tfunction processEdge( a, b, vertices, map, face, metaVertices ) {\\r\\n\\r\\n\\t\\tvar vertexIndexA = Math.min( a, b );\\r\\n\\t\\tvar vertexIndexB = Math.max( a, b );\\r\\n\\r\\n\\t\\tvar key = vertexIndexA + \\\"_\\\" + vertexIndexB;\\r\\n\\r\\n\\t\\tvar edge;\\r\\n\\r\\n\\t\\tif ( key in map ) {\\r\\n\\r\\n\\t\\t\\tedge = map[ key ];\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tvar vertexA = vertices[ vertexIndexA ];\\r\\n\\t\\t\\tvar vertexB = vertices[ vertexIndexB ];\\r\\n\\r\\n\\t\\t\\tedge = {\\r\\n\\r\\n\\t\\t\\t\\ta: vertexA, // pointer reference\\r\\n\\t\\t\\t\\tb: vertexB,\\r\\n\\t\\t\\t\\tnewEdge: null,\\r\\n\\t\\t\\t\\t// aIndex: a, // numbered reference\\r\\n\\t\\t\\t\\t// bIndex: b,\\r\\n\\t\\t\\t\\tfaces: [] // pointers to face\\r\\n\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\tmap[ key ] = edge;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tedge.faces.push( face );\\r\\n\\r\\n\\t\\tmetaVertices[ a ].edges.push( edge );\\r\\n\\t\\tmetaVertices[ b ].edges.push( edge );\\r\\n\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction generateLookups( vertices, faces, metaVertices, edges ) {\\r\\n\\r\\n\\t\\tvar i, il, face, edge;\\r\\n\\r\\n\\t\\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tmetaVertices[ i ] = { edges: [] };\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tface = faces[ i ];\\r\\n\\r\\n\\t\\t\\tprocessEdge( face.a, face.b, vertices, edges, face, metaVertices );\\r\\n\\t\\t\\tprocessEdge( face.b, face.c, vertices, edges, face, metaVertices );\\r\\n\\t\\t\\tprocessEdge( face.c, face.a, vertices, edges, face, metaVertices );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction newFace( newFaces, a, b, c ) {\\r\\n\\r\\n\\t\\tnewFaces.push( new THREE.Face3( a, b, c ) );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction midpoint( a, b ) {\\r\\n\\r\\n\\t\\treturn ( Math.abs( b - a ) / 2 ) + Math.min( a, b );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction newUv( newUvs, a, b, c ) {\\r\\n\\r\\n\\t\\tnewUvs.push( [ a.clone(), b.clone(), c.clone() ] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t/////////////////////////////\\r\\n\\r\\n\\t// Performs one iteration of Subdivision\\r\\n\\tTHREE.SubdivisionModifier.prototype.smooth = function ( geometry ) {\\r\\n\\r\\n\\t\\tvar tmp = new THREE.Vector3();\\r\\n\\r\\n\\t\\tvar oldVertices, oldFaces, oldUvs;\\r\\n\\t\\tvar newVertices, newFaces, newUVs = [];\\r\\n\\r\\n\\t\\tvar n, l, i, il, j, k;\\r\\n\\t\\tvar metaVertices, sourceEdges;\\r\\n\\r\\n\\t\\t// new stuff.\\r\\n\\t\\tvar sourceEdges, newEdgeVertices, newSourceVertices;\\r\\n\\r\\n\\t\\toldVertices = geometry.vertices; // { x, y, z}\\r\\n\\t\\toldFaces = geometry.faces; // { a: oldVertex1, b: oldVertex2, c: oldVertex3 }\\r\\n\\t\\toldUvs = geometry.faceVertexUvs[ 0 ];\\r\\n\\r\\n\\t\\tvar hasUvs = oldUvs !== undefined && oldUvs.length > 0;\\r\\n\\r\\n\\t\\t/******************************************************\\r\\n\\t\\t *\\r\\n\\t\\t * Step 0: Preprocess Geometry to Generate edges Lookup\\r\\n\\t\\t *\\r\\n\\t\\t *******************************************************/\\r\\n\\r\\n\\t\\tmetaVertices = new Array( oldVertices.length );\\r\\n\\t\\tsourceEdges = {}; // Edge => { oldVertex1, oldVertex2, faces[]  }\\r\\n\\r\\n\\t\\tgenerateLookups( oldVertices, oldFaces, metaVertices, sourceEdges );\\r\\n\\r\\n\\r\\n\\t\\t/******************************************************\\r\\n\\t\\t *\\r\\n\\t\\t *\\tStep 1.\\r\\n\\t\\t *\\tFor each edge, create a new Edge Vertex,\\r\\n\\t\\t *\\tthen position it.\\r\\n\\t\\t *\\r\\n\\t\\t *******************************************************/\\r\\n\\r\\n\\t\\tnewEdgeVertices = [];\\r\\n\\t\\tvar other, currentEdge, newEdge, face;\\r\\n\\t\\tvar edgeVertexWeight, adjacentVertexWeight, connectedFaces;\\r\\n\\r\\n\\t\\tfor ( i in sourceEdges ) {\\r\\n\\r\\n\\t\\t\\tcurrentEdge = sourceEdges[ i ];\\r\\n\\t\\t\\tnewEdge = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\tedgeVertexWeight = 3 / 8;\\r\\n\\t\\t\\tadjacentVertexWeight = 1 / 8;\\r\\n\\r\\n\\t\\t\\tconnectedFaces = currentEdge.faces.length;\\r\\n\\r\\n\\t\\t\\t// check how many linked faces. 2 should be correct.\\r\\n\\t\\t\\tif ( connectedFaces != 2 ) {\\r\\n\\r\\n\\t\\t\\t\\t// if length is not 2, handle condition\\r\\n\\t\\t\\t\\tedgeVertexWeight = 0.5;\\r\\n\\t\\t\\t\\tadjacentVertexWeight = 0;\\r\\n\\r\\n\\t\\t\\t\\tif ( connectedFaces != 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( WARNINGS ) console.warn( 'Subdivision Modifier: Number of connected faces != 2, is: ', connectedFaces, currentEdge );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tnewEdge.addVectors( currentEdge.a, currentEdge.b ).multiplyScalar( edgeVertexWeight );\\r\\n\\r\\n\\t\\t\\ttmp.set( 0, 0, 0 );\\r\\n\\r\\n\\t\\t\\tfor ( j = 0; j < connectedFaces; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tface = currentEdge.faces[ j ];\\r\\n\\r\\n\\t\\t\\t\\tfor ( k = 0; k < 3; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tother = oldVertices[ face[ ABC[ k ] ] ];\\r\\n\\t\\t\\t\\t\\tif ( other !== currentEdge.a && other !== currentEdge.b ) break;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\ttmp.add( other );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ttmp.multiplyScalar( adjacentVertexWeight );\\r\\n\\t\\t\\tnewEdge.add( tmp );\\r\\n\\r\\n\\t\\t\\tcurrentEdge.newEdge = newEdgeVertices.length;\\r\\n\\t\\t\\tnewEdgeVertices.push( newEdge );\\r\\n\\r\\n\\t\\t\\t// console.log(currentEdge, newEdge);\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t/******************************************************\\r\\n\\t\\t *\\r\\n\\t\\t *\\tStep 2.\\r\\n\\t\\t *\\tReposition each source vertices.\\r\\n\\t\\t *\\r\\n\\t\\t *******************************************************/\\r\\n\\r\\n\\t\\tvar beta, sourceVertexWeight, connectingVertexWeight;\\r\\n\\t\\tvar connectingEdge, connectingEdges, oldVertex, newSourceVertex;\\r\\n\\t\\tnewSourceVertices = [];\\r\\n\\r\\n\\t\\tfor ( i = 0, il = oldVertices.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\toldVertex = oldVertices[ i ];\\r\\n\\r\\n\\t\\t\\t// find all connecting edges (using lookupTable)\\r\\n\\t\\t\\tconnectingEdges = metaVertices[ i ].edges;\\r\\n\\t\\t\\tn = connectingEdges.length;\\r\\n\\r\\n\\t\\t\\tif ( n == 3 ) {\\r\\n\\r\\n\\t\\t\\t\\tbeta = 3 / 16;\\r\\n\\r\\n\\t\\t\\t} else if ( n > 3 ) {\\r\\n\\r\\n\\t\\t\\t\\tbeta = 3 / ( 8 * n ); // Warren's modified formula\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Loop's original beta formula\\r\\n\\t\\t\\t// beta = 1 / n * ( 5/8 - Math.pow( 3/8 + 1/4 * Math.cos( 2 * Math. PI / n ), 2) );\\r\\n\\r\\n\\t\\t\\tsourceVertexWeight = 1 - n * beta;\\r\\n\\t\\t\\tconnectingVertexWeight = beta;\\r\\n\\r\\n\\t\\t\\tif ( n <= 2 ) {\\r\\n\\r\\n\\t\\t\\t\\t// crease and boundary rules\\r\\n\\t\\t\\t\\t// console.warn('crease and boundary rules');\\r\\n\\r\\n\\t\\t\\t\\tif ( n == 2 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( WARNINGS ) console.warn( '2 connecting edges', connectingEdges );\\r\\n\\t\\t\\t\\t\\tsourceVertexWeight = 3 / 4;\\r\\n\\t\\t\\t\\t\\tconnectingVertexWeight = 1 / 8;\\r\\n\\r\\n\\t\\t\\t\\t\\t// sourceVertexWeight = 1;\\r\\n\\t\\t\\t\\t\\t// connectingVertexWeight = 0;\\r\\n\\r\\n\\t\\t\\t\\t} else if ( n == 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( WARNINGS ) console.warn( 'only 1 connecting edge' );\\r\\n\\r\\n\\t\\t\\t\\t} else if ( n == 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( WARNINGS ) console.warn( '0 connecting edges' );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tnewSourceVertex = oldVertex.clone().multiplyScalar( sourceVertexWeight );\\r\\n\\r\\n\\t\\t\\ttmp.set( 0, 0, 0 );\\r\\n\\r\\n\\t\\t\\tfor ( j = 0; j < n; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tconnectingEdge = connectingEdges[ j ];\\r\\n\\t\\t\\t\\tother = connectingEdge.a !== oldVertex ? connectingEdge.a : connectingEdge.b;\\r\\n\\t\\t\\t\\ttmp.add( other );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ttmp.multiplyScalar( connectingVertexWeight );\\r\\n\\t\\t\\tnewSourceVertex.add( tmp );\\r\\n\\r\\n\\t\\t\\tnewSourceVertices.push( newSourceVertex );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t/******************************************************\\r\\n\\t\\t *\\r\\n\\t\\t *\\tStep 3.\\r\\n\\t\\t *\\tGenerate Faces between source vertices\\r\\n\\t\\t *\\tand edge vertices.\\r\\n\\t\\t *\\r\\n\\t\\t *******************************************************/\\r\\n\\r\\n\\t\\tnewVertices = newSourceVertices.concat( newEdgeVertices );\\r\\n\\t\\tvar sl = newSourceVertices.length, edge1, edge2, edge3;\\r\\n\\t\\tnewFaces = [];\\r\\n\\r\\n\\t\\tvar uv, x0, x1, x2;\\r\\n\\t\\tvar x3 = new THREE.Vector2();\\r\\n\\t\\tvar x4 = new THREE.Vector2();\\r\\n\\t\\tvar x5 = new THREE.Vector2();\\r\\n\\r\\n\\t\\tfor ( i = 0, il = oldFaces.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tface = oldFaces[ i ];\\r\\n\\r\\n\\t\\t\\t// find the 3 new edges vertex of each old face\\r\\n\\r\\n\\t\\t\\tedge1 = getEdge( face.a, face.b, sourceEdges ).newEdge + sl;\\r\\n\\t\\t\\tedge2 = getEdge( face.b, face.c, sourceEdges ).newEdge + sl;\\r\\n\\t\\t\\tedge3 = getEdge( face.c, face.a, sourceEdges ).newEdge + sl;\\r\\n\\r\\n\\t\\t\\t// create 4 faces.\\r\\n\\r\\n\\t\\t\\tnewFace( newFaces, edge1, edge2, edge3 );\\r\\n\\t\\t\\tnewFace( newFaces, face.a, edge1, edge3 );\\r\\n\\t\\t\\tnewFace( newFaces, face.b, edge2, edge1 );\\r\\n\\t\\t\\tnewFace( newFaces, face.c, edge3, edge2 );\\r\\n\\r\\n\\t\\t\\t// create 4 new uv's\\r\\n\\r\\n\\t\\t\\tif ( hasUvs ) {\\r\\n\\r\\n\\t\\t\\t\\tuv = oldUvs[ i ];\\r\\n\\r\\n\\t\\t\\t\\tx0 = uv[ 0 ];\\r\\n\\t\\t\\t\\tx1 = uv[ 1 ];\\r\\n\\t\\t\\t\\tx2 = uv[ 2 ];\\r\\n\\r\\n\\t\\t\\t\\tx3.set( midpoint( x0.x, x1.x ), midpoint( x0.y, x1.y ) );\\r\\n\\t\\t\\t\\tx4.set( midpoint( x1.x, x2.x ), midpoint( x1.y, x2.y ) );\\r\\n\\t\\t\\t\\tx5.set( midpoint( x0.x, x2.x ), midpoint( x0.y, x2.y ) );\\r\\n\\r\\n\\t\\t\\t\\tnewUv( newUVs, x3, x4, x5 );\\r\\n\\t\\t\\t\\tnewUv( newUVs, x0, x3, x5 );\\r\\n\\r\\n\\t\\t\\t\\tnewUv( newUVs, x1, x4, x3 );\\r\\n\\t\\t\\t\\tnewUv( newUVs, x2, x5, x4 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Overwrite old arrays\\r\\n\\t\\tgeometry.vertices = newVertices;\\r\\n\\t\\tgeometry.faces = newFaces;\\r\\n\\t\\tif ( hasUvs ) geometry.faceVertexUvs[ 0 ] = newUVs;\\r\\n\\r\\n\\t\\t// console.log('done');\\r\\n\\r\\n\\t};\\r\\n\\r\\n} )();\\r\\n\""
		},
		{
			"name": "MW.js",
			"source": "\"// MW.js\\r\\n\\r\\n/*!\\r\\n* @author yomotsu http://yomotsu.net/\\r\\n* MIT License\\r\\n*/\\r\\n\\r\\nMW = {};\\r\\n\\r\\n\\r\\nMW.triangle = {};\\r\\n\\r\\n\\r\\nMW.triangle.makeBoundingBox = function ( triangle ) {\\r\\n\\r\\n  var bb = new THREE.Box3();\\r\\n\\r\\n  bb.min = bb.min.min( triangle.a );\\r\\n  bb.min = bb.min.min( triangle.b );\\r\\n  bb.min = bb.min.min( triangle.c );\\r\\n\\r\\n  bb.max = bb.max.max( triangle.a );\\r\\n  bb.max = bb.max.max( triangle.b );\\r\\n  bb.max = bb.max.max( triangle.c );\\r\\n\\r\\n  return bb;\\r\\n\\r\\n};\\r\\n\\r\\nMW.triangle.makeBoundingSphere = function ( triangle, normal ) {\\r\\n \\r\\n  var bs = new THREE.Sphere(),\\r\\n      v = new THREE.Vector3(),\\r\\n      v0 = new THREE.Vector3(),\\r\\n      v1 = new THREE.Vector3(),\\r\\n      e0 = new THREE.Vector3(),\\r\\n      e1 = new THREE.Vector3(),\\r\\n      a, b, c, d, e,\\r\\n      div, t, s;\\r\\n \\r\\n  // obtuse triangle\\r\\n \\r\\n  v0.subVectors( triangle.b, triangle.a );\\r\\n  v1.subVectors( triangle.c, triangle.a );\\r\\n \\r\\n  if ( v0.dot( v1 ) <= 0 ) {\\r\\n \\r\\n    bs.center.addVectors( triangle.b, triangle.c ).divideScalar( 2 );\\r\\n    bs.radius = v.subVectors( triangle.b, triangle.c ).length() / 2;\\r\\n    return bs;\\r\\n \\r\\n  }\\r\\n \\r\\n  v0.subVectors( triangle.a, triangle.b );\\r\\n  v1.subVectors( triangle.c, triangle.b );\\r\\n \\r\\n  if ( v0.dot( v1 ) <= 0 ) {\\r\\n \\r\\n    bs.center.addVectors( triangle.a, triangle.c ).divideScalar( 2 );\\r\\n    bs.radius = v.subVectors( triangle.a, triangle.c ).length() / 2;\\r\\n    return bs;\\r\\n \\r\\n  }\\r\\n \\r\\n  v0.subVectors( triangle.a, triangle.c );\\r\\n  v1.subVectors( triangle.b, triangle.c );\\r\\n \\r\\n  if ( v0.dot( v1 ) <= 0 ) {\\r\\n \\r\\n    bs.center.addVectors( triangle.a, triangle.b ).divideScalar( 2 );\\r\\n    bs.radius = v.subVectors( triangle.a, triangle.b ).length() / 2;\\r\\n    return bs;\\r\\n \\r\\n  }\\r\\n \\r\\n  // acute‐angled triangle\\r\\n \\r\\n  if ( !normal ) {\\r\\n \\r\\n    normal = triangle.normal();\\r\\n \\r\\n  }\\r\\n \\r\\n  v0.crossVectors( v.subVectors( triangle.c, triangle.b ), normal );\\r\\n  v1.crossVectors( v.subVectors( triangle.c, triangle.a ), normal );\\r\\n \\r\\n  e0.addVectors( triangle.c, triangle.b ).multiplyScalar( .5 );\\r\\n  e1.addVectors( triangle.c, triangle.a ).multiplyScalar( .5 );\\r\\n \\r\\n  a = v0.dot( v1 );\\r\\n  b = v0.dot( v0 );\\r\\n  d = v1.dot( v1 );\\r\\n  c = -v.subVectors( e1, e0 ).dot( v0 );\\r\\n  e = -v.subVectors( e1, e0 ).dot( v1 );\\r\\n \\r\\n  div = - a * a + b * d;\\r\\n  // t = ( - a * c + b * e ) / div;\\r\\n  s = ( - c * d + a * e ) / div;\\r\\n \\r\\n  bs.center = e0.clone().add( v0.clone().multiplyScalar( s ) );\\r\\n  bs.radius = v.subVectors( bs.center, triangle.a ).length();\\r\\n  return bs;\\r\\n \\r\\n}\\r\\n\\r\\n// @author yomotsu\\r\\n// MIT License\\r\\n\\r\\n;( function ( THREE, ns ) {\\r\\n\\r\\n  'use strict';\\r\\n\\r\\n  ns.collision = {};\\r\\n\\r\\n  // aabb: <THREE.Box3>\\r\\n  // Plane: <THREE.Plane>\\r\\n  ns.collision.isIntersectionAABBPlane = function ( aabb, Plane ) {\\r\\n\\r\\n    var center = new THREE.Vector3().addVectors( aabb.max, aabb.min ).multiplyScalar( 0.5 ),\\r\\n        extents = new THREE.Vector3().subVectors( aabb.max, center );\\r\\n\\r\\n    var r = extents.x * Math.abs( Plane.normal.x ) + extents.y * Math.abs( Plane.normal.y ) + extents.z * Math.abs( Plane.normal.z );\\r\\n    var s = Plane.normal.dot( center ) - Plane.constant;\\r\\n\\r\\n    return Math.abs( s ) <= r;\\r\\n\\r\\n  };\\r\\n\\r\\n  // based on http://www.gamedev.net/topic/534655-aabb-triangleplane-intersection--distance-to-plane-is-incorrect-i-have-solved-it/\\r\\n  //\\r\\n  // a: <THREE.Vector3>, // vertex of a triangle\\r\\n  // b: <THREE.Vector3>, // vertex of a triangle\\r\\n  // c: <THREE.Vector3>, // vertex of a triangle\\r\\n  // aabb: <THREE.Box3>\\r\\n  ns.collision.isIntersectionTriangleAABB = function ( a, b, c, aabb ) {\\r\\n\\r\\n    var p0, p1, p2, r;\\r\\n    \\r\\n    // Compute box center and extents of AABoundingBox (if not already given in that format)\\r\\n    var center = new THREE.Vector3().addVectors( aabb.max, aabb.min ).multiplyScalar( 0.5 ),\\r\\n        extents = new THREE.Vector3().subVectors( aabb.max, center );\\r\\n\\r\\n    // Translate triangle as conceptually moving AABB to origin\\r\\n    var v0 = new THREE.Vector3().subVectors( a, center ),\\r\\n        v1 = new THREE.Vector3().subVectors( b, center ),\\r\\n        v2 = new THREE.Vector3().subVectors( c, center );\\r\\n\\r\\n    // Compute edge vectors for triangle\\r\\n    var f0 = new THREE.Vector3().subVectors( v1, v0 ),\\r\\n        f1 = new THREE.Vector3().subVectors( v2, v1 ),\\r\\n        f2 = new THREE.Vector3().subVectors( v0, v2 );\\r\\n\\r\\n    // Test axes a00..a22 (category 3)\\r\\n    var a00 = new THREE.Vector3( 0, -f0.z, f0.y ),\\r\\n        a01 = new THREE.Vector3( 0, -f1.z, f1.y ),\\r\\n        a02 = new THREE.Vector3( 0, -f2.z, f2.y ),\\r\\n        a10 = new THREE.Vector3( f0.z, 0, -f0.x ),\\r\\n        a11 = new THREE.Vector3( f1.z, 0, -f1.x ),\\r\\n        a12 = new THREE.Vector3( f2.z, 0, -f2.x ),\\r\\n        a20 = new THREE.Vector3( -f0.y, f0.x, 0 ),\\r\\n        a21 = new THREE.Vector3( -f1.y, f1.x, 0 ),\\r\\n        a22 = new THREE.Vector3( -f2.y, f2.x, 0 );\\r\\n\\r\\n    // Test axis a00\\r\\n    p0 = v0.dot( a00 );\\r\\n    p1 = v1.dot( a00 );\\r\\n    p2 = v2.dot( a00 );\\r\\n    r = extents.y * Math.abs( f0.z ) + extents.z * Math.abs( f0.y );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a01\\r\\n    p0 = v0.dot( a01 );\\r\\n    p1 = v1.dot( a01 );\\r\\n    p2 = v2.dot( a01 );\\r\\n    r = extents.y * Math.abs( f1.z ) + extents.z * Math.abs( f1.y );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a02\\r\\n    p0 = v0.dot( a02 );\\r\\n    p1 = v1.dot( a02 );\\r\\n    p2 = v2.dot( a02 );\\r\\n    r = extents.y * Math.abs( f2.z ) + extents.z * Math.abs( f2.y );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a10\\r\\n    p0 = v0.dot( a10 );\\r\\n    p1 = v1.dot( a10 );\\r\\n    p2 = v2.dot( a10 );\\r\\n    r = extents.x * Math.abs( f0.z ) + extents.z * Math.abs( f0.x );\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a11\\r\\n    p0 = v0.dot( a11 );\\r\\n    p1 = v1.dot( a11 );\\r\\n    p2 = v2.dot( a11 );\\r\\n    r = extents.x * Math.abs( f1.z ) + extents.z * Math.abs( f1.x );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a12\\r\\n    p0 = v0.dot( a12 );\\r\\n    p1 = v1.dot( a12 );\\r\\n    p2 = v2.dot( a12 );\\r\\n    r = extents.x * Math.abs( f2.z ) + extents.z * Math.abs( f2.x );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a20\\r\\n    p0 = v0.dot( a20 );\\r\\n    p1 = v1.dot( a20 );\\r\\n    p2 = v2.dot( a20 );\\r\\n    r = extents.x * Math.abs( f0.y ) + extents.y * Math.abs( f0.x );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a21\\r\\n    p0 = v0.dot( a21 );\\r\\n    p1 = v1.dot( a21 );\\r\\n    p2 = v2.dot( a21 );\\r\\n    r = extents.x * Math.abs( f1.y ) + extents.y * Math.abs( f1.x );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a22\\r\\n    p0 = v0.dot( a22 );\\r\\n    p1 = v1.dot( a22 );\\r\\n    p2 = v2.dot( a22 );\\r\\n    r = extents.x * Math.abs( f2.y ) + extents.y * Math.abs( f2.x );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test the three axes corresponding to the face normals of AABB b (category 1).\\r\\n    // Exit if...\\r\\n    // ... [-extents.x, extents.x] and [min(v0.x,v1.x,v2.x), max(v0.x,v1.x,v2.x)] do not overlap\\r\\n    if ( Math.max( v0.x, v1.x, v2.x ) < -extents.x || Math.min( v0.x, v1.x, v2.x ) > extents.x ) {\\r\\n\\r\\n      return false;\\r\\n\\r\\n    }\\r\\n    // ... [-extents.y, extents.y] and [min(v0.y,v1.y,v2.y), max(v0.y,v1.y,v2.y)] do not overlap\\r\\n    if ( Math.max( v0.y, v1.y, v2.y ) < -extents.y || Math.min( v0.y, v1.y, v2.y ) > extents.y ) {\\r\\n\\r\\n      return false;\\r\\n\\r\\n    }\\r\\n    // ... [-extents.z, extents.z] and [min(v0.z,v1.z,v2.z), max(v0.z,v1.z,v2.z)] do not overlap\\r\\n    if ( Math.max( v0.z, v1.z, v2.z ) < -extents.z || Math.min( v0.z, v1.z, v2.z ) > extents.z ) {\\r\\n\\r\\n      return false;\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test separating axis corresponding to triangle face normal (category 2)\\r\\n    // Face Normal is -ve as Triangle is clockwise winding (and XNA uses -z for into screen)\\r\\n    var plane = new THREE.Plane();\\r\\n    plane.normal = new THREE.Vector3().copy( f1 ).cross( f0 ).normalize();\\r\\n    plane.constant = plane.normal.dot( a );\\r\\n    \\r\\n    return ns.collision.isIntersectionAABBPlane( aabb, plane );\\r\\n\\r\\n  };\\r\\n\\r\\n\\r\\n  // sphere1: <THREE.Sphere>\\r\\n  // sphere2: <THREE.Sphere>\\r\\n  ns.collision.isIntersectionSphereSphere = function ( sphere1, sphere2 ) {\\r\\n\\r\\n    var radiusSum = sphere1.radius + sphere2.radius;\\r\\n\\r\\n    return sphere1.center.distanceToSquared( sphere2.center ) <= ( radiusSum * radiusSum );\\r\\n\\r\\n  };\\r\\n\\r\\n  // Section 5.1.3\\r\\n  // sphere: <THREE.Sphere>\\r\\n  // aabb: <THREE.Box3>\\r\\n\\r\\n  ns.collision.isIntersectionSphereAABB = function ( sphere, aabb ) {\\r\\n\\r\\n    var sqDist = 0;\\r\\n\\r\\n    if ( sphere.center.x < aabb.min.x ) { sqDist += ( aabb.min.x - sphere.center.x ) * ( aabb.min.x - sphere.center.x ); }\\r\\n    if ( sphere.center.x > aabb.max.x ) { sqDist += ( sphere.center.x - aabb.max.x ) * ( sphere.center.x - aabb.max.x ); }\\r\\n\\r\\n    if ( sphere.center.y < aabb.min.y ) { sqDist += ( aabb.min.y - sphere.center.y ) * ( aabb.min.y - sphere.center.y ); }\\r\\n    if ( sphere.center.y > aabb.max.y ) { sqDist += ( sphere.center.y - aabb.max.y ) * ( sphere.center.y - aabb.max.y ); }\\r\\n\\r\\n    if ( sphere.center.z < aabb.min.z ) { sqDist += ( aabb.min.z - sphere.center.z ) * ( aabb.min.z - sphere.center.z ); }\\r\\n    if ( sphere.center.z > aabb.max.z ) { sqDist += ( sphere.center.z - aabb.max.z ) * ( sphere.center.z - aabb.max.z ); }\\r\\n\\r\\n    return sqDist <= sphere.radius * sphere.radius;\\r\\n\\r\\n  };\\r\\n\\r\\n\\r\\n  //http://clb.demon.fi/MathGeoLib/docs/Triangle.cpp_code.html#459\\r\\n\\r\\n  // sphere: <THREE.Sphere>\\r\\n  // a: <THREE.Vector3>, // vertex of a triangle\\r\\n  // b: <THREE.Vector3>, // vertex of a triangle\\r\\n  // c: <THREE.Vector3>, // vertex of a triangle\\r\\n  // normal: <THREE.Vector3>, // normal of a triangle\\r\\n  ns.collision.isIntersectionSphereTriangle = function ( sphere, a, b, c, normal ) {\\r\\n    // http://realtimecollisiondetection.net/blog/?p=103\\r\\n\\r\\n    // vs plain of traiangle face\\r\\n    var A = new THREE.Vector3(),\\r\\n        B = new THREE.Vector3(),\\r\\n        C = new THREE.Vector3(),\\r\\n        rr,\\r\\n        V = new THREE.Vector3(),\\r\\n        d,\\r\\n        e;\\r\\n\\r\\n    A.subVectors( a, sphere.center );\\r\\n    B.subVectors( b, sphere.center );\\r\\n    C.subVectors( c, sphere.center );\\r\\n    rr = sphere.radius * sphere.radius;\\r\\n    V.crossVectors( B.clone().sub( A ), C.clone().sub( A ) );\\r\\n    d = A.dot( V );\\r\\n    e = V.dot( V );\\r\\n\\r\\n    if ( d * d > rr * e ) {\\r\\n\\r\\n      return false;\\r\\n\\r\\n    }\\r\\n\\r\\n    // vs triangle vertex\\r\\n    var aa,\\r\\n        ab,\\r\\n        ac,\\r\\n        bb,\\r\\n        bc,\\r\\n        cc;\\r\\n\\r\\n    aa = A.dot( A );\\r\\n    ab = A.dot( B );\\r\\n    ac = A.dot( C );\\r\\n    bb = B.dot( B );\\r\\n    bc = B.dot( C );\\r\\n    cc = C.dot( C );\\r\\n\\r\\n    if (\\r\\n      ( aa > rr ) & ( ab > aa ) & ( ac > aa ) ||\\r\\n      ( bb > rr ) & ( ab > bb ) & ( bc > bb ) ||\\r\\n      ( cc > rr ) & ( ac > cc ) & ( bc > cc )\\r\\n    ) {\\r\\n\\r\\n      return false;\\r\\n\\r\\n    }\\r\\n\\r\\n    // vs edge\\r\\n    var AB = new THREE.Vector3(),\\r\\n        BC = new THREE.Vector3(),\\r\\n        CA = new THREE.Vector3(),\\r\\n        d1,\\r\\n        d2,\\r\\n        d3,\\r\\n        e1,\\r\\n        e2,\\r\\n        e3,\\r\\n        Q1 = new THREE.Vector3(),\\r\\n        Q2 = new THREE.Vector3(),\\r\\n        Q3 = new THREE.Vector3(),\\r\\n        QC = new THREE.Vector3(),\\r\\n        QA = new THREE.Vector3(),\\r\\n        QB = new THREE.Vector3();\\r\\n\\r\\n    AB.subVectors( B, A );\\r\\n    BC.subVectors( C, B );\\r\\n    CA.subVectors( A, C );\\r\\n    d1 = ab - aa;\\r\\n    d2 = bc - bb;\\r\\n    d3 = ac - cc;\\r\\n    e1 = AB.dot( AB );\\r\\n    e2 = BC.dot( BC );\\r\\n    e3 = CA.dot( CA );\\r\\n    Q1.subVectors( A.multiplyScalar( e1 ), AB.multiplyScalar( d1 ) );\\r\\n    Q2.subVectors( B.multiplyScalar( e2 ), BC.multiplyScalar( d2 ) );\\r\\n    Q3.subVectors( C.multiplyScalar( e3 ), CA.multiplyScalar( d3 ) );\\r\\n    QC.subVectors( C.multiplyScalar( e1 ), Q1 );\\r\\n    QA.subVectors( A.multiplyScalar( e2 ), Q2 );\\r\\n    QB.subVectors( B.multiplyScalar( e3 ), Q3 );\\r\\n\\r\\n    if (\\r\\n      ( Q1.dot( Q1 ) > rr * e1 * e1 ) && ( Q1.dot( QC ) >= 0 ) ||\\r\\n      ( Q2.dot( Q2 ) > rr * e2 * e2 ) && ( Q2.dot( QA ) >= 0 ) ||\\r\\n      ( Q3.dot( Q3 ) > rr * e3 * e3 ) && ( Q3.dot( QB ) >= 0 )\\r\\n    ) {\\r\\n\\r\\n      return false;\\r\\n\\r\\n    }\\r\\n\\r\\n    var distance = Math.sqrt( d * d / e ) - sphere.radius - 1,\\r\\n        contactPoint = new THREE.Vector3(),\\r\\n        negatedNormal = new THREE.Vector3( -normal.x, -normal.y, -normal.z );\\r\\n\\r\\n    contactPoint.copy( sphere.center ).add( negatedNormal.multiplyScalar( distance ) );\\r\\n\\r\\n    return {\\r\\n      distance    : distance,\\r\\n      contactPoint: contactPoint\\r\\n    };\\r\\n\\r\\n  };\\r\\n\\r\\n  // based on Real-Time Collision Detection Section 5.3.4\\r\\n  // p: <THREE.Vector3>, // line3.start\\r\\n  // q: <THREE.Vector3>, // line3.end\\r\\n  // a: <THREE.Vector3>, // triangle.a\\r\\n  // b: <THREE.Vector3>, // triangle.b\\r\\n  // c: <THREE.Vector3>, // triangle.c\\r\\n  // normal: <THREE.Vector3>, // triangle.normal, optional\\r\\n\\r\\n  // var scalarTriple = function ( a, b, c ) {\\r\\n\\r\\n  //   var m = b.clone().cross( c );\\r\\n  //   return a.dot( m );\\r\\n\\r\\n  // }\\r\\n\\r\\n  // var vectorTriple = function ( a, b, c ) {\\r\\n\\r\\n  //   var m = b.clone().cross( c );\\r\\n  //   return a.clone().cross( m );\\r\\n\\r\\n  // }\\r\\n\\r\\n  // ns.collision.isIntersectionLineTriangle = function ( p, q, a, b, c, precision ) {\\r\\n\\r\\n  //   var pq = q.clone().sub( p ),\\r\\n  //       pa = a.clone().sub( p ),\\r\\n  //       pb = b.clone().sub( p ),\\r\\n  //       pc = c.clone().sub( p ),\\r\\n  //       u, v, w;\\r\\n\\r\\n  //   u = scalarTriple( pq, pc, pb );\\r\\n\\r\\n  //   if ( u < 0 ) { return false; }\\r\\n\\r\\n  //   v = scalarTriple( pq, pa, pc );\\r\\n\\r\\n  //   if ( v < 0 ) { return false; }\\r\\n\\r\\n  //   w = scalarTriple( pq, pb, pa );\\r\\n\\r\\n  //   if ( w < 0 ) { return false; }\\r\\n\\r\\n  //   var denom = 1 / ( u + v + w );\\r\\n  //   u *= denom;\\r\\n  //   v *= denom;\\r\\n  //   w *= denom;\\r\\n\\r\\n  //   var au = a.clone().multiplyScalar( u ),\\r\\n  //       bv = b.clone().multiplyScalar( v ),\\r\\n  //       cw = c.clone().multiplyScalar( w ),\\r\\n  //       contactPoint = au.clone().add( bv ).add( cw );\\r\\n\\r\\n  //   return {\\r\\n  //     contactPoint: contactPoint\\r\\n  //   }\\r\\n\\r\\n  // }\\r\\n\\r\\n  ns.collision.testSegmentTriangle = function ( p, q, a, b, c ) {\\r\\n\\r\\n    var ab = b.clone().sub( a );\\r\\n    var ac = c.clone().sub( a );\\r\\n    var qp = p.clone().sub( q );\\r\\n\\r\\n    var n = ab.clone().cross( ac );\\r\\n\\r\\n    var d = qp.dot( n );\\r\\n    if ( d <= 0 ) { return false; }\\r\\n\\r\\n    var ap = p.clone().sub( a );\\r\\n    var t = ap.dot( n );\\r\\n\\r\\n    if ( t < 0 ) { return 0; }\\r\\n    if ( t > d ) { return 0; }\\r\\n\\r\\n    var e = qp.clone().cross( ap );\\r\\n    var v = ac.dot( e );\\r\\n\\r\\n    if ( v < 0 || v > d ) { return 0; }\\r\\n\\r\\n    var w = ab.clone().dot( e ) * -1;\\r\\n\\r\\n    if ( w < 0 || v + w > d ) { return 0; }\\r\\n\\r\\n    var ood = 1 / d;\\r\\n    t *= ood;\\r\\n    v *= ood;\\r\\n    w *= ood;\\r\\n    var u = 1 - v - w;\\r\\n\\r\\n    var au = a.clone().multiplyScalar( u ),\\r\\n        bv = b.clone().multiplyScalar( v ),\\r\\n        cw = c.clone().multiplyScalar( w ),\\r\\n        contactPoint = au.clone().add( bv ).add( cw );\\r\\n\\r\\n    return {\\r\\n      contactPoint: contactPoint\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n} )( THREE, MW );\\r\\n\\r\\n\\r\\n// @author yomotsu\\r\\n// MIT License\\r\\n\\r\\n;( function ( THREE, ns ) {\\r\\n\\r\\n  'use strict';\\r\\n\\r\\n  ns.World = function () {\\r\\n\\r\\n    // console.log( 'THREEFIELD.World' );\\r\\n\\r\\n    this.colliderPool  = [];\\r\\n    this.characterPool = [];\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.World.prototype.add = function ( object ) {\\r\\n    \\r\\n    if ( object instanceof ns.Octree ) {\\r\\n\\r\\n      this.colliderPool.push( object );\\r\\n\\r\\n    } else if ( object instanceof ns.CharacterController ) {\\r\\n\\r\\n      this.characterPool.push( object );\\r\\n      object.world = this;\\r\\n\\r\\n    }\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.World.prototype.step = function ( dt ) {\\r\\n\\r\\n    var character,\\r\\n        octree,\\r\\n        sphere,\\r\\n        intersectedNodes,\\r\\n        faces,\\r\\n        contactInfo,\\r\\n        i, ii, iii, l, ll, lll;\\r\\n\\r\\n    for ( i = 0, l = this.characterPool.length; i < l; i ++ ) {\\r\\n\\r\\n      character = this.characterPool[ i ];\\r\\n\\r\\n      // octree で絞られた node に含まれる face だけを\\r\\n      // charactore に渡して判定する\\r\\n      for ( ii = 0, ll = this.colliderPool.length; ii < ll; ii ++ ) {\\r\\n\\r\\n        octree = this.colliderPool[ ii ];\\r\\n        sphere = new THREE.Sphere( character.center, character.radius + character.groundPadding );\\r\\n        intersectedNodes = octree.getIntersectedNodes( sphere, octree.maxDepth );\\r\\n        faces = ns.Octree.uniqTriangkesfromNodes( intersectedNodes );\\r\\n\\r\\n      }\\r\\n      \\r\\n      character.collisionCandidate = faces;\\r\\n      character.update( dt );\\r\\n\\r\\n    }\\r\\n\\r\\n  };\\r\\n\\r\\n} )( THREE, MW );\\r\\n\\r\\n// @author yomotsu\\r\\n// MIT License\\r\\n\\r\\n// OcTree with Morton Order\\r\\n// based on http://marupeke296.com/COL_3D_No15_Octree.html\\r\\n//\\r\\n//       +------+------+\\r\\n//       |\\\\   2  \\\\   3  \\\\\\r\\n//       | +------+------+\\r\\n//       + |\\\\      \\\\      \\\\\\r\\n//       |\\\\| +------+------+\\r\\n//       | + |      |      |\\r\\n//       +0|\\\\|   6  |   7  |\\r\\n//        \\\\| +------+------+\\r\\n//         + |      |      |\\r\\n//    y     \\\\|   4  |   5  |\\r\\n//    |      +------+------+\\r\\n//    +--x\\r\\n//     \\\\\\r\\n//      z\\r\\n//\\r\\n//\\r\\n//       +------+------+\\r\\n//       |\\\\   6  \\\\   7  \\\\\\r\\n//       | +------+------+\\r\\n//       + |\\\\      \\\\      \\\\\\r\\n//       |\\\\| +------+------+\\r\\n//       | + |      |      |\\r\\n//       +4|\\\\|   2  |   3  |\\r\\n//        \\\\| +------+------+\\r\\n//         + |      |      |\\r\\n//  z y     \\\\|   0  |   1  |\\r\\n//   \\\\|      +------+------+\\r\\n//    +--x\\r\\n//\\r\\n\\r\\n;( function ( THREE, ns ) {\\r\\n\\r\\n  'use strict';\\r\\n\\r\\n  // min: <THREE.Vector3>\\r\\n  // max: <THREE.Vector3>\\r\\n  // maxDepth: <Number>\\r\\n  ns.Octree = function ( min, max, maxDepth ) {\\r\\n\\r\\n    this.min = min;\\r\\n    this.max = max;\\r\\n    this.maxDepth = maxDepth;\\r\\n    this.nodes = [];\\r\\n\\r\\n    var i, length, depth, mortonNumber,\\r\\n        pow2, pow4,\\r\\n        indexX, indexY, indexZ,\\r\\n        nodeBoxSize = new THREE.Vector3(),\\r\\n        nodeBoxMin = new THREE.Vector3(),\\r\\n        nodeBoxMax = new THREE.Vector3();\\r\\n\\r\\n    for ( depth = 0; depth < this.maxDepth; depth ++ ) {\\r\\n\\r\\n      this.nodes.push( [] );\\r\\n      pow2 = Math.pow( 2, depth );\\r\\n      pow4 = Math.pow( 4, depth );\\r\\n      nodeBoxSize.subVectors( this.max, this.min ).divideScalar( pow2 );\\r\\n\\r\\n      for ( i = 0, length = Math.pow( 8, depth ); i < length; i ++ ) {\\r\\n\\r\\n        indexX = i % pow2;\\r\\n        indexY = ( i / pow4 )|0;\\r\\n        indexZ = ( ( i / pow2 )|0 ) % pow2;\\r\\n\\r\\n        nodeBoxMin.set(\\r\\n          this.min.x + indexX * nodeBoxSize.x,\\r\\n          this.min.y + indexY * nodeBoxSize.y,\\r\\n          this.min.z + indexZ * nodeBoxSize.z\\r\\n        );\\r\\n        nodeBoxMax.copy( nodeBoxMin ).add( nodeBoxSize );\\r\\n\\r\\n        mortonNumber = ns.Octree.getMortonNumber( indexX, indexY, indexZ );\\r\\n        this.nodes[ depth ][ mortonNumber ] = new ns.OctreeNode( this, depth, mortonNumber, nodeBoxMin, nodeBoxMax );\\r\\n\\r\\n      }\\r\\n\\r\\n    }\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.Octree.prototype = {\\r\\n\\r\\n    constructor: ns.Octree,\\r\\n\\r\\n    importThreeMesh: function ( threeMesh ) {\\r\\n\\r\\n\\r\\n      var i, ii, l, ll,\\r\\n          vec3 = new THREE.Vector3(),\\r\\n          geometry,\\r\\n          geometryId,\\r\\n          face,\\r\\n          normal,\\r\\n          index,\\r\\n          count,\\r\\n          start,\\r\\n          a, b, c,\\r\\n        \\tvA  = new THREE.Vector3(),\\r\\n        \\tvB  = new THREE.Vector3(),\\r\\n        \\tvC  = new THREE.Vector3(),\\r\\n        \\tvnA = new THREE.Vector3(),\\r\\n        \\tvnB = new THREE.Vector3(),\\r\\n        \\tvnC = new THREE.Vector3(),\\r\\n          ab  = new THREE.Vector3(),\\r\\n          cb  = new THREE.Vector3(),\\r\\n          faceNormal;\\r\\n\\r\\n      threeMesh.updateMatrix();\\r\\n\\r\\n      geometryId = threeMesh.geometry.uuid;\\r\\n      geometry   = threeMesh.geometry.clone();\\r\\n      geometry.applyMatrix( threeMesh.matrix );\\r\\n      geometry.computeVertexNormals();\\r\\n\\r\\n      if ( geometry instanceof THREE.BufferGeometry ) {\\r\\n\\r\\n        if ( geometry.index !== undefined ) {\\r\\n\\r\\n          var indices   = geometry.index.array;\\r\\n          var positions = geometry.attributes.position.array;\\r\\n          var normals   = geometry.attributes.normal.array;\\r\\n          var offsets   = geometry.groups;\\r\\n\\r\\n          if ( offsets.length === 0 ) {\\r\\n\\r\\n            offsets = [ { start: 0, count: indices.length, index: 0 } ];\\r\\n\\r\\n          }\\r\\n\\r\\n          for ( i = 0, l = offsets.length; i < l; ++ i ) {\\r\\n\\r\\n            start  = offsets[ i ].start;\\r\\n            count  = offsets[ i ].count;\\r\\n            index  = offsets[ i ].materialIndex;\\r\\n\\r\\n            for ( ii = start, ll = start + count; ii < ll; ii += 3 ) {\\r\\n\\r\\n              a = index + indices[ ii ];\\r\\n              b = index + indices[ ii + 1 ];\\r\\n              c = index + indices[ ii + 2 ];\\r\\n\\r\\n              vA = vec3.fromArray( positions, a * 3 ).clone();\\r\\n              vB = vec3.fromArray( positions, b * 3 ).clone();\\r\\n              vC = vec3.fromArray( positions, c * 3 ).clone();\\r\\n\\r\\n              // https://github.com/mrdoob/three.js/issues/4691\\r\\n              // make face normal\\r\\n              cb.subVectors( vC, vB );\\r\\n              ab.subVectors( vA, vB );\\r\\n              faceNormal = cb.cross( ab ).normalize().clone();\\r\\n\\r\\n              face = new ns.Face(\\r\\n                vA,\\r\\n                vB,\\r\\n                vC,\\r\\n                faceNormal,\\r\\n                geometryId\\r\\n              );\\r\\n\\r\\n              this.addFace( face );\\r\\n\\r\\n            }\\r\\n\\r\\n          }\\r\\n\\r\\n        }\\r\\n\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      geometry.computeFaceNormals();\\r\\n\\r\\n      for ( i = 0, l = geometry.faces.length; i < l; i ++ ) {\\r\\n\\r\\n        face = new ns.Face(\\r\\n          geometry.vertices[ geometry.faces[ i ].a ],\\r\\n          geometry.vertices[ geometry.faces[ i ].b ],\\r\\n          geometry.vertices[ geometry.faces[ i ].c ],\\r\\n          geometry.faces[ i ].normal,\\r\\n          geometryId\\r\\n        );\\r\\n        this.addFace( face );\\r\\n\\r\\n      }\\r\\n\\r\\n    },\\r\\n\\r\\n    addFace: function ( face ) {\\r\\n\\r\\n      var i, ii, l, ll, node, targetNodes = [], tmp = [], isIntersected;\\r\\n\\r\\n      targetNodes = this.nodes[ 0 ].slice( 0 );\\r\\n\\r\\n      for ( i = 0, l = this.maxDepth; i < l; i ++ ) {\\r\\n\\r\\n        for ( ii = 0, ll = targetNodes.length; ii < ll; ii ++ ) {\\r\\n\\r\\n          node = targetNodes[ ii ];\\r\\n          isIntersected = ns.collision.isIntersectionTriangleAABB( face.a, face.b, face.c, node );\\r\\n\\r\\n          if ( isIntersected ) {\\r\\n\\r\\n            node.trianglePool.push( face );\\r\\n\\r\\n            if ( i + 1 !== this.maxDepth ) {\\r\\n\\r\\n              tmp = tmp.concat( node.getChildNodes() );\\r\\n\\r\\n            }\\r\\n\\r\\n          }\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( tmp.length === 0 ) {\\r\\n\\r\\n          break;\\r\\n\\r\\n        }\\r\\n\\r\\n        targetNodes = tmp.slice( 0 );\\r\\n        tmp.length = 0;\\r\\n\\r\\n      }\\r\\n\\r\\n    },\\r\\n\\r\\n    removeThreeMesh: function ( meshID ) {\\r\\n\\r\\n      var that = this;\\r\\n\\r\\n      this.nodes.forEach( function ( nodeDepth ) {\\r\\n\\r\\n        nodeDepth.forEach( function ( node ) {\\r\\n\\r\\n          var newTrianglePool = [];\\r\\n\\r\\n          node.trianglePool.forEach( function ( face ) {\\r\\n\\r\\n            if ( face.meshID !== meshID ) {\\r\\n\\r\\n              newTrianglePool.push( face );\\r\\n\\r\\n            }\\r\\n\\r\\n          } );\\r\\n\\r\\n          node.trianglePool = newTrianglePool;\\r\\n\\r\\n        } );\\r\\n\\r\\n      } );\\r\\n\\r\\n    },\\r\\n\\r\\n    getIntersectedNodes: function ( sphere, depth ) {\\r\\n\\r\\n      var i, ii, l, ll, node, targetNodes = [], tmp = [],\\r\\n          isIntersected, intersectedNodes = [], isAtMaxDepth;\\r\\n\\r\\n      isIntersected = ns.collision.isIntersectionSphereAABB( sphere, this );\\r\\n\\r\\n      if ( !isIntersected ) {\\r\\n\\r\\n        return [];\\r\\n\\r\\n      }\\r\\n\\r\\n      targetNodes = this.nodes[ 0 ].slice( 0 );\\r\\n\\r\\n      for ( i = 0, l = depth; i < l; i ++ ) {\\r\\n\\r\\n        for ( ii = 0, ll = targetNodes.length; ii < ll; ii ++ ) {\\r\\n\\r\\n          node = targetNodes[ ii ];\\r\\n          isIntersected = ns.collision.isIntersectionSphereAABB( sphere, node );\\r\\n\\r\\n          if ( isIntersected ) {\\r\\n\\r\\n            isAtMaxDepth = ( i + 1 === depth );\\r\\n\\r\\n            if ( isAtMaxDepth ) {\\r\\n\\r\\n              if ( node.trianglePool.length !== 0 ) {\\r\\n\\r\\n                intersectedNodes.push( node );\\r\\n\\r\\n              }\\r\\n\\r\\n            } else {\\r\\n\\r\\n              tmp = tmp.concat( node.getChildNodes() );\\r\\n\\r\\n            }\\r\\n\\r\\n          }\\r\\n\\r\\n        }\\r\\n\\r\\n        targetNodes = tmp.slice( 0 );\\r\\n        tmp.length = 0;\\r\\n\\r\\n      }\\r\\n\\r\\n      return intersectedNodes;\\r\\n\\r\\n    }\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.Octree.separate3Bit = function ( n ) {\\r\\n\\r\\n    n = ( n | n << 8 ) & 0x0000f00f;\\r\\n    n = ( n | n << 4 ) & 0x000c30c3;\\r\\n    n = ( n | n << 2 ) & 0x00249249;\\r\\n    return n;\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.Octree.getMortonNumber = function ( x, y, z ) {\\r\\n\\r\\n    return ns.Octree.separate3Bit( x ) |\\r\\n           ns.Octree.separate3Bit( y ) << 1 |\\r\\n           ns.Octree.separate3Bit( z ) << 2;\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.Octree.uniqTriangkesfromNodes = function ( nodes ) {\\r\\n\\r\\n    var i, ii, iii, l, ll, lll, uniq = [], isContained = false;\\r\\n\\r\\n    if ( nodes.length === 0 ) {\\r\\n\\r\\n      return [];\\r\\n\\r\\n    } else if ( nodes.length === 1 ) {\\r\\n\\r\\n      return nodes[ 0 ].trianglePool.slice( 0 );\\r\\n\\r\\n    }\\r\\n\\r\\n    for ( i = 0, l = nodes.length; i < l; i ++ ) {\\r\\n\\r\\n      for ( ii = 0, ll = nodes[ i ].trianglePool.length; ii < ll; ii ++ ) {\\r\\n\\r\\n        for ( iii = 0, lll = uniq.length; iii < lll; iii ++ ) {\\r\\n\\r\\n          if ( nodes[ i ].trianglePool[ ii ] === uniq[ iii ] ) {\\r\\n\\r\\n            isContained = true;\\r\\n\\r\\n          }\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( !isContained ) {\\r\\n\\r\\n          uniq.push( nodes[ i ].trianglePool[ ii ] );\\r\\n\\r\\n        }\\r\\n\\r\\n        isContained = false;\\r\\n\\r\\n      }\\r\\n\\r\\n    }\\r\\n\\r\\n    return uniq;\\r\\n\\r\\n  };\\r\\n\\r\\n  //\\r\\n\\r\\n  ns.OctreeNode = function ( tree, depth, mortonNumber, min, max ) {\\r\\n\\r\\n    this.tree = tree;\\r\\n    this.depth = depth;\\r\\n    this.mortonNumber = mortonNumber;\\r\\n    this.min = new THREE.Vector3( min.x, min.y, min.z );\\r\\n    this.max = new THREE.Vector3( max.x, max.y, max.z );\\r\\n    this.trianglePool = [];\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.OctreeNode.prototype = {\\r\\n\\r\\n    constructor: ns.OctreeNode,\\r\\n\\r\\n    getParentNode: function () {\\r\\n\\r\\n      if ( this.depth === 0 ) {\\r\\n\\r\\n        return null;\\r\\n\\r\\n      }\\r\\n\\r\\n      this.tree.nodes[ this.depth ][ this.mortonNumber >> 3 ];\\r\\n\\r\\n    },\\r\\n\\r\\n    getChildNodes: function () {\\r\\n\\r\\n      if ( this.tree.maxDepth === this.depth ) {\\r\\n\\r\\n        return null;\\r\\n\\r\\n      }\\r\\n\\r\\n      var firstChild = this.mortonNumber << 3;\\r\\n\\r\\n      return [\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 1 ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 2 ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 3 ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 4 ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 5 ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 6 ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 7 ]\\r\\n      ];\\r\\n\\r\\n    }\\r\\n\\r\\n  };\\r\\n\\r\\n  //\\r\\n\\r\\n  // a: <THREE.Vector3>\\r\\n  // b: <THREE.Vector3>\\r\\n  // c: <THREE.Vector3>\\r\\n  // normal: <THREE.Vector3>\\r\\n  // meshID: <String>\\r\\n  ns.Face = function ( a, b, c, normal, meshID ) {\\r\\n\\r\\n    this.a = a.clone();\\r\\n    this.b = b.clone();\\r\\n    this.c = c.clone();\\r\\n    this.normal = normal.clone();\\r\\n    this.meshID = meshID;\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.Face.prototype = {\\r\\n\\r\\n    constructor: ns.Face\\r\\n\\r\\n  };\\r\\n\\r\\n  // origin   : <THREE.Vector3>\\r\\n  // direction: <THREE.Vector3>\\r\\n  // distance : <Float>\\r\\n  ns.Ray = function ( origin, direction, distance ) {\\r\\n    this.origin = origin;\\r\\n    this.direction = direction;\\r\\n    this.distance = distance;\\r\\n  };\\r\\n\\r\\n} )( THREE, MW );\\r\\n\\r\\n\\r\\n\""
		},
		{
			"name": "MWtps.js",
			"source": "\"// MWtps.js\\r\\n\\r\\n/*!\\r\\n* @author yomotsu http://yomotsu.net/\\r\\n* MIT License\\r\\n*/\\r\\n\\r\\n;( function ( THREE, ns ) {\\r\\n\\r\\n  'use strict';\\r\\n\\r\\n  ns.CharacterController = function ( object3d, radius ) {\\r\\n\\r\\n    Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\\r\\n    this.object = object3d;\\r\\n    this.center = this.object.position.clone();\\r\\n    this.radius = radius;\\r\\n    this.groundPadding = 0.5;\\r\\n    this.maxSlopeGradient = Math.cos( THREE.Math.degToRad( 50 ) );\\r\\n    this.isGrounded = false;\\r\\n    this.isOnSlope  = false;\\r\\n    this.isIdling   = false;\\r\\n    this.isRunning  = false;\\r\\n    this.isJumping  = false;\\r\\n    this.direction  = 0; // 0 to 2PI(=360deg) in rad\\r\\n    this.movementSpeed = 28; // default: 50; // Meters Per Second\\r\\n    this.velocity = new THREE.Vector3( 0, -10, 0 );\\r\\n    this.currentJumpPower = 0;\\r\\n    this.jumpStartTime = 0;\\r\\n    this.groundHeight = 0;\\r\\n    this.groundNormal = new THREE.Vector3();\\r\\n    this.collisionCandidate;\\r\\n    this.contactInfo = [];\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.CharacterController.prototype = {\\r\\n\\r\\n    constructor: ns.CharacterController,\\r\\n\\r\\n    update: function ( dt ) {\\r\\n\\r\\n      this.isGrounded = false;\\r\\n      this.isOnSlope  = false;\\r\\n      this.groundHeight = -Infinity;\\r\\n      this.groundNormal.set( 0, 1, 0 );\\r\\n\\r\\n      this.updateGrounding();\\r\\n      this.updateJumping();\\r\\n      this.updatePosition( dt );\\r\\n      this.collisionDetection();\\r\\n      this.solvePosition();\\r\\n      this.updateVelocity();\\r\\n      this.events();\\r\\n\\r\\n    },\\r\\n\\r\\n    updateVelocity: function () {\\r\\n\\r\\n      var FALL_VELOCITY = -50,\\r\\n          frontDierction = -Math.cos( this.direction ),\\r\\n          rightDierction = -Math.sin( this.direction ),\\r\\n          normal,\\r\\n          isHittingCeiling = false,\\r\\n          wallNomal2D,\\r\\n          direction2D,\\r\\n          wallAngle,\\r\\n          frontAngle,\\r\\n          negativeFrontAngle,\\r\\n          i, l;\\r\\n      \\r\\n      this.velocity.set(\\r\\n        rightDierction * this.movementSpeed * this.isRunning, \\r\\n        FALL_VELOCITY,\\r\\n        frontDierction * this.movementSpeed * this.isRunning\\r\\n      );\\r\\n\\r\\n      if ( this.contactInfo.length === 0 && !this.isJumping ) {\\r\\n\\r\\n        return;\\r\\n\\r\\n      } else if ( this.isGrounded && !this.isOnSlope && !this.isJumping ) {\\r\\n\\r\\n        this.velocity.y = 0;\\r\\n\\r\\n      } else if ( this.isOnSlope ) {\\r\\n\\r\\n        var slidingDownVelocity = FALL_VELOCITY;\\r\\n        var holizontalSpead = - slidingDownVelocity / ( 1 - this.groundNormal.y ) * 0.2;\\r\\n\\r\\n        this.velocity.x = this.groundNormal.x * holizontalSpead;\\r\\n        this.velocity.y = FALL_VELOCITY;\\r\\n        this.velocity.z = this.groundNormal.z * holizontalSpead;\\r\\n\\r\\n      } else if ( !this.isGrounded && !this.isOnSlope && this.isJumping ) {\\r\\n\\r\\n        this.velocity.y = this.currentJumpPower * -FALL_VELOCITY;\\r\\n\\r\\n      }\\r\\n\\r\\n\\r\\n      // vs walls and sliding on the wall\\r\\n      direction2D = new THREE.Vector2( rightDierction, frontDierction );\\r\\n      frontAngle = Math.atan2( direction2D.y, direction2D.x );\\r\\n      negativeFrontAngle = Math.atan2( -direction2D.y, -direction2D.x );\\r\\n      \\r\\n      for ( i = 0, l = this.contactInfo.length; i < l; i ++ ) {\\r\\n\\r\\n        normal = this.contactInfo[ i ].face.normal;\\r\\n        // var distance = this.contactInfo[ i ].distance;\\r\\n\\r\\n        if ( this.maxSlopeGradient < normal.y || this.isOnSlope ) {\\r\\n\\r\\n          continue;\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( !isHittingCeiling && normal.y < 0 ) {\\r\\n\\r\\n          isHittingCeiling = true;\\r\\n\\r\\n        }\\r\\n\\r\\n        wallNomal2D = new THREE.Vector2( normal.x, normal.z ).normalize();\\r\\n        wallAngle = Math.atan2( wallNomal2D.y, wallNomal2D.x );\\r\\n\\r\\n        if (\\r\\n          Math.abs( negativeFrontAngle - wallAngle ) >= Math.PI * 0.5 && //  90deg\\r\\n          Math.abs( negativeFrontAngle - wallAngle ) <= Math.PI * 1.5    // 270deg\\r\\n        ) {\\r\\n\\r\\n          continue;\\r\\n\\r\\n        }\\r\\n\\r\\n        wallNomal2D.set(\\r\\n          direction2D.dot( wallNomal2D ) * wallNomal2D.x,\\r\\n          direction2D.dot( wallNomal2D ) * wallNomal2D.y\\r\\n        );\\r\\n        direction2D.subVectors( direction2D, wallNomal2D );\\r\\n\\r\\n        this.velocity.x = direction2D.x * this.movementSpeed * this.isRunning;\\r\\n        this.velocity.z = direction2D.y * this.movementSpeed * this.isRunning;\\r\\n\\r\\n      }\\r\\n\\r\\n      if ( isHittingCeiling ) {\\r\\n\\r\\n        this.velocity.y = Math.min( 0, this.velocity.y );\\r\\n        this.isJumping = false;\\r\\n\\r\\n      }\\r\\n\\r\\n    },\\r\\n\\r\\n    updateGrounding: function () {\\r\\n\\r\\n      // \\\"頭上からほぼ無限に下方向までの線 (segment)\\\" vs \\\"フェイス (triangle)\\\" の\\r\\n      // 交差判定を行う\\r\\n      // もし、フェイスとの交差点が「頭上」から「下groundPadding」までの間だったら\\r\\n      // 地面上 (isGrounded) にいることとみなす\\r\\n      //\\r\\n      //   ___\\r\\n      //  / | \\\\\\r\\n      // |  |  | player sphere\\r\\n      //  \\\\_|_/\\r\\n      //    |\\r\\n      //---[+]---- ground\\r\\n      //    |\\r\\n      //    |\\r\\n      //    | segment (player's head to almost -infinity)\\r\\n\\r\\n\\r\\n      var i, l,\\r\\n          groundContactInfo,\\r\\n          groundContactInfoTmp,\\r\\n          faces = this.collisionCandidate,\\r\\n          distanceToGround;\\r\\n\\r\\n      var head = new THREE.Vector3(\\r\\n        this.center.x,\\r\\n        this.center.y + this.radius,\\r\\n        this.center.z\\r\\n      );\\r\\n\\r\\n      var to = new THREE.Vector3(\\r\\n        this.center.x,\\r\\n        this.center.y - 1e10,\\r\\n        this.center.z\\r\\n      );\\r\\n\\r\\n      for ( i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n        groundContactInfoTmp = ns.collision.testSegmentTriangle( head, to, faces[ i ].a, faces[ i ].b, faces[ i ].c );\\r\\n\\r\\n        if ( groundContactInfoTmp && !groundContactInfo ) {\\r\\n\\r\\n          groundContactInfo = groundContactInfoTmp;\\r\\n          groundContactInfo.face = faces[ i ];\\r\\n\\r\\n        } else if (\\r\\n          groundContactInfoTmp &&\\r\\n          groundContactInfoTmp.contactPoint.y > groundContactInfo.contactPoint.y\\r\\n        ) {\\r\\n          \\r\\n          groundContactInfo = groundContactInfoTmp;\\r\\n          groundContactInfo.face = faces[ i ];\\r\\n\\r\\n        }\\r\\n\\r\\n      }\\r\\n\\r\\n      if ( !groundContactInfo ) {\\r\\n\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      this.groundHeight = groundContactInfo.contactPoint.y;\\r\\n      this.groundNormal.copy( groundContactInfo.face.normal );\\r\\n\\r\\n      var top    = head.y;\\r\\n      var bottom = this.center.y - this.radius - this.groundPadding;\\r\\n\\r\\n      if ( this.isJumping && 0 < this.currentJumpPower ) {\\r\\n\\r\\n        this.isOnSlope  = false;\\r\\n        this.isGrounded = false;\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      this.isGrounded = ( bottom <= this.groundHeight && this.groundHeight <= top );\\r\\n      this.isOnSlope  = ( this.groundNormal.y <= this.maxSlopeGradient );\\r\\n\\r\\n      if ( this.isGrounded ) {\\r\\n\\r\\n        this.isJumping = false;\\r\\n\\r\\n      }\\r\\n\\r\\n    },\\r\\n\\r\\n    updatePosition: function ( dt ) {\\r\\n\\r\\n      var x = this.center.x + this.velocity.x * dt,\\r\\n          y = this.center.y + this.velocity.y * dt,\\r\\n          z = this.center.z + this.velocity.z * dt;\\r\\n\\r\\n      if ( this.isGrounded ) {\\r\\n\\r\\n        y = this.groundHeight + this.radius;\\r\\n\\r\\n      }\\r\\n\\r\\n      this.center.set( x, y, z );\\r\\n\\r\\n    },\\r\\n\\r\\n    collisionDetection: function () {\\r\\n\\r\\n      var i, l,\\r\\n          faces = this.collisionCandidate,\\r\\n          contactInfo;\\r\\n\\r\\n      this.contactInfo.length = 0;\\r\\n\\r\\n      for ( i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n        contactInfo = ns.collision.isIntersectionSphereTriangle( this, faces[ i ].a, faces[ i ].b, faces[ i ].c, faces[ i ].normal );\\r\\n\\r\\n        if ( !contactInfo ) {\\r\\n\\r\\n          continue;\\r\\n\\r\\n        }\\r\\n\\r\\n        contactInfo.face = faces[ i ];\\r\\n        this.contactInfo.push( contactInfo );\\r\\n\\r\\n      }\\r\\n\\r\\n    },\\r\\n\\r\\n    solvePosition: function () {\\r\\n\\r\\n      var face,\\r\\n          normal,\\r\\n          distance,\\r\\n          point1 = new THREE.Vector3(),\\r\\n          point2 = new THREE.Vector3(),\\r\\n          direction = new THREE.Vector3(),\\r\\n          plainD,\\r\\n          t,\\r\\n          translateScoped = new THREE.Vector3(),\\r\\n          translate = new THREE.Vector3(),\\r\\n          i, l;\\r\\n\\r\\n      if ( this.contactInfo.length === 0 ) {\\r\\n\\r\\n        this.object.position.copy( this.center );\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      // \\r\\n      // vs walls and sliding on the wall\\r\\n\\r\\n      for ( i = 0, l = this.contactInfo.length; i < l; i ++ ) {\\r\\n\\r\\n        face = this.contactInfo[ i ].face;\\r\\n        normal = this.contactInfo[ i ].face.normal;\\r\\n        distance = this.contactInfo[ i ].distance;\\r\\n\\r\\n        // if ( 0 <= distance ) {\\r\\n\\r\\n        //   continue;\\r\\n\\r\\n        // }\\r\\n\\r\\n        if ( this.maxSlopeGradient < normal.y ) {\\r\\n\\r\\n          // this triangle is a ground or slope, not a wall or ceil.\\r\\n          continue;\\r\\n\\r\\n        }\\r\\n\\r\\n        var isSlopeFace = ( this.maxSlopeGradient <= face.normal.y && face.normal.y < 1 );\\r\\n\\r\\n        if ( this.isJumping && 0 >= this.currentJumpPower && isSlopeFace ) {\\r\\n\\r\\n          this.isJumping = false;\\r\\n          this.isGrounded = true;\\r\\n          // console.log( 'jump end' );\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( this.isGrounded || this.isOnSlope ) {\\r\\n\\r\\n          // http://gamedev.stackexchange.com/questions/80293/how-do-i-resolve-a-sphere-triangle-collision-in-a-given-direction\\r\\n          point1.copy( normal ).multiplyScalar( -this.radius ).add( this.center );\\r\\n          direction.set( normal.x, 0, normal.z ).normalize();\\r\\n          plainD = face.a.dot( normal );\\r\\n          t = ( plainD - ( normal.x * point1.x + normal.y * point1.y + normal.z * point1.z ) ) / ( normal.x * direction.x + normal.y * direction.y + normal.z * direction.z );\\r\\n          point2.copy( direction ).multiplyScalar( t ).add( point1 );\\r\\n          translateScoped.subVectors( point2, point1 );\\r\\n\\r\\n          if ( Math.abs( translate.x ) > Math.abs( translateScoped.x ) ) {\\r\\n\\r\\n            translate.x += translateScoped.x;\\r\\n\\r\\n          }\\r\\n\\r\\n          if ( Math.abs( translate.z ) > Math.abs( translateScoped.z ) ) {\\r\\n\\r\\n            translate.z += translateScoped.z;\\r\\n\\r\\n          }\\r\\n\\r\\n          // break;\\r\\n          continue;\\r\\n\\r\\n        }\\r\\n\\r\\n      }\\r\\n\\r\\n      this.center.add( translate );\\r\\n      this.object.position.copy( this.center );\\r\\n\\r\\n    },\\r\\n\\r\\n    events: function () {\\r\\n\\r\\n      var isFirstUpdate = true,\\r\\n          wasGrounded,\\r\\n          wasOnSlope,\\r\\n          wasIdling,\\r\\n          wasRunning,\\r\\n          wasJumping;\\r\\n\\r\\n      return function () {\\r\\n\\r\\n        if ( isFirstUpdate ) {\\r\\n\\r\\n            isFirstUpdate = false;\\r\\n            wasGrounded = this.isGrounded;\\r\\n            wasOnSlope  = this.isOnSlope;\\r\\n            wasIdling   = this.isIdling;\\r\\n            wasRunning  = this.isRunning;\\r\\n            wasJumping  = this.isJumping;\\r\\n            return;\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( !wasRunning && !this.isRunning && this.isGrounded && !this.isIdling ) {\\r\\n\\r\\n            this.isIdling = true;\\r\\n            this.dispatchEvent( { type: 'startIdling' } );\\r\\n\\r\\n        } else if (\\r\\n          ( !wasRunning && this.isRunning && !this.isJumping && this.isGrounded ) ||\\r\\n          ( !wasGrounded && this.isGrounded && this.isRunning ) ||\\r\\n          ( wasOnSlope && !this.isOnSlope && this.isRunning && this.isGrounded )\\r\\n        ) {\\r\\n\\r\\n            this.isIdling = false;\\r\\n            this.dispatchEvent( { type: 'startRunning' } );\\r\\n          \\r\\n        } else if ( !wasJumping && this.isJumping ) {\\r\\n\\r\\n            this.isIdling = false;\\r\\n            this.dispatchEvent( { type: 'startJumping' } );\\r\\n          \\r\\n        } else if ( !wasOnSlope && this.isOnSlope ) {\\r\\n\\r\\n            this.dispatchEvent( { type: 'startSliding' } );\\r\\n          \\r\\n        } else if ( wasGrounded && !this.isGrounded && !this.isJumping ) {\\r\\n\\r\\n            this.dispatchEvent( { type: 'startFalling' } );\\r\\n          \\r\\n        }\\r\\n\\r\\n        if ( !wasGrounded && this.isGrounded ) {\\r\\n\\r\\n            this.dispatchEvent( { type: 'endJumping' } );\\r\\n          \\r\\n        }\\r\\n\\r\\n        wasGrounded = this.isGrounded;\\r\\n        wasOnSlope  = this.isOnSlope;\\r\\n        wasIdling   = this.isIdling;\\r\\n        wasRunning  = this.isRunning;\\r\\n        wasJumping  = this.isJumping;\\r\\n\\r\\n      };\\r\\n\\r\\n    }(),\\r\\n\\r\\n    setDirection : function () {\\r\\n\\r\\n\\r\\n\\r\\n    },\\r\\n\\r\\n    jump: function () {\\r\\n      \\r\\n      if ( this.isJumping || !this.isGrounded || this.isOnSlope ) {\\r\\n\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      // since ios dose not support porformance.now()\\r\\n      // this.jumpStartTime = performance.now();\\r\\n      this.jumpStartTime = Date.now();\\r\\n      this.currentJumpPower = 0.01;\\r\\n      this.isJumping = true;\\r\\n\\r\\n    },\\r\\n\\r\\n    updateJumping: function () {\\r\\n\\r\\n      var JUMP_DURATION = 1500;\\r\\n\\r\\n      if ( !this.isJumping ) {\\r\\n\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      // since ios dose not support porformance.now()\\r\\n      // var elapsed = performance.now() - this.jumpStartTime;\\r\\n      var elapsed = Date.now() - this.jumpStartTime;\\r\\n      var progress = elapsed / JUMP_DURATION;\\r\\n      this.currentJumpPower = Math.cos( Math.min( progress, 1 ) * Math.PI );\\r\\n\\r\\n    }\\r\\n\\r\\n  }\\r\\n\\r\\n} )( THREE, MW );\\r\\n\\r\\n// @author yomotsu\\r\\n// MIT License\\r\\n\\r\\nMW.AnimationController = function ( mesh ) {\\r\\n\\r\\n  this.mesh   = mesh;\\r\\n  this.motion = {};\\r\\n  this.mixer  = new THREE.AnimationMixer( mesh );\\r\\n  this.currentMotionName = \\\"\\\";\\r\\n\\r\\n  var i, l, anim;\\r\\n\\r\\n  for ( i = 0, l = this.mesh.geometry.animations.length; i < l; i ++ ) {\\r\\n\\r\\n    anim = this.mesh.geometry.animations[ i ];\\r\\n    this.motion[ anim.name ] = this.mixer.clipAction( anim );\\r\\n    this.motion[ anim.name ].setEffectiveWeight( 1 );\\r\\n\\r\\n  }\\r\\n  \\r\\n};\\r\\n\\r\\nMW.AnimationController.prototype = {\\r\\n\\r\\n  play: function ( name ) {\\r\\n\\r\\n    if ( this.currentMotionName === name ) { return; }\\r\\n\\r\\n    if ( this.motion[ this.currentMotionName ] ) {\\r\\n\\r\\n      var from = this.motion[ this.currentMotionName ].play();\\r\\n      var to   = this.motion[ name ].play();\\r\\n\\r\\n      from.enabled = true;\\r\\n      to.enabled = true;\\r\\n\\r\\n      from.crossFadeTo( to, .3 );\\r\\n\\r\\n    } else {\\r\\n\\r\\n      this.motion[ name ].enabled = true;\\r\\n      this.motion[ name ].play();\\r\\n\\r\\n    }\\r\\n\\r\\n    this.currentMotionName = name;\\r\\n\\r\\n  },\\r\\n\\r\\n  turn: function () {\\r\\n\\r\\n    var DURATION  = 200;\\r\\n    var TAU = 2 * Math.PI;\\r\\n\\r\\n    var mod = function ( a, n ) { return ( a % n + n ) % n; };\\r\\n\\r\\n    var getDeltaAngle = function ( current, target ) {\\r\\n\\r\\n      var a = mod( ( current - target ), TAU );\\r\\n      var b = mod( ( target - current ), TAU );\\r\\n\\r\\n      return a < b ? -a : b;\\r\\n\\r\\n    };\\r\\n\\r\\n    return function ( rad, immediate ) {\\r\\n\\r\\n\\r\\n      var that       = this;\\r\\n      var progress   = 0;\\r\\n      var prevRotY   = this.mesh.rotation.y;\\r\\n      var targetRotY = rad;\\r\\n      var deltaY     = getDeltaAngle( prevRotY, targetRotY );\\r\\n      // var duration   = Math.abs( deltaY ) * 100;\\r\\n      var start      = Date.now();\\r\\n      var end        = start + DURATION;\\r\\n\\r\\n      if ( immediate ) {\\r\\n\\r\\n        this.mesh.rotation.y = targetRotY;\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      if ( this._targetRotY === targetRotY ) { return; }\\r\\n\\r\\n      this._targetRotY = targetRotY;\\r\\n\\r\\n      ( function () {\\r\\n\\r\\n        var _targetRotY = targetRotY;\\r\\n\\r\\n        ( function interval () {\\r\\n\\r\\n          var now = Date.now();\\r\\n          var isAborted = _targetRotY !== that._targetRotY;\\r\\n\\r\\n          if ( isAborted ) { return; }\\r\\n\\r\\n          if ( now >= end ) {\\r\\n\\r\\n            that.mesh.rotation.y = _targetRotY;\\r\\n            delete that._targetRotY;\\r\\n            return;\\r\\n\\r\\n          }\\r\\n\\r\\n          requestAnimationFrame( interval );\\r\\n          progress = ( now - start ) / DURATION;\\r\\n          that.mesh.rotation.y = prevRotY + deltaY * progress;\\r\\n\\r\\n        } )();\\r\\n\\r\\n      } )();\\r\\n\\r\\n    }\\r\\n\\r\\n  }(),\\r\\n\\r\\n  update: function ( delta ) {\\r\\n\\r\\n    this.mixer.update( delta );\\r\\n\\r\\n  }\\r\\n\\r\\n};\\r\\n\\r\\n// @author yomotsu\\r\\n// MIT License\\r\\n\\r\\n;( function ( THREE, ns ) {\\r\\n\\r\\n  'use strict';\\r\\n\\r\\n  var KEY_W     = 87,\\r\\n      KEY_UP    = 38,\\r\\n      KEY_S     = 83,\\r\\n      KEY_DOWN  = 40,\\r\\n      KEY_A     = 65,\\r\\n      KEY_LEFT  = 37,\\r\\n      KEY_D     = 68,\\r\\n      KEY_RIGHT = 39,\\r\\n      KEY_SPACE = 32,\\r\\n      KEY_R     = 82; // hack //\\r\\n\\r\\n  var DEG_0   = THREE.Math.degToRad(   0 ),\\r\\n      DEG_45  = THREE.Math.degToRad(  45 ),\\r\\n      DEG_90  = THREE.Math.degToRad(  90 ),\\r\\n      DEG_135 = THREE.Math.degToRad( 135 ),\\r\\n      DEG_180 = THREE.Math.degToRad( 180 ),\\r\\n      DEG_225 = THREE.Math.degToRad( 225 ),\\r\\n      DEG_270 = THREE.Math.degToRad( 270 ),\\r\\n      DEG_315 = THREE.Math.degToRad( 315 ),\\r\\n      DEG_360 = THREE.Math.degToRad( 360 );\\r\\n\\r\\n  ns.KeyInputControl = function () {\\r\\n    \\r\\n    Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\\r\\n\\r\\n    this.isDisabled = false;\\r\\n\\r\\n    this.isUp    = false;\\r\\n    this.isDown  = false;\\r\\n    this.isLeft  = false;\\r\\n    this.isRight = false;\\r\\n    this.inRun   = false; // hack.\\r\\n    this.isMoveKeyHolded = false;\\r\\n    this.frontAngle = 0;\\r\\n\\r\\n    this._keydownListener = onkeydown.bind( this );\\r\\n    this._keyupListener   = onkeyup.bind( this );\\r\\n    this._blurListener    = onblur.bind( this );\\r\\n\\r\\n    window.addEventListener( 'keydown', this._keydownListener, false );\\r\\n    window.addEventListener( 'keyup',   this._keyupListener,   false );\\r\\n    window.addEventListener( 'blur',    this._blurListener,    false );\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.KeyInputControl.prototype.jump = function () {\\r\\n\\r\\n    this.dispatchEvent( { type: 'jumpkeypress' } );\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.KeyInputControl.prototype.updateAngle = function () {\\r\\n\\r\\n    var up    = this.isUp;\\r\\n    var down  = this.isDown;\\r\\n    var left  = this.isLeft;\\r\\n    var right = this.isRight;\\r\\n\\r\\n    if (  up && !left && !down && !right )      { this.frontAngle = DEG_0  ; }\\r\\n    else if (  up &&  left && !down && !right ) { this.frontAngle = DEG_45 ; }\\r\\n    else if ( !up &&  left && !down && !right ) { this.frontAngle = DEG_90 ; }\\r\\n    else if ( !up &&  left &&  down && !right ) { this.frontAngle = DEG_135; }\\r\\n    else if ( !up && !left &&  down && !right ) { this.frontAngle = DEG_180; }\\r\\n    else if ( !up && !left &&  down &&  right ) { this.frontAngle = DEG_225; }\\r\\n    else if ( !up && !left && !down &&  right ) { this.frontAngle = DEG_270; }\\r\\n    else if (  up && !left && !down &&  right ) { this.frontAngle = DEG_315; }\\r\\n\\r\\n  };\\r\\n\\r\\n\\r\\n  function onkeydown ( e ) {\\r\\n\\r\\n    if ( this.isDisabled ) { return; }\\r\\n\\r\\n    switch ( e.keyCode ) {\\r\\n\\r\\n      case KEY_W :\\r\\n      case KEY_UP :\\r\\n        this.isUp = true;\\r\\n        break;\\r\\n\\r\\n      case KEY_S :\\r\\n      case KEY_DOWN :\\r\\n        this.isDown = true;\\r\\n        break;\\r\\n\\r\\n      case KEY_A :\\r\\n      case KEY_LEFT :\\r\\n        this.isLeft = true;\\r\\n        break;\\r\\n\\r\\n      case KEY_D :\\r\\n      case KEY_RIGHT :\\r\\n        this.isRight = true;\\r\\n        break;\\r\\n\\r\\n      case KEY_SPACE :\\r\\n        this.jump();\\r\\n        break;\\r\\n\\r\\n      default:\\r\\n        return;\\r\\n\\r\\n    }\\r\\n    \\r\\n    var prevAngle = this.frontAngle;\\r\\n\\r\\n    this.updateAngle();\\r\\n\\r\\n    if ( prevAngle !== this.frontAngle ) {\\r\\n\\r\\n      this.dispatchEvent( { type: 'movekeychange' } );\\r\\n\\r\\n    }\\r\\n\\r\\n    if (\\r\\n      ( this.isUp || this.isDown || this.isLeft || this.isRight ) &&\\r\\n      !this.isMoveKeyHolded\\r\\n    ) {\\r\\n\\r\\n      this.isMoveKeyHolded = true;\\r\\n      this.dispatchEvent( { type: 'movekeyon' } );\\r\\n\\r\\n    }\\r\\n\\r\\n  }\\r\\n\\r\\n  function onkeyup ( e ) {\\r\\n\\r\\n    if ( this.isDisabled ) { return; }\\r\\n\\r\\n    switch ( e.keyCode ) {\\r\\n\\r\\n      case KEY_W :\\r\\n      case KEY_UP :\\r\\n        this.isUp = false;\\r\\n        break;\\r\\n\\r\\n      case KEY_S :\\r\\n      case KEY_DOWN :\\r\\n        this.isDown = false;\\r\\n        break;\\r\\n        \\r\\n      case KEY_A :\\r\\n      case KEY_LEFT :\\r\\n        this.isLeft = false;\\r\\n        break;\\r\\n\\r\\n      case KEY_D :\\r\\n      case KEY_RIGHT :\\r\\n        this.isRight = false;\\r\\n        break;\\r\\n\\r\\n      case KEY_SPACE :\\r\\n        break;\\r\\n\\r\\n      case KEY_R:\\r\\n        this.inRun = !this.inRun; // hack //  console.log(\\\"case KEY_R:\\\", e.keyCode, this.inRun);\\r\\n        break;\\r\\n\\r\\n      default:\\r\\n        return;\\r\\n\\r\\n    }\\r\\n    \\r\\n    var prevAngle = this.frontAngle;\\r\\n\\r\\n    this.updateAngle();\\r\\n\\r\\n    if ( prevAngle !== this.frontAngle ) {\\r\\n\\r\\n      this.dispatchEvent( { type: 'movekeychange' } );\\r\\n\\r\\n    }\\r\\n\\r\\n    if ( !this.isUp && !this.isDown && !this.isLeft && !this.isRight &&\\r\\n      (\\r\\n           e.keyCode === KEY_W\\r\\n        || e.keyCode === KEY_UP\\r\\n        || e.keyCode === KEY_S\\r\\n        || e.keyCode === KEY_DOWN\\r\\n        || e.keyCode === KEY_A\\r\\n        || e.keyCode === KEY_LEFT\\r\\n        || e.keyCode === KEY_D\\r\\n        || e.keyCode === KEY_RIGHT\\r\\n      )\\r\\n    ) {\\r\\n\\r\\n      this.isMoveKeyHolded = false;\\r\\n      this.dispatchEvent( { type: 'movekeyoff' } );\\r\\n\\r\\n    }\\r\\n\\r\\n  }\\r\\n\\r\\n  function onblur ( e ) {\\r\\n\\r\\n    this.isUp    = false;\\r\\n    this.isDown  = false;\\r\\n    this.isLeft  = false;\\r\\n    this.isRight = false;\\r\\n//  this.inRun   = false; // hack // DO NOT SET TO FALSE ON BLUR. //\\r\\n    \\r\\n    if ( this.isMoveKeyHolded ) {\\r\\n\\r\\n      this.isMoveKeyHolded = false;\\r\\n      this.dispatchEvent( { type: 'movekeyoff' } );\\r\\n\\r\\n    }\\r\\n\\r\\n  }\\r\\n\\r\\n} )( THREE, MW );\\r\\n\\r\\n// @author yomotsu\\r\\n// MIT License\\r\\n\\r\\n;( function ( THREE, ns ) {\\r\\n\\r\\n  'use strict';\\r\\n\\r\\n  var PI2     = Math.PI * 2,\\r\\n      PI_HALF = Math.PI / 2;\\r\\n\\r\\n  var modulo = function ( n, d ) {\\r\\n\\r\\n    return ( ( n % d ) + d ) % d;\\r\\n\\r\\n  };\\r\\n\\r\\n  // camera              isntance of THREE.Camera\\r\\n  // trackObject         isntance of THREE.Object3D\\r\\n  // params.el           DOM element\\r\\n  // params.radius       number\\r\\n  // params.minRadius    number\\r\\n  // params.maxRadius    number\\r\\n  // params.rigidObjects array of inctances of THREE.Mesh\\r\\n  ns.TPSCameraControl = function ( camera, trackObject, params ) {\\r\\n\\r\\n    Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\\r\\n    this.camera = camera;\\r\\n    this.trackObject  = trackObject;\\r\\n    this.el           = params && params.el || document.body;\\r\\n    this.offset       = params && params.offset || new THREE.Vector3( 0, 0, 0 ),\\r\\n    this.radius       = params && params.radius    || 10;\\r\\n    this.minRadius    = params && params.minRadius || 1;\\r\\n    this.maxRadius    = params && params.maxRadius || 30;\\r\\n    this.rigidObjects = params && params.rigidObjects || [];\\r\\n    this.lat   = 0;\\r\\n    this.lon   = 0;\\r\\n    this.phi   = 0; // angle of zenith\\r\\n    this.theta = 0; // angle of azimuth\\r\\n    this.mouseAccelerationX = params && params.mouseAccelerationX !== undefined ? params.mouseAccelerationX : 100;\\r\\n    this.mouseAccelerationY = params && params.mouseAccelerationY !== undefined ? params.mouseAccelerationY : 30;\\r\\n    this._pointerStart = { x: 0, y: 0 };\\r\\n    this._pointerLast  = { x: 0, y: 0 };\\r\\n\\r\\n    this.setNearPlainCornersWithPadding();\\r\\n    this.update();\\r\\n\\r\\n    this._mousedownListener = onmousedown.bind( this );\\r\\n    this._mouseupListener   = onmouseup.bind( this );\\r\\n    this._mousedragListener = onmousedrag.bind( this );\\r\\n    this._scrollListener    = onscroll.bind( this );\\r\\n\\r\\n    this.el.addEventListener( 'mousedown', this._mousedownListener, false );\\r\\n    this.el.addEventListener( 'mouseup',   this._mouseupListener,   false );\\r\\n    this.el.addEventListener( 'mousewheel',     this._scrollListener, false );\\r\\n    this.el.addEventListener( 'DOMMouseScroll', this._scrollListener, false );\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.TPSCameraControl.prototype = {\\r\\n\\r\\n    constructor: ns.TPSCameraControl,\\r\\n\\r\\n    update: function () {\\r\\n\\r\\n      var position,\\r\\n          distance;\\r\\n\\r\\n      this._center = new THREE.Vector3(\\r\\n        this.trackObject.matrixWorld.elements[ 12 ] + this.offset.x,\\r\\n        this.trackObject.matrixWorld.elements[ 13 ] + this.offset.y,\\r\\n        this.trackObject.matrixWorld.elements[ 14 ] + this.offset.z\\r\\n      );\\r\\n      position = new THREE.Vector3(\\r\\n        Math.cos( this.phi ) * Math.cos( this.theta + PI_HALF ),\\r\\n        Math.sin( this.phi ),\\r\\n        Math.cos( this.phi ) * Math.sin( this.theta + PI_HALF )\\r\\n      );\\r\\n      distance = this.collisionTest( position.clone().normalize() );\\r\\n      position.multiplyScalar( distance );\\r\\n      position.add( this._center );\\r\\n      this.camera.position.copy( position );\\r\\n\\r\\n      if ( this.lat === 90 ) {\\r\\n\\r\\n        this.camera.up.set(\\r\\n          Math.cos( this.theta + Math.PI ),\\r\\n          0,\\r\\n          Math.sin( this.theta + Math.PI )\\r\\n        );\\r\\n\\r\\n      } else if ( this.lat === -90 ) {\\r\\n\\r\\n        this.camera.up.set(\\r\\n          Math.cos( this.theta ),\\r\\n          0,\\r\\n          Math.sin( this.theta )\\r\\n        );\\r\\n\\r\\n      } else {\\r\\n\\r\\n        this.camera.up.set( 0, 1, 0 );\\r\\n\\r\\n      }\\r\\n\\r\\n      this.camera.lookAt( this._center );\\r\\n      this.dispatchEvent( { type: 'updated' } );\\r\\n\\r\\n    },\\r\\n\\r\\n    getFrontAngle: function () {\\r\\n\\r\\n      return PI2 + this.theta;\\r\\n\\r\\n    },\\r\\n\\r\\n    setNearPlainCornersWithPadding: function () {\\r\\n\\r\\n      var near = this.camera.near,\\r\\n          halfFov = this.camera.fov * 0.5,\\r\\n          h = ( Math.tan( THREE.Math.degToRad( halfFov ) ) * near ),\\r\\n          w = h * this.camera.aspect;\\r\\n\\r\\n      this.nearPlainCornersWithPadding = [\\r\\n        new THREE.Vector3( -w - near, -h - near, 0 ),\\r\\n        new THREE.Vector3(  w + near, -h - near, 0 ),\\r\\n        new THREE.Vector3(  w + near,  h + near, 0 ),\\r\\n        new THREE.Vector3( -w - near,  h + near, 0 )\\r\\n      ];\\r\\n\\r\\n    },\\r\\n\\r\\n    setLatLon: function ( lat, lon ) {\\r\\n\\r\\n      this.lat = lat >  90 ?  90 :\\r\\n                 lat < -90 ? -90 :\\r\\n                 lat;\\r\\n      this.lon = lon < 0 ? 360 + lon % 360 : lon % 360;\\r\\n\\r\\n      this.phi   =  THREE.Math.degToRad( this.lat );\\r\\n      this.theta = -THREE.Math.degToRad( this.lon );\\r\\n\\r\\n    },\\r\\n\\r\\n    collisionTest: function ( direction ) {\\r\\n\\r\\n      var i,\\r\\n          distance = this.radius,\\r\\n          nearPlainCorner,\\r\\n          rotationMatrix = new THREE.Matrix4(),\\r\\n          rotationX = new THREE.Matrix4().makeRotationX( this.phi ),\\r\\n          rotationY = new THREE.Matrix4().makeRotationY( this.theta ),\\r\\n          origin,\\r\\n          raycaster,\\r\\n          intersects;\\r\\n\\r\\n      rotationMatrix.multiplyMatrices( rotationX, rotationY );\\r\\n\\r\\n      for ( i = 0; i < 4; i ++ ) {\\r\\n\\r\\n        nearPlainCorner = this.nearPlainCornersWithPadding[ i ].clone();\\r\\n        nearPlainCorner.applyMatrix4( rotationMatrix );\\r\\n\\r\\n        origin = new THREE.Vector3(\\r\\n          this._center.x + nearPlainCorner.x,\\r\\n          this._center.y + nearPlainCorner.y,\\r\\n          this._center.z + nearPlainCorner.z\\r\\n        );\\r\\n        raycaster = new THREE.Raycaster(\\r\\n          origin,           // origin\\r\\n          direction,        // direction\\r\\n          this.camera.near, // near\\r\\n          this.radius       // far\\r\\n        );\\r\\n        intersects = raycaster.intersectObjects( this.rigidObjects );\\r\\n\\r\\n        if ( intersects.length !== 0 && intersects[ 0 ].distance < distance ) {\\r\\n\\r\\n          distance = intersects[ 0 ].distance;\\r\\n\\r\\n        }\\r\\n\\r\\n      }\\r\\n\\r\\n      return distance;\\r\\n\\r\\n    }\\r\\n\\r\\n  };\\r\\n\\r\\n  function onmousedown ( event ) {\\r\\n\\r\\n    this.dispatchEvent( { type: 'mousedown' } );\\r\\n    this._pointerStart.x = event.clientX;\\r\\n    this._pointerStart.y = event.clientY;\\r\\n    this._pointerLast.x = this.lon;\\r\\n    this._pointerLast.y = this.lat;\\r\\n    this.el.removeEventListener( 'mousemove', this._mousedragListener, false );\\r\\n    this.el.addEventListener( 'mousemove', this._mousedragListener, false );\\r\\n//  document.body.className += ' js-TPSCameraDragging';\\r\\n    document.body.classList.add(\\\"js-TPSCameraDragging\\\");\\r\\n\\r\\n  }\\r\\n\\r\\n  function onmouseup () {\\r\\n\\r\\n    this.dispatchEvent( { type: 'mouseup' } );\\r\\n    this.el.removeEventListener( 'mousemove', this._mousedragListener, false );\\r\\n//  document.body.className = document.body.className.replace( / js-TPSCameraDragging/g, '' );\\r\\n    document.body.classList.remove(\\\"js-TPSCameraDragging\\\");\\r\\n\\r\\n  }\\r\\n\\r\\n  function onmousedrag ( event ) {\\r\\n\\r\\n    var w = this.el.offsetWidth,\\r\\n        h = this.el.offsetHeight,\\r\\n        x = ( this._pointerStart.x - event.clientX ) / w * 2,\\r\\n        y = ( this._pointerStart.y - event.clientY ) / h * 2;\\r\\n\\r\\n    this.setLatLon(\\r\\n      this._pointerLast.y + y * this.mouseAccelerationY,\\r\\n      this._pointerLast.x + x * this.mouseAccelerationX\\r\\n    );\\r\\n\\r\\n  }\\r\\n\\r\\n  function onscroll ( event ) {\\r\\n\\r\\n    event.preventDefault();\\r\\n\\r\\n    if ( event.wheelDeltaY ) {\\r\\n\\r\\n      // WebKit\\r\\n      this.radius -= event.wheelDeltaY * 0.05;\\r\\n\\r\\n    } else if ( event.wheelDelta ) {\\r\\n\\r\\n      // IE\\r\\n      this.radius -= event.wheelDelta * 0.05 ;\\r\\n\\r\\n    } else if ( event.detail ) {\\r\\n\\r\\n      // Firefox\\r\\n      this.radius += event.detail;\\r\\n\\r\\n    }\\r\\n\\r\\n    this.radius = Math.max( this.radius, this.minRadius );\\r\\n    this.radius = Math.min( this.radius, this.maxRadius );\\r\\n\\r\\n  }\\r\\n\\r\\n} )( THREE, MW );\\r\\n\""
		},
		{
			"name": "VirtualInput.js",
			"source": "\"/*!\\r\\n * @author yomotsu http://yomotsu.net/\\r\\n * MIT License\\r\\n */\\r\\n\\r\\nvirtualInput = {};\\r\\n\\r\\n( function ( ns ) {\\r\\n\\r\\n    var _ua = function () {\\r\\n        return {\\r\\n            Touch: typeof document.ontouchstart != \\\"undefined\\\",\\r\\n            Pointer: window.navigator.pointerEnabled,\\r\\n            MSPoniter: window.navigator.msPointerEnabled\\r\\n        }\\r\\n    };\\r\\n\\r\\n    ns._start = \\\"pointerdown MSPointerDown touchstart mousedown\\\";\\r\\n    ns._move  = \\\"pointermove MSPointerMove touchmove  mousemove\\\";\\r\\n    ns._end   = \\\"pointerup   MSPointerUp   touchend   mouseup\\\";\\r\\n\\r\\n    ns.Joystick = function ( $container, size, params ) {\\r\\n\\r\\n        Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\\r\\n\\r\\n        this.angle = 0;\\r\\n        this.position = { x: 0, y: 0 };\\r\\n        this.pointerId = null;\\r\\n        this.isActive = false;\\r\\n\\r\\n        this.width = size * 2;\\r\\n        this.halfWidth = size;\\r\\n\\r\\n        var that = this;\\r\\n        var id = params && params.id ? params.id  : '';\\r\\n        var template = [\\r\\n          '<div class=\\\"gameinput-joystick\\\" id=\\\"' + id + '\\\">',\\r\\n            '<div class=\\\"gameinput-joystick__button\\\"></div>',\\r\\n            '<svg class=\\\"gameinput-frame\\\" width=\\\"' + this.width + '\\\" height=\\\"' + this.width + '\\\" viewbox=\\\"0 0 64 64\\\">',\\r\\n              '<polygon points=\\\"32 19 34 21 30 21\\\" fill=\\\"#fff\\\"></polygon>',\\r\\n              '<polygon points=\\\"45 32 43 34 43 30\\\" fill=\\\"#fff\\\"></polygon>',\\r\\n              '<polygon points=\\\"32 45 34 43 30 43\\\" fill=\\\"#fff\\\"></polygon>',\\r\\n              '<polygon points=\\\"19 32 21 34 21 30\\\" fill=\\\"#fff\\\"></polygon>',\\r\\n              '<circle cx=\\\"32\\\" cy=\\\"32\\\" r=\\\"16\\\" fill=\\\"none\\\" stroke=\\\"#fff\\\" stroke-width=\\\"' + ( this.halfWidth / 64 ) + '\\\"></circle>',\\r\\n            '</svg>',\\r\\n          '</div>'\\r\\n        ].join( '' );\\r\\n\\r\\n        var $win = $( window );\\r\\n        this.$all = $( template );\\r\\n        this.$button = this.$all.find( \\\".gameinput-joystick__button\\\" );\\r\\n        $container.append( this.$all );\\r\\n\\r\\n        this.$all.css({\\r\\n            width:  this.width,\\r\\n            height: this.width\\r\\n        });\\r\\n\\r\\n        this.$button.css({\\r\\n            width:  size * .6,\\r\\n            height: size * .6\\r\\n        });\\r\\n\\r\\n        this.offset = this.$all.offset();\\r\\n        this.buttonRadius = this.$button.width() / 2;\\r\\n        this.frameRadius = size / 2;\\r\\n    //  this.position = { x: 0, y: 0 };\\r\\n\\r\\n        var onbuttondown = function ( event ) {\\r\\n\\r\\n            event.preventDefault();\\r\\n            event.stopPropagation();\\r\\n            \\r\\n            that.dispatchEvent( { type: 'active' } );\\r\\n            that.isActive = true;\\r\\n            \\r\\n            if ( event.originalEvent.pointerId ) {\\r\\n            \\r\\n                that.pointerId = event.originalEvent.pointerId;\\r\\n            \\r\\n            } else if ( event.originalEvent.changedTouches ) {\\r\\n            \\r\\n                that.pointerId = event.originalEvent.changedTouches[ event.originalEvent.changedTouches.length - 1 ].identifier;\\r\\n            \\r\\n            }\\r\\n            \\r\\n            var coordinate = that.getEventCoordinate( event );\\r\\n            \\r\\n            if ( !coordinate ) { return; }\\r\\n            \\r\\n            that.setPosition( coordinate.x, coordinate.y );\\r\\n            \\r\\n            $win.on( ns._move, onbuttonmove );\\r\\n            $win.on( ns._end,  onbuttonup );\\r\\n\\r\\n        };\\r\\n\\r\\n        var onbuttonmove = function ( event ) {\\r\\n\\r\\n            event.preventDefault();\\r\\n            event.stopPropagation();\\r\\n            \\r\\n            var coordinate = that.getEventCoordinate( event );\\r\\n            \\r\\n            if ( !coordinate ) {\\r\\n                return;\\r\\n            }\\r\\n            \\r\\n            that.setPosition( coordinate.x, coordinate.y );\\r\\n\\r\\n        };\\r\\n\\r\\n        var onbuttonup = function ( event ) {\\r\\n\\r\\n            event.stopPropagation();\\r\\n\\r\\n            var wasEventHappend;\\r\\n\\r\\n            if ( event.originalEvent.pointerId ) {\\r\\n\\r\\n                if ( that.pointerId !== event.originalEvent.pointerId ) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n            } else if ( event.originalEvent.changedTouches ) {\\r\\n            \\r\\n                for ( i = 0, l = event.originalEvent.changedTouches.length; i < l; i ++ ) {\\r\\n                \\r\\n                    if ( that.pointerId === event.originalEvent.changedTouches[ i ].identifier ) {\\r\\n                        wasEventHappend = true;\\r\\n                        break;\\r\\n                    }\\r\\n                \\r\\n                    if ( !wasEventHappend ) {\\r\\n                        return;\\r\\n                    }\\r\\n                \\r\\n                }\\r\\n            \\r\\n            }\\r\\n\\r\\n            that.dispatchEvent( { type: \\\"disactive\\\" } );\\r\\n            that.isActive = false;\\r\\n            that.setPosition( 0, 0 );\\r\\n            $win.off( ns._move, onbuttonmove );\\r\\n            $win.off( ns._end,  onbuttonup );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setCSSPosition( 0, 0 );\\r\\n        this.$all.on( ns._start, onbuttondown );\\r\\n\\r\\n        $win.on( \\\"resize\\\", function () {\\r\\n\\r\\n            that.offset = that.$all.offset();\\r\\n\\r\\n        });\\r\\n\\r\\n    };\\r\\n\\r\\n    ns.Joystick.prototype.getLength = function ( x, y ) {\\r\\n        return Math.sqrt( Math.pow( x, 2 ) + Math.pow( y, 2 ) );\\r\\n    };\\r\\n\\r\\n    ns.Joystick.prototype.getAngle = function ( lengthX, lengthY ) {\\r\\n\\r\\n        if ( lengthX === 0 && lengthY === 0 ) {\\r\\n          return this.angle;\\r\\n        }\\r\\n\\r\\n        var angle = Math.atan( lengthY / lengthX );\\r\\n\\r\\n        if ( 0 > lengthX && 0 <= lengthY ) {\\r\\n          //the second quadrant\\r\\n          angle += Math.PI;\\r\\n\\r\\n        } else if ( 0 > lengthX && 0 > lengthY ) {\\r\\n          //the third quadrant\\r\\n          angle += Math.PI;\\r\\n\\r\\n        } else if ( 0 <= lengthX && 0 > lengthY ) {\\r\\n          //the fourth quadrant\\r\\n          angle += Math.PI * 2;\\r\\n\\r\\n        }\\r\\n\\r\\n        this.angle = angle;\\r\\n        return angle;\\r\\n\\r\\n    };\\r\\n\\r\\n    ns.Joystick.prototype.getPointOnRadius = function ( angle ) {\\r\\n\\r\\n        return {\\r\\n          x: Math.cos( angle ),\\r\\n          y: Math.sin( angle )\\r\\n        };\\r\\n\\r\\n    };\\r\\n\\r\\n    ns.Joystick.prototype.getEventCoordinate = function ( event ) {\\r\\n\\r\\n        var x, y, _event = null, i, l;\\r\\n\\r\\n        if ( event.originalEvent.pointerId ) {\\r\\n\\r\\n            if ( this.pointerId === event.originalEvent.pointerId ) {\\r\\n                _event = event.originalEvent;\\r\\n            }\\r\\n\\r\\n        } else if ( event.originalEvent.changedTouches ) {\\r\\n\\r\\n            for ( i = 0, l = event.originalEvent.changedTouches.length; i < l; i ++ ) {\\r\\n                if ( this.pointerId === event.originalEvent.changedTouches[ i ].identifier ) {\\r\\n                  _event = event.originalEvent.changedTouches[ i ];\\r\\n                }\\r\\n            }\\r\\n\\r\\n        } else {\\r\\n\\r\\n            _event = event;\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( _event === null ) {\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        x = (   ( _event.clientX - this.offset.left ) - this.halfWidth ) / this.halfWidth * 2;\\r\\n        y = ( - ( _event.clientY - this.offset.top  ) + this.halfWidth ) / this.halfWidth * 2;\\r\\n\\r\\n        return { x: x, y: y };\\r\\n\\r\\n    };\\r\\n\\r\\n    ns.Joystick.prototype.setPosition = function ( x, y ) {\\r\\n\\r\\n        this.position.x = x;\\r\\n        this.position.y = y;\\r\\n        var length = this.getLength( x, y );\\r\\n        var angle = this.getAngle( x, y );\\r\\n\\r\\n        if ( 1 >= length ) {\\r\\n            this.setCSSPosition( x, y );\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        var pointOnRadius = this.getPointOnRadius( angle );\\r\\n        this.setCSSPosition( pointOnRadius.x, pointOnRadius.y );\\r\\n\\r\\n    };\\r\\n\\r\\n    ns.Joystick.prototype.setCSSPosition = function ( x, y ) {\\r\\n\\r\\n        this.$button.css( {\\r\\n            left: ( this.halfWidth + x * this.frameRadius - this.buttonRadius ),\\r\\n            top:  ( this.halfWidth - y * this.frameRadius - this.buttonRadius )\\r\\n        });\\r\\n\\r\\n    };\\r\\n\\r\\n    ns.Button = function ( $container, size, params ) {\\r\\n\\r\\n        Object.assign( this, THREE.EventDispatcher.prototype );  // THREE.EventDispatcher.prototype.apply( this );\\r\\n\\r\\n        var that = this;\\r\\n        var id = params && params.id ? params.id  : \\\"\\\";\\r\\n        var label = params.label;\\r\\n        var template = [\\r\\n          '<div class=\\\"gameinput-button\\\" id=\\\"' + id + '\\\">',\\r\\n            '<div class=\\\"gameinput-button__inner\\\">',\\r\\n              label,\\r\\n            '</div>',\\r\\n          '</div>'\\r\\n        ].join( \\\"\\\" );\\r\\n        var $button = $( template );\\r\\n        $container.append( $button );\\r\\n        $button.css( {\\r\\n            width: size,\\r\\n            height: size\\r\\n        });\\r\\n\\r\\n        $button.on( ns._start, function () {\\r\\n            that.dispatchEvent( { type: \\\"press\\\" } );\\r\\n        });\\r\\n\\r\\n    };\\r\\n\\r\\n})( virtualInput );\\r\\n\""
		},
		{
			"name": "AW3D-v0.4.js",
			"source": "\"//  AW3D.js (v0.4.0)\\n\\n\\tAW3D = { VERSION: \\\"0.4.0\\\" };\\n\\n//  Player Holder.\\n    AW3D.PlayerHolder = function ( name ){\\n        var holder = new THREE.Object3D();\\n        holder.position.set( 0, 1, 0 );\\n        holder.name = name || \\\"PLAYER HOLDER\\\";\\n        return holder;\\n    };\\n\\n//  Player Holder Helper.\\n    AW3D.PlayerHolderHelper = function ( name ){\\n        var helper = new THREE.BoxHelper();\\n        helper.name = name || \\\"HOLDER HELPER\\\";\\n        helper.visible = true;\\n        return helper;\\n    };\\n\\n//  Player Controller Direction pointer.\\n    AW3D.DirectionPointer = function ( name ){\\n        var geometry = new THREE.CylinderGeometry( 0, 1, 20, 12 );\\n\\t//  BE CAREFULL: is not \\\"mesh.rotation.y = -Math.PI\\\".\\n        geometry.rotateX( Math.PI / 2 );  //  important!\\n        var material = new THREE.MeshStandardMaterial({color:0x00ff00});\\n        var pointer = new THREE.Mesh(geometry, material);\\n        pointer.position.set(0, 15, 0);\\n        pointer.name = name || \\\"PLAYER DIRECTION\\\";\\n        pointer.visible = true;\\n        return pointer;\\n    };\\n\\n//  Player Sphere.\\n    AW3D.PlayerSphere = function ( name ){\\n        var sphere = new THREE.Mesh(\\n            new THREE.SphereGeometry( 15, 8, 4 ),\\n            new THREE.MeshBasicMaterial({ \\n\\t\\t\\t\\tcolor: 0xff0000,  \\n\\t\\t\\t\\twireframe: true,\\n\\t\\t\\t})\\n        ); \\n        sphere.position.y = 12;\\n        sphere.name = name || \\\"PLAYER SPHERE\\\";\\n        sphere.visible = true;\\n        return sphere;\\n    };\\n\\n//  Player pointer.\\n    AW3D.PlayerPointer = function ( name ){\\n        var geometry = new THREE.CylinderGeometry( 0, 1, 20, 12 );\\n\\t//  BE CAREFULL: is not \\\"mesh.rotation.y = -Math.PI\\\".\\n        geometry.rotateX( Math.PI / 2 );  //  important!\\n        var material = new THREE.MeshNormalMaterial();\\n        var pointer = new THREE.Mesh(geometry, material);\\n        pointer.position.set(0, 40, 0);\\n        pointer.name = name || \\\"PLAYER POINTER\\\";\\n        pointer.visible = true; // debugMode || false;\\n        return pointer;\\n    };\\n\\n\\n//  OutfitManager.js\\n\\n    AW3D.OutfitManager = function(){\\n\\n        var self = this;\\n\\n\\t//  requires \\\"signals.min.js\\\"\\n        var Signal = signals.Signal;\\n        this.added = new Signal();\\n        this.removed = new Signal();\\n        this.changed = new Signal();\\n\\n        this.eventTimeout = undefined;\\n        this.direction = new THREE.Object3D();\\n\\n        this.gender = {\\n            male    : false,\\n            female  : false,\\n            shemale : false,\\n            trans   : false,\\n        };\\n\\n        this.genitals = { \\n            vagina   : false,\\n            penis    : false,\\n            attached : false,\\n        };\\n\\n        this.layers = [\\n            \\\"body\\\",\\n            \\\"head\\\",\\n            \\\"face\\\",\\n            \\\"hairs\\\",\\n            \\\"upper\\\", // chest.\\n            \\\"lower\\\", // hips.\\n            \\\"torso\\\", // (chest & hips).\\n            \\\"arms\\\",\\n            \\\"legs\\\",\\n            \\\"hands\\\",\\n            \\\"feet\\\",\\n            \\\"genitals\\\", \\n            \\\"skeleton\\\",\\n        ];\\n\\n        this.slots = [\\n            \\\"skeleton\\\",\\n            \\\"body\\\",\\n            \\\"hairs\\\",\\n            \\\"eyes\\\",\\n            \\\"glasses\\\",\\n            \\\"hat\\\",\\n            \\\"stockings\\\",\\n            \\\"underwears\\\",\\n            \\\"costume\\\",\\n            \\\"tshirt\\\",\\n            \\\"skirt\\\",\\n            \\\"trousers\\\",\\n            \\\"skirt\\\",\\n            \\\"dress\\\",\\n            \\\"shoes\\\",\\n            \\\"coat\\\",\\n            \\\"penis\\\", \\n            \\\"vagina\\\",\\n        ];\\n\\n        this.stickers = [\\n            \\\"skin\\\",\\n            \\\"makeup\\\",\\n            \\\"tattoo\\\",\\n            \\\"bodypaint\\\",\\n            \\\"neck\\\",\\n            \\\"chest\\\",\\n            \\\"belly\\\",\\n            \\\"upperlimb\\\",\\n            \\\"arm\\\",\\n            \\\"forearm\\\",\\n            \\\"wrist\\\",\\n            \\\"hand\\\",\\n            \\\"lowerlimb\\\",\\n            \\\"thigh\\\",\\n            \\\"leg\\\",\\n            \\\"foot\\\",\\n            \\\"butt\\\",\\n            \\\"back\\\",\\n            \\\"scapula\\\",\\n            \\\"lumbar\\\",\\n        ];\\n\\n        this.attachments = [\\n            \\\"helmet\\\",\\n            \\\"face\\\",\\n            \\\"mask\\\",\\n            \\\"teeth\\\",\\n            \\\"beard\\\",\\n            \\\"eyelash\\\",\\n            \\\"glasses\\\",\\n            \\\"ears\\\",\\n            \\\"belly\\\",\\n            \\\"gun\\\",\\n            \\\"wepon\\\",\\n            \\\"knife\\\",\\n            \\\"sword\\\",\\n            \\\"bistol\\\",\\n            \\\"watch\\\",\\n            \\\"jewelry\\\",\\n            \\\"earings\\\",\\n            \\\"necklace\\\",\\n            \\\"bracelet\\\",\\n            \\\"bag\\\",\\n            \\\"handbag\\\",\\n            \\\"cape\\\",\\n            \\\"coat\\\",\\n            \\\"horn\\\",\\n            \\\"tail\\\",\\n            \\\"penis\\\", \\n        ];\\n\\n        this.AnimationsHandler = [];\\n\\n    //  Outfit.AnimationsHandler is an simple array where local\\n    //  player.outfit keeps the AW3D.AnimationHandler instances.\\n\\n        this.AnimationsHandler.reset = function(){\\n            this.length = 0; // reset array.\\n        };\\n\\n        this.AnimationsHandler.stop = function(){\\n            this.forEach( function( anim ){\\n                if (!!anim ) anim.stop();\\n            });\\n        };\\n\\n        this.AnimationsHandler.jump = function(){\\n            this.forEach( function( anim ){\\n                if (!!anim ) anim.jump();\\n            });\\n        };\\n\\n        this.AnimationsHandler.play = function(){\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                this.forEach( function( anim ){\\n                    if (!!anim ) anim.play(name);\\n                });\\n            }\\n        };\\n\\n        this.AnimationsHandler.weightOff = function(){\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                this.forEach( function( anim ){\\n                    if (!!anim ) anim.weightOff(name);\\n                });\\n            }\\n        };\\n\\n        this.AnimationsHandler.weightOn = function(){\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                this.forEach( function( anim ){\\n                    if (!!anim ) anim.weightOn(name);\\n                });\\n            }\\n        };\\n\\n        this.AnimationsHandler.fadeIn = function(){\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                this.forEach( function( anim ){\\n                    if (!!anim ) anim.fadeIn(name);\\n                });\\n            }\\n        };\\n\\n        this.AnimationsHandler.fadeOut = function(){\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                this.forEach( function( anim ){\\n                    if (!!anim ) anim.fadeOut(name);\\n                });\\n            }\\n        };\\n\\n        this.AnimationsHandler.refresh = function(){\\n\\n            this.stop();\\n            this.fill(null);\\n            this.reset();\\n\\n            var gender = self.getGender();\\n\\n            self.slots.forEach( function(name, i){\\n\\n                if ( !!self[ name ] ){\\n    \\n                    var handler = new AW3D.AnimationHandler( self[ name ], gender );\\n\\n                    self.AnimationsHandler.push( handler );\\n                }\\n            });\\n    \\n            this.play(\\\"idle\\\");\\n        };\\n\\n    //  Outfit EventDispatcher.\\n        Object.assign( this, THREE.EventDispatcher.prototype );  // important!\\n\\n    };\\n\\n\\n    AW3D.OutfitManager.prototype = {\\n\\n        constructor: AW3D.OutfitManager,\\n\\n        refresh: function(){\\n            this.AnimationsHandler.refresh();\\n        },\\n\\n\\n        get: function(){\\n\\n            var results = {};\\n\\n            var _get = ( arg ) => {\\n\\n                if ( typeof( arg ) == \\\"string\\\" ) {\\n                    if ( !!this[arg] ) results[arg] =  this[arg];\\n                }\\n\\n                if ( arg instanceof Array ) {\\n                    arg.forEach( ( key ) => {\\n                        _get( key );\\n                    });\\n                }\\n            };\\n\\n            if ( arguments.length > 0 ){\\n\\n                for (var i in arguments){\\n\\n                    if ( !arguments[i] ) continue;\\n\\n                    _get( arguments[i] );\\n\\n                }\\n\\n            } else {\\n\\n                this.slots.forEach( (name) => { _get( name ); });\\n\\n            }\\n\\n            return results;\\n\\n        },\\n\\n        set: function(){\\n        //  Set \\\"this.slot\\\" but not add to \\\"this.direction\\\".\\n\\n            for (var arg in arguments){\\n\\n                if (!arguments[arg]) continue;\\n\\n                var name = Object.keys(arguments[arg])[0];\\n                var asset = Object.values(arguments[arg])[0];\\n\\n                if ( !name || name == null || !asset ) continue;\\n                if ( !!this[ name ] ) this.remove( name );\\n\\n                this[ name ] = asset;\\n\\n            //  Create an animation handler for this outfit slot.\\n                var handler = new AW3D.AnimationHandler( this[ name ], this.getGender() );\\n\\n            //  Add animation handler.\\n                this.AnimationsHandler.push( handler );\\n\\n            }\\n\\n        //  Send \\\"change\\\" event only when last \\n        //  add has been completed (delay:100ms).\\n\\n            var msec = 100;\\n            clearTimeout( this.eventTimeout );\\n            this.eventTimeout = setTimeout( () => {\\n                this.dispatchEvent( {type:\\\"change\\\"} );\\n                this.changed && this.changed.dispatch();\\n            }, msec);\\n\\n            return this;\\n        },\\n\\n        add: function(){\\n\\n            for (var arg in arguments) {\\n\\n                if (!arguments[arg]) continue;\\n\\n                var name = Object.keys(arguments[arg])[0];\\n                var asset = Object.values(arguments[arg])[0];\\n\\n                if ( !name || name == null || !asset ) continue;\\n                if ( this[ name ] ) this.remove( name );  // important!\\n\\n                this[ name ] = asset;\\n\\n            //  Create an animation handler for this outfit slot.\\n                var handler = new AW3D.AnimationHandler( this[name], this.getGender() );\\n\\n                if ( this.AnimationsHandler.length ) {\\n\\n                //  Copy each action properties of first animation handler.\\n                    var masterHandler = this.AnimationsHandler[0];\\n\\n                    for ( var action in handler.actions ) {\\n\\n                        if ( !action ) break;\\n\\n                        handler.actions[action].loop = masterHandler.actions[action].loop;\\n                        handler.actions[action].weight = masterHandler.actions[action].weight;\\n                        handler.actions[action].timeScale = masterHandler.actions[action].timeScale;\\n                        handler.actions[action].currentTime = masterHandler.actions[action].currentTime;\\n                        handler.actions[action].interpolationType = masterHandler.actions[action].interpolationType;\\n\\n                        if ( masterHandler.actions[action].isPlaying ) {\\n                            handler.actions[action].play( masterHandler.actions[action].currentTime );\\n                        }\\n\\n                    }\\n\\n                //  Add animation handler.\\n                    this.AnimationsHandler.push( handler );\\n\\n                } else {\\n\\n                //  Add animation handler.\\n                    this.AnimationsHandler.push( handler );\\n                //  Play idle.\\n                    this.AnimationsHandler.play(\\\"idle\\\");\\n\\n                }\\n\\n            //  Add outfit item to scene.\\n                this.direction.add( this[ name ] );\\n\\n            }\\n\\n        //  this.AnimationsHandler.refresh(); \\n\\n            this.dispatchEvent( {type:\\\"add\\\"} );\\n            this.added && this.added.dispatch();\\n\\n        //  Send \\\"change\\\" event only when last \\n        //  add has been completed (delay:100ms).\\n\\n            var msec = 100;\\n            clearTimeout( this.eventTimeout );\\n            this.eventTimeout = setTimeout( () => {\\n                this.dispatchEvent( {type:\\\"change\\\"} );\\n                this.changed && this.changed.dispatch();\\n            }, msec);\\n\\n            return this;\\n        },\\n\\n        remove: function(){\\n\\n            if ( arguments.length == 0 ) return;\\n\\n            for (var arg in arguments){\\n\\n                if ( !arguments[arg] ) continue;\\n                if ( !this.slots.includes( arguments[arg] ) ) continue;\\n\\n                var name = arguments[arg];\\n\\n            //  Remove from scene (does not throw error).\\n                this.direction.remove( this[ name ] );\\n\\n            //  Dispose textures.\\n\\n                if ( this[ name ] ) {\\n                    \\n                    if (this[ name ].material && !this[ name ].material.materials) {\\n\\n                    //  Single material.\\n\\n                        Object.keys(this[ name ].material).filter( (key) => {\\n                            return this[ name ].material[ key ] instanceof THREE.Texture;\\n                        }).forEach( (key) => {\\n                            this[ name ].material[ key ].dispose();\\n                        //  DO NOT NULL/DELETE TEXTURE.  important!\\n                        });\\n\\n                        this[ name ].material.dispose();\\n\\n                    } else if (this[ name ].material.materials && this[ name ].material.materials.length) {\\n\\n                    //  Multimaterial.\\n\\n                        this[ name ].material.materials.forEach(function(material){\\n\\n                            Object.keys(material).filter(function(key){\\n                                return material[ key ] instanceof THREE.Texture;\\n                            }).forEach(function(key){\\n                                material[ key ].dispose();\\n                            //  DO NOT NULL/DELETE TEXTURE. important!\\n                            });\\n\\n                            material.dispose();\\n\\n                        });\\n\\n                    }\\n\\n                }\\n\\n            //  Dispose geometry.\\n                if ( this[ name ] ) this[ name ].geometry.dispose();\\n\\n            //  Dispose bones texture. !important\\n                if ( this[ name ] && this[ name ].skeleton  )\\n                    this[ name ].skeleton.boneTexture.dispose();\\n\\n            //  Remove the animation handler.\\n\\n                if ( this.AnimationsHandler.length ) {\\n\\n                //  Find handler index.\\n                    var index = this.AnimationsHandler.findIndex((handler) => {\\n                        return handler.mesh == this[ name ];\\n                    });\\n\\n                    //  Keep in mind \\\"splice()\\\" uses \\\"zero\\\" \\n                    //  and \\\"negative\\\" indexes also. // danger!\\n                    //  debugMode && console.log({\\\"index\\\": index});\\n\\n                    if ( index != undefined && index > -1 ) {\\n\\n                    //  Get and remove handler from AnimationsHandler.\\n                        var handler = this.AnimationsHandler.splice(index, 1)[0];\\n\\n                    //  Stop handler animations.\\n                        handler.stop();\\n\\n                    }\\n\\n                }\\n\\n            //  Delete slot.\\n                delete this[ name ];\\n\\n            }\\n\\n        //  this.AnimationsHandler.refresh(); \\n\\n            this.dispatchEvent( {type:\\\"remove\\\"} );\\n            this.removed && this.removed.dispatch();\\n\\n        //  Send \\\"change\\\" event only when last \\n        //  remove has been completed (delay:100ms).\\n\\n            var msec = 100;\\n            clearTimeout( this.eventTimeout );\\n            this.eventTimeout = setTimeout( () => {\\n                this.dispatchEvent( {type:\\\"change\\\"} );\\n                this.changed && this.changed.dispatch();\\n            }, msec);\\n\\n            return this;\\n        },\\n\\n        removeAll: function() { \\n\\n            this.slots.forEach( ( name ) => {\\n                if ( this[ name ] ) this.remove( name );\\n            });\\n\\n            return this;\\n\\n        },\\n\\n        removeFromScene: function(){\\n\\n            if ( arguments.length == 0 ) {\\n\\n                this.slots.forEach( ( name ) => {\\n                    this.remove( name );\\n                });\\n\\n            } else {\\n\\n                for (var arg in arguments){\\n                    this.remove( arguments[arg] );\\n                }\\n            }\\n\\n            return this;\\n        },\\n\\n        removeTexture: function( outfit, map, index ){\\n\\n            //  outfit: outfit slot name (e.g \\\"body\\\", \\\"hair\\\", \\\"dress\\\", etc.)\\n            //  map   : material map name (e.g. \\\"map\\\", \\\"bumpMap\\\", \\\"normalMap\\\", etc.)\\n            //  index : material index of multimaterial (\\\"null\\\" for simple material).\\n\\n            if ( !this[ outfit ] ) return;\\n            if ( !this[ outfit ].material ) return;\\n\\n            //  Material.\\n\\n            if ( index == null || isNaN(index) || typeof(index) != \\\"number\\\" ) {\\n\\n                if ( !this[ outfit ].material[ map ] ) return;\\n\\n                this[ outfit ].material[ map ].dispose();\\n                this[ outfit ].material[ map ] = null;\\n                this[ outfit ].material.needsUpdate = true;\\n\\n                return;\\n            }\\n\\n            //  MultiMaterial.\\n\\n            if ( typeof(index) == \\\"number\\\" && index > -1 ) {\\n\\n                if ( !this[ outfit ].material.materials ) return;\\n                if ( !this[ outfit ].material.materials[ index ] ) return;\\n                if ( !this.body.material.materials[ index ][ map ] ) return;\\n\\n                this[ outfit ].material.materials[ index ][ map ].dispose();\\n                this[ outfit ].material.materials[ index ][ map ] = null;\\n                this[ outfit ].material.materials[ index ].needsUpdate = true;\\n\\n                return;\\n            }\\n        },\\n\\n        setGender: function( gender ){\\n\\n            var self = this;\\n\\n            Object.keys(this.gender).forEach( function( name ){\\n                self.gender[ name ] = ( name == gender );\\n            });\\n\\n        //  Outfit direction scale. (object3D)\\n\\n            switch ( this.getGender() ){\\n\\n                case \\\"male\\\":\\n                    this.direction.scale.set(1, 1, 1);\\n                    break;\\n\\n                case \\\"female\\\":\\n                    this.direction.scale.set(0.95, 0.95, 0.95);\\n                    break;\\n\\n                default:\\n                    this.direction.scale.set(1, 1, 1);\\n            }\\n\\n            this.AnimationsHandler.refresh();\\n\\n            return this;\\n        },\\n\\n        getGender: function(){\\n\\n            var self = this;\\n\\n            if (arguments.length > 0){\\n\\n                return self.gender[ arguments[0] ];\\n\\n            } else {\\n\\n                return Object.keys(this.gender).find( function( name ){\\n                    return self.gender[ name ];\\n                });\\n\\n            }\\n        },\\n\\n        resetGender: function(){\\n\\n            var self = this;\\n\\n            Object.keys(this.gender).forEach( function( name ){\\n                self.gender[ name ] = false;\\n            });\\n\\n            this.direction.scale.set(1, 1, 1);\\n            this.AnimationsHandler.refresh();\\n\\n            return this;\\n        },\\n\\n        getPose: function( name ){\\n\\n            var name = name || \\\"body\\\";\\n            if ( !this[ name ] ) return;\\n            if ( !this.slots.includes( name ) ) return;\\n\\n            var pose = [];\\n\\n            for (var i in this[ name ].skeleton.bones) {\\n                var key = {}; // {\\\"pos\\\":[], \\\"rot\\\":[], \\\"scl\\\":[]};\\n                key.pos = this[ name ].skeleton.bones[i].position.toArray();\\n                key.rot = this[ name ].skeleton.bones[i].quaternion.toArray();\\n                key.scl = this[ name ].skeleton.bones[i].scale.toArray();\\n                pose.push(key);\\n            }\\n\\n            return pose;\\n        },\\n\\n\\n        toJSON: function(){\\n\\n            var data = {};\\n\\n            if ( arguments.length == 0 ) {\\n\\n                for (var i = 0; i < this.slots.length; i++) {\\n\\n                    var name = this.slots[i];\\n\\n                    if ( !name ) continue;\\n                    if ( !this[ name ] ) continue;\\n                    if ( !this.slots.includes( name ) ) continue;\\n\\n                    data[ name ] = {};\\n                    data[ name ].name      = name;\\n                    data[ name ].visible   = this[ name ].visible;\\n                    data[ name ].scale     = this[ name ].scale.toArray();\\n                    data[ name ].geometry  = this[ name ].geometry.sourceFile;\\n                    data[ name ].material  = materialtoJSON( this[ name ].material );\\n\\n                }\\n\\n            } else {\\n\\n                for (var i = 0; i < arguments.length; i++){\\n\\n                    var name = arguments[i];\\n\\n                    if ( !name ) continue;\\n                    if ( !this[ name ] ) continue;\\n                    if ( !this.slots.includes( name ) ) continue;\\n\\n                    data[ name ] = {};\\n                    data[ name ].name      = name;\\n                    data[ name ].visible   = this[ name ].visible;\\n                    data[ name ].scale     = this[ name ].scale.toArray();\\n                    data[ name ].geometry  = this[ name ].geometry.sourceFile;\\n                    data[ name ].material = materialtoJSON( this[ name ].material );\\n\\n                }\\n\\n            }\\n\\n            if ( this.getGender() ) \\n                data.gender = this.getGender();\\n\\n            var data = JSON.stringify( data );\\n\\n            if ( data === \\\"{}\\\" ) \\n                return null;\\n            else \\n                return JSON.parse( data );\\n\\n        },\\n\\n    //  fromJSON (v2.1).\\n\\n        fromJSON: function( json ){\\n\\n\\t\\t//  Make a copy of json. important!\\n\\n            if ( typeof(json) == \\\"object\\\" ) {\\n\\n                try {\\n\\n                    var json = JSON.stringify( json ); // string copy of json.\\n\\n                } catch(err) { throw err; }\\n\\n            }\\n\\n\\t\\t//  requires \\\"validation.js\\\".\\n\\n            if ( typeof(json) == \\\"string\\\" ) {\\n\\n                if ( !validator.isJSON( json ) ) {\\n                    throw \\\"Validation Error: json not valid\\\";\\n                }\\n\\n            } else {\\n\\n\\t\\t\\t\\tthrow \\\"Type Error: json is not string type.\\\";\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t\\n\\t\\t\\tvar json = JSON.parse( json ); // (now is a json copy).\\n\\n\\n            var self = this;\\n\\n        //  Set gender first.\\n\\n            this.removeAll();          // important!\\n            var gender = json.gender;  // important!\\n            this.setGender( gender );  // important!\\n\\n        //  Clear gender of json.\\n            delete json.gender; // (is a copy of json).\\n\\n        //  ORDER DOES MATTER for transparency:\\n        //   Order in localPlayer.outfit.direction.children array DOES MATTER.\\n        //  So we must deliver the outfit.direction.children array with the following order:\\n        //  [skeleton, body, eyes, hairs, stockings, underwears, tshirt, trousers, costume, dress, shoes, coat]\\n\\n            var orderMap = [];\\n\\n            (function(){\\n                if (json.skeleton) orderMap.push(\\\"skeleton\\\");\\n                if (json.body) orderMap.push(\\\"body\\\");\\n                if (json.eyes) orderMap.push(\\\"eyes\\\");\\n                if (json.glasses) orderMap.push(\\\"glasses\\\");\\n                if (json.hairs) orderMap.push(\\\"hairs\\\");\\n                if (json.hat) orderMap.push(\\\"hat\\\");\\n                if (json.stockings) orderMap.push(\\\"stockings\\\");\\n                if (json.underwears) orderMap.push(\\\"underwears\\\");\\n                if (json.costume) orderMap.push(\\\"costume\\\");\\n                if (json.tshirt) orderMap.push(\\\"tshirt\\\");\\n                if (json.trousers) orderMap.push(\\\"trousers\\\");\\n                if (json.skirt) orderMap.push(\\\"skirt\\\");\\n                if (json.dress) orderMap.push(\\\"dress\\\");\\n                if (json.shoes) orderMap.push(\\\"shoes\\\");\\n                if (json.coat) orderMap.push(\\\"coat\\\");\\n            })();\\n\\n            debugMode && console.log({\\\"orderMap\\\": orderMap});\\n\\n            var outfit = {};\\n\\t\\t\\tvar promises = [];\\n\\n            for (var i = 0; i < orderMap.length; i++){\\n\\n\\t\\t\\t\\tpromises.push(\\n\\t\\t\\t\\t\\tnew Promise(function(resolve, reject){\\n\\n\\t\\t\\t\\t\\t\\tvar object = {};\\n\\t\\t\\t\\t\\t\\tvar sortIndex = i;\\n                        var key = orderMap[i];\\n\\n\\t\\t\\t\\t\\t\\tobject.name      = json[ key ].name;\\n\\t\\t\\t\\t\\t\\tobject.visible   = json[ key ].visible;\\n\\t\\t\\t\\t\\t\\tobject.material  = json[ key ].material;\\n\\t\\t\\t\\t\\t\\tobject.geometry  = json[ key ].geometry;  // (url).\\n\\n\\t\\t\\t\\t\\t//  Scale.\\n\\t\\t\\t\\t\\t\\tvar vector = new THREE.Vector3();\\n\\t\\t\\t\\t\\t\\tobject.scale = vector.fromArray( json[ key ].scale );\\n\\n\\t\\t\\t\\t\\t//  Material.\\n\\t\\t\\t\\t\\t\\tvar material = materialfromJSON( object.material );\\n\\n\\t\\t\\t\\t\\t//  Geometry: cache first.\\n\\t\\t\\t\\t\\t\\tcaches.match( object.geometry ).then(function(response){\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( !response ) \\n\\t\\t\\t\\t\\t\\t\\t\\tthrow \\\"geometry not found! Trying to fetch geometry...\\\";\\n\\t\\t\\t\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\t\\t\\t\\treturn response;\\n\\n\\t\\t\\t\\t\\t\\t}).catch(function(err){\\n                            console.error(err);\\n\\n\\t\\t\\t\\t\\t\\t\\treturn caches.open(\\\"geometries\\\").then(function(cache){\\n\\t\\t\\t\\t\\t\\t\\t\\treturn cache.add( object.geometry ).then(function(){\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn cache.match( object.geometry ).then(function(response){\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn response;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t}).then(function(response){\\n\\n\\t\\t\\t\\t\\t\\t\\tif (!response) throw \\\"None response returned!\\\";\\n\\n\\t\\t\\t\\t\\t\\t\\treturn response.json();\\n\\n\\t\\t\\t\\t\\t\\t}).then(function( gmtjson ){\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( !gmtjson ) throw \\\"None json returned fromJSON!\\\";\\n\\n\\t\\t\\t\\t\\t\\t\\tvar loader = new THREE.JSONLoader();\\n\\t\\t\\t\\t\\t\\t\\tvar geometry = loader.parse( gmtjson ).geometry;\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry.name = gmtjson.name;\\n\\t\\t\\t\\t\\t\\t\\tgeometry.computeFaceNormals();\\n\\t\\t\\t\\t\\t\\t\\tgeometry.computeVertexNormals();\\n\\t\\t\\t\\t\\t\\t\\tgeometry.computeBoundingBox();\\n\\t\\t\\t\\t\\t\\t\\tgeometry.computeBoundingSphere();\\n\\t\\t\\t\\t\\t\\t\\tgeometry.sourceFile = object.geometry;  // important!\\n\\n\\t\\t\\t\\t\\t\\t\\tvar skinned = new THREE.SkinnedMesh( geometry, material );\\n\\n\\t\\t\\t\\t\\t\\t\\tskinned.renderDepth = 1;\\n\\t\\t\\t\\t\\t\\t\\tskinned.frustumCulled = false;\\n\\t\\t\\t\\t\\t\\t\\tskinned.position.set( 0, 0, 0 );\\n\\t\\t\\t\\t\\t\\t\\tskinned.rotation.set( 0, 0, 0 );\\n\\t\\t\\t\\t\\t\\t\\tskinned.scale.copy( object.scale );\\n\\t\\t\\t\\t\\t\\t\\tskinned.castShadow = true;\\n\\t\\t\\t\\t\\t\\t\\tskinned.name = object.name;\\n\\t\\t\\t\\t\\t\\t\\tskinned.sortIndex = sortIndex;\\n\\n\\t\\t\\t\\t\\t\\t\\tvar obj = {};\\n\\t\\t\\t\\t\\t\\t\\tobj[ key ] = skinned;\\n\\t\\t\\t\\t\\t\\t\\tresolve( obj );\\n\\n\\t\\t\\t\\t\\t\\t\\toutfit[ key ] = skinned;\\n\\n\\t\\t\\t\\t\\t\\t}).catch(function(err){\\n                            resolve( null );\\n\\t\\t\\t\\t\\t\\t\\tconsole.error(err);\\n\\t\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\t}) // end of promise,\\n\\t\\t\\t\\t); // end push.\\n\\t\\t\\t}// end for.\\n\\n            debugMode && console.log(\\\"promises:\\\", promises);\\n\\n\\t\\t\\treturn Promise.all(promises).then(function(results){\\n                debugMode && console.log(\\\"results:\\\", results);\\n\\n\\t\\t\\t//  cleanup.\\n\\t\\t\\t\\tvar results = results.filter(Boolean); // important!\\n                debugMode && console.log(\\\"cleaned results:\\\", results);\\n\\n\\t\\t\\t//  add outfit.\\n\\t\\t\\t\\twhile (results.length) {\\n\\t\\t\\t\\t\\tself.add( results.shift() );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}).then(function(){\\n                debugMode && console.log(\\\"outfit:\\\", outfit);\\n\\t\\t\\t\\treturn outfit;\\n\\t\\t\\t});\\n\\n\\t\\t},\\n\\n\\n\\t//  Outfit DNA is an object that contains the outfit data that needed to\\n\\t//  create the player oufit anywhere remotly. It is player outfit assets\\n\\t//  in transfered structure ( aka like .toJSON() ).\\n\\t//\\n\\t//  .toDNA(); .fromDNA(dna); Usage:\\n\\t//      dna = localPlayer.outfit.toDNA();\\n\\t//      player = new Player();\\n\\t//      player.outfit = new AW3D.Outfit(player);\\n\\t//      player.outfit.fromDNA( dna );\\n\\n\\t//\\t.toDNA, .fromDNA (v2).\\n\\t//\\trequires \\\"rawinflate.js, rawdeflate.js, and validator.js\\\"\\n\\n        toDNA: function(){\\n\\n            return encode( JSON.stringify( this.toJSON() ) );\\n\\n            function encode( string ) {\\n                if ( !!window.RawDeflate ) {\\n                    return window.btoa( RawDeflate.deflate( string ) );\\n                } else {\\n                    return string;\\n                }\\n            }\\n\\n        },\\n\\n        fromDNA: function( dna ){\\n\\n            //  Validation.\\n\\n            if ( typeof(dna) == \\\"string\\\" ) {\\n\\n                if ( validator.isBase64( dna ) ) {\\n\\n                    return new Promise( (resolve, reject) => {\\n                        var json = JSON.parse( decode( dna ) );\\n                        resolve( this.fromJSON(json) );\\n                    }).catch( function(err){ \\n                        console.error(err);\\n                        throw err; \\n                    });\\n\\n                } else if ( validator.isJSON( dna ) ) {\\n\\n                    return new Promise( (resolve, reject) => {\\n                        var json = JSON.parse( dna );\\n                        resolve( this.fromJSON(json) );\\n                    }).catch( function(err){ \\n                        console.error(err);\\n                        throw err; \\n                    });\\n\\n                } else {\\n\\n                    return new Promise( (resolve, reject) => {\\n                        var err = \\\"DNA is not valid.\\\";\\n                        console.error( \\\"Error: \\\" + err );\\n                        reject( \\\"Validation Error: \\\" + err );\\n                        //  throw Error( err );\\n                    });\\n\\n                }\\n\\n            } else {\\n\\n                return new Promise( (resolve, reject) => {\\n                    var err = \\\"Unsupported DNA type: \\\" + typeof(dna);\\n                    console.error( \\\"Error: \\\" + err );\\n                    reject( \\\"Validation Error: \\\" + err );\\n                    //  throw Error( err );\\n                });\\n\\n            }\\n\\n            function decode( string ) {\\n                if ( !!window.RawDeflate ) {\\n                    return RawDeflate.inflate( window.atob( string ) );\\n                } else {\\n                    return string;\\n                }\\n            }\\n\\n        },\\n\\n\\n\\t};\\n\\n\\n//  AW3D AnimationHandler.js\\n\\n//  Reset THREE.AnimationHandler.animations array.\\n    THREE.AnimationHandler.animations.length = 0;\\n    AnimationManager = THREE.AnimationHandler;\\n\\n    AW3D.AnimationHandler = function ( mesh, gender ) {\\n\\n        this.mesh = mesh;\\n        this.gender = gender; // important!\\n        this.actions = {};\\n\\n    //  This create the animations of skinned mesh. \\n        this.reloadActions(); // important!\\n\\n    };\\n\\n\\n    AW3D.AnimationHandler.prototype = {\\n\\n        constructor: AW3D.AnimationHandler,\\n\\n        findAction: function(action){\\n        //  returns new array with resutls.\\n            return THREE.AnimationHandler.animations.filter( function(animation){\\n                return (animation == action); // boolean.\\n            }); \\n        },\\n\\n        findByUuid: function( name ){\\n        //  returns new array with resutls.\\n            return THREE.AnimationHandler.animations.filter( function(animation){\\n                return (animation.uuid == this.actions[ name ].uuid); // boolean.\\n            });\\n        },\\n\\n        findByName: function( name ){\\n        //  returns new array with resutls.\\n            return THREE.AnimationHandler.animations.filter( function(animation){\\n                return (animation.data.name == name); // boolean.\\n            });\\n        },\\n\\n        getCurrentAction: function(){\\n        //  returns current playing action name.\\n            for (var name in this.actions) {\\n                if ( !name ) return;\\n                var action = this.actions[ name ];\\n                if ( action.isPlaying ) {\\n                    return name;\\n                }\\n            }\\n        },\\n\\n    //  To stop an animation, find the animation in\\n    //  THREE.AnimationHandler.animations and stop it from there.\\n\\n        stop: function stop(){\\n            var self = this;\\n            Object.keys( self.actions ).forEach(function(name, i){\\n                var action = self.actions[name];\\n                self.findAction(action).forEach(function(animation){\\n                    animation.stop();\\n                });\\n            });\\n        },\\n\\n    //  To delete an action, stop the animation in \\n    //  THREE.AnimationHandler.animations and then delete it from this.actions.\\n\\n        delete: function( name ){\\n            var action = this.actions[ name ];\\n            this.findAction( action ).forEach(function(animation){\\n                animation.stop();\\n            });\\n            delete this.actions[ name ];\\n        },\\n\\n        reset: function reset(){\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                this.actions[ name ].weight = 1;\\n                this.actions[ name ].timeScale = 1;\\n                this.actions[ name ].currentTime = 0;\\n            }\\n        },\\n\\n        resetAll: function(){\\n            var self = this;\\n            Object.keys( self.actions ).forEach(function(name, i){\\n                self.reset( name );\\n            });\\n        },\\n\\n        deleteAll: function(){\\n            var self = this;\\n            Object.keys( self.actions ).forEach(function(name, i){\\n                self.delete[ name ]\\n            });\\n        },\\n\\n        play: function play(){\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                if ( !this.actions[ name ] ) return;\\n                this.actions[ name ].play(0);\\n            }\\n        },\\n\\n    //  To pause an animation, find the animation \\n    //  in THREE.AnimationHandler.animations and set timeScale to 0.\\n    \\n        pause: function pause(){\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                var action = this.actions[ name ];\\n                this.findAction( action ).forEach(function(animation){\\n                    animation.timeScale = 0;\\n                });\\n            }\\n        },\\n\\n    //  To unpause an animation, find the animation \\n    //  in THREE.AnimationHandler.animations and set timeScale to 1.\\n\\n        continue: function(){\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                var action = this.actions[ name ];\\n                this.findAction( action ).forEach(function(animation){\\n                    animation.timeScale = 1;\\n                });\\n            }\\n        },\\n\\n        weightOff: function(){\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                var action = this.actions[ name ];\\n                this.findAction( action ).forEach(function(animation){\\n                    animation.weight = 0;\\n                });\\n            }\\n        },\\n\\n        weightOn: function(){\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                var action = this.actions[ name ];\\n                this.findAction( action ).forEach(function(animation){\\n                    animation.weight = 1;\\n                });\\n            }\\n        },\\n\\n        fadeIn: function(){\\n            var fades = [];\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                var animation = this.actions[ name ];\\n                fades.push(function fade(){\\n                    var requestId = requestAnimationFrame( fade );\\n                    animation.timeScale = 1; // !important\\n                    animation.weight += ( 0.05 * (1 - animation.weight) );\\n                    animation.play(animation.currentTime, animation.weight);\\n                    debugMode && console.log( \\\"fadeIn: \\\", round(animation.weight, 3) );\\n                    if ( round(animation.weight, 3) > 0.9 ){\\n                        cancelAnimationFrame( requestId );\\n                        animation.weight = 1;\\n                        animation.timeScale = 1;\\n                        animation.play(animation.currentTime, 1);\\n                    }\\n                });\\n            }\\n\\n        //  Call all functions in fades.\\n            while (fades.length){ \\n                fades.shift().call(); \\n            }\\n        },\\n\\n        fadeOut: function(){\\n            var fades = [];\\n            for (var i in arguments){\\n                var name = arguments[i];\\n                var action = this.actions[ name ];\\n                this.findAction( action ).forEach(function(animation){\\n                    fades.push(function fade(){\\n                        var requestId = requestAnimationFrame( fade );\\n                        animation.timeScale = 1; // !important\\n                        animation.weight -= ( 0.05 * animation.weight );\\n                        animation.play(animation.currentTime, animation.weight);\\n                        debugMode && console.log( \\\"fadeOut:\\\", round(animation.weight, 3) );\\n                        if ( round(animation.weight, 3) < 0.1 ){\\n                            cancelAnimationFrame( requestId );\\n                            animation.stop();\\n                            animation.weight = 1;\\n                            animation.timeScale = 1;\\n                        }\\n                    });\\n                });\\n            }\\n\\n        //  Call all functions in fades.\\n            while (fades.length){ \\n                fades.shift().call(); \\n            }\\n        },\\n\\n        idle: function idle(){\\n            this.actions.idle.play(0);\\n        },\\n\\n        jump: function jump(){\\n            this.actions.jump.play(0);\\n        },\\n\\n        run: function run(){\\n            this.actions.run.play(0);\\n        },\\n\\n        walk: function walk(){\\n            this.actions.walk.play(0);\\n        },\\n\\n    //  ------------------------------------------------------  //\\n    //  This create the animations of skinned mesh. important!  //\\n    //  ------------------------------------------------------  //\\n\\n        loadAction: function(){\\n\\n            for ( var i in arguments ) {\\n\\n                var name = arguments[i];\\n\\n                var data;\\n\\n                switch (this.gender) {\\n\\n                    case \\\"male\\\":\\n                        data = MaleAnimations[ name ];\\n                    break;\\n\\n                    case \\\"female\\\":\\n                        data = FemaleAnimations[ name ];\\n                    break;\\n\\n                    default:\\n                        data = Animations[ name ];\\n                    break;\\n                }\\n            \\n                var action = new THREE.Animation( this.mesh, data );\\n                action.uuid = THREE.Math.generateUUID();\\n                action.weight = 1;\\n                action.timeScale = 1;\\n                action.currentTime = 0;\\n                this.actions[ name ] = action;\\n            }\\n\\n        },\\n\\n        reloadActions: function(){\\n\\n            var self = this;\\n\\n            this.stop();\\n            this.deleteAll();\\n            this.actions = {};\\n\\n            if (this.actions.jump) this.actions.jump.loop = false;\\n\\n            if (MaleAnimations && this.gender && this.gender == \\\"male\\\") {\\n                Object.keys( MaleAnimations ).forEach(function(name, i){\\n                    self.loadAction( name );\\n                });\\n\\n                return;\\n            }\\n            \\n            if (FemaleAnimations && this.gender && this.gender == \\\"female\\\") {\\n                Object.keys( FemaleAnimations ).forEach(function(name, i){\\n                    self.loadAction( name );\\n                });\\n\\n                return;\\n            }\\n\\n            if ( Animations && !this.gender ) {\\n                Object.keys( Animations ).forEach(function(name, i){\\n                    self.loadAction( name );\\n                });\\n\\n                return;\\n            }\\n\\n            if ( this.gender && this.gender != \\\"male\\\" && this.gender != \\\"female\\\" ){\\n                console.warn( \\\"AW3D.AnimationHandler: reloadActions(\\\" \\n\\t\\t\\t\\t\\t+ this.gender + \\\"): Gender exists but is not male or female.\\\"\\n                );\\n\\n                return;\\n            }\\n\\n        },\\n\\n\\t};\\n\\n\\n//  MATERIAL TO JSON.\\n\\n//  materialtoJson.js (v1.6)\\n//  Return a promise with the \\n//  material json object resolved.\\n\\n    function materialtoJSON( material ){\\n\\n    //  MULTIMATERIAL.\\n\\n        if ( material.type == \\\"MultiMaterial\\\" || material.materials ) {\\n\\n        //  multimaterial to json.\\n\\n            var multjson = {\\n\\n                _id: \\\"\\\",\\n                type: material.type,\\n                uuid: material.uuid || THREE.Math.generateUUID(),\\n\\n            };\\n\\n\\n        //  materials to json.\\n\\n            multjson.materials = [];\\n\\n            for ( var i = 0; i < material.materials.length; i++ ){\\n\\n                multjson.materials.push( materialtoJSON( material.materials[i] ) );\\n\\n            }\\n\\n\\n            debugMode && console.log( \\\"multimaterial to json:\\\", multjson );\\n\\n            return multjson;\\n\\n        }\\n\\n\\n    //  MATERIAL.\\n\\n        var json = {};\\n\\n        for ( var name in material ){\\n\\n            if ( material[ name ] == undefined ) continue;         // important!\\n            if ( material[ name ] instanceof Function ) continue;  // important!\\n            if ( typeof(material[name]) === \\\"function\\\" ) continue; // important!\\n\\n            switch( name ){\\n\\n                case \\\"defines\\\":\\n                case \\\"program\\\":\\n                case \\\"_listeners\\\":\\n                case \\\"needsUpdate\\\":\\n                case \\\"_needsUpdate\\\":\\n                case \\\"__webglShader\\\":\\n                break;\\n\\n\\n            //  name, _id, uuid.\\n\\n                case \\\"name\\\":\\n                    json.name = material.name;\\n                break;\\n\\n                case \\\"_id\\\":\\n                    json._id = material._id || ObjectId();\\n                break;\\n\\n                case \\\"uuid\\\":\\n                    json.uuid = material.uuid || THREE.Math.generateUUID();\\n                break;\\n\\n\\n            //  texture to json.\\n\\n                case \\\"map\\\":\\n                case \\\"bumpMap\\\":\\n                case \\\"alphaMap\\\":\\n                case \\\"normalMap\\\":\\n                case \\\"emissiveMap\\\":\\n                case \\\"displacementMap\\\":\\n                case \\\"metalnessMap\\\":\\n                case \\\"roughnessMap\\\":\\n                case \\\"specularMap\\\":\\n                case \\\"lightMap\\\":\\n                case \\\"aoMap\\\":\\n\\n                    if ( !(material[ name ] instanceof THREE.Texture) ) {\\n                        throw name + \\\" is not instance of THREE.Texture\\\";\\n                    }\\n\\n                    json[ name ] = texturetoJSON( material[ name ] );\\n\\n                break;\\n\\n\\n            //  three color to hex.\\n\\n                case \\\"color\\\":\\n                case \\\"emissive\\\":\\n                case \\\"specular\\\":\\n\\n                    if ( !(material[ name ] instanceof THREE.Color) ) {\\n                        throw name + \\\" is not instance of THREE.Color\\\";\\n                    }\\n\\n                    json[ name ] = material[ name ].getHex();\\n\\n                break;\\n\\n\\n            //  vector2 to array.\\n\\n                case \\\"normalScale\\\":\\n\\n                    if ( !(material[ name ] instanceof THREE.Vector2) ) {\\n                        throw name + \\\" is not instance of THREE.Vector2\\\";\\n                    }\\n\\n                    json[ name ] = material[ name ].toArray();\\n\\n                break;\\n\\n\\n\\n                case \\\"envMap\\\":\\n                    //  TODO: cube texture.\\n                break;\\n\\n\\n                default:\\n                    json[ name ] = material[ name ];\\n                break;\\n\\n            }\\n\\n        }\\n\\n        return json;\\n    }\\n\\n\\n//  TEXTURE TO JSON.\\n//  Return a promise resolved \\n//  with the texture json object.\\n\\n    function texturetoJSON( texture ){\\n\\n        var json = {};\\n\\n        for (var name in texture ){\\n\\n            if ( texture[ name ] == undefined ) continue;\\n            if ( texture[ name ] instanceof Function ) continue;\\n            if ( typeof(texture[name]) === \\\"function\\\" ) continue;\\n\\n            switch (name){\\n\\n                case \\\"_listeners\\\":\\n                break;\\n\\n\\n            //  uuid.\\n\\n                case \\\"uuid\\\":\\n                    json[ name ] = texture[ name ] || THREE.Math.generateUUID();\\n                break;\\n\\n\\n            //  vector2 to array.\\n\\n                case \\\"offset\\\":\\n                case \\\"repeat\\\":\\n                    json[ name ] = texture[ name ].toArray();\\n                break;\\n\\n\\n            //  image to json.\\n\\n                case \\\"image\\\":\\n                    json[ name ] = texture.sourceFile || getDataURL( texture[ name ] ); // important!\\n                break;\\n\\n\\n                default:\\n                    json[ name ] = texture[ name ];\\n                break;\\n\\n            }\\n\\n        }\\n\\n        return json;\\n    }\\n\\n\\n//  IMAGE TO JSON.\\n//  Return an image object.\\n\\n    function imagetoJSON( image ){\\n\\n        return {\\n            uuid: THREE.Math.generateUUID(),\\n            src: image.src || getDataURL( image ),\\n        };\\n\\n    }\\n\\n\\n//  TEXTURE IMAGE TO JSON.\\n//  Return an image object.\\n\\n    function textureImagetoJSON( texture ){\\n\\n        return {\\n            uuid: THREE.Math.generateUUID(),\\n            src: texture.sourceFile || texture.image.src || getDataURL( texture.image )\\n        };\\n\\n    }\\n\\n\\n//  MATERIAL FROM JSON.\\n//  materialfromJson.js (v1.6)\\n//  Return a promise with the material resolved.\\n\\n    function materialfromJSON( json ){\\n\\n   //  MULTIMATERIAL.\\n\\n       if ( json.type == \\\"MultiMaterial\\\" ) {\\n\\n\\n           var materials = [];\\n\\n           for ( var i = 0; i < json.materials.length; i++ ){\\n\\n               materials.push( materialfromJSON( json.materials[i] ) );\\n\\n           }\\n\\n\\n       //  Create multimaterial.\\n\\n           var multimaterial = new THREE.MeshFaceMaterial(materials);\\n\\n           multimaterial.uuid = json.uuid || THREE.Math.generateUUID();\\n\\n           return multimaterial;\\n\\n        }\\n\\n\\n    //  MATERIAL.\\n\\n        var options = {};\\n\\n        for (var name in json){\\n\\n            if ( json[ name ] == undefined ) continue; // important!\\n\\n\\n            switch (name){\\n\\n                case \\\"_id\\\":\\n                case \\\"meta\\\":\\n                break;\\n\\n\\n            //  uuid.\\n\\n                case \\\"uuid\\\":\\n                    options.uuid = json.uuid || THREE.Math.generateUUID();\\n                break;\\n\\n\\n            //  texture from json.\\n\\n                case \\\"alphaMap\\\":\\n                case \\\"aoMap\\\":\\n                case \\\"bumpMap\\\":\\n                case \\\"displacementMap\\\":\\n                case \\\"emissiveMap\\\":\\n                case \\\"lightMap\\\":\\n                case \\\"map\\\":\\n                case \\\"metalnessMap\\\":\\n                case \\\"normalMap\\\":\\n                case \\\"roughnessMap\\\":\\n                case \\\"specularMap\\\":\\n\\n                        options[ name ] = texturefromJSON( json[ name ] );\\n\\n                break;\\n\\n\\n            //  three color to hex.\\n\\n                case \\\"color\\\":\\n                case \\\"emissive\\\":\\n                case \\\"specular\\\":\\n\\n                    options[ name ] = new THREE.Color();\\n                    options[ name ].setHex( json[ name ] );\\n\\n                break;\\n\\n\\n            //  vector2 from array.\\n\\n                case \\\"normalScale\\\":\\n\\n                    options[ name ] = new THREE.Vector2();\\n                    options[ name ].fromArray( json[ name ] );\\n\\n                break;\\n\\n\\n                case \\\"envMap\\\":\\n                    //  TODO: cube texture.\\n                break;\\n\\n\\n                default:\\n                    options[ name ] = json[ name ];\\n                break;\\n\\n            }\\n\\n        }\\n\\n        return new THREE[ options.type ](options);\\n    }\\n\\n\\n//  TEXTURE FROM JSON (v1.6)\\n//  Return a promise with the texture resolved.\\n\\n    function texturefromJSON( json ){\\n\\n        var texture = new THREE.Texture();\\n\\n        for ( var name in json ){\\n\\n            switch (name){\\n\\n                case \\\"meta\\\":\\n                case \\\"image\\\":\\n                break;\\n\\n            //  array to vector2.\\n\\n                case \\\"offset\\\":\\n                case \\\"repeat\\\":\\n\\n                    if ( json[ name ].length != 2) break;\\n\\n                    texture[ name ] = new THREE.Vector2();\\n                    texture[ name ].fromArray( json[ name ] );\\n\\n                break;\\n\\n\\n            //  wrapS & wrapT.\\n\\n                case \\\"wrap\\\":\\n\\n                    if ( json[ name ].length != 2) break;\\n                    if ( !( json[ name ] instanceof Array ) ) break;\\n\\n                    texture.wrapS = json[ name ][0];\\n                    texture.wrapT = json[ name ][1];\\n\\n                break;\\n\\n            //  image from texture json with\\\"FileReader.readAsDataURL(blob)\\\".\\n\\n                //  Check whether a match for the request is found in   \\n                //  the CacheStorage using CacheStorage.match(). If so, serve that.\\n\\n                //  If not, open the \\\"textures\\\" cache using open(), \\n                //  put the default network request in the cache using Cache.put() \\n                //  and return a clone of the default network request using return response.clone().\\n\\n                //  Clone is needed because put() consumes the response body.\\n                //  If this fails (e.g., because the network is down), return a fallback response.\\n\\n                //  Pros:\\n\\n                    //  Easy to use.\\n                    //  Small, compact, safe code.\\n                    //  Texture.image.src is string.\\n                    //  Texture.image.src is dataURL.\\n                    //  Texture.image.src can reused.\\n                    //  Texture.image.src is always valid.\\n                    //  Texture.image.src can be send everywhere.\\n                    //  Texture.image.src can converted to canvas.\\n                    //  Texture.image (canvas) size always power of 2.\\n                    //  Texture.image.src can saved in storage objects.\\n                    //  Texture.image.src can converted vice versa to blob.\\n\\n                //  Cons:\\n\\n                    //  Larger size (~33%)\\n\\t\\t\\t\\t\\t//  Take more time than URL.createObjectURL(blob);\\n\\n            //  sourceFile.\\n            //  case \\\"sourceFile\\\":\\n            //      texture.sourceFile = json[ name ]; // important!\\n            //  break;\\n\\n            //  case \\\"image\\\": (N/A).\\n                case \\\"sourceFile\\\":\\n\\n                    texture.sourceFile = json.sourceFile;\\n\\n                //  SourceFile first.\\n                    var url = json.sourceFile || json.image.src || json.image || \\\"//i.imgur.com/ODeftia.jpg\\\";\\n\\n                //  URL.\\n\\n                    if ( validator && validator.isURL( url ) ) {\\n\\n                    //  Cache first.\\n                        caches.match( url ).then(function(response){\\n\\n                            if ( !response ) \\n                                throw \\\"Texture not found!\\\";\\n                            else\\n                                return response;\\n\\n                        }).catch(function(err){\\n\\n                        //  We use cors origin mode to avoid\\n                        //  texture tainted canvases, images.\\n\\n                            return fetch( url, {\\n                                mode: \\\"cors\\\",  // important!\\n                                method: \\\"GET\\\",\\n                            });\\n\\n                        }).then(function(response){\\n\\n                            return caches.open(\\\"textures\\\").then(function(cache){\\n\\n\\t\\t\\t\\t\\t\\t\\t//  Clone is needed because put() consumes the response body.\\n\\t\\t\\t\\t\\t\\t\\t//  See: \\\"https://developer.mozilla.org/en-US/docs/Web/API/Cache/put\\\"\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar clone = response.clone();\\n\\t\\t\\t\\t\\t\\t\\t\\treturn cache.put( url, clone ).then(function(){\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn response.blob();  //  important!\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\n                        }).then(function(blob){\\n\\n                            var img = new Image();\\n                            img.crossOrigin = \\\"anonymous\\\";  //  important!\\n\\n                            img.onload = function(){\\n                                var canvas = makePowerOfTwo( img, true );\\n                                texture.image = canvas;\\n                                texture.needsUpdate = true;\\n\\t\\t\\t\\t\\t\\t\\t\\timg.onload = null; // optional!\\n                            };\\n\\n                        //  Get dataURL from blob.\\n\\n                            var reader = new FileReader();\\n                            reader.onload = function() {\\n                                img.src = reader.result;\\n                            };\\n\\n                            reader.readAsDataURL(blob);\\n\\n                        });\\n                        \\n                        break;\\n                    } \\n\\n                //  DataURL.\\n\\n                    if ( validator && validator.isDataURI( url ) ) {\\n                        var img = new Image();\\n                        img.crossOrigin = \\\"anonymous\\\";\\n                        img.onload = function(){\\n                            var canvas = makePowerOfTwo( img, true );\\n                            texture.image = canvas;\\n                            texture.needsUpdate = true;\\n\\t\\t\\t\\t\\t\\t\\timg.onload = null; // optional!\\n                        }; \\n\\t\\t\\t\\t\\t\\timg.src = url;  break;\\n                    } \\n\\n                break;\\n\\n                default:\\n                    texture[ name ] = json[ name ];\\n                break;\\n\\n            }\\n\\n        }\\n\\n        return texture;\\n    }\\n\\n\\n//  IMAGE FROM JSON (v1.6)\\n//  Return a promise with the image resolved.\\n\\n    function imagefromJSON( json, onLoadEnd ){\\n\\n        var url = json.src;\\n\\n    //  Cache first.\\n        caches.match( url ).then(function(response){\\n\\n            if ( !response ) \\n                throw response;\\n            else\\n                return response;\\n\\n        }).catch(function(err){\\n\\n            //  We use cors origin mode to avoid\\n            //  texture tainted canvases, images.\\n\\n            return fetch( url, {\\n                mode: \\\"cors\\\",  // important!\\n                method: \\\"GET\\\",\\n            });\\n\\n    //  TODO: REPLACE async/await FOR BACKWARD COMPETALITY.\\n        }).then(function(response){\\n\\n            return caches.open(\\\"textures\\\").then(function(cache){\\n\\n\\t\\t\\t//  Clone is needed because put() consumes the response body.\\n\\t\\t\\t//  See: \\\"https://developer.mozilla.org/en-US/docs/Web/API/Cache/put\\\"\\n\\n\\t\\t\\t\\tvar clone = response.clone();\\n\\t\\t\\t\\treturn cache.put( url, clone ).then(function(){\\n\\t\\t\\t\\t\\treturn response.blob(); //  important!\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t});\\n\\n        }).then(function(blob){\\n\\n            var img = new Image();\\n            img.crossOrigin = \\\"anonymous\\\";  //  important!\\n            img.onload = onLoadEnd;\\n\\n        //  Get dataURL from blob.\\n\\n            return new Promise(function(resolve, reject){\\n\\n                var reader = new FileReader();\\n                reader.onload = function() {\\n                    img.src = reader.result;\\n                    resolve( img );\\n                };\\n\\n                reader.readAsDataURL(blob);\\n\\n            });\\n\\n        });\\n\\n    }\\n\\n\\n//  blobToDataUrl.js\\n//  https://gist.github.com/tantaman/6921973\\n\\n    function convertToBase64(blob, callback) {\\n\\n        var reader = new FileReader();\\n\\n        reader.onload = function(e) {\\n            callback(reader.result);\\n        };\\n\\n        reader.readAsDataURL(blob);\\n    }\\n\\n\\n//  dataUrlToBlob.js\\n//  https://gist.github.com/tantaman/6921973\\n\\n    function dataURLToBlob(dataURL) {\\n\\n        var BASE64_MARKER = \\\";base64,\\\";\\n\\n        if (dataURL.indexOf(BASE64_MARKER) == -1) {\\n            var parts = dataURL.split(\\\",\\\");\\n            var contentType = parts[0].split(\\\":\\\")[1];\\n            var raw = parts[1];\\n\\n            return new Blob([raw], {type: contentType});\\n        }\\n\\n        var parts = dataURL.split(BASE64_MARKER);\\n        var contentType = parts[0].split(\\\":\\\")[1];\\n        var raw = window.atob(parts[1]);\\n        var rawLength = raw.length;\\n\\n        var uInt8Array = new Uint8Array(rawLength);\\n\\n        for (var i = 0; i < rawLength; ++i) {\\n            uInt8Array[i] = raw.charCodeAt(i);\\n        }\\n\\n        return new Blob([uInt8Array], {type: contentType});\\n    }\\n\\n\\n//  makePowerOfTwo.js\\n\\n    function makePowerOfTwo( image, natural ) {\\n\\n        var canvas = document.createElement( \\\"canvas\\\" );\\n\\n        if ( natural ){\\n            canvas.width = THREE.Math.nearestPowerOfTwo( image.naturalWidth );\\n            canvas.height = THREE.Math.nearestPowerOfTwo( image.naturalHeight );\\n        } else {\\n            canvas.width = THREE.Math.nearestPowerOfTwo( image.width );\\n            canvas.height = THREE.Math.nearestPowerOfTwo( image.height );\\n        }\\n\\n        var context = canvas.getContext( \\\"2d\\\" );\\n        context.drawImage( image, 0, 0, canvas.width, canvas.height );\\n\\n    //  debugMode && console.warn( \\\"outfitLoader:makePowerOfTwo(img):\\\", \\n    //  \\\"Image resized to:\\\", canvas.width, \\\"x\\\", canvas.height );\\n\\n        return canvas;\\n    }\\n\\n\\n//  getDataURL.js\\n\\n    function getDataURL( image ) {\\n\\n        var canvas;\\n\\n        if ( image.toDataURL !== undefined ) {\\n\\n            canvas = image;\\n\\n        } else {\\n\\n            canvas = document.createElementNS( \\\"http://www.w3.org/1999/xhtml\\\", \\\"canvas\\\" );\\n            canvas.width = image.width;\\n            canvas.height = image.height;\\n\\n            canvas.getContext( \\\"2d\\\" ).drawImage( image, 0, 0, image.width, image.height );\\n\\n        }\\n\\n        if ( canvas.width > 2048 || canvas.height > 2048 ) {\\n\\n            return canvas.toDataURL( \\\"image/jpeg\\\", 0.6 );\\n\\n        } else {\\n\\n            return canvas.toDataURL( \\\"image/png\\\" );\\n\\n        }\\n\\n    }\\n\\n\\n//  deepCopy.js\\n\\n    function deepCopy(obj) {\\n        if (Object.prototype.toString.call(obj) === \\\"[object Array]\\\") {\\n            var out = [], i = 0, len = obj.length;\\n            for ( ; i < len; i++ ) {\\n                out[i] = arguments.callee(obj[i]);\\n            }\\n            return out;\\n        }\\n        if (typeof obj === \\\"object\\\") {\\n            var out = {}, i;\\n            for ( i in obj ) {\\n                out[i] = arguments.callee(obj[i]);\\n            }\\n            return out;\\n        }\\n        return obj;\\n    }\\n\\n\\n//  round.js  source: \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\\\"\\n\\n    function round(number, precision) {\\n        var shift = function (number, precision, reverseShift) {\\n            if (reverseShift) {\\n                precision = -precision;\\n            }  \\n            numArray = (\\\"\\\" + number).split(\\\"e\\\");\\n            return +(numArray[0] + \\\"e\\\" + (numArray[1] ? (+numArray[1] + precision) : precision));\\n        };\\n        return shift(Math.round(shift(number, precision, false)), precision, true);\\n    }\\n\\n\""
		}],
	"stylesheets": [],
	"skinned": [],
	"scripts": {
		"BCC3A53B-07C6-4FC3-B308-8F4A3E94469D": [
			{
				"name": "index.js",
				"source": "//\tdebguMode = true;\n//\tTHREE.Cache.enabled = true;\n\nvar projectId = {\n\tkind: \"app\",\n\tname: \"boilerplate (in-a-box)\",\n\tversion: \"4.1.0\",\n\tthreejs: \"r78\",\n\tdate: \"2019.09.24.23:50\", // \"YYYY.MM.DD.HH:mm\".\n\tdescription: \"Self boilerplate app made with threejs editor (r78)\",\n\trequired_libs: [\n\t\t\t\t\"watch.js\",\n\t\t\t\t\"command.js\",\n\t\t\t\t\"Objectid.js\",\n\t\t\t\t\"jquery.min.js\",\n\t\t\t\t\"rawinflate.js\",\n\t\t\t\t\"rawdeflate.js\",\n\t\t\t\t\"store2.min.js\",\n\t\t\t\t\"system.min.js\",\n\t\t\t\t\"zangodb.min.js\",\n\t\t\t\t\"signals.min.js\",\n\t\t\t\t\"bootbox.min.js\",\n\t\t\t\t\"validator.min.js\",\n\t\t\t\t\"bootstrap.min.js\",\n\t\t\t\t\"socketcluster.js\",\n\t\t\t\t\"DeviceDetector.js\",\n\t\t\t\t\"sc-codec-min-bin.js\",\n\t\t\t\t\"MathDecimalAdjustment.js\",\n\t\t\t//\tthree.\n\t\t\t\t\"shader.js\",\n\t\t\t\t\"UVsDebug.js\",\n\t\t\t\t\"Animation.js\",\n\t\t\t\t\"EditorControls.js\",\n\t\t\t\t\"AnimationHandler.js\",\n\t\t\t\t\"KeyFrameAnimation.js\",\n\t\t\t\t\"SubdivisionModifier.js\",\n\t\t\t//  MW.\n\t\t\t\t\"MW.js\",\n\t\t\t\t\"MWtps.js\",\n\t\t\t\t\"VirtualInput.js\",\n\t\t\t//  AW3D.\n\t\t\t\t\"AW3D-v0.4.js\"\n\t],\n};\n\n//\tcontrols = new THREE.EditorControls(camera, renderer.domElement);\n"
			},
			{
				"name": "world.js",
				"source": "//  MW WORLD.\n\nworld = new MW.World();\n\n//  OCTREE.\n\n//  Make a octree object, which will be the \n//  container of rigid objects such as terrain ect.\n\nvar partition = 2;\n\nvar min = new THREE.Vector3( -1000, -1000, -1000 );\nvar max = new THREE.Vector3(  1000,  1000,  1000 );\n\noctree = new MW.Octree( min, max, partition ); // important!\n\nworld.add( octree );\n\n//  GROUND.\n\nground = new THREE.Mesh(\n\tnew THREE.PlaneGeometry( 2500, 2500, 1, 1 ),\n\tnew THREE.MeshLambertMaterial({ \n\t\tcolor:0x829ec4,\n\t\twireframe:false,\n\t})\n);\n\nground.rotation.x = THREE.Math.degToRad( -90 );\n\n//  If want the ground as collision surface\n//  only, do not add the ground in the scene.\n\n//\tscene.add( ground );\n//\tground.visible = false;\n//\tground.receiveShadow = true;\n\n//  Add the ground to WALKMESH world octree object.\n//  MESHWALK use octree system to detect collision objects.\n\noctree.importThreeMesh( ground ); // important!\n\n//\tRuntime.\n\nvar clock = new THREE.Clock(); // important!\n\nfunction update(){\n\n\tvar dt = clock.getDelta(); // important!\n\tvar time = clock.getElapsedTime(); // optional!\n\n\tworld.step( dt ); // important!\n\n\tTHREE.AnimationHandler.update( dt ); // important!\n}\n\n"
			},
			{
				"name": "localPlayerController.js",
				"source": "//  PlayerController.js\n\nvar Player = function(radius){\n\n\tthis.holder = AW3D.PlayerHolder(); // important!\n\tscene.add( this.holder );\n\tthis.holder.visible = true;\n\n\tthis.holderHelper = AW3D.PlayerHolderHelper();\n\tscene.add( this.holderHelper );\n\n\tthis.sphere = AW3D.PlayerSphere();\n\tthis.sphere.position.y = 12;\n\tthis.holder.add( this.sphere ); \n\n\tvar player = this; // important!\n\n\tthis.outfit = new AW3D.OutfitManager(); // important!\n\n\tthis.outfit.update = function() {\n\n\t//  Update avatar rotation y.\n\t\tvar direction = player.controller.direction - Math.PI;\n\n\t//  \"this\" is the \"localPlayer.outfit\".\n\t\tthis.direction.rotation.y = direction;\n\n\t//  Update avatar position.\n\t\tvar x = player.controller.center.x;\n\t\tvar y = player.controller.center.y - player.controller.radius;\n\t\tvar z = player.controller.center.z;\n\n\t//  \"this\" is the \"localPlayer.outfit\".\n\t\tthis.direction.position.set( x, y, z );\n\t};\n\n\tvar radius = radius || 3;\n\tthis.controller = new MW.CharacterController( this.holder, radius );\n\tthis.controller.isWalking = false;\n\n\tthis.controller.getdata = function( action ){\n\n\t\tvar data = {};\n\t\tdata.playerid = socket.id;\n\t\tdata.radius = this.radius;\n\t\tdata.isGrounded = this.isGrounded;\n\t\tdata.isOnSlope = this.isOnSlope;\n\t\tdata.isIdling  = this.isIdling;\n\t\tdata.isJumping = this.isJumping;\n\t\tdata.isRunning = this.isRunning;\n\t\tdata.isWalking = this.isWalking;\n\t\tdata.direction = this.direction;\n\t\tdata.movementSpeed = this.movementSpeed;\n\t\tdata.jumpStartTime = this.jumpStartTime;\n\t\tdata.position = this.center.toArray();\n\t\tif (!!action) data.action = action;\n\n\t\treturn data;\n\t};\n\n\tfunction onStartJumping(){\n\t\tplayer.outfit.AnimationsHandler.weightOff(\"idle\", \"walk\", \"run\");\n\t};\n\n\tfunction onEndJumping(){\n\t\tplayer.outfit.AnimationsHandler.weightOn(\"idle\", \"walk\", \"run\");\n\n\t\tif ( player.controller.isRunning && player.controller.isWalking ) {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 28;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"walk\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startRunning\"});\n\n\t\t} else if ( player.controller.isRunning && !player.controller.isWalking ) {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 45;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"run\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startRunning\"});\n\n\t\t} else {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 0;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"idle\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startIdling\"});\n\n\t\t}\n\t}\n\n\tthis.controller.addEventListener(\"endJumping\",   onEndJumping);\n\tthis.controller.addEventListener(\"startJumping\", onStartJumping);\n\n//  Add controller to world.\n\tworld.add( this.controller ); // important!\n\n\tdebugMode && console.log( \n\t\t\"world.characterPool length:\", world.characterPool.length, \n\t\t\"index:\", world.characterPool.indexOf( this.controller )\n\t);\n\n//  Add outfit to scene.\n\tscene.add(this.outfit.direction); // important!\n\n};\n\nPlayer.prototype = {\n\n//  Collect position, direction, nickname, and gender.\n\n\tgetdata: function( socket ){\n\t\tif ( !socket ) return;\n\t\tvar data = {};\n\t\tdata.playerid  = socket.id;\n\t\tdata.nickname  = this.nickname;\n\t\tdata.gender    = this.outfit.getGender();\n\t\tdata.direction = this.outfit.direction.rotation.y;\n\t\tdata.position  = this.outfit.direction.position.toArray();\n\t\tdata.dna       = this.outfit.toDNA();\n\t\tdebugMode && console.log(\"player data:\", data);\n\t\treturn data;\n\t},\n\n//  Remote player set data.\n\n\tsetdata: function( data ){\n\t\tif ( !data.playerid || data.playerid != this.playerid ) return;\n\n\t\tthis.playerid = data.playerid;\n\t\tthis.nickname = data.nickname;\n\t\tthis.outfit.setGender( data.gender );\n\t\tthis.outfit.direction.rotation.y = data.direction;\n\t\tthis.outfit.direction.position.fromArray(data.position);\n\n\t\tif (data.action != undefined) {\n\t\t\tthis.outfit.AnimationsHandler.stop();\n\t\t\tthis.outfit.AnimationsHandler.play( data.action );\n\t\t}\n\t},\n\n//  Create player outfit from dna data.\n\n\tfromDNA: function( dna ){\n\t\tvar frontAngle = Math.PI - cameraControls.getFrontAngle(); // face front.\n\t\tthis.controller.direction = frontAngle;\n\t\tthis.outfit.fromDNA( dna );\n\t\tscene.add(this.outfit.direction);\n\t\tthis.outfit.update();\n\t},\n\n//  Start remote player action.\n\tstartAction: function( running, walking, idling, speed, name, eventType ){\n\n\t\tthis.outfit.AnimationsHandler.stop();        \n\t\tthis.controller.isRunning = running;\n\t\tthis.controller.isWalking = walking;\n\t\tthis.controller.isIdling  = idling;\n\t\tthis.controller.movementSpeed = speed;\n\t\tthis.outfit.AnimationsHandler.play( name );\n\t\tthis.controller.dispatchEvent({type: eventType});\n\n\t},\n\n//  Get local player action data.\n\tgetActionData: function ( name ){\n\t\treturn {\n\t\t\tplayerid : socket.id,\n\t\t\tdirection: this.outfit.direction.rotation.y,\n\t\t\tposition : this.outfit.direction.position.toArray(),\n\t\t\taction   : name,\n\t\t};\n\t},\n\n};\n\nfunction init(){\n\n\tlocalPlayer = new Player(); // important!\n\tlocalPlayer.sphere.visible = false;\n\tdebugMode && console.log(\"localPlayer:\", localPlayer);\n\n//  cameraControl.js\n\n\tcameraControls = new MW.TPSCameraControl(camera, localPlayer.holder, {\n\t\tel: renderer.domElement,               // html renderer element.\n\t\toffset: new THREE.Vector3( 0, 15, 0 ), // camera eye height.\n\t\tradius: 40,                            // default: 37 // (distance of the character to the camera).\n\t\tminRadius: 6,                          // default: 10 // (can take and negative values, yes!!!).\n\t\tmaxRadius: 1500,                       // default: 64, runtime: 40.\n\t\trigidObjects: [],                      // collition objects for the camera.\n\t});\n\n\tcameraControls.getforward = function(){ \n\t\treturn -this.theta \n\t};\n\n\tcameraControls.setVerticalOffset = function(offset){ \n\t\tthis.offset.y = offset; \n\t};\n\n\t(cameraControls.frontAngleUpdate = function(){\n\t\trequestAnimationFrame( cameraControls.frontAngleUpdate );\n\t\tcameraControls.forward = -cameraControls.theta;\n\t})();\n\n/*\n\tcameraControls.addEventListener(\"updated\", function(){\n\t\tdefaultCameraLight.position.copy( cameraControls.camera.position );\n\t});\n*/\n\n//  KeyInputControls.js\n\n\tkeyInputControls = new MW.KeyInputControl();\n\n\tkeyInputControls.On = function(){\n\t\tif ( !keyInputControls.isOff ) return;\n\t\t$(keyInputControls).on( \"movekeyon\", onMoveKeyOn );\n\t\t$(keyInputControls).on( \"movekeyoff\", onMoveKeyOff );\n\t\t$(keyInputControls).on( \"jumpkeypress\", onJumpInput );\n\t\t$(keyInputControls).on( \"movekeychange\", onMoveKeyChange );\n\t\tkeyInputControls.isOff = false;\n\t\tdebugMode && console.log( \"keyInputControls are ON.\" );\n\t};\n\n\tkeyInputControls.Off = function(){\n\t\tif ( keyInputControls.isOff ) return;\n\t\t$(keyInputControls).off( \"movekeyon\", onMoveKeyOn );\n\t\t$(keyInputControls).off( \"movekeyoff\", onMoveKeyOff );\n\t\t$(keyInputControls).off( \"jumpkeypress\", onJumpInput );\n\t\t$(keyInputControls).off( \"movekeychange\", onMoveKeyChange );\n\t\tkeyInputControls.isOff = true;\n\t\tdebugMode && console.log( \"keyInputControls are OFF.\" );\n\t};\n\n\tkeyInputControls.update = function(){\n\n\t\tif ( keyInputControls.isOff ) return;\n\n\t\tif ( keyInputControls.isMoveKeyHolded \n\t\t\t|| localPlayer.controller.isJumping \n\t\t\t|| !localPlayer.controller.isGrounded \n\t\t\t|| localPlayer.controller.isOnSlope ){\n\n\t\t\tthis.dispatchEvent({type:\"update\"});\n\t\t}\n\t};\n\n//\tActivate keyInputControls by setting to \"off\".\n\tkeyInputControls.Off(); // important!\n//\tkeyInputControls.inRun = true;\n\n\tfunction onMoveKeyOn() { \n\t\tdebugMode && console.log(\"move key on\");\n\n\t\tif (  localPlayer.controller.isJumping \n\t\t\t|| !localPlayer.controller.isGrounded \n\t\t\t||  localPlayer.controller.isOnSlope ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlocalPlayer.controller.direction = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\n\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\tlocalPlayer.controller.isRunning = true; \n\t\tlocalPlayer.controller.isWalking = true;\n\t\tlocalPlayer.controller.movementSpeed = 28;\n\t\tlocalPlayer.outfit.AnimationsHandler.play(\"walk\");\n\n\t}\n\n\tfunction onMoveKeyChange() {\n\t\tdebugMode && console.log(\"move key changed\");\n\t\tlocalPlayer.controller.direction = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\t}\n\n\tfunction onMoveKeyOff() {\n\t\tdebugMode && console.log(\"move key off\");\n\n\t\tif (  localPlayer.controller.isJumping \n\t\t\t|| !localPlayer.controller.isGrounded \n\t\t\t||  localPlayer.controller.isOnSlope ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar finalDirection = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\n\t\tlocalPlayer.controller.direction = finalDirection;\n\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\tlocalPlayer.controller.isRunning = false;\n\t\tlocalPlayer.controller.isWalking = false;\n\t\tlocalPlayer.controller.isIdling  = true;\n\t\tlocalPlayer.controller.movementSpeed = 0;\n\t\tlocalPlayer.outfit.AnimationsHandler.play(\"idle\");\n\t\tlocalPlayer.controller.dispatchEvent({type:\"startIdling\"});\n\n\t}\n\n\tfunction onJumpInput() {\n\t\tdebugMode && console.log(\"jump key on\");\n\n\t\tif (  localPlayer.controller.isJumping \n\t\t\t|| !localPlayer.controller.isGrounded \n\t\t\t||  localPlayer.controller.isOnSlope ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlocalPlayer.controller.jump();\n\t\tlocalPlayer.outfit.AnimationsHandler.jump();\n\n\t}\n\n//  JoystickControls.js (requires \"jquery.js\")\n\n\t$(document.head).append(\n\t\t\"<style class='joystick-controls'> \\n.gameinput-button__inner { display:table-cell; vertical-align: middle; } \\n\"\n\t\t+ \".gameinput-joystick { border:solid 0px white; border-radius:50%; position:absolute; bottom:30px; user-select:none; \"\n\t\t+ \"touch-action:none; -ms-touch-action:none; -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; } \\n\"\n\t\t+ \".gameinput-frame { position:absolute; top:0; left:0; pointer-events:none; opacity:0.5; } \\n\"\n\t\t+ \".gameinput-button { cursor:pointer; text-align:center; position:absolute; display:table; \\n\"\n\t\t+ \"box-sizing:border-box; border:1px solid #333; border-radius:50%; background:rgba( 255, 255, 255, .5 ); user-select:none; \"\n\t\t+ \"touch-action:none; -ms-touch-action:none; -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; } \\n\"\n\t\t+ \"#joystick1 { bottom:50px; right:40px; width:120px; height:120px;z-index:1; } \\n\"\n\t\t+ \"#joystick2 { bottom:50px; left:40px; width:120px; height:120px; z-index:1;} \\n\"\n\t\t+ \"#jumpButton { right:105px; bottom:240px; z-index:1; } \\n\"\n\t\t+ \"@media ( max-width: 768px ) { \\n#joystick1 { bottom:0px; right:0px; } \\n#joystick2 { bottom:0px; left:0px; } \\n\"\n\t\t+ \"#jumpButton { bottom:190px; right:65px; } \\n.gameinput-joystick { bottom:0px;} \\n} \\n\"\n\t\t+ \".gameinput-joystick__button { position:absolute; width:72px; height:72px; left:85px; top:85px; cursor:pointer; \"\n\t\t+ \"box-sizing:border-box; border-radius:50%; border:1px solid #333; background:rgba( 255, 255, 255, .5 ); } \\n\"\n\t\t+ \"</style>\"\n\t);\n\n\t$(document.body).append(\n\t\t'<div class=\"joystick-controls\" id=\"joystick-controls-1\">' \n\t\t+ '</div><div class=\"joystick-controls\" id=\"joystick-controls-2\"></div>'\n\t);\n\n\tvar joystick1Selector  = \"#joystick1\";\n\tvar joystick2Selector  = \"#joystick2\";\n\tvar jumpButtonSelector = \"#jumpButton\";\n\n\tvar joystickControlsSelector  = \".joystick-controls\";\n\tvar joystickControls1Selector = \"#joystick-controls-1\";\n\tvar joystickControls2Selector = \"#joystick-controls-2\";\n\n\tvar buttonSvgSrc = '<svg width=\"48\" height=\"48\" viewBox=\"0 0 64 64\"><path fill=\"#fff\" d=\"M44.5,54.5c-0.3-5.1-2.4-9.4-5.7-13.2C41,36,40.9,30,38.5,24.7c-1.2-2.7-3.9-4.4-6.9-3.3c-0.2,0.1-0.4,0.1-0.5,0.2c-3-4.3-6.6-8.3-10.1-11.8c-2.6-2.6-6.4,1.7-3.8,4.3c3.9,3.9,8.1,8.5,11,13.7c0,0.1,0.1,0.3,0.2,0.4c1.5,3.2,1.9,6.4,0.2,9.6c-0.3,0.5-0.4,1-0.5,1.5c-1.1,1.5-2.3,3-3.6,4.4c-0.8-2.3-1.4-4.7-1.6-7.1c-0.5-4.6-7.7-4.1-7.2,0.5c0.5,4.9,2.1,9.6,3.9,14.2c0.8,1.9,3.6,3.4,5.4,1.8c2.8-2.4,5.3-4.9,7.5-7.8c0.2,0.1,0.5,0.1,0.7,0.1c0.1,0.3,0.3,0.5,0.5,0.7c1.7,1.8,2.8,3.9,3.3,6.3c-2.2,0.8-4.6,1.4-7,1.4c-4.6,0.1-4.1,7.2,0.5,7.2c4-0.1,7.9-1.3,11.6-3C43.6,57.5,44.6,56.2,44.5,54.5z M34.2,8.9c0.7,0.1,1.6-0.1,2.3,0.3c1.5,0.8,2.6,2.1,3.2,3.6c0.2-2.2,0.5-4.3,0.8-6.5c0.5-3.7-5.1-4.7-5.7-1.1C34.6,6.3,34.3,7.8,34.2,8.9z\"/><circle fill=\"#fff\" cx=\"33.8\" cy=\"15.2\" r=\"4.9\"/></svg>';\n\n\tjoystick1  = new virtualInput.Joystick( $( joystickControls1Selector ), 94, { id: \"joystick1\" } );\n\tjoystick2  = new virtualInput.Joystick( $( joystickControls2Selector ), 94, { id: \"joystick2\" } );\n\tjumpButton = new virtualInput.Button( $( joystickControls1Selector ),   58, { id: \"jumpButton\", label: \"<b>JUMP</b>\" } ); // buttonSvgSrc\n\n\tjoystick1.addEventListener( \"active\", function () { \n\n\t\tif (  localPlayer.controller.isJumping || !localPlayer.controller.isGrounded ||  localPlayer.controller.isOnSlope ) return;\n\n\t\tlocalPlayer.controller.direction = (3 * Math.PI/2) - cameraControls.getFrontAngle() + this.angle; // important!\n\n\t\tif ( localPlayer.controller.isRunning && !localPlayer.controller.isWalking ) {\n\n\t\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\t\tlocalPlayer.controller.movementSpeed = 45;\n\t\t\tlocalPlayer.outfit.AnimationsHandler.play(\"run\");\n\n\t\t} else {\n\n\t\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\t\tlocalPlayer.controller.isRunning = true; \n\t\t\tlocalPlayer.controller.isWalking = false;  // !!!danger: \"false\" cause bug in production server ??? //\n\t\t\tlocalPlayer.controller.movementSpeed = 28;\n\t\t\tlocalPlayer.outfit.AnimationsHandler.play(\"walk\");\n\n\t\t}\n\t});\n\n\tjoystick1.addEventListener( \"disactive\", function () { \n\n\t\tif (  localPlayer.controller.isJumping || !localPlayer.controller.isGrounded ||  localPlayer.controller.isOnSlope ) return;\n\n\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\tlocalPlayer.controller.isRunning = false;\n\t\tlocalPlayer.controller.isWalking = false;\n\t\tlocalPlayer.controller.movementSpeed = 0;\n\t\tlocalPlayer.outfit.AnimationsHandler.play(\"idle\");\n\t\tlocalPlayer.controller.dispatchEvent({type:\"startIdling\"});\n\n\t});\n\n\tjoystick1.update = function(){\n\n\t\tif ( this.isActive ) {\n\n\t\t\tlocalPlayer.controller.direction = (3 * Math.PI/2) - cameraControls.getFrontAngle() + this.angle;\n\n\t\t\tthis.dispatchEvent({type:\"update\"}); // important!\n\n\t\t}\n\t};\n\n\tjoystick2.update = function(){\n\n\t\tif ( this.isActive ) {\n\n\t\t\tcameraControls.setLatLon(\n\t\t\t\tcameraControls.lat + this.position.y * 0.5, // deg.\n\t\t\t\tcameraControls.lon - this.position.x        // deg.\n\t\t\t);\n\n\t\t\tthis.dispatchEvent({type:\"update\"}); // important!\n\t\t}\n\t}\n\n\tjumpButton.addEventListener( \"press\", function () { \n\n\t\tif (  localPlayer.controller.isJumping || !localPlayer.controller.isGrounded || localPlayer.controller.isOnSlope ) return;\n\n\t\tlocalPlayer.controller.jump();\n\t\tlocalPlayer.outfit.AnimationsHandler.jump();\n\n\t});\n\n\n\n\twatch(cameraControls, [\"lat\", \"lon\"], function(){\n\t\tdefaultCameraLight.position.copy( camera.position );\n\t});\n\n\n\twatch(keyInputControls, \"frontAngle\", function(){\n\t\tdefaultCameraLight.position.copy( camera.position );\n\t});\n\n\n\n//\tkeyInputControls.On(); // important!\n\tconsole.log( \"application inited.\" );\n\n}\n\nfunction start(){\n\n\tkeyInputControls.On();\n\tconsole.log( \"application started.\" );\n}\n\nfunction stop(){\n\n\tkeyInputControls.Off();\n\t$(\".joystick-controls\").remove();\n\tconsole.log( \"application stopped.\" );\n}\n\n//\tRuntime.\n\nfunction update(){\n\n\tcameraControls.update();\n\tkeyInputControls.update();\n\tlocalPlayer.outfit.update();\n\tjoystick1.update();\n\tjoystick2.update();\n\n\n}\n"
			}],
		"05902F26-E7A6-4875-8D13-70E2EF94E04E": [
			{
				"name": "groundHelper.js",
				"source": "//\tgroundHelper.js\n\ndebugMode && console.log(this);\n\nvar helper = this;\nvar fontPath = \"/three/fonts/helvetiker_regular.typeface.json\";\n\ngroundHelper = groundHelper(1000, 10);  \naxisCustomHelper = customAxisHelper(5200);\naxisOriginHelper = originAxisHelper(1200);\n\nfunction init(){\n\thelper.add(groundHelper, axisOriginHelper);\n}\n\nfunction groundHelper(xz, step){\n\tif (!xz) xz = 1000;\n\tif (!step) step = 10;\n\tvar grid = new THREE.GridHelper( xz, step, 0x444444, 0x444444 );\n\tgrid.name = \"GRID\"\n\tgrid.position.y = 0;\n//\thelper.add( grid );\n\treturn grid;\n}\n\nfunction customAxisHelper( distance ){\n\tvar group = new THREE.Group();\n//\thelper.add(group);\n\n//  Lines.\n\tvar geometryAxisXpos = new THREE.Geometry();\n\tvar geometryAxisXneg = new THREE.Geometry();\n\tvar geometryAxisYpos = new THREE.Geometry();\n\tvar geometryAxisYneg = new THREE.Geometry();\n\tvar geometryAxisZpos = new THREE.Geometry();\n\tvar geometryAxisZneg = new THREE.Geometry();\n\n\tvar materialAxisXpos = new THREE.LineBasicMaterial( {color: 0xff0000} );\n\tvar materialAxisXneg = new THREE.LineBasicMaterial( {color: 0xff0000} );\n\tvar materialAxisYpos = new THREE.LineBasicMaterial( {color: 0x00ff00} );\n\tvar materialAxisYneg = new THREE.LineBasicMaterial( {color: 0x00ff00} );\n\tvar materialAxisZpos = new THREE.LineBasicMaterial( {color: 0x0000ff} );\n\tvar materialAxisZneg = new THREE.LineBasicMaterial( {color: 0x0000ff} );\n\n\tgeometryAxisXpos.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( distance, 0, 0 ) );\n\tgeometryAxisXneg.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3(-distance, 0, 0 ) );\n\tgeometryAxisYpos.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, distance, 0 ) );\n\tgeometryAxisYneg.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0,-distance, 0 ) );\n\tgeometryAxisZpos.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 0, distance ) );\n\tgeometryAxisZneg.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 0,-distance ) );\n\n\tvar lineAxisXpos = new THREE.Line( geometryAxisXpos, materialAxisXpos );\n\tvar lineAxisXneg = new THREE.Line( geometryAxisXneg, materialAxisXneg );\n\tvar lineAxisYpos = new THREE.Line( geometryAxisYpos, materialAxisYpos );\n\tvar lineAxisYneg = new THREE.Line( geometryAxisYneg, materialAxisYneg );\n\tvar lineAxisZpos = new THREE.Line( geometryAxisZpos, materialAxisZpos );\n\tvar lineAxisZneg = new THREE.Line( geometryAxisZneg, materialAxisZneg );\n\n\tgroup.add( lineAxisXpos );\n\tgroup.add( lineAxisXneg );\n//  group.add( lineAxisYpos );\n//  group.add( lineAxisYneg );\n\tgroup.add( lineAxisZpos );\n\tgroup.add( lineAxisZneg );\n\tgroup.name = \"AXES\";\n\n\treturn group;\n}\n\nfunction originAxisHelper( distance ){\n\tvar group = new THREE.Group();\n\tvar loader = new THREE.FontLoader();\n\tloader.load( fontPath, function ( response ) {\n\t\tvar font = response;\n\t\t//\thelper.add(group);\n\n\t\t//  Font Material\n\t\tvar materialFace = new THREE.MeshBasicMaterial( { color: 0xffffff } );\n\t\tvar materialSide = new THREE.MeshBasicMaterial( { color: 0x888888 } );\n\t\tvar materialArray = [ materialFace, materialSide ];\n\t\tvar material = new THREE.MeshFaceMaterial(materialArray);\n\n\t\t//  Text Styles.\n\t\th0 = { size: 40, height: 2,   curveSegments: 10, font: font, weight: \"normal\", style: \"normal\", bevelThickness: 1, bevelSize: 2, bevelEnabled: false, material: 0, extrudeMaterial: 1 }\n\t\th1 = { size: 20, height: 1,   curveSegments: 10, font: font, weight: \"normal\", style: \"normal\", bevelThickness: 1, bevelSize: 2, bevelEnabled: false, material: 0, extrudeMaterial: 1 }\n\t\th2 = { size: 10, height: 1,   curveSegments: 10, font: font, weight: \"normal\", style: \"normal\", bevelThickness: 1, bevelSize: 2, bevelEnabled: false, material: 0, extrudeMaterial: 1 }\n\t\th3 = { size: 5,  height: 0.5, curveSegments: 10, font: font, weight: \"normal\", style: \"normal\", bevelThickness: 1, bevelSize: 2, bevelEnabled: false, material: 0, extrudeMaterial: 1 }\n\n\t\t//  Origins Group.\n\t\tgroup.add( new Text3D( \"+x\", h1, [2, 2, 5], [ distance, 20, 0], [0, -Math.PI * 0.5, 0]) );\n\t\tgroup.add( new Text3D( \"-x\", h1, [2, 2, 5], [-distance, 20, 0], [0,  Math.PI * 0.5, 0]) ); \n\t\tgroup.add( new Text3D( \"+z\", h1, [2, 2, 5], [0, 20,  distance], [0, -Math.PI,       0]) ); \n\t\tgroup.add( new Text3D( \"-z\", h1, [2, 2, 5], [0, 20, -distance], [0,              0, 0]) ); \n\t\tgroup.add( new Text3D( \"+y\", h1, [2, 2, 5], [0,   distance, 0], [ Math.PI * 0.5, 0, 0]) ); \n\t\tgroup.add( new Text3D( \"-y\", h1, [2, 2, 5], [0,  -distance, 0], [-Math.PI * 0.5, 0, 0]) ); \n\t\tgroup.name = \"ORIGINS\";\n\n\t\t//  return group;\n\n\t\tfunction Text3D(text, style, scale, position, rotation){\n\t\t\tvar geometry = new THREE.TextGeometry( text, style );\n\t\t\tvar mesh = new THREE.Mesh(geometry, material );\n\t\t\tgeometry.computeBoundingBox();\n\t\t\tvar width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t\t\tmesh.scale.fromArray( scale ); \n\t\t\tmesh.geometry.center();\n\t\t\tmesh.position.fromArray( position );\n\t\t\tmesh.rotation.fromArray( rotation );\n\t\t\treturn mesh;\n\t\t}\n\n\t});\n\n\treturn group;\n}\n\n"
			}],
		"A19C133A-E409-4607-B7BD-0E2698549750": [
			{
				"name": "basic-animations.js",
				"source": "//\tbasic-animation.js\n\nAnimations = {}; // object.\n\nvar loader = new THREE.XHRLoader();\nloader.setResponseType( \"json\" );\nloader.load(\"/AW3D_db/animations.json\", function(results){\n\n\t//  returns an array of objects!\n\n\tdebugMode && console.log(\"animations:\", results);\n\n\tvar json = results.find(function(item){\n\t\treturn item._id == \"basic\";\n\t});\n\n\tdebugMode && console.log(\"basic:\", json);\n\n\tfor (var name in json){\n\t\tif ( name != \"_id\" ) Animations[name] = json[name];\n\t}\n\n});"
			},
			{
				"name": "male-animations.js",
				"source": "//\tmale-animation.js\n\nMaleAnimations = {}; // object.\n\nvar loader = new THREE.XHRLoader();\nloader.setResponseType( \"json\" );\nloader.load(\"/AW3D_db/animations.json\", function(results){\n\n\t//  returns an array of objects!\n\n\tvar json = results.find(function(item){\n\t\treturn item._id == \"male\";\n\t});\n\n\tdebugMode && console.log(\"male:\", json);\n\n\tfor (var name in json){\n\t\tif ( name != \"_id\" ) MaleAnimations[name] = json[name];\n\t}\n\n});"
			},
			{
				"name": "female-animations.js",
				"source": "//\tmale-animation.js\n\nFemaleAnimations = {}; // object.\n\nvar loader = new THREE.XHRLoader();\nloader.setResponseType( \"json\" );\nloader.load(\"/AW3D_db/animations.json\", function(results){\n\n\t//  returns an array of objects!\n\n\tvar json = results.find(function(item){\n\t\treturn item._id == \"female\";\n\t});\n\n\tdebugMode && console.log(\"female:\", json);\n\n\tfor (var name in json){\n\t\tif ( name != \"_id\" ) FemaleAnimations[name] = json[name];\n\t}\n\n});"
			}],
		"6AD93A00-35BA-4603-8634-129EA23AF066": [
			{
				"name": "skeleton-mesh-loader.js",
				"source": "skeleton = {}; // important!\n\nvar loader = new THREE.XHRLoader();\nvar url = \"/skinned/skeleton/skeleton.json\";\nloader.setResponseType( \"json\" );\nloader.load(url, function(json){\n\n\tdebugMode && console.log(\"skeleton:\", json);\n\n\tvar loader = new THREE.JSONLoader();\n\tvar object = loader.parse( json );\n\n\tdebugMode && console.log(\"object:\", object);\n\n\tvar geometry = object.geometry;\n\tgeometry.sourceFile = url;  // important!\n\tgeometry.name = json.name + \".geometry\";\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\tgeometry.computeBoundingBox();\n\tgeometry.computeBoundingSphere();\n\n\tvar material = new THREE.MeshLambertMaterial({\n\t\tside: 0,\n\t\topacity: 1,\n\t\tshading: 2,\n\t\temissive: 0,\n\t\tskinning: true,\n\t\tcolor: 16777215,\n\t\ttransparent: false,\n\t\tname: \"HF_SkeletonMaterial\",\n\t});\n\n\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\tskinned.renderDepth = 1;\n\tskinned.frustumCulled = false;\n\tskinned.position.set( 0, 0, 0 );\n\tskinned.rotation.set( 0, 0, 0 );\n\tskinned.scale.set( 1,1,1 );\n\tskinned.castShadow = true;\n\tskinned.name = json.name;\n\n\tskeleton = skinned; // important!\n\tlocalPlayer.outfit.add({\"skeleton\":skeleton});\n\n});\n\n/*\nfunction init(){\n//\tAdd to scene. (debugging)\n\tvar data = {\n\t\tgeometry: \"/skinned/skeleton/skeleton.json\",\n\t\tmaterial: {\n\t\t\tcolor: 16777215,\n\t\t\temissive: 0,\n\t\t\tname: \"HF_SkeletonMaterial\",\n\t\t\topacity: 1,\n\t\t\tshading: 2,\n\t\t\tside: 0,\n\t\t\tskinning: true,\n\t\t\ttransparent: false,\n\t\t\ttype: \"MeshLambertMaterial\",\n\t\t},\n\t\tname: \"body\",\n\t\tscale: [1, 1, 1],\n\t\tvisible: true,\n\t};\n\n\tlocalPlayer.outfit.fromJSON({\"skeleton\":data});\n}\n*/"
			}],
		"3854A5B6-1389-4A5F-887D-950B553DAD02": [
			{
				"name": "octree-helpers.js",
				"source": "//  Octree helpers.js\n\nvar octreehelper = this;\n\noctreeMeshHelpers = [];\noctreeEdgesHelpers = [];\n\n//  Add octree edges helpers.\noctreeHelpers( octree );\n\nfunction octreeHelpers( octree ){\n\tvar nodeIndex = octree.nodes.length - 1;\n\tvar node = octree.nodes[ nodeIndex ][0];\n\tvar x = node.max.x - node.min.x;\n\tvar y = node.max.y - node.min.y;\n\tvar z = node.max.z - node.min.z;\n\tvar geometry = new THREE.BoxGeometry(x, y, z);\n\tvar material = new THREE.MeshBasicMaterial({visible:false});\n\n\toctree.nodes[ nodeIndex ].forEach(function(node){\n\n\t\tvar x = node.max.x - node.min.x;\n\t\tvar y = node.max.y - node.min.y;\n\t\tvar z = node.max.z - node.min.z;\n\n\t\tvar mesh = new THREE.Mesh(geometry, material);\n\t\tvar helper = new THREE.EdgesHelper( mesh, 0xffff00 );\n\n\t\tmesh.position.set(\n\t\t\tnode.min.x + (x/2),\n\t\t\tnode.min.y + (y/2),\n\t\t\tnode.min.z + (z/2)\n\t\t);\n\n\t\toctreehelper.add( mesh, helper );\n\n\t\toctreeMeshHelpers.push(mesh);\n\t\toctreeEdgesHelpers.push(helper);\n\t});\n}\n\nfunction octreeNodeHelper( node ){\n\n\tvar x = node.max.x - node.min.x;\n\tvar y = node.max.y - node.min.y;\n\tvar z = node.max.z - node.min.z;\n\n\tvar geometry = new THREE.BoxGeometry(x, y, z);\n\tvar material = new THREE.MeshBasicMaterial({visible:false});\n\tvar mesh = new THREE.Mesh(geometry, material);\n\n\tmesh.position.set(\n\t\tnode.min.x + (x/2),\n\t\tnode.min.y + (y/2),\n\t\tnode.min.z + (z/2)\n\t);\n\n\toctreehelper.add( mesh );\n\toctreeMeshHelpers.push(mesh);\n\n\tvar helper = new THREE.EdgesHelper( mesh, 0xffff00 );\n\n\thelper.name = \"octree helper\";\n\toctreehelper.add( helper );\n\toctreeEdgesHelpers.push(helper);\n}\n\n/*\n//  Remove octree mesh helpers.\n    setTimeout(function(){\n        octreeMeshHelpers.forEach( function( item, i ){\n            octreehelper.remove( octreeMeshHelpers[i] );\n            var geometry = octreeMeshHelpers[i].geometry;\n            var material = octreeMeshHelpers[i].material;\n            geometry.dispose();\n            material.dispose();\n        });\n        console.log( \"octree mesh helpers has been removed.\" );\n    }, 5000);\n*/\n"
			}],
		"AF01D9C1-165B-477E-9DB6-3F8CC5BA7E3C": [
			{
				"name": "camera-light.js",
				"source": "defaultCameraLight = this;\n"
			}]
	},
	"camera": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "2354248D-2FAD-4239-908B-73D348845055",
			"type": "PerspectiveCamera",
			"name": "Camera",
			"matrix": [0.20020972192287445,2.351282502033314e-9,-0.9797530770301819,0,-0.3344773054122925,0.9399219751358032,-0.06834947317838669,0,0.9208914041519165,0.34138938784599304,0.18818150460720062,0,83.17349243164062,35.39167785644531,17.747600555419922,1],
			"fov": 50,
			"zoom": 1,
			"near": 0.1,
			"far": 10000,
			"focus": 10,
			"aspect": 1.05848623853211,
			"filmGauge": 35,
			"filmOffset": 0
		}
	},
	"scene": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "BCC3A53B-07C6-4FC3-B308-8F4A3E94469D",
			"type": "Scene",
			"name": "Scene",
			"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],
			"children": [
				{
					"uuid": "AF01D9C1-165B-477E-9DB6-3F8CC5BA7E3C",
					"type": "DirectionalLight",
					"name": "Default Camera Light",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,57.883541107177734,16.780786514282227,69.53287506103516,1],
					"color": 16777215,
					"intensity": 0.5
				},
				{
					"uuid": "9434477B-B3D8-4832-8154-CC8A8AD68FFC",
					"type": "Group",
					"name": "Lights",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],
					"children": [
						{
							"uuid": "11880467-1961-4E81-8D71-66BC39DFA18E",
							"type": "DirectionalLight",
							"name": "DirectionalLight 1",
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,50,50,1],
							"color": 16777215,
							"intensity": 0.5
						},
						{
							"uuid": "1F367C36-34FA-41A0-B723-1CB1D350E369",
							"type": "DirectionalLight",
							"name": "DirectionalLight 2",
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-35,55,-35,1],
							"color": 16777215,
							"intensity": 0.5
						},
						{
							"uuid": "51FC0AE7-DB3F-49CF-8C6A-AFE849A0C554",
							"type": "DirectionalLight",
							"name": "DirectionalLight 3",
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,35,55,-35,1],
							"color": 16777215,
							"intensity": 0.5
						}]
				},
				{
					"uuid": "05902F26-E7A6-4875-8D13-70E2EF94E04E",
					"type": "Group",
					"name": "Ground Helper",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "3854A5B6-1389-4A5F-887D-950B553DAD02",
					"type": "Group",
					"name": "Octree Helpers",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "A19C133A-E409-4607-B7BD-0E2698549750",
					"type": "Group",
					"name": "Animations Loader",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "6AD93A00-35BA-4603-8634-129EA23AF066",
					"type": "Group",
					"name": "Skinned Meshes Loader",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				}]
		}
	}
}