{
	"metadata": {
		"type": "App"
	},
	"project": {
		"vr": false,
		"cache": true,
		"editable": true,
		"debugMode": true,
		"shadows": true
	},
	"functions": [],
	"stylesheets": [],
	"javascripts": [
		{
			"name": "ui.js",
			"_id": "ui",
			"source": "\"/**\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n */\\r\\n\\r\\nUI = {};\\r\\n\\r\\nUI.Element = function ( dom ) {\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Element.prototype = {\\r\\n\\r\\n\\tadd: function () {\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < arguments.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar argument = arguments[ i ];\\r\\n\\r\\n\\t\\t\\tif ( argument instanceof UI.Element ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.dom.appendChild( argument.dom );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tconsole.error( \\\"UI.Element:\\\", argument, \\\"is not an instance of UI.Element.\\\" );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tremove: function () {\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < arguments.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tvar argument = arguments[ i ];\\r\\n\\r\\n\\t\\t\\tif ( argument instanceof UI.Element ) {\\r\\n\\r\\n\\t\\t\\t\\tthis.dom.removeChild( argument.dom );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tconsole.error( \\\"UI.Element:\\\", argument, \\\"is not an instance of UI.Element.\\\" );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclear: function () {\\r\\n\\r\\n\\t\\twhile ( this.dom.children.length ) {\\r\\n\\r\\n\\t\\t\\tthis.dom.removeChild( this.dom.lastChild );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetId: function ( id ) {\\r\\n\\r\\n\\t\\tthis.dom.id = id;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetClass: function ( name ) {\\r\\n\\r\\n\\t\\tthis.dom.className = name;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetStyle: function ( style, array ) {\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < array.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.dom.style[ style ] = array[ i ];\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetDisabled: function ( value ) {\\r\\n\\r\\n\\t\\tthis.dom.disabled = value;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tsetTextContent: function ( value ) {\\r\\n\\r\\n\\t\\tthis.dom.textContent = value;\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\n// properties\\r\\n\\r\\nvar properties = [ \\r\\n\\t\\\"position\\\", \\\"left\\\", \\\"top\\\", \\\"right\\\", \\\"bottom\\\", \\\"minWidth\\\", \\\"width\\\", \\\"height\\\", \\\"border\\\", \\\"borderLeft\\\",\\r\\n\\t\\\"borderTop\\\", \\\"borderRight\\\", \\\"borderBottom\\\", \\\"borderColor\\\", \\\"display\\\", \\\"overflow\\\", \\\"margin\\\", \\\"marginLeft\\\", \\\"marginTop\\\", \\r\\n\\t\\\"marginRight\\\", \\\"marginBottom\\\", \\\"padding\\\", \\\"paddingLeft\\\", \\\"paddingTop\\\", \\\"paddingRight\\\", \\\"paddingBottom\\\", \\\"color\\\", \\\"background\\\", \\r\\n\\t\\\"backgroundColor\\\", \\\"opacity\\\", \\\"fontSize\\\", \\\"fontWeight\\\", \\\"textAlign\\\", \\\"textDecoration\\\", \\\"textTransform\\\", \\\"cursor\\\", \\\"zIndex\\\" \\r\\n];\\r\\n\\r\\nproperties.forEach( function ( property ) {\\r\\n\\r\\n\\tvar method = \\\"set\\\" + property.substr( 0, 1 ).toUpperCase() + property.substr( 1, property.length );\\r\\n\\r\\n\\tUI.Element.prototype[ method ] = function () {\\r\\n\\r\\n\\t\\tthis.setStyle( property, arguments );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t};\\r\\n\\r\\n});\\r\\n\\r\\n// events\\r\\n\\r\\nvar events = [ \\\"KeyUp\\\", \\\"KeyDown\\\", \\\"MouseOver\\\", \\\"MouseOut\\\", \\\"Click\\\", \\\"DblClick\\\", \\\"Change\\\" ];\\r\\n\\r\\nevents.forEach( function ( event ) {\\r\\n\\r\\n\\tvar method = \\\"on\\\" + event;\\r\\n\\r\\n\\tUI.Element.prototype[ method ] = function ( callback ) {\\r\\n\\r\\n\\t\\tthis.dom.addEventListener( event.toLowerCase(), callback.bind( this ), false );\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\r\\n\\t};\\r\\n\\r\\n});\\r\\n\\r\\n// Span\\r\\n\\r\\nUI.Span = function () {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tthis.dom = document.createElement( \\\"span\\\" );\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Span.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Span.prototype.constructor = UI.Span;\\r\\n\\r\\n// Div\\r\\n\\r\\nUI.Div = function () {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tthis.dom = document.createElement( \\\"div\\\" );\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Div.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Div.prototype.constructor = UI.Div;\\r\\n\\r\\n// Row\\r\\n\\r\\nUI.Row = function () {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"div\\\" );\\r\\n\\tdom.className = \\\"Row\\\";\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Row.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Row.prototype.constructor = UI.Row;\\r\\n\\r\\n// Panel.\\r\\n\\r\\nUI.Panel = function () {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"div\\\" );\\r\\n\\tdom.className = \\\"Panel\\\";\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Panel.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Panel.prototype.constructor = UI.Panel;\\r\\n\\r\\n\\r\\n// Collapsible Panel.\\r\\n\\r\\nUI.CollapsiblePanel = function () {\\r\\n\\r\\n\\tUI.Panel.call( this );\\r\\n\\r\\n\\tthis.setClass( \\\"Panel Collapsible\\\" );\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tthis.static = new UI.Panel();\\r\\n\\tthis.static.setClass( \\\"Static\\\" );\\r\\n\\tthis.static.onClick( function () {\\r\\n\\r\\n\\t\\tscope.toggle();\\r\\n\\r\\n\\t});\\r\\n\\r\\n\\tthis.dom.appendChild( this.static.dom );\\r\\n\\r\\n\\tthis.contents = new UI.Panel();\\r\\n\\tthis.contents.setClass( \\\"Content\\\" );\\r\\n\\tthis.dom.appendChild( this.contents.dom );\\r\\n\\r\\n\\tvar button = new UI.Panel();\\r\\n\\tbutton.setClass( \\\"Button\\\" );\\r\\n\\tthis.static.add( button );\\r\\n\\r\\n\\tthis.isCollapsed = false;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.CollapsiblePanel.prototype = Object.create( UI.Panel.prototype );\\r\\nUI.CollapsiblePanel.prototype.constructor = UI.CollapsiblePanel;\\r\\n\\r\\nUI.CollapsiblePanel.prototype.addStatic = function () {\\r\\n\\r\\n\\tthis.static.add.apply( this.static, arguments );\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.CollapsiblePanel.prototype.removeStatic = function () {\\r\\n\\r\\n\\tthis.static.remove.apply( this.static, arguments );\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.CollapsiblePanel.prototype.clearStatic = function () {\\r\\n\\r\\n\\tthis.static.clear();\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.CollapsiblePanel.prototype.add = function () {\\r\\n\\r\\n\\tthis.contents.add.apply( this.contents, arguments );\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.CollapsiblePanel.prototype.remove = function () {\\r\\n\\r\\n\\tthis.contents.remove.apply( this.contents, arguments );\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.CollapsiblePanel.prototype.clear = function () {\\r\\n\\r\\n\\tthis.contents.clear();\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.CollapsiblePanel.prototype.toggle = function() {\\r\\n\\r\\n\\tthis.setCollapsed( ! this.isCollapsed );\\r\\n\\r\\n};\\r\\n\\r\\nUI.CollapsiblePanel.prototype.collapse = function() {\\r\\n\\r\\n\\tthis.setCollapsed( true );\\r\\n\\r\\n};\\r\\n\\r\\nUI.CollapsiblePanel.prototype.expand = function() {\\r\\n\\r\\n\\tthis.setCollapsed( false );\\r\\n\\r\\n};\\r\\n\\r\\nUI.CollapsiblePanel.prototype.setCollapsed = function( boolean ) {\\r\\n\\r\\n\\tif ( boolean ) {\\r\\n\\r\\n\\t\\tthis.dom.classList.add( \\\"collapsed\\\" );\\r\\n\\r\\n\\t} else {\\r\\n\\r\\n\\t\\tthis.dom.classList.remove( \\\"collapsed\\\" );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.isCollapsed = boolean;\\r\\n\\r\\n\\tif ( this.onCollapsedChangeCallback !== undefined ) {\\r\\n\\r\\n\\t\\tthis.onCollapsedChangeCallback( boolean );\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nUI.CollapsiblePanel.prototype.onCollapsedChange = function ( callback ) {\\r\\n\\r\\n\\tthis.onCollapsedChangeCallback = callback;\\r\\n\\r\\n};\\r\\n\\r\\n// Text\\r\\n\\r\\nUI.Text = function ( text ) {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"span\\\" );\\r\\n\\tdom.className = \\\"Text\\\";\\r\\n\\tdom.style.cursor = \\\"default\\\";\\r\\n\\tdom.style.display = \\\"inline-block\\\";\\r\\n\\tdom.style.verticalAlign = \\\"middle\\\";\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\tthis.setValue( text );\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Text.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Text.prototype.constructor = UI.Text;\\r\\n\\r\\nUI.Text.prototype.getValue = function () {\\r\\n\\r\\n\\treturn this.dom.textContent;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Text.prototype.setValue = function ( value ) {\\r\\n\\r\\n\\tif ( value !== undefined ) {\\r\\n\\r\\n\\t\\tthis.dom.textContent = value;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n// Input\\r\\n\\r\\nUI.Input = function ( text ) {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"input\\\" );\\r\\n\\tdom.className = \\\"Input\\\";\\r\\n\\tdom.style.padding = \\\"2px\\\";\\r\\n\\tdom.style.border = \\\"1px solid transparent\\\";\\r\\n\\r\\n\\tdom.addEventListener( \\\"keydown\\\", function ( event ) {\\r\\n\\r\\n\\t\\tevent.stopPropagation();\\r\\n\\r\\n\\t}, false );\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\tthis.setValue( text );\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Input.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Input.prototype.constructor = UI.Input;\\r\\n\\r\\nUI.Input.prototype.getValue = function () {\\r\\n\\r\\n\\treturn this.dom.value;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Input.prototype.setValue = function ( value ) {\\r\\n\\r\\n\\tthis.dom.value = value;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n// TextArea\\r\\n\\r\\nUI.TextArea = function () {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"textarea\\\" );\\r\\n\\tdom.className = \\\"TextArea\\\";\\r\\n\\tdom.style.padding = \\\"2px\\\";\\r\\n\\tdom.spellcheck = false;\\r\\n\\r\\n\\tdom.addEventListener( \\\"keydown\\\", function ( event ) {\\r\\n\\r\\n\\t\\tevent.stopPropagation();\\r\\n\\r\\n\\t\\tif ( event.keyCode === 9 ) {\\r\\n\\r\\n\\t\\t\\tevent.preventDefault();\\r\\n\\r\\n\\t\\t\\tvar cursor = dom.selectionStart;\\r\\n\\r\\n\\t\\t\\tdom.value = dom.value.substring( 0, cursor ) + \\\"\\\\t\\\" + dom.value.substring( cursor );\\r\\n\\t\\t\\tdom.selectionStart = cursor + 1;\\r\\n\\t\\t\\tdom.selectionEnd = dom.selectionStart;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}, false );\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.TextArea.prototype = Object.create( UI.Element.prototype );\\r\\nUI.TextArea.prototype.constructor = UI.TextArea;\\r\\n\\r\\nUI.TextArea.prototype.getValue = function () {\\r\\n\\r\\n\\treturn this.dom.value;\\r\\n\\r\\n};\\r\\n\\r\\nUI.TextArea.prototype.setValue = function ( value ) {\\r\\n\\r\\n\\tthis.dom.value = value;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n// Select\\r\\n\\r\\nUI.Select = function () {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"select\\\" );\\r\\n\\tdom.className = \\\"Select\\\";\\r\\n\\tdom.style.padding = \\\"2px\\\";\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Select.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Select.prototype.constructor = UI.Select;\\r\\n\\r\\nUI.Select.prototype.setMultiple = function ( boolean ) {\\r\\n\\r\\n\\tthis.dom.multiple = boolean;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Select.prototype.setOptions = function ( options ) {\\r\\n\\r\\n\\tvar selected = this.dom.value;\\r\\n\\r\\n\\twhile ( this.dom.children.length > 0 ) {\\r\\n\\r\\n\\t\\tthis.dom.removeChild( this.dom.firstChild );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfor ( var key in options ) {\\r\\n\\r\\n\\t\\tvar option = document.createElement( \\\"option\\\" );\\r\\n\\t\\toption.value = key;\\r\\n\\t\\toption.innerHTML = options[ key ];\\r\\n\\t\\tthis.dom.appendChild( option );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.dom.value = selected;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Select.prototype.getValue = function () {\\r\\n\\r\\n\\treturn this.dom.value;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Select.prototype.setValue = function ( value ) {\\r\\n\\r\\n\\tvalue = String( value );\\r\\n\\r\\n\\tif ( this.dom.value !== value ) {\\r\\n\\r\\n\\t\\tthis.dom.value = value;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n// Checkbox\\r\\n\\r\\nUI.Checkbox = function ( boolean ) {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"input\\\" );\\r\\n\\tdom.className = \\\"Checkbox\\\";\\r\\n\\tdom.type = \\\"checkbox\\\";\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\tthis.setValue( boolean );\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Checkbox.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Checkbox.prototype.constructor = UI.Checkbox;\\r\\n\\r\\nUI.Checkbox.prototype.getValue = function () {\\r\\n\\r\\n\\treturn this.dom.checked;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Checkbox.prototype.setValue = function ( value ) {\\r\\n\\r\\n\\tif ( value !== undefined ) {\\r\\n\\r\\n\\t\\tthis.dom.checked = value;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n// Color\\r\\n\\r\\nUI.Color = function () {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"input\\\" );\\r\\n\\tdom.className = \\\"Color\\\";\\r\\n\\tdom.style.width = \\\"64px\\\";\\r\\n\\tdom.style.height = \\\"17px\\\";\\r\\n\\tdom.style.border = \\\"0px\\\";\\r\\n\\tdom.style.padding = \\\"2px\\\";\\r\\n\\tdom.style.backgroundColor = \\\"transparent\\\";\\r\\n\\r\\n\\ttry {\\r\\n\\r\\n\\t\\tdom.type = \\\"color\\\";\\r\\n\\t\\tdom.value = \\\"#ffffff\\\";\\r\\n\\r\\n\\t} catch ( exception ) {}\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Color.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Color.prototype.constructor = UI.Color;\\r\\n\\r\\nUI.Color.prototype.getValue = function () {\\r\\n\\r\\n\\treturn this.dom.value;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Color.prototype.getHexValue = function () {\\r\\n\\r\\n\\treturn parseInt( this.dom.value.substr( 1 ), 16 );\\r\\n\\r\\n};\\r\\n\\r\\nUI.Color.prototype.setValue = function ( value ) {\\r\\n\\r\\n\\tthis.dom.value = value;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Color.prototype.setHexValue = function ( hex ) {\\r\\n\\r\\n\\tthis.dom.value = \\\"#\\\" + ( \\\"000000\\\" + hex.toString( 16 ) ).slice( - 6 );\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n// Number\\r\\n\\r\\nUI.Number = function ( number ) {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"input\\\" );\\r\\n\\tdom.className = \\\"Number\\\";\\r\\n\\tdom.value = \\\"0.00\\\";\\r\\n\\r\\n\\tdom.addEventListener( \\\"keydown\\\", function ( event ) {\\r\\n\\r\\n\\t\\tevent.stopPropagation();\\r\\n\\r\\n\\t\\tif ( event.keyCode === 13 ) dom.blur();\\r\\n\\r\\n\\t}, false );\\r\\n\\r\\n\\tthis.value = 0;\\r\\n\\r\\n\\tthis.min = - Infinity;\\r\\n\\tthis.max = Infinity;\\r\\n\\r\\n\\tthis.precision = 2;\\r\\n\\tthis.step = 1;\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\r\\n\\tthis.setValue( number );\\r\\n\\r\\n\\tvar changeEvent = document.createEvent( \\\"HTMLEvents\\\" );\\r\\n\\tchangeEvent.initEvent( \\\"change\\\", true, true );\\r\\n\\r\\n\\tvar distance = 0;\\r\\n\\tvar onMouseDownValue = 0;\\r\\n\\r\\n\\tvar pointer = [ 0, 0 ];\\r\\n\\tvar prevPointer = [ 0, 0 ];\\r\\n\\r\\n\\tfunction onMouseDown( event ) {\\r\\n\\r\\n\\t\\tevent.preventDefault();\\r\\n\\r\\n\\t\\tdistance = 0;\\r\\n\\r\\n\\t\\tonMouseDownValue = scope.value;\\r\\n\\r\\n\\t\\tprevPointer = [ event.clientX, event.clientY ];\\r\\n\\r\\n\\t\\tdocument.addEventListener( \\\"mousemove\\\", onMouseMove, false );\\r\\n\\t\\tdocument.addEventListener( \\\"mouseup\\\", onMouseUp, false );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onMouseMove( event ) {\\r\\n\\r\\n\\t\\tvar currentValue = scope.value;\\r\\n\\r\\n\\t\\tpointer = [ event.clientX, event.clientY ];\\r\\n\\r\\n\\t\\tdistance += ( pointer[ 0 ] - prevPointer[ 0 ] ) - ( pointer[ 1 ] - prevPointer[ 1 ] );\\r\\n\\r\\n\\t\\tvar value = onMouseDownValue + ( distance / ( event.shiftKey ? 5 : 50 ) ) * scope.step;\\r\\n\\t\\tvalue = Math.min( scope.max, Math.max( scope.min, value ) );\\r\\n\\r\\n\\t\\tif ( currentValue !== value ) {\\r\\n\\r\\n\\t\\t\\tscope.setValue( value );\\r\\n\\t\\t\\tdom.dispatchEvent( changeEvent );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tprevPointer = [ event.clientX, event.clientY ];\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onMouseUp( event ) {\\r\\n\\r\\n\\t\\tdocument.removeEventListener( \\\"mousemove\\\", onMouseMove, false );\\r\\n\\t\\tdocument.removeEventListener( \\\"mouseup\\\", onMouseUp, false );\\r\\n\\r\\n\\t\\tif ( Math.abs( distance ) < 2 ) {\\r\\n\\r\\n\\t\\t\\tdom.focus();\\r\\n\\t\\t\\tdom.select();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onChange( event ) {\\r\\n\\r\\n\\t\\tvar value = 0;\\r\\n\\r\\n\\t\\ttry {\\r\\n\\r\\n\\t\\t\\tvalue = eval( dom.value );\\r\\n\\r\\n\\t\\t} catch ( error ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( error.message );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tscope.setValue( value );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onFocus( event ) {\\r\\n\\r\\n\\t\\tdom.style.backgroundColor = \\\"\\\";\\r\\n\\t\\tdom.style.cursor = \\\"\\\";\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onBlur( event ) {\\r\\n\\r\\n\\t\\tdom.style.backgroundColor = \\\"transparent\\\";\\r\\n\\t\\tdom.style.cursor = \\\"col-resize\\\";\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tonBlur();\\r\\n\\r\\n\\tdom.addEventListener( \\\"mousedown\\\", onMouseDown, false );\\r\\n\\tdom.addEventListener( \\\"change\\\", onChange, false );\\r\\n\\tdom.addEventListener( \\\"focus\\\", onFocus, false );\\r\\n\\tdom.addEventListener( \\\"blur\\\", onBlur, false );\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Number.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Number.prototype.constructor = UI.Number;\\r\\n\\r\\nUI.Number.prototype.getValue = function () {\\r\\n\\r\\n\\treturn this.value;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Number.prototype.setValue = function ( value ) {\\r\\n\\r\\n\\tif ( value !== undefined ) {\\r\\n\\r\\n\\t\\tvalue = parseFloat( value );\\r\\n\\r\\n\\t\\tif ( value < this.min ) value = this.min;\\r\\n\\t\\tif ( value > this.max ) value = this.max;\\r\\n\\r\\n\\t\\tthis.value = value;\\r\\n\\t\\tthis.dom.value = value.toFixed( this.precision );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Number.prototype.setRange = function ( min, max ) {\\r\\n\\r\\n\\tthis.min = min;\\r\\n\\tthis.max = max;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Number.prototype.setPrecision = function ( precision ) {\\r\\n\\r\\n\\tthis.precision = precision;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n// Integer\\r\\n\\r\\nUI.Integer = function ( number ) {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"input\\\" );\\r\\n\\tdom.className = \\\"Number\\\";\\r\\n\\tdom.value = \\\"0\\\";\\r\\n\\r\\n\\tdom.addEventListener( \\\"keydown\\\", function ( event ) {\\r\\n\\r\\n\\t\\tevent.stopPropagation();\\r\\n\\r\\n\\t}, false );\\r\\n\\r\\n\\tthis.value = 0;\\r\\n\\r\\n\\tthis.min = - Infinity;\\r\\n\\tthis.max = Infinity;\\r\\n\\r\\n\\tthis.step = 1;\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\r\\n\\tthis.setValue( number );\\r\\n\\r\\n\\tvar changeEvent = document.createEvent( \\\"HTMLEvents\\\" );\\r\\n\\tchangeEvent.initEvent( \\\"change\\\", true, true );\\r\\n\\r\\n\\tvar distance = 0;\\r\\n\\tvar onMouseDownValue = 0;\\r\\n\\r\\n\\tvar pointer = [ 0, 0 ];\\r\\n\\tvar prevPointer = [ 0, 0 ];\\r\\n\\r\\n\\tfunction onMouseDown( event ) {\\r\\n\\r\\n\\t\\tevent.preventDefault();\\r\\n\\r\\n\\t\\tdistance = 0;\\r\\n\\r\\n\\t\\tonMouseDownValue = scope.value;\\r\\n\\r\\n\\t\\tprevPointer = [ event.clientX, event.clientY ];\\r\\n\\r\\n\\t\\tdocument.addEventListener( \\\"mousemove\\\", onMouseMove, false );\\r\\n\\t\\tdocument.addEventListener( \\\"mouseup\\\", onMouseUp, false );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onMouseMove( event ) {\\r\\n\\r\\n\\t\\tvar currentValue = scope.value;\\r\\n\\r\\n\\t\\tpointer = [ event.clientX, event.clientY ];\\r\\n\\r\\n\\t\\tdistance += ( pointer[ 0 ] - prevPointer[ 0 ] ) - ( pointer[ 1 ] - prevPointer[ 1 ] );\\r\\n\\r\\n\\t\\tvar value = onMouseDownValue + ( distance / ( event.shiftKey ? 5 : 50 ) ) * scope.step;\\r\\n\\t\\tvalue = Math.min( scope.max, Math.max( scope.min, value ) ) | 0;\\r\\n\\r\\n\\t\\tif ( currentValue !== value ) {\\r\\n\\r\\n\\t\\t\\tscope.setValue( value );\\r\\n\\t\\t\\tdom.dispatchEvent( changeEvent );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tprevPointer = [ event.clientX, event.clientY ];\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onMouseUp( event ) {\\r\\n\\r\\n\\t\\tdocument.removeEventListener( \\\"mousemove\\\", onMouseMove, false );\\r\\n\\t\\tdocument.removeEventListener( \\\"mouseup\\\", onMouseUp, false );\\r\\n\\r\\n\\t\\tif ( Math.abs( distance ) < 2 ) {\\r\\n\\r\\n\\t\\t\\tdom.focus();\\r\\n\\t\\t\\tdom.select();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onChange( event ) {\\r\\n\\r\\n\\t\\tvar value = 0;\\r\\n\\r\\n\\t\\ttry {\\r\\n\\r\\n\\t\\t\\tvalue = eval( dom.value );\\r\\n\\r\\n\\t\\t} catch ( error ) {\\r\\n\\r\\n\\t\\t\\tconsole.error( error.message );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tscope.setValue( value );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onFocus( event ) {\\r\\n\\r\\n\\t\\tdom.style.backgroundColor = \\\"\\\";\\r\\n\\t\\tdom.style.cursor = \\\"\\\";\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onBlur( event ) {\\r\\n\\r\\n\\t\\tdom.style.backgroundColor = \\\"transparent\\\";\\r\\n\\t\\tdom.style.cursor = \\\"col-resize\\\";\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tonBlur();\\r\\n\\r\\n\\tdom.addEventListener( \\\"mousedown\\\", onMouseDown, false );\\r\\n\\tdom.addEventListener( \\\"change\\\", onChange, false );\\r\\n\\tdom.addEventListener( \\\"focus\\\", onFocus, false );\\r\\n\\tdom.addEventListener( \\\"blur\\\", onBlur, false );\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Integer.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Integer.prototype.constructor = UI.Integer;\\r\\n\\r\\nUI.Integer.prototype.getValue = function () {\\r\\n\\r\\n\\treturn this.value;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Integer.prototype.setValue = function ( value ) {\\r\\n\\r\\n\\tif ( value !== undefined ) {\\r\\n\\r\\n\\t\\tthis.value = value | 0;\\r\\n\\t\\tthis.dom.value = value | 0;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Integer.prototype.setRange = function ( min, max ) {\\r\\n\\r\\n\\tthis.min = min;\\r\\n\\tthis.max = max;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n// Break\\r\\n\\r\\nUI.Break = function () {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"br\\\" );\\r\\n\\tdom.className = \\\"Break\\\";\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Break.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Break.prototype.constructor = UI.Break;\\r\\n\\r\\n\\r\\n// HorizontalRule\\r\\n\\r\\nUI.HorizontalRule = function () {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"hr\\\" );\\r\\n\\tdom.className = \\\"HorizontalRule\\\";\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.HorizontalRule.prototype = Object.create( UI.Element.prototype );\\r\\nUI.HorizontalRule.prototype.constructor = UI.HorizontalRule;\\r\\n\\r\\n\\r\\n// Button\\r\\n\\r\\nUI.Button = function ( value ) {\\r\\n\\r\\n\\tUI.Element.call( this );\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"button\\\" );\\r\\n\\tdom.className = \\\"Button\\\";\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\tthis.dom.textContent = value;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Button.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Button.prototype.constructor = UI.Button;\\r\\n\\r\\nUI.Button.prototype.setLabel = function ( value ) {\\r\\n\\r\\n\\tthis.dom.textContent = value;\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n// Modal\\r\\n\\r\\nUI.Modal = function ( value ) {\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\r\\n\\tvar dom = document.createElement( \\\"div\\\" );\\r\\n\\r\\n\\tdom.style.position = \\\"absolute\\\";\\r\\n\\tdom.style.width = \\\"100%\\\";\\r\\n\\tdom.style.height = \\\"100%\\\";\\r\\n\\tdom.style.backgroundColor = \\\"rgba(0,0,0,0.5)\\\";\\r\\n\\tdom.style.display = \\\"none\\\";\\r\\n\\tdom.style.alignItems = \\\"center\\\";\\r\\n\\tdom.style.justifyContent = \\\"center\\\";\\r\\n\\tdom.addEventListener( \\\"click\\\", function ( event ) {\\r\\n\\r\\n\\t\\tscope.hide();\\r\\n\\r\\n\\t});\\r\\n\\r\\n\\tthis.dom = dom;\\r\\n\\r\\n\\tthis.container = new UI.Panel();\\r\\n\\tthis.container.dom.style.width = \\\"200px\\\";\\r\\n\\tthis.container.dom.style.padding = \\\"20px\\\";\\r\\n\\tthis.container.dom.style.backgroundColor = \\\"#ffffff\\\";\\r\\n\\tthis.container.dom.style.boxShadow = \\\"0px 5px 10px rgba(0,0,0,0.5)\\\";\\r\\n\\r\\n\\tthis.add( this.container );\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Modal.prototype = Object.create( UI.Element.prototype );\\r\\nUI.Modal.prototype.constructor = UI.Modal;\\r\\n\\r\\nUI.Modal.prototype.show = function ( content ) {\\r\\n\\r\\n\\tthis.container.clear();\\r\\n\\tthis.container.add( content );\\r\\n\\r\\n\\tthis.dom.style.display = \\\"flex\\\";\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\\r\\nUI.Modal.prototype.hide = function () {\\r\\n\\r\\n\\tthis.dom.style.display = \\\"none\\\";\\r\\n\\r\\n\\treturn this;\\r\\n\\r\\n};\\r\\n\""
		},
		{
			"name": "watch.js",
			"_id": "watch",
			"source": "\"/**\\n * DEVELOPED BY\\n * GIL LOPES BUENO\\n * gilbueno.mail@gmail.com\\n *\\n * WORKS WITH:\\n * IE8*, IE 9+, FF 4+, SF 5+, WebKit, CH 7+, OP 12+, BESEN, Rhino 1.7+\\n * For IE8 (and other legacy browsers) WatchJS will use dirty checking  \\n *\\n * FORK:\\n * https://github.com/melanke/Watch.JS\\n *\\n * LICENSE: MIT\\n */\\n\\n\\\"use strict\\\";\\n(function (factory) {\\n    if (typeof exports === 'object') {\\n        // Node. Does not work with strict CommonJS, but\\n        // only CommonJS-like enviroments that support module.exports,\\n        // like Node.\\n        module.exports = factory();\\n    } else if (typeof define === 'function' && define.amd) {\\n        // AMD. Register as an anonymous module.\\n        define(factory);\\n    } else {\\n        // Browser globals\\n        window.WatchJS = factory();\\n        window.watch = window.WatchJS.watch;\\n        window.unwatch = window.WatchJS.unwatch;\\n        window.callWatchers = window.WatchJS.callWatchers;\\n    }\\n}(function () {\\n\\n    var WatchJS = {\\n        noMore: false,        // use WatchJS.suspend(obj) instead\\n        useDirtyCheck: false, // use only dirty checking to track changes.\\n        preserveExistingSetters: false\\n    },\\n    lengthsubjects = [];\\n    \\n    var dirtyChecklist = [];\\n    var pendingChanges = []; // used coalesce changes from defineProperty and __defineSetter__\\n    \\n    var supportDefineProperty = false;\\n    try {\\n        supportDefineProperty = Object.defineProperty && Object.defineProperty({},'x', {});\\n    } catch(ex) {  /* not supported */  }\\n\\n    var isFunction = function (functionToCheck) {\\n        var getType = {};\\n        return functionToCheck && getType.toString.call(functionToCheck) == '[object Function]';\\n    };\\n\\n    var isInt = function (x) {\\n        return x % 1 === 0;\\n    };\\n\\n    var isArray = function(obj) {\\n        return Object.prototype.toString.call(obj) === '[object Array]';\\n    };\\n\\n    var isObject = function(obj) {\\n        return {}.toString.apply(obj) === '[object Object]';\\n    };\\n    \\n    var getObjDiff = function(a, b){\\n        var aplus = [],\\n        bplus = [];\\n\\n        if(!(typeof a == \\\"string\\\") && !(typeof b == \\\"string\\\")){\\n\\n            if (isArray(a) && b) {\\n                for (var i=0; i<a.length; i++) {\\n                    if (b[i] === undefined) aplus.push(i);\\n                }\\n            } else {\\n                for(var i in a){\\n                    if (a.hasOwnProperty(i)) {\\n                        if(b && !b.hasOwnProperty(i)) {\\n                            aplus.push(i);\\n                        }\\n                    }\\n                }\\n            }\\n\\n            if (isArray(b) && a) {\\n                for (var j=0; j<b.length; j++) {\\n                    if (a[j] === undefined) bplus.push(j);\\n                }\\n            } else {\\n                for(var j in b){\\n                    if (b.hasOwnProperty(j)) {\\n                        if(a && !a.hasOwnProperty(j)) {\\n                            bplus.push(j);\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n\\n        return {\\n            added: aplus,\\n            removed: bplus\\n        }\\n    };\\n\\n    var clone = function(obj){\\n\\n        if (null == obj || \\\"object\\\" != typeof obj) {\\n            return obj;\\n        }\\n\\n        var copy = obj.constructor();\\n\\n        for (var attr in obj) {\\n            copy[attr] = obj[attr];\\n        }\\n\\n        return copy;        \\n\\n    }\\n\\n    var getExistingSetter = function (obj, propName) {\\n        if (WatchJS.preserveExistingSetters) {\\n            var existing = Object.getOwnPropertyDescriptor(obj, propName);\\n            return existing.set;\\n        }\\n\\n        return undefined;\\n    }\\n\\n    var defineGetAndSet = function (obj, propName, getter, setter) {\\n        try {\\n            var existingSetter = getExistingSetter(obj, propName);\\n            Object.defineProperty(obj, propName, {\\n                get: getter,\\n                set: function(value) {\\n                    setter.call(this, value, true); // coalesce changes\\n                    if (existingSetter) {\\n                        existingSetter(value);\\n                    }\\n                },\\n                enumerable: true,\\n                configurable: true\\n            });\\n        }\\n        catch(e1) {\\n            try{\\n                Object.prototype.__defineGetter__.call(obj, propName, getter);\\n                Object.prototype.__defineSetter__.call(obj, propName, function(value) {\\n                    setter.call(this,value,true); // coalesce changes\\n                });\\n            }\\n            catch(e2) {\\n                observeDirtyChanges(obj,propName,setter);\\n                //throw new Error(\\\"watchJS error: browser not supported :/\\\")\\n            }\\n        }\\n\\n    };\\n\\n    var defineProp = function (obj, propName, value) {\\n        try {\\n            Object.defineProperty(obj, propName, {\\n                enumerable: false,\\n                configurable: true,\\n                writable: false,\\n                value: value\\n            });\\n        } catch(error) {\\n            obj[propName] = value;\\n        }\\n    };\\n\\n    var observeDirtyChanges = function(obj,propName,setter) {\\n        dirtyChecklist[dirtyChecklist.length] = {\\n            prop:       propName,\\n            object:     obj,\\n            orig:       clone(obj[propName]),\\n            callback:   setter\\n        }        \\n    }\\n    \\n    var watch = function () {\\n\\n        if (isFunction(arguments[1])) {\\n            watchAll.apply(this, arguments);\\n        } else if (isArray(arguments[1])) {\\n            watchMany.apply(this, arguments);\\n        } else {\\n            watchOne.apply(this, arguments);\\n        }\\n\\n    };\\n\\n\\n    var watchAll = function (obj, watcher, level, addNRemove) {\\n\\n        if ((typeof obj == \\\"string\\\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\\n            return;\\n        }\\n\\n        if(isArray(obj)) {\\n            defineWatcher(obj, \\\"__watchall__\\\", watcher, level); // watch all changes on the array\\n            if (level===undefined||level > 0) {\\n                for (var prop = 0; prop < obj.length; prop++) { // watch objects in array\\n                   watchAll(obj[prop],watcher,level, addNRemove);\\n                }\\n            }\\n        } \\n        else {\\n            var prop,props = [];\\n            for (prop in obj) { //for each attribute if obj is an object\\n                if (prop == \\\"$val\\\" || (!supportDefineProperty && prop === 'watchers')) {\\n                    continue;\\n                }\\n\\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\\n                    props.push(prop); //put in the props\\n                }\\n            }\\n            watchMany(obj, props, watcher, level, addNRemove); //watch all items of the props\\n        }\\n\\n\\n        if (addNRemove) {\\n            pushToLengthSubjects(obj, \\\"$$watchlengthsubjectroot\\\", watcher, level);\\n        }\\n    };\\n\\n\\n    var watchMany = function (obj, props, watcher, level, addNRemove) {\\n\\n        if ((typeof obj == \\\"string\\\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\\n            return;\\n        }\\n\\n        for (var i=0; i<props.length; i++) { //watch each property\\n            var prop = props[i];\\n            watchOne(obj, prop, watcher, level, addNRemove);\\n        }\\n\\n    };\\n\\n    var watchOne = function (obj, prop, watcher, level, addNRemove) {\\n        if ((typeof obj == \\\"string\\\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\\n            return;\\n        }\\n\\n        if(isFunction(obj[prop])) { //dont watch if it is a function\\n            return;\\n        }\\n        if(obj[prop] != null && (level === undefined || level > 0)){\\n            watchAll(obj[prop], watcher, level!==undefined? level-1 : level); //recursively watch all attributes of this\\n        }\\n\\n        defineWatcher(obj, prop, watcher, level);\\n\\n        if(addNRemove && (level === undefined || level > 0)){\\n            pushToLengthSubjects(obj, prop, watcher, level);\\n        }\\n\\n    };\\n\\n    var unwatch = function () {\\n\\n        if (isFunction(arguments[1])) {\\n            unwatchAll.apply(this, arguments);\\n        } else if (isArray(arguments[1])) {\\n            unwatchMany.apply(this, arguments);\\n        } else {\\n            unwatchOne.apply(this, arguments);\\n        }\\n\\n    };\\n\\n    var unwatchAll = function (obj, watcher) {\\n\\n        if (obj instanceof String || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\\n            return;\\n        }\\n\\n        if (isArray(obj)) {\\n            var props = ['__watchall__'];\\n            for (var prop = 0; prop < obj.length; prop++) { //for each item if obj is an array\\n                props.push(prop); //put in the props\\n            }\\n            unwatchMany(obj, props, watcher); //watch all itens of the props\\n        } else {\\n            var unwatchPropsInObject = function (obj2) {\\n                var props = [];\\n                for (var prop2 in obj2) { //for each attribute if obj is an object\\n                    if (obj2.hasOwnProperty(prop2)) {\\n                        if (obj2[prop2] instanceof Object) {\\n                            unwatchPropsInObject(obj2[prop2]); //recurs into object props\\n                        } else {\\n                            props.push(prop2); //put in the props\\n                        }\\n                    }\\n                }\\n                unwatchMany(obj2, props, watcher); //unwatch all of the props\\n            };\\n            unwatchPropsInObject(obj);\\n        }\\n    };\\n\\n\\n    var unwatchMany = function (obj, props, watcher) {\\n\\n        for (var prop2 in props) { //watch each attribute of \\\"props\\\" if is an object\\n            if (props.hasOwnProperty(prop2)) {\\n                unwatchOne(obj, props[prop2], watcher);\\n            }\\n        }\\n    };\\n\\n    var timeouts = [],\\n        timerID = null;\\n    function clearTimerID() {\\n        timerID = null;\\n        for(var i=0; i< timeouts.length; i++) {\\n            timeouts[i]();\\n        }\\n        timeouts.length = 0;\\n    }\\n    var getTimerID= function () {\\n        if (!timerID)  {\\n            timerID = setTimeout(clearTimerID);\\n        }\\n        return timerID;\\n    }\\n    var registerTimeout = function(fn) { // register function to be called on timeout\\n        if (timerID==null) getTimerID();\\n        timeouts[timeouts.length] = fn;\\n    }\\n    \\n    // Track changes made to an array, object or an object's property \\n    // and invoke callback with a single change object containing type, value, oldvalue and array splices\\n    // Syntax: \\n    //      trackChange(obj, callback, recursive, addNRemove)\\n    //      trackChange(obj, prop, callback, recursive, addNRemove)\\n    var trackChange = function() {\\n        var fn = (isFunction(arguments[2])) ? trackProperty : trackObject ;\\n        fn.apply(this,arguments);\\n    }\\n\\n    // track changes made to an object and invoke callback with a single change object containing type, value and array splices\\n    var trackObject= function(obj, callback, recursive, addNRemove) {\\n        var change = null,lastTimerID = -1;\\n        var isArr = isArray(obj);\\n        var level,fn = function(prop, action, newValue, oldValue) {\\n            var timerID = getTimerID();\\n            if (lastTimerID!==timerID) { // check if timer has changed since last update\\n                lastTimerID = timerID;\\n                change = {\\n                    type: 'update'\\n                }\\n                change['value'] = obj;\\n                change['splices'] = null;\\n                registerTimeout(function() {\\n                    callback.call(this,change);\\n                    change = null;\\n                });\\n            }\\n            // create splices for array changes\\n            if (isArr && obj === this && change !== null)  {                \\n                if (action==='pop'||action==='shift') {\\n                    newValue = [];\\n                    oldValue = [oldValue];\\n                }\\n                else if (action==='push'||action==='unshift') {\\n                    newValue = [newValue];\\n                    oldValue = [];\\n                }\\n                else if (action!=='splice') { \\n                    return; // return here - for reverse and sort operations we don't need to return splices. a simple update will do\\n                }\\n                if (!change.splices) change.splices = [];\\n                change.splices[change.splices.length] = {\\n                    index: prop,\\n                    deleteCount: oldValue ? oldValue.length : 0,\\n                    addedCount: newValue ? newValue.length : 0,\\n                    added: newValue,\\n                    deleted: oldValue\\n                };\\n            }\\n\\n        }  \\n        level = (recursive==true) ? undefined : 0;        \\n        watchAll(obj,fn, level, addNRemove);\\n    }\\n    \\n    // track changes made to the property of an object and invoke callback with a single change object containing type, value, oldvalue and splices\\n    var trackProperty = function(obj,prop,callback,recursive, addNRemove) { \\n        if (obj && prop) {\\n            watchOne(obj,prop,function(prop, action, newvalue, oldvalue) {\\n                var change = {\\n                    type: 'update'\\n                }\\n                change['value'] = newvalue;\\n                change['oldvalue'] = oldvalue;\\n                if (recursive && isObject(newvalue)||isArray(newvalue)) {\\n                    trackObject(newvalue,callback,recursive, addNRemove);\\n                }               \\n                callback.call(this,change);\\n            },0)\\n            \\n            if (recursive && isObject(obj[prop])||isArray(obj[prop])) {\\n                trackObject(obj[prop],callback,recursive, addNRemove);\\n            }                           \\n        }\\n    }\\n    \\n    \\n    var defineWatcher = function (obj, prop, watcher, level) {\\n        var newWatcher = false;\\n        var isArr = isArray(obj);\\n        \\n        if (!obj.watchers) {\\n            defineProp(obj, \\\"watchers\\\", {});\\n            if (isArr) {\\n                // watch array functions\\n                watchFunctions(obj, function(index,action,newValue, oldValue) {\\n                    addPendingChange(obj, index, action,newValue, oldValue);\\n                    if (level !== 0 && newValue && (isObject(newValue) || isArray(newValue))) {\\n                        var i,n, ln, wAll, watchList = obj.watchers[prop];\\n                        if ((wAll = obj.watchers['__watchall__'])) {\\n                            watchList = watchList ? watchList.concat(wAll) : wAll;\\n                        }\\n                        ln = watchList ?  watchList.length : 0;\\n                        for (i = 0; i<ln; i++) {\\n                            if (action!=='splice') {\\n                                watchAll(newValue, watchList[i], (level===undefined)?level:level-1);\\n                            }\\n                            else {\\n                                // watch spliced values\\n                                for(n=0; n < newValue.length; n++) {\\n                                    watchAll(newValue[n], watchList[i], (level===undefined)?level:level-1);\\n                                }\\n                            }\\n                        }\\n                    }\\n                });\\n            }\\n        }\\n\\n        if (!obj.watchers[prop]) {\\n            obj.watchers[prop] = [];\\n            if (!isArr) newWatcher = true;\\n        }\\n\\n        for (var i=0; i<obj.watchers[prop].length; i++) {\\n            if(obj.watchers[prop][i] === watcher){\\n                return;\\n            }\\n        }\\n\\n        obj.watchers[prop].push(watcher); //add the new watcher to the watchers array\\n\\n        if (newWatcher) {\\n            var val = obj[prop];            \\n            var getter = function () {\\n                return val;                        \\n            };\\n\\n            var setter = function (newval, delayWatcher) {\\n                var oldval = val;\\n                val = newval;                \\n                if (level !== 0 \\n                    && obj[prop] && (isObject(obj[prop]) || isArray(obj[prop]))\\n                    && !obj[prop].watchers) {\\n                    // watch sub properties\\n                    var i,ln = obj.watchers[prop].length; \\n                    for(i=0; i<ln; i++) {\\n                        watchAll(obj[prop], obj.watchers[prop][i], (level===undefined)?level:level-1);\\n                    }\\n                }\\n\\n                //watchFunctions(obj, prop);\\n                \\n                if (isSuspended(obj, prop)) {\\n                    resume(obj, prop);\\n                    return;\\n                }\\n\\n                if (!WatchJS.noMore){ // this does not work with Object.observe\\n                    //if (JSON.stringify(oldval) !== JSON.stringify(newval)) {\\n                    if (oldval !== newval) {\\n                        if (!delayWatcher) {\\n                            callWatchers(obj, prop, \\\"set\\\", newval, oldval);\\n                        }\\n                        else {\\n                            addPendingChange(obj, prop, \\\"set\\\", newval, oldval);\\n                        }\\n                        WatchJS.noMore = false;\\n                    }\\n                }\\n            };\\n\\n            if (WatchJS.useDirtyCheck) {\\n                observeDirtyChanges(obj,prop,setter);\\n            }\\n            else {\\n                defineGetAndSet(obj, prop, getter, setter);\\n            }\\n        }\\n\\n    };\\n\\n    var callWatchers = function (obj, prop, action, newval, oldval) {\\n        if (prop !== undefined) {\\n            var ln, wl, watchList = obj.watchers[prop];\\n            if ((wl = obj.watchers['__watchall__'])) {\\n                watchList = watchList ? watchList.concat(wl) : wl;\\n            }\\n            ln = watchList ? watchList.length : 0;\\n            for (var wr=0; wr< ln; wr++) {\\n                watchList[wr].call(obj, prop, action, newval, oldval);\\n            }\\n        } else {\\n            for (var prop in obj) {//call all\\n                if (obj.hasOwnProperty(prop)) {\\n                    callWatchers(obj, prop, action, newval, oldval);\\n                }\\n            }\\n        }\\n    };\\n\\n    var methodNames = ['pop', 'push', 'reverse', 'shift', 'sort', 'slice', 'unshift', 'splice'];\\n    var defineArrayMethodWatcher = function (obj, original, methodName, callback) {\\n        defineProp(obj, methodName, function () {\\n            var index = 0;\\n            var i,newValue, oldValue, response;                        \\n            // get values before splicing array \\n            if (methodName === 'splice') {\\n               var start = arguments[0];\\n               var end = start + arguments[1];\\n               oldValue = obj.slice(start,end);\\n               newValue = [];\\n               for(i=2;i<arguments.length;i++) {\\n                   newValue[i-2] = arguments[i];\\n               }\\n               index = start;\\n            } \\n            else {\\n                newValue = arguments.length > 0 ? arguments[0] : undefined;\\n            } \\n\\n            response = original.apply(obj, arguments);\\n            if (methodName !== 'slice') {\\n                if (methodName === 'pop') {\\n                    oldValue = response;\\n                    index = obj.length;\\n                }\\n                else if (methodName === 'push') {\\n                    index = obj.length-1;\\n                }\\n                else if (methodName === 'shift') {\\n                    oldValue = response;\\n                }\\n                else if (methodName !== 'unshift' && newValue===undefined) {\\n                    newValue = response;\\n                }\\n                callback.call(obj, index, methodName,newValue, oldValue)\\n            }\\n            return response;\\n        });\\n    };\\n\\n    var watchFunctions = function(obj, callback) {\\n\\n        if (!isFunction(callback) || !obj || (obj instanceof String) || (!isArray(obj))) {\\n            return;\\n        }\\n\\n        for (var i = methodNames.length, methodName; i--;) {\\n            methodName = methodNames[i];\\n            defineArrayMethodWatcher(obj, obj[methodName], methodName, callback);\\n        }\\n\\n    };\\n\\n    var unwatchOne = function (obj, prop, watcher) {\\n        if (prop) {\\n            if (obj.watchers && obj.watchers[prop]) {\\n                if (watcher === undefined) {\\n                    delete obj.watchers[prop]; // remove all property watchers\\n                }\\n                else {\\n                    for (var i = 0; i < obj.watchers[prop].length; i++) {\\n                        var w = obj.watchers[prop][i];\\n                        if (w == watcher) {\\n                            obj.watchers[prop].splice(i, 1);\\n                        }\\n                    }\\n                }\\n            }\\n        } else {\\n            delete obj.watchers;\\n        }\\n\\n        removeFromLengthSubjects(obj, prop, watcher);\\n        removeFromDirtyChecklist(obj, prop);\\n    };\\n    \\n    // suspend watchers until next update cycle\\n    var suspend = function(obj, prop) {\\n        if (obj.watchers) {\\n            var name = '__wjs_suspend__'+(prop!==undefined ? prop : '');\\n            obj.watchers[name] = true;\\n        }\\n    }\\n    \\n    var isSuspended = function(obj, prop) {\\n        return obj.watchers \\n               && (obj.watchers['__wjs_suspend__'] || \\n                   obj.watchers['__wjs_suspend__'+prop]);\\n    }\\n    \\n    // resumes preivously suspended watchers\\n    var resume = function(obj, prop) {\\n        registerTimeout(function() {\\n            delete obj.watchers['__wjs_suspend__'];\\n            delete obj.watchers['__wjs_suspend__'+prop];\\n        })\\n    }\\n\\n    var pendingTimerID = null;\\n    var addPendingChange = function(obj,prop, mode, newval, oldval) {\\n        pendingChanges[pendingChanges.length] = {\\n            obj:obj,\\n            prop: prop,\\n            mode: mode,\\n            newval: newval,\\n            oldval: oldval\\n        };\\n        if (pendingTimerID===null) {\\n            pendingTimerID = setTimeout(applyPendingChanges);\\n        }\\n    };\\n    \\n    \\n    var applyPendingChanges = function()  {\\n        // apply pending changes\\n        var change = null;\\n        pendingTimerID = null;\\n        for(var i=0;i < pendingChanges.length;i++) {\\n            change = pendingChanges[i];\\n            callWatchers(change.obj, change.prop, change.mode, change.newval, change.oldval);\\n        }\\n        if (change) {\\n            pendingChanges = [];\\n            change = null;\\n        }        \\n    }\\n\\n    var loop = function(){\\n\\n        // check for new or deleted props\\n        for(var i=0; i<lengthsubjects.length; i++) {\\n\\n            var subj = lengthsubjects[i];\\n\\n            if (subj.prop === \\\"$$watchlengthsubjectroot\\\") {\\n\\n                var difference = getObjDiff(subj.obj, subj.actual);\\n\\n                if(difference.added.length || difference.removed.length){\\n                    if(difference.added.length){\\n                        watchMany(subj.obj, difference.added, subj.watcher, subj.level - 1, true);\\n                    }\\n\\n                    subj.watcher.call(subj.obj, \\\"root\\\", \\\"differentattr\\\", difference, subj.actual);\\n                }\\n                subj.actual = clone(subj.obj);\\n\\n\\n            } else {\\n\\n                var difference = getObjDiff(subj.obj[subj.prop], subj.actual);\\n\\n                if(difference.added.length || difference.removed.length){\\n                    if(difference.added.length){\\n                        for (var j=0; j<subj.obj.watchers[subj.prop].length; j++) {\\n                            watchMany(subj.obj[subj.prop], difference.added, subj.obj.watchers[subj.prop][j], subj.level - 1, true);\\n                        }\\n                    }\\n\\n                    callWatchers(subj.obj, subj.prop, \\\"differentattr\\\", difference, subj.actual);\\n                }\\n\\n                subj.actual = clone(subj.obj[subj.prop]);\\n\\n            }\\n\\n        }\\n        \\n        // start dirty check\\n        var n, value;\\n        if (dirtyChecklist.length > 0) {\\n            for (var i = 0; i < dirtyChecklist.length; i++) {\\n                n = dirtyChecklist[i];\\n                value = n.object[n.prop];\\n                if (!compareValues(n.orig, value)) {\\n                    n.orig = clone(value);\\n                    n.callback(value);\\n                }\\n            }\\n        }\\n\\n    };\\n\\n    var compareValues =  function(a,b) {\\n        var i, state = true;\\n        if (a!==b)  {\\n            if (isObject(a)) {\\n                for(i in a) {\\n                    if (!supportDefineProperty && i==='watchers') continue;\\n                    if (a[i]!==b[i]) {\\n                        state = false;\\n                        break;\\n                    };\\n                }\\n            }\\n            else {\\n                state = false;\\n            }\\n        }\\n        return state;\\n    }\\n    \\n    var pushToLengthSubjects = function(obj, prop, watcher, level){\\n\\n        var actual;\\n\\n        if (prop === \\\"$$watchlengthsubjectroot\\\") {\\n            actual =  clone(obj);\\n        } else {\\n            actual = clone(obj[prop]);\\n        }\\n\\n        lengthsubjects.push({\\n            obj: obj,\\n            prop: prop,\\n            actual: actual,\\n            watcher: watcher,\\n            level: level\\n        });\\n    };\\n\\n    var removeFromLengthSubjects = function(obj, prop, watcher){\\n        for (var i=0; i<lengthsubjects.length; i++) {\\n            var subj = lengthsubjects[i];\\n\\n            if (subj.obj == obj) {\\n                if (!prop || subj.prop == prop) {\\n                    if (!watcher || subj.watcher == watcher) {\\n                        // if we splice off one item at position i\\n                        // we need to decrement i as the array is one item shorter\\n                        // so when we increment i in the loop statement we\\n                        // will land at the correct index.\\n                        // if it's not decremented, you won't delete all length subjects\\n                        lengthsubjects.splice(i--, 1);\\n                    }\\n                }\\n            }\\n        }\\n\\n    };\\n    \\n    var removeFromDirtyChecklist = function(obj, prop){\\n        var notInUse;\\n        for (var i=0; i<dirtyChecklist.length; i++) {\\n            var n = dirtyChecklist[i];\\n            var watchers = n.object.watchers;\\n            notInUse = (\\n                n.object == obj \\n                && (!prop || n.prop == prop)\\n                && watchers\\n                && (!prop || !watchers[prop] || watchers[prop].length == 0 )\\n            );\\n            if (notInUse)  {\\n                // we use the same syntax as in removeFromLengthSubjects\\n                dirtyChecklist.splice(i--, 1);\\n            }\\n        }\\n\\n    };    \\n\\n    setInterval(loop, 50);\\n\\n    WatchJS.watch = watch;\\n    WatchJS.unwatch = unwatch;\\n    WatchJS.callWatchers = callWatchers;\\n    WatchJS.suspend = suspend; // suspend watchers    \\n    WatchJS.onChange = trackChange;  // track changes made to object or  it's property and return a single change object\\n\\n    return WatchJS;\\n\\n}));\\n\""
		},
		{
			"name": "hammer.min.js",
			"_id": "hammer",
			"source": "\"/*! Hammer.JS - v2.0.8 - 2016-04-23\\n * http://hammerjs.github.io/\\n *\\n * Copyright (c) 2016 Jorik Tangelder;\\n * Licensed under the MIT license */\\n!function(a,b,c,d){\\\"use strict\\\";function e(a,b,c){return setTimeout(j(a,c),b)}function f(a,b,c){return Array.isArray(a)?(g(a,c[b],c),!0):!1}function g(a,b,c){var e;if(a)if(a.forEach)a.forEach(b,c);else if(a.length!==d)for(e=0;e<a.length;)b.call(c,a[e],e,a),e++;else for(e in a)a.hasOwnProperty(e)&&b.call(c,a[e],e,a)}function h(b,c,d){var e=\\\"DEPRECATED METHOD: \\\"+c+\\\"\\\\n\\\"+d+\\\" AT \\\\n\\\";return function(){var c=new Error(\\\"get-stack-trace\\\"),d=c&&c.stack?c.stack.replace(/^[^\\\\(]+?[\\\\n$]/gm,\\\"\\\").replace(/^\\\\s+at\\\\s+/gm,\\\"\\\").replace(/^Object.<anonymous>\\\\s*\\\\(/gm,\\\"{anonymous}()@\\\"):\\\"Unknown Stack Trace\\\",f=a.console&&(a.console.warn||a.console.log);return f&&f.call(a.console,e,d),b.apply(this,arguments)}}function i(a,b,c){var d,e=b.prototype;d=a.prototype=Object.create(e),d.constructor=a,d._super=e,c&&la(d,c)}function j(a,b){return function(){return a.apply(b,arguments)}}function k(a,b){return typeof a==oa?a.apply(b?b[0]||d:d,b):a}function l(a,b){return a===d?b:a}function m(a,b,c){g(q(b),function(b){a.addEventListener(b,c,!1)})}function n(a,b,c){g(q(b),function(b){a.removeEventListener(b,c,!1)})}function o(a,b){for(;a;){if(a==b)return!0;a=a.parentNode}return!1}function p(a,b){return a.indexOf(b)>-1}function q(a){return a.trim().split(/\\\\s+/g)}function r(a,b,c){if(a.indexOf&&!c)return a.indexOf(b);for(var d=0;d<a.length;){if(c&&a[d][c]==b||!c&&a[d]===b)return d;d++}return-1}function s(a){return Array.prototype.slice.call(a,0)}function t(a,b,c){for(var d=[],e=[],f=0;f<a.length;){var g=b?a[f][b]:a[f];r(e,g)<0&&d.push(a[f]),e[f]=g,f++}return c&&(d=b?d.sort(function(a,c){return a[b]>c[b]}):d.sort()),d}function u(a,b){for(var c,e,f=b[0].toUpperCase()+b.slice(1),g=0;g<ma.length;){if(c=ma[g],e=c?c+f:b,e in a)return e;g++}return d}function v(){return ua++}function w(b){var c=b.ownerDocument||b;return c.defaultView||c.parentWindow||a}function x(a,b){var c=this;this.manager=a,this.callback=b,this.element=a.element,this.target=a.options.inputTarget,this.domHandler=function(b){k(a.options.enable,[a])&&c.handler(b)},this.init()}function y(a){var b,c=a.options.inputClass;return new(b=c?c:xa?M:ya?P:wa?R:L)(a,z)}function z(a,b,c){var d=c.pointers.length,e=c.changedPointers.length,f=b&Ea&&d-e===0,g=b&(Ga|Ha)&&d-e===0;c.isFirst=!!f,c.isFinal=!!g,f&&(a.session={}),c.eventType=b,A(a,c),a.emit(\\\"hammer.input\\\",c),a.recognize(c),a.session.prevInput=c}function A(a,b){var c=a.session,d=b.pointers,e=d.length;c.firstInput||(c.firstInput=D(b)),e>1&&!c.firstMultiple?c.firstMultiple=D(b):1===e&&(c.firstMultiple=!1);var f=c.firstInput,g=c.firstMultiple,h=g?g.center:f.center,i=b.center=E(d);b.timeStamp=ra(),b.deltaTime=b.timeStamp-f.timeStamp,b.angle=I(h,i),b.distance=H(h,i),B(c,b),b.offsetDirection=G(b.deltaX,b.deltaY);var j=F(b.deltaTime,b.deltaX,b.deltaY);b.overallVelocityX=j.x,b.overallVelocityY=j.y,b.overallVelocity=qa(j.x)>qa(j.y)?j.x:j.y,b.scale=g?K(g.pointers,d):1,b.rotation=g?J(g.pointers,d):0,b.maxPointers=c.prevInput?b.pointers.length>c.prevInput.maxPointers?b.pointers.length:c.prevInput.maxPointers:b.pointers.length,C(c,b);var k=a.element;o(b.srcEvent.target,k)&&(k=b.srcEvent.target),b.target=k}function B(a,b){var c=b.center,d=a.offsetDelta||{},e=a.prevDelta||{},f=a.prevInput||{};b.eventType!==Ea&&f.eventType!==Ga||(e=a.prevDelta={x:f.deltaX||0,y:f.deltaY||0},d=a.offsetDelta={x:c.x,y:c.y}),b.deltaX=e.x+(c.x-d.x),b.deltaY=e.y+(c.y-d.y)}function C(a,b){var c,e,f,g,h=a.lastInterval||b,i=b.timeStamp-h.timeStamp;if(b.eventType!=Ha&&(i>Da||h.velocity===d)){var j=b.deltaX-h.deltaX,k=b.deltaY-h.deltaY,l=F(i,j,k);e=l.x,f=l.y,c=qa(l.x)>qa(l.y)?l.x:l.y,g=G(j,k),a.lastInterval=b}else c=h.velocity,e=h.velocityX,f=h.velocityY,g=h.direction;b.velocity=c,b.velocityX=e,b.velocityY=f,b.direction=g}function D(a){for(var b=[],c=0;c<a.pointers.length;)b[c]={clientX:pa(a.pointers[c].clientX),clientY:pa(a.pointers[c].clientY)},c++;return{timeStamp:ra(),pointers:b,center:E(b),deltaX:a.deltaX,deltaY:a.deltaY}}function E(a){var b=a.length;if(1===b)return{x:pa(a[0].clientX),y:pa(a[0].clientY)};for(var c=0,d=0,e=0;b>e;)c+=a[e].clientX,d+=a[e].clientY,e++;return{x:pa(c/b),y:pa(d/b)}}function F(a,b,c){return{x:b/a||0,y:c/a||0}}function G(a,b){return a===b?Ia:qa(a)>=qa(b)?0>a?Ja:Ka:0>b?La:Ma}function H(a,b,c){c||(c=Qa);var d=b[c[0]]-a[c[0]],e=b[c[1]]-a[c[1]];return Math.sqrt(d*d+e*e)}function I(a,b,c){c||(c=Qa);var d=b[c[0]]-a[c[0]],e=b[c[1]]-a[c[1]];return 180*Math.atan2(e,d)/Math.PI}function J(a,b){return I(b[1],b[0],Ra)+I(a[1],a[0],Ra)}function K(a,b){return H(b[0],b[1],Ra)/H(a[0],a[1],Ra)}function L(){this.evEl=Ta,this.evWin=Ua,this.pressed=!1,x.apply(this,arguments)}function M(){this.evEl=Xa,this.evWin=Ya,x.apply(this,arguments),this.store=this.manager.session.pointerEvents=[]}function N(){this.evTarget=$a,this.evWin=_a,this.started=!1,x.apply(this,arguments)}function O(a,b){var c=s(a.touches),d=s(a.changedTouches);return b&(Ga|Ha)&&(c=t(c.concat(d),\\\"identifier\\\",!0)),[c,d]}function P(){this.evTarget=bb,this.targetIds={},x.apply(this,arguments)}function Q(a,b){var c=s(a.touches),d=this.targetIds;if(b&(Ea|Fa)&&1===c.length)return d[c[0].identifier]=!0,[c,c];var e,f,g=s(a.changedTouches),h=[],i=this.target;if(f=c.filter(function(a){return o(a.target,i)}),b===Ea)for(e=0;e<f.length;)d[f[e].identifier]=!0,e++;for(e=0;e<g.length;)d[g[e].identifier]&&h.push(g[e]),b&(Ga|Ha)&&delete d[g[e].identifier],e++;return h.length?[t(f.concat(h),\\\"identifier\\\",!0),h]:void 0}function R(){x.apply(this,arguments);var a=j(this.handler,this);this.touch=new P(this.manager,a),this.mouse=new L(this.manager,a),this.primaryTouch=null,this.lastTouches=[]}function S(a,b){a&Ea?(this.primaryTouch=b.changedPointers[0].identifier,T.call(this,b)):a&(Ga|Ha)&&T.call(this,b)}function T(a){var b=a.changedPointers[0];if(b.identifier===this.primaryTouch){var c={x:b.clientX,y:b.clientY};this.lastTouches.push(c);var d=this.lastTouches,e=function(){var a=d.indexOf(c);a>-1&&d.splice(a,1)};setTimeout(e,cb)}}function U(a){for(var b=a.srcEvent.clientX,c=a.srcEvent.clientY,d=0;d<this.lastTouches.length;d++){var e=this.lastTouches[d],f=Math.abs(b-e.x),g=Math.abs(c-e.y);if(db>=f&&db>=g)return!0}return!1}function V(a,b){this.manager=a,this.set(b)}function W(a){if(p(a,jb))return jb;var b=p(a,kb),c=p(a,lb);return b&&c?jb:b||c?b?kb:lb:p(a,ib)?ib:hb}function X(){if(!fb)return!1;var b={},c=a.CSS&&a.CSS.supports;return[\\\"auto\\\",\\\"manipulation\\\",\\\"pan-y\\\",\\\"pan-x\\\",\\\"pan-x pan-y\\\",\\\"none\\\"].forEach(function(d){b[d]=c?a.CSS.supports(\\\"touch-action\\\",d):!0}),b}function Y(a){this.options=la({},this.defaults,a||{}),this.id=v(),this.manager=null,this.options.enable=l(this.options.enable,!0),this.state=nb,this.simultaneous={},this.requireFail=[]}function Z(a){return a&sb?\\\"cancel\\\":a&qb?\\\"end\\\":a&pb?\\\"move\\\":a&ob?\\\"start\\\":\\\"\\\"}function $(a){return a==Ma?\\\"down\\\":a==La?\\\"up\\\":a==Ja?\\\"left\\\":a==Ka?\\\"right\\\":\\\"\\\"}function _(a,b){var c=b.manager;return c?c.get(a):a}function aa(){Y.apply(this,arguments)}function ba(){aa.apply(this,arguments),this.pX=null,this.pY=null}function ca(){aa.apply(this,arguments)}function da(){Y.apply(this,arguments),this._timer=null,this._input=null}function ea(){aa.apply(this,arguments)}function fa(){aa.apply(this,arguments)}function ga(){Y.apply(this,arguments),this.pTime=!1,this.pCenter=!1,this._timer=null,this._input=null,this.count=0}function ha(a,b){return b=b||{},b.recognizers=l(b.recognizers,ha.defaults.preset),new ia(a,b)}function ia(a,b){this.options=la({},ha.defaults,b||{}),this.options.inputTarget=this.options.inputTarget||a,this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=a,this.input=y(this),this.touchAction=new V(this,this.options.touchAction),ja(this,!0),g(this.options.recognizers,function(a){var b=this.add(new a[0](a[1]));a[2]&&b.recognizeWith(a[2]),a[3]&&b.requireFailure(a[3])},this)}function ja(a,b){var c=a.element;if(c.style){var d;g(a.options.cssProps,function(e,f){d=u(c.style,f),b?(a.oldCssProps[d]=c.style[d],c.style[d]=e):c.style[d]=a.oldCssProps[d]||\\\"\\\"}),b||(a.oldCssProps={})}}function ka(a,c){var d=b.createEvent(\\\"Event\\\");d.initEvent(a,!0,!0),d.gesture=c,c.target.dispatchEvent(d)}var la,ma=[\\\"\\\",\\\"webkit\\\",\\\"Moz\\\",\\\"MS\\\",\\\"ms\\\",\\\"o\\\"],na=b.createElement(\\\"div\\\"),oa=\\\"function\\\",pa=Math.round,qa=Math.abs,ra=Date.now;la=\\\"function\\\"!=typeof Object.assign?function(a){if(a===d||null===a)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var b=Object(a),c=1;c<arguments.length;c++){var e=arguments[c];if(e!==d&&null!==e)for(var f in e)e.hasOwnProperty(f)&&(b[f]=e[f])}return b}:Object.assign;var sa=h(function(a,b,c){for(var e=Object.keys(b),f=0;f<e.length;)(!c||c&&a[e[f]]===d)&&(a[e[f]]=b[e[f]]),f++;return a},\\\"extend\\\",\\\"Use `assign`.\\\"),ta=h(function(a,b){return sa(a,b,!0)},\\\"merge\\\",\\\"Use `assign`.\\\"),ua=1,va=/mobile|tablet|ip(ad|hone|od)|android/i,wa=\\\"ontouchstart\\\"in a,xa=u(a,\\\"PointerEvent\\\")!==d,ya=wa&&va.test(navigator.userAgent),za=\\\"touch\\\",Aa=\\\"pen\\\",Ba=\\\"mouse\\\",Ca=\\\"kinect\\\",Da=25,Ea=1,Fa=2,Ga=4,Ha=8,Ia=1,Ja=2,Ka=4,La=8,Ma=16,Na=Ja|Ka,Oa=La|Ma,Pa=Na|Oa,Qa=[\\\"x\\\",\\\"y\\\"],Ra=[\\\"clientX\\\",\\\"clientY\\\"];x.prototype={handler:function(){},init:function(){this.evEl&&m(this.element,this.evEl,this.domHandler),this.evTarget&&m(this.target,this.evTarget,this.domHandler),this.evWin&&m(w(this.element),this.evWin,this.domHandler)},destroy:function(){this.evEl&&n(this.element,this.evEl,this.domHandler),this.evTarget&&n(this.target,this.evTarget,this.domHandler),this.evWin&&n(w(this.element),this.evWin,this.domHandler)}};var Sa={mousedown:Ea,mousemove:Fa,mouseup:Ga},Ta=\\\"mousedown\\\",Ua=\\\"mousemove mouseup\\\";i(L,x,{handler:function(a){var b=Sa[a.type];b&Ea&&0===a.button&&(this.pressed=!0),b&Fa&&1!==a.which&&(b=Ga),this.pressed&&(b&Ga&&(this.pressed=!1),this.callback(this.manager,b,{pointers:[a],changedPointers:[a],pointerType:Ba,srcEvent:a}))}});var Va={pointerdown:Ea,pointermove:Fa,pointerup:Ga,pointercancel:Ha,pointerout:Ha},Wa={2:za,3:Aa,4:Ba,5:Ca},Xa=\\\"pointerdown\\\",Ya=\\\"pointermove pointerup pointercancel\\\";a.MSPointerEvent&&!a.PointerEvent&&(Xa=\\\"MSPointerDown\\\",Ya=\\\"MSPointerMove MSPointerUp MSPointerCancel\\\"),i(M,x,{handler:function(a){var b=this.store,c=!1,d=a.type.toLowerCase().replace(\\\"ms\\\",\\\"\\\"),e=Va[d],f=Wa[a.pointerType]||a.pointerType,g=f==za,h=r(b,a.pointerId,\\\"pointerId\\\");e&Ea&&(0===a.button||g)?0>h&&(b.push(a),h=b.length-1):e&(Ga|Ha)&&(c=!0),0>h||(b[h]=a,this.callback(this.manager,e,{pointers:b,changedPointers:[a],pointerType:f,srcEvent:a}),c&&b.splice(h,1))}});var Za={touchstart:Ea,touchmove:Fa,touchend:Ga,touchcancel:Ha},$a=\\\"touchstart\\\",_a=\\\"touchstart touchmove touchend touchcancel\\\";i(N,x,{handler:function(a){var b=Za[a.type];if(b===Ea&&(this.started=!0),this.started){var c=O.call(this,a,b);b&(Ga|Ha)&&c[0].length-c[1].length===0&&(this.started=!1),this.callback(this.manager,b,{pointers:c[0],changedPointers:c[1],pointerType:za,srcEvent:a})}}});var ab={touchstart:Ea,touchmove:Fa,touchend:Ga,touchcancel:Ha},bb=\\\"touchstart touchmove touchend touchcancel\\\";i(P,x,{handler:function(a){var b=ab[a.type],c=Q.call(this,a,b);c&&this.callback(this.manager,b,{pointers:c[0],changedPointers:c[1],pointerType:za,srcEvent:a})}});var cb=2500,db=25;i(R,x,{handler:function(a,b,c){var d=c.pointerType==za,e=c.pointerType==Ba;if(!(e&&c.sourceCapabilities&&c.sourceCapabilities.firesTouchEvents)){if(d)S.call(this,b,c);else if(e&&U.call(this,c))return;this.callback(a,b,c)}},destroy:function(){this.touch.destroy(),this.mouse.destroy()}});var eb=u(na.style,\\\"touchAction\\\"),fb=eb!==d,gb=\\\"compute\\\",hb=\\\"auto\\\",ib=\\\"manipulation\\\",jb=\\\"none\\\",kb=\\\"pan-x\\\",lb=\\\"pan-y\\\",mb=X();V.prototype={set:function(a){a==gb&&(a=this.compute()),fb&&this.manager.element.style&&mb[a]&&(this.manager.element.style[eb]=a),this.actions=a.toLowerCase().trim()},update:function(){this.set(this.manager.options.touchAction)},compute:function(){var a=[];return g(this.manager.recognizers,function(b){k(b.options.enable,[b])&&(a=a.concat(b.getTouchAction()))}),W(a.join(\\\" \\\"))},preventDefaults:function(a){var b=a.srcEvent,c=a.offsetDirection;if(this.manager.session.prevented)return void b.preventDefault();var d=this.actions,e=p(d,jb)&&!mb[jb],f=p(d,lb)&&!mb[lb],g=p(d,kb)&&!mb[kb];if(e){var h=1===a.pointers.length,i=a.distance<2,j=a.deltaTime<250;if(h&&i&&j)return}return g&&f?void 0:e||f&&c&Na||g&&c&Oa?this.preventSrc(b):void 0},preventSrc:function(a){this.manager.session.prevented=!0,a.preventDefault()}};var nb=1,ob=2,pb=4,qb=8,rb=qb,sb=16,tb=32;Y.prototype={defaults:{},set:function(a){return la(this.options,a),this.manager&&this.manager.touchAction.update(),this},recognizeWith:function(a){if(f(a,\\\"recognizeWith\\\",this))return this;var b=this.simultaneous;return a=_(a,this),b[a.id]||(b[a.id]=a,a.recognizeWith(this)),this},dropRecognizeWith:function(a){return f(a,\\\"dropRecognizeWith\\\",this)?this:(a=_(a,this),delete this.simultaneous[a.id],this)},requireFailure:function(a){if(f(a,\\\"requireFailure\\\",this))return this;var b=this.requireFail;return a=_(a,this),-1===r(b,a)&&(b.push(a),a.requireFailure(this)),this},dropRequireFailure:function(a){if(f(a,\\\"dropRequireFailure\\\",this))return this;a=_(a,this);var b=r(this.requireFail,a);return b>-1&&this.requireFail.splice(b,1),this},hasRequireFailures:function(){return this.requireFail.length>0},canRecognizeWith:function(a){return!!this.simultaneous[a.id]},emit:function(a){function b(b){c.manager.emit(b,a)}var c=this,d=this.state;qb>d&&b(c.options.event+Z(d)),b(c.options.event),a.additionalEvent&&b(a.additionalEvent),d>=qb&&b(c.options.event+Z(d))},tryEmit:function(a){return this.canEmit()?this.emit(a):void(this.state=tb)},canEmit:function(){for(var a=0;a<this.requireFail.length;){if(!(this.requireFail[a].state&(tb|nb)))return!1;a++}return!0},recognize:function(a){var b=la({},a);return k(this.options.enable,[this,b])?(this.state&(rb|sb|tb)&&(this.state=nb),this.state=this.process(b),void(this.state&(ob|pb|qb|sb)&&this.tryEmit(b))):(this.reset(),void(this.state=tb))},process:function(a){},getTouchAction:function(){},reset:function(){}},i(aa,Y,{defaults:{pointers:1},attrTest:function(a){var b=this.options.pointers;return 0===b||a.pointers.length===b},process:function(a){var b=this.state,c=a.eventType,d=b&(ob|pb),e=this.attrTest(a);return d&&(c&Ha||!e)?b|sb:d||e?c&Ga?b|qb:b&ob?b|pb:ob:tb}}),i(ba,aa,{defaults:{event:\\\"pan\\\",threshold:10,pointers:1,direction:Pa},getTouchAction:function(){var a=this.options.direction,b=[];return a&Na&&b.push(lb),a&Oa&&b.push(kb),b},directionTest:function(a){var b=this.options,c=!0,d=a.distance,e=a.direction,f=a.deltaX,g=a.deltaY;return e&b.direction||(b.direction&Na?(e=0===f?Ia:0>f?Ja:Ka,c=f!=this.pX,d=Math.abs(a.deltaX)):(e=0===g?Ia:0>g?La:Ma,c=g!=this.pY,d=Math.abs(a.deltaY))),a.direction=e,c&&d>b.threshold&&e&b.direction},attrTest:function(a){return aa.prototype.attrTest.call(this,a)&&(this.state&ob||!(this.state&ob)&&this.directionTest(a))},emit:function(a){this.pX=a.deltaX,this.pY=a.deltaY;var b=$(a.direction);b&&(a.additionalEvent=this.options.event+b),this._super.emit.call(this,a)}}),i(ca,aa,{defaults:{event:\\\"pinch\\\",threshold:0,pointers:2},getTouchAction:function(){return[jb]},attrTest:function(a){return this._super.attrTest.call(this,a)&&(Math.abs(a.scale-1)>this.options.threshold||this.state&ob)},emit:function(a){if(1!==a.scale){var b=a.scale<1?\\\"in\\\":\\\"out\\\";a.additionalEvent=this.options.event+b}this._super.emit.call(this,a)}}),i(da,Y,{defaults:{event:\\\"press\\\",pointers:1,time:251,threshold:9},getTouchAction:function(){return[hb]},process:function(a){var b=this.options,c=a.pointers.length===b.pointers,d=a.distance<b.threshold,f=a.deltaTime>b.time;if(this._input=a,!d||!c||a.eventType&(Ga|Ha)&&!f)this.reset();else if(a.eventType&Ea)this.reset(),this._timer=e(function(){this.state=rb,this.tryEmit()},b.time,this);else if(a.eventType&Ga)return rb;return tb},reset:function(){clearTimeout(this._timer)},emit:function(a){this.state===rb&&(a&&a.eventType&Ga?this.manager.emit(this.options.event+\\\"up\\\",a):(this._input.timeStamp=ra(),this.manager.emit(this.options.event,this._input)))}}),i(ea,aa,{defaults:{event:\\\"rotate\\\",threshold:0,pointers:2},getTouchAction:function(){return[jb]},attrTest:function(a){return this._super.attrTest.call(this,a)&&(Math.abs(a.rotation)>this.options.threshold||this.state&ob)}}),i(fa,aa,{defaults:{event:\\\"swipe\\\",threshold:10,velocity:.3,direction:Na|Oa,pointers:1},getTouchAction:function(){return ba.prototype.getTouchAction.call(this)},attrTest:function(a){var b,c=this.options.direction;return c&(Na|Oa)?b=a.overallVelocity:c&Na?b=a.overallVelocityX:c&Oa&&(b=a.overallVelocityY),this._super.attrTest.call(this,a)&&c&a.offsetDirection&&a.distance>this.options.threshold&&a.maxPointers==this.options.pointers&&qa(b)>this.options.velocity&&a.eventType&Ga},emit:function(a){var b=$(a.offsetDirection);b&&this.manager.emit(this.options.event+b,a),this.manager.emit(this.options.event,a)}}),i(ga,Y,{defaults:{event:\\\"tap\\\",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10},getTouchAction:function(){return[ib]},process:function(a){var b=this.options,c=a.pointers.length===b.pointers,d=a.distance<b.threshold,f=a.deltaTime<b.time;if(this.reset(),a.eventType&Ea&&0===this.count)return this.failTimeout();if(d&&f&&c){if(a.eventType!=Ga)return this.failTimeout();var g=this.pTime?a.timeStamp-this.pTime<b.interval:!0,h=!this.pCenter||H(this.pCenter,a.center)<b.posThreshold;this.pTime=a.timeStamp,this.pCenter=a.center,h&&g?this.count+=1:this.count=1,this._input=a;var i=this.count%b.taps;if(0===i)return this.hasRequireFailures()?(this._timer=e(function(){this.state=rb,this.tryEmit()},b.interval,this),ob):rb}return tb},failTimeout:function(){return this._timer=e(function(){this.state=tb},this.options.interval,this),tb},reset:function(){clearTimeout(this._timer)},emit:function(){this.state==rb&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))}}),ha.VERSION=\\\"2.0.8\\\",ha.defaults={domEvents:!1,touchAction:gb,enable:!0,inputTarget:null,inputClass:null,preset:[[ea,{enable:!1}],[ca,{enable:!1},[\\\"rotate\\\"]],[fa,{direction:Na}],[ba,{direction:Na},[\\\"swipe\\\"]],[ga],[ga,{event:\\\"doubletap\\\",taps:2},[\\\"tap\\\"]],[da]],cssProps:{userSelect:\\\"none\\\",touchSelect:\\\"none\\\",touchCallout:\\\"none\\\",contentZooming:\\\"none\\\",userDrag:\\\"none\\\",tapHighlightColor:\\\"rgba(0,0,0,0)\\\"}};var ub=1,vb=2;ia.prototype={set:function(a){return la(this.options,a),a.touchAction&&this.touchAction.update(),a.inputTarget&&(this.input.destroy(),this.input.target=a.inputTarget,this.input.init()),this},stop:function(a){this.session.stopped=a?vb:ub},recognize:function(a){var b=this.session;if(!b.stopped){this.touchAction.preventDefaults(a);var c,d=this.recognizers,e=b.curRecognizer;(!e||e&&e.state&rb)&&(e=b.curRecognizer=null);for(var f=0;f<d.length;)c=d[f],b.stopped===vb||e&&c!=e&&!c.canRecognizeWith(e)?c.reset():c.recognize(a),!e&&c.state&(ob|pb|qb)&&(e=b.curRecognizer=c),f++}},get:function(a){if(a instanceof Y)return a;for(var b=this.recognizers,c=0;c<b.length;c++)if(b[c].options.event==a)return b[c];return null},add:function(a){if(f(a,\\\"add\\\",this))return this;var b=this.get(a.options.event);return b&&this.remove(b),this.recognizers.push(a),a.manager=this,this.touchAction.update(),a},remove:function(a){if(f(a,\\\"remove\\\",this))return this;if(a=this.get(a)){var b=this.recognizers,c=r(b,a);-1!==c&&(b.splice(c,1),this.touchAction.update())}return this},on:function(a,b){if(a!==d&&b!==d){var c=this.handlers;return g(q(a),function(a){c[a]=c[a]||[],c[a].push(b)}),this}},off:function(a,b){if(a!==d){var c=this.handlers;return g(q(a),function(a){b?c[a]&&c[a].splice(r(c[a],b),1):delete c[a]}),this}},emit:function(a,b){this.options.domEvents&&ka(a,b);var c=this.handlers[a]&&this.handlers[a].slice();if(c&&c.length){b.type=a,b.preventDefault=function(){b.srcEvent.preventDefault()};for(var d=0;d<c.length;)c[d](b),d++}},destroy:function(){this.element&&ja(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}},la(ha,{INPUT_START:Ea,INPUT_MOVE:Fa,INPUT_END:Ga,INPUT_CANCEL:Ha,STATE_POSSIBLE:nb,STATE_BEGAN:ob,STATE_CHANGED:pb,STATE_ENDED:qb,STATE_RECOGNIZED:rb,STATE_CANCELLED:sb,STATE_FAILED:tb,DIRECTION_NONE:Ia,DIRECTION_LEFT:Ja,DIRECTION_RIGHT:Ka,DIRECTION_UP:La,DIRECTION_DOWN:Ma,DIRECTION_HORIZONTAL:Na,DIRECTION_VERTICAL:Oa,DIRECTION_ALL:Pa,Manager:ia,Input:x,TouchAction:V,TouchInput:P,MouseInput:L,PointerEventInput:M,TouchMouseInput:R,SingleTouchInput:N,Recognizer:Y,AttrRecognizer:aa,Tap:ga,Pan:ba,Swipe:fa,Pinch:ca,Rotate:ea,Press:da,on:m,off:n,each:g,merge:ta,extend:sa,assign:la,inherit:i,bindFn:j,prefixed:u});var wb=\\\"undefined\\\"!=typeof a?a:\\\"undefined\\\"!=typeof self?self:{};wb.Hammer=ha,\\\"function\\\"==typeof define&&define.amd?define(function(){return ha}):\\\"undefined\\\"!=typeof module&&module.exports?module.exports=ha:a[c]=ha}(window,document,\\\"Hammer\\\");\\n//# sourceMappingURL=hammer.min.js.map\""
		},
		{
			"name": "signals.min.js",
			"_id": "signals",
			"source": "\"/*\\r\\n     JS Signals <http://millermedeiros.github.com/js-signals/>\\r\\n     Released under the MIT license\\r\\n     Author: Miller Medeiros\\r\\n     Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)\\r\\n*/\\r\\n\\r\\n(function(i){function h(a,b,c,d,e){this._listener=b;this._isOnce=c;this.context=d;this._signal=a;this._priority=e||0}function g(a,b){if(typeof a!==\\\"function\\\")throw Error(\\\"listener is a required param of {fn}() and should be a Function.\\\".replace(\\\"{fn}\\\",b));}function e(){this._bindings=[];this._prevParams=null;var a=this;this.dispatch=function(){e.prototype.dispatch.apply(a,arguments)}}h.prototype={active:!0,params:null,execute:function(a){var b;this.active&&this._listener&&(a=this.params?this.params.concat(a):a,b=this._listener.apply(this.context,a),this._isOnce&&this.detach());return b},detach:function(){return this.isBound()?this._signal.remove(this._listener,this.context):null},isBound:function(){return!!this._signal&&!!this._listener},isOnce:function(){return this._isOnce},getListener:function(){return this._listener},getSignal:function(){return this._signal},_destroy:function(){delete this._signal;delete this._listener;delete this.context},toString:function(){return\\\"[SignalBinding isOnce:\\\"+this._isOnce+\\\", isBound:\\\"+this.isBound()+\\\", active:\\\"+this.active+\\\"]\\\"}};e.prototype={VERSION:\\\"1.0.0\\\",memorize:!1,_shouldPropagate:!0,active:!0,_registerListener:function(a,b,c,d){var e=this._indexOfListener(a,c);if(e!==-1){if(a=this._bindings[e],a.isOnce()!==b)throw Error(\\\"You cannot add\\\"+(b?\\\"\\\":\\\"Once\\\")+\\\"() then add\\\"+(!b?\\\"\\\":\\\"Once\\\")+\\\"() the same listener without removing the relationship first.\\\");}else a=new h(this,a,b,c,d),this._addBinding(a);this.memorize&&this._prevParams&&a.execute(this._prevParams);return a},_addBinding:function(a){var b=this._bindings.length;do--b;while(this._bindings[b]&&a._priority<=this._bindings[b]._priority);this._bindings.splice(b+1,0,a)},_indexOfListener:function(a,b){for(var c=this._bindings.length,d;c--;)if(d=this._bindings[c],d._listener===a&&d.context===b)return c;return-1},has:function(a,b){return this._indexOfListener(a,b)!==-1},add:function(a,b,c){g(a,\\\"add\\\");return this._registerListener(a,!1,b,c)},addOnce:function(a,b,c){g(a,\\\"addOnce\\\");return this._registerListener(a,!0,b,c)},remove:function(a,b){g(a,\\\"remove\\\");var c=this._indexOfListener(a,b);c!==-1&&(this._bindings[c]._destroy(),this._bindings.splice(c,1));return a},removeAll:function(){for(var a=this._bindings.length;a--;)this._bindings[a]._destroy();this._bindings.length=0},getNumListeners:function(){return this._bindings.length},halt:function(){this._shouldPropagate=!1},dispatch:function(a){if(this.active){var b=Array.prototype.slice.call(arguments),c=this._bindings.length,d;if(this.memorize)this._prevParams=b;if(c){d=this._bindings.slice();this._shouldPropagate=!0;do c--;while(d[c]&&this._shouldPropagate&&d[c].execute(b)!==!1)}}},forget:function(){this._prevParams=null},dispose:function(){this.removeAll();delete this._bindings;delete this._prevParams},toString:function(){return\\\"[Signal active:\\\"+this.active+\\\" numListeners:\\\"+this.getNumListeners()+\\\"]\\\"}};var f=e;f.Signal=e;typeof define===\\\"function\\\"&&define.amd?define(function(){return f}):typeof module!==\\\"undefined\\\"&&module.exports?module.exports=f:i.signals=f})(this);\\r\\n\""
		},
		{
			"name": "validator.min.js",
			"_id": "validator",
			"source": "\"/*!\\r\\n * Copyright (c) 2016 Chris O'Hara <cohara87@gmail.com>\\r\\n * \\r\\n * Permission is hereby granted, free of charge, to any person obtaining\\r\\n * a copy of this software and associated documentation files (the\\r\\n * \\\"Software\\\"), to deal in the Software without restriction, including\\r\\n * without limitation the rights to use, copy, modify, merge, publish,\\r\\n * distribute, sublicense, and/or sell copies of the Software, and to\\r\\n * permit persons to whom the Software is furnished to do so, subject to\\r\\n * the following conditions:\\r\\n * \\r\\n * The above copyright notice and this permission notice shall be\\r\\n * included in all copies or substantial portions of the Software.\\r\\n * \\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND,\\r\\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\r\\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\\r\\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\\r\\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\\r\\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\\r\\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\r\\n */\\r\\n!function(e,t){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=t():\\\"function\\\"==typeof define&&define.amd?define(t):e.validator=t()}(this,function(){\\\"use strict\\\";function f(e){if(!(\\\"string\\\"==typeof e||e instanceof String))throw new TypeError(\\\"This library (validator.js) validates strings only\\\")}function i(e){return f(e),e=Date.parse(e),isNaN(e)?null:new Date(e)}function r(e){return f(e),parseFloat(e)}var a=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\\\"function\\\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\\\"symbol\\\":typeof e};function n(e){return\\\"object\\\"===(void 0===e?\\\"undefined\\\":a(e))&&null!==e?e=\\\"function\\\"==typeof e.toString?e.toString():\\\"[object Object]\\\":(null==e||isNaN(e)&&!e.length)&&(e=\\\"\\\"),String(e)}function c(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e}function d(e,t){f(e);var r=void 0,o=void 0;\\\"object\\\"===(void 0===t?\\\"undefined\\\":a(t))?(r=t.min||0,o=t.max):(r=t,o=arguments[2]);var i=encodeURI(e).split(/%..|./).length-1;return r<=i&&(void 0===o||i<=o)}var l={require_tld:!0,allow_underscores:!1,allow_trailing_dot:!1};function p(e,t){f(e),(t=c(t,l)).allow_trailing_dot&&\\\".\\\"===e[e.length-1]&&(e=e.substring(0,e.length-1));for(var r=e.split(\\\".\\\"),o=0;o<r.length;o++)if(63<r[o].length)return!1;if(t.require_tld){var i=r.pop();if(!r.length||!/^([a-z\\\\u00a1-\\\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(i))return!1;if(/[\\\\s\\\\u2002-\\\\u200B\\\\u202F\\\\u205F\\\\u3000\\\\uFEFF\\\\uDB40\\\\uDC20]/.test(i))return!1}for(var n,a=0;a<r.length;a++){if(n=r[a],t.allow_underscores&&(n=n.replace(/_/g,\\\"\\\")),!/^[a-z\\\\u00a1-\\\\uffff0-9-]+$/i.test(n))return!1;if(/[\\\\uff01-\\\\uff5e]/.test(n))return!1;if(\\\"-\\\"===n[0]||\\\"-\\\"===n[n.length-1])return!1}return!0}var g={allow_display_name:!1,require_display_name:!1,allow_utf8_local_part:!0,require_tld:!0},A=/^[a-z\\\\d!#\\\\$%&'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\^_`{\\\\|}~\\\\.\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]+[a-z\\\\d!#\\\\$%&'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\^_`{\\\\|}~\\\\,\\\\.\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\\\\s]*<(.+)>$/i,h=/^[a-z\\\\d!#\\\\$%&'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\^_`{\\\\|}~]+$/i,v=/^([\\\\s\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x7f\\\\x21\\\\x23-\\\\x5b\\\\x5d-\\\\x7e]|(\\\\\\\\[\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0d-\\\\x7f]))*$/i,m=/^[a-z\\\\d!#\\\\$%&'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\^_`{\\\\|}~\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]+$/i,_=/^([\\\\s\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x7f\\\\x21\\\\x23-\\\\x5b\\\\x5d-\\\\x7e\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]|(\\\\\\\\[\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0d-\\\\x7f\\\\u00A0-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]))*$/i;var s=/^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$/,u=/^[0-9A-F]{1,4}$/i;function F(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\\\"\\\";if(f(e),!(t=String(t)))return F(e,4)||F(e,6);if(\\\"4\\\"===t)return!!s.test(e)&&e.split(\\\".\\\").sort(function(e,t){return e-t})[3]<=255;if(\\\"6\\\"===t){var r=e.split(\\\":\\\"),o=!1,i=F(r[r.length-1],4),n=i?7:8;if(r.length>n)return!1;if(\\\"::\\\"===e)return!0;\\\"::\\\"===e.substr(0,2)?(r.shift(),r.shift(),o=!0):\\\"::\\\"===e.substr(e.length-2)&&(r.pop(),r.pop(),o=!0);for(var a=0;a<r.length;++a)if(\\\"\\\"===r[a]&&0<a&&a<r.length-1){if(o)return!1;o=!0}else if(i&&a===r.length-1);else if(!u.test(r[a]))return!1;return o?1<=r.length:r.length===n}return!1}var $={protocols:[\\\"http\\\",\\\"https\\\",\\\"ftp\\\"],require_tld:!0,require_protocol:!1,require_host:!0,require_valid_protocol:!0,allow_underscores:!1,allow_trailing_dot:!1,allow_protocol_relative_urls:!1},S=/^\\\\[([^\\\\]]+)\\\\](?::([0-9]+))?$/;function R(e,t){for(var r=0;r<t.length;r++){var o=t[r];if(e===o||(i=o,\\\"[object RegExp]\\\"===Object.prototype.toString.call(i)&&o.test(e)))return!0}var i;return!1}var t=/^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;for(var e,o={\\\"en-US\\\":/^[A-Z]+$/i,\\\"bg-BG\\\":/^[А-Я]+$/i,\\\"cs-CZ\\\":/^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\\\"da-DK\\\":/^[A-ZÆØÅ]+$/i,\\\"de-DE\\\":/^[A-ZÄÖÜß]+$/i,\\\"el-GR\\\":/^[Α-ω]+$/i,\\\"es-ES\\\":/^[A-ZÁÉÍÑÓÚÜ]+$/i,\\\"fr-FR\\\":/^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\\\"it-IT\\\":/^[A-ZÀÉÈÌÎÓÒÙ]+$/i,\\\"nb-NO\\\":/^[A-ZÆØÅ]+$/i,\\\"nl-NL\\\":/^[A-ZÁÉËÏÓÖÜÚ]+$/i,\\\"nn-NO\\\":/^[A-ZÆØÅ]+$/i,\\\"hu-HU\\\":/^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\\\"pl-PL\\\":/^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\\\"pt-PT\\\":/^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,\\\"ru-RU\\\":/^[А-ЯЁ]+$/i,\\\"sk-SK\\\":/^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\\\"sr-RS@latin\\\":/^[A-ZČĆŽŠĐ]+$/i,\\\"sr-RS\\\":/^[А-ЯЂЈЉЊЋЏ]+$/i,\\\"sv-SE\\\":/^[A-ZÅÄÖ]+$/i,\\\"tr-TR\\\":/^[A-ZÇĞİıÖŞÜ]+$/i,\\\"uk-UA\\\":/^[А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},E={\\\"en-US\\\":/^[0-9A-Z]+$/i,\\\"bg-BG\\\":/^[0-9А-Я]+$/i,\\\"cs-CZ\\\":/^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\\\"da-DK\\\":/^[0-9A-ZÆØÅ]+$/i,\\\"de-DE\\\":/^[0-9A-ZÄÖÜß]+$/i,\\\"el-GR\\\":/^[0-9Α-ω]+$/i,\\\"es-ES\\\":/^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\\\"fr-FR\\\":/^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\\\"it-IT\\\":/^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,\\\"hu-HU\\\":/^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\\\"nb-NO\\\":/^[0-9A-ZÆØÅ]+$/i,\\\"nl-NL\\\":/^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,\\\"nn-NO\\\":/^[0-9A-ZÆØÅ]+$/i,\\\"pl-PL\\\":/^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\\\"pt-PT\\\":/^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,\\\"ru-RU\\\":/^[0-9А-ЯЁ]+$/i,\\\"sk-SK\\\":/^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\\\"sr-RS@latin\\\":/^[0-9A-ZČĆŽŠĐ]+$/i,\\\"sr-RS\\\":/^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\\\"sv-SE\\\":/^[0-9A-ZÅÄÖ]+$/i,\\\"tr-TR\\\":/^[0-9A-ZÇĞİıÖŞÜ]+$/i,\\\"uk-UA\\\":/^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},x={\\\"en-US\\\":\\\".\\\",ar:\\\"٫\\\"},M=[\\\"AU\\\",\\\"GB\\\",\\\"HK\\\",\\\"IN\\\",\\\"NZ\\\",\\\"ZA\\\",\\\"ZM\\\"],C=0;C<M.length;C++)o[e=\\\"en-\\\"+M[C]]=o[\\\"en-US\\\"],E[e]=E[\\\"en-US\\\"],x[e]=x[\\\"en-US\\\"];for(var N,w=[\\\"AE\\\",\\\"BH\\\",\\\"DZ\\\",\\\"EG\\\",\\\"IQ\\\",\\\"JO\\\",\\\"KW\\\",\\\"LB\\\",\\\"LY\\\",\\\"MA\\\",\\\"QM\\\",\\\"QA\\\",\\\"SA\\\",\\\"SD\\\",\\\"SY\\\",\\\"TN\\\",\\\"YE\\\"],T=0;T<w.length;T++)o[N=\\\"ar-\\\"+w[T]]=o.ar,E[N]=E.ar,x[N]=x.ar;for(var Z=[],B=[\\\"bg-BG\\\",\\\"cs-CZ\\\",\\\"da-DK\\\",\\\"de-DE\\\",\\\"el-GR\\\",\\\"es-ES\\\",\\\"fr-FR\\\",\\\"it-IT\\\",\\\"hu-HU\\\",\\\"nb-NO\\\",\\\"nn-NO\\\",\\\"nl-NL\\\",\\\"pl-Pl\\\",\\\"pt-PT\\\",\\\"ru-RU\\\",\\\"sr-RS@latin\\\",\\\"sr-RS\\\",\\\"sv-SE\\\",\\\"tr-TR\\\",\\\"uk-UA\\\"],I=0;I<Z.length;I++)x[Z[I]]=x[\\\"en-US\\\"];for(var L=0;L<B.length;L++)x[B[L]]=\\\",\\\";o[\\\"pt-BR\\\"]=o[\\\"pt-PT\\\"],E[\\\"pt-BR\\\"]=E[\\\"pt-PT\\\"],x[\\\"pt-BR\\\"]=x[\\\"pt-PT\\\"];var y=/^[+-]?([0-9]*[.])?[0-9]+$/;var G=/^(?:[-+]?(?:0|[1-9][0-9]*))$/,D=/^[-+]?[0-9]+$/;function O(e,t){f(e);var r=(t=t||{}).hasOwnProperty(\\\"allow_leading_zeroes\\\")&&!t.allow_leading_zeroes?G:D,o=!t.hasOwnProperty(\\\"min\\\")||e>=t.min,i=!t.hasOwnProperty(\\\"max\\\")||e<=t.max,n=!t.hasOwnProperty(\\\"lt\\\")||e<t.lt,a=!t.hasOwnProperty(\\\"gt\\\")||e>t.gt;return r.test(e)&&o&&i&&n&&a}var U=/^[\\\\x00-\\\\x7F]+$/;var b=/[^\\\\u0020-\\\\u007E\\\\uFF61-\\\\uFF9F\\\\uFFA0-\\\\uFFDC\\\\uFFE8-\\\\uFFEE0-9a-zA-Z]/;var P=/[\\\\u0020-\\\\u007E\\\\uFF61-\\\\uFF9F\\\\uFFA0-\\\\uFFDC\\\\uFFE8-\\\\uFFEE0-9a-zA-Z]/;var K=/[^\\\\x00-\\\\x7F]/;var k=/[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]/;var H={force_decimal:!1,decimal_digits:\\\"1,\\\",locale:\\\"en-US\\\"},z=[\\\"\\\",\\\"-\\\",\\\"+\\\"];var V=/^[0-9A-F]+$/i;function W(e){return f(e),V.test(e)}var Y=/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;var j=/^[A-Z]{2}[0-9A-Z]{3}\\\\d{2}\\\\d{5}$/;var J=/^[a-f0-9]{32}$/;var q={md5:32,md4:32,sha1:40,sha256:64,sha384:96,sha512:128,ripemd128:32,ripemd160:40,tiger128:32,tiger160:40,tiger192:48,crc32:8,crc32b:8};var Q={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};var X=/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\\\d{3})\\\\d{11}|6[27][0-9]{14})$/;var ee=/^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;var te=/^(?:[0-9]{9}X|[0-9]{10})$/,re=/^(?:[0-9]{13})$/,oe=[1,3];var ie=\\\"^\\\\\\\\d{4}-?\\\\\\\\d{3}[\\\\\\\\dX]$\\\";var ne={\\\"ar-AE\\\":/^((\\\\+?971)|0)?5[024568]\\\\d{7}$/,\\\"ar-DZ\\\":/^(\\\\+?213|0)(5|6|7)\\\\d{8}$/,\\\"ar-EG\\\":/^((\\\\+?20)|0)?1[012]\\\\d{8}$/,\\\"ar-JO\\\":/^(\\\\+?962|0)?7[789]\\\\d{7}$/,\\\"ar-SA\\\":/^(!?(\\\\+?966)|0)?5\\\\d{8}$/,\\\"ar-SY\\\":/^(!?(\\\\+?963)|0)?9\\\\d{8}$/,\\\"be-BY\\\":/^(\\\\+?375)?(24|25|29|33|44)\\\\d{7}$/,\\\"bg-BG\\\":/^(\\\\+?359|0)?8[789]\\\\d{7}$/,\\\"cs-CZ\\\":/^(\\\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\\\"da-DK\\\":/^(\\\\+?45)?\\\\s?\\\\d{2}\\\\s?\\\\d{2}\\\\s?\\\\d{2}\\\\s?\\\\d{2}$/,\\\"de-DE\\\":/^(\\\\+?49[ \\\\.\\\\-])?([\\\\(]{1}[0-9]{1,6}[\\\\)])?([0-9 \\\\.\\\\-\\\\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/,\\\"el-GR\\\":/^(\\\\+?30|0)?(69\\\\d{8})$/,\\\"en-AU\\\":/^(\\\\+?61|0)4\\\\d{8}$/,\\\"en-GB\\\":/^(\\\\+?44|0)7\\\\d{9}$/,\\\"en-HK\\\":/^(\\\\+?852\\\\-?)?[456789]\\\\d{3}\\\\-?\\\\d{4}$/,\\\"en-IN\\\":/^(\\\\+?91|0)?[6789]\\\\d{9}$/,\\\"en-KE\\\":/^(\\\\+?254|0)?[7]\\\\d{8}$/,\\\"en-NG\\\":/^(\\\\+?234|0)?[789]\\\\d{9}$/,\\\"en-NZ\\\":/^(\\\\+?64|0)2\\\\d{7,9}$/,\\\"en-PK\\\":/^((\\\\+92)|(0092))-{0,1}\\\\d{3}-{0,1}\\\\d{7}$|^\\\\d{11}$|^\\\\d{4}-\\\\d{7}$/,\\\"en-RW\\\":/^(\\\\+?250|0)?[7]\\\\d{8}$/,\\\"en-SG\\\":/^(\\\\+65)?[89]\\\\d{7}$/,\\\"en-TZ\\\":/^(\\\\+?255|0)?[67]\\\\d{8}$/,\\\"en-UG\\\":/^(\\\\+?256|0)?[7]\\\\d{8}$/,\\\"en-US\\\":/^(\\\\+?1)?[2-9]\\\\d{2}[2-9](?!11)\\\\d{6}$/,\\\"en-ZA\\\":/^(\\\\+?27|0)\\\\d{9}$/,\\\"en-ZM\\\":/^(\\\\+?26)?09[567]\\\\d{7}$/,\\\"es-ES\\\":/^(\\\\+?34)?(6\\\\d{1}|7[1234])\\\\d{7}$/,\\\"et-EE\\\":/^(\\\\+?372)?\\\\s?(5|8[1-4])\\\\s?([0-9]\\\\s?){6,7}$/,\\\"fa-IR\\\":/^(\\\\+?98[\\\\-\\\\s]?|0)9[0-39]\\\\d[\\\\-\\\\s]?\\\\d{3}[\\\\-\\\\s]?\\\\d{4}$/,\\\"fi-FI\\\":/^(\\\\+?358|0)\\\\s?(4(0|1|2|4|5|6)?|50)\\\\s?(\\\\d\\\\s?){4,8}\\\\d$/,\\\"fo-FO\\\":/^(\\\\+?298)?\\\\s?\\\\d{2}\\\\s?\\\\d{2}\\\\s?\\\\d{2}$/,\\\"fr-FR\\\":/^(\\\\+?33|0)[67]\\\\d{8}$/,\\\"he-IL\\\":/^(\\\\+972|0)([23489]|5[012345689]|77)[1-9]\\\\d{6}/,\\\"hu-HU\\\":/^(\\\\+?36)(20|30|70)\\\\d{7}$/,\\\"id-ID\\\":/^(\\\\+?62|0[1-9])[\\\\s|\\\\d]+$/,\\\"it-IT\\\":/^(\\\\+?39)?\\\\s?3\\\\d{2} ?\\\\d{6,7}$/,\\\"ja-JP\\\":/^(\\\\+?81|0)[789]0[ \\\\-]?[1-9]\\\\d{2}[ \\\\-]?\\\\d{5}$/,\\\"kk-KZ\\\":/^(\\\\+?7|8)?7\\\\d{9}$/,\\\"kl-GL\\\":/^(\\\\+?299)?\\\\s?\\\\d{2}\\\\s?\\\\d{2}\\\\s?\\\\d{2}$/,\\\"ko-KR\\\":/^((\\\\+?82)[ \\\\-]?)?0?1([0|1|6|7|8|9]{1})[ \\\\-]?\\\\d{3,4}[ \\\\-]?\\\\d{4}$/,\\\"lt-LT\\\":/^(\\\\+370|8)\\\\d{8}$/,\\\"ms-MY\\\":/^(\\\\+?6?01){1}(([145]{1}(\\\\-|\\\\s)?\\\\d{7,8})|([236789]{1}(\\\\s|\\\\-)?\\\\d{7}))$/,\\\"nb-NO\\\":/^(\\\\+?47)?[49]\\\\d{7}$/,\\\"nl-BE\\\":/^(\\\\+?32|0)4?\\\\d{8}$/,\\\"nn-NO\\\":/^(\\\\+?47)?[49]\\\\d{7}$/,\\\"pl-PL\\\":/^(\\\\+?48)? ?[5-8]\\\\d ?\\\\d{3} ?\\\\d{2} ?\\\\d{2}$/,\\\"pt-BR\\\":/^(\\\\+?55|0)\\\\-?[1-9]{2}\\\\-?[2-9]{1}\\\\d{3,4}\\\\-?\\\\d{4}$/,\\\"pt-PT\\\":/^(\\\\+?351)?9[1236]\\\\d{7}$/,\\\"ro-RO\\\":/^(\\\\+?4?0)\\\\s?7\\\\d{2}(\\\\/|\\\\s|\\\\.|\\\\-)?\\\\d{3}(\\\\s|\\\\.|\\\\-)?\\\\d{3}$/,\\\"ru-RU\\\":/^(\\\\+?7|8)?9\\\\d{9}$/,\\\"sk-SK\\\":/^(\\\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\\\"sr-RS\\\":/^(\\\\+3816|06)[- \\\\d]{5,9}$/,\\\"th-TH\\\":/^(\\\\+66|66|0)\\\\d{9}$/,\\\"tr-TR\\\":/^(\\\\+?90|0)?5\\\\d{9}$/,\\\"uk-UA\\\":/^(\\\\+?38|8)?0\\\\d{9}$/,\\\"vi-VN\\\":/^(\\\\+?84|0)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,\\\"zh-CN\\\":/^(\\\\+?0?86\\\\-?)?1[3456789]\\\\d{9}$/,\\\"zh-TW\\\":/^(\\\\+?886\\\\-?|0)?9\\\\d{8}$/};ne[\\\"en-CA\\\"]=ne[\\\"en-US\\\"],ne[\\\"fr-BE\\\"]=ne[\\\"nl-BE\\\"],ne[\\\"zh-HK\\\"]=ne[\\\"en-HK\\\"];var ae={symbol:\\\"$\\\",require_symbol:!1,allow_space_after_symbol:!1,symbol_after_digits:!1,allow_negatives:!0,parens_for_negatives:!1,negative_sign_before_digits:!1,negative_sign_after_digits:!1,allow_negative_sign_placeholder:!1,thousands_separator:\\\",\\\",decimal_separator:\\\".\\\",allow_decimal:!0,require_decimal:!1,digits_after_decimal:[2],allow_space_after_digits:!1};var le=/^([\\\\+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([\\\\.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([\\\\.,]\\\\d+)?)?([zZ]|([\\\\+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;var se=/([01][0-9]|2[0-3])/,ue=/[0-5][0-9]/,de=new RegExp(\\\"[-+]\\\"+se.source+\\\":\\\"+ue.source),ce=new RegExp(\\\"([zZ]|\\\"+de.source+\\\")\\\"),fe=new RegExp(se.source+\\\":\\\"+ue.source+\\\":\\\"+/([0-5][0-9]|60)/.source+/(\\\\.[0-9]+)?/.source),pe=new RegExp(/[0-9]{4}/.source+\\\"-\\\"+/(0[1-9]|1[0-2])/.source+\\\"-\\\"+/([12]\\\\d|0[1-9]|3[01])/.source),ge=new RegExp(\\\"\\\"+fe.source+ce.source),Ae=new RegExp(pe.source+\\\"[ tT]\\\"+ge.source);var he=[\\\"AD\\\",\\\"AE\\\",\\\"AF\\\",\\\"AG\\\",\\\"AI\\\",\\\"AL\\\",\\\"AM\\\",\\\"AO\\\",\\\"AQ\\\",\\\"AR\\\",\\\"AS\\\",\\\"AT\\\",\\\"AU\\\",\\\"AW\\\",\\\"AX\\\",\\\"AZ\\\",\\\"BA\\\",\\\"BB\\\",\\\"BD\\\",\\\"BE\\\",\\\"BF\\\",\\\"BG\\\",\\\"BH\\\",\\\"BI\\\",\\\"BJ\\\",\\\"BL\\\",\\\"BM\\\",\\\"BN\\\",\\\"BO\\\",\\\"BQ\\\",\\\"BR\\\",\\\"BS\\\",\\\"BT\\\",\\\"BV\\\",\\\"BW\\\",\\\"BY\\\",\\\"BZ\\\",\\\"CA\\\",\\\"CC\\\",\\\"CD\\\",\\\"CF\\\",\\\"CG\\\",\\\"CH\\\",\\\"CI\\\",\\\"CK\\\",\\\"CL\\\",\\\"CM\\\",\\\"CN\\\",\\\"CO\\\",\\\"CR\\\",\\\"CU\\\",\\\"CV\\\",\\\"CW\\\",\\\"CX\\\",\\\"CY\\\",\\\"CZ\\\",\\\"DE\\\",\\\"DJ\\\",\\\"DK\\\",\\\"DM\\\",\\\"DO\\\",\\\"DZ\\\",\\\"EC\\\",\\\"EE\\\",\\\"EG\\\",\\\"EH\\\",\\\"ER\\\",\\\"ES\\\",\\\"ET\\\",\\\"FI\\\",\\\"FJ\\\",\\\"FK\\\",\\\"FM\\\",\\\"FO\\\",\\\"FR\\\",\\\"GA\\\",\\\"GB\\\",\\\"GD\\\",\\\"GE\\\",\\\"GF\\\",\\\"GG\\\",\\\"GH\\\",\\\"GI\\\",\\\"GL\\\",\\\"GM\\\",\\\"GN\\\",\\\"GP\\\",\\\"GQ\\\",\\\"GR\\\",\\\"GS\\\",\\\"GT\\\",\\\"GU\\\",\\\"GW\\\",\\\"GY\\\",\\\"HK\\\",\\\"HM\\\",\\\"HN\\\",\\\"HR\\\",\\\"HT\\\",\\\"HU\\\",\\\"ID\\\",\\\"IE\\\",\\\"IL\\\",\\\"IM\\\",\\\"IN\\\",\\\"IO\\\",\\\"IQ\\\",\\\"IR\\\",\\\"IS\\\",\\\"IT\\\",\\\"JE\\\",\\\"JM\\\",\\\"JO\\\",\\\"JP\\\",\\\"KE\\\",\\\"KG\\\",\\\"KH\\\",\\\"KI\\\",\\\"KM\\\",\\\"KN\\\",\\\"KP\\\",\\\"KR\\\",\\\"KW\\\",\\\"KY\\\",\\\"KZ\\\",\\\"LA\\\",\\\"LB\\\",\\\"LC\\\",\\\"LI\\\",\\\"LK\\\",\\\"LR\\\",\\\"LS\\\",\\\"LT\\\",\\\"LU\\\",\\\"LV\\\",\\\"LY\\\",\\\"MA\\\",\\\"MC\\\",\\\"MD\\\",\\\"ME\\\",\\\"MF\\\",\\\"MG\\\",\\\"MH\\\",\\\"MK\\\",\\\"ML\\\",\\\"MM\\\",\\\"MN\\\",\\\"MO\\\",\\\"MP\\\",\\\"MQ\\\",\\\"MR\\\",\\\"MS\\\",\\\"MT\\\",\\\"MU\\\",\\\"MV\\\",\\\"MW\\\",\\\"MX\\\",\\\"MY\\\",\\\"MZ\\\",\\\"NA\\\",\\\"NC\\\",\\\"NE\\\",\\\"NF\\\",\\\"NG\\\",\\\"NI\\\",\\\"NL\\\",\\\"NO\\\",\\\"NP\\\",\\\"NR\\\",\\\"NU\\\",\\\"NZ\\\",\\\"OM\\\",\\\"PA\\\",\\\"PE\\\",\\\"PF\\\",\\\"PG\\\",\\\"PH\\\",\\\"PK\\\",\\\"PL\\\",\\\"PM\\\",\\\"PN\\\",\\\"PR\\\",\\\"PS\\\",\\\"PT\\\",\\\"PW\\\",\\\"PY\\\",\\\"QA\\\",\\\"RE\\\",\\\"RO\\\",\\\"RS\\\",\\\"RU\\\",\\\"RW\\\",\\\"SA\\\",\\\"SB\\\",\\\"SC\\\",\\\"SD\\\",\\\"SE\\\",\\\"SG\\\",\\\"SH\\\",\\\"SI\\\",\\\"SJ\\\",\\\"SK\\\",\\\"SL\\\",\\\"SM\\\",\\\"SN\\\",\\\"SO\\\",\\\"SR\\\",\\\"SS\\\",\\\"ST\\\",\\\"SV\\\",\\\"SX\\\",\\\"SY\\\",\\\"SZ\\\",\\\"TC\\\",\\\"TD\\\",\\\"TF\\\",\\\"TG\\\",\\\"TH\\\",\\\"TJ\\\",\\\"TK\\\",\\\"TL\\\",\\\"TM\\\",\\\"TN\\\",\\\"TO\\\",\\\"TR\\\",\\\"TT\\\",\\\"TV\\\",\\\"TW\\\",\\\"TZ\\\",\\\"UA\\\",\\\"UG\\\",\\\"UM\\\",\\\"US\\\",\\\"UY\\\",\\\"UZ\\\",\\\"VA\\\",\\\"VC\\\",\\\"VE\\\",\\\"VG\\\",\\\"VI\\\",\\\"VN\\\",\\\"VU\\\",\\\"WF\\\",\\\"WS\\\",\\\"YE\\\",\\\"YT\\\",\\\"ZA\\\",\\\"ZM\\\",\\\"ZW\\\"];var ve=[\\\"AFG\\\",\\\"ALA\\\",\\\"ALB\\\",\\\"DZA\\\",\\\"ASM\\\",\\\"AND\\\",\\\"AGO\\\",\\\"AIA\\\",\\\"ATA\\\",\\\"ATG\\\",\\\"ARG\\\",\\\"ARM\\\",\\\"ABW\\\",\\\"AUS\\\",\\\"AUT\\\",\\\"AZE\\\",\\\"BHS\\\",\\\"BHR\\\",\\\"BGD\\\",\\\"BRB\\\",\\\"BLR\\\",\\\"BEL\\\",\\\"BLZ\\\",\\\"BEN\\\",\\\"BMU\\\",\\\"BTN\\\",\\\"BOL\\\",\\\"BES\\\",\\\"BIH\\\",\\\"BWA\\\",\\\"BVT\\\",\\\"BRA\\\",\\\"IOT\\\",\\\"BRN\\\",\\\"BGR\\\",\\\"BFA\\\",\\\"BDI\\\",\\\"KHM\\\",\\\"CMR\\\",\\\"CAN\\\",\\\"CPV\\\",\\\"CYM\\\",\\\"CAF\\\",\\\"TCD\\\",\\\"CHL\\\",\\\"CHN\\\",\\\"CXR\\\",\\\"CCK\\\",\\\"COL\\\",\\\"COM\\\",\\\"COG\\\",\\\"COD\\\",\\\"COK\\\",\\\"CRI\\\",\\\"CIV\\\",\\\"HRV\\\",\\\"CUB\\\",\\\"CUW\\\",\\\"CYP\\\",\\\"CZE\\\",\\\"DNK\\\",\\\"DJI\\\",\\\"DMA\\\",\\\"DOM\\\",\\\"ECU\\\",\\\"EGY\\\",\\\"SLV\\\",\\\"GNQ\\\",\\\"ERI\\\",\\\"EST\\\",\\\"ETH\\\",\\\"FLK\\\",\\\"FRO\\\",\\\"FJI\\\",\\\"FIN\\\",\\\"FRA\\\",\\\"GUF\\\",\\\"PYF\\\",\\\"ATF\\\",\\\"GAB\\\",\\\"GMB\\\",\\\"GEO\\\",\\\"DEU\\\",\\\"GHA\\\",\\\"GIB\\\",\\\"GRC\\\",\\\"GRL\\\",\\\"GRD\\\",\\\"GLP\\\",\\\"GUM\\\",\\\"GTM\\\",\\\"GGY\\\",\\\"GIN\\\",\\\"GNB\\\",\\\"GUY\\\",\\\"HTI\\\",\\\"HMD\\\",\\\"VAT\\\",\\\"HND\\\",\\\"HKG\\\",\\\"HUN\\\",\\\"ISL\\\",\\\"IND\\\",\\\"IDN\\\",\\\"IRN\\\",\\\"IRQ\\\",\\\"IRL\\\",\\\"IMN\\\",\\\"ISR\\\",\\\"ITA\\\",\\\"JAM\\\",\\\"JPN\\\",\\\"JEY\\\",\\\"JOR\\\",\\\"KAZ\\\",\\\"KEN\\\",\\\"KIR\\\",\\\"PRK\\\",\\\"KOR\\\",\\\"KWT\\\",\\\"KGZ\\\",\\\"LAO\\\",\\\"LVA\\\",\\\"LBN\\\",\\\"LSO\\\",\\\"LBR\\\",\\\"LBY\\\",\\\"LIE\\\",\\\"LTU\\\",\\\"LUX\\\",\\\"MAC\\\",\\\"MKD\\\",\\\"MDG\\\",\\\"MWI\\\",\\\"MYS\\\",\\\"MDV\\\",\\\"MLI\\\",\\\"MLT\\\",\\\"MHL\\\",\\\"MTQ\\\",\\\"MRT\\\",\\\"MUS\\\",\\\"MYT\\\",\\\"MEX\\\",\\\"FSM\\\",\\\"MDA\\\",\\\"MCO\\\",\\\"MNG\\\",\\\"MNE\\\",\\\"MSR\\\",\\\"MAR\\\",\\\"MOZ\\\",\\\"MMR\\\",\\\"NAM\\\",\\\"NRU\\\",\\\"NPL\\\",\\\"NLD\\\",\\\"NCL\\\",\\\"NZL\\\",\\\"NIC\\\",\\\"NER\\\",\\\"NGA\\\",\\\"NIU\\\",\\\"NFK\\\",\\\"MNP\\\",\\\"NOR\\\",\\\"OMN\\\",\\\"PAK\\\",\\\"PLW\\\",\\\"PSE\\\",\\\"PAN\\\",\\\"PNG\\\",\\\"PRY\\\",\\\"PER\\\",\\\"PHL\\\",\\\"PCN\\\",\\\"POL\\\",\\\"PRT\\\",\\\"PRI\\\",\\\"QAT\\\",\\\"REU\\\",\\\"ROU\\\",\\\"RUS\\\",\\\"RWA\\\",\\\"BLM\\\",\\\"SHN\\\",\\\"KNA\\\",\\\"LCA\\\",\\\"MAF\\\",\\\"SPM\\\",\\\"VCT\\\",\\\"WSM\\\",\\\"SMR\\\",\\\"STP\\\",\\\"SAU\\\",\\\"SEN\\\",\\\"SRB\\\",\\\"SYC\\\",\\\"SLE\\\",\\\"SGP\\\",\\\"SXM\\\",\\\"SVK\\\",\\\"SVN\\\",\\\"SLB\\\",\\\"SOM\\\",\\\"ZAF\\\",\\\"SGS\\\",\\\"SSD\\\",\\\"ESP\\\",\\\"LKA\\\",\\\"SDN\\\",\\\"SUR\\\",\\\"SJM\\\",\\\"SWZ\\\",\\\"SWE\\\",\\\"CHE\\\",\\\"SYR\\\",\\\"TWN\\\",\\\"TJK\\\",\\\"TZA\\\",\\\"THA\\\",\\\"TLS\\\",\\\"TGO\\\",\\\"TKL\\\",\\\"TON\\\",\\\"TTO\\\",\\\"TUN\\\",\\\"TUR\\\",\\\"TKM\\\",\\\"TCA\\\",\\\"TUV\\\",\\\"UGA\\\",\\\"UKR\\\",\\\"ARE\\\",\\\"GBR\\\",\\\"USA\\\",\\\"UMI\\\",\\\"URY\\\",\\\"UZB\\\",\\\"VUT\\\",\\\"VEN\\\",\\\"VNM\\\",\\\"VGB\\\",\\\"VIR\\\",\\\"WLF\\\",\\\"ESH\\\",\\\"YEM\\\",\\\"ZMB\\\",\\\"ZWE\\\"];var me=/[^A-Z0-9+\\\\/=]/i;var _e=/^[a-z]+\\\\/[a-z0-9\\\\-\\\\+]+$/i,Fe=/^[a-z\\\\-]+=[a-z0-9\\\\-]+$/i,$e=/^[a-z0-9!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=\\\\-\\\\._~:@\\\\/\\\\?%\\\\s]*$/i;var Se=/^(application|audio|font|image|message|model|multipart|text|video)\\\\/[a-zA-Z0-9\\\\.\\\\-\\\\+]{1,100}$/i,Re=/^text\\\\/[a-zA-Z0-9\\\\.\\\\-\\\\+]{1,100};\\\\s?charset=(\\\"[a-zA-Z0-9\\\\.\\\\-\\\\+\\\\s]{0,70}\\\"|[a-zA-Z0-9\\\\.\\\\-\\\\+]{0,70})(\\\\s?\\\\([a-zA-Z0-9\\\\.\\\\-\\\\+\\\\s]{1,20}\\\\))?$/i,Ee=/^multipart\\\\/[a-zA-Z0-9\\\\.\\\\-\\\\+]{1,100}(;\\\\s?(boundary|charset)=(\\\"[a-zA-Z0-9\\\\.\\\\-\\\\+\\\\s]{0,70}\\\"|[a-zA-Z0-9\\\\.\\\\-\\\\+]{0,70})(\\\\s?\\\\([a-zA-Z0-9\\\\.\\\\-\\\\+\\\\s]{1,20}\\\\))?){0,2}$/i;var xe=/^\\\\(?[+-]?(90(\\\\.0+)?|[1-8]?\\\\d(\\\\.\\\\d+)?)$/,Me=/^\\\\s?[+-]?(180(\\\\.0+)?|1[0-7]\\\\d(\\\\.\\\\d+)?|\\\\d{1,2}(\\\\.\\\\d+)?)\\\\)?$/,Ce=/^\\\\d{4}$/,Ne=/^\\\\d{5}$/,we=/^\\\\d{6}$/,Te={AT:Ce,AU:Ce,BE:Ce,BG:Ce,CA:/^[ABCEGHJKLMNPRSTVXY]\\\\d[ABCEGHJ-NPRSTV-Z][\\\\s\\\\-]?\\\\d[ABCEGHJ-NPRSTV-Z]\\\\d$/i,CH:Ce,CZ:/^\\\\d{3}\\\\s?\\\\d{2}$/,DE:Ne,DK:Ce,DZ:Ne,ES:Ne,FI:Ne,FR:/^\\\\d{2}\\\\s?\\\\d{3}$/,GB:/^(gir\\\\s?0aa|[a-z]{1,2}\\\\d[\\\\da-z]?\\\\s?(\\\\d[a-z]{2})?)$/i,GR:/^\\\\d{3}\\\\s?\\\\d{2}$/,IL:Ne,IN:we,IS:/^\\\\d{3}$/,IT:Ne,JP:/^\\\\d{3}\\\\-\\\\d{4}$/,KE:Ne,LI:/^(948[5-9]|949[0-7])$/,MX:Ne,NL:/^\\\\d{4}\\\\s?[a-z]{2}$/i,NO:Ce,PL:/^\\\\d{2}\\\\-\\\\d{3}$/,PT:/^\\\\d{4}\\\\-\\\\d{3}?$/,RO:we,RU:we,SA:Ne,SE:/^\\\\d{3}\\\\s?\\\\d{2}$/,SK:/^\\\\d{3}\\\\s?\\\\d{2}$/,TW:/^\\\\d{3}(\\\\d{2})?$/,US:/^\\\\d{5}(-\\\\d{4})?$/,ZA:Ce,ZM:Ne};function Ze(e,t){f(e);var r=t?new RegExp(\\\"^[\\\"+t+\\\"]+\\\",\\\"g\\\"):/^\\\\s+/g;return e.replace(r,\\\"\\\")}function Be(e,t){f(e);for(var r=t?new RegExp(\\\"[\\\"+t+\\\"]\\\"):/\\\\s/,o=e.length-1;0<=o&&r.test(e[o]);)o--;return o<e.length?e.substr(0,o+1):e}function Ie(e,t){return f(e),e.replace(new RegExp(\\\"[\\\"+t+\\\"]+\\\",\\\"g\\\"),\\\"\\\")}var Le={all_lowercase:!0,gmail_lowercase:!0,gmail_remove_dots:!0,gmail_remove_subaddress:!0,gmail_convert_googlemaildotcom:!0,outlookdotcom_lowercase:!0,outlookdotcom_remove_subaddress:!0,yahoo_lowercase:!0,yahoo_remove_subaddress:!0,yandex_lowercase:!0,icloud_lowercase:!0,icloud_remove_subaddress:!0},ye=[\\\"icloud.com\\\",\\\"me.com\\\"],Ge=[\\\"hotmail.at\\\",\\\"hotmail.be\\\",\\\"hotmail.ca\\\",\\\"hotmail.cl\\\",\\\"hotmail.co.il\\\",\\\"hotmail.co.nz\\\",\\\"hotmail.co.th\\\",\\\"hotmail.co.uk\\\",\\\"hotmail.com\\\",\\\"hotmail.com.ar\\\",\\\"hotmail.com.au\\\",\\\"hotmail.com.br\\\",\\\"hotmail.com.gr\\\",\\\"hotmail.com.mx\\\",\\\"hotmail.com.pe\\\",\\\"hotmail.com.tr\\\",\\\"hotmail.com.vn\\\",\\\"hotmail.cz\\\",\\\"hotmail.de\\\",\\\"hotmail.dk\\\",\\\"hotmail.es\\\",\\\"hotmail.fr\\\",\\\"hotmail.hu\\\",\\\"hotmail.id\\\",\\\"hotmail.ie\\\",\\\"hotmail.in\\\",\\\"hotmail.it\\\",\\\"hotmail.jp\\\",\\\"hotmail.kr\\\",\\\"hotmail.lv\\\",\\\"hotmail.my\\\",\\\"hotmail.ph\\\",\\\"hotmail.pt\\\",\\\"hotmail.sa\\\",\\\"hotmail.sg\\\",\\\"hotmail.sk\\\",\\\"live.be\\\",\\\"live.co.uk\\\",\\\"live.com\\\",\\\"live.com.ar\\\",\\\"live.com.mx\\\",\\\"live.de\\\",\\\"live.es\\\",\\\"live.eu\\\",\\\"live.fr\\\",\\\"live.it\\\",\\\"live.nl\\\",\\\"msn.com\\\",\\\"outlook.at\\\",\\\"outlook.be\\\",\\\"outlook.cl\\\",\\\"outlook.co.il\\\",\\\"outlook.co.nz\\\",\\\"outlook.co.th\\\",\\\"outlook.com\\\",\\\"outlook.com.ar\\\",\\\"outlook.com.au\\\",\\\"outlook.com.br\\\",\\\"outlook.com.gr\\\",\\\"outlook.com.pe\\\",\\\"outlook.com.tr\\\",\\\"outlook.com.vn\\\",\\\"outlook.cz\\\",\\\"outlook.de\\\",\\\"outlook.dk\\\",\\\"outlook.es\\\",\\\"outlook.fr\\\",\\\"outlook.hu\\\",\\\"outlook.id\\\",\\\"outlook.ie\\\",\\\"outlook.in\\\",\\\"outlook.it\\\",\\\"outlook.jp\\\",\\\"outlook.kr\\\",\\\"outlook.lv\\\",\\\"outlook.my\\\",\\\"outlook.ph\\\",\\\"outlook.pt\\\",\\\"outlook.sa\\\",\\\"outlook.sg\\\",\\\"outlook.sk\\\",\\\"passport.com\\\"],De=[\\\"rocketmail.com\\\",\\\"yahoo.ca\\\",\\\"yahoo.co.uk\\\",\\\"yahoo.com\\\",\\\"yahoo.de\\\",\\\"yahoo.fr\\\",\\\"yahoo.in\\\",\\\"yahoo.it\\\",\\\"ymail.com\\\"],Oe=[\\\"yandex.ru\\\",\\\"yandex.ua\\\",\\\"yandex.kz\\\",\\\"yandex.com\\\",\\\"yandex.by\\\",\\\"ya.ru\\\"];function Ue(e){return 1<e.length?e:\\\"\\\"}return{version:\\\"10.1.0\\\",toDate:i,toFloat:r,toInt:function(e,t){return f(e),parseInt(e,t||10)},toBoolean:function(e,t){return f(e),t?\\\"1\\\"===e||\\\"true\\\"===e:\\\"0\\\"!==e&&\\\"false\\\"!==e&&\\\"\\\"!==e},equals:function(e,t){return f(e),e===t},contains:function(e,t){return f(e),0<=e.indexOf(n(t))},matches:function(e,t,r){return f(e),\\\"[object RegExp]\\\"!==Object.prototype.toString.call(t)&&(t=new RegExp(t,r)),t.test(e)},isEmail:function(e,t){if(f(e),(t=c(t,g)).require_display_name||t.allow_display_name){var r=e.match(A);if(r)e=r[1];else if(t.require_display_name)return!1}var o=e.split(\\\"@\\\"),i=o.pop(),n=o.join(\\\"@\\\"),a=i.toLowerCase();if(\\\"gmail.com\\\"!==a&&\\\"googlemail.com\\\"!==a||(n=n.toLowerCase()),!d(n,{max:64})||!d(i,{max:254}))return!1;if(!p(i,{require_tld:t.require_tld}))return!1;if('\\\"'===n[0])return n=n.slice(1,n.length-1),t.allow_utf8_local_part?_.test(n):v.test(n);for(var l=t.allow_utf8_local_part?m:h,s=n.split(\\\".\\\"),u=0;u<s.length;u++)if(!l.test(s[u]))return!1;return!0},isURL:function(e,t){if(f(e),!e||2083<=e.length||/[\\\\s<>]/.test(e))return!1;if(0===e.indexOf(\\\"mailto:\\\"))return!1;t=c(t,$);var r=void 0,o=void 0,i=void 0,n=void 0,a=void 0,l=void 0,s=void 0,u=void 0;if(1<(s=(e=(s=(e=(s=e.split(\\\"#\\\")).shift()).split(\\\"?\\\")).shift()).split(\\\"://\\\")).length){if(r=s.shift(),t.require_valid_protocol&&-1===t.protocols.indexOf(r))return!1}else{if(t.require_protocol)return!1;t.allow_protocol_relative_urls&&\\\"//\\\"===e.substr(0,2)&&(s[0]=e.substr(2))}if(\\\"\\\"===(e=s.join(\\\"://\\\")))return!1;if(\\\"\\\"===(e=(s=e.split(\\\"/\\\")).shift())&&!t.require_host)return!0;if(1<(s=e.split(\\\"@\\\")).length&&0<=(o=s.shift()).indexOf(\\\":\\\")&&2<o.split(\\\":\\\").length)return!1;u=l=null;var d=(n=s.join(\\\"@\\\")).match(S);return d?(i=\\\"\\\",u=d[1],l=d[2]||null):(i=(s=n.split(\\\":\\\")).shift(),s.length&&(l=s.join(\\\":\\\"))),!(null!==l&&(a=parseInt(l,10),!/^[0-9]+$/.test(l)||a<=0||65535<a)||!(F(i)||p(i,t)||u&&F(u,6))||(i=i||u,t.host_whitelist&&!R(i,t.host_whitelist)||t.host_blacklist&&R(i,t.host_blacklist)))},isMACAddress:function(e){return f(e),t.test(e)},isIP:F,isFQDN:p,isBoolean:function(e){return f(e),0<=[\\\"true\\\",\\\"false\\\",\\\"1\\\",\\\"0\\\"].indexOf(e)},isAlpha:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\\\"en-US\\\";if(f(e),t in o)return o[t].test(e);throw new Error(\\\"Invalid locale '\\\"+t+\\\"'\\\")},isAlphanumeric:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\\\"en-US\\\";if(f(e),t in E)return E[t].test(e);throw new Error(\\\"Invalid locale '\\\"+t+\\\"'\\\")},isNumeric:function(e){return f(e),y.test(e)},isPort:function(e){return O(e,{min:0,max:65535})},isLowercase:function(e){return f(e),e===e.toLowerCase()},isUppercase:function(e){return f(e),e===e.toUpperCase()},isAscii:function(e){return f(e),U.test(e)},isFullWidth:function(e){return f(e),b.test(e)},isHalfWidth:function(e){return f(e),P.test(e)},isVariableWidth:function(e){return f(e),b.test(e)&&P.test(e)},isMultibyte:function(e){return f(e),K.test(e)},isSurrogatePair:function(e){return f(e),k.test(e)},isInt:O,isFloat:function(e,t){f(e),t=t||{};var r=new RegExp(\\\"^(?:[-+])?(?:[0-9]+)?(?:\\\\\\\\\\\"+(t.locale?x[t.locale]:\\\".\\\")+\\\"[0-9]*)?(?:[eE][\\\\\\\\+\\\\\\\\-]?(?:[0-9]+))?$\\\");if(\\\"\\\"===e||\\\".\\\"===e||\\\"-\\\"===e||\\\"+\\\"===e)return!1;var o=parseFloat(e.replace(\\\",\\\",\\\".\\\"));return r.test(e)&&(!t.hasOwnProperty(\\\"min\\\")||o>=t.min)&&(!t.hasOwnProperty(\\\"max\\\")||o<=t.max)&&(!t.hasOwnProperty(\\\"lt\\\")||o<t.lt)&&(!t.hasOwnProperty(\\\"gt\\\")||o>t.gt)},isDecimal:function(e,t){if(f(e),(t=c(t,H)).locale in x)return!z.includes(e.replace(/ /g,\\\"\\\"))&&(r=t,new RegExp(\\\"^[-+]?([0-9]+)?(\\\\\\\\\\\"+x[r.locale]+\\\"[0-9]{\\\"+r.decimal_digits+\\\"})\\\"+(r.force_decimal?\\\"\\\":\\\"?\\\")+\\\"$\\\")).test(e);var r;throw new Error(\\\"Invalid locale '\\\"+t.locale+\\\"'\\\")},isHexadecimal:W,isDivisibleBy:function(e,t){return f(e),r(e)%parseInt(t,10)==0},isHexColor:function(e){return f(e),Y.test(e)},isISRC:function(e){return f(e),j.test(e)},isMD5:function(e){return f(e),J.test(e)},isHash:function(e,t){return f(e),new RegExp(\\\"^[a-f0-9]{\\\"+q[t]+\\\"}$\\\").test(e)},isJSON:function(e){f(e);try{var t=JSON.parse(e);return!!t&&\\\"object\\\"===(void 0===t?\\\"undefined\\\":a(t))}catch(e){}return!1},isEmpty:function(e){return f(e),0===e.length},isLength:function(e,t){f(e);var r=void 0,o=void 0;\\\"object\\\"===(void 0===t?\\\"undefined\\\":a(t))?(r=t.min||0,o=t.max):(r=t,o=arguments[2]);var i=e.match(/[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]/g)||[],n=e.length-i.length;return r<=n&&(void 0===o||n<=o)},isByteLength:d,isUUID:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\\\"all\\\";f(e);var r=Q[t];return r&&r.test(e)},isMongoId:function(e){return f(e),W(e)&&24===e.length},isAfter:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:String(new Date);f(e);var r=i(t),o=i(e);return!!(o&&r&&r<o)},isBefore:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:String(new Date);f(e);var r=i(t),o=i(e);return!!(o&&r&&o<r)},isIn:function(e,t){f(e);var r=void 0;if(\\\"[object Array]\\\"===Object.prototype.toString.call(t)){var o=[];for(r in t)({}).hasOwnProperty.call(t,r)&&(o[r]=n(t[r]));return 0<=o.indexOf(e)}return\\\"object\\\"===(void 0===t?\\\"undefined\\\":a(t))?t.hasOwnProperty(e):!(!t||\\\"function\\\"!=typeof t.indexOf)&&0<=t.indexOf(e)},isCreditCard:function(e){f(e);var t=e.replace(/[- ]+/g,\\\"\\\");if(!X.test(t))return!1;for(var r=0,o=void 0,i=void 0,n=void 0,a=t.length-1;0<=a;a--)o=t.substring(a,a+1),i=parseInt(o,10),r+=n&&10<=(i*=2)?i%10+1:i,n=!n;return!(r%10!=0||!t)},isISIN:function(e){if(f(e),!ee.test(e))return!1;for(var t=e.replace(/[A-Z]/g,function(e){return parseInt(e,36)}),r=0,o=void 0,i=void 0,n=!0,a=t.length-2;0<=a;a--)o=t.substring(a,a+1),i=parseInt(o,10),r+=n&&10<=(i*=2)?i+1:i,n=!n;return parseInt(e.substr(e.length-1),10)===(1e4-r)%10},isISBN:function e(t){var r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\\\"\\\";if(f(t),!(r=String(r)))return e(t,10)||e(t,13);var o=t.replace(/[\\\\s-]+/g,\\\"\\\"),i=0,n=void 0;if(\\\"10\\\"===r){if(!te.test(o))return!1;for(n=0;n<9;n++)i+=(n+1)*o.charAt(n);if(\\\"X\\\"===o.charAt(9)?i+=100:i+=10*o.charAt(9),i%11==0)return!!o}else if(\\\"13\\\"===r){if(!re.test(o))return!1;for(n=0;n<12;n++)i+=oe[n%2]*o.charAt(n);if(o.charAt(12)-(10-i%10)%10==0)return!!o}return!1},isISSN:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};f(e);var r=ie;if(r=t.require_hyphen?r.replace(\\\"?\\\",\\\"\\\"):r,!(r=t.case_sensitive?new RegExp(r):new RegExp(r,\\\"i\\\")).test(e))return!1;var o=e.replace(\\\"-\\\",\\\"\\\"),i=8,n=0,a=!0,l=!1,s=void 0;try{for(var u,d=o[Symbol.iterator]();!(a=(u=d.next()).done);a=!0){var c=u.value;n+=(\\\"X\\\"===c.toUpperCase()?10:+c)*i,--i}}catch(e){l=!0,s=e}finally{try{!a&&d.return&&d.return()}finally{if(l)throw s}}return n%11==0},isMobilePhone:function(e,t,r){if(f(e),r&&r.strictMode&&!e.startsWith(\\\"+\\\"))return!1;if(t in ne)return ne[t].test(e);if(\\\"any\\\"===t){for(var o in ne)if(ne.hasOwnProperty(o)&&ne[o].test(e))return!0;return!1}throw new Error(\\\"Invalid locale '\\\"+t+\\\"'\\\")},isPostalCode:function(e,t){if(f(e),t in Te)return Te[t].test(e);if(\\\"any\\\"===t){for(var r in Te)if(Te.hasOwnProperty(r)&&Te[r].test(e))return!0;return!1}throw new Error(\\\"Invalid locale '\\\"+t+\\\"'\\\")},isCurrency:function(e,t){return f(e),function(e){var r=\\\"\\\\\\\\d{\\\"+e.digits_after_decimal[0]+\\\"}\\\";e.digits_after_decimal.forEach(function(e,t){0!==t&&(r=r+\\\"|\\\\\\\\d{\\\"+e+\\\"}\\\")});var t=\\\"(\\\\\\\\\\\"+e.symbol.replace(/\\\\./g,\\\"\\\\\\\\.\\\")+\\\")\\\"+(e.require_symbol?\\\"\\\":\\\"?\\\"),o=\\\"(\\\"+[\\\"0\\\",\\\"[1-9]\\\\\\\\d*\\\",\\\"[1-9]\\\\\\\\d{0,2}(\\\\\\\\\\\"+e.thousands_separator+\\\"\\\\\\\\d{3})*\\\"].join(\\\"|\\\")+\\\")?\\\",i=\\\"(\\\\\\\\\\\"+e.decimal_separator+\\\"(\\\"+r+\\\"))\\\"+(e.require_decimal?\\\"\\\":\\\"?\\\"),n=o+(e.allow_decimal||e.require_decimal?i:\\\"\\\");return e.allow_negatives&&!e.parens_for_negatives&&(e.negative_sign_after_digits?n+=\\\"-?\\\":e.negative_sign_before_digits&&(n=\\\"-?\\\"+n)),e.allow_negative_sign_placeholder?n=\\\"( (?!\\\\\\\\-))?\\\"+n:e.allow_space_after_symbol?n=\\\" ?\\\"+n:e.allow_space_after_digits&&(n+=\\\"( (?!$))?\\\"),e.symbol_after_digits?n+=t:n=t+n,e.allow_negatives&&(e.parens_for_negatives?n=\\\"(\\\\\\\\(\\\"+n+\\\"\\\\\\\\)|\\\"+n+\\\")\\\":e.negative_sign_before_digits||e.negative_sign_after_digits||(n=\\\"-?\\\"+n)),new RegExp(\\\"^(?!-? )(?=.*\\\\\\\\d)\\\"+n+\\\"$\\\")}(t=c(t,ae)).test(e)},isISO8601:function(e){return f(e),le.test(e)},isRFC3339:function(e){return f(e),Ae.test(e)},isISO31661Alpha2:function(e){return f(e),he.includes(e.toUpperCase())},isISO31661Alpha3:function(e){return f(e),ve.includes(e.toUpperCase())},isBase64:function(e){f(e);var t=e.length;if(!t||t%4!=0||me.test(e))return!1;var r=e.indexOf(\\\"=\\\");return-1===r||r===t-1||r===t-2&&\\\"=\\\"===e[t-1]},isDataURI:function(e){f(e);var t=e.split(\\\",\\\");if(t.length<2)return!1;var r=t.shift().trim().split(\\\";\\\"),o=r.shift();if(\\\"data:\\\"!==o.substr(0,5))return!1;var i=o.substr(5);if(\\\"\\\"!==i&&!_e.test(i))return!1;for(var n=0;n<r.length;n++)if(n===r.length-1&&\\\"base64\\\"===r[n].toLowerCase());else if(!Fe.test(r[n]))return!1;for(var a=0;a<t.length;a++)if(!$e.test(t[a]))return!1;return!0},isMimeType:function(e){return f(e),Se.test(e)||Re.test(e)||Ee.test(e)},isLatLong:function(e){if(f(e),!e.includes(\\\",\\\"))return!1;var t=e.split(\\\",\\\");return xe.test(t[0])&&Me.test(t[1])},ltrim:Ze,rtrim:Be,trim:function(e,t){return Be(Ze(e,t),t)},escape:function(e){return f(e),e.replace(/&/g,\\\"&amp;\\\").replace(/\\\"/g,\\\"&quot;\\\").replace(/'/g,\\\"&#x27;\\\").replace(/</g,\\\"&lt;\\\").replace(/>/g,\\\"&gt;\\\").replace(/\\\\//g,\\\"&#x2F;\\\").replace(/\\\\\\\\/g,\\\"&#x5C;\\\").replace(/`/g,\\\"&#96;\\\")},unescape:function(e){return f(e),e.replace(/&amp;/g,\\\"&\\\").replace(/&quot;/g,'\\\"').replace(/&#x27;/g,\\\"'\\\").replace(/&lt;/g,\\\"<\\\").replace(/&gt;/g,\\\">\\\").replace(/&#x2F;/g,\\\"/\\\").replace(/&#x5C;/g,\\\"\\\\\\\\\\\").replace(/&#96;/g,\\\"`\\\")},stripLow:function(e,t){return f(e),Ie(e,t?\\\"\\\\\\\\x00-\\\\\\\\x09\\\\\\\\x0B\\\\\\\\x0C\\\\\\\\x0E-\\\\\\\\x1F\\\\\\\\x7F\\\":\\\"\\\\\\\\x00-\\\\\\\\x1F\\\\\\\\x7F\\\")},whitelist:function(e,t){return f(e),e.replace(new RegExp(\\\"[^\\\"+t+\\\"]+\\\",\\\"g\\\"),\\\"\\\")},blacklist:Ie,isWhitelisted:function(e,t){f(e);for(var r=e.length-1;0<=r;r--)if(-1===t.indexOf(e[r]))return!1;return!0},normalizeEmail:function(e,t){t=c(t,Le);var r=e.split(\\\"@\\\"),o=r.pop(),i=[r.join(\\\"@\\\"),o];if(i[1]=i[1].toLowerCase(),\\\"gmail.com\\\"===i[1]||\\\"googlemail.com\\\"===i[1]){if(t.gmail_remove_subaddress&&(i[0]=i[0].split(\\\"+\\\")[0]),t.gmail_remove_dots&&(i[0]=i[0].replace(/\\\\.+/g,Ue)),!i[0].length)return!1;(t.all_lowercase||t.gmail_lowercase)&&(i[0]=i[0].toLowerCase()),i[1]=t.gmail_convert_googlemaildotcom?\\\"gmail.com\\\":i[1]}else if(~ye.indexOf(i[1])){if(t.icloud_remove_subaddress&&(i[0]=i[0].split(\\\"+\\\")[0]),!i[0].length)return!1;(t.all_lowercase||t.icloud_lowercase)&&(i[0]=i[0].toLowerCase())}else if(~Ge.indexOf(i[1])){if(t.outlookdotcom_remove_subaddress&&(i[0]=i[0].split(\\\"+\\\")[0]),!i[0].length)return!1;(t.all_lowercase||t.outlookdotcom_lowercase)&&(i[0]=i[0].toLowerCase())}else if(~De.indexOf(i[1])){if(t.yahoo_remove_subaddress){var n=i[0].split(\\\"-\\\");i[0]=1<n.length?n.slice(0,-1).join(\\\"-\\\"):n[0]}if(!i[0].length)return!1;(t.all_lowercase||t.yahoo_lowercase)&&(i[0]=i[0].toLowerCase())}else~Oe.indexOf(i[1])?((t.all_lowercase||t.yandex_lowercase)&&(i[0]=i[0].toLowerCase()),i[1]=\\\"yandex.ru\\\"):t.all_lowercase&&(i[0]=i[0].toLowerCase());return i.join(\\\"@\\\")},toString:n}});\""
		},
		{
			"_id": "jquery",
			"name": "jquery.min.js",
			"source": "\"/*! jQuery v2.1.3 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */\\r\\n!function(a,b){\\\"object\\\"==typeof module&&\\\"object\\\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\\\"jQuery requires a window with a document\\\");return b(a)}:b(a)}(\\\"undefined\\\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\\\"2.1.3\\\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g,p=/^-ms-/,q=/-([\\\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\\\"\\\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\\\"boolean\\\"==typeof g&&(j=g,g=arguments[h]||{},h++),\\\"object\\\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\\\"jQuery\\\"+(m+Math.random()).replace(/\\\\D/g,\\\"\\\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\\\"function\\\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return\\\"object\\\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\\\"isPrototypeOf\\\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\\\"\\\":\\\"object\\\"==typeof a||\\\"function\\\"==typeof a?h[i.call(a)]||\\\"object\\\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\\\"use strict\\\")?(b=l.createElement(\\\"script\\\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\\\"ms-\\\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\\\"\\\":(a+\\\"\\\").replace(o,\\\"\\\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\\\"string\\\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\\\"string\\\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\\\"Boolean Number String Function Array Date RegExp Object Error\\\".split(\\\" \\\"),function(a,b){h[\\\"[object \\\"+b+\\\"]\\\"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return\\\"function\\\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\\\"array\\\"===c||0===b||\\\"number\\\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\\\"sizzle\\\"+1*new Date,v=a.document,w=0,x=0,y=hb(),z=hb(),A=hb(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K=\\\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\\\",L=\\\"[\\\\\\\\x20\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\f]\\\",M=\\\"(?:\\\\\\\\\\\\\\\\.|[\\\\\\\\w-]|[^\\\\\\\\x00-\\\\\\\\xa0])+\\\",N=M.replace(\\\"w\\\",\\\"w#\\\"),O=\\\"\\\\\\\\[\\\"+L+\\\"*(\\\"+M+\\\")(?:\\\"+L+\\\"*([*^$|!~]?=)\\\"+L+\\\"*(?:'((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\"|(\\\"+N+\\\"))|)\\\"+L+\\\"*\\\\\\\\]\\\",P=\\\":(\\\"+M+\\\")(?:\\\\\\\\((('((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\")|((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\()[\\\\\\\\]]|\\\"+O+\\\")*)|.*)\\\\\\\\)|)\\\",Q=new RegExp(L+\\\"+\\\",\\\"g\\\"),R=new RegExp(\\\"^\\\"+L+\\\"+|((?:^|[^\\\\\\\\\\\\\\\\])(?:\\\\\\\\\\\\\\\\.)*)\\\"+L+\\\"+$\\\",\\\"g\\\"),S=new RegExp(\\\"^\\\"+L+\\\"*,\\\"+L+\\\"*\\\"),T=new RegExp(\\\"^\\\"+L+\\\"*([>+~]|\\\"+L+\\\")\\\"+L+\\\"*\\\"),U=new RegExp(\\\"=\\\"+L+\\\"*([^\\\\\\\\]'\\\\\\\"]*?)\\\"+L+\\\"*\\\\\\\\]\\\",\\\"g\\\"),V=new RegExp(P),W=new RegExp(\\\"^\\\"+N+\\\"$\\\"),X={ID:new RegExp(\\\"^#(\\\"+M+\\\")\\\"),CLASS:new RegExp(\\\"^\\\\\\\\.(\\\"+M+\\\")\\\"),TAG:new RegExp(\\\"^(\\\"+M.replace(\\\"w\\\",\\\"w*\\\")+\\\")\\\"),ATTR:new RegExp(\\\"^\\\"+O),PSEUDO:new RegExp(\\\"^\\\"+P),CHILD:new RegExp(\\\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\\\\\(\\\"+L+\\\"*(even|odd|(([+-]|)(\\\\\\\\d*)n|)\\\"+L+\\\"*(?:([+-]|)\\\"+L+\\\"*(\\\\\\\\d+)|))\\\"+L+\\\"*\\\\\\\\)|)\\\",\\\"i\\\"),bool:new RegExp(\\\"^(?:\\\"+K+\\\")$\\\",\\\"i\\\"),needsContext:new RegExp(\\\"^\\\"+L+\\\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\\\\\(\\\"+L+\\\"*((?:-\\\\\\\\d)?\\\\\\\\d*)\\\"+L+\\\"*\\\\\\\\)|)(?=[^-]|$)\\\",\\\"i\\\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\\\d$/i,$=/^[^{]+\\\\{\\\\s*\\\\[native \\\\w/,_=/^(?:#([\\\\w-]+)|(\\\\w+)|\\\\.([\\\\w-]+))$/,ab=/[+~]/,bb=/'|\\\\\\\\/g,cb=new RegExp(\\\"\\\\\\\\\\\\\\\\([\\\\\\\\da-f]{1,6}\\\"+L+\\\"?|(\\\"+L+\\\")|.)\\\",\\\"ig\\\"),db=function(a,b,c){var d=\\\"0x\\\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},eb=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fb){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function gb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,\\\"string\\\"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&\\\"object\\\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\\\"id\\\"))?s=r.replace(bb,\\\"\\\\\\\\$&\\\"):b.setAttribute(\\\"id\\\",s),s=\\\"[id='\\\"+s+\\\"'] \\\",l=o.length;while(l--)o[l]=s+rb(o[l]);w=ab.test(a)&&pb(b.parentNode)||b,x=o.join(\\\",\\\")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\\\"id\\\")}}}return i(a.replace(R,\\\"$1\\\"),b,d,e)}function hb(){var a=[];function b(c,e){return a.push(c+\\\" \\\")>d.cacheLength&&delete b[a.shift()],b[c+\\\" \\\"]=e}return b}function ib(a){return a[u]=!0,a}function jb(a){var b=n.createElement(\\\"div\\\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function kb(a,b){var c=a.split(\\\"|\\\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function lb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return\\\"input\\\"===c&&b.type===a}}function nb(a){return function(b){var c=b.nodeName.toLowerCase();return(\\\"input\\\"===c||\\\"button\\\"===c)&&b.type===a}}function ob(a){return ib(function(b){return b=+b,ib(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pb(a){return a&&\\\"undefined\\\"!=typeof a.getElementsByTagName&&a}c=gb.support={},f=gb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\\\"HTML\\\"!==b.nodeName:!1},m=gb.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener(\\\"unload\\\",eb,!1):e.attachEvent&&e.attachEvent(\\\"onunload\\\",eb)),p=!f(g),c.attributes=jb(function(a){return a.className=\\\"i\\\",!a.getAttribute(\\\"className\\\")}),c.getElementsByTagName=jb(function(a){return a.appendChild(g.createComment(\\\"\\\")),!a.getElementsByTagName(\\\"*\\\").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=jb(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\\\"undefined\\\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute(\\\"id\\\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=\\\"undefined\\\"!=typeof a.getAttributeNode&&a.getAttributeNode(\\\"id\\\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\\\"undefined\\\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\\\"*\\\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(jb(function(a){o.appendChild(a).innerHTML=\\\"<a id='\\\"+u+\\\"'></a><select id='\\\"+u+\\\"-\\\\f]' msallowcapture=''><option selected=''></option></select>\\\",a.querySelectorAll(\\\"[msallowcapture^='']\\\").length&&q.push(\\\"[*^$]=\\\"+L+\\\"*(?:''|\\\\\\\"\\\\\\\")\\\"),a.querySelectorAll(\\\"[selected]\\\").length||q.push(\\\"\\\\\\\\[\\\"+L+\\\"*(?:value|\\\"+K+\\\")\\\"),a.querySelectorAll(\\\"[id~=\\\"+u+\\\"-]\\\").length||q.push(\\\"~=\\\"),a.querySelectorAll(\\\":checked\\\").length||q.push(\\\":checked\\\"),a.querySelectorAll(\\\"a#\\\"+u+\\\"+*\\\").length||q.push(\\\".#.+[+~]\\\")}),jb(function(a){var b=g.createElement(\\\"input\\\");b.setAttribute(\\\"type\\\",\\\"hidden\\\"),a.appendChild(b).setAttribute(\\\"name\\\",\\\"D\\\"),a.querySelectorAll(\\\"[name=d]\\\").length&&q.push(\\\"name\\\"+L+\\\"*[*^$|!~]?=\\\"),a.querySelectorAll(\\\":enabled\\\").length||q.push(\\\":enabled\\\",\\\":disabled\\\"),a.querySelectorAll(\\\"*,:x\\\"),q.push(\\\",.*:\\\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&jb(function(a){c.disconnectedMatch=s.call(a,\\\"div\\\"),s.call(a,\\\"[s!='']:x\\\"),r.push(\\\"!=\\\",P)}),q=q.length&&new RegExp(q.join(\\\"|\\\")),r=r.length&&new RegExp(r.join(\\\"|\\\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return lb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?lb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},gb.matches=function(a,b){return gb(a,null,null,b)},gb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\\\"='$1']\\\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return gb(b,n,null,[a]).length>0},gb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},gb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},gb.error=function(a){throw new Error(\\\"Syntax error, unrecognized expression: \\\"+a)},gb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=gb.getText=function(a){var b,c=\\\"\\\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\\\"string\\\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=gb.selectors={cacheLength:50,createPseudo:ib,match:X,attrHandle:{},find:{},relative:{\\\">\\\":{dir:\\\"parentNode\\\",first:!0},\\\" \\\":{dir:\\\"parentNode\\\"},\\\"+\\\":{dir:\\\"previousSibling\\\",first:!0},\\\"~\\\":{dir:\\\"previousSibling\\\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||\\\"\\\").replace(cb,db),\\\"~=\\\"===a[2]&&(a[3]=\\\" \\\"+a[3]+\\\" \\\"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\\\"nth\\\"===a[1].slice(0,3)?(a[3]||gb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\\\"even\\\"===a[3]||\\\"odd\\\"===a[3])),a[5]=+(a[7]+a[8]||\\\"odd\\\"===a[3])):a[3]&&gb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\\\"\\\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\\\")\\\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return\\\"*\\\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\\\" \\\"];return b||(b=new RegExp(\\\"(^|\\\"+L+\\\")\\\"+a+\\\"(\\\"+L+\\\"|$)\\\"))&&y(a,function(a){return b.test(\\\"string\\\"==typeof a.className&&a.className||\\\"undefined\\\"!=typeof a.getAttribute&&a.getAttribute(\\\"class\\\")||\\\"\\\")})},ATTR:function(a,b,c){return function(d){var e=gb.attr(d,a);return null==e?\\\"!=\\\"===b:b?(e+=\\\"\\\",\\\"=\\\"===b?e===c:\\\"!=\\\"===b?e!==c:\\\"^=\\\"===b?c&&0===e.indexOf(c):\\\"*=\\\"===b?c&&e.indexOf(c)>-1:\\\"$=\\\"===b?c&&e.slice(-c.length)===c:\\\"~=\\\"===b?(\\\" \\\"+e.replace(Q,\\\" \\\")+\\\" \\\").indexOf(c)>-1:\\\"|=\\\"===b?e===c||e.slice(0,c.length+1)===c+\\\"-\\\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\\\"nth\\\"!==a.slice(0,3),g=\\\"last\\\"!==a.slice(-4),h=\\\"of-type\\\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\\\"nextSibling\\\":\\\"previousSibling\\\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\\\"only\\\"===a&&!o&&\\\"nextSibling\\\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||gb.error(\\\"unsupported pseudo: \\\"+a);return e[u]?e(b):e.length>1?(c=[a,a,\\\"\\\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ib(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ib(function(a){var b=[],c=[],d=h(a.replace(R,\\\"$1\\\"));return d[u]?ib(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ib(function(a){return function(b){return gb(a,b).length>0}}),contains:ib(function(a){return a=a.replace(cb,db),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ib(function(a){return W.test(a||\\\"\\\")||gb.error(\\\"unsupported lang: \\\"+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\\\"xml:lang\\\")||b.getAttribute(\\\"lang\\\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\\\"-\\\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\\\"input\\\"===b&&!!a.checked||\\\"option\\\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\\\"input\\\"===b&&\\\"button\\\"===a.type||\\\"button\\\"===b},text:function(a){var b;return\\\"input\\\"===a.nodeName.toLowerCase()&&\\\"text\\\"===a.type&&(null==(b=a.getAttribute(\\\"type\\\"))||\\\"text\\\"===b.toLowerCase())},first:ob(function(){return[0]}),last:ob(function(a,b){return[b-1]}),eq:ob(function(a,b,c){return[0>c?c+b:c]}),even:ob(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:ob(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:ob(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:ob(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=mb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=nb(b);function qb(){}qb.prototype=d.filters=d.pseudos,d.setFilters=new qb,g=gb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\\\" \\\"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\\\" \\\")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?gb.error(a):z(a,i).slice(0)};function rb(a){for(var b=0,c=a.length,d=\\\"\\\";c>b;b++)d+=a[b].value;return d}function sb(a,b,c){var d=b.dir,e=c&&\\\"parentNode\\\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function tb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ub(a,b,c){for(var d=0,e=b.length;e>d;d++)gb(a,b[d],c);return c}function vb(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wb(a,b,c,d,e,f){return d&&!d[u]&&(d=wb(d)),e&&!e[u]&&(e=wb(e,f)),ib(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ub(b||\\\"*\\\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:vb(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=vb(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=vb(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\\\" \\\"],i=g?1:0,k=sb(function(a){return a===b},h,!0),l=sb(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sb(tb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wb(i>1&&tb(m),i>1&&rb(a.slice(0,i-1).concat({value:\\\" \\\"===a[i-2].type?\\\"*\\\":\\\"\\\"})).replace(R,\\\"$1\\\"),c,e>i&&xb(a.slice(i,e)),f>e&&xb(a=a.slice(e)),f>e&&rb(a))}m.push(c)}return tb(m)}function yb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\\\"0\\\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\\\"*\\\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=vb(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&gb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ib(f):f}return h=gb.compile=function(a,b){var c,d=[],e=[],f=A[a+\\\" \\\"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,yb(e,d)),f.selector=a}return f},i=gb.select=function(a,b,e,f){var i,j,k,l,m,n=\\\"function\\\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\\\"ID\\\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&pb(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&rb(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&pb(b.parentNode)||b),e},c.sortStable=u.split(\\\"\\\").sort(B).join(\\\"\\\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=jb(function(a){return 1&a.compareDocumentPosition(n.createElement(\\\"div\\\"))}),jb(function(a){return a.innerHTML=\\\"<a href='#'></a>\\\",\\\"#\\\"===a.firstChild.getAttribute(\\\"href\\\")})||kb(\\\"type|href|height|width\\\",function(a,b,c){return c?void 0:a.getAttribute(b,\\\"type\\\"===b.toLowerCase()?1:2)}),c.attributes&&jb(function(a){return a.innerHTML=\\\"<input/>\\\",a.firstChild.setAttribute(\\\"value\\\",\\\"\\\"),\\\"\\\"===a.firstChild.getAttribute(\\\"value\\\")})||kb(\\\"value\\\",function(a,b,c){return c||\\\"input\\\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),jb(function(a){return null==a.getAttribute(\\\"disabled\\\")})||kb(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),gb}(a);n.find=t,n.expr=t.selectors,n.expr[\\\":\\\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\\\w+)\\\\s*\\\\/?>(?:<\\\\/\\\\1>|)$/,w=/^.[^:#\\\\[\\\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\\\"string\\\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\\\":not(\\\"+a+\\\")\\\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\\\"string\\\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\\\" \\\"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\\\"string\\\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\\\s*(<[\\\\w\\\\W]+>)[^>]*|#([\\\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\\\"string\\\"==typeof a){if(c=\\\"<\\\"===a[0]&&\\\">\\\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\\\"undefined\\\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\\\"string\\\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\\\"string\\\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\\\"parentNode\\\")},parentsUntil:function(a,b,c){return n.dir(a,\\\"parentNode\\\",c)},next:function(a){return D(a,\\\"nextSibling\\\")},prev:function(a){return D(a,\\\"previousSibling\\\")},nextAll:function(a){return n.dir(a,\\\"nextSibling\\\")},prevAll:function(a){return n.dir(a,\\\"previousSibling\\\")},nextUntil:function(a,b,c){return n.dir(a,\\\"nextSibling\\\",c)},prevUntil:function(a,b,c){return n.dir(a,\\\"previousSibling\\\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\\\"Until\\\"!==a.slice(-5)&&(d=c),d&&\\\"string\\\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\\\"string\\\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\\\"function\\\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\\\"string\\\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\\\"resolve\\\",\\\"done\\\",n.Callbacks(\\\"once memory\\\"),\\\"resolved\\\"],[\\\"reject\\\",\\\"fail\\\",n.Callbacks(\\\"once memory\\\"),\\\"rejected\\\"],[\\\"notify\\\",\\\"progress\\\",n.Callbacks(\\\"memory\\\")]],c=\\\"pending\\\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\\\"With\\\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\\\"With\\\"](this===e?d:this,arguments),this},e[f[0]+\\\"With\\\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\\\"ready\\\"),n(l).off(\\\"ready\\\"))))}});function I(){l.removeEventListener(\\\"DOMContentLoaded\\\",I,!1),a.removeEventListener(\\\"load\\\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\\\"complete\\\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\\\"DOMContentLoaded\\\",I,!1),a.addEventListener(\\\"load\\\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\\\"object\\\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\\\"string\\\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\\\"string\\\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\\\{[\\\\w\\\\W]*\\\\}|\\\\[[\\\\w\\\\W]*\\\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\\\"data-\\\"+b.replace(O,\\\"-$1\\\").toLowerCase(),c=a.getAttribute(d),\\\"string\\\"==typeof c){try{c=\\\"true\\\"===c?!0:\\\"false\\\"===c?!1:\\\"null\\\"===c?null:+c+\\\"\\\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)\\r\\n},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\\\"hasDataAttrs\\\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\\\"data-\\\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\\\"hasDataAttrs\\\",!0)}return e}return\\\"object\\\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\\\"-\\\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\\\"fx\\\")+\\\"queue\\\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\\\"fx\\\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\\\"inprogress\\\"===e&&(e=c.shift(),d--),e&&(\\\"fx\\\"===b&&c.unshift(\\\"inprogress\\\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\\\"queueHooks\\\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\\\"once memory\\\").add(function(){L.remove(a,[b+\\\"queue\\\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\\\"string\\\"!=typeof a&&(b=a,a=\\\"fx\\\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\\\"fx\\\"===a&&\\\"inprogress\\\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\\\"fx\\\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\\\"string\\\"!=typeof a&&(b=a,a=void 0),a=a||\\\"fx\\\";while(g--)c=L.get(f[g],a+\\\"queueHooks\\\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\\\d*\\\\.|)\\\\d+(?:[eE][+-]?\\\\d+|)/.source,R=[\\\"Top\\\",\\\"Right\\\",\\\"Bottom\\\",\\\"Left\\\"],S=function(a,b){return a=b||a,\\\"none\\\"===n.css(a,\\\"display\\\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\\\"div\\\")),c=l.createElement(\\\"input\\\");c.setAttribute(\\\"type\\\",\\\"radio\\\"),c.setAttribute(\\\"checked\\\",\\\"checked\\\"),c.setAttribute(\\\"name\\\",\\\"t\\\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\\\"<textarea>x</textarea>\\\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\\\"undefined\\\";k.focusinBubbles=\\\"onfocusin\\\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\\\"\\\").match(E)||[\\\"\\\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\\\"\\\").split(\\\".\\\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\\\".\\\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\\\"\\\").match(E)||[\\\"\\\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\\\"\\\").split(\\\".\\\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\\\"(^|\\\\\\\\.)\\\"+p.join(\\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\")+\\\"(\\\\\\\\.|$)\\\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\\\"**\\\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\\\"events\\\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\\\"type\\\")?b.type:b,r=j.call(b,\\\"namespace\\\")?b.namespace.split(\\\".\\\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\\\".\\\")>=0&&(r=q.split(\\\".\\\"),q=r.shift(),r.sort()),k=q.indexOf(\\\":\\\")<0&&\\\"on\\\"+q,b=b[n.expando]?b:new n.Event(q,\\\"object\\\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\\\".\\\"),b.namespace_re=b.namespace?new RegExp(\\\"(^|\\\\\\\\.)\\\"+r.join(\\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\")+\\\"(\\\\\\\\.|$)\\\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\\\"events\\\")||{})[b.type]&&L.get(g,\\\"handle\\\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\\\"events\\\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\\\"click\\\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\\\"click\\\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\\\" \\\",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\\\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\\\".split(\\\" \\\"),fixHooks:{},keyHooks:{props:\\\"char charCode key keyCode\\\".split(\\\" \\\"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\\\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\\\".split(\\\" \\\"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\\\"focusin\\\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\\\"focusout\\\"},click:{trigger:function(){return\\\"checkbox\\\"===this.type&&this.click&&n.nodeName(this,\\\"input\\\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\\\"a\\\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\\\"mouseover\\\",mouseleave:\\\"mouseout\\\",pointerenter:\\\"pointerover\\\",pointerleave:\\\"pointerout\\\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\\\"focusin\\\",blur:\\\"focusout\\\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\\\"object\\\"==typeof a){\\\"string\\\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\\\"string\\\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\\\".\\\"+d.namespace:d.origType,d.selector,d.handler),this;if(\\\"object\\\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\\\"function\\\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\\\w:]+)[^>]*)\\\\/>/gi,bb=/<([\\\\w:]+)/,cb=/<|&#?\\\\w+;/,db=/<(?:script|style|link)/i,eb=/checked\\\\s*(?:[^=]|=\\\\s*.checked.)/i,fb=/^$|\\\\/(?:java|ecma)script/i,gb=/^true\\\\/(.*)/,hb=/^\\\\s*<!(?:\\\\[CDATA\\\\[|--)|(?:\\\\]\\\\]|--)>\\\\s*$/g,ib={option:[1,\\\"<select multiple='multiple'>\\\",\\\"</select>\\\"],thead:[1,\\\"<table>\\\",\\\"</table>\\\"],col:[2,\\\"<table><colgroup>\\\",\\\"</colgroup></table>\\\"],tr:[2,\\\"<table><tbody>\\\",\\\"</tbody></table>\\\"],td:[3,\\\"<table><tbody><tr>\\\",\\\"</tr></tbody></table>\\\"],_default:[0,\\\"\\\",\\\"\\\"]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,\\\"table\\\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\\\"tr\\\")?a.getElementsByTagName(\\\"tbody\\\")[0]||a.appendChild(a.ownerDocument.createElement(\\\"tbody\\\")):a}function kb(a){return a.type=(null!==a.getAttribute(\\\"type\\\"))+\\\"/\\\"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\\\"type\\\"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\\\"globalEval\\\",!b||L.get(b[c],\\\"globalEval\\\"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\\\"*\\\"):a.querySelectorAll?a.querySelectorAll(b||\\\"*\\\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();\\\"input\\\"===c&&T.test(a.type)?b.checked=a.checked:(\\\"input\\\"===c||\\\"textarea\\\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,\\\"script\\\"),g.length>0&&mb(g,!i&&ob(a,\\\"script\\\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\\\"object\\\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement(\\\"div\\\")),g=(bb.exec(e)||[\\\"\\\",\\\"\\\"])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,\\\"<$1></$2>\\\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\\\"\\\"}else l.push(b.createTextNode(e));k.textContent=\\\"\\\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),\\\"script\\\"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||\\\"\\\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,\\\"script\\\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent=\\\"\\\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\\\"string\\\"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||[\\\"\\\",\\\"\\\"])[1].toLowerCase()]){a=a.replace(ab,\\\"<$1></$2>\\\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\\\"string\\\"==typeof p&&!k.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,\\\"script\\\"),kb),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,\\\"script\\\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||\\\"\\\")&&!L.access(h,\\\"globalEval\\\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,\\\"\\\")))}return this}}),n.each({appendTo:\\\"append\\\",prependTo:\\\"prepend\\\",insertBefore:\\\"before\\\",insertAfter:\\\"after\\\",replaceAll:\\\"replaceWith\\\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\\\"display\\\");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),\\\"none\\\"!==c&&c||(qb=(qb||n(\\\"<iframe frameborder='0' width='0' height='0'/>\\\")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp(\\\"^(\\\"+Q+\\\")(?!px)[a-z%]+$\\\",\\\"i\\\"),wb=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\\\"\\\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\\\"\\\":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\\\"div\\\"),f=l.createElement(\\\"div\\\");if(f.style){f.style.backgroundClip=\\\"content-box\\\",f.cloneNode(!0).style.backgroundClip=\\\"\\\",k.clearCloneStyle=\\\"content-box\\\"===f.style.backgroundClip,e.style.cssText=\\\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\\\",e.appendChild(f);function g(){f.style.cssText=\\\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\\\",f.innerHTML=\\\"\\\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\\\"1%\\\"!==g.top,c=\\\"4px\\\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\\\"div\\\"));return c.style.cssText=f.style.cssText=\\\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\\\",c.style.marginRight=c.style.width=\\\"0\\\",f.style.width=\\\"1px\\\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp(\\\"^(\\\"+Q+\\\")(.*)$\\\",\\\"i\\\"),Bb=new RegExp(\\\"^([+-])=(\\\"+Q+\\\")\\\",\\\"i\\\"),Cb={position:\\\"absolute\\\",visibility:\\\"hidden\\\",display:\\\"block\\\"},Db={letterSpacing:\\\"0\\\",fontWeight:\\\"400\\\"},Eb=[\\\"Webkit\\\",\\\"O\\\",\\\"Moz\\\",\\\"ms\\\"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\\\"px\\\"):b}function Hb(a,b,c,d,e){for(var f=c===(d?\\\"border\\\":\\\"content\\\")?4:\\\"width\\\"===b?1:0,g=0;4>f;f+=2)\\\"margin\\\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\\\"content\\\"===c&&(g-=n.css(a,\\\"padding\\\"+R[f],!0,e)),\\\"margin\\\"!==c&&(g-=n.css(a,\\\"border\\\"+R[f]+\\\"Width\\\",!0,e))):(g+=n.css(a,\\\"padding\\\"+R[f],!0,e),\\\"padding\\\"!==c&&(g+=n.css(a,\\\"border\\\"+R[f]+\\\"Width\\\",!0,e)));return g}function Ib(a,b,c){var d=!0,e=\\\"width\\\"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g=\\\"border-box\\\"===n.css(a,\\\"boxSizing\\\",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?\\\"border\\\":\\\"content\\\"),d,f)+\\\"px\\\"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\\\"olddisplay\\\"),c=d.style.display,b?(f[g]||\\\"none\\\"!==c||(d.style.display=\\\"\\\"),\\\"\\\"===d.style.display&&S(d)&&(f[g]=L.access(d,\\\"olddisplay\\\",tb(d.nodeName)))):(e=S(d),\\\"none\\\"===c&&e||L.set(d,\\\"olddisplay\\\",e?c:n.css(d,\\\"display\\\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\\\"none\\\"!==d.style.display&&\\\"\\\"!==d.style.display||(d.style.display=b?f[g]||\\\"\\\":\\\"none\\\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,\\\"opacity\\\");return\\\"\\\"===c?\\\"1\\\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\\\"float\\\":\\\"cssFloat\\\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\\\"get\\\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\\\"string\\\"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\\\"number\\\"),null!=c&&c===c&&(\\\"number\\\"!==f||n.cssNumber[h]||(c+=\\\"px\\\"),k.clearCloneStyle||\\\"\\\"!==c||0!==b.indexOf(\\\"background\\\")||(i[b]=\\\"inherit\\\"),g&&\\\"set\\\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\\\"get\\\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),\\\"normal\\\"===e&&b in Db&&(e=Db[b]),\\\"\\\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\\\"height\\\",\\\"width\\\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,\\\"display\\\"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,\\\"border-box\\\"===n.css(a,\\\"boxSizing\\\",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\\\"inline-block\\\"},xb,[a,\\\"marginRight\\\"]):void 0}),n.each({margin:\\\"\\\",padding:\\\"\\\",border:\\\"Width\\\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\\\"string\\\"==typeof c?c.split(\\\" \\\"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return\\\"boolean\\\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\\\"swing\\\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\\\"\\\":\\\"px\\\")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\\\"\\\"),b&&\\\"auto\\\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp(\\\"^(?:([+-])=|)(\\\"+Q+\\\")([a-z%]*)$\\\",\\\"i\\\"),Pb=/queueHooks$/,Qb=[Vb],Rb={\\\"*\\\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?\\\"\\\":\\\"px\\\"),g=(n.cssNumber[a]||\\\"px\\\"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\\\".5\\\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\\\"margin\\\"+c]=e[\\\"padding\\\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb[\\\"*\\\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\\\"fxshow\\\");c.queue||(h=n._queueHooks(a,\\\"fx\\\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\\\"fx\\\").length||h.empty.fire()})})),1===a.nodeType&&(\\\"height\\\"in b||\\\"width\\\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\\\"display\\\"),k=\\\"none\\\"===j?L.get(a,\\\"olddisplay\\\")||tb(a.nodeName):j,\\\"inline\\\"===k&&\\\"none\\\"===n.css(a,\\\"float\\\")&&(o.display=\\\"inline-block\\\")),c.overflow&&(o.overflow=\\\"hidden\\\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||\\\"toggle\\\"===e,e===(p?\\\"hide\\\":\\\"show\\\")){if(\\\"show\\\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\\\"inline\\\"===(\\\"none\\\"===j?tb(a.nodeName):j)&&(o.display=j);else{q?\\\"hidden\\\"in q&&(p=q.hidden):q=L.access(a,\\\"fxshow\\\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\\\"fxshow\\\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\\\"width\\\"===d||\\\"height\\\"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\\\"expand\\\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\\\"*\\\"]):a=a.split(\\\" \\\");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&\\\"object\\\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\\\"number\\\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\\\"fx\\\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\\\"opacity\\\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,\\\"finish\\\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\\\"string\\\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\\\"fx\\\",[]),this.each(function(){var b=!0,e=null!=a&&a+\\\"queueHooks\\\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\\\"fx\\\"),this.each(function(){var b,c=L.get(this),d=c[a+\\\"queue\\\"],e=c[a+\\\"queueHooks\\\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\\\"toggle\\\",\\\"show\\\",\\\"hide\\\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\\\"boolean\\\"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb(\\\"show\\\"),slideUp:Tb(\\\"hide\\\"),slideToggle:Tb(\\\"toggle\\\"),fadeIn:{opacity:\\\"show\\\"},fadeOut:{opacity:\\\"hide\\\"},fadeToggle:{opacity:\\\"toggle\\\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\\\"fx\\\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\\\"input\\\"),b=l.createElement(\\\"select\\\"),c=b.appendChild(l.createElement(\\\"option\\\"));a.type=\\\"checkbox\\\",k.checkOn=\\\"\\\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\\\"input\\\"),a.value=\\\"t\\\",a.type=\\\"radio\\\",k.radioValue=\\\"t\\\"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&\\\"get\\\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\\\"set\\\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\\\"\\\"),c):void n.removeAttr(a,b))\\r\\n},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\\\"radio\\\"===b&&n.nodeName(a,\\\"input\\\")){var c=a.value;return a.setAttribute(\\\"type\\\",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\\\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\\\"for\\\":\\\"htmlFor\\\",\\\"class\\\":\\\"className\\\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\\\"set\\\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\\\"get\\\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\\\"tabindex\\\")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\\\"tabIndex\\\",\\\"readOnly\\\",\\\"maxLength\\\",\\\"cellSpacing\\\",\\\"cellPadding\\\",\\\"rowSpan\\\",\\\"colSpan\\\",\\\"useMap\\\",\\\"frameBorder\\\",\\\"contentEditable\\\"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\\\\t\\\\r\\\\n\\\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\\\"string\\\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\\\"\\\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\\\" \\\"+c.className+\\\" \\\").replace(ac,\\\" \\\"):\\\" \\\")){f=0;while(e=b[f++])d.indexOf(\\\" \\\"+e+\\\" \\\")<0&&(d+=e+\\\" \\\");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\\\"string\\\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\\\"\\\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\\\" \\\"+c.className+\\\" \\\").replace(ac,\\\" \\\"):\\\"\\\")){f=0;while(e=b[f++])while(d.indexOf(\\\" \\\"+e+\\\" \\\")>=0)d=d.replace(\\\" \\\"+e+\\\" \\\",\\\" \\\");g=a?n.trim(d):\\\"\\\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\\\"boolean\\\"==typeof b&&\\\"string\\\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\\\"string\\\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\\\"boolean\\\"===c)&&(this.className&&L.set(this,\\\"__className__\\\",this.className),this.className=this.className||a===!1?\\\"\\\":L.get(this,\\\"__className__\\\")||\\\"\\\")})},hasClass:function(a){for(var b=\\\" \\\"+a+\\\" \\\",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\\\" \\\"+this[c].className+\\\" \\\").replace(ac,\\\" \\\").indexOf(b)>=0)return!0;return!1}});var bc=/\\\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\\\"\\\":\\\"number\\\"==typeof e?e+=\\\"\\\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\\\"\\\":a+\\\"\\\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\\\"set\\\"in b&&void 0!==b.set(this,e,\\\"value\\\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\\\"get\\\"in b&&void 0!==(c=b.get(e,\\\"value\\\"))?c:(c=e.value,\\\"string\\\"==typeof c?c.replace(bc,\\\"\\\"):null==c?\\\"\\\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\\\"value\\\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\\\"select-one\\\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\\\"disabled\\\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\\\"optgroup\\\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\\\"radio\\\",\\\"checkbox\\\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\\\"value\\\")?\\\"on\\\":a.value})}),n.each(\\\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\\\".split(\\\" \\\"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\\\"**\\\"):this.off(b,a||\\\"**\\\",c)}});var cc=n.now(),dc=/\\\\?/;n.parseJSON=function(a){return JSON.parse(a+\\\"\\\")},n.parseXML=function(a){var b,c;if(!a||\\\"string\\\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\\\"text/xml\\\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\\\"parsererror\\\").length)&&n.error(\\\"Invalid XML: \\\"+a),b};var ec=/#.*$/,fc=/([?&])_=[^&]*/,gc=/^(.*?):[ \\\\t]*([^\\\\r\\\\n]*)$/gm,hc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ic=/^(?:GET|HEAD)$/,jc=/^\\\\/\\\\//,kc=/^([\\\\w.+-]+:)(?:\\\\/\\\\/(?:[^\\\\/?#]*@|)([^\\\\/?#:]*)(?::(\\\\d+)|)|)/,lc={},mc={},nc=\\\"*/\\\".concat(\\\"*\\\"),oc=a.location.href,pc=kc.exec(oc.toLowerCase())||[];function qc(a){return function(b,c){\\\"string\\\"!=typeof b&&(c=b,b=\\\"*\\\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\\\"+\\\"===d[0]?(d=d.slice(1)||\\\"*\\\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rc(a,b,c,d){var e={},f=a===mc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\\\"string\\\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\\\"*\\\"]&&g(\\\"*\\\")}function sc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\\\"*\\\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\\\"Content-Type\\\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\\\" \\\"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function uc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\\\"*\\\"===f)f=i;else if(\\\"*\\\"!==i&&i!==f){if(g=j[i+\\\" \\\"+f]||j[\\\"* \\\"+f],!g)for(e in j)if(h=e.split(\\\" \\\"),h[1]===f&&(g=j[i+\\\" \\\"+h[0]]||j[\\\"* \\\"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\\\"throws\\\"])b=g(b);else try{b=g(b)}catch(l){return{state:\\\"parsererror\\\",error:g?l:\\\"No conversion from \\\"+i+\\\" to \\\"+f}}}return{state:\\\"success\\\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:oc,type:\\\"GET\\\",isLocal:hc.test(pc[1]),global:!0,processData:!0,async:!0,contentType:\\\"application/x-www-form-urlencoded; charset=UTF-8\\\",accepts:{\\\"*\\\":nc,text:\\\"text/plain\\\",html:\\\"text/html\\\",xml:\\\"application/xml, text/xml\\\",json:\\\"application/json, text/javascript\\\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\\\"responseXML\\\",text:\\\"responseText\\\",json:\\\"responseJSON\\\"},converters:{\\\"* text\\\":String,\\\"text html\\\":!0,\\\"text json\\\":n.parseJSON,\\\"text xml\\\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sc(sc(a,n.ajaxSettings),b):sc(n.ajaxSettings,a)},ajaxPrefilter:qc(lc),ajaxTransport:qc(mc),ajax:function(a,b){\\\"object\\\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\\\"once memory\\\"),q=k.statusCode||{},r={},s={},t=0,u=\\\"canceled\\\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gc.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||oc)+\\\"\\\").replace(ec,\\\"\\\").replace(jc,pc[1]+\\\"//\\\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\\\"*\\\").toLowerCase().match(E)||[\\\"\\\"],null==k.crossDomain&&(h=kc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pc[1]&&h[2]===pc[2]&&(h[3]||(\\\"http:\\\"===h[1]?\\\"80\\\":\\\"443\\\"))===(pc[3]||(\\\"http:\\\"===pc[1]?\\\"80\\\":\\\"443\\\")))),k.data&&k.processData&&\\\"string\\\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rc(lc,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger(\\\"ajaxStart\\\"),k.type=k.type.toUpperCase(),k.hasContent=!ic.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?\\\"&\\\":\\\"?\\\")+k.data,delete k.data),k.cache===!1&&(k.url=fc.test(d)?d.replace(fc,\\\"$1_=\\\"+cc++):d+(dc.test(d)?\\\"&\\\":\\\"?\\\")+\\\"_=\\\"+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\\\"If-Modified-Since\\\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\\\"If-None-Match\\\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\\\"Content-Type\\\",k.contentType),v.setRequestHeader(\\\"Accept\\\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\\\"*\\\"!==k.dataTypes[0]?\\\", \\\"+nc+\\\"; q=0.01\\\":\\\"\\\"):k.accepts[\\\"*\\\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\\\"abort\\\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rc(mc,k,b,v)){v.readyState=1,i&&m.trigger(\\\"ajaxSend\\\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\\\"timeout\\\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\\\"No Transport\\\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\\\"\\\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tc(k,v,f)),u=uc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\\\"Last-Modified\\\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\\\"etag\\\"),w&&(n.etag[d]=w)),204===a||\\\"HEAD\\\"===k.type?x=\\\"nocontent\\\":304===a?x=\\\"notmodified\\\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\\\"error\\\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\\\"\\\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\\\"ajaxSuccess\\\":\\\"ajaxError\\\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\\\"ajaxComplete\\\",[v,k]),--n.active||n.event.trigger(\\\"ajaxStop\\\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\\\"json\\\")},getScript:function(a,b){return n.get(a,void 0,b,\\\"script\\\")}}),n.each([\\\"get\\\",\\\"post\\\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:\\\"GET\\\",dataType:\\\"script\\\",async:!1,global:!1,\\\"throws\\\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\\\"body\\\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vc=/%20/g,wc=/\\\\[\\\\]$/,xc=/\\\\r?\\\\n/g,yc=/^(?:submit|button|image|reset|file)$/i,zc=/^(?:input|select|textarea|keygen)/i;function Ac(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wc.test(a)?d(a,e):Ac(a+\\\"[\\\"+(\\\"object\\\"==typeof e?b:\\\"\\\")+\\\"]\\\",e,c,d)});else if(c||\\\"object\\\"!==n.type(b))d(a,b);else for(e in b)Ac(a+\\\"[\\\"+e+\\\"]\\\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\\\"\\\":b,d[d.length]=encodeURIComponent(a)+\\\"=\\\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ac(c,a[c],b,e);return d.join(\\\"&\\\").replace(vc,\\\"+\\\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\\\"elements\\\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\\\":disabled\\\")&&zc.test(this.nodeName)&&!yc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xc,\\\"\\\\r\\\\n\\\")}}):{name:b.name,value:c.replace(xc,\\\"\\\\r\\\\n\\\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bc=0,Cc={},Dc={0:200,1223:204},Ec=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent(\\\"onunload\\\",function(){for(var a in Cc)Cc[a]()}),k.cors=!!Ec&&\\\"withCredentials\\\"in Ec,k.ajax=Ec=!!Ec,n.ajaxTransport(function(a){var b;return k.cors||Ec&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\\\"X-Requested-With\\\"]||(c[\\\"X-Requested-With\\\"]=\\\"XMLHttpRequest\\\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cc[g],b=f.onload=f.onerror=null,\\\"abort\\\"===a?f.abort():\\\"error\\\"===a?d(f.status,f.statusText):d(Dc[f.status]||f.status,f.statusText,\\\"string\\\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\\\"error\\\"),b=Cc[g]=b(\\\"abort\\\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\\\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\\\"},contents:{script:/(?:java|ecma)script/},converters:{\\\"text script\\\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\\\"script\\\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\\\"GET\\\")}),n.ajaxTransport(\\\"script\\\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\\\"<script>\\\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\\\"load error\\\",c=function(a){b.remove(),c=null,a&&e(\\\"error\\\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fc=[],Gc=/(=)\\\\?(?=&|$)|\\\\?\\\\?/;n.ajaxSetup({jsonp:\\\"callback\\\",jsonpCallback:function(){var a=Fc.pop()||n.expando+\\\"_\\\"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter(\\\"json jsonp\\\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gc.test(b.url)?\\\"url\\\":\\\"string\\\"==typeof b.data&&!(b.contentType||\\\"\\\").indexOf(\\\"application/x-www-form-urlencoded\\\")&&Gc.test(b.data)&&\\\"data\\\");return h||\\\"jsonp\\\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gc,\\\"$1\\\"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?\\\"&\\\":\\\"?\\\")+b.jsonp+\\\"=\\\"+e),b.converters[\\\"script json\\\"]=function(){return g||n.error(e+\\\" was not called\\\"),g[0]},b.dataTypes[0]=\\\"json\\\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\\\"script\\\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\\\"string\\\"!=typeof a)return null;\\\"boolean\\\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hc=n.fn.load;n.fn.load=function(a,b,c){if(\\\"string\\\"!=typeof a&&Hc)return Hc.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\\\" \\\");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\\\"object\\\"==typeof b&&(e=\\\"POST\\\"),g.length>0&&n.ajax({url:a,type:e,dataType:\\\"html\\\",data:b}).done(function(a){f=arguments,g.html(d?n(\\\"<div>\\\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each([\\\"ajaxStart\\\",\\\"ajaxStop\\\",\\\"ajaxComplete\\\",\\\"ajaxError\\\",\\\"ajaxSuccess\\\",\\\"ajaxSend\\\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ic=a.document.documentElement;function Jc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\\\"position\\\"),l=n(a),m={};\\\"static\\\"===k&&(a.style.position=\\\"relative\\\"),h=l.offset(),f=n.css(a,\\\"top\\\"),i=n.css(a,\\\"left\\\"),j=(\\\"absolute\\\"===k||\\\"fixed\\\"===k)&&(f+i).indexOf(\\\"auto\\\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\\\"using\\\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\\\"fixed\\\"===n.css(c,\\\"position\\\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\\\"html\\\")||(d=a.offset()),d.top+=n.css(a[0],\\\"borderTopWidth\\\",!0),d.left+=n.css(a[0],\\\"borderLeftWidth\\\",!0)),{top:b.top-d.top-n.css(c,\\\"marginTop\\\",!0),left:b.left-d.left-n.css(c,\\\"marginLeft\\\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ic;while(a&&!n.nodeName(a,\\\"html\\\")&&\\\"static\\\"===n.css(a,\\\"position\\\"))a=a.offsetParent;return a||Ic})}}),n.each({scrollLeft:\\\"pageXOffset\\\",scrollTop:\\\"pageYOffset\\\"},function(b,c){var d=\\\"pageYOffset\\\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\\\"top\\\",\\\"left\\\"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+\\\"px\\\":c):void 0})}),n.each({Height:\\\"height\\\",Width:\\\"width\\\"},function(a,b){n.each({padding:\\\"inner\\\"+a,content:b,\\\"\\\":\\\"outer\\\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\\\"boolean\\\"!=typeof d),g=c||(d===!0||e===!0?\\\"margin\\\":\\\"border\\\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\\\"client\\\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\\\"scroll\\\"+a],e[\\\"scroll\\\"+a],b.body[\\\"offset\\\"+a],e[\\\"offset\\\"+a],e[\\\"client\\\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\\\"function\\\"==typeof define&&define.amd&&define(\\\"jquery\\\",[],function(){return n});var Kc=a.jQuery,Lc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lc),b&&a.jQuery===n&&(a.jQuery=Kc),n},typeof b===U&&(a.jQuery=a.$=n),n});\\r\\n\""
		},
		{
			"_id": "bootbox",
			"name": "bootbox.min.js",
			"source": "\"/**\\r\\n * bootbox.js v4.4.0\\r\\n *\\r\\n * http://bootboxjs.com/license.txt\\r\\n */\\r\\n!function(a,b){\\\"use strict\\\";\\\"function\\\"==typeof define&&define.amd?define([\\\"jquery\\\"],b):\\\"object\\\"==typeof exports?module.exports=b(require(\\\"jquery\\\")):a.bootbox=b(a.jQuery)}(this,function a(b,c){\\\"use strict\\\";function d(a){var b=q[o.locale];return b?b[a]:q.en[a]}function e(a,c,d){a.stopPropagation(),a.preventDefault();var e=b.isFunction(d)&&d.call(c,a)===!1;e||c.modal(\\\"hide\\\")}function f(a){var b,c=0;for(b in a)c++;return c}function g(a,c){var d=0;b.each(a,function(a,b){c(a,b,d++)})}function h(a){var c,d;if(\\\"object\\\"!=typeof a)throw new Error(\\\"Please supply an object of options\\\");if(!a.message)throw new Error(\\\"Please specify a message\\\");return a=b.extend({},o,a),a.buttons||(a.buttons={}),c=a.buttons,d=f(c),g(c,function(a,e,f){if(b.isFunction(e)&&(e=c[a]={callback:e}),\\\"object\\\"!==b.type(e))throw new Error(\\\"button with key \\\"+a+\\\" must be an object\\\");e.label||(e.label=a),e.className||(e.className=2>=d&&f===d-1?\\\"btn-primary\\\":\\\"btn-default\\\")}),a}function i(a,b){var c=a.length,d={};if(1>c||c>2)throw new Error(\\\"Invalid argument length\\\");return 2===c||\\\"string\\\"==typeof a[0]?(d[b[0]]=a[0],d[b[1]]=a[1]):d=a[0],d}function j(a,c,d){return b.extend(!0,{},a,i(c,d))}function k(a,b,c,d){var e={className:\\\"bootbox-\\\"+a,buttons:l.apply(null,b)};return m(j(e,d,c),b)}function l(){for(var a={},b=0,c=arguments.length;c>b;b++){var e=arguments[b],f=e.toLowerCase(),g=e.toUpperCase();a[f]={label:d(g)}}return a}function m(a,b){var d={};return g(b,function(a,b){d[b]=!0}),g(a.buttons,function(a){if(d[a]===c)throw new Error(\\\"button key \\\"+a+\\\" is not allowed (options are \\\"+b.join(\\\"\\\\n\\\")+\\\")\\\")}),a}var n={dialog:\\\"<div class='bootbox modal' tabindex='-1' role='dialog'><div class='modal-dialog'><div class='modal-content'><div class='modal-body'><div class='bootbox-body'></div></div></div></div></div>\\\",header:\\\"<div class='modal-header'><h4 class='modal-title'></h4></div>\\\",footer:\\\"<div class='modal-footer'></div>\\\",closeButton:\\\"<button type='button' class='bootbox-close-button close' data-dismiss='modal' aria-hidden='true'>&times;</button>\\\",form:\\\"<form class='bootbox-form'></form>\\\",inputs:{text:\\\"<input class='bootbox-input bootbox-input-text form-control' autocomplete=off type=text />\\\",textarea:\\\"<textarea class='bootbox-input bootbox-input-textarea form-control'></textarea>\\\",email:\\\"<input class='bootbox-input bootbox-input-email form-control' autocomplete='off' type='email' />\\\",select:\\\"<select class='bootbox-input bootbox-input-select form-control'></select>\\\",checkbox:\\\"<div class='checkbox'><label><input class='bootbox-input bootbox-input-checkbox' type='checkbox' /></label></div>\\\",date:\\\"<input class='bootbox-input bootbox-input-date form-control' autocomplete=off type='date' />\\\",time:\\\"<input class='bootbox-input bootbox-input-time form-control' autocomplete=off type='time' />\\\",number:\\\"<input class='bootbox-input bootbox-input-number form-control' autocomplete=off type='number' />\\\",password:\\\"<input class='bootbox-input bootbox-input-password form-control' autocomplete='off' type='password' />\\\"}},o={locale:\\\"en\\\",backdrop:\\\"static\\\",animate:!0,className:null,closeButton:!0,show:!0,container:\\\"body\\\"},p={};p.alert=function(){var a;if(a=k(\\\"alert\\\",[\\\"ok\\\"],[\\\"message\\\",\\\"callback\\\"],arguments),a.callback&&!b.isFunction(a.callback))throw new Error(\\\"alert requires callback property to be a function when provided\\\");return a.buttons.ok.callback=a.onEscape=function(){return b.isFunction(a.callback)?a.callback.call(this):!0},p.dialog(a)},p.confirm=function(){var a;if(a=k(\\\"confirm\\\",[\\\"cancel\\\",\\\"confirm\\\"],[\\\"message\\\",\\\"callback\\\"],arguments),a.buttons.cancel.callback=a.onEscape=function(){return a.callback.call(this,!1)},a.buttons.confirm.callback=function(){return a.callback.call(this,!0)},!b.isFunction(a.callback))throw new Error(\\\"confirm requires a callback\\\");return p.dialog(a)},p.prompt=function(){var a,d,e,f,h,i,k;if(f=b(n.form),d={className:\\\"bootbox-prompt\\\",buttons:l(\\\"cancel\\\",\\\"confirm\\\"),value:\\\"\\\",inputType:\\\"text\\\"},a=m(j(d,arguments,[\\\"title\\\",\\\"callback\\\"]),[\\\"cancel\\\",\\\"confirm\\\"]),i=a.show===c?!0:a.show,a.message=f,a.buttons.cancel.callback=a.onEscape=function(){return a.callback.call(this,null)},a.buttons.confirm.callback=function(){var c;switch(a.inputType){case\\\"text\\\":case\\\"textarea\\\":case\\\"email\\\":case\\\"select\\\":case\\\"date\\\":case\\\"time\\\":case\\\"number\\\":case\\\"password\\\":c=h.val();break;case\\\"checkbox\\\":var d=h.find(\\\"input:checked\\\");c=[],g(d,function(a,d){c.push(b(d).val())})}return a.callback.call(this,c)},a.show=!1,!a.title)throw new Error(\\\"prompt requires a title\\\");if(!b.isFunction(a.callback))throw new Error(\\\"prompt requires a callback\\\");if(!n.inputs[a.inputType])throw new Error(\\\"invalid prompt type\\\");switch(h=b(n.inputs[a.inputType]),a.inputType){case\\\"text\\\":case\\\"textarea\\\":case\\\"email\\\":case\\\"date\\\":case\\\"time\\\":case\\\"number\\\":case\\\"password\\\":h.val(a.value);break;case\\\"select\\\":var o={};if(k=a.inputOptions||[],!b.isArray(k))throw new Error(\\\"Please pass an array of input options\\\");if(!k.length)throw new Error(\\\"prompt with select requires options\\\");g(k,function(a,d){var e=h;if(d.value===c||d.text===c)throw new Error(\\\"given options in wrong format\\\");d.group&&(o[d.group]||(o[d.group]=b(\\\"<optgroup/>\\\").attr(\\\"label\\\",d.group)),e=o[d.group]),e.append(\\\"<option value='\\\"+d.value+\\\"'>\\\"+d.text+\\\"</option>\\\")}),g(o,function(a,b){h.append(b)}),h.val(a.value);break;case\\\"checkbox\\\":var q=b.isArray(a.value)?a.value:[a.value];if(k=a.inputOptions||[],!k.length)throw new Error(\\\"prompt with checkbox requires options\\\");if(!k[0].value||!k[0].text)throw new Error(\\\"given options in wrong format\\\");h=b(\\\"<div/>\\\"),g(k,function(c,d){var e=b(n.inputs[a.inputType]);e.find(\\\"input\\\").attr(\\\"value\\\",d.value),e.find(\\\"label\\\").append(d.text),g(q,function(a,b){b===d.value&&e.find(\\\"input\\\").prop(\\\"checked\\\",!0)}),h.append(e)})}return a.placeholder&&h.attr(\\\"placeholder\\\",a.placeholder),a.pattern&&h.attr(\\\"pattern\\\",a.pattern),a.maxlength&&h.attr(\\\"maxlength\\\",a.maxlength),f.append(h),f.on(\\\"submit\\\",function(a){a.preventDefault(),a.stopPropagation(),e.find(\\\".btn-primary\\\").click()}),e=p.dialog(a),e.off(\\\"shown.bs.modal\\\"),e.on(\\\"shown.bs.modal\\\",function(){h.focus()}),i===!0&&e.modal(\\\"show\\\"),e},p.dialog=function(a){a=h(a);var d=b(n.dialog),f=d.find(\\\".modal-dialog\\\"),i=d.find(\\\".modal-body\\\"),j=a.buttons,k=\\\"\\\",l={onEscape:a.onEscape};if(b.fn.modal===c)throw new Error(\\\"$.fn.modal is not defined; please double check you have included the Bootstrap JavaScript library. See http://getbootstrap.com/javascript/ for more details.\\\");if(g(j,function(a,b){k+=\\\"<button data-bb-handler='\\\"+a+\\\"' type='button' class='btn \\\"+b.className+\\\"'>\\\"+b.label+\\\"</button>\\\",l[a]=b.callback}),i.find(\\\".bootbox-body\\\").html(a.message),a.animate===!0&&d.addClass(\\\"fade\\\"),a.className&&d.addClass(a.className),\\\"large\\\"===a.size?f.addClass(\\\"modal-lg\\\"):\\\"small\\\"===a.size&&f.addClass(\\\"modal-sm\\\"),a.title&&i.before(n.header),a.closeButton){var m=b(n.closeButton);a.title?d.find(\\\".modal-header\\\").prepend(m):m.css(\\\"margin-top\\\",\\\"-10px\\\").prependTo(i)}return a.title&&d.find(\\\".modal-title\\\").html(a.title),k.length&&(i.after(n.footer),d.find(\\\".modal-footer\\\").html(k)),d.on(\\\"hidden.bs.modal\\\",function(a){a.target===this&&d.remove()}),d.on(\\\"shown.bs.modal\\\",function(){d.find(\\\".btn-primary:first\\\").focus()}),\\\"static\\\"!==a.backdrop&&d.on(\\\"click.dismiss.bs.modal\\\",function(a){d.children(\\\".modal-backdrop\\\").length&&(a.currentTarget=d.children(\\\".modal-backdrop\\\").get(0)),a.target===a.currentTarget&&d.trigger(\\\"escape.close.bb\\\")}),d.on(\\\"escape.close.bb\\\",function(a){l.onEscape&&e(a,d,l.onEscape)}),d.on(\\\"click\\\",\\\".modal-footer button\\\",function(a){var c=b(this).data(\\\"bb-handler\\\");e(a,d,l[c])}),d.on(\\\"click\\\",\\\".bootbox-close-button\\\",function(a){e(a,d,l.onEscape)}),d.on(\\\"keyup\\\",function(a){27===a.which&&d.trigger(\\\"escape.close.bb\\\")}),b(a.container).append(d),d.modal({backdrop:a.backdrop?\\\"static\\\":!1,keyboard:!1,show:!1}),a.show&&d.modal(\\\"show\\\"),d},p.setDefaults=function(){var a={};2===arguments.length?a[arguments[0]]=arguments[1]:a=arguments[0],b.extend(o,a)},p.hideAll=function(){return b(\\\".bootbox\\\").modal(\\\"hide\\\"),p};var q={bg_BG:{OK:\\\"Ок\\\",CANCEL:\\\"Отказ\\\",CONFIRM:\\\"Потвърждавам\\\"},br:{OK:\\\"OK\\\",CANCEL:\\\"Cancelar\\\",CONFIRM:\\\"Sim\\\"},cs:{OK:\\\"OK\\\",CANCEL:\\\"Zrušit\\\",CONFIRM:\\\"Potvrdit\\\"},da:{OK:\\\"OK\\\",CANCEL:\\\"Annuller\\\",CONFIRM:\\\"Accepter\\\"},de:{OK:\\\"OK\\\",CANCEL:\\\"Abbrechen\\\",CONFIRM:\\\"Akzeptieren\\\"},el:{OK:\\\"Εντάξει\\\",CANCEL:\\\"Ακύρωση\\\",CONFIRM:\\\"Επιβεβαίωση\\\"},en:{OK:\\\"OK\\\",CANCEL:\\\"Cancel\\\",CONFIRM:\\\"OK\\\"},es:{OK:\\\"OK\\\",CANCEL:\\\"Cancelar\\\",CONFIRM:\\\"Aceptar\\\"},et:{OK:\\\"OK\\\",CANCEL:\\\"Katkesta\\\",CONFIRM:\\\"OK\\\"},fa:{OK:\\\"قبول\\\",CANCEL:\\\"لغو\\\",CONFIRM:\\\"تایید\\\"},fi:{OK:\\\"OK\\\",CANCEL:\\\"Peruuta\\\",CONFIRM:\\\"OK\\\"},fr:{OK:\\\"OK\\\",CANCEL:\\\"Annuler\\\",CONFIRM:\\\"D'accord\\\"},he:{OK:\\\"אישור\\\",CANCEL:\\\"ביטול\\\",CONFIRM:\\\"אישור\\\"},hu:{OK:\\\"OK\\\",CANCEL:\\\"Mégsem\\\",CONFIRM:\\\"Megerősít\\\"},hr:{OK:\\\"OK\\\",CANCEL:\\\"Odustani\\\",CONFIRM:\\\"Potvrdi\\\"},id:{OK:\\\"OK\\\",CANCEL:\\\"Batal\\\",CONFIRM:\\\"OK\\\"},it:{OK:\\\"OK\\\",CANCEL:\\\"Annulla\\\",CONFIRM:\\\"Conferma\\\"},ja:{OK:\\\"OK\\\",CANCEL:\\\"キャンセル\\\",CONFIRM:\\\"確認\\\"},lt:{OK:\\\"Gerai\\\",CANCEL:\\\"Atšaukti\\\",CONFIRM:\\\"Patvirtinti\\\"},lv:{OK:\\\"Labi\\\",CANCEL:\\\"Atcelt\\\",CONFIRM:\\\"Apstiprināt\\\"},nl:{OK:\\\"OK\\\",CANCEL:\\\"Annuleren\\\",CONFIRM:\\\"Accepteren\\\"},no:{OK:\\\"OK\\\",CANCEL:\\\"Avbryt\\\",CONFIRM:\\\"OK\\\"},pl:{OK:\\\"OK\\\",CANCEL:\\\"Anuluj\\\",CONFIRM:\\\"Potwierdź\\\"},pt:{OK:\\\"OK\\\",CANCEL:\\\"Cancelar\\\",CONFIRM:\\\"Confirmar\\\"},ru:{OK:\\\"OK\\\",CANCEL:\\\"Отмена\\\",CONFIRM:\\\"Применить\\\"},sq:{OK:\\\"OK\\\",CANCEL:\\\"Anulo\\\",CONFIRM:\\\"Prano\\\"},sv:{OK:\\\"OK\\\",CANCEL:\\\"Avbryt\\\",CONFIRM:\\\"OK\\\"},th:{OK:\\\"ตกลง\\\",CANCEL:\\\"ยกเลิก\\\",CONFIRM:\\\"ยืนยัน\\\"},tr:{OK:\\\"Tamam\\\",CANCEL:\\\"İptal\\\",CONFIRM:\\\"Onayla\\\"},zh_CN:{OK:\\\"OK\\\",CANCEL:\\\"取消\\\",CONFIRM:\\\"确认\\\"},zh_TW:{OK:\\\"OK\\\",CANCEL:\\\"取消\\\",CONFIRM:\\\"確認\\\"}};return p.addLocale=function(a,c){return b.each([\\\"OK\\\",\\\"CANCEL\\\",\\\"CONFIRM\\\"],function(a,b){if(!c[b])throw new Error(\\\"Please supply a translation for '\\\"+b+\\\"'\\\")}),q[a]={OK:c.OK,CANCEL:c.CANCEL,CONFIRM:c.CONFIRM},p},p.removeLocale=function(a){return delete q[a],p},p.setLocale=function(a){return p.setDefaults(\\\"locale\\\",a)},p.init=function(c){return a(c||b)},p});\""
		},
		{
			"_id": "bootstrap",
			"name": "bootstrap.min.js",
			"source": "\"/*!\\r\\n * Bootstrap v3.3.6 (http://getbootstrap.com)\\r\\n * Copyright 2011-2015 Twitter, Inc.\\r\\n * Licensed under the MIT license\\r\\n */\\r\\nif(\\\"undefined\\\"==typeof jQuery)throw new Error(\\\"Bootstrap's JavaScript requires jQuery\\\");+function(a){\\\"use strict\\\";var b=a.fn.jquery.split(\\\" \\\")[0].split(\\\".\\\");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1||b[0]>2)throw new Error(\\\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3\\\")}(jQuery),+function(a){\\\"use strict\\\";function b(){var a=document.createElement(\\\"bootstrap\\\"),b={WebkitTransition:\\\"webkitTransitionEnd\\\",MozTransition:\\\"transitionend\\\",OTransition:\\\"oTransitionEnd otransitionend\\\",transition:\\\"transitionend\\\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(\\\"bsTransitionEnd\\\",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var c=a(this),e=c.data(\\\"bs.alert\\\");e||c.data(\\\"bs.alert\\\",e=new d(this)),\\\"string\\\"==typeof b&&e[b].call(c)})}var c='[data-dismiss=\\\"alert\\\"]',d=function(b){a(b).on(\\\"click\\\",c,this.close)};d.VERSION=\\\"3.3.6\\\",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger(\\\"closed.bs.alert\\\").remove()}var e=a(this),f=e.attr(\\\"data-target\\\");f||(f=e.attr(\\\"href\\\"),f=f&&f.replace(/.*(?=#[^\\\\s]*$)/,\\\"\\\"));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(\\\".alert\\\")),g.trigger(b=a.Event(\\\"close.bs.alert\\\")),b.isDefaultPrevented()||(g.removeClass(\\\"in\\\"),a.support.transition&&g.hasClass(\\\"fade\\\")?g.one(\\\"bsTransitionEnd\\\",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on(\\\"click.bs.alert.data-api\\\",c,d.prototype.close)}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.button\\\"),f=\\\"object\\\"==typeof b&&b;e||d.data(\\\"bs.button\\\",e=new c(this,f)),\\\"toggle\\\"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION=\\\"3.3.6\\\",c.DEFAULTS={loadingText:\\\"loading...\\\"},c.prototype.setState=function(b){var c=\\\"disabled\\\",d=this.$element,e=d.is(\\\"input\\\")?\\\"val\\\":\\\"html\\\",f=d.data();b+=\\\"Text\\\",null==f.resetText&&d.data(\\\"resetText\\\",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),\\\"loadingText\\\"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle=\\\"buttons\\\"]');if(b.length){var c=this.$element.find(\\\"input\\\");\\\"radio\\\"==c.prop(\\\"type\\\")?(c.prop(\\\"checked\\\")&&(a=!1),b.find(\\\".active\\\").removeClass(\\\"active\\\"),this.$element.addClass(\\\"active\\\")):\\\"checkbox\\\"==c.prop(\\\"type\\\")&&(c.prop(\\\"checked\\\")!==this.$element.hasClass(\\\"active\\\")&&(a=!1),this.$element.toggleClass(\\\"active\\\")),c.prop(\\\"checked\\\",this.$element.hasClass(\\\"active\\\")),a&&c.trigger(\\\"change\\\")}else this.$element.attr(\\\"aria-pressed\\\",!this.$element.hasClass(\\\"active\\\")),this.$element.toggleClass(\\\"active\\\")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on(\\\"click.bs.button.data-api\\\",'[data-toggle^=\\\"button\\\"]',function(c){var d=a(c.target);d.hasClass(\\\"btn\\\")||(d=d.closest(\\\".btn\\\")),b.call(d,\\\"toggle\\\"),a(c.target).is('input[type=\\\"radio\\\"]')||a(c.target).is('input[type=\\\"checkbox\\\"]')||c.preventDefault()}).on(\\\"focus.bs.button.data-api blur.bs.button.data-api\\\",'[data-toggle^=\\\"button\\\"]',function(b){a(b.target).closest(\\\".btn\\\").toggleClass(\\\"focus\\\",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.carousel\\\"),f=a.extend({},c.DEFAULTS,d.data(),\\\"object\\\"==typeof b&&b),g=\\\"string\\\"==typeof b?b:f.slide;e||d.data(\\\"bs.carousel\\\",e=new c(this,f)),\\\"number\\\"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(\\\".carousel-indicators\\\"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on(\\\"keydown.bs.carousel\\\",a.proxy(this.keydown,this)),\\\"hover\\\"==this.options.pause&&!(\\\"ontouchstart\\\"in document.documentElement)&&this.$element.on(\\\"mouseenter.bs.carousel\\\",a.proxy(this.pause,this)).on(\\\"mouseleave.bs.carousel\\\",a.proxy(this.cycle,this))};c.VERSION=\\\"3.3.6\\\",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:\\\"hover\\\",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(\\\".item\\\"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d=\\\"prev\\\"==a&&0===c||\\\"next\\\"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e=\\\"prev\\\"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(\\\".item.active\\\"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one(\\\"slid.bs.carousel\\\",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?\\\"next\\\":\\\"prev\\\",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(\\\".next, .prev\\\").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide(\\\"next\\\")},c.prototype.prev=function(){return this.sliding?void 0:this.slide(\\\"prev\\\")},c.prototype.slide=function(b,d){var e=this.$element.find(\\\".item.active\\\"),f=d||this.getItemForDirection(b,e),g=this.interval,h=\\\"next\\\"==b?\\\"left\\\":\\\"right\\\",i=this;if(f.hasClass(\\\"active\\\"))return this.sliding=!1;var j=f[0],k=a.Event(\\\"slide.bs.carousel\\\",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(\\\".active\\\").removeClass(\\\"active\\\");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass(\\\"active\\\")}var m=a.Event(\\\"slid.bs.carousel\\\",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass(\\\"slide\\\")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one(\\\"bsTransitionEnd\\\",function(){f.removeClass([b,h].join(\\\" \\\")).addClass(\\\"active\\\"),e.removeClass([\\\"active\\\",h].join(\\\" \\\")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass(\\\"active\\\"),f.addClass(\\\"active\\\"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr(\\\"data-target\\\")||(d=e.attr(\\\"href\\\"))&&d.replace(/.*(?=#[^\\\\s]+$)/,\\\"\\\"));if(f.hasClass(\\\"carousel\\\")){var g=a.extend({},f.data(),e.data()),h=e.attr(\\\"data-slide-to\\\");h&&(g.interval=!1),b.call(f,g),h&&f.data(\\\"bs.carousel\\\").to(h),c.preventDefault()}};a(document).on(\\\"click.bs.carousel.data-api\\\",\\\"[data-slide]\\\",e).on(\\\"click.bs.carousel.data-api\\\",\\\"[data-slide-to]\\\",e),a(window).on(\\\"load\\\",function(){a('[data-ride=\\\"carousel\\\"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){\\\"use strict\\\";function b(b){var c,d=b.attr(\\\"data-target\\\")||(c=b.attr(\\\"href\\\"))&&c.replace(/.*(?=#[^\\\\s]+$)/,\\\"\\\");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data(\\\"bs.collapse\\\"),f=a.extend({},d.DEFAULTS,c.data(),\\\"object\\\"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data(\\\"bs.collapse\\\",e=new d(this,f)),\\\"string\\\"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle=\\\"collapse\\\"][href=\\\"#'+b.id+'\\\"],[data-toggle=\\\"collapse\\\"][data-target=\\\"#'+b.id+'\\\"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION=\\\"3.3.6\\\",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass(\\\"width\\\");return a?\\\"width\\\":\\\"height\\\"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass(\\\"in\\\")){var b,e=this.$parent&&this.$parent.children(\\\".panel\\\").children(\\\".in, .collapsing\\\");if(!(e&&e.length&&(b=e.data(\\\"bs.collapse\\\"),b&&b.transitioning))){var f=a.Event(\\\"show.bs.collapse\\\");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,\\\"hide\\\"),b||e.data(\\\"bs.collapse\\\",null));var g=this.dimension();this.$element.removeClass(\\\"collapse\\\").addClass(\\\"collapsing\\\")[g](0).attr(\\\"aria-expanded\\\",!0),this.$trigger.removeClass(\\\"collapsed\\\").attr(\\\"aria-expanded\\\",!0),this.transitioning=1;var h=function(){this.$element.removeClass(\\\"collapsing\\\").addClass(\\\"collapse in\\\")[g](\\\"\\\"),this.transitioning=0,this.$element.trigger(\\\"shown.bs.collapse\\\")};if(!a.support.transition)return h.call(this);var i=a.camelCase([\\\"scroll\\\",g].join(\\\"-\\\"));this.$element.one(\\\"bsTransitionEnd\\\",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass(\\\"in\\\")){var b=a.Event(\\\"hide.bs.collapse\\\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass(\\\"collapsing\\\").removeClass(\\\"collapse in\\\").attr(\\\"aria-expanded\\\",!1),this.$trigger.addClass(\\\"collapsed\\\").attr(\\\"aria-expanded\\\",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass(\\\"collapsing\\\").addClass(\\\"collapse\\\").trigger(\\\"hidden.bs.collapse\\\")};return a.support.transition?void this.$element[c](0).one(\\\"bsTransitionEnd\\\",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass(\\\"in\\\")?\\\"hide\\\":\\\"show\\\"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle=\\\"collapse\\\"][data-parent=\\\"'+this.options.parent+'\\\"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass(\\\"in\\\");a.attr(\\\"aria-expanded\\\",c),b.toggleClass(\\\"collapsed\\\",!c).attr(\\\"aria-expanded\\\",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on(\\\"click.bs.collapse.data-api\\\",'[data-toggle=\\\"collapse\\\"]',function(d){var e=a(this);e.attr(\\\"data-target\\\")||d.preventDefault();var f=b(e),g=f.data(\\\"bs.collapse\\\"),h=g?\\\"toggle\\\":e.data();c.call(f,h)})}(jQuery),+function(a){\\\"use strict\\\";function b(b){var c=b.attr(\\\"data-target\\\");c||(c=b.attr(\\\"href\\\"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\\\\s]*$)/,\\\"\\\"));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass(\\\"open\\\")&&(c&&\\\"click\\\"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event(\\\"hide.bs.dropdown\\\",f)),c.isDefaultPrevented()||(d.attr(\\\"aria-expanded\\\",\\\"false\\\"),e.removeClass(\\\"open\\\").trigger(a.Event(\\\"hidden.bs.dropdown\\\",f)))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data(\\\"bs.dropdown\\\");d||c.data(\\\"bs.dropdown\\\",d=new g(this)),\\\"string\\\"==typeof b&&d[b].call(c)})}var e=\\\".dropdown-backdrop\\\",f='[data-toggle=\\\"dropdown\\\"]',g=function(b){a(b).on(\\\"click.bs.dropdown\\\",this.toggle)};g.VERSION=\\\"3.3.6\\\",g.prototype.toggle=function(d){var e=a(this);if(!e.is(\\\".disabled, :disabled\\\")){var f=b(e),g=f.hasClass(\\\"open\\\");if(c(),!g){\\\"ontouchstart\\\"in document.documentElement&&!f.closest(\\\".navbar-nav\\\").length&&a(document.createElement(\\\"div\\\")).addClass(\\\"dropdown-backdrop\\\").insertAfter(a(this)).on(\\\"click\\\",c);var h={relatedTarget:this};if(f.trigger(d=a.Event(\\\"show.bs.dropdown\\\",h)),d.isDefaultPrevented())return;e.trigger(\\\"focus\\\").attr(\\\"aria-expanded\\\",\\\"true\\\"),f.toggleClass(\\\"open\\\").trigger(a.Event(\\\"shown.bs.dropdown\\\",h))}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(\\\".disabled, :disabled\\\")){var e=b(d),g=e.hasClass(\\\"open\\\");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger(\\\"focus\\\"),d.trigger(\\\"click\\\");var h=\\\" li:not(.disabled):visible a\\\",i=e.find(\\\".dropdown-menu\\\"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger(\\\"focus\\\")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on(\\\"click.bs.dropdown.data-api\\\",c).on(\\\"click.bs.dropdown.data-api\\\",\\\".dropdown form\\\",function(a){a.stopPropagation()}).on(\\\"click.bs.dropdown.data-api\\\",f,g.prototype.toggle).on(\\\"keydown.bs.dropdown.data-api\\\",f,g.prototype.keydown).on(\\\"keydown.bs.dropdown.data-api\\\",\\\".dropdown-menu\\\",g.prototype.keydown)}(jQuery),+function(a){\\\"use strict\\\";function b(b,d){return this.each(function(){var e=a(this),f=e.data(\\\"bs.modal\\\"),g=a.extend({},c.DEFAULTS,e.data(),\\\"object\\\"==typeof b&&b);f||e.data(\\\"bs.modal\\\",f=new c(this,g)),\\\"string\\\"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(\\\".modal-dialog\\\"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(\\\".modal-content\\\").load(this.options.remote,a.proxy(function(){this.$element.trigger(\\\"loaded.bs.modal\\\")},this))};c.VERSION=\\\"3.3.6\\\",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event(\\\"show.bs.modal\\\",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass(\\\"modal-open\\\"),this.escape(),this.resize(),this.$element.on(\\\"click.dismiss.bs.modal\\\",'[data-dismiss=\\\"modal\\\"]',a.proxy(this.hide,this)),this.$dialog.on(\\\"mousedown.dismiss.bs.modal\\\",function(){d.$element.one(\\\"mouseup.dismiss.bs.modal\\\",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass(\\\"fade\\\");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass(\\\"in\\\"),d.enforceFocus();var f=a.Event(\\\"shown.bs.modal\\\",{relatedTarget:b});e?d.$dialog.one(\\\"bsTransitionEnd\\\",function(){d.$element.trigger(\\\"focus\\\").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger(\\\"focus\\\").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event(\\\"hide.bs.modal\\\"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off(\\\"focusin.bs.modal\\\"),this.$element.removeClass(\\\"in\\\").off(\\\"click.dismiss.bs.modal\\\").off(\\\"mouseup.dismiss.bs.modal\\\"),this.$dialog.off(\\\"mousedown.dismiss.bs.modal\\\"),a.support.transition&&this.$element.hasClass(\\\"fade\\\")?this.$element.one(\\\"bsTransitionEnd\\\",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off(\\\"focusin.bs.modal\\\").on(\\\"focusin.bs.modal\\\",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger(\\\"focus\\\")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on(\\\"keydown.dismiss.bs.modal\\\",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off(\\\"keydown.dismiss.bs.modal\\\")},c.prototype.resize=function(){this.isShown?a(window).on(\\\"resize.bs.modal\\\",a.proxy(this.handleUpdate,this)):a(window).off(\\\"resize.bs.modal\\\")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass(\\\"modal-open\\\"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger(\\\"hidden.bs.modal\\\")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass(\\\"fade\\\")?\\\"fade\\\":\\\"\\\";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement(\\\"div\\\")).addClass(\\\"modal-backdrop \\\"+e).appendTo(this.$body),this.$element.on(\\\"click.dismiss.bs.modal\\\",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&(\\\"static\\\"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass(\\\"in\\\"),!b)return;f?this.$backdrop.one(\\\"bsTransitionEnd\\\",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass(\\\"in\\\");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass(\\\"fade\\\")?this.$backdrop.one(\\\"bsTransitionEnd\\\",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:\\\"\\\",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:\\\"\\\"})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:\\\"\\\",paddingRight:\\\"\\\"})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css(\\\"padding-right\\\")||0,10);this.originalBodyPad=document.body.style.paddingRight||\\\"\\\",this.bodyIsOverflowing&&this.$body.css(\\\"padding-right\\\",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css(\\\"padding-right\\\",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement(\\\"div\\\");a.className=\\\"modal-scrollbar-measure\\\",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on(\\\"click.bs.modal.data-api\\\",'[data-toggle=\\\"modal\\\"]',function(c){var d=a(this),e=d.attr(\\\"href\\\"),f=a(d.attr(\\\"data-target\\\")||e&&e.replace(/.*(?=#[^\\\\s]+$)/,\\\"\\\")),g=f.data(\\\"bs.modal\\\")?\\\"toggle\\\":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is(\\\"a\\\")&&c.preventDefault(),f.one(\\\"show.bs.modal\\\",function(a){a.isDefaultPrevented()||f.one(\\\"hidden.bs.modal\\\",function(){d.is(\\\":visible\\\")&&d.trigger(\\\"focus\\\")})}),b.call(f,g,this)})}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.tooltip\\\"),f=\\\"object\\\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\\\"bs.tooltip\\\",e=new c(this,f)),\\\"string\\\"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init(\\\"tooltip\\\",a,b)};c.VERSION=\\\"3.3.6\\\",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:\\\"top\\\",selector:!1,template:'<div class=\\\"tooltip\\\" role=\\\"tooltip\\\"><div class=\\\"tooltip-arrow\\\"></div><div class=\\\"tooltip-inner\\\"></div></div>',trigger:\\\"hover focus\\\",title:\\\"\\\",delay:0,html:!1,container:!1,viewport:{selector:\\\"body\\\",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error(\\\"`selector` option must be specified when initializing \\\"+this.type+\\\" on the window.document object!\\\");for(var e=this.options.trigger.split(\\\" \\\"),f=e.length;f--;){var g=e[f];if(\\\"click\\\"==g)this.$element.on(\\\"click.\\\"+this.type,this.options.selector,a.proxy(this.toggle,this));else if(\\\"manual\\\"!=g){var h=\\\"hover\\\"==g?\\\"mouseenter\\\":\\\"focusin\\\",i=\\\"hover\\\"==g?\\\"mouseleave\\\":\\\"focusout\\\";this.$element.on(h+\\\".\\\"+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+\\\".\\\"+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:\\\"manual\\\",selector:\\\"\\\"}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&\\\"number\\\"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\\\"bs.\\\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\\\"bs.\\\"+this.type,c)),b instanceof a.Event&&(c.inState[\\\"focusin\\\"==b.type?\\\"focus\\\":\\\"hover\\\"]=!0),c.tip().hasClass(\\\"in\\\")||\\\"in\\\"==c.hoverState?void(c.hoverState=\\\"in\\\"):(clearTimeout(c.timeout),c.hoverState=\\\"in\\\",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){\\\"in\\\"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\\\"bs.\\\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\\\"bs.\\\"+this.type,c)),b instanceof a.Event&&(c.inState[\\\"focusout\\\"==b.type?\\\"focus\\\":\\\"hover\\\"]=!1),c.isInStateTrue()?void 0:(clearTimeout(c.timeout),c.hoverState=\\\"out\\\",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){\\\"out\\\"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide())},c.prototype.show=function(){var b=a.Event(\\\"show.bs.\\\"+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr(\\\"id\\\",g),this.$element.attr(\\\"aria-describedby\\\",g),this.options.animation&&f.addClass(\\\"fade\\\");var h=\\\"function\\\"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\\\\s?auto?\\\\s?/i,j=i.test(h);j&&(h=h.replace(i,\\\"\\\")||\\\"top\\\"),f.detach().css({top:0,left:0,display:\\\"block\\\"}).addClass(h).data(\\\"bs.\\\"+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger(\\\"inserted.bs.\\\"+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h=\\\"bottom\\\"==h&&k.bottom+m>o.bottom?\\\"top\\\":\\\"top\\\"==h&&k.top-m<o.top?\\\"bottom\\\":\\\"right\\\"==h&&k.right+l>o.width?\\\"left\\\":\\\"left\\\"==h&&k.left-l<o.left?\\\"right\\\":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger(\\\"shown.bs.\\\"+e.type),e.hoverState=null,\\\"out\\\"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass(\\\"fade\\\")?f.one(\\\"bsTransitionEnd\\\",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css(\\\"margin-top\\\"),10),h=parseInt(d.css(\\\"margin-left\\\"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass(\\\"in\\\");var i=d[0].offsetWidth,j=d[0].offsetHeight;\\\"top\\\"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?\\\"offsetWidth\\\":\\\"offsetHeight\\\";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?\\\"left\\\":\\\"top\\\",50*(1-a/b)+\\\"%\\\").css(c?\\\"top\\\":\\\"left\\\",\\\"\\\")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(\\\".tooltip-inner\\\")[this.options.html?\\\"html\\\":\\\"text\\\"](b),a.removeClass(\\\"fade in top bottom left right\\\")},c.prototype.hide=function(b){function d(){\\\"in\\\"!=e.hoverState&&f.detach(),e.$element.removeAttr(\\\"aria-describedby\\\").trigger(\\\"hidden.bs.\\\"+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event(\\\"hide.bs.\\\"+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass(\\\"in\\\"),a.support.transition&&f.hasClass(\\\"fade\\\")?f.one(\\\"bsTransitionEnd\\\",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr(\\\"title\\\")||\\\"string\\\"!=typeof a.attr(\\\"data-original-title\\\"))&&a.attr(\\\"data-original-title\\\",a.attr(\\\"title\\\")||\\\"\\\").attr(\\\"title\\\",\\\"\\\")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d=\\\"BODY\\\"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return\\\"bottom\\\"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:\\\"top\\\"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:\\\"left\\\"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr(\\\"data-original-title\\\")||(\\\"function\\\"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+\\\" `template` option must consist of exactly 1 top-level element!\\\");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\\\".tooltip-arrow\\\")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data(\\\"bs.\\\"+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\\\"bs.\\\"+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass(\\\"in\\\")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off(\\\".\\\"+a.type).removeData(\\\"bs.\\\"+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.popover\\\"),f=\\\"object\\\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\\\"bs.popover\\\",e=new c(this,f)),\\\"string\\\"==typeof b&&e[b]())})}var c=function(a,b){this.init(\\\"popover\\\",a,b)};if(!a.fn.tooltip)throw new Error(\\\"Popover requires tooltip.js\\\");c.VERSION=\\\"3.3.6\\\",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:\\\"right\\\",trigger:\\\"click\\\",content:\\\"\\\",template:'<div class=\\\"popover\\\" role=\\\"tooltip\\\"><div class=\\\"arrow\\\"></div><h3 class=\\\"popover-title\\\"></h3><div class=\\\"popover-content\\\"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(\\\".popover-title\\\")[this.options.html?\\\"html\\\":\\\"text\\\"](b),a.find(\\\".popover-content\\\").children().detach().end()[this.options.html?\\\"string\\\"==typeof c?\\\"html\\\":\\\"append\\\":\\\"text\\\"](c),a.removeClass(\\\"fade top bottom left right in\\\"),a.find(\\\".popover-title\\\").html()||a.find(\\\".popover-title\\\").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr(\\\"data-content\\\")||(\\\"function\\\"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\\\".arrow\\\")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){\\\"use strict\\\";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||\\\"\\\")+\\\" .nav li > a\\\",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on(\\\"scroll.bs.scrollspy\\\",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data(\\\"bs.scrollspy\\\"),f=\\\"object\\\"==typeof c&&c;e||d.data(\\\"bs.scrollspy\\\",e=new b(this,f)),\\\"string\\\"==typeof c&&e[c]()})}b.VERSION=\\\"3.3.6\\\",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c=\\\"offset\\\",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c=\\\"position\\\",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data(\\\"target\\\")||b.attr(\\\"href\\\"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(\\\":visible\\\")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target=\\\"'+b+'\\\"],'+this.selector+'[href=\\\"'+b+'\\\"]',d=a(c).parents(\\\"li\\\").addClass(\\\"active\\\");\\r\\nd.parent(\\\".dropdown-menu\\\").length&&(d=d.closest(\\\"li.dropdown\\\").addClass(\\\"active\\\")),d.trigger(\\\"activate.bs.scrollspy\\\")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,\\\".active\\\").removeClass(\\\"active\\\")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on(\\\"load.bs.scrollspy.data-api\\\",function(){a('[data-spy=\\\"scroll\\\"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.tab\\\");e||d.data(\\\"bs.tab\\\",e=new c(this)),\\\"string\\\"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION=\\\"3.3.6\\\",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest(\\\"ul:not(.dropdown-menu)\\\"),d=b.data(\\\"target\\\");if(d||(d=b.attr(\\\"href\\\"),d=d&&d.replace(/.*(?=#[^\\\\s]*$)/,\\\"\\\")),!b.parent(\\\"li\\\").hasClass(\\\"active\\\")){var e=c.find(\\\".active:last a\\\"),f=a.Event(\\\"hide.bs.tab\\\",{relatedTarget:b[0]}),g=a.Event(\\\"show.bs.tab\\\",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest(\\\"li\\\"),c),this.activate(h,h.parent(),function(){e.trigger({type:\\\"hidden.bs.tab\\\",relatedTarget:b[0]}),b.trigger({type:\\\"shown.bs.tab\\\",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass(\\\"active\\\").find(\\\"> .dropdown-menu > .active\\\").removeClass(\\\"active\\\").end().find('[data-toggle=\\\"tab\\\"]').attr(\\\"aria-expanded\\\",!1),b.addClass(\\\"active\\\").find('[data-toggle=\\\"tab\\\"]').attr(\\\"aria-expanded\\\",!0),h?(b[0].offsetWidth,b.addClass(\\\"in\\\")):b.removeClass(\\\"fade\\\"),b.parent(\\\".dropdown-menu\\\").length&&b.closest(\\\"li.dropdown\\\").addClass(\\\"active\\\").end().find('[data-toggle=\\\"tab\\\"]').attr(\\\"aria-expanded\\\",!0),e&&e()}var g=d.find(\\\"> .active\\\"),h=e&&a.support.transition&&(g.length&&g.hasClass(\\\"fade\\\")||!!d.find(\\\"> .fade\\\").length);g.length&&h?g.one(\\\"bsTransitionEnd\\\",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass(\\\"in\\\")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),\\\"show\\\")};a(document).on(\\\"click.bs.tab.data-api\\\",'[data-toggle=\\\"tab\\\"]',e).on(\\\"click.bs.tab.data-api\\\",'[data-toggle=\\\"pill\\\"]',e)}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.affix\\\"),f=\\\"object\\\"==typeof b&&b;e||d.data(\\\"bs.affix\\\",e=new c(this,f)),\\\"string\\\"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on(\\\"scroll.bs.affix.data-api\\\",a.proxy(this.checkPosition,this)).on(\\\"click.bs.affix.data-api\\\",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION=\\\"3.3.6\\\",c.RESET=\\\"affix affix-top affix-bottom\\\",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&\\\"top\\\"==this.affixed)return c>e?\\\"top\\\":!1;if(\\\"bottom\\\"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:\\\"bottom\\\":a-d>=e+g?!1:\\\"bottom\\\";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=e?\\\"top\\\":null!=d&&i+j>=a-d?\\\"bottom\\\":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\\\"affix\\\");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(\\\":visible\\\")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());\\\"object\\\"!=typeof d&&(f=e=d),\\\"function\\\"==typeof e&&(e=d.top(this.$element)),\\\"function\\\"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css(\\\"top\\\",\\\"\\\");var i=\\\"affix\\\"+(h?\\\"-\\\"+h:\\\"\\\"),j=a.Event(i+\\\".bs.affix\\\");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin=\\\"bottom\\\"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\\\"affix\\\",\\\"affixed\\\")+\\\".bs.affix\\\")}\\\"bottom\\\"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on(\\\"load\\\",function(){a('[data-spy=\\\"affix\\\"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);\""
		},
		{
			"_id": "Animation",
			"name": "Animation.js",
			"source": "\"/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n */\\r\\n\\r\\nTHREE.Animation = function ( root, data ) {\\r\\n\\r\\n\\tthis.root = root;\\r\\n\\tthis.data = THREE.AnimationHandler.init( data );\\r\\n\\tthis.hierarchy = THREE.AnimationHandler.parse( root );\\r\\n\\r\\n\\tthis.currentTime = 0;\\r\\n\\tthis.timeScale = 1;\\r\\n\\r\\n\\tthis.isPlaying = false;\\r\\n\\tthis.loop = true;\\r\\n\\tthis.weight = 0;\\r\\n\\r\\n\\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.Animation.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.Animation,\\r\\n\\r\\n\\tkeyTypes:  [ \\\"pos\\\", \\\"rot\\\", \\\"scl\\\" ],\\r\\n\\r\\n\\tplay: function ( startTime, weight ) {\\r\\n\\r\\n\\t\\tthis.currentTime = startTime !== undefined ? startTime : 0;\\r\\n\\t\\tthis.weight = weight !== undefined ? weight : 1;\\r\\n\\r\\n\\t\\tthis.isPlaying = true;\\r\\n\\r\\n\\t\\tthis.reset();\\r\\n\\r\\n\\t\\tTHREE.AnimationHandler.play( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tstop: function() {\\r\\n\\r\\n\\t\\tthis.isPlaying = false;\\r\\n\\r\\n\\t\\tTHREE.AnimationHandler.stop( this );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\treset: function () {\\r\\n\\r\\n\\t\\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\tvar object = this.hierarchy[ h ];\\r\\n\\r\\n\\t\\t\\tif ( object.animationCache === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tobject.animationCache = {\\r\\n\\t\\t\\t\\t\\tanimations: {},\\r\\n\\t\\t\\t\\t\\tblending: {\\r\\n\\t\\t\\t\\t\\t\\tpositionWeight: 0.0,\\r\\n\\t\\t\\t\\t\\t\\tquaternionWeight: 0.0,\\r\\n\\t\\t\\t\\t\\t\\tscaleWeight: 0.0\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar name = this.data.name;\\r\\n\\t\\t\\tvar animations = object.animationCache.animations;\\r\\n\\t\\t\\tvar animationCache = animations[ name ];\\r\\n\\r\\n\\t\\t\\tif ( animationCache === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tanimationCache = {\\r\\n\\t\\t\\t\\t\\tprevKey: { pos: 0, rot: 0, scl: 0 },\\r\\n\\t\\t\\t\\t\\tnextKey: { pos: 0, rot: 0, scl: 0 },\\r\\n\\t\\t\\t\\t\\toriginalMatrix: object.matrix\\r\\n\\t\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t\\tanimations[ name ] = animationCache;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Get keys to match our current time\\r\\n\\r\\n\\t\\t\\tfor ( var t = 0; t < 3; t ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar type = this.keyTypes[ t ];\\r\\n\\r\\n\\t\\t\\t\\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\\r\\n\\t\\t\\t\\tvar nextKey = this.getNextKeyWith( type, h, 1 );\\r\\n\\r\\n\\t\\t\\t\\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tprevKey = nextKey;\\r\\n\\t\\t\\t\\t\\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tanimationCache.prevKey[ type ] = prevKey;\\r\\n\\t\\t\\t\\tanimationCache.nextKey[ type ] = nextKey;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tresetBlendWeights: function () {\\r\\n\\r\\n\\t\\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\tvar object = this.hierarchy[ h ];\\r\\n\\t\\t\\tvar animationCache = object.animationCache;\\r\\n\\r\\n\\t\\t\\tif ( animationCache !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tvar blending = animationCache.blending;\\r\\n\\r\\n\\t\\t\\t\\tblending.positionWeight = 0.0;\\r\\n\\t\\t\\t\\tblending.quaternionWeight = 0.0;\\r\\n\\t\\t\\t\\tblending.scaleWeight = 0.0;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdate: ( function() {\\r\\n\\r\\n\\t\\tvar points = [];\\r\\n\\t\\tvar target = new THREE.Vector3();\\r\\n\\t\\tvar newVector = new THREE.Vector3();\\r\\n\\t\\tvar newQuat = new THREE.Quaternion();\\r\\n\\r\\n\\t\\t// Catmull-Rom spline\\r\\n\\r\\n\\t\\tvar interpolateCatmullRom = function ( points, scale ) {\\r\\n\\r\\n\\t\\t\\tvar c = [], v3 = [],\\r\\n\\t\\t\\tpoint, intPoint, weight, w2, w3,\\r\\n\\t\\t\\tpa, pb, pc, pd;\\r\\n\\r\\n\\t\\t\\tpoint = ( points.length - 1 ) * scale;\\r\\n\\t\\t\\tintPoint = Math.floor( point );\\r\\n\\t\\t\\tweight = point - intPoint;\\r\\n\\r\\n\\t\\t\\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\\r\\n\\t\\t\\tc[ 1 ] = intPoint;\\r\\n\\t\\t\\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\\r\\n\\t\\t\\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\\r\\n\\r\\n\\t\\t\\tpa = points[ c[ 0 ] ];\\r\\n\\t\\t\\tpb = points[ c[ 1 ] ];\\r\\n\\t\\t\\tpc = points[ c[ 2 ] ];\\r\\n\\t\\t\\tpd = points[ c[ 3 ] ];\\r\\n\\r\\n\\t\\t\\tw2 = weight * weight;\\r\\n\\t\\t\\tw3 = weight * w2;\\r\\n\\r\\n\\t\\t\\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\\r\\n\\t\\t\\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\\r\\n\\t\\t\\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\\r\\n\\r\\n\\t\\t\\treturn v3;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\\r\\n\\r\\n\\t\\t\\tvar v0 = ( p2 - p0 ) * 0.5,\\r\\n\\t\\t\\t\\tv1 = ( p3 - p1 ) * 0.5;\\r\\n\\r\\n\\t\\t\\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\treturn function ( delta ) {\\r\\n\\r\\n\\t\\t\\tif ( this.isPlaying === false ) return;\\r\\n\\r\\n\\t\\t\\tthis.currentTime += delta * this.timeScale;\\r\\n\\r\\n\\t\\t\\tif ( this.weight === 0 )\\r\\n\\t\\t\\t\\treturn;\\r\\n\\r\\n\\t\\t\\t//\\r\\n\\r\\n\\t\\t\\tvar duration = this.data.length;\\r\\n\\r\\n\\t\\t\\tif ( this.currentTime > duration || this.currentTime < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( this.loop ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.currentTime %= duration;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( this.currentTime < 0 )\\r\\n\\t\\t\\t\\t\\t\\tthis.currentTime += duration;\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.reset();\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.stop();\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar object = this.hierarchy[ h ];\\r\\n\\t\\t\\t\\tvar animationCache = object.animationCache.animations[ this.data.name ];\\r\\n\\t\\t\\t\\tvar blending = object.animationCache.blending;\\r\\n\\r\\n\\t\\t\\t\\t// loop through pos/rot/scl\\r\\n\\r\\n\\t\\t\\t\\tfor ( var t = 0; t < 3; t ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// get keys\\r\\n\\r\\n\\t\\t\\t\\t\\tvar type    = this.keyTypes[ t ];\\r\\n\\t\\t\\t\\t\\tvar prevKey = animationCache.prevKey[ type ];\\r\\n\\t\\t\\t\\t\\tvar nextKey = animationCache.nextKey[ type ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\\r\\n\\t\\t\\t\\t\\t\\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\\r\\n\\t\\t\\t\\t\\t\\tnextKey = this.getNextKeyWith( type, h, 1 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tprevKey = nextKey;\\r\\n\\t\\t\\t\\t\\t\\t\\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tanimationCache.prevKey[ type ] = prevKey;\\r\\n\\t\\t\\t\\t\\t\\tanimationCache.nextKey[ type ] = nextKey;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\\r\\n\\r\\n\\t\\t\\t\\t\\tvar prevXYZ = prevKey[ type ];\\r\\n\\t\\t\\t\\t\\tvar nextXYZ = nextKey[ type ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( scale < 0 ) scale = 0;\\r\\n\\t\\t\\t\\t\\tif ( scale > 1 ) scale = 1;\\r\\n\\r\\n\\t\\t\\t\\t\\t// interpolate\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( type === \\\"pos\\\" ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\\r\\n\\t\\t\\t\\t\\t\\t\\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\\r\\n\\t\\t\\t\\t\\t\\t\\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// blend\\r\\n\\t\\t\\t\\t\\t\\t\\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\\r\\n\\t\\t\\t\\t\\t\\t\\tobject.position.lerp( newVector, proportionalWeight );\\r\\n\\t\\t\\t\\t\\t\\t\\tblending.positionWeight += this.weight;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tpoints[ 0 ] = this.getPrevKeyWith( \\\"pos\\\", h, prevKey.index - 1 )[ \\\"pos\\\" ];\\r\\n\\t\\t\\t\\t\\t\\t\\tpoints[ 1 ] = prevXYZ;\\r\\n\\t\\t\\t\\t\\t\\t\\tpoints[ 2 ] = nextXYZ;\\r\\n\\t\\t\\t\\t\\t\\t\\tpoints[ 3 ] = this.getNextKeyWith( \\\"pos\\\", h, nextKey.index + 1 )[ \\\"pos\\\" ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tscale = scale * 0.33 + 0.33;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvar currentPoint = interpolateCatmullRom( points, scale );\\r\\n\\t\\t\\t\\t\\t\\t\\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\\r\\n\\t\\t\\t\\t\\t\\t\\tblending.positionWeight += this.weight;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// blend\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvar vector = object.position;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\\r\\n\\t\\t\\t\\t\\t\\t\\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\\r\\n\\t\\t\\t\\t\\t\\t\\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttarget.sub( vector );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttarget.y = 0;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttarget.normalize();\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tvar angle = Math.atan2( target.x, target.z );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tobject.rotation.set( 0, angle, 0 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( type === \\\"rot\\\" ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Avoid paying the cost of an additional slerp if we don't have to\\r\\n\\t\\t\\t\\t\\t\\tif ( blending.quaternionWeight === 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tobject.quaternion.copy( newQuat );\\r\\n\\t\\t\\t\\t\\t\\t\\tblending.quaternionWeight = this.weight;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\\r\\n\\t\\t\\t\\t\\t\\t\\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\\r\\n\\t\\t\\t\\t\\t\\t\\tblending.quaternionWeight += this.weight;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t} else if ( type === \\\"scl\\\" ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\\r\\n\\t\\t\\t\\t\\t\\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\\r\\n\\t\\t\\t\\t\\t\\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\\r\\n\\t\\t\\t\\t\\t\\tobject.scale.lerp( newVector, proportionalWeight );\\r\\n\\t\\t\\t\\t\\t\\tblending.scaleWeight += this.weight;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t} )(),\\r\\n\\r\\n\\tgetNextKeyWith: function ( type, h, key ) {\\r\\n\\r\\n\\t\\tvar keys = this.data.hierarchy[ h ].keys;\\r\\n\\r\\n\\t\\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\\r\\n\\t\\t\\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\\r\\n\\r\\n\\t\\t\\tkey = key < keys.length - 1 ? key : keys.length - 1;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tkey = key % keys.length;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( ; key < keys.length; key ++ ) {\\r\\n\\r\\n\\t\\t\\tif ( keys[ key ][ type ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\treturn keys[ key ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.data.hierarchy[ h ].keys[ 0 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetPrevKeyWith: function ( type, h, key ) {\\r\\n\\r\\n\\t\\tvar keys = this.data.hierarchy[ h ].keys;\\r\\n\\r\\n\\t\\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\\r\\n\\t\\t\\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\\r\\n\\r\\n\\t\\t\\tkey = key > 0 ? key : 0;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tkey = key >= 0 ? key : key + keys.length;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\tfor ( ; key >= 0; key -- ) {\\r\\n\\r\\n\\t\\t\\tif ( keys[ key ][ type ] !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\treturn keys[ key ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\""
		},
		{
			"_id": "AnimationHandler",
			"name": "AnimationHandler.js",
			"source": "\"/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n */\\r\\n\\r\\nTHREE.AnimationHandler = {\\r\\n\\r\\n\\tLINEAR: 0,\\r\\n\\tCATMULLROM: 1,\\r\\n\\tCATMULLROM_FORWARD: 2,\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tadd: function () {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\\r\\n\\r\\n\\t},\\r\\n\\tget: function () {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\\r\\n\\r\\n\\t},\\r\\n\\tremove: function () {\\r\\n\\r\\n\\t\\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t//\\r\\n\\r\\n\\tanimations: [],\\r\\n\\r\\n\\tinit: function ( data ) {\\r\\n\\r\\n\\t\\tif ( data.initialized === true ) return data;\\r\\n\\r\\n\\t\\t// loop through all keys\\r\\n\\r\\n\\t\\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\\r\\n\\r\\n\\t\\t\\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t// remove minus times\\r\\n\\r\\n\\t\\t\\t\\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t data.hierarchy[ h ].keys[ k ].time = 0;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// create quaternions\\r\\n\\r\\n\\t\\t\\t\\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\\r\\n\\t\\t\\t\\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\\r\\n\\t\\t\\t\\t\\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// prepare morph target keys\\r\\n\\r\\n\\t\\t\\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t// get all used\\r\\n\\r\\n\\t\\t\\t\\tvar usedMorphTargets = {};\\r\\n\\r\\n\\t\\t\\t\\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\\r\\n\\t\\t\\t\\t\\t\\tusedMorphTargets[ morphTargetName ] = - 1;\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t// set all used on all frames\\r\\n\\r\\n\\t\\t\\t\\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tvar influences = {};\\r\\n\\r\\n\\t\\t\\t\\t\\tfor ( var morphTargetName in usedMorphTargets ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tinfluences[ morphTargetName ] = 0;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t\\t// remove all keys that are on the same time\\r\\n\\r\\n\\t\\t\\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tdata.hierarchy[ h ].keys.splice( k, 1 );\\r\\n\\t\\t\\t\\t\\tk --;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t\\t// set index\\r\\n\\r\\n\\t\\t\\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tdata.hierarchy[ h ].keys[ k ].index = k;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tdata.initialized = true;\\r\\n\\r\\n\\t\\treturn data;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tparse: function ( root ) {\\r\\n\\r\\n\\t\\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\\r\\n\\r\\n\\t\\t\\thierarchy.push( root );\\r\\n\\r\\n\\t\\t\\tfor ( var c = 0; c < root.children.length; c ++ )\\r\\n\\t\\t\\t\\tparseRecurseHierarchy( root.children[ c ], hierarchy );\\r\\n\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// setup hierarchy\\r\\n\\r\\n\\t\\tvar hierarchy = [];\\r\\n\\r\\n\\t\\tif ( root instanceof THREE.SkinnedMesh ) {\\r\\n\\r\\n\\t\\t\\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\\r\\n\\r\\n\\t\\t\\t\\thierarchy.push( root.skeleton.bones[ b ] );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tparseRecurseHierarchy( root, hierarchy );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn hierarchy;\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tplay: function ( animation ) {\\r\\n\\r\\n\\t\\tif ( this.animations.indexOf( animation ) === - 1 ) {\\r\\n\\r\\n\\t\\t\\tthis.animations.push( animation );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tstop: function ( animation ) {\\r\\n\\r\\n\\t\\tvar index = this.animations.indexOf( animation );\\r\\n\\r\\n\\t\\tif ( index !== - 1 ) {\\r\\n\\r\\n\\t\\t\\tthis.animations.splice( index, 1 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdate: function ( deltaTimeMS ) {\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < this.animations.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.animations[ i ].resetBlendWeights();\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( var i = 0; i < this.animations.length; i ++ ) {\\r\\n\\r\\n\\t\\t\\tthis.animations[ i ].update( deltaTimeMS );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\""
		},
		{
			"_id": "KeyFrameAnimation",
			"name": "KeyFrameAnimation.js",
			"source": "\"/**\\r\\n * @author mikael emtinger / http://gomo.se/\\r\\n * @author mrdoob / http://mrdoob.com/\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author khang duong\\r\\n * @author erik kitson\\r\\n */\\r\\n\\r\\nTHREE.KeyFrameAnimation = function ( data ) {\\r\\n\\r\\n\\tthis.root = data.node;\\r\\n\\tthis.data = THREE.AnimationHandler.init( data );\\r\\n\\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\\r\\n\\tthis.currentTime = 0;\\r\\n\\tthis.timeScale = 0.001;\\r\\n\\tthis.isPlaying = false;\\r\\n\\tthis.isPaused = true;\\r\\n\\tthis.loop = true;\\r\\n\\r\\n\\t// initialize to first keyframes\\r\\n\\r\\n\\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\tvar keys = this.data.hierarchy[ h ].keys,\\r\\n\\t\\t\\tsids = this.data.hierarchy[ h ].sids,\\r\\n\\t\\t\\tobj = this.hierarchy[ h ];\\r\\n\\r\\n\\t\\tif ( keys.length && sids ) {\\r\\n\\r\\n\\t\\t\\tfor ( var s = 0; s < sids.length; s ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tvar sid = sids[ s ],\\r\\n\\t\\t\\t\\t\\tnext = this.getNextKeyWith( sid, h, 0 );\\r\\n\\r\\n\\t\\t\\t\\tif ( next ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tnext.apply( sid );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tobj.matrixAutoUpdate = false;\\r\\n\\t\\t\\tthis.data.hierarchy[ h ].node.updateMatrix();\\r\\n\\t\\t\\tobj.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.KeyFrameAnimation.prototype = {\\r\\n\\r\\n\\tconstructor: THREE.KeyFrameAnimation,\\r\\n\\r\\n\\tplay: function ( startTime ) {\\r\\n\\r\\n\\t\\tthis.currentTime = startTime !== undefined ? startTime : 0;\\r\\n\\r\\n\\t\\tif ( this.isPlaying === false ) {\\r\\n\\r\\n\\t\\t\\tthis.isPlaying = true;\\r\\n\\r\\n\\t\\t\\t// reset key cache\\r\\n\\r\\n\\t\\t\\tvar h, hl = this.hierarchy.length,\\r\\n\\t\\t\\t\\tobject,\\r\\n\\t\\t\\t\\tnode;\\r\\n\\r\\n\\t\\t\\tfor ( h = 0; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tobject = this.hierarchy[ h ];\\r\\n\\t\\t\\t\\tnode = this.data.hierarchy[ h ];\\r\\n\\r\\n\\t\\t\\t\\tif ( node.animationCache === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tnode.animationCache = {};\\r\\n\\t\\t\\t\\t\\tnode.animationCache.prevKey = null;\\r\\n\\t\\t\\t\\t\\tnode.animationCache.nextKey = null;\\r\\n\\t\\t\\t\\t\\tnode.animationCache.originalMatrix = object.matrix;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tvar keys = this.data.hierarchy[ h ].keys;\\r\\n\\r\\n\\t\\t\\t\\tif ( keys.length > 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tnode.animationCache.prevKey = keys[ 0 ];\\r\\n\\t\\t\\t\\t\\tnode.animationCache.nextKey = keys[ 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\\r\\n\\t\\t\\t\\t\\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.update( 0 );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.isPaused = false;\\r\\n\\t},\\r\\n\\r\\n\\tstop: function () {\\r\\n\\r\\n\\t\\tthis.isPlaying = false;\\r\\n\\t\\tthis.isPaused  = false;\\r\\n\\r\\n\\t\\t// reset JIT matrix and remove cache\\r\\n\\r\\n\\t\\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\\r\\n\\r\\n\\t\\t\\tvar obj = this.hierarchy[ h ];\\r\\n\\t\\t\\tvar node = this.data.hierarchy[ h ];\\r\\n\\r\\n\\t\\t\\tif ( node.animationCache !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tvar original = node.animationCache.originalMatrix;\\r\\n\\r\\n\\t\\t\\t\\toriginal.copy( obj.matrix );\\r\\n\\t\\t\\t\\tobj.matrix = original;\\r\\n\\r\\n\\t\\t\\t\\tdelete node.animationCache;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tupdate: function ( delta ) {\\r\\n\\r\\n\\t\\tif ( this.isPlaying === false ) return;\\r\\n\\r\\n\\t\\tthis.currentTime += delta * this.timeScale;\\r\\n\\r\\n\\t\\t//\\r\\n\\r\\n\\t\\tvar duration = this.data.length;\\r\\n\\r\\n\\t\\tif ( this.loop === true && this.currentTime > duration ) {\\r\\n\\r\\n\\t\\t\\tthis.currentTime %= duration;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.currentTime = Math.min( this.currentTime, duration );\\r\\n\\r\\n\\t\\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\\r\\n\\r\\n\\t\\t\\tvar object = this.hierarchy[ h ];\\r\\n\\t\\t\\tvar node = this.data.hierarchy[ h ];\\r\\n\\r\\n\\t\\t\\tvar keys = node.keys,\\r\\n\\t\\t\\t\\tanimationCache = node.animationCache;\\r\\n\\r\\n\\r\\n\\t\\t\\tif ( keys.length ) {\\r\\n\\r\\n\\t\\t\\t\\tvar prevKey = animationCache.prevKey;\\r\\n\\t\\t\\t\\tvar nextKey = animationCache.nextKey;\\r\\n\\r\\n\\t\\t\\t\\tif ( nextKey.time <= this.currentTime ) {\\r\\n\\r\\n\\t\\t\\t\\t\\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tprevKey = nextKey;\\r\\n\\t\\t\\t\\t\\t\\tnextKey = keys[ prevKey.index + 1 ];\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tanimationCache.prevKey = prevKey;\\r\\n\\t\\t\\t\\t\\tanimationCache.nextKey = nextKey;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( nextKey.time >= this.currentTime ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tprevKey.interpolate( nextKey, this.currentTime );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\tprevKey.interpolate( nextKey, nextKey.time );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tthis.data.hierarchy[ h ].node.updateMatrix();\\r\\n\\t\\t\\t\\tobject.matrixWorldNeedsUpdate = true;\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetNextKeyWith: function ( sid, h, key ) {\\r\\n\\r\\n\\t\\tvar keys = this.data.hierarchy[ h ].keys;\\r\\n\\t\\tkey = key % keys.length;\\r\\n\\r\\n\\t\\tfor ( ; key < keys.length; key ++ ) {\\r\\n\\r\\n\\t\\t\\tif ( keys[ key ].hasTarget( sid ) ) {\\r\\n\\r\\n\\t\\t\\t\\treturn keys[ key ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn keys[ 0 ];\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tgetPrevKeyWith: function ( sid, h, key ) {\\r\\n\\r\\n\\t\\tvar keys = this.data.hierarchy[ h ].keys;\\r\\n\\t\\tkey = key >= 0 ? key : key + keys.length;\\r\\n\\r\\n\\t\\tfor ( ; key >= 0; key -- ) {\\r\\n\\r\\n\\t\\t\\tif ( keys[ key ].hasTarget( sid ) ) {\\r\\n\\r\\n\\t\\t\\t\\treturn keys[ key ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn keys[ keys.length - 1 ];\\r\\n\\r\\n\\t}\\r\\n\\r\\n};\\r\\n\""
		},
		{
			"_id": "EditorControls",
			"name": "EditorControls.js",
			"source": "\"/**\\r\\n * @author qiao / https://github.com/qiao\\r\\n * @author mrdoob / http://mrdoob.com\\r\\n * @author alteredq / http://alteredqualia.com/\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n */\\r\\n\\r\\nTHREE.EditorControls = function ( object, domElement ) {\\r\\n\\r\\n\\tdomElement = ( domElement !== undefined ) ? domElement : document;\\r\\n\\r\\n\\t// API\\r\\n\\r\\n\\tthis.enabled = true;\\r\\n\\tthis.center = new THREE.Vector3();\\r\\n\\r\\n\\t// internals\\r\\n\\r\\n\\tvar scope = this;\\r\\n\\tvar vector = new THREE.Vector3();\\r\\n\\r\\n\\tvar STATE = { NONE: - 1, ROTATE: 0, ZOOM: 1, PAN: 2 };\\r\\n\\tvar state = STATE.NONE;\\r\\n\\r\\n\\tvar center = this.center;\\r\\n\\tvar normalMatrix = new THREE.Matrix3();\\r\\n\\tvar pointer = new THREE.Vector2();\\r\\n\\tvar pointerOld = new THREE.Vector2();\\r\\n\\tvar spherical = new THREE.Spherical();\\r\\n\\r\\n\\t// events\\r\\n\\r\\n\\tvar changeEvent = { type: 'change' };\\r\\n\\r\\n\\tthis.focus = function ( target, frame ) {\\r\\n\\r\\n\\t\\tvar scale = new THREE.Vector3();\\r\\n\\t\\ttarget.matrixWorld.decompose( center, new THREE.Quaternion(), scale );\\r\\n\\r\\n\\t\\tif ( frame && target.geometry ) {\\r\\n\\r\\n\\t\\t\\tscale = ( scale.x + scale.y + scale.z ) / 3;\\r\\n\\t\\t\\tcenter.add( target.geometry.boundingSphere.center.clone().multiplyScalar( scale ) );\\r\\n\\t\\t\\tvar radius = target.geometry.boundingSphere.radius * ( scale );\\r\\n\\t\\t\\tvar pos = object.position.clone().sub( center ).normalize().multiplyScalar( radius * 2 );\\r\\n\\t\\t\\tobject.position.copy( center ).add( pos );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tobject.lookAt( center );\\r\\n\\r\\n\\t\\tscope.dispatchEvent( changeEvent );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.pan = function ( delta ) {\\r\\n\\r\\n\\t\\tvar distance = object.position.distanceTo( center );\\r\\n\\r\\n\\t\\tdelta.multiplyScalar( distance * 0.001 );\\r\\n\\t\\tdelta.applyMatrix3( normalMatrix.getNormalMatrix( object.matrix ) );\\r\\n\\r\\n\\t\\tobject.position.add( delta );\\r\\n\\t\\tcenter.add( delta );\\r\\n\\r\\n\\t\\tscope.dispatchEvent( changeEvent );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.zoom = function ( delta ) {\\r\\n\\r\\n\\t\\tvar distance = object.position.distanceTo( center );\\r\\n\\r\\n\\t\\tdelta.multiplyScalar( distance * 0.001 );\\r\\n\\r\\n\\t\\tif ( delta.length() > distance ) return;\\r\\n\\r\\n\\t\\tdelta.applyMatrix3( normalMatrix.getNormalMatrix( object.matrix ) );\\r\\n\\r\\n\\t\\tobject.position.add( delta );\\r\\n\\r\\n\\t\\tscope.dispatchEvent( changeEvent );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tthis.rotate = function ( delta ) {\\r\\n\\r\\n\\t\\tvector.copy( object.position ).sub( center );\\r\\n\\r\\n\\t\\tspherical.setFromVector3( vector );\\r\\n\\r\\n\\t\\tspherical.theta += delta.x;\\r\\n\\t\\tspherical.phi += delta.y;\\r\\n\\r\\n\\t\\tspherical.makeSafe();\\r\\n\\r\\n\\t\\tvector.setFromSpherical( spherical );\\r\\n\\r\\n\\t\\tobject.position.copy( center ).add( vector );\\r\\n\\r\\n\\t\\tobject.lookAt( center );\\r\\n\\r\\n\\t\\tscope.dispatchEvent( changeEvent );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\t// mouse\\r\\n\\r\\n\\tfunction onMouseDown( event ) {\\r\\n\\r\\n\\t\\tif ( scope.enabled === false ) return;\\r\\n\\r\\n\\t\\tif ( event.button === 0 ) {\\r\\n\\r\\n\\t\\t\\tstate = STATE.ROTATE;\\r\\n\\r\\n\\t\\t} else if ( event.button === 1 ) {\\r\\n\\r\\n\\t\\t\\tstate = STATE.ZOOM;\\r\\n\\r\\n\\t\\t} else if ( event.button === 2 ) {\\r\\n\\r\\n\\t\\t\\tstate = STATE.PAN;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tpointerOld.set( event.clientX, event.clientY );\\r\\n\\r\\n\\t\\tdomElement.addEventListener( 'mousemove', onMouseMove, false );\\r\\n\\t\\tdomElement.addEventListener( 'mouseup', onMouseUp, false );\\r\\n\\t\\tdomElement.addEventListener( 'mouseout', onMouseUp, false );\\r\\n\\t\\tdomElement.addEventListener( 'dblclick', onMouseUp, false );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onMouseMove( event ) {\\r\\n\\r\\n\\t\\tif ( scope.enabled === false ) return;\\r\\n\\r\\n\\t\\tpointer.set( event.clientX, event.clientY );\\r\\n\\r\\n\\t\\tvar movementX = pointer.x - pointerOld.x;\\r\\n\\t\\tvar movementY = pointer.y - pointerOld.y;\\r\\n\\r\\n\\t\\tif ( state === STATE.ROTATE ) {\\r\\n\\r\\n\\t\\t\\tscope.rotate( new THREE.Vector3( - movementX * 0.005, - movementY * 0.005, 0 ) );\\r\\n\\r\\n\\t\\t} else if ( state === STATE.ZOOM ) {\\r\\n\\r\\n\\t\\t\\tscope.zoom( new THREE.Vector3( 0, 0, movementY ) );\\r\\n\\r\\n\\t\\t} else if ( state === STATE.PAN ) {\\r\\n\\r\\n\\t\\t\\tscope.pan( new THREE.Vector3( - movementX, movementY, 0 ) );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tpointerOld.set( event.clientX, event.clientY );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onMouseUp( event ) {\\r\\n\\r\\n\\t\\tdomElement.removeEventListener( 'mousemove', onMouseMove, false );\\r\\n\\t\\tdomElement.removeEventListener( 'mouseup', onMouseUp, false );\\r\\n\\t\\tdomElement.removeEventListener( 'mouseout', onMouseUp, false );\\r\\n\\t\\tdomElement.removeEventListener( 'dblclick', onMouseUp, false );\\r\\n\\r\\n\\t\\tstate = STATE.NONE;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction onMouseWheel( event ) {\\r\\n\\r\\n\\t\\tevent.preventDefault();\\r\\n\\r\\n\\t\\t// if ( scope.enabled === false ) return;\\r\\n\\r\\n\\t\\tvar delta = 0;\\r\\n\\r\\n\\t\\tif ( event.wheelDelta ) {\\r\\n\\r\\n\\t\\t\\t// WebKit / Opera / Explorer 9\\r\\n\\r\\n\\t\\t\\tdelta = - event.wheelDelta;\\r\\n\\r\\n\\t\\t} else if ( event.detail ) {\\r\\n\\r\\n\\t\\t\\t// Firefox\\r\\n\\r\\n\\t\\t\\tdelta = event.detail * 10;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tscope.zoom( new THREE.Vector3( 0, 0, delta ) );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction contextmenu( event ) {\\r\\n\\r\\n\\t\\tevent.preventDefault();\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tthis.dispose = function() {\\r\\n\\r\\n\\t\\tdomElement.removeEventListener( 'contextmenu', contextmenu, false );\\r\\n\\t\\tdomElement.removeEventListener( 'mousedown', onMouseDown, false );\\r\\n\\t\\tdomElement.removeEventListener( 'mousewheel', onMouseWheel, false );\\r\\n\\t\\tdomElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\\r\\n\\r\\n\\t\\tdomElement.removeEventListener( 'mousemove', onMouseMove, false );\\r\\n\\t\\tdomElement.removeEventListener( 'mouseup', onMouseUp, false );\\r\\n\\t\\tdomElement.removeEventListener( 'mouseout', onMouseUp, false );\\r\\n\\t\\tdomElement.removeEventListener( 'dblclick', onMouseUp, false );\\r\\n\\r\\n\\t\\tdomElement.removeEventListener( 'touchstart', touchStart, false );\\r\\n\\t\\tdomElement.removeEventListener( 'touchmove', touchMove, false );\\r\\n\\r\\n\\t};\\r\\n\\r\\n\\tdomElement.addEventListener( 'contextmenu', contextmenu, false );\\r\\n\\tdomElement.addEventListener( 'mousedown', onMouseDown, false );\\r\\n\\tdomElement.addEventListener( 'mousewheel', onMouseWheel, false );\\r\\n\\tdomElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\\r\\n\\r\\n\\t// touch\\r\\n\\r\\n\\tvar touch = new THREE.Vector3();\\r\\n\\r\\n\\tvar touches = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\\r\\n\\tvar prevTouches = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\\r\\n\\r\\n\\tvar prevDistance = null;\\r\\n\\r\\n\\tfunction touchStart( event ) {\\r\\n\\r\\n\\t\\tif ( scope.enabled === false ) return;\\r\\n\\r\\n\\t\\tswitch ( event.touches.length ) {\\r\\n\\r\\n\\t\\t\\tcase 1:\\r\\n\\t\\t\\t\\ttouches[ 0 ].set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY, 0 );\\r\\n\\t\\t\\t\\ttouches[ 1 ].set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY, 0 );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 2:\\r\\n\\t\\t\\t\\ttouches[ 0 ].set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY, 0 );\\r\\n\\t\\t\\t\\ttouches[ 1 ].set( event.touches[ 1 ].pageX, event.touches[ 1 ].pageY, 0 );\\r\\n\\t\\t\\t\\tprevDistance = touches[ 0 ].distanceTo( touches[ 1 ] );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tprevTouches[ 0 ].copy( touches[ 0 ] );\\r\\n\\t\\tprevTouches[ 1 ].copy( touches[ 1 ] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\tfunction touchMove( event ) {\\r\\n\\r\\n\\t\\tif ( scope.enabled === false ) return;\\r\\n\\r\\n\\t\\tevent.preventDefault();\\r\\n\\t\\tevent.stopPropagation();\\r\\n\\r\\n\\t\\tfunction getClosest( touch, touches ) {\\r\\n\\r\\n\\t\\t\\tvar closest = touches[ 0 ];\\r\\n\\r\\n\\t\\t\\tfor ( var i in touches ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( closest.distanceTo( touch ) > touches[ i ].distanceTo( touch ) ) closest = touches[ i ];\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn closest;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tswitch ( event.touches.length ) {\\r\\n\\r\\n\\t\\t\\tcase 1:\\r\\n\\t\\t\\t\\ttouches[ 0 ].set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY, 0 );\\r\\n\\t\\t\\t\\ttouches[ 1 ].set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY, 0 );\\r\\n\\t\\t\\t\\tscope.rotate( touches[ 0 ].sub( getClosest( touches[ 0 ], prevTouches ) ).multiplyScalar( - 0.005 ) );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t\\tcase 2:\\r\\n\\t\\t\\t\\ttouches[ 0 ].set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY, 0 );\\r\\n\\t\\t\\t\\ttouches[ 1 ].set( event.touches[ 1 ].pageX, event.touches[ 1 ].pageY, 0 );\\r\\n\\t\\t\\t\\tdistance = touches[ 0 ].distanceTo( touches[ 1 ] );\\r\\n\\t\\t\\t\\tscope.zoom( new THREE.Vector3( 0, 0, prevDistance - distance ) );\\r\\n\\t\\t\\t\\tprevDistance = distance;\\r\\n\\r\\n\\r\\n\\t\\t\\t\\tvar offset0 = touches[ 0 ].clone().sub( getClosest( touches[ 0 ], prevTouches ) );\\r\\n\\t\\t\\t\\tvar offset1 = touches[ 1 ].clone().sub( getClosest( touches[ 1 ], prevTouches ) );\\r\\n\\t\\t\\t\\toffset0.x = - offset0.x;\\r\\n\\t\\t\\t\\toffset1.x = - offset1.x;\\r\\n\\r\\n\\t\\t\\t\\tscope.pan( offset0.add( offset1 ).multiplyScalar( 0.5 ) );\\r\\n\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tprevTouches[ 0 ].copy( touches[ 0 ] );\\r\\n\\t\\tprevTouches[ 1 ].copy( touches[ 1 ] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tdomElement.addEventListener( 'touchstart', touchStart, false );\\r\\n\\tdomElement.addEventListener( 'touchmove', touchMove, false );\\r\\n\\r\\n};\\r\\n\\r\\nTHREE.EditorControls.prototype = Object.create( THREE.EventDispatcher.prototype );\\r\\nTHREE.EditorControls.prototype.constructor = THREE.EditorControls;\\r\\n\""
		},
		{
			"name": "TransformControls.js",
			"source": "\"/**\\n * @author arodic / https://github.com/arodic\\n */\\n\\n( function () {\\n\\n\\t'use strict';\\n\\n\\tvar GizmoMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.MeshBasicMaterial.call( this );\\n\\n\\t\\tthis.depthTest = false;\\n\\t\\tthis.depthWrite = false;\\n\\t\\tthis.side = THREE.FrontSide;\\n\\t\\tthis.transparent = true;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t\\tthis.oldColor = this.color.clone();\\n\\t\\tthis.oldOpacity = this.opacity;\\n\\n\\t\\tthis.highlight = function( highlighted ) {\\n\\n\\t\\t\\tif ( highlighted ) {\\n\\n\\t\\t\\t\\tthis.color.setRGB( 1, 1, 0 );\\n\\t\\t\\t\\tthis.opacity = 1;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.color.copy( this.oldColor );\\n\\t\\t\\t\\tthis.opacity = this.oldOpacity;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\tGizmoMaterial.prototype = Object.create( THREE.MeshBasicMaterial.prototype );\\n\\tGizmoMaterial.prototype.constructor = GizmoMaterial;\\n\\n\\n\\tvar GizmoLineMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.LineBasicMaterial.call( this );\\n\\n\\t\\tthis.depthTest = false;\\n\\t\\tthis.depthWrite = false;\\n\\t\\tthis.transparent = true;\\n\\t\\tthis.linewidth = 1;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t\\tthis.oldColor = this.color.clone();\\n\\t\\tthis.oldOpacity = this.opacity;\\n\\n\\t\\tthis.highlight = function( highlighted ) {\\n\\n\\t\\t\\tif ( highlighted ) {\\n\\n\\t\\t\\t\\tthis.color.setRGB( 1, 1, 0 );\\n\\t\\t\\t\\tthis.opacity = 1;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.color.copy( this.oldColor );\\n\\t\\t\\t\\tthis.opacity = this.oldOpacity;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\tGizmoLineMaterial.prototype = Object.create( THREE.LineBasicMaterial.prototype );\\n\\tGizmoLineMaterial.prototype.constructor = GizmoLineMaterial;\\n\\n\\n\\tvar pickerMaterial = new GizmoMaterial( { visible: false, transparent: false } );\\n\\n\\n\\tTHREE.TransformGizmo = function () {\\n\\n\\t\\tvar scope = this;\\n\\n\\t\\tthis.init = function () {\\n\\n\\t\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\t\\tthis.handles = new THREE.Object3D();\\n\\t\\t\\tthis.pickers = new THREE.Object3D();\\n\\t\\t\\tthis.planes = new THREE.Object3D();\\n\\n\\t\\t\\tthis.add( this.handles );\\n\\t\\t\\tthis.add( this.pickers );\\n\\t\\t\\tthis.add( this.planes );\\n\\n\\t\\t\\t//// PLANES\\n\\n\\t\\t\\tvar planeGeometry = new THREE.PlaneBufferGeometry( 50, 50, 2, 2 );\\n\\t\\t\\tvar planeMaterial = new THREE.MeshBasicMaterial( { visible: false, side: THREE.DoubleSide } );\\n\\n\\t\\t\\tvar planes = {\\n\\t\\t\\t\\t\\\"XY\\\":   new THREE.Mesh( planeGeometry, planeMaterial ),\\n\\t\\t\\t\\t\\\"YZ\\\":   new THREE.Mesh( planeGeometry, planeMaterial ),\\n\\t\\t\\t\\t\\\"XZ\\\":   new THREE.Mesh( planeGeometry, planeMaterial ),\\n\\t\\t\\t\\t\\\"XYZE\\\": new THREE.Mesh( planeGeometry, planeMaterial )\\n\\t\\t\\t};\\n\\n\\t\\t\\tthis.activePlane = planes[ \\\"XYZE\\\" ];\\n\\n\\t\\t\\tplanes[ \\\"YZ\\\" ].rotation.set( 0, Math.PI / 2, 0 );\\n\\t\\t\\tplanes[ \\\"XZ\\\" ].rotation.set( - Math.PI / 2, 0, 0 );\\n\\n\\t\\t\\tfor ( var i in planes ) {\\n\\n\\t\\t\\t\\tplanes[ i ].name = i;\\n\\t\\t\\t\\tthis.planes.add( planes[ i ] );\\n\\t\\t\\t\\tthis.planes[ i ] = planes[ i ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//// HANDLES AND PICKERS\\n\\n\\t\\t\\tvar setupGizmos = function( gizmoMap, parent ) {\\n\\n\\t\\t\\t\\tfor ( var name in gizmoMap ) {\\n\\n\\t\\t\\t\\t\\tfor ( i = gizmoMap[ name ].length; i --; ) {\\n\\n\\t\\t\\t\\t\\t\\tvar object = gizmoMap[ name ][ i ][ 0 ];\\n\\t\\t\\t\\t\\t\\tvar position = gizmoMap[ name ][ i ][ 1 ];\\n\\t\\t\\t\\t\\t\\tvar rotation = gizmoMap[ name ][ i ][ 2 ];\\n\\n\\t\\t\\t\\t\\t\\tobject.name = name;\\n\\n\\t\\t\\t\\t\\t\\tif ( position ) object.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\\n\\t\\t\\t\\t\\t\\tif ( rotation ) object.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\\n\\n\\t\\t\\t\\t\\t\\tparent.add( object );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tsetupGizmos( this.handleGizmos, this.handles );\\n\\t\\t\\tsetupGizmos( this.pickerGizmos, this.pickers );\\n\\n\\t\\t\\t// reset Transformations\\n\\n\\t\\t\\tthis.traverse( function ( child ) {\\n\\n\\t\\t\\t\\tif ( child instanceof THREE.Mesh ) {\\n\\n\\t\\t\\t\\t\\tchild.updateMatrix();\\n\\n\\t\\t\\t\\t\\tvar tempGeometry = child.geometry.clone();\\n\\t\\t\\t\\t\\ttempGeometry.applyMatrix( child.matrix );\\n\\t\\t\\t\\t\\tchild.geometry = tempGeometry;\\n\\n\\t\\t\\t\\t\\tchild.position.set( 0, 0, 0 );\\n\\t\\t\\t\\t\\tchild.rotation.set( 0, 0, 0 );\\n\\t\\t\\t\\t\\tchild.scale.set( 1, 1, 1 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} );\\n\\n\\t\\t};\\n\\n\\t\\tthis.highlight = function ( axis ) {\\n\\n\\t\\t\\tthis.traverse( function( child ) {\\n\\n\\t\\t\\t\\tif ( child.material && child.material.highlight ) {\\n\\n\\t\\t\\t\\t\\tif ( child.name === axis ) {\\n\\n\\t\\t\\t\\t\\t\\tchild.material.highlight( true );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tchild.material.highlight( false );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} );\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.TransformGizmo.prototype = Object.create( THREE.Object3D.prototype );\\n\\tTHREE.TransformGizmo.prototype.constructor = THREE.TransformGizmo;\\n\\n\\tTHREE.TransformGizmo.prototype.update = function ( rotation, eye ) {\\n\\n\\t\\tvar vec1 = new THREE.Vector3( 0, 0, 0 );\\n\\t\\tvar vec2 = new THREE.Vector3( 0, 1, 0 );\\n\\t\\tvar lookAtMatrix = new THREE.Matrix4();\\n\\n\\t\\tthis.traverse( function( child ) {\\n\\n\\t\\t\\tif ( child.name.search( \\\"E\\\" ) !== - 1 ) {\\n\\n\\t\\t\\t\\tchild.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( eye, vec1, vec2 ) );\\n\\n\\t\\t\\t} else if ( child.name.search( \\\"X\\\" ) !== - 1 || child.name.search( \\\"Y\\\" ) !== - 1 || child.name.search( \\\"Z\\\" ) !== - 1 ) {\\n\\n\\t\\t\\t\\tchild.quaternion.setFromEuler( rotation );\\n\\n\\t\\t\\t}\\n\\n\\t\\t} );\\n\\n\\t};\\n\\n\\tTHREE.TransformGizmoTranslate = function () {\\n\\n\\t\\tTHREE.TransformGizmo.call( this );\\n\\n\\t\\tvar arrowGeometry = new THREE.Geometry();\\n\\t\\tvar mesh = new THREE.Mesh( new THREE.CylinderGeometry( 0, 0.05, 0.2, 12, 1, false ) );\\n\\t\\tmesh.position.y = 0.5;\\n\\t\\tmesh.updateMatrix();\\n\\n\\t\\tarrowGeometry.merge( mesh.geometry, mesh.matrix );\\n\\n\\t\\tvar lineXGeometry = new THREE.BufferGeometry();\\n\\t\\tlineXGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0,  1, 0, 0 ], 3 ) );\\n\\n\\t\\tvar lineYGeometry = new THREE.BufferGeometry();\\n\\t\\tlineYGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0,  0, 1, 0 ], 3 ) );\\n\\n\\t\\tvar lineZGeometry = new THREE.BufferGeometry();\\n\\t\\tlineZGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0,  0, 0, 1 ], 3 ) );\\n\\n\\t\\tthis.handleGizmos = {\\n\\n\\t\\t\\tX: [\\n\\t\\t\\t\\t[ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xff0000 } ) ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ],\\n\\t\\t\\t\\t[ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tY: [\\n\\t\\t\\t\\t[ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x00ff00 } ) ), [ 0, 0.5, 0 ] ],\\n\\t\\t\\t\\t[\\tnew THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ] ],\\n\\t\\t\\t\\t[ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tXYZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.OctahedronGeometry( 0.1, 0 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, 0, 0 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tXY: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xffff00, opacity: 0.25 } ) ), [ 0.15, 0.15, 0 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tYZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tXZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ] ]\\n\\t\\t\\t]\\n\\n\\t\\t};\\n\\n\\t\\tthis.pickerGizmos = {\\n\\n\\t\\t\\tX: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tY: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0, 0.6, 0 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tXYZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.OctahedronGeometry( 0.2, 0 ), pickerMaterial ) ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tXY: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), pickerMaterial ), [ 0.2, 0.2, 0 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tYZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), pickerMaterial ), [ 0, 0.2, 0.2 ], [ 0, Math.PI / 2, 0 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tXZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), pickerMaterial ), [ 0.2, 0, 0.2 ], [ - Math.PI / 2, 0, 0 ] ]\\n\\t\\t\\t]\\n\\n\\t\\t};\\n\\n\\t\\tthis.setActivePlane = function ( axis, eye ) {\\n\\n\\t\\t\\tvar tempMatrix = new THREE.Matrix4();\\n\\t\\t\\teye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \\\"XY\\\" ].matrixWorld ) ) );\\n\\n\\t\\t\\tif ( axis === \\\"X\\\" ) {\\n\\n\\t\\t\\t\\tthis.activePlane = this.planes[ \\\"XY\\\" ];\\n\\n\\t\\t\\t\\tif ( Math.abs( eye.y ) > Math.abs( eye.z ) ) this.activePlane = this.planes[ \\\"XZ\\\" ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( axis === \\\"Y\\\" ) {\\n\\n\\t\\t\\t\\tthis.activePlane = this.planes[ \\\"XY\\\" ];\\n\\n\\t\\t\\t\\tif ( Math.abs( eye.x ) > Math.abs( eye.z ) ) this.activePlane = this.planes[ \\\"YZ\\\" ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( axis === \\\"Z\\\" ) {\\n\\n\\t\\t\\t\\tthis.activePlane = this.planes[ \\\"XZ\\\" ];\\n\\n\\t\\t\\t\\tif ( Math.abs( eye.x ) > Math.abs( eye.y ) ) this.activePlane = this.planes[ \\\"YZ\\\" ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( axis === \\\"XYZ\\\" ) this.activePlane = this.planes[ \\\"XYZE\\\" ];\\n\\n\\t\\t\\tif ( axis === \\\"XY\\\" ) this.activePlane = this.planes[ \\\"XY\\\" ];\\n\\n\\t\\t\\tif ( axis === \\\"YZ\\\" ) this.activePlane = this.planes[ \\\"YZ\\\" ];\\n\\n\\t\\t\\tif ( axis === \\\"XZ\\\" ) this.activePlane = this.planes[ \\\"XZ\\\" ];\\n\\n\\t\\t};\\n\\n\\t\\tthis.init();\\n\\n\\t};\\n\\n\\tTHREE.TransformGizmoTranslate.prototype = Object.create( THREE.TransformGizmo.prototype );\\n\\tTHREE.TransformGizmoTranslate.prototype.constructor = THREE.TransformGizmoTranslate;\\n\\n\\tTHREE.TransformGizmoRotate = function () {\\n\\n\\t\\tTHREE.TransformGizmo.call( this );\\n\\n\\t\\tvar CircleGeometry = function ( radius, facing, arc ) {\\n\\n\\t\\t\\tvar geometry = new THREE.BufferGeometry();\\n\\t\\t\\tvar vertices = [];\\n\\t\\t\\tarc = arc ? arc : 1;\\n\\n\\t\\t\\tfor ( var i = 0; i <= 64 * arc; ++ i ) {\\n\\n\\t\\t\\t\\tif ( facing === 'x' ) vertices.push( 0, Math.cos( i / 32 * Math.PI ) * radius, Math.sin( i / 32 * Math.PI ) * radius );\\n\\t\\t\\t\\tif ( facing === 'y' ) vertices.push( Math.cos( i / 32 * Math.PI ) * radius, 0, Math.sin( i / 32 * Math.PI ) * radius );\\n\\t\\t\\t\\tif ( facing === 'z' ) vertices.push( Math.sin( i / 32 * Math.PI ) * radius, Math.cos( i / 32 * Math.PI ) * radius, 0 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( vertices, 3 ) );\\n\\t\\t\\treturn geometry;\\n\\n\\t\\t};\\n\\n\\t\\tthis.handleGizmos = {\\n\\n\\t\\t\\tX: [\\n\\t\\t\\t\\t[ new THREE.Line( new CircleGeometry( 1, 'x', 0.5 ), new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tY: [\\n\\t\\t\\t\\t[ new THREE.Line( new CircleGeometry( 1, 'y', 0.5 ), new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tZ: [\\n\\t\\t\\t\\t[ new THREE.Line( new CircleGeometry( 1, 'z', 0.5 ), new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tE: [\\n\\t\\t\\t\\t[ new THREE.Line( new CircleGeometry( 1.25, 'z', 1 ), new GizmoLineMaterial( { color: 0xcccc00 } ) ) ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tXYZE: [\\n\\t\\t\\t\\t[ new THREE.Line( new CircleGeometry( 1, 'z', 1 ), new GizmoLineMaterial( { color: 0x787878 } ) ) ]\\n\\t\\t\\t]\\n\\n\\t\\t};\\n\\n\\t\\tthis.pickerGizmos = {\\n\\n\\t\\t\\tX: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, Math.PI ), pickerMaterial ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tY: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, Math.PI ), pickerMaterial ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, Math.PI ), pickerMaterial ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tE: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1.25, 0.12, 2, 24 ), pickerMaterial ) ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tXYZE: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.Geometry() ) ]// TODO\\n\\t\\t\\t]\\n\\n\\t\\t};\\n\\n\\t\\tthis.setActivePlane = function ( axis ) {\\n\\n\\t\\t\\tif ( axis === \\\"E\\\" ) this.activePlane = this.planes[ \\\"XYZE\\\" ];\\n\\n\\t\\t\\tif ( axis === \\\"X\\\" ) this.activePlane = this.planes[ \\\"YZ\\\" ];\\n\\n\\t\\t\\tif ( axis === \\\"Y\\\" ) this.activePlane = this.planes[ \\\"XZ\\\" ];\\n\\n\\t\\t\\tif ( axis === \\\"Z\\\" ) this.activePlane = this.planes[ \\\"XY\\\" ];\\n\\n\\t\\t};\\n\\n\\t\\tthis.update = function ( rotation, eye2 ) {\\n\\n\\t\\t\\tTHREE.TransformGizmo.prototype.update.apply( this, arguments );\\n\\n\\t\\t\\tvar group = {\\n\\n\\t\\t\\t\\thandles: this[ \\\"handles\\\" ],\\n\\t\\t\\t\\tpickers: this[ \\\"pickers\\\" ],\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tvar tempMatrix = new THREE.Matrix4();\\n\\t\\t\\tvar worldRotation = new THREE.Euler( 0, 0, 1 );\\n\\t\\t\\tvar tempQuaternion = new THREE.Quaternion();\\n\\t\\t\\tvar unitX = new THREE.Vector3( 1, 0, 0 );\\n\\t\\t\\tvar unitY = new THREE.Vector3( 0, 1, 0 );\\n\\t\\t\\tvar unitZ = new THREE.Vector3( 0, 0, 1 );\\n\\t\\t\\tvar quaternionX = new THREE.Quaternion();\\n\\t\\t\\tvar quaternionY = new THREE.Quaternion();\\n\\t\\t\\tvar quaternionZ = new THREE.Quaternion();\\n\\t\\t\\tvar eye = eye2.clone();\\n\\n\\t\\t\\tworldRotation.copy( this.planes[ \\\"XY\\\" ].rotation );\\n\\t\\t\\ttempQuaternion.setFromEuler( worldRotation );\\n\\n\\t\\t\\ttempMatrix.makeRotationFromQuaternion( tempQuaternion ).getInverse( tempMatrix );\\n\\t\\t\\teye.applyMatrix4( tempMatrix );\\n\\n\\t\\t\\tthis.traverse( function( child ) {\\n\\n\\t\\t\\t\\ttempQuaternion.setFromEuler( worldRotation );\\n\\n\\t\\t\\t\\tif ( child.name === \\\"X\\\" ) {\\n\\n\\t\\t\\t\\t\\tquaternionX.setFromAxisAngle( unitX, Math.atan2( - eye.y, eye.z ) );\\n\\t\\t\\t\\t\\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\\n\\t\\t\\t\\t\\tchild.quaternion.copy( tempQuaternion );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( child.name === \\\"Y\\\" ) {\\n\\n\\t\\t\\t\\t\\tquaternionY.setFromAxisAngle( unitY, Math.atan2( eye.x, eye.z ) );\\n\\t\\t\\t\\t\\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\\n\\t\\t\\t\\t\\tchild.quaternion.copy( tempQuaternion );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( child.name === \\\"Z\\\" ) {\\n\\n\\t\\t\\t\\t\\tquaternionZ.setFromAxisAngle( unitZ, Math.atan2( eye.y, eye.x ) );\\n\\t\\t\\t\\t\\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\\n\\t\\t\\t\\t\\tchild.quaternion.copy( tempQuaternion );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} );\\n\\n\\t\\t};\\n\\n\\t\\tthis.init();\\n\\n\\t};\\n\\n\\tTHREE.TransformGizmoRotate.prototype = Object.create( THREE.TransformGizmo.prototype );\\n\\tTHREE.TransformGizmoRotate.prototype.constructor = THREE.TransformGizmoRotate;\\n\\n\\tTHREE.TransformGizmoScale = function () {\\n\\n\\t\\tTHREE.TransformGizmo.call( this );\\n\\n\\t\\tvar arrowGeometry = new THREE.Geometry();\\n\\t\\tvar mesh = new THREE.Mesh( new THREE.BoxGeometry( 0.125, 0.125, 0.125 ) );\\n\\t\\tmesh.position.y = 0.5;\\n\\t\\tmesh.updateMatrix();\\n\\n\\t\\tarrowGeometry.merge( mesh.geometry, mesh.matrix );\\n\\n\\t\\tvar lineXGeometry = new THREE.BufferGeometry();\\n\\t\\tlineXGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0,  1, 0, 0 ], 3 ) );\\n\\n\\t\\tvar lineYGeometry = new THREE.BufferGeometry();\\n\\t\\tlineYGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0,  0, 1, 0 ], 3 ) );\\n\\n\\t\\tvar lineZGeometry = new THREE.BufferGeometry();\\n\\t\\tlineZGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0,  0, 0, 1 ], 3 ) );\\n\\n\\t\\tthis.handleGizmos = {\\n\\n\\t\\t\\tX: [\\n\\t\\t\\t\\t[ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xff0000 } ) ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ],\\n\\t\\t\\t\\t[ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tY: [\\n\\t\\t\\t\\t[ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x00ff00 } ) ), [ 0, 0.5, 0 ] ],\\n\\t\\t\\t\\t[ new THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ] ],\\n\\t\\t\\t\\t[ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tXYZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.125, 0.125, 0.125 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\\n\\t\\t\\t]\\n\\n\\t\\t};\\n\\n\\t\\tthis.pickerGizmos = {\\n\\n\\t\\t\\tX: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tY: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0, 0.6, 0 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ] ]\\n\\t\\t\\t],\\n\\n\\t\\t\\tXYZ: [\\n\\t\\t\\t\\t[ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.4, 0.4, 0.4 ), pickerMaterial ) ]\\n\\t\\t\\t]\\n\\n\\t\\t};\\n\\n\\t\\tthis.setActivePlane = function ( axis, eye ) {\\n\\n\\t\\t\\tvar tempMatrix = new THREE.Matrix4();\\n\\t\\t\\teye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \\\"XY\\\" ].matrixWorld ) ) );\\n\\n\\t\\t\\tif ( axis === \\\"X\\\" ) {\\n\\n\\t\\t\\t\\tthis.activePlane = this.planes[ \\\"XY\\\" ];\\n\\t\\t\\t\\tif ( Math.abs( eye.y ) > Math.abs( eye.z ) ) this.activePlane = this.planes[ \\\"XZ\\\" ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( axis === \\\"Y\\\" ) {\\n\\n\\t\\t\\t\\tthis.activePlane = this.planes[ \\\"XY\\\" ];\\n\\t\\t\\t\\tif ( Math.abs( eye.x ) > Math.abs( eye.z ) ) this.activePlane = this.planes[ \\\"YZ\\\" ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( axis === \\\"Z\\\" ) {\\n\\n\\t\\t\\t\\tthis.activePlane = this.planes[ \\\"XZ\\\" ];\\n\\t\\t\\t\\tif ( Math.abs( eye.x ) > Math.abs( eye.y ) ) this.activePlane = this.planes[ \\\"YZ\\\" ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( axis === \\\"XYZ\\\" ) this.activePlane = this.planes[ \\\"XYZE\\\" ];\\n\\n\\t\\t};\\n\\n\\t\\tthis.init();\\n\\n\\t};\\n\\n\\tTHREE.TransformGizmoScale.prototype = Object.create( THREE.TransformGizmo.prototype );\\n\\tTHREE.TransformGizmoScale.prototype.constructor = THREE.TransformGizmoScale;\\n\\n\\tTHREE.TransformControls = function ( camera, domElement ) {\\n\\n\\t\\t// TODO: Make non-uniform scale and rotate play nice in hierarchies\\n\\t\\t// TODO: ADD RXYZ contol\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tdomElement = ( domElement !== undefined ) ? domElement : document;\\n\\n\\t\\tthis.object = undefined;\\n\\t\\tthis.visible = false;\\n\\t\\tthis.translationSnap = null;\\n\\t\\tthis.rotationSnap = null;\\n\\t\\tthis.space = \\\"world\\\";\\n\\t\\tthis.size = 1;\\n\\t\\tthis.axis = null;\\n\\n\\t\\tvar scope = this;\\n\\n\\t\\tvar _mode = \\\"translate\\\";\\n\\t\\tvar _dragging = false;\\n\\t\\tvar _plane = \\\"XY\\\";\\n\\t\\tvar _gizmo = {\\n\\n\\t\\t\\t\\\"translate\\\": new THREE.TransformGizmoTranslate(),\\n\\t\\t\\t\\\"rotate\\\": new THREE.TransformGizmoRotate(),\\n\\t\\t\\t\\\"scale\\\": new THREE.TransformGizmoScale()\\n\\t\\t};\\n\\n\\t\\tfor ( var type in _gizmo ) {\\n\\n\\t\\t\\tvar gizmoObj = _gizmo[ type ];\\n\\n\\t\\t\\tgizmoObj.visible = ( type === _mode );\\n\\t\\t\\tthis.add( gizmoObj );\\n\\n\\t\\t}\\n\\n\\t\\tvar changeEvent = { type: \\\"change\\\" };\\n\\t\\tvar mouseDownEvent = { type: \\\"mouseDown\\\" };\\n\\t\\tvar mouseUpEvent = { type: \\\"mouseUp\\\", mode: _mode };\\n\\t\\tvar objectChangeEvent = { type: \\\"objectChange\\\" };\\n\\n\\t\\tvar ray = new THREE.Raycaster();\\n\\t\\tvar pointerVector = new THREE.Vector2();\\n\\n\\t\\tvar point = new THREE.Vector3();\\n\\t\\tvar offset = new THREE.Vector3();\\n\\n\\t\\tvar rotation = new THREE.Vector3();\\n\\t\\tvar offsetRotation = new THREE.Vector3();\\n\\t\\tvar scale = 1;\\n\\n\\t\\tvar lookAtMatrix = new THREE.Matrix4();\\n\\t\\tvar eye = new THREE.Vector3();\\n\\n\\t\\tvar tempMatrix = new THREE.Matrix4();\\n\\t\\tvar tempVector = new THREE.Vector3();\\n\\t\\tvar tempQuaternion = new THREE.Quaternion();\\n\\t\\tvar unitX = new THREE.Vector3( 1, 0, 0 );\\n\\t\\tvar unitY = new THREE.Vector3( 0, 1, 0 );\\n\\t\\tvar unitZ = new THREE.Vector3( 0, 0, 1 );\\n\\n\\t\\tvar quaternionXYZ = new THREE.Quaternion();\\n\\t\\tvar quaternionX = new THREE.Quaternion();\\n\\t\\tvar quaternionY = new THREE.Quaternion();\\n\\t\\tvar quaternionZ = new THREE.Quaternion();\\n\\t\\tvar quaternionE = new THREE.Quaternion();\\n\\n\\t\\tvar oldPosition = new THREE.Vector3();\\n\\t\\tvar oldScale = new THREE.Vector3();\\n\\t\\tvar oldRotationMatrix = new THREE.Matrix4();\\n\\n\\t\\tvar parentRotationMatrix  = new THREE.Matrix4();\\n\\t\\tvar parentScale = new THREE.Vector3();\\n\\n\\t\\tvar worldPosition = new THREE.Vector3();\\n\\t\\tvar worldRotation = new THREE.Euler();\\n\\t\\tvar worldRotationMatrix  = new THREE.Matrix4();\\n\\t\\tvar camPosition = new THREE.Vector3();\\n\\t\\tvar camRotation = new THREE.Euler();\\n\\n\\t\\tdomElement.addEventListener( \\\"mousedown\\\", onPointerDown, false );\\n\\t\\tdomElement.addEventListener( \\\"touchstart\\\", onPointerDown, false );\\n\\n\\t\\tdomElement.addEventListener( \\\"mousemove\\\", onPointerHover, false );\\n\\t\\tdomElement.addEventListener( \\\"touchmove\\\", onPointerHover, false );\\n\\n\\t\\tdomElement.addEventListener( \\\"mousemove\\\", onPointerMove, false );\\n\\t\\tdomElement.addEventListener( \\\"touchmove\\\", onPointerMove, false );\\n\\n\\t\\tdomElement.addEventListener( \\\"mouseup\\\", onPointerUp, false );\\n\\t\\tdomElement.addEventListener( \\\"mouseout\\\", onPointerUp, false );\\n\\t\\tdomElement.addEventListener( \\\"touchend\\\", onPointerUp, false );\\n\\t\\tdomElement.addEventListener( \\\"touchcancel\\\", onPointerUp, false );\\n\\t\\tdomElement.addEventListener( \\\"touchleave\\\", onPointerUp, false );\\n\\n\\t\\tthis.dispose = function () {\\n\\n\\t\\t\\tdomElement.removeEventListener( \\\"mousedown\\\", onPointerDown );\\n\\t\\t\\tdomElement.removeEventListener( \\\"touchstart\\\", onPointerDown );\\n\\n\\t\\t\\tdomElement.removeEventListener( \\\"mousemove\\\", onPointerHover );\\n\\t\\t\\tdomElement.removeEventListener( \\\"touchmove\\\", onPointerHover );\\n\\n\\t\\t\\tdomElement.removeEventListener( \\\"mousemove\\\", onPointerMove );\\n\\t\\t\\tdomElement.removeEventListener( \\\"touchmove\\\", onPointerMove );\\n\\n\\t\\t\\tdomElement.removeEventListener( \\\"mouseup\\\", onPointerUp );\\n\\t\\t\\tdomElement.removeEventListener( \\\"mouseout\\\", onPointerUp );\\n\\t\\t\\tdomElement.removeEventListener( \\\"touchend\\\", onPointerUp );\\n\\t\\t\\tdomElement.removeEventListener( \\\"touchcancel\\\", onPointerUp );\\n\\t\\t\\tdomElement.removeEventListener( \\\"touchleave\\\", onPointerUp );\\n\\n\\t\\t};\\n\\n\\t\\tthis.attach = function ( object ) {\\n\\n\\t\\t\\tthis.object = object;\\n\\t\\t\\tthis.visible = true;\\n\\t\\t\\tthis.update();\\n\\n\\t\\t};\\n\\n\\t\\tthis.detach = function () {\\n\\n\\t\\t\\tthis.object = undefined;\\n\\t\\t\\tthis.visible = false;\\n\\t\\t\\tthis.axis = null;\\n\\n\\t\\t};\\n\\n\\t\\tthis.getMode = function () {\\n\\n\\t\\t\\treturn _mode;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setMode = function ( mode ) {\\n\\n\\t\\t\\t_mode = mode ? mode : _mode;\\n\\n\\t\\t\\tif ( _mode === \\\"scale\\\" ) scope.space = \\\"local\\\";\\n\\n\\t\\t\\tfor ( var type in _gizmo ) _gizmo[ type ].visible = ( type === _mode );\\n\\n\\t\\t\\tthis.update();\\n\\t\\t\\tscope.dispatchEvent( changeEvent );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setTranslationSnap = function ( translationSnap ) {\\n\\n\\t\\t\\tscope.translationSnap = translationSnap;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setRotationSnap = function ( rotationSnap ) {\\n\\n\\t\\t\\tscope.rotationSnap = rotationSnap;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setSize = function ( size ) {\\n\\n\\t\\t\\tscope.size = size;\\n\\t\\t\\tthis.update();\\n\\t\\t\\tscope.dispatchEvent( changeEvent );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setSpace = function ( space ) {\\n\\n\\t\\t\\tscope.space = space;\\n\\t\\t\\tthis.update();\\n\\t\\t\\tscope.dispatchEvent( changeEvent );\\n\\n\\t\\t};\\n\\n\\t\\tthis.update = function () {\\n\\n\\t\\t\\tif ( scope.object === undefined ) return;\\n\\n\\t\\t\\tscope.object.updateMatrixWorld();\\n\\t\\t\\tworldPosition.setFromMatrixPosition( scope.object.matrixWorld );\\n\\t\\t\\tworldRotation.setFromRotationMatrix( tempMatrix.extractRotation( scope.object.matrixWorld ) );\\n\\n\\t\\t\\tcamera.updateMatrixWorld();\\n\\t\\t\\tcamPosition.setFromMatrixPosition( camera.matrixWorld );\\n\\t\\t\\tcamRotation.setFromRotationMatrix( tempMatrix.extractRotation( camera.matrixWorld ) );\\n\\n\\t\\t\\tscale = worldPosition.distanceTo( camPosition ) / 6 * scope.size;\\n\\t\\t\\tthis.position.copy( worldPosition );\\n\\t\\t\\tthis.scale.set( scale, scale, scale );\\n\\n\\t\\t\\teye.copy( camPosition ).sub( worldPosition ).normalize();\\n\\n\\t\\t\\tif ( scope.space === \\\"local\\\" ) {\\n\\n\\t\\t\\t\\t_gizmo[ _mode ].update( worldRotation, eye );\\n\\n\\t\\t\\t} else if ( scope.space === \\\"world\\\" ) {\\n\\n\\t\\t\\t\\t_gizmo[ _mode ].update( new THREE.Euler(), eye );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t_gizmo[ _mode ].highlight( scope.axis );\\n\\n\\t\\t};\\n\\n\\t\\tfunction onPointerHover( event ) {\\n\\n\\t\\t\\tif ( scope.object === undefined || _dragging === true || ( event.button !== undefined && event.button !== 0 ) ) return;\\n\\n\\t\\t\\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\\n\\n\\t\\t\\tvar intersect = intersectObjects( pointer, _gizmo[ _mode ].pickers.children );\\n\\n\\t\\t\\tvar axis = null;\\n\\n\\t\\t\\tif ( intersect ) {\\n\\n\\t\\t\\t\\taxis = intersect.object.name;\\n\\n\\t\\t\\t\\tevent.preventDefault();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( scope.axis !== axis ) {\\n\\n\\t\\t\\t\\tscope.axis = axis;\\n\\t\\t\\t\\tscope.update();\\n\\t\\t\\t\\tscope.dispatchEvent( changeEvent );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction onPointerDown( event ) {\\n\\n\\t\\t\\tif ( scope.object === undefined || _dragging === true || ( event.button !== undefined && event.button !== 0 ) ) return;\\n\\n\\t\\t\\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\\n\\n\\t\\t\\tif ( pointer.button === 0 || pointer.button === undefined ) {\\n\\n\\t\\t\\t\\tvar intersect = intersectObjects( pointer, _gizmo[ _mode ].pickers.children );\\n\\n\\t\\t\\t\\tif ( intersect ) {\\n\\n\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\tevent.stopPropagation();\\n\\n\\t\\t\\t\\t\\tscope.dispatchEvent( mouseDownEvent );\\n\\n\\t\\t\\t\\t\\tscope.axis = intersect.object.name;\\n\\n\\t\\t\\t\\t\\tscope.update();\\n\\n\\t\\t\\t\\t\\teye.copy( camPosition ).sub( worldPosition ).normalize();\\n\\n\\t\\t\\t\\t\\t_gizmo[ _mode ].setActivePlane( scope.axis, eye );\\n\\n\\t\\t\\t\\t\\tvar planeIntersect = intersectObjects( pointer, [ _gizmo[ _mode ].activePlane ] );\\n\\n\\t\\t\\t\\t\\tif ( planeIntersect ) {\\n\\n\\t\\t\\t\\t\\t\\toldPosition.copy( scope.object.position );\\n\\t\\t\\t\\t\\t\\toldScale.copy( scope.object.scale );\\n\\n\\t\\t\\t\\t\\t\\toldRotationMatrix.extractRotation( scope.object.matrix );\\n\\t\\t\\t\\t\\t\\tworldRotationMatrix.extractRotation( scope.object.matrixWorld );\\n\\n\\t\\t\\t\\t\\t\\tparentRotationMatrix.extractRotation( scope.object.parent.matrixWorld );\\n\\t\\t\\t\\t\\t\\tparentScale.setFromMatrixScale( tempMatrix.getInverse( scope.object.parent.matrixWorld ) );\\n\\n\\t\\t\\t\\t\\t\\toffset.copy( planeIntersect.point );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t_dragging = true;\\n\\n\\t\\t}\\n\\n\\t\\tfunction onPointerMove( event ) {\\n\\n\\t\\t\\tif ( scope.object === undefined || scope.axis === null || _dragging === false || ( event.button !== undefined && event.button !== 0 ) ) return;\\n\\n\\t\\t\\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\\n\\n\\t\\t\\tvar planeIntersect = intersectObjects( pointer, [ _gizmo[ _mode ].activePlane ] );\\n\\n\\t\\t\\tif ( planeIntersect === false ) return;\\n\\n\\t\\t\\tevent.preventDefault();\\n\\t\\t\\tevent.stopPropagation();\\n\\n\\t\\t\\tpoint.copy( planeIntersect.point );\\n\\n\\t\\t\\tif ( _mode === \\\"translate\\\" ) {\\n\\n\\t\\t\\t\\tpoint.sub( offset );\\n\\t\\t\\t\\tpoint.multiply( parentScale );\\n\\n\\t\\t\\t\\tif ( scope.space === \\\"local\\\" ) {\\n\\n\\t\\t\\t\\t\\tpoint.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\\n\\n\\t\\t\\t\\t\\tif ( scope.axis.search( \\\"X\\\" ) === - 1 ) point.x = 0;\\n\\t\\t\\t\\t\\tif ( scope.axis.search( \\\"Y\\\" ) === - 1 ) point.y = 0;\\n\\t\\t\\t\\t\\tif ( scope.axis.search( \\\"Z\\\" ) === - 1 ) point.z = 0;\\n\\n\\t\\t\\t\\t\\tpoint.applyMatrix4( oldRotationMatrix );\\n\\n\\t\\t\\t\\t\\tscope.object.position.copy( oldPosition );\\n\\t\\t\\t\\t\\tscope.object.position.add( point );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( scope.space === \\\"world\\\" || scope.axis.search( \\\"XYZ\\\" ) !== - 1 ) {\\n\\n\\t\\t\\t\\t\\tif ( scope.axis.search( \\\"X\\\" ) === - 1 ) point.x = 0;\\n\\t\\t\\t\\t\\tif ( scope.axis.search( \\\"Y\\\" ) === - 1 ) point.y = 0;\\n\\t\\t\\t\\t\\tif ( scope.axis.search( \\\"Z\\\" ) === - 1 ) point.z = 0;\\n\\n\\t\\t\\t\\t\\tpoint.applyMatrix4( tempMatrix.getInverse( parentRotationMatrix ) );\\n\\n\\t\\t\\t\\t\\tscope.object.position.copy( oldPosition );\\n\\t\\t\\t\\t\\tscope.object.position.add( point );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( scope.translationSnap !== null ) {\\n\\n\\t\\t\\t\\t\\tif ( scope.space === \\\"local\\\" ) {\\n\\n\\t\\t\\t\\t\\t\\tscope.object.position.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( scope.axis.search( \\\"X\\\" ) !== - 1 ) scope.object.position.x = Math.round( scope.object.position.x / scope.translationSnap ) * scope.translationSnap;\\n\\t\\t\\t\\t\\tif ( scope.axis.search( \\\"Y\\\" ) !== - 1 ) scope.object.position.y = Math.round( scope.object.position.y / scope.translationSnap ) * scope.translationSnap;\\n\\t\\t\\t\\t\\tif ( scope.axis.search( \\\"Z\\\" ) !== - 1 ) scope.object.position.z = Math.round( scope.object.position.z / scope.translationSnap ) * scope.translationSnap;\\n\\n\\t\\t\\t\\t\\tif ( scope.space === \\\"local\\\" ) {\\n\\n\\t\\t\\t\\t\\t\\tscope.object.position.applyMatrix4( worldRotationMatrix );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( _mode === \\\"scale\\\" ) {\\n\\n\\t\\t\\t\\tpoint.sub( offset );\\n\\t\\t\\t\\tpoint.multiply( parentScale );\\n\\n\\t\\t\\t\\tif ( scope.space === \\\"local\\\" ) {\\n\\n\\t\\t\\t\\t\\tif ( scope.axis === \\\"XYZ\\\" ) {\\n\\n\\t\\t\\t\\t\\t\\tscale = 1 + ( ( point.y ) / Math.max( oldScale.x, oldScale.y, oldScale.z ) );\\n\\n\\t\\t\\t\\t\\t\\tscope.object.scale.x = oldScale.x * scale;\\n\\t\\t\\t\\t\\t\\tscope.object.scale.y = oldScale.y * scale;\\n\\t\\t\\t\\t\\t\\tscope.object.scale.z = oldScale.z * scale;\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tpoint.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\\n\\n\\t\\t\\t\\t\\t\\tif ( scope.axis === \\\"X\\\" ) scope.object.scale.x = oldScale.x * ( 1 + point.x / oldScale.x );\\n\\t\\t\\t\\t\\t\\tif ( scope.axis === \\\"Y\\\" ) scope.object.scale.y = oldScale.y * ( 1 + point.y / oldScale.y );\\n\\t\\t\\t\\t\\t\\tif ( scope.axis === \\\"Z\\\" ) scope.object.scale.z = oldScale.z * ( 1 + point.z / oldScale.z );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( _mode === \\\"rotate\\\" ) {\\n\\n\\t\\t\\t\\tpoint.sub( worldPosition );\\n\\t\\t\\t\\tpoint.multiply( parentScale );\\n\\t\\t\\t\\ttempVector.copy( offset ).sub( worldPosition );\\n\\t\\t\\t\\ttempVector.multiply( parentScale );\\n\\n\\t\\t\\t\\tif ( scope.axis === \\\"E\\\" ) {\\n\\n\\t\\t\\t\\t\\tpoint.applyMatrix4( tempMatrix.getInverse( lookAtMatrix ) );\\n\\t\\t\\t\\t\\ttempVector.applyMatrix4( tempMatrix.getInverse( lookAtMatrix ) );\\n\\n\\t\\t\\t\\t\\trotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\\n\\t\\t\\t\\t\\toffsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\\n\\n\\t\\t\\t\\t\\ttempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\\n\\n\\t\\t\\t\\t\\tquaternionE.setFromAxisAngle( eye, rotation.z - offsetRotation.z );\\n\\t\\t\\t\\t\\tquaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\\n\\n\\t\\t\\t\\t\\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionE );\\n\\t\\t\\t\\t\\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\\n\\n\\t\\t\\t\\t\\tscope.object.quaternion.copy( tempQuaternion );\\n\\n\\t\\t\\t\\t} else if ( scope.axis === \\\"XYZE\\\" ) {\\n\\n\\t\\t\\t\\t\\tquaternionE.setFromEuler( point.clone().cross( tempVector ).normalize() ); // rotation axis\\n\\n\\t\\t\\t\\t\\ttempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\\n\\t\\t\\t\\t\\tquaternionX.setFromAxisAngle( quaternionE, - point.clone().angleTo( tempVector ) );\\n\\t\\t\\t\\t\\tquaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\\n\\n\\t\\t\\t\\t\\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\\n\\t\\t\\t\\t\\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\\n\\n\\t\\t\\t\\t\\tscope.object.quaternion.copy( tempQuaternion );\\n\\n\\t\\t\\t\\t} else if ( scope.space === \\\"local\\\" ) {\\n\\n\\t\\t\\t\\t\\tpoint.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\\n\\n\\t\\t\\t\\t\\ttempVector.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\\n\\n\\t\\t\\t\\t\\trotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\\n\\t\\t\\t\\t\\toffsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\\n\\n\\t\\t\\t\\t\\tquaternionXYZ.setFromRotationMatrix( oldRotationMatrix );\\n\\n\\t\\t\\t\\t\\tif ( scope.rotationSnap !== null ) {\\n\\n\\t\\t\\t\\t\\t\\tquaternionX.setFromAxisAngle( unitX, Math.round( ( rotation.x - offsetRotation.x ) / scope.rotationSnap ) * scope.rotationSnap );\\n\\t\\t\\t\\t\\t\\tquaternionY.setFromAxisAngle( unitY, Math.round( ( rotation.y - offsetRotation.y ) / scope.rotationSnap ) * scope.rotationSnap );\\n\\t\\t\\t\\t\\t\\tquaternionZ.setFromAxisAngle( unitZ, Math.round( ( rotation.z - offsetRotation.z ) / scope.rotationSnap ) * scope.rotationSnap );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tquaternionX.setFromAxisAngle( unitX, rotation.x - offsetRotation.x );\\n\\t\\t\\t\\t\\t\\tquaternionY.setFromAxisAngle( unitY, rotation.y - offsetRotation.y );\\n\\t\\t\\t\\t\\t\\tquaternionZ.setFromAxisAngle( unitZ, rotation.z - offsetRotation.z );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( scope.axis === \\\"X\\\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionX );\\n\\t\\t\\t\\t\\tif ( scope.axis === \\\"Y\\\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionY );\\n\\t\\t\\t\\t\\tif ( scope.axis === \\\"Z\\\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionZ );\\n\\n\\t\\t\\t\\t\\tscope.object.quaternion.copy( quaternionXYZ );\\n\\n\\t\\t\\t\\t} else if ( scope.space === \\\"world\\\" ) {\\n\\n\\t\\t\\t\\t\\trotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\\n\\t\\t\\t\\t\\toffsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\\n\\n\\t\\t\\t\\t\\ttempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\\n\\n\\t\\t\\t\\t\\tif ( scope.rotationSnap !== null ) {\\n\\n\\t\\t\\t\\t\\t\\tquaternionX.setFromAxisAngle( unitX, Math.round( ( rotation.x - offsetRotation.x ) / scope.rotationSnap ) * scope.rotationSnap );\\n\\t\\t\\t\\t\\t\\tquaternionY.setFromAxisAngle( unitY, Math.round( ( rotation.y - offsetRotation.y ) / scope.rotationSnap ) * scope.rotationSnap );\\n\\t\\t\\t\\t\\t\\tquaternionZ.setFromAxisAngle( unitZ, Math.round( ( rotation.z - offsetRotation.z ) / scope.rotationSnap ) * scope.rotationSnap );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tquaternionX.setFromAxisAngle( unitX, rotation.x - offsetRotation.x );\\n\\t\\t\\t\\t\\t\\tquaternionY.setFromAxisAngle( unitY, rotation.y - offsetRotation.y );\\n\\t\\t\\t\\t\\t\\tquaternionZ.setFromAxisAngle( unitZ, rotation.z - offsetRotation.z );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tquaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\\n\\n\\t\\t\\t\\t\\tif ( scope.axis === \\\"X\\\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\\n\\t\\t\\t\\t\\tif ( scope.axis === \\\"Y\\\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\\n\\t\\t\\t\\t\\tif ( scope.axis === \\\"Z\\\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\\n\\n\\t\\t\\t\\t\\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\\n\\n\\t\\t\\t\\t\\tscope.object.quaternion.copy( tempQuaternion );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tscope.update();\\n\\t\\t\\tscope.dispatchEvent( changeEvent );\\n\\t\\t\\tscope.dispatchEvent( objectChangeEvent );\\n\\n\\t\\t}\\n\\n\\t\\tfunction onPointerUp( event ) {\\n\\n\\t\\t\\tevent.preventDefault(); // Prevent MouseEvent on mobile\\n\\n\\t\\t\\tif ( event.button !== undefined && event.button !== 0 ) return;\\n\\n\\t\\t\\tif ( _dragging && ( scope.axis !== null ) ) {\\n\\n\\t\\t\\t\\tmouseUpEvent.mode = _mode;\\n\\t\\t\\t\\tscope.dispatchEvent( mouseUpEvent );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t_dragging = false;\\n\\n\\t\\t\\tif ( event instanceof TouchEvent ) {\\n\\n\\t\\t\\t\\t// Force \\\"rollover\\\"\\n\\n\\t\\t\\t\\tscope.axis = null;\\n\\t\\t\\t\\tscope.update();\\n\\t\\t\\t\\tscope.dispatchEvent( changeEvent );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tonPointerHover( event );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction intersectObjects( pointer, objects ) {\\n\\n\\t\\t\\tvar rect = domElement.getBoundingClientRect();\\n\\t\\t\\tvar x = ( pointer.clientX - rect.left ) / rect.width;\\n\\t\\t\\tvar y = ( pointer.clientY - rect.top ) / rect.height;\\n\\n\\t\\t\\tpointerVector.set( ( x * 2 ) - 1, - ( y * 2 ) + 1 );\\n\\t\\t\\tray.setFromCamera( pointerVector, camera );\\n\\n\\t\\t\\tvar intersections = ray.intersectObjects( objects, true );\\n\\t\\t\\treturn intersections[ 0 ] ? intersections[ 0 ] : false;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.TransformControls.prototype = Object.create( THREE.Object3D.prototype );\\n\\tTHREE.TransformControls.prototype.constructor = THREE.TransformControls;\\n\\n}() );\\n\""
		},
		{
			"name": "SubdivisionModifier.js",
			"_id": "SubdivisionModifier",
			"source": "\"/*\\r\\n *\\t@author zz85 / http://twitter.com/blurspline / http://www.lab4games.net/zz85/blog\\r\\n *\\t@author centerionware / http://www.centerionware.com\\r\\n *\\r\\n *\\tSubdivision Geometry Modifier\\r\\n *\\t\\tusing Loop Subdivision Scheme\\r\\n *\\r\\n *\\tReferences:\\r\\n *\\t\\thttp://graphics.stanford.edu/~mdfisher/subdivision.html\\r\\n *\\t\\thttp://www.holmes3d.net/graphics/subdivision/\\r\\n *\\t\\thttp://www.cs.rutgers.edu/~decarlo/readings/subdiv-sg00c.pdf\\r\\n *\\r\\n *\\tKnown Issues:\\r\\n *\\t\\t- currently doesn't handle \\\"Sharp Edges\\\"\\r\\n */\\r\\n\\r\\nTHREE.SubdivisionModifier = function ( subdivisions ) {\\r\\n\\r\\n\\tthis.subdivisions = ( subdivisions === undefined ) ? 1 : subdivisions;\\r\\n\\r\\n};\\r\\n\\r\\n// Applies the \\\"modify\\\" pattern\\r\\nTHREE.SubdivisionModifier.prototype.modify = function ( geometry ) {\\r\\n\\r\\n\\tvar repeats = this.subdivisions;\\r\\n\\r\\n\\twhile ( repeats -- > 0 ) {\\r\\n\\r\\n\\t\\tthis.smooth( geometry );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tgeometry.computeFaceNormals();\\r\\n\\tgeometry.computeVertexNormals();\\r\\n\\r\\n};\\r\\n\\r\\n( function() {\\r\\n\\r\\n\\t// Some constants\\r\\n\\tvar WARNINGS = ! true; // Set to true for development\\r\\n\\tvar ABC = [ 'a', 'b', 'c' ];\\r\\n\\r\\n\\r\\n\\tfunction getEdge( a, b, map ) {\\r\\n\\r\\n\\t\\tvar vertexIndexA = Math.min( a, b );\\r\\n\\t\\tvar vertexIndexB = Math.max( a, b );\\r\\n\\r\\n\\t\\tvar key = vertexIndexA + \\\"_\\\" + vertexIndexB;\\r\\n\\r\\n\\t\\treturn map[ key ];\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\tfunction processEdge( a, b, vertices, map, face, metaVertices ) {\\r\\n\\r\\n\\t\\tvar vertexIndexA = Math.min( a, b );\\r\\n\\t\\tvar vertexIndexB = Math.max( a, b );\\r\\n\\r\\n\\t\\tvar key = vertexIndexA + \\\"_\\\" + vertexIndexB;\\r\\n\\r\\n\\t\\tvar edge;\\r\\n\\r\\n\\t\\tif ( key in map ) {\\r\\n\\r\\n\\t\\t\\tedge = map[ key ];\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\tvar vertexA = vertices[ vertexIndexA ];\\r\\n\\t\\t\\tvar vertexB = vertices[ vertexIndexB ];\\r\\n\\r\\n\\t\\t\\tedge = {\\r\\n\\r\\n\\t\\t\\t\\ta: vertexA, // pointer reference\\r\\n\\t\\t\\t\\tb: vertexB,\\r\\n\\t\\t\\t\\tnewEdge: null,\\r\\n\\t\\t\\t\\t// aIndex: a, // numbered reference\\r\\n\\t\\t\\t\\t// bIndex: b,\\r\\n\\t\\t\\t\\tfaces: [] // pointers to face\\r\\n\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\tmap[ key ] = edge;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tedge.faces.push( face );\\r\\n\\r\\n\\t\\tmetaVertices[ a ].edges.push( edge );\\r\\n\\t\\tmetaVertices[ b ].edges.push( edge );\\r\\n\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction generateLookups( vertices, faces, metaVertices, edges ) {\\r\\n\\r\\n\\t\\tvar i, il, face, edge;\\r\\n\\r\\n\\t\\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tmetaVertices[ i ] = { edges: [] };\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tface = faces[ i ];\\r\\n\\r\\n\\t\\t\\tprocessEdge( face.a, face.b, vertices, edges, face, metaVertices );\\r\\n\\t\\t\\tprocessEdge( face.b, face.c, vertices, edges, face, metaVertices );\\r\\n\\t\\t\\tprocessEdge( face.c, face.a, vertices, edges, face, metaVertices );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction newFace( newFaces, a, b, c ) {\\r\\n\\r\\n\\t\\tnewFaces.push( new THREE.Face3( a, b, c ) );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction midpoint( a, b ) {\\r\\n\\r\\n\\t\\treturn ( Math.abs( b - a ) / 2 ) + Math.min( a, b );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\tfunction newUv( newUvs, a, b, c ) {\\r\\n\\r\\n\\t\\tnewUvs.push( [ a.clone(), b.clone(), c.clone() ] );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t/////////////////////////////\\r\\n\\r\\n\\t// Performs one iteration of Subdivision\\r\\n\\tTHREE.SubdivisionModifier.prototype.smooth = function ( geometry ) {\\r\\n\\r\\n\\t\\tvar tmp = new THREE.Vector3();\\r\\n\\r\\n\\t\\tvar oldVertices, oldFaces, oldUvs;\\r\\n\\t\\tvar newVertices, newFaces, newUVs = [];\\r\\n\\r\\n\\t\\tvar n, l, i, il, j, k;\\r\\n\\t\\tvar metaVertices, sourceEdges;\\r\\n\\r\\n\\t\\t// new stuff.\\r\\n\\t\\tvar sourceEdges, newEdgeVertices, newSourceVertices;\\r\\n\\r\\n\\t\\toldVertices = geometry.vertices; // { x, y, z}\\r\\n\\t\\toldFaces = geometry.faces; // { a: oldVertex1, b: oldVertex2, c: oldVertex3 }\\r\\n\\t\\toldUvs = geometry.faceVertexUvs[ 0 ];\\r\\n\\r\\n\\t\\tvar hasUvs = oldUvs !== undefined && oldUvs.length > 0;\\r\\n\\r\\n\\t\\t/******************************************************\\r\\n\\t\\t *\\r\\n\\t\\t * Step 0: Preprocess Geometry to Generate edges Lookup\\r\\n\\t\\t *\\r\\n\\t\\t *******************************************************/\\r\\n\\r\\n\\t\\tmetaVertices = new Array( oldVertices.length );\\r\\n\\t\\tsourceEdges = {}; // Edge => { oldVertex1, oldVertex2, faces[]  }\\r\\n\\r\\n\\t\\tgenerateLookups( oldVertices, oldFaces, metaVertices, sourceEdges );\\r\\n\\r\\n\\r\\n\\t\\t/******************************************************\\r\\n\\t\\t *\\r\\n\\t\\t *\\tStep 1.\\r\\n\\t\\t *\\tFor each edge, create a new Edge Vertex,\\r\\n\\t\\t *\\tthen position it.\\r\\n\\t\\t *\\r\\n\\t\\t *******************************************************/\\r\\n\\r\\n\\t\\tnewEdgeVertices = [];\\r\\n\\t\\tvar other, currentEdge, newEdge, face;\\r\\n\\t\\tvar edgeVertexWeight, adjacentVertexWeight, connectedFaces;\\r\\n\\r\\n\\t\\tfor ( i in sourceEdges ) {\\r\\n\\r\\n\\t\\t\\tcurrentEdge = sourceEdges[ i ];\\r\\n\\t\\t\\tnewEdge = new THREE.Vector3();\\r\\n\\r\\n\\t\\t\\tedgeVertexWeight = 3 / 8;\\r\\n\\t\\t\\tadjacentVertexWeight = 1 / 8;\\r\\n\\r\\n\\t\\t\\tconnectedFaces = currentEdge.faces.length;\\r\\n\\r\\n\\t\\t\\t// check how many linked faces. 2 should be correct.\\r\\n\\t\\t\\tif ( connectedFaces != 2 ) {\\r\\n\\r\\n\\t\\t\\t\\t// if length is not 2, handle condition\\r\\n\\t\\t\\t\\tedgeVertexWeight = 0.5;\\r\\n\\t\\t\\t\\tadjacentVertexWeight = 0;\\r\\n\\r\\n\\t\\t\\t\\tif ( connectedFaces != 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( WARNINGS ) console.warn( 'Subdivision Modifier: Number of connected faces != 2, is: ', connectedFaces, currentEdge );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tnewEdge.addVectors( currentEdge.a, currentEdge.b ).multiplyScalar( edgeVertexWeight );\\r\\n\\r\\n\\t\\t\\ttmp.set( 0, 0, 0 );\\r\\n\\r\\n\\t\\t\\tfor ( j = 0; j < connectedFaces; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tface = currentEdge.faces[ j ];\\r\\n\\r\\n\\t\\t\\t\\tfor ( k = 0; k < 3; k ++ ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tother = oldVertices[ face[ ABC[ k ] ] ];\\r\\n\\t\\t\\t\\t\\tif ( other !== currentEdge.a && other !== currentEdge.b ) break;\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\ttmp.add( other );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ttmp.multiplyScalar( adjacentVertexWeight );\\r\\n\\t\\t\\tnewEdge.add( tmp );\\r\\n\\r\\n\\t\\t\\tcurrentEdge.newEdge = newEdgeVertices.length;\\r\\n\\t\\t\\tnewEdgeVertices.push( newEdge );\\r\\n\\r\\n\\t\\t\\t// console.log(currentEdge, newEdge);\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t/******************************************************\\r\\n\\t\\t *\\r\\n\\t\\t *\\tStep 2.\\r\\n\\t\\t *\\tReposition each source vertices.\\r\\n\\t\\t *\\r\\n\\t\\t *******************************************************/\\r\\n\\r\\n\\t\\tvar beta, sourceVertexWeight, connectingVertexWeight;\\r\\n\\t\\tvar connectingEdge, connectingEdges, oldVertex, newSourceVertex;\\r\\n\\t\\tnewSourceVertices = [];\\r\\n\\r\\n\\t\\tfor ( i = 0, il = oldVertices.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\toldVertex = oldVertices[ i ];\\r\\n\\r\\n\\t\\t\\t// find all connecting edges (using lookupTable)\\r\\n\\t\\t\\tconnectingEdges = metaVertices[ i ].edges;\\r\\n\\t\\t\\tn = connectingEdges.length;\\r\\n\\r\\n\\t\\t\\tif ( n == 3 ) {\\r\\n\\r\\n\\t\\t\\t\\tbeta = 3 / 16;\\r\\n\\r\\n\\t\\t\\t} else if ( n > 3 ) {\\r\\n\\r\\n\\t\\t\\t\\tbeta = 3 / ( 8 * n ); // Warren's modified formula\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Loop's original beta formula\\r\\n\\t\\t\\t// beta = 1 / n * ( 5/8 - Math.pow( 3/8 + 1/4 * Math.cos( 2 * Math. PI / n ), 2) );\\r\\n\\r\\n\\t\\t\\tsourceVertexWeight = 1 - n * beta;\\r\\n\\t\\t\\tconnectingVertexWeight = beta;\\r\\n\\r\\n\\t\\t\\tif ( n <= 2 ) {\\r\\n\\r\\n\\t\\t\\t\\t// crease and boundary rules\\r\\n\\t\\t\\t\\t// console.warn('crease and boundary rules');\\r\\n\\r\\n\\t\\t\\t\\tif ( n == 2 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( WARNINGS ) console.warn( '2 connecting edges', connectingEdges );\\r\\n\\t\\t\\t\\t\\tsourceVertexWeight = 3 / 4;\\r\\n\\t\\t\\t\\t\\tconnectingVertexWeight = 1 / 8;\\r\\n\\r\\n\\t\\t\\t\\t\\t// sourceVertexWeight = 1;\\r\\n\\t\\t\\t\\t\\t// connectingVertexWeight = 0;\\r\\n\\r\\n\\t\\t\\t\\t} else if ( n == 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( WARNINGS ) console.warn( 'only 1 connecting edge' );\\r\\n\\r\\n\\t\\t\\t\\t} else if ( n == 0 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( WARNINGS ) console.warn( '0 connecting edges' );\\r\\n\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tnewSourceVertex = oldVertex.clone().multiplyScalar( sourceVertexWeight );\\r\\n\\r\\n\\t\\t\\ttmp.set( 0, 0, 0 );\\r\\n\\r\\n\\t\\t\\tfor ( j = 0; j < n; j ++ ) {\\r\\n\\r\\n\\t\\t\\t\\tconnectingEdge = connectingEdges[ j ];\\r\\n\\t\\t\\t\\tother = connectingEdge.a !== oldVertex ? connectingEdge.a : connectingEdge.b;\\r\\n\\t\\t\\t\\ttmp.add( other );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ttmp.multiplyScalar( connectingVertexWeight );\\r\\n\\t\\t\\tnewSourceVertex.add( tmp );\\r\\n\\r\\n\\t\\t\\tnewSourceVertices.push( newSourceVertex );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\r\\n\\t\\t/******************************************************\\r\\n\\t\\t *\\r\\n\\t\\t *\\tStep 3.\\r\\n\\t\\t *\\tGenerate Faces between source vertices\\r\\n\\t\\t *\\tand edge vertices.\\r\\n\\t\\t *\\r\\n\\t\\t *******************************************************/\\r\\n\\r\\n\\t\\tnewVertices = newSourceVertices.concat( newEdgeVertices );\\r\\n\\t\\tvar sl = newSourceVertices.length, edge1, edge2, edge3;\\r\\n\\t\\tnewFaces = [];\\r\\n\\r\\n\\t\\tvar uv, x0, x1, x2;\\r\\n\\t\\tvar x3 = new THREE.Vector2();\\r\\n\\t\\tvar x4 = new THREE.Vector2();\\r\\n\\t\\tvar x5 = new THREE.Vector2();\\r\\n\\r\\n\\t\\tfor ( i = 0, il = oldFaces.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\t\\tface = oldFaces[ i ];\\r\\n\\r\\n\\t\\t\\t// find the 3 new edges vertex of each old face\\r\\n\\r\\n\\t\\t\\tedge1 = getEdge( face.a, face.b, sourceEdges ).newEdge + sl;\\r\\n\\t\\t\\tedge2 = getEdge( face.b, face.c, sourceEdges ).newEdge + sl;\\r\\n\\t\\t\\tedge3 = getEdge( face.c, face.a, sourceEdges ).newEdge + sl;\\r\\n\\r\\n\\t\\t\\t// create 4 faces.\\r\\n\\r\\n\\t\\t\\tnewFace( newFaces, edge1, edge2, edge3 );\\r\\n\\t\\t\\tnewFace( newFaces, face.a, edge1, edge3 );\\r\\n\\t\\t\\tnewFace( newFaces, face.b, edge2, edge1 );\\r\\n\\t\\t\\tnewFace( newFaces, face.c, edge3, edge2 );\\r\\n\\r\\n\\t\\t\\t// create 4 new uv's\\r\\n\\r\\n\\t\\t\\tif ( hasUvs ) {\\r\\n\\r\\n\\t\\t\\t\\tuv = oldUvs[ i ];\\r\\n\\r\\n\\t\\t\\t\\tx0 = uv[ 0 ];\\r\\n\\t\\t\\t\\tx1 = uv[ 1 ];\\r\\n\\t\\t\\t\\tx2 = uv[ 2 ];\\r\\n\\r\\n\\t\\t\\t\\tx3.set( midpoint( x0.x, x1.x ), midpoint( x0.y, x1.y ) );\\r\\n\\t\\t\\t\\tx4.set( midpoint( x1.x, x2.x ), midpoint( x1.y, x2.y ) );\\r\\n\\t\\t\\t\\tx5.set( midpoint( x0.x, x2.x ), midpoint( x0.y, x2.y ) );\\r\\n\\r\\n\\t\\t\\t\\tnewUv( newUVs, x3, x4, x5 );\\r\\n\\t\\t\\t\\tnewUv( newUVs, x0, x3, x5 );\\r\\n\\r\\n\\t\\t\\t\\tnewUv( newUVs, x1, x4, x3 );\\r\\n\\t\\t\\t\\tnewUv( newUVs, x2, x5, x4 );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Overwrite old arrays\\r\\n\\t\\tgeometry.vertices = newVertices;\\r\\n\\t\\tgeometry.faces = newFaces;\\r\\n\\t\\tif ( hasUvs ) geometry.faceVertexUvs[ 0 ] = newUVs;\\r\\n\\r\\n\\t\\t// console.log('done');\\r\\n\\r\\n\\t};\\r\\n\\r\\n} )();\\r\\n\""
		},
		{
			"name": "UVsDebug.js",
			"_id": "UVsDebug",
			"source": "\"/* \\r\\n * @author zz85 / http://github.com/zz85\\r\\n * @author WestLangley / http://github.com/WestLangley\\r\\n *\\r\\n * tool for \\\"unwrapping\\\" and debugging three.js \\r\\n * geometries UV mapping\\r\\n *\\r\\n * Sample usage:\\r\\n *\\tdocument.body.appendChild( THREE.UVsDebug( new THREE.SphereGeometry( 10, 10, 10, 10 ) );\\r\\n *\\r\\n */\\r\\n \\r\\nTHREE.UVsDebug = function( geometry, size ) {\\r\\n\\r\\n\\t// handles wrapping of uv.x > 1 only\\r\\n    \\r\\n\\tvar abc = 'abc';\\r\\n\\r\\n\\tvar uv, u, ax, ay;\\r\\n\\tvar i, il, j, jl;\\r\\n\\tvar vnum;\\r\\n\\r\\n\\tvar a = new THREE.Vector2();\\r\\n\\tvar b = new THREE.Vector2();\\r\\n\\r\\n\\tvar geo = ( geometry instanceof THREE.BufferGeometry ) ? new THREE.Geometry().fromBufferGeometry( geometry ) : geometry;\\r\\n\\r\\n\\tvar faces = geo.faces;\\r\\n\\tvar uvs = geo.faceVertexUvs[ 0 ];\\r\\n\\r\\n\\tvar canvas = document.createElement( 'canvas' );\\r\\n\\tvar width = size || 1024;   // power of 2 required for wrapping\\r\\n\\tvar height = size || 1024;\\r\\n\\tcanvas.width = width;\\r\\n\\tcanvas.height = height;\\r\\n\\r\\n\\tvar ctx = canvas.getContext( '2d' );\\r\\n\\tctx.lineWidth = 1;\\r\\n\\tctx.strokeStyle = 'rgba( 0, 0, 0, 1.0 )';\\r\\n\\tctx.textAlign = 'center';\\r\\n\\r\\n\\t// paint background white\\r\\n\\r\\n\\tctx.fillStyle = 'rgba( 255, 255, 255, 1.0 )';\\r\\n\\tctx.fillRect( 0, 0, width, height );\\r\\n\\r\\n\\tfor ( i = 0, il = uvs.length; i < il; i ++ ) {\\r\\n\\r\\n\\t\\tuv = uvs[ i ];\\r\\n\\r\\n\\t\\t// draw lines\\r\\n\\r\\n\\t\\tctx.beginPath();\\r\\n\\r\\n\\t\\ta.set( 0, 0 );\\r\\n\\r\\n\\t\\tfor ( j = 0, jl = uv.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\tu = uv[ j ];\\r\\n\\r\\n\\t\\t\\ta.x += u.x;\\r\\n\\t\\t\\ta.y += u.y;\\r\\n\\r\\n\\t\\t\\tif ( j == 0 ) {\\r\\n\\r\\n\\t\\t\\t\\tctx.moveTo( u.x * width, ( 1 - u.y ) * height );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\tctx.lineTo( u.x * width, ( 1 - u.y ) * height );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tctx.closePath();\\r\\n\\t\\tctx.stroke();\\r\\n\\r\\n\\t\\ta.divideScalar( jl );\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn canvas;\\r\\n\\r\\n};\\r\\n\\r\\n//  disable labels.\\r\\n\\r\\n/*\\r\\n\\t\\t// label the face number\\r\\n\\r\\n\\t\\tctx.font = \\\"12pt Arial bold\\\";\\r\\n\\t\\tctx.fillStyle = 'rgba( 0, 0, 0, 1.0 )';\\r\\n\\t\\tctx.fillText( i, a.x * width, ( 1 - a.y ) * height );\\r\\n\\r\\n\\t\\tif ( a.x > 0.95 ) {\\r\\n\\r\\n\\t\\t\\t// wrap x // 0.95 is arbitrary\\r\\n\\r\\n\\t\\t\\tctx.fillText( i, ( a.x % 1 ) * width, ( 1 - a.y ) * height );\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tctx.font = \\\"8pt Arial bold\\\";\\r\\n\\t\\tctx.fillStyle = 'rgba( 0, 0, 0, 1.0 )';\\r\\n\\r\\n\\t\\t// label uv edge orders\\r\\n\\r\\n\\t\\tfor ( j = 0, jl = uv.length; j < jl; j ++ ) {\\r\\n\\r\\n\\t\\t\\tu = uv[ j ];\\r\\n\\t\\t\\tb.addVectors( a, u ).divideScalar( 2 );\\r\\n\\r\\n\\t\\t\\tvnum = faces[ i ][ abc[ j ] ];\\r\\n\\t\\t\\tctx.fillText( abc[ j ] + vnum, b.x * width, ( 1 - b.y ) * height );\\r\\n\\r\\n\\t\\t\\tif ( b.x > 0.95 ) {\\r\\n\\r\\n\\t\\t\\t\\t// wrap x\\r\\n\\r\\n\\t\\t\\t\\tctx.fillText( abc[ j ] + vnum, ( b.x % 1 ) * width, ( 1 - b.y ) * height );\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\treturn canvas;\\r\\n\\r\\n};\\r\\n*/\\r\\n\\r\\n\""
		},
		{
			"name": "shader.js",
			"_id": "shader",
			"source": "\"//  shader.js\\r\\n\\r\\nvertexShader = [\\r\\n\\r\\n\\t\\\"attribute vec4 tangent;\\\",\\r\\n\\r\\n\\t\\\"uniform float time;\\\",\\r\\n\\t\\\"uniform vec2 repeat;\\\",\\r\\n\\t\\\"uniform float useNormal;\\\",\\r\\n\\t\\\"uniform float useRim;\\\",\\r\\n\\r\\n\\t\\\"varying vec2 vUv;\\\",\\r\\n\\t\\\"varying vec3 vTangent;\\\",\\r\\n\\t\\\"varying vec3 vBinormal;\\\",\\r\\n\\t\\\"varying vec3 vNormal;\\\",\\r\\n\\t\\\"varying vec3 vEye;\\\",\\r\\n\\t\\\"varying vec3 vU;\\\",\\r\\n\\t\\\"varying vec2 vN;\\\",\\r\\n\\r\\n\\t\\\"void main() {\\\",\\r\\n\\r\\n\\t\\t\\\"vU = normalize( vec3( modelViewMatrix * vec4( position, 1.0 ) ) );\\\",\\r\\n\\r\\n\\t\\t\\\"if( useNormal == 0. ) {\\\",\\r\\n\\t\\t\\t\\\"vec3 n = normalize( normalMatrix * normal );\\\",\\r\\n\\t\\t\\t\\\"vec3 r = reflect( vU, n );\\\",\\r\\n\\t\\t\\t\\\"float m = 2.0 * sqrt( r.x * r.x + r.y * r.y + ( r.z + 1.0 ) * ( r.z+1.0 ) );\\\",\\r\\n\\t\\t\\t\\\"vN = vec2( r.x / m + 0.5,  r.y / m + 0.5 );\\\",\\r\\n\\t\\t\\\"} else {\\\",\\r\\n\\t\\t\\t\\\"vN = vec2( 0. );\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\t\\\"vUv = repeat * uv;\\\",\\r\\n\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\r\\n\\r\\n\\t\\t\\\"vNormal = normalize( normalMatrix * normal );\\\",\\r\\n\\t\\t\\\"if( useNormal == 1. ) {\\\",\\r\\n\\t\\t\\t\\\"vTangent = normalize( normalMatrix * tangent.xyz );\\\",\\r\\n\\t\\t\\t\\\"vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\\\",\\r\\n\\t\\t\\\"} else {\\\",\\r\\n\\t\\t\\t\\\"vTangent = vec3( 0. );\\\",\\r\\n\\t\\t\\t\\\"vBinormal = vec3( 0. );\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\t\\\"if( useRim > 0. ) {\\\",\\r\\n\\t\\t\\t\\\"vEye = ( modelViewMatrix * vec4( position, 1.0 ) ).xyz;\\\",\\r\\n\\t\\t\\\"} else {\\\",\\r\\n\\t\\t\\t\\\"vEye = vec3( 0. );\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\\"}\\\"\\r\\n\\r\\n].join(\\\" \\\");\\r\\n\\r\\nfragmentShader = [\\r\\n\\r\\n\\t\\\"uniform float time;\\\",\\r\\n\\t\\\"uniform float bump;\\\",\\r\\n\\t\\\"uniform sampler2D tNormal;\\\",\\r\\n\\t\\\"uniform sampler2D tMatCap;\\\",\\r\\n\\t\\\"uniform float noise;\\\",\\r\\n\\t\\\"uniform float useNormal;\\\",\\r\\n\\t\\\"uniform float useRim;\\\",\\r\\n\\t\\\"uniform float rimPower;\\\",\\r\\n\\t\\\"uniform float useScreen;\\\",\\r\\n\\t\\\"uniform float normalScale;\\\",\\r\\n\\t\\\"uniform float normalRepeat;\\\",\\r\\n\\r\\n\\t\\\"varying vec2 vUv;\\\",\\r\\n\\t\\\"varying vec3 vTangent;\\\",\\r\\n\\t\\\"varying vec3 vBinormal;\\\",\\r\\n\\t\\\"varying vec3 vNormal;\\\",\\r\\n\\t\\\"varying vec3 vEye;\\\",\\r\\n\\t\\\"varying vec3 vU;\\\",\\r\\n\\t\\\"varying vec2 vN;\\\",\\r\\n\\r\\n\\t\\\"float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}\\\",\\r\\n\\r\\n\\t\\\"void main() {\\\",\\r\\n\\r\\n\\t\\t\\\"vec3 finalNormal = vNormal;\\\",\\r\\n\\t\\t\\\"vec2 calculatedNormal = vN;\\\",\\r\\n\\r\\n\\t\\t\\\"if( useNormal == 1. ) {\\\",\\r\\n\\t\\t\\t\\\"vec3 normalTex = texture2D( tNormal, vUv * normalRepeat ).xyz * 2.0 - 1.0;\\\",\\r\\n\\t\\t\\t\\\"normalTex.xy *= normalScale;\\\",\\r\\n\\t\\t\\t\\\"normalTex.y *= -1.;\\\",\\r\\n\\t\\t\\t\\\"normalTex = normalize( normalTex );\\\",\\r\\n\\t\\t\\t\\\"mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\\\",\\r\\n\\t\\t\\t\\\"finalNormal = tsb * normalTex;\\\",\\r\\n\\r\\n\\t\\t\\t\\\"vec3 r = reflect( vU, normalize( finalNormal ) );\\\",\\r\\n\\t\\t\\t\\\"float m = 2.0 * sqrt( r.x * r.x + r.y * r.y + ( r.z + 1.0 ) * ( r.z+1.0 ) );\\\",\\r\\n\\t\\t\\t\\\"calculatedNormal = vec2( r.x / m + 0.5,  r.y / m + 0.5 );\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\t\\\"vec3 base = texture2D( tMatCap, calculatedNormal ).rgb;\\\",\\r\\n\\r\\n\\t\\t// rim lighting\\r\\n\\r\\n\\t\\t\\\"if( useRim > 0. ) {\\\",\\r\\n\\t\\t\\t\\\"float f = rimPower * abs( dot( vNormal, normalize( vEye ) ) );\\\",\\r\\n\\t\\t\\t\\\"f = useRim * ( 1. - smoothstep( 0.0, 1., f ) );\\\",\\r\\n\\t\\t\\t\\\"base += vec3( f );\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\t// screen blending\\r\\n\\r\\n\\t\\t\\\"if( useScreen == 1. ) {\\\",\\r\\n\\t\\t\\t\\\"base = vec3( 1. ) - ( vec3( 1. ) - base ) * ( vec3( 1. ) - base );\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\r\\n\\t\\t// noise \\r\\n\\r\\n\\t\\t\\\"base += noise * ( .5 - random( vec3( 1. ), length( gl_FragCoord ) ) );\\\",\\r\\n\\r\\n\\t\\t\\\"gl_FragColor = vec4( base, 1. );\\\",\\r\\n\\r\\n\\t\\\"}\\\"\\r\\n\\r\\n].join(\\\"\\\");\\r\\n\\r\\nfunction ShaderMaterial(normalMap, matcapMap, callback){\\r\\n\\treturn new Promise( function(resolve, reject){\\r\\n\\t\\tvar material = new THREE.ShaderMaterial( {\\r\\n\\t\\t\\tuniforms: { \\r\\n\\t\\t\\t\\ttNormal: { type: \\\"t\\\", value: normalMap },\\r\\n\\t\\t\\t\\ttMatCap: { type: \\\"t\\\", value: matcapMap },\\r\\n\\t\\t\\t\\ttime: { type: \\\"f\\\", value: 0 },\\r\\n\\t\\t\\t\\tbump: { type: \\\"f\\\", value: 0 },\\r\\n\\t\\t\\t\\tnoise: { type: \\\"f\\\", value: 0.04 },\\r\\n\\t\\t\\t\\trepeat: { type: \\\"v2\\\", value: new THREE.Vector2( 1, 1 ) },\\r\\n\\t\\t\\t\\tuseNormal: { type: \\\"f\\\", value: 0 },\\r\\n\\t\\t\\t\\tuseRim: { type: \\\"f\\\", value: 0 },\\r\\n\\t\\t\\t\\trimPower: { type: \\\"f\\\", value: 0 },\\r\\n\\t\\t\\t\\tuseScreen: { type: \\\"f\\\", value: 0 },\\r\\n\\t\\t\\t\\tnormalScale: { type: \\\"f\\\", value: 1 },\\r\\n\\t\\t\\t\\tnormalRepeat: { type: \\\"f\\\", value: 1 }\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tvertexShader: vertexShader,       //  document.getElementById( \\\"vertexShader\\\" ).textContent,\\r\\n\\t\\t\\tfragmentShader: fragmentShader,   //  document.getElementById( \\\"fragmentShader\\\" ).textContent,\\r\\n\\t\\t\\tshading: THREE.SmoothShading,\\r\\n\\t\\t\\tside: THREE.DoubleSide\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tmaterial.uniforms.tMatCap.value.wrapS = material.uniforms.tMatCap.value.wrapT = THREE.ClampToEdgeWrapping;\\r\\n\\t\\tmaterial.uniforms.tNormal.value.wrapS = material.uniforms.tNormal.value.wrapT = THREE.RepeatWrapping;\\r\\n\\r\\n\\t\\tmaterial.uniforms.tMatCap.value.needsUpdate = true;\\r\\n\\t\\tmaterial.uniforms.tNormal.value.needsUpdate = true;\\r\\n\\r\\n\\t\\tif ( !!callback ) callback( material );\\r\\n\\r\\n\\t\\tresolve( material );\\r\\n\\t});\\r\\n}\\r\\n\\r\\n\""
		},
		{
			"name": "MW.js",
			"_id": "MW",
			"source": "\"// MW.js\\r\\n\\r\\n/*!\\r\\n* @author yomotsu http://yomotsu.net/\\r\\n* MIT License\\r\\n*/\\r\\n\\r\\nMW = {};\\r\\n\\r\\n\\r\\nMW.triangle = {};\\r\\n\\r\\n\\r\\nMW.triangle.makeBoundingBox = function ( triangle ) {\\r\\n\\r\\n  var bb = new THREE.Box3();\\r\\n\\r\\n  bb.min = bb.min.min( triangle.a );\\r\\n  bb.min = bb.min.min( triangle.b );\\r\\n  bb.min = bb.min.min( triangle.c );\\r\\n\\r\\n  bb.max = bb.max.max( triangle.a );\\r\\n  bb.max = bb.max.max( triangle.b );\\r\\n  bb.max = bb.max.max( triangle.c );\\r\\n\\r\\n  return bb;\\r\\n\\r\\n};\\r\\n\\r\\nMW.triangle.makeBoundingSphere = function ( triangle, normal ) {\\r\\n \\r\\n  var bs = new THREE.Sphere(),\\r\\n      v = new THREE.Vector3(),\\r\\n      v0 = new THREE.Vector3(),\\r\\n      v1 = new THREE.Vector3(),\\r\\n      e0 = new THREE.Vector3(),\\r\\n      e1 = new THREE.Vector3(),\\r\\n      a, b, c, d, e,\\r\\n      div, t, s;\\r\\n \\r\\n  // obtuse triangle\\r\\n \\r\\n  v0.subVectors( triangle.b, triangle.a );\\r\\n  v1.subVectors( triangle.c, triangle.a );\\r\\n \\r\\n  if ( v0.dot( v1 ) <= 0 ) {\\r\\n \\r\\n    bs.center.addVectors( triangle.b, triangle.c ).divideScalar( 2 );\\r\\n    bs.radius = v.subVectors( triangle.b, triangle.c ).length() / 2;\\r\\n    return bs;\\r\\n \\r\\n  }\\r\\n \\r\\n  v0.subVectors( triangle.a, triangle.b );\\r\\n  v1.subVectors( triangle.c, triangle.b );\\r\\n \\r\\n  if ( v0.dot( v1 ) <= 0 ) {\\r\\n \\r\\n    bs.center.addVectors( triangle.a, triangle.c ).divideScalar( 2 );\\r\\n    bs.radius = v.subVectors( triangle.a, triangle.c ).length() / 2;\\r\\n    return bs;\\r\\n \\r\\n  }\\r\\n \\r\\n  v0.subVectors( triangle.a, triangle.c );\\r\\n  v1.subVectors( triangle.b, triangle.c );\\r\\n \\r\\n  if ( v0.dot( v1 ) <= 0 ) {\\r\\n \\r\\n    bs.center.addVectors( triangle.a, triangle.b ).divideScalar( 2 );\\r\\n    bs.radius = v.subVectors( triangle.a, triangle.b ).length() / 2;\\r\\n    return bs;\\r\\n \\r\\n  }\\r\\n \\r\\n  // acute‐angled triangle\\r\\n \\r\\n  if ( !normal ) {\\r\\n \\r\\n    normal = triangle.normal();\\r\\n \\r\\n  }\\r\\n \\r\\n  v0.crossVectors( v.subVectors( triangle.c, triangle.b ), normal );\\r\\n  v1.crossVectors( v.subVectors( triangle.c, triangle.a ), normal );\\r\\n \\r\\n  e0.addVectors( triangle.c, triangle.b ).multiplyScalar( .5 );\\r\\n  e1.addVectors( triangle.c, triangle.a ).multiplyScalar( .5 );\\r\\n \\r\\n  a = v0.dot( v1 );\\r\\n  b = v0.dot( v0 );\\r\\n  d = v1.dot( v1 );\\r\\n  c = -v.subVectors( e1, e0 ).dot( v0 );\\r\\n  e = -v.subVectors( e1, e0 ).dot( v1 );\\r\\n \\r\\n  div = - a * a + b * d;\\r\\n  // t = ( - a * c + b * e ) / div;\\r\\n  s = ( - c * d + a * e ) / div;\\r\\n \\r\\n  bs.center = e0.clone().add( v0.clone().multiplyScalar( s ) );\\r\\n  bs.radius = v.subVectors( bs.center, triangle.a ).length();\\r\\n  return bs;\\r\\n \\r\\n}\\r\\n\\r\\n// @author yomotsu\\r\\n// MIT License\\r\\n\\r\\n;( function ( THREE, ns ) {\\r\\n\\r\\n  'use strict';\\r\\n\\r\\n  ns.collision = {};\\r\\n\\r\\n  // aabb: <THREE.Box3>\\r\\n  // Plane: <THREE.Plane>\\r\\n  ns.collision.isIntersectionAABBPlane = function ( aabb, Plane ) {\\r\\n\\r\\n    var center = new THREE.Vector3().addVectors( aabb.max, aabb.min ).multiplyScalar( 0.5 ),\\r\\n        extents = new THREE.Vector3().subVectors( aabb.max, center );\\r\\n\\r\\n    var r = extents.x * Math.abs( Plane.normal.x ) + extents.y * Math.abs( Plane.normal.y ) + extents.z * Math.abs( Plane.normal.z );\\r\\n    var s = Plane.normal.dot( center ) - Plane.constant;\\r\\n\\r\\n    return Math.abs( s ) <= r;\\r\\n\\r\\n  };\\r\\n\\r\\n  // based on http://www.gamedev.net/topic/534655-aabb-triangleplane-intersection--distance-to-plane-is-incorrect-i-have-solved-it/\\r\\n  //\\r\\n  // a: <THREE.Vector3>, // vertex of a triangle\\r\\n  // b: <THREE.Vector3>, // vertex of a triangle\\r\\n  // c: <THREE.Vector3>, // vertex of a triangle\\r\\n  // aabb: <THREE.Box3>\\r\\n  ns.collision.isIntersectionTriangleAABB = function ( a, b, c, aabb ) {\\r\\n\\r\\n    var p0, p1, p2, r;\\r\\n    \\r\\n    // Compute box center and extents of AABoundingBox (if not already given in that format)\\r\\n    var center = new THREE.Vector3().addVectors( aabb.max, aabb.min ).multiplyScalar( 0.5 ),\\r\\n        extents = new THREE.Vector3().subVectors( aabb.max, center );\\r\\n\\r\\n    // Translate triangle as conceptually moving AABB to origin\\r\\n    var v0 = new THREE.Vector3().subVectors( a, center ),\\r\\n        v1 = new THREE.Vector3().subVectors( b, center ),\\r\\n        v2 = new THREE.Vector3().subVectors( c, center );\\r\\n\\r\\n    // Compute edge vectors for triangle\\r\\n    var f0 = new THREE.Vector3().subVectors( v1, v0 ),\\r\\n        f1 = new THREE.Vector3().subVectors( v2, v1 ),\\r\\n        f2 = new THREE.Vector3().subVectors( v0, v2 );\\r\\n\\r\\n    // Test axes a00..a22 (category 3)\\r\\n    var a00 = new THREE.Vector3( 0, -f0.z, f0.y ),\\r\\n        a01 = new THREE.Vector3( 0, -f1.z, f1.y ),\\r\\n        a02 = new THREE.Vector3( 0, -f2.z, f2.y ),\\r\\n        a10 = new THREE.Vector3( f0.z, 0, -f0.x ),\\r\\n        a11 = new THREE.Vector3( f1.z, 0, -f1.x ),\\r\\n        a12 = new THREE.Vector3( f2.z, 0, -f2.x ),\\r\\n        a20 = new THREE.Vector3( -f0.y, f0.x, 0 ),\\r\\n        a21 = new THREE.Vector3( -f1.y, f1.x, 0 ),\\r\\n        a22 = new THREE.Vector3( -f2.y, f2.x, 0 );\\r\\n\\r\\n    // Test axis a00\\r\\n    p0 = v0.dot( a00 );\\r\\n    p1 = v1.dot( a00 );\\r\\n    p2 = v2.dot( a00 );\\r\\n    r = extents.y * Math.abs( f0.z ) + extents.z * Math.abs( f0.y );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a01\\r\\n    p0 = v0.dot( a01 );\\r\\n    p1 = v1.dot( a01 );\\r\\n    p2 = v2.dot( a01 );\\r\\n    r = extents.y * Math.abs( f1.z ) + extents.z * Math.abs( f1.y );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a02\\r\\n    p0 = v0.dot( a02 );\\r\\n    p1 = v1.dot( a02 );\\r\\n    p2 = v2.dot( a02 );\\r\\n    r = extents.y * Math.abs( f2.z ) + extents.z * Math.abs( f2.y );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a10\\r\\n    p0 = v0.dot( a10 );\\r\\n    p1 = v1.dot( a10 );\\r\\n    p2 = v2.dot( a10 );\\r\\n    r = extents.x * Math.abs( f0.z ) + extents.z * Math.abs( f0.x );\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a11\\r\\n    p0 = v0.dot( a11 );\\r\\n    p1 = v1.dot( a11 );\\r\\n    p2 = v2.dot( a11 );\\r\\n    r = extents.x * Math.abs( f1.z ) + extents.z * Math.abs( f1.x );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a12\\r\\n    p0 = v0.dot( a12 );\\r\\n    p1 = v1.dot( a12 );\\r\\n    p2 = v2.dot( a12 );\\r\\n    r = extents.x * Math.abs( f2.z ) + extents.z * Math.abs( f2.x );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a20\\r\\n    p0 = v0.dot( a20 );\\r\\n    p1 = v1.dot( a20 );\\r\\n    p2 = v2.dot( a20 );\\r\\n    r = extents.x * Math.abs( f0.y ) + extents.y * Math.abs( f0.x );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a21\\r\\n    p0 = v0.dot( a21 );\\r\\n    p1 = v1.dot( a21 );\\r\\n    p2 = v2.dot( a21 );\\r\\n    r = extents.x * Math.abs( f1.y ) + extents.y * Math.abs( f1.x );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test axis a22\\r\\n    p0 = v0.dot( a22 );\\r\\n    p1 = v1.dot( a22 );\\r\\n    p2 = v2.dot( a22 );\\r\\n    r = extents.x * Math.abs( f2.y ) + extents.y * Math.abs( f2.x );\\r\\n\\r\\n    if ( Math.max( -Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\\r\\n\\r\\n      return false; // Axis is a separating axis\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test the three axes corresponding to the face normals of AABB b (category 1).\\r\\n    // Exit if...\\r\\n    // ... [-extents.x, extents.x] and [min(v0.x,v1.x,v2.x), max(v0.x,v1.x,v2.x)] do not overlap\\r\\n    if ( Math.max( v0.x, v1.x, v2.x ) < -extents.x || Math.min( v0.x, v1.x, v2.x ) > extents.x ) {\\r\\n\\r\\n      return false;\\r\\n\\r\\n    }\\r\\n    // ... [-extents.y, extents.y] and [min(v0.y,v1.y,v2.y), max(v0.y,v1.y,v2.y)] do not overlap\\r\\n    if ( Math.max( v0.y, v1.y, v2.y ) < -extents.y || Math.min( v0.y, v1.y, v2.y ) > extents.y ) {\\r\\n\\r\\n      return false;\\r\\n\\r\\n    }\\r\\n    // ... [-extents.z, extents.z] and [min(v0.z,v1.z,v2.z), max(v0.z,v1.z,v2.z)] do not overlap\\r\\n    if ( Math.max( v0.z, v1.z, v2.z ) < -extents.z || Math.min( v0.z, v1.z, v2.z ) > extents.z ) {\\r\\n\\r\\n      return false;\\r\\n\\r\\n    }\\r\\n\\r\\n    // Test separating axis corresponding to triangle face normal (category 2)\\r\\n    // Face Normal is -ve as Triangle is clockwise winding (and XNA uses -z for into screen)\\r\\n    var plane = new THREE.Plane();\\r\\n    plane.normal = new THREE.Vector3().copy( f1 ).cross( f0 ).normalize();\\r\\n    plane.constant = plane.normal.dot( a );\\r\\n    \\r\\n    return ns.collision.isIntersectionAABBPlane( aabb, plane );\\r\\n\\r\\n  };\\r\\n\\r\\n\\r\\n  // sphere1: <THREE.Sphere>\\r\\n  // sphere2: <THREE.Sphere>\\r\\n  ns.collision.isIntersectionSphereSphere = function ( sphere1, sphere2 ) {\\r\\n\\r\\n    var radiusSum = sphere1.radius + sphere2.radius;\\r\\n\\r\\n    return sphere1.center.distanceToSquared( sphere2.center ) <= ( radiusSum * radiusSum );\\r\\n\\r\\n  };\\r\\n\\r\\n  // Section 5.1.3\\r\\n  // sphere: <THREE.Sphere>\\r\\n  // aabb: <THREE.Box3>\\r\\n\\r\\n  ns.collision.isIntersectionSphereAABB = function ( sphere, aabb ) {\\r\\n\\r\\n    var sqDist = 0;\\r\\n\\r\\n    if ( sphere.center.x < aabb.min.x ) { sqDist += ( aabb.min.x - sphere.center.x ) * ( aabb.min.x - sphere.center.x ); }\\r\\n    if ( sphere.center.x > aabb.max.x ) { sqDist += ( sphere.center.x - aabb.max.x ) * ( sphere.center.x - aabb.max.x ); }\\r\\n\\r\\n    if ( sphere.center.y < aabb.min.y ) { sqDist += ( aabb.min.y - sphere.center.y ) * ( aabb.min.y - sphere.center.y ); }\\r\\n    if ( sphere.center.y > aabb.max.y ) { sqDist += ( sphere.center.y - aabb.max.y ) * ( sphere.center.y - aabb.max.y ); }\\r\\n\\r\\n    if ( sphere.center.z < aabb.min.z ) { sqDist += ( aabb.min.z - sphere.center.z ) * ( aabb.min.z - sphere.center.z ); }\\r\\n    if ( sphere.center.z > aabb.max.z ) { sqDist += ( sphere.center.z - aabb.max.z ) * ( sphere.center.z - aabb.max.z ); }\\r\\n\\r\\n    return sqDist <= sphere.radius * sphere.radius;\\r\\n\\r\\n  };\\r\\n\\r\\n\\r\\n  //http://clb.demon.fi/MathGeoLib/docs/Triangle.cpp_code.html#459\\r\\n\\r\\n  // sphere: <THREE.Sphere>\\r\\n  // a: <THREE.Vector3>, // vertex of a triangle\\r\\n  // b: <THREE.Vector3>, // vertex of a triangle\\r\\n  // c: <THREE.Vector3>, // vertex of a triangle\\r\\n  // normal: <THREE.Vector3>, // normal of a triangle\\r\\n  ns.collision.isIntersectionSphereTriangle = function ( sphere, a, b, c, normal ) {\\r\\n    // http://realtimecollisiondetection.net/blog/?p=103\\r\\n\\r\\n    // vs plain of traiangle face\\r\\n    var A = new THREE.Vector3(),\\r\\n        B = new THREE.Vector3(),\\r\\n        C = new THREE.Vector3(),\\r\\n        rr,\\r\\n        V = new THREE.Vector3(),\\r\\n        d,\\r\\n        e;\\r\\n\\r\\n    A.subVectors( a, sphere.center );\\r\\n    B.subVectors( b, sphere.center );\\r\\n    C.subVectors( c, sphere.center );\\r\\n    rr = sphere.radius * sphere.radius;\\r\\n    V.crossVectors( B.clone().sub( A ), C.clone().sub( A ) );\\r\\n    d = A.dot( V );\\r\\n    e = V.dot( V );\\r\\n\\r\\n    if ( d * d > rr * e ) {\\r\\n\\r\\n      return false;\\r\\n\\r\\n    }\\r\\n\\r\\n    // vs triangle vertex\\r\\n    var aa,\\r\\n        ab,\\r\\n        ac,\\r\\n        bb,\\r\\n        bc,\\r\\n        cc;\\r\\n\\r\\n    aa = A.dot( A );\\r\\n    ab = A.dot( B );\\r\\n    ac = A.dot( C );\\r\\n    bb = B.dot( B );\\r\\n    bc = B.dot( C );\\r\\n    cc = C.dot( C );\\r\\n\\r\\n    if (\\r\\n      ( aa > rr ) & ( ab > aa ) & ( ac > aa ) ||\\r\\n      ( bb > rr ) & ( ab > bb ) & ( bc > bb ) ||\\r\\n      ( cc > rr ) & ( ac > cc ) & ( bc > cc )\\r\\n    ) {\\r\\n\\r\\n      return false;\\r\\n\\r\\n    }\\r\\n\\r\\n    // vs edge\\r\\n    var AB = new THREE.Vector3(),\\r\\n        BC = new THREE.Vector3(),\\r\\n        CA = new THREE.Vector3(),\\r\\n        d1,\\r\\n        d2,\\r\\n        d3,\\r\\n        e1,\\r\\n        e2,\\r\\n        e3,\\r\\n        Q1 = new THREE.Vector3(),\\r\\n        Q2 = new THREE.Vector3(),\\r\\n        Q3 = new THREE.Vector3(),\\r\\n        QC = new THREE.Vector3(),\\r\\n        QA = new THREE.Vector3(),\\r\\n        QB = new THREE.Vector3();\\r\\n\\r\\n    AB.subVectors( B, A );\\r\\n    BC.subVectors( C, B );\\r\\n    CA.subVectors( A, C );\\r\\n    d1 = ab - aa;\\r\\n    d2 = bc - bb;\\r\\n    d3 = ac - cc;\\r\\n    e1 = AB.dot( AB );\\r\\n    e2 = BC.dot( BC );\\r\\n    e3 = CA.dot( CA );\\r\\n    Q1.subVectors( A.multiplyScalar( e1 ), AB.multiplyScalar( d1 ) );\\r\\n    Q2.subVectors( B.multiplyScalar( e2 ), BC.multiplyScalar( d2 ) );\\r\\n    Q3.subVectors( C.multiplyScalar( e3 ), CA.multiplyScalar( d3 ) );\\r\\n    QC.subVectors( C.multiplyScalar( e1 ), Q1 );\\r\\n    QA.subVectors( A.multiplyScalar( e2 ), Q2 );\\r\\n    QB.subVectors( B.multiplyScalar( e3 ), Q3 );\\r\\n\\r\\n    if (\\r\\n      ( Q1.dot( Q1 ) > rr * e1 * e1 ) && ( Q1.dot( QC ) >= 0 ) ||\\r\\n      ( Q2.dot( Q2 ) > rr * e2 * e2 ) && ( Q2.dot( QA ) >= 0 ) ||\\r\\n      ( Q3.dot( Q3 ) > rr * e3 * e3 ) && ( Q3.dot( QB ) >= 0 )\\r\\n    ) {\\r\\n\\r\\n      return false;\\r\\n\\r\\n    }\\r\\n\\r\\n    var distance = Math.sqrt( d * d / e ) - sphere.radius - 1,\\r\\n        contactPoint = new THREE.Vector3(),\\r\\n        negatedNormal = new THREE.Vector3( -normal.x, -normal.y, -normal.z );\\r\\n\\r\\n    contactPoint.copy( sphere.center ).add( negatedNormal.multiplyScalar( distance ) );\\r\\n\\r\\n    return {\\r\\n      distance    : distance,\\r\\n      contactPoint: contactPoint\\r\\n    };\\r\\n\\r\\n  };\\r\\n\\r\\n  // based on Real-Time Collision Detection Section 5.3.4\\r\\n  // p: <THREE.Vector3>, // line3.start\\r\\n  // q: <THREE.Vector3>, // line3.end\\r\\n  // a: <THREE.Vector3>, // triangle.a\\r\\n  // b: <THREE.Vector3>, // triangle.b\\r\\n  // c: <THREE.Vector3>, // triangle.c\\r\\n  // normal: <THREE.Vector3>, // triangle.normal, optional\\r\\n\\r\\n  // var scalarTriple = function ( a, b, c ) {\\r\\n\\r\\n  //   var m = b.clone().cross( c );\\r\\n  //   return a.dot( m );\\r\\n\\r\\n  // }\\r\\n\\r\\n  // var vectorTriple = function ( a, b, c ) {\\r\\n\\r\\n  //   var m = b.clone().cross( c );\\r\\n  //   return a.clone().cross( m );\\r\\n\\r\\n  // }\\r\\n\\r\\n  // ns.collision.isIntersectionLineTriangle = function ( p, q, a, b, c, precision ) {\\r\\n\\r\\n  //   var pq = q.clone().sub( p ),\\r\\n  //       pa = a.clone().sub( p ),\\r\\n  //       pb = b.clone().sub( p ),\\r\\n  //       pc = c.clone().sub( p ),\\r\\n  //       u, v, w;\\r\\n\\r\\n  //   u = scalarTriple( pq, pc, pb );\\r\\n\\r\\n  //   if ( u < 0 ) { return false; }\\r\\n\\r\\n  //   v = scalarTriple( pq, pa, pc );\\r\\n\\r\\n  //   if ( v < 0 ) { return false; }\\r\\n\\r\\n  //   w = scalarTriple( pq, pb, pa );\\r\\n\\r\\n  //   if ( w < 0 ) { return false; }\\r\\n\\r\\n  //   var denom = 1 / ( u + v + w );\\r\\n  //   u *= denom;\\r\\n  //   v *= denom;\\r\\n  //   w *= denom;\\r\\n\\r\\n  //   var au = a.clone().multiplyScalar( u ),\\r\\n  //       bv = b.clone().multiplyScalar( v ),\\r\\n  //       cw = c.clone().multiplyScalar( w ),\\r\\n  //       contactPoint = au.clone().add( bv ).add( cw );\\r\\n\\r\\n  //   return {\\r\\n  //     contactPoint: contactPoint\\r\\n  //   }\\r\\n\\r\\n  // }\\r\\n\\r\\n  ns.collision.testSegmentTriangle = function ( p, q, a, b, c ) {\\r\\n\\r\\n    var ab = b.clone().sub( a );\\r\\n    var ac = c.clone().sub( a );\\r\\n    var qp = p.clone().sub( q );\\r\\n\\r\\n    var n = ab.clone().cross( ac );\\r\\n\\r\\n    var d = qp.dot( n );\\r\\n    if ( d <= 0 ) { return false; }\\r\\n\\r\\n    var ap = p.clone().sub( a );\\r\\n    var t = ap.dot( n );\\r\\n\\r\\n    if ( t < 0 ) { return 0; }\\r\\n    if ( t > d ) { return 0; }\\r\\n\\r\\n    var e = qp.clone().cross( ap );\\r\\n    var v = ac.dot( e );\\r\\n\\r\\n    if ( v < 0 || v > d ) { return 0; }\\r\\n\\r\\n    var w = ab.clone().dot( e ) * -1;\\r\\n\\r\\n    if ( w < 0 || v + w > d ) { return 0; }\\r\\n\\r\\n    var ood = 1 / d;\\r\\n    t *= ood;\\r\\n    v *= ood;\\r\\n    w *= ood;\\r\\n    var u = 1 - v - w;\\r\\n\\r\\n    var au = a.clone().multiplyScalar( u ),\\r\\n        bv = b.clone().multiplyScalar( v ),\\r\\n        cw = c.clone().multiplyScalar( w ),\\r\\n        contactPoint = au.clone().add( bv ).add( cw );\\r\\n\\r\\n    return {\\r\\n      contactPoint: contactPoint\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n} )( THREE, MW );\\r\\n\\r\\n\\r\\n// @author yomotsu\\r\\n// MIT License\\r\\n\\r\\n;( function ( THREE, ns ) {\\r\\n\\r\\n  'use strict';\\r\\n\\r\\n  ns.World = function () {\\r\\n\\r\\n    // console.log( 'THREEFIELD.World' );\\r\\n\\r\\n    this.colliderPool  = [];\\r\\n    this.characterPool = [];\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.World.prototype.add = function ( object ) {\\r\\n    \\r\\n    if ( object instanceof ns.Octree ) {\\r\\n\\r\\n      this.colliderPool.push( object );\\r\\n\\r\\n    } else if ( object instanceof ns.CharacterController ) {\\r\\n\\r\\n      this.characterPool.push( object );\\r\\n      object.world = this;\\r\\n\\r\\n    }\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.World.prototype.step = function ( dt ) {\\r\\n\\r\\n    var character,\\r\\n        octree,\\r\\n        sphere,\\r\\n        intersectedNodes,\\r\\n        faces,\\r\\n        contactInfo,\\r\\n        i, ii, iii, l, ll, lll;\\r\\n\\r\\n    for ( i = 0, l = this.characterPool.length; i < l; i ++ ) {\\r\\n\\r\\n      character = this.characterPool[ i ];\\r\\n\\r\\n      // octree で絞られた node に含まれる face だけを\\r\\n      // charactore に渡して判定する\\r\\n      for ( ii = 0, ll = this.colliderPool.length; ii < ll; ii ++ ) {\\r\\n\\r\\n        octree = this.colliderPool[ ii ];\\r\\n        sphere = new THREE.Sphere( character.center, character.radius + character.groundPadding );\\r\\n        intersectedNodes = octree.getIntersectedNodes( sphere, octree.maxDepth );\\r\\n        faces = ns.Octree.uniqTriangkesfromNodes( intersectedNodes );\\r\\n\\r\\n      }\\r\\n      \\r\\n      character.collisionCandidate = faces;\\r\\n      character.update( dt );\\r\\n\\r\\n    }\\r\\n\\r\\n  };\\r\\n\\r\\n} )( THREE, MW );\\r\\n\\r\\n// @author yomotsu\\r\\n// MIT License\\r\\n\\r\\n// OcTree with Morton Order\\r\\n// based on http://marupeke296.com/COL_3D_No15_Octree.html\\r\\n//\\r\\n//       +------+------+\\r\\n//       |\\\\   2  \\\\   3  \\\\\\r\\n//       | +------+------+\\r\\n//       + |\\\\      \\\\      \\\\\\r\\n//       |\\\\| +------+------+\\r\\n//       | + |      |      |\\r\\n//       +0|\\\\|   6  |   7  |\\r\\n//        \\\\| +------+------+\\r\\n//         + |      |      |\\r\\n//    y     \\\\|   4  |   5  |\\r\\n//    |      +------+------+\\r\\n//    +--x\\r\\n//     \\\\\\r\\n//      z\\r\\n//\\r\\n//\\r\\n//       +------+------+\\r\\n//       |\\\\   6  \\\\   7  \\\\\\r\\n//       | +------+------+\\r\\n//       + |\\\\      \\\\      \\\\\\r\\n//       |\\\\| +------+------+\\r\\n//       | + |      |      |\\r\\n//       +4|\\\\|   2  |   3  |\\r\\n//        \\\\| +------+------+\\r\\n//         + |      |      |\\r\\n//  z y     \\\\|   0  |   1  |\\r\\n//   \\\\|      +------+------+\\r\\n//    +--x\\r\\n//\\r\\n\\r\\n;( function ( THREE, ns ) {\\r\\n\\r\\n  'use strict';\\r\\n\\r\\n  // min: <THREE.Vector3>\\r\\n  // max: <THREE.Vector3>\\r\\n  // maxDepth: <Number>\\r\\n  ns.Octree = function ( min, max, maxDepth ) {\\r\\n\\r\\n    this.min = min;\\r\\n    this.max = max;\\r\\n    this.maxDepth = maxDepth;\\r\\n    this.nodes = [];\\r\\n\\r\\n    var i, length, depth, mortonNumber,\\r\\n        pow2, pow4,\\r\\n        indexX, indexY, indexZ,\\r\\n        nodeBoxSize = new THREE.Vector3(),\\r\\n        nodeBoxMin = new THREE.Vector3(),\\r\\n        nodeBoxMax = new THREE.Vector3();\\r\\n\\r\\n    for ( depth = 0; depth < this.maxDepth; depth ++ ) {\\r\\n\\r\\n      this.nodes.push( [] );\\r\\n      pow2 = Math.pow( 2, depth );\\r\\n      pow4 = Math.pow( 4, depth );\\r\\n      nodeBoxSize.subVectors( this.max, this.min ).divideScalar( pow2 );\\r\\n\\r\\n      for ( i = 0, length = Math.pow( 8, depth ); i < length; i ++ ) {\\r\\n\\r\\n        indexX = i % pow2;\\r\\n        indexY = ( i / pow4 )|0;\\r\\n        indexZ = ( ( i / pow2 )|0 ) % pow2;\\r\\n\\r\\n        nodeBoxMin.set(\\r\\n          this.min.x + indexX * nodeBoxSize.x,\\r\\n          this.min.y + indexY * nodeBoxSize.y,\\r\\n          this.min.z + indexZ * nodeBoxSize.z\\r\\n        );\\r\\n        nodeBoxMax.copy( nodeBoxMin ).add( nodeBoxSize );\\r\\n\\r\\n        mortonNumber = ns.Octree.getMortonNumber( indexX, indexY, indexZ );\\r\\n        this.nodes[ depth ][ mortonNumber ] = new ns.OctreeNode( this, depth, mortonNumber, nodeBoxMin, nodeBoxMax );\\r\\n\\r\\n      }\\r\\n\\r\\n    }\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.Octree.prototype = {\\r\\n\\r\\n    constructor: ns.Octree,\\r\\n\\r\\n    importThreeMesh: function ( threeMesh ) {\\r\\n\\r\\n\\r\\n      var i, ii, l, ll,\\r\\n          vec3 = new THREE.Vector3(),\\r\\n          geometry,\\r\\n          geometryId,\\r\\n          face,\\r\\n          normal,\\r\\n          index,\\r\\n          count,\\r\\n          start,\\r\\n          a, b, c,\\r\\n        \\tvA  = new THREE.Vector3(),\\r\\n        \\tvB  = new THREE.Vector3(),\\r\\n        \\tvC  = new THREE.Vector3(),\\r\\n        \\tvnA = new THREE.Vector3(),\\r\\n        \\tvnB = new THREE.Vector3(),\\r\\n        \\tvnC = new THREE.Vector3(),\\r\\n          ab  = new THREE.Vector3(),\\r\\n          cb  = new THREE.Vector3(),\\r\\n          faceNormal;\\r\\n\\r\\n      threeMesh.updateMatrix();\\r\\n\\r\\n      geometryId = threeMesh.geometry.uuid;\\r\\n      geometry   = threeMesh.geometry.clone();\\r\\n      geometry.applyMatrix( threeMesh.matrix );\\r\\n      geometry.computeVertexNormals();\\r\\n\\r\\n      if ( geometry instanceof THREE.BufferGeometry ) {\\r\\n\\r\\n        if ( geometry.index !== undefined ) {\\r\\n\\r\\n          var indices   = geometry.index.array;\\r\\n          var positions = geometry.attributes.position.array;\\r\\n          var normals   = geometry.attributes.normal.array;\\r\\n          var offsets   = geometry.groups;\\r\\n\\r\\n          if ( offsets.length === 0 ) {\\r\\n\\r\\n            offsets = [ { start: 0, count: indices.length, index: 0 } ];\\r\\n\\r\\n          }\\r\\n\\r\\n          for ( i = 0, l = offsets.length; i < l; ++ i ) {\\r\\n\\r\\n            start  = offsets[ i ].start;\\r\\n            count  = offsets[ i ].count;\\r\\n            index  = offsets[ i ].materialIndex;\\r\\n\\r\\n            for ( ii = start, ll = start + count; ii < ll; ii += 3 ) {\\r\\n\\r\\n              a = index + indices[ ii ];\\r\\n              b = index + indices[ ii + 1 ];\\r\\n              c = index + indices[ ii + 2 ];\\r\\n\\r\\n              vA = vec3.fromArray( positions, a * 3 ).clone();\\r\\n              vB = vec3.fromArray( positions, b * 3 ).clone();\\r\\n              vC = vec3.fromArray( positions, c * 3 ).clone();\\r\\n\\r\\n              // https://github.com/mrdoob/three.js/issues/4691\\r\\n              // make face normal\\r\\n              cb.subVectors( vC, vB );\\r\\n              ab.subVectors( vA, vB );\\r\\n              faceNormal = cb.cross( ab ).normalize().clone();\\r\\n\\r\\n              face = new ns.Face(\\r\\n                vA,\\r\\n                vB,\\r\\n                vC,\\r\\n                faceNormal,\\r\\n                geometryId\\r\\n              );\\r\\n\\r\\n              this.addFace( face );\\r\\n\\r\\n            }\\r\\n\\r\\n          }\\r\\n\\r\\n        }\\r\\n\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      geometry.computeFaceNormals();\\r\\n\\r\\n      for ( i = 0, l = geometry.faces.length; i < l; i ++ ) {\\r\\n\\r\\n        face = new ns.Face(\\r\\n          geometry.vertices[ geometry.faces[ i ].a ],\\r\\n          geometry.vertices[ geometry.faces[ i ].b ],\\r\\n          geometry.vertices[ geometry.faces[ i ].c ],\\r\\n          geometry.faces[ i ].normal,\\r\\n          geometryId\\r\\n        );\\r\\n        this.addFace( face );\\r\\n\\r\\n      }\\r\\n\\r\\n    },\\r\\n\\r\\n    addFace: function ( face ) {\\r\\n\\r\\n      var i, ii, l, ll, node, targetNodes = [], tmp = [], isIntersected;\\r\\n\\r\\n      targetNodes = this.nodes[ 0 ].slice( 0 );\\r\\n\\r\\n      for ( i = 0, l = this.maxDepth; i < l; i ++ ) {\\r\\n\\r\\n        for ( ii = 0, ll = targetNodes.length; ii < ll; ii ++ ) {\\r\\n\\r\\n          node = targetNodes[ ii ];\\r\\n          isIntersected = ns.collision.isIntersectionTriangleAABB( face.a, face.b, face.c, node );\\r\\n\\r\\n          if ( isIntersected ) {\\r\\n\\r\\n            node.trianglePool.push( face );\\r\\n\\r\\n            if ( i + 1 !== this.maxDepth ) {\\r\\n\\r\\n              tmp = tmp.concat( node.getChildNodes() );\\r\\n\\r\\n            }\\r\\n\\r\\n          }\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( tmp.length === 0 ) {\\r\\n\\r\\n          break;\\r\\n\\r\\n        }\\r\\n\\r\\n        targetNodes = tmp.slice( 0 );\\r\\n        tmp.length = 0;\\r\\n\\r\\n      }\\r\\n\\r\\n    },\\r\\n\\r\\n    removeThreeMesh: function ( meshID ) {\\r\\n\\r\\n      var that = this;\\r\\n\\r\\n      this.nodes.forEach( function ( nodeDepth ) {\\r\\n\\r\\n        nodeDepth.forEach( function ( node ) {\\r\\n\\r\\n          var newTrianglePool = [];\\r\\n\\r\\n          node.trianglePool.forEach( function ( face ) {\\r\\n\\r\\n            if ( face.meshID !== meshID ) {\\r\\n\\r\\n              newTrianglePool.push( face );\\r\\n\\r\\n            }\\r\\n\\r\\n          } );\\r\\n\\r\\n          node.trianglePool = newTrianglePool;\\r\\n\\r\\n        } );\\r\\n\\r\\n      } );\\r\\n\\r\\n    },\\r\\n\\r\\n    getIntersectedNodes: function ( sphere, depth ) {\\r\\n\\r\\n      var i, ii, l, ll, node, targetNodes = [], tmp = [],\\r\\n          isIntersected, intersectedNodes = [], isAtMaxDepth;\\r\\n\\r\\n      isIntersected = ns.collision.isIntersectionSphereAABB( sphere, this );\\r\\n\\r\\n      if ( !isIntersected ) {\\r\\n\\r\\n        return [];\\r\\n\\r\\n      }\\r\\n\\r\\n      targetNodes = this.nodes[ 0 ].slice( 0 );\\r\\n\\r\\n      for ( i = 0, l = depth; i < l; i ++ ) {\\r\\n\\r\\n        for ( ii = 0, ll = targetNodes.length; ii < ll; ii ++ ) {\\r\\n\\r\\n          node = targetNodes[ ii ];\\r\\n          isIntersected = ns.collision.isIntersectionSphereAABB( sphere, node );\\r\\n\\r\\n          if ( isIntersected ) {\\r\\n\\r\\n            isAtMaxDepth = ( i + 1 === depth );\\r\\n\\r\\n            if ( isAtMaxDepth ) {\\r\\n\\r\\n              if ( node.trianglePool.length !== 0 ) {\\r\\n\\r\\n                intersectedNodes.push( node );\\r\\n\\r\\n              }\\r\\n\\r\\n            } else {\\r\\n\\r\\n              tmp = tmp.concat( node.getChildNodes() );\\r\\n\\r\\n            }\\r\\n\\r\\n          }\\r\\n\\r\\n        }\\r\\n\\r\\n        targetNodes = tmp.slice( 0 );\\r\\n        tmp.length = 0;\\r\\n\\r\\n      }\\r\\n\\r\\n      return intersectedNodes;\\r\\n\\r\\n    }\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.Octree.separate3Bit = function ( n ) {\\r\\n\\r\\n    n = ( n | n << 8 ) & 0x0000f00f;\\r\\n    n = ( n | n << 4 ) & 0x000c30c3;\\r\\n    n = ( n | n << 2 ) & 0x00249249;\\r\\n    return n;\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.Octree.getMortonNumber = function ( x, y, z ) {\\r\\n\\r\\n    return ns.Octree.separate3Bit( x ) |\\r\\n           ns.Octree.separate3Bit( y ) << 1 |\\r\\n           ns.Octree.separate3Bit( z ) << 2;\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.Octree.uniqTriangkesfromNodes = function ( nodes ) {\\r\\n\\r\\n    var i, ii, iii, l, ll, lll, uniq = [], isContained = false;\\r\\n\\r\\n    if ( nodes.length === 0 ) {\\r\\n\\r\\n      return [];\\r\\n\\r\\n    } else if ( nodes.length === 1 ) {\\r\\n\\r\\n      return nodes[ 0 ].trianglePool.slice( 0 );\\r\\n\\r\\n    }\\r\\n\\r\\n    for ( i = 0, l = nodes.length; i < l; i ++ ) {\\r\\n\\r\\n      for ( ii = 0, ll = nodes[ i ].trianglePool.length; ii < ll; ii ++ ) {\\r\\n\\r\\n        for ( iii = 0, lll = uniq.length; iii < lll; iii ++ ) {\\r\\n\\r\\n          if ( nodes[ i ].trianglePool[ ii ] === uniq[ iii ] ) {\\r\\n\\r\\n            isContained = true;\\r\\n\\r\\n          }\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( !isContained ) {\\r\\n\\r\\n          uniq.push( nodes[ i ].trianglePool[ ii ] );\\r\\n\\r\\n        }\\r\\n\\r\\n        isContained = false;\\r\\n\\r\\n      }\\r\\n\\r\\n    }\\r\\n\\r\\n    return uniq;\\r\\n\\r\\n  };\\r\\n\\r\\n  //\\r\\n\\r\\n  ns.OctreeNode = function ( tree, depth, mortonNumber, min, max ) {\\r\\n\\r\\n    this.tree = tree;\\r\\n    this.depth = depth;\\r\\n    this.mortonNumber = mortonNumber;\\r\\n    this.min = new THREE.Vector3( min.x, min.y, min.z );\\r\\n    this.max = new THREE.Vector3( max.x, max.y, max.z );\\r\\n    this.trianglePool = [];\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.OctreeNode.prototype = {\\r\\n\\r\\n    constructor: ns.OctreeNode,\\r\\n\\r\\n    getParentNode: function () {\\r\\n\\r\\n      if ( this.depth === 0 ) {\\r\\n\\r\\n        return null;\\r\\n\\r\\n      }\\r\\n\\r\\n      this.tree.nodes[ this.depth ][ this.mortonNumber >> 3 ];\\r\\n\\r\\n    },\\r\\n\\r\\n    getChildNodes: function () {\\r\\n\\r\\n      if ( this.tree.maxDepth === this.depth ) {\\r\\n\\r\\n        return null;\\r\\n\\r\\n      }\\r\\n\\r\\n      var firstChild = this.mortonNumber << 3;\\r\\n\\r\\n      return [\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 1 ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 2 ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 3 ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 4 ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 5 ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 6 ],\\r\\n        this.tree.nodes[ this.depth + 1 ][ firstChild + 7 ]\\r\\n      ];\\r\\n\\r\\n    }\\r\\n\\r\\n  };\\r\\n\\r\\n  //\\r\\n\\r\\n  // a: <THREE.Vector3>\\r\\n  // b: <THREE.Vector3>\\r\\n  // c: <THREE.Vector3>\\r\\n  // normal: <THREE.Vector3>\\r\\n  // meshID: <String>\\r\\n  ns.Face = function ( a, b, c, normal, meshID ) {\\r\\n\\r\\n    this.a = a.clone();\\r\\n    this.b = b.clone();\\r\\n    this.c = c.clone();\\r\\n    this.normal = normal.clone();\\r\\n    this.meshID = meshID;\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.Face.prototype = {\\r\\n\\r\\n    constructor: ns.Face\\r\\n\\r\\n  };\\r\\n\\r\\n  // origin   : <THREE.Vector3>\\r\\n  // direction: <THREE.Vector3>\\r\\n  // distance : <Float>\\r\\n  ns.Ray = function ( origin, direction, distance ) {\\r\\n    this.origin = origin;\\r\\n    this.direction = direction;\\r\\n    this.distance = distance;\\r\\n  };\\r\\n\\r\\n} )( THREE, MW );\\r\\n\\r\\n\\r\\n\""
		},
		{
			"name": "MWtps.js",
			"_id": "MWtps",
			"source": "\"// MWtps.js\\r\\n\\r\\n/*!\\r\\n* @author yomotsu http://yomotsu.net/\\r\\n* MIT License\\r\\n*/\\r\\n\\r\\n;( function ( THREE, ns ) {\\r\\n\\r\\n  'use strict';\\r\\n\\r\\n  ns.CharacterController = function ( object3d, radius ) {\\r\\n\\r\\n    Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\\r\\n    this.object = object3d;\\r\\n    this.center = this.object.position.clone();\\r\\n    this.radius = radius;\\r\\n    this.groundPadding = 0.5;\\r\\n    this.maxSlopeGradient = Math.cos( THREE.Math.degToRad( 50 ) );\\r\\n    this.isGrounded = false;\\r\\n    this.isOnSlope  = false;\\r\\n    this.isIdling   = false;\\r\\n    this.isRunning  = false;\\r\\n    this.isJumping  = false;\\r\\n    this.direction  = 0; // 0 to 2PI(=360deg) in rad\\r\\n    this.movementSpeed = 28; // default: 50; // Meters Per Second\\r\\n    this.velocity = new THREE.Vector3( 0, -10, 0 );\\r\\n    this.currentJumpPower = 0;\\r\\n    this.jumpStartTime = 0;\\r\\n    this.groundHeight = 0;\\r\\n    this.groundNormal = new THREE.Vector3();\\r\\n    this.collisionCandidate;\\r\\n    this.contactInfo = [];\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.CharacterController.prototype = {\\r\\n\\r\\n    constructor: ns.CharacterController,\\r\\n\\r\\n    update: function ( dt ) {\\r\\n\\r\\n      this.isGrounded = false;\\r\\n      this.isOnSlope  = false;\\r\\n      this.groundHeight = -Infinity;\\r\\n      this.groundNormal.set( 0, 1, 0 );\\r\\n\\r\\n      this.updateGrounding();\\r\\n      this.updateJumping();\\r\\n      this.updatePosition( dt );\\r\\n      this.collisionDetection();\\r\\n      this.solvePosition();\\r\\n      this.updateVelocity();\\r\\n      this.events();\\r\\n\\r\\n    },\\r\\n\\r\\n    updateVelocity: function () {\\r\\n\\r\\n      var FALL_VELOCITY = -50,\\r\\n          frontDierction = -Math.cos( this.direction ),\\r\\n          rightDierction = -Math.sin( this.direction ),\\r\\n          normal,\\r\\n          isHittingCeiling = false,\\r\\n          wallNomal2D,\\r\\n          direction2D,\\r\\n          wallAngle,\\r\\n          frontAngle,\\r\\n          negativeFrontAngle,\\r\\n          i, l;\\r\\n      \\r\\n      this.velocity.set(\\r\\n        rightDierction * this.movementSpeed * this.isRunning, \\r\\n        FALL_VELOCITY,\\r\\n        frontDierction * this.movementSpeed * this.isRunning\\r\\n      );\\r\\n\\r\\n      if ( this.contactInfo.length === 0 && !this.isJumping ) {\\r\\n\\r\\n        return;\\r\\n\\r\\n      } else if ( this.isGrounded && !this.isOnSlope && !this.isJumping ) {\\r\\n\\r\\n        this.velocity.y = 0;\\r\\n\\r\\n      } else if ( this.isOnSlope ) {\\r\\n\\r\\n        var slidingDownVelocity = FALL_VELOCITY;\\r\\n        var holizontalSpead = - slidingDownVelocity / ( 1 - this.groundNormal.y ) * 0.2;\\r\\n\\r\\n        this.velocity.x = this.groundNormal.x * holizontalSpead;\\r\\n        this.velocity.y = FALL_VELOCITY;\\r\\n        this.velocity.z = this.groundNormal.z * holizontalSpead;\\r\\n\\r\\n      } else if ( !this.isGrounded && !this.isOnSlope && this.isJumping ) {\\r\\n\\r\\n        this.velocity.y = this.currentJumpPower * -FALL_VELOCITY;\\r\\n\\r\\n      }\\r\\n\\r\\n\\r\\n      // vs walls and sliding on the wall\\r\\n      direction2D = new THREE.Vector2( rightDierction, frontDierction );\\r\\n      frontAngle = Math.atan2( direction2D.y, direction2D.x );\\r\\n      negativeFrontAngle = Math.atan2( -direction2D.y, -direction2D.x );\\r\\n      \\r\\n      for ( i = 0, l = this.contactInfo.length; i < l; i ++ ) {\\r\\n\\r\\n        normal = this.contactInfo[ i ].face.normal;\\r\\n        // var distance = this.contactInfo[ i ].distance;\\r\\n\\r\\n        if ( this.maxSlopeGradient < normal.y || this.isOnSlope ) {\\r\\n\\r\\n          continue;\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( !isHittingCeiling && normal.y < 0 ) {\\r\\n\\r\\n          isHittingCeiling = true;\\r\\n\\r\\n        }\\r\\n\\r\\n        wallNomal2D = new THREE.Vector2( normal.x, normal.z ).normalize();\\r\\n        wallAngle = Math.atan2( wallNomal2D.y, wallNomal2D.x );\\r\\n\\r\\n        if (\\r\\n          Math.abs( negativeFrontAngle - wallAngle ) >= Math.PI * 0.5 && //  90deg\\r\\n          Math.abs( negativeFrontAngle - wallAngle ) <= Math.PI * 1.5    // 270deg\\r\\n        ) {\\r\\n\\r\\n          continue;\\r\\n\\r\\n        }\\r\\n\\r\\n        wallNomal2D.set(\\r\\n          direction2D.dot( wallNomal2D ) * wallNomal2D.x,\\r\\n          direction2D.dot( wallNomal2D ) * wallNomal2D.y\\r\\n        );\\r\\n        direction2D.subVectors( direction2D, wallNomal2D );\\r\\n\\r\\n        this.velocity.x = direction2D.x * this.movementSpeed * this.isRunning;\\r\\n        this.velocity.z = direction2D.y * this.movementSpeed * this.isRunning;\\r\\n\\r\\n      }\\r\\n\\r\\n      if ( isHittingCeiling ) {\\r\\n\\r\\n        this.velocity.y = Math.min( 0, this.velocity.y );\\r\\n        this.isJumping = false;\\r\\n\\r\\n      }\\r\\n\\r\\n    },\\r\\n\\r\\n    updateGrounding: function () {\\r\\n\\r\\n      // \\\"頭上からほぼ無限に下方向までの線 (segment)\\\" vs \\\"フェイス (triangle)\\\" の\\r\\n      // 交差判定を行う\\r\\n      // もし、フェイスとの交差点が「頭上」から「下groundPadding」までの間だったら\\r\\n      // 地面上 (isGrounded) にいることとみなす\\r\\n      //\\r\\n      //   ___\\r\\n      //  / | \\\\\\r\\n      // |  |  | player sphere\\r\\n      //  \\\\_|_/\\r\\n      //    |\\r\\n      //---[+]---- ground\\r\\n      //    |\\r\\n      //    |\\r\\n      //    | segment (player's head to almost -infinity)\\r\\n\\r\\n\\r\\n      var i, l,\\r\\n          groundContactInfo,\\r\\n          groundContactInfoTmp,\\r\\n          faces = this.collisionCandidate,\\r\\n          distanceToGround;\\r\\n\\r\\n      var head = new THREE.Vector3(\\r\\n        this.center.x,\\r\\n        this.center.y + this.radius,\\r\\n        this.center.z\\r\\n      );\\r\\n\\r\\n      var to = new THREE.Vector3(\\r\\n        this.center.x,\\r\\n        this.center.y - 1e10,\\r\\n        this.center.z\\r\\n      );\\r\\n\\r\\n      for ( i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n        groundContactInfoTmp = ns.collision.testSegmentTriangle( head, to, faces[ i ].a, faces[ i ].b, faces[ i ].c );\\r\\n\\r\\n        if ( groundContactInfoTmp && !groundContactInfo ) {\\r\\n\\r\\n          groundContactInfo = groundContactInfoTmp;\\r\\n          groundContactInfo.face = faces[ i ];\\r\\n\\r\\n        } else if (\\r\\n          groundContactInfoTmp &&\\r\\n          groundContactInfoTmp.contactPoint.y > groundContactInfo.contactPoint.y\\r\\n        ) {\\r\\n          \\r\\n          groundContactInfo = groundContactInfoTmp;\\r\\n          groundContactInfo.face = faces[ i ];\\r\\n\\r\\n        }\\r\\n\\r\\n      }\\r\\n\\r\\n      if ( !groundContactInfo ) {\\r\\n\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      this.groundHeight = groundContactInfo.contactPoint.y;\\r\\n      this.groundNormal.copy( groundContactInfo.face.normal );\\r\\n\\r\\n      var top    = head.y;\\r\\n      var bottom = this.center.y - this.radius - this.groundPadding;\\r\\n\\r\\n      if ( this.isJumping && 0 < this.currentJumpPower ) {\\r\\n\\r\\n        this.isOnSlope  = false;\\r\\n        this.isGrounded = false;\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      this.isGrounded = ( bottom <= this.groundHeight && this.groundHeight <= top );\\r\\n      this.isOnSlope  = ( this.groundNormal.y <= this.maxSlopeGradient );\\r\\n\\r\\n      if ( this.isGrounded ) {\\r\\n\\r\\n        this.isJumping = false;\\r\\n\\r\\n      }\\r\\n\\r\\n    },\\r\\n\\r\\n    updatePosition: function ( dt ) {\\r\\n\\r\\n      var x = this.center.x + this.velocity.x * dt,\\r\\n          y = this.center.y + this.velocity.y * dt,\\r\\n          z = this.center.z + this.velocity.z * dt;\\r\\n\\r\\n      if ( this.isGrounded ) {\\r\\n\\r\\n        y = this.groundHeight + this.radius;\\r\\n\\r\\n      }\\r\\n\\r\\n      this.center.set( x, y, z );\\r\\n\\r\\n    },\\r\\n\\r\\n    collisionDetection: function () {\\r\\n\\r\\n      var i, l,\\r\\n          faces = this.collisionCandidate,\\r\\n          contactInfo;\\r\\n\\r\\n      this.contactInfo.length = 0;\\r\\n\\r\\n      for ( i = 0, l = faces.length; i < l; i ++ ) {\\r\\n\\r\\n        contactInfo = ns.collision.isIntersectionSphereTriangle( this, faces[ i ].a, faces[ i ].b, faces[ i ].c, faces[ i ].normal );\\r\\n\\r\\n        if ( !contactInfo ) {\\r\\n\\r\\n          continue;\\r\\n\\r\\n        }\\r\\n\\r\\n        contactInfo.face = faces[ i ];\\r\\n        this.contactInfo.push( contactInfo );\\r\\n\\r\\n      }\\r\\n\\r\\n    },\\r\\n\\r\\n    solvePosition: function () {\\r\\n\\r\\n      var face,\\r\\n          normal,\\r\\n          distance,\\r\\n          point1 = new THREE.Vector3(),\\r\\n          point2 = new THREE.Vector3(),\\r\\n          direction = new THREE.Vector3(),\\r\\n          plainD,\\r\\n          t,\\r\\n          translateScoped = new THREE.Vector3(),\\r\\n          translate = new THREE.Vector3(),\\r\\n          i, l;\\r\\n\\r\\n      if ( this.contactInfo.length === 0 ) {\\r\\n\\r\\n        this.object.position.copy( this.center );\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      // \\r\\n      // vs walls and sliding on the wall\\r\\n\\r\\n      for ( i = 0, l = this.contactInfo.length; i < l; i ++ ) {\\r\\n\\r\\n        face = this.contactInfo[ i ].face;\\r\\n        normal = this.contactInfo[ i ].face.normal;\\r\\n        distance = this.contactInfo[ i ].distance;\\r\\n\\r\\n        // if ( 0 <= distance ) {\\r\\n\\r\\n        //   continue;\\r\\n\\r\\n        // }\\r\\n\\r\\n        if ( this.maxSlopeGradient < normal.y ) {\\r\\n\\r\\n          // this triangle is a ground or slope, not a wall or ceil.\\r\\n          continue;\\r\\n\\r\\n        }\\r\\n\\r\\n        var isSlopeFace = ( this.maxSlopeGradient <= face.normal.y && face.normal.y < 1 );\\r\\n\\r\\n        if ( this.isJumping && 0 >= this.currentJumpPower && isSlopeFace ) {\\r\\n\\r\\n          this.isJumping = false;\\r\\n          this.isGrounded = true;\\r\\n          // console.log( 'jump end' );\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( this.isGrounded || this.isOnSlope ) {\\r\\n\\r\\n          // http://gamedev.stackexchange.com/questions/80293/how-do-i-resolve-a-sphere-triangle-collision-in-a-given-direction\\r\\n          point1.copy( normal ).multiplyScalar( -this.radius ).add( this.center );\\r\\n          direction.set( normal.x, 0, normal.z ).normalize();\\r\\n          plainD = face.a.dot( normal );\\r\\n          t = ( plainD - ( normal.x * point1.x + normal.y * point1.y + normal.z * point1.z ) ) / ( normal.x * direction.x + normal.y * direction.y + normal.z * direction.z );\\r\\n          point2.copy( direction ).multiplyScalar( t ).add( point1 );\\r\\n          translateScoped.subVectors( point2, point1 );\\r\\n\\r\\n          if ( Math.abs( translate.x ) > Math.abs( translateScoped.x ) ) {\\r\\n\\r\\n            translate.x += translateScoped.x;\\r\\n\\r\\n          }\\r\\n\\r\\n          if ( Math.abs( translate.z ) > Math.abs( translateScoped.z ) ) {\\r\\n\\r\\n            translate.z += translateScoped.z;\\r\\n\\r\\n          }\\r\\n\\r\\n          // break;\\r\\n          continue;\\r\\n\\r\\n        }\\r\\n\\r\\n      }\\r\\n\\r\\n      this.center.add( translate );\\r\\n      this.object.position.copy( this.center );\\r\\n\\r\\n    },\\r\\n\\r\\n    events: function () {\\r\\n\\r\\n      var isFirstUpdate = true,\\r\\n          wasGrounded,\\r\\n          wasOnSlope,\\r\\n          wasIdling,\\r\\n          wasRunning,\\r\\n          wasJumping;\\r\\n\\r\\n      return function () {\\r\\n\\r\\n        if ( isFirstUpdate ) {\\r\\n\\r\\n            isFirstUpdate = false;\\r\\n            wasGrounded = this.isGrounded;\\r\\n            wasOnSlope  = this.isOnSlope;\\r\\n            wasIdling   = this.isIdling;\\r\\n            wasRunning  = this.isRunning;\\r\\n            wasJumping  = this.isJumping;\\r\\n            return;\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( !wasRunning && !this.isRunning && this.isGrounded && !this.isIdling ) {\\r\\n\\r\\n            this.isIdling = true;\\r\\n            this.dispatchEvent( { type: 'startIdling' } );\\r\\n\\r\\n        } else if (\\r\\n          ( !wasRunning && this.isRunning && !this.isJumping && this.isGrounded ) ||\\r\\n          ( !wasGrounded && this.isGrounded && this.isRunning ) ||\\r\\n          ( wasOnSlope && !this.isOnSlope && this.isRunning && this.isGrounded )\\r\\n        ) {\\r\\n\\r\\n            this.isIdling = false;\\r\\n            this.dispatchEvent( { type: 'startRunning' } );\\r\\n          \\r\\n        } else if ( !wasJumping && this.isJumping ) {\\r\\n\\r\\n            this.isIdling = false;\\r\\n            this.dispatchEvent( { type: 'startJumping' } );\\r\\n          \\r\\n        } else if ( !wasOnSlope && this.isOnSlope ) {\\r\\n\\r\\n            this.dispatchEvent( { type: 'startSliding' } );\\r\\n          \\r\\n        } else if ( wasGrounded && !this.isGrounded && !this.isJumping ) {\\r\\n\\r\\n            this.dispatchEvent( { type: 'startFalling' } );\\r\\n          \\r\\n        }\\r\\n\\r\\n        if ( !wasGrounded && this.isGrounded ) {\\r\\n\\r\\n            this.dispatchEvent( { type: 'endJumping' } );\\r\\n          \\r\\n        }\\r\\n\\r\\n        wasGrounded = this.isGrounded;\\r\\n        wasOnSlope  = this.isOnSlope;\\r\\n        wasIdling   = this.isIdling;\\r\\n        wasRunning  = this.isRunning;\\r\\n        wasJumping  = this.isJumping;\\r\\n\\r\\n      };\\r\\n\\r\\n    }(),\\r\\n\\r\\n    setDirection : function () {\\r\\n\\r\\n\\r\\n\\r\\n    },\\r\\n\\r\\n    jump: function () {\\r\\n      \\r\\n      if ( this.isJumping || !this.isGrounded || this.isOnSlope ) {\\r\\n\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      // since ios dose not support porformance.now()\\r\\n      // this.jumpStartTime = performance.now();\\r\\n      this.jumpStartTime = Date.now();\\r\\n      this.currentJumpPower = 0.01;\\r\\n      this.isJumping = true;\\r\\n\\r\\n    },\\r\\n\\r\\n    updateJumping: function () {\\r\\n\\r\\n      var JUMP_DURATION = 1500;\\r\\n\\r\\n      if ( !this.isJumping ) {\\r\\n\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      // since ios dose not support porformance.now()\\r\\n      // var elapsed = performance.now() - this.jumpStartTime;\\r\\n      var elapsed = Date.now() - this.jumpStartTime;\\r\\n      var progress = elapsed / JUMP_DURATION;\\r\\n      this.currentJumpPower = Math.cos( Math.min( progress, 1 ) * Math.PI );\\r\\n\\r\\n    }\\r\\n\\r\\n  }\\r\\n\\r\\n} )( THREE, MW );\\r\\n\\r\\n// @author yomotsu\\r\\n// MIT License\\r\\n\\r\\nMW.AnimationController = function ( mesh ) {\\r\\n\\r\\n  this.mesh   = mesh;\\r\\n  this.motion = {};\\r\\n  this.mixer  = new THREE.AnimationMixer( mesh );\\r\\n  this.currentMotionName = \\\"\\\";\\r\\n\\r\\n  var i, l, anim;\\r\\n\\r\\n  for ( i = 0, l = this.mesh.geometry.animations.length; i < l; i ++ ) {\\r\\n\\r\\n    anim = this.mesh.geometry.animations[ i ];\\r\\n    this.motion[ anim.name ] = this.mixer.clipAction( anim );\\r\\n    this.motion[ anim.name ].setEffectiveWeight( 1 );\\r\\n\\r\\n  }\\r\\n  \\r\\n};\\r\\n\\r\\nMW.AnimationController.prototype = {\\r\\n\\r\\n  play: function ( name ) {\\r\\n\\r\\n    if ( this.currentMotionName === name ) { return; }\\r\\n\\r\\n    if ( this.motion[ this.currentMotionName ] ) {\\r\\n\\r\\n      var from = this.motion[ this.currentMotionName ].play();\\r\\n      var to   = this.motion[ name ].play();\\r\\n\\r\\n      from.enabled = true;\\r\\n      to.enabled = true;\\r\\n\\r\\n      from.crossFadeTo( to, .3 );\\r\\n\\r\\n    } else {\\r\\n\\r\\n      this.motion[ name ].enabled = true;\\r\\n      this.motion[ name ].play();\\r\\n\\r\\n    }\\r\\n\\r\\n    this.currentMotionName = name;\\r\\n\\r\\n  },\\r\\n\\r\\n  turn: function () {\\r\\n\\r\\n    var DURATION  = 200;\\r\\n    var TAU = 2 * Math.PI;\\r\\n\\r\\n    var mod = function ( a, n ) { return ( a % n + n ) % n; };\\r\\n\\r\\n    var getDeltaAngle = function ( current, target ) {\\r\\n\\r\\n      var a = mod( ( current - target ), TAU );\\r\\n      var b = mod( ( target - current ), TAU );\\r\\n\\r\\n      return a < b ? -a : b;\\r\\n\\r\\n    };\\r\\n\\r\\n    return function ( rad, immediate ) {\\r\\n\\r\\n\\r\\n      var that       = this;\\r\\n      var progress   = 0;\\r\\n      var prevRotY   = this.mesh.rotation.y;\\r\\n      var targetRotY = rad;\\r\\n      var deltaY     = getDeltaAngle( prevRotY, targetRotY );\\r\\n      // var duration   = Math.abs( deltaY ) * 100;\\r\\n      var start      = Date.now();\\r\\n      var end        = start + DURATION;\\r\\n\\r\\n      if ( immediate ) {\\r\\n\\r\\n        this.mesh.rotation.y = targetRotY;\\r\\n        return;\\r\\n\\r\\n      }\\r\\n\\r\\n      if ( this._targetRotY === targetRotY ) { return; }\\r\\n\\r\\n      this._targetRotY = targetRotY;\\r\\n\\r\\n      ( function () {\\r\\n\\r\\n        var _targetRotY = targetRotY;\\r\\n\\r\\n        ( function interval () {\\r\\n\\r\\n          var now = Date.now();\\r\\n          var isAborted = _targetRotY !== that._targetRotY;\\r\\n\\r\\n          if ( isAborted ) { return; }\\r\\n\\r\\n          if ( now >= end ) {\\r\\n\\r\\n            that.mesh.rotation.y = _targetRotY;\\r\\n            delete that._targetRotY;\\r\\n            return;\\r\\n\\r\\n          }\\r\\n\\r\\n          requestAnimationFrame( interval );\\r\\n          progress = ( now - start ) / DURATION;\\r\\n          that.mesh.rotation.y = prevRotY + deltaY * progress;\\r\\n\\r\\n        } )();\\r\\n\\r\\n      } )();\\r\\n\\r\\n    }\\r\\n\\r\\n  }(),\\r\\n\\r\\n  update: function ( delta ) {\\r\\n\\r\\n    this.mixer.update( delta );\\r\\n\\r\\n  }\\r\\n\\r\\n};\\r\\n\\r\\n// @author yomotsu\\r\\n// MIT License\\r\\n\\r\\n;( function ( THREE, ns ) {\\r\\n\\r\\n  'use strict';\\r\\n\\r\\n  var KEY_W     = 87,\\r\\n      KEY_UP    = 38,\\r\\n      KEY_S     = 83,\\r\\n      KEY_DOWN  = 40,\\r\\n      KEY_A     = 65,\\r\\n      KEY_LEFT  = 37,\\r\\n      KEY_D     = 68,\\r\\n      KEY_RIGHT = 39,\\r\\n      KEY_SPACE = 32,\\r\\n      KEY_R     = 82; // hack //\\r\\n\\r\\n  var DEG_0   = THREE.Math.degToRad(   0 ),\\r\\n      DEG_45  = THREE.Math.degToRad(  45 ),\\r\\n      DEG_90  = THREE.Math.degToRad(  90 ),\\r\\n      DEG_135 = THREE.Math.degToRad( 135 ),\\r\\n      DEG_180 = THREE.Math.degToRad( 180 ),\\r\\n      DEG_225 = THREE.Math.degToRad( 225 ),\\r\\n      DEG_270 = THREE.Math.degToRad( 270 ),\\r\\n      DEG_315 = THREE.Math.degToRad( 315 ),\\r\\n      DEG_360 = THREE.Math.degToRad( 360 );\\r\\n\\r\\n  ns.KeyInputControl = function () {\\r\\n    \\r\\n    Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\\r\\n\\r\\n    this.isDisabled = false;\\r\\n\\r\\n    this.isUp    = false;\\r\\n    this.isDown  = false;\\r\\n    this.isLeft  = false;\\r\\n    this.isRight = false;\\r\\n    this.inRun   = false; // hack.\\r\\n    this.isMoveKeyHolded = false;\\r\\n    this.frontAngle = 0;\\r\\n\\r\\n    this._keydownListener = onkeydown.bind( this );\\r\\n    this._keyupListener   = onkeyup.bind( this );\\r\\n    this._blurListener    = onblur.bind( this );\\r\\n\\r\\n    window.addEventListener( 'keydown', this._keydownListener, false );\\r\\n    window.addEventListener( 'keyup',   this._keyupListener,   false );\\r\\n    window.addEventListener( 'blur',    this._blurListener,    false );\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.KeyInputControl.prototype.jump = function () {\\r\\n\\r\\n    this.dispatchEvent( { type: 'jumpkeypress' } );\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.KeyInputControl.prototype.updateAngle = function () {\\r\\n\\r\\n    var up    = this.isUp;\\r\\n    var down  = this.isDown;\\r\\n    var left  = this.isLeft;\\r\\n    var right = this.isRight;\\r\\n\\r\\n    if (  up && !left && !down && !right )      { this.frontAngle = DEG_0  ; }\\r\\n    else if (  up &&  left && !down && !right ) { this.frontAngle = DEG_45 ; }\\r\\n    else if ( !up &&  left && !down && !right ) { this.frontAngle = DEG_90 ; }\\r\\n    else if ( !up &&  left &&  down && !right ) { this.frontAngle = DEG_135; }\\r\\n    else if ( !up && !left &&  down && !right ) { this.frontAngle = DEG_180; }\\r\\n    else if ( !up && !left &&  down &&  right ) { this.frontAngle = DEG_225; }\\r\\n    else if ( !up && !left && !down &&  right ) { this.frontAngle = DEG_270; }\\r\\n    else if (  up && !left && !down &&  right ) { this.frontAngle = DEG_315; }\\r\\n\\r\\n  };\\r\\n\\r\\n\\r\\n  function onkeydown ( e ) {\\r\\n\\r\\n    if ( this.isDisabled ) { return; }\\r\\n\\r\\n    switch ( e.keyCode ) {\\r\\n\\r\\n      case KEY_W :\\r\\n      case KEY_UP :\\r\\n        this.isUp = true;\\r\\n        break;\\r\\n\\r\\n      case KEY_S :\\r\\n      case KEY_DOWN :\\r\\n        this.isDown = true;\\r\\n        break;\\r\\n\\r\\n      case KEY_A :\\r\\n      case KEY_LEFT :\\r\\n        this.isLeft = true;\\r\\n        break;\\r\\n\\r\\n      case KEY_D :\\r\\n      case KEY_RIGHT :\\r\\n        this.isRight = true;\\r\\n        break;\\r\\n\\r\\n      case KEY_SPACE :\\r\\n        this.jump();\\r\\n        break;\\r\\n\\r\\n      default:\\r\\n        return;\\r\\n\\r\\n    }\\r\\n    \\r\\n    var prevAngle = this.frontAngle;\\r\\n\\r\\n    this.updateAngle();\\r\\n\\r\\n    if ( prevAngle !== this.frontAngle ) {\\r\\n\\r\\n      this.dispatchEvent( { type: 'movekeychange' } );\\r\\n\\r\\n    }\\r\\n\\r\\n    if (\\r\\n      ( this.isUp || this.isDown || this.isLeft || this.isRight ) &&\\r\\n      !this.isMoveKeyHolded\\r\\n    ) {\\r\\n\\r\\n      this.isMoveKeyHolded = true;\\r\\n      this.dispatchEvent( { type: 'movekeyon' } );\\r\\n\\r\\n    }\\r\\n\\r\\n  }\\r\\n\\r\\n  function onkeyup ( e ) {\\r\\n\\r\\n    if ( this.isDisabled ) { return; }\\r\\n\\r\\n    switch ( e.keyCode ) {\\r\\n\\r\\n      case KEY_W :\\r\\n      case KEY_UP :\\r\\n        this.isUp = false;\\r\\n        break;\\r\\n\\r\\n      case KEY_S :\\r\\n      case KEY_DOWN :\\r\\n        this.isDown = false;\\r\\n        break;\\r\\n        \\r\\n      case KEY_A :\\r\\n      case KEY_LEFT :\\r\\n        this.isLeft = false;\\r\\n        break;\\r\\n\\r\\n      case KEY_D :\\r\\n      case KEY_RIGHT :\\r\\n        this.isRight = false;\\r\\n        break;\\r\\n\\r\\n      case KEY_SPACE :\\r\\n        break;\\r\\n\\r\\n      case KEY_R:\\r\\n        this.inRun = !this.inRun; // hack //  console.log(\\\"case KEY_R:\\\", e.keyCode, this.inRun);\\r\\n        break;\\r\\n\\r\\n      default:\\r\\n        return;\\r\\n\\r\\n    }\\r\\n    \\r\\n    var prevAngle = this.frontAngle;\\r\\n\\r\\n    this.updateAngle();\\r\\n\\r\\n    if ( prevAngle !== this.frontAngle ) {\\r\\n\\r\\n      this.dispatchEvent( { type: 'movekeychange' } );\\r\\n\\r\\n    }\\r\\n\\r\\n    if ( !this.isUp && !this.isDown && !this.isLeft && !this.isRight &&\\r\\n      (\\r\\n           e.keyCode === KEY_W\\r\\n        || e.keyCode === KEY_UP\\r\\n        || e.keyCode === KEY_S\\r\\n        || e.keyCode === KEY_DOWN\\r\\n        || e.keyCode === KEY_A\\r\\n        || e.keyCode === KEY_LEFT\\r\\n        || e.keyCode === KEY_D\\r\\n        || e.keyCode === KEY_RIGHT\\r\\n      )\\r\\n    ) {\\r\\n\\r\\n      this.isMoveKeyHolded = false;\\r\\n      this.dispatchEvent( { type: 'movekeyoff' } );\\r\\n\\r\\n    }\\r\\n\\r\\n  }\\r\\n\\r\\n  function onblur ( e ) {\\r\\n\\r\\n    this.isUp    = false;\\r\\n    this.isDown  = false;\\r\\n    this.isLeft  = false;\\r\\n    this.isRight = false;\\r\\n//  this.inRun   = false; // hack // DO NOT SET TO FALSE ON BLUR. //\\r\\n    \\r\\n    if ( this.isMoveKeyHolded ) {\\r\\n\\r\\n      this.isMoveKeyHolded = false;\\r\\n      this.dispatchEvent( { type: 'movekeyoff' } );\\r\\n\\r\\n    }\\r\\n\\r\\n  }\\r\\n\\r\\n} )( THREE, MW );\\r\\n\\r\\n// @author yomotsu\\r\\n// MIT License\\r\\n\\r\\n;( function ( THREE, ns ) {\\r\\n\\r\\n  'use strict';\\r\\n\\r\\n  var PI2     = Math.PI * 2,\\r\\n      PI_HALF = Math.PI / 2;\\r\\n\\r\\n  var modulo = function ( n, d ) {\\r\\n\\r\\n    return ( ( n % d ) + d ) % d;\\r\\n\\r\\n  };\\r\\n\\r\\n  // camera              isntance of THREE.Camera\\r\\n  // trackObject         isntance of THREE.Object3D\\r\\n  // params.el           DOM element\\r\\n  // params.radius       number\\r\\n  // params.minRadius    number\\r\\n  // params.maxRadius    number\\r\\n  // params.rigidObjects array of inctances of THREE.Mesh\\r\\n  ns.TPSCameraControl = function ( camera, trackObject, params ) {\\r\\n\\r\\n    Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\\r\\n    this.camera = camera;\\r\\n    this.trackObject  = trackObject;\\r\\n    this.el           = params && params.el || document.body;\\r\\n    this.offset       = params && params.offset || new THREE.Vector3( 0, 0, 0 ),\\r\\n    this.radius       = params && params.radius    || 10;\\r\\n    this.minRadius    = params && params.minRadius || 1;\\r\\n    this.maxRadius    = params && params.maxRadius || 30;\\r\\n    this.rigidObjects = params && params.rigidObjects || [];\\r\\n    this.lat   = 0;\\r\\n    this.lon   = 0;\\r\\n    this.phi   = 0; // angle of zenith\\r\\n    this.theta = 0; // angle of azimuth\\r\\n    this.mouseAccelerationX = params && params.mouseAccelerationX !== undefined ? params.mouseAccelerationX : 100;\\r\\n    this.mouseAccelerationY = params && params.mouseAccelerationY !== undefined ? params.mouseAccelerationY : 30;\\r\\n    this._pointerStart = { x: 0, y: 0 };\\r\\n    this._pointerLast  = { x: 0, y: 0 };\\r\\n\\r\\n    this.setNearPlainCornersWithPadding();\\r\\n    this.update();\\r\\n\\r\\n    this._mousedownListener = onmousedown.bind( this );\\r\\n    this._mouseupListener   = onmouseup.bind( this );\\r\\n    this._mousedragListener = onmousedrag.bind( this );\\r\\n    this._scrollListener    = onscroll.bind( this );\\r\\n\\r\\n    this.el.addEventListener( 'mousedown', this._mousedownListener, false );\\r\\n    this.el.addEventListener( 'mouseup',   this._mouseupListener,   false );\\r\\n    this.el.addEventListener( 'mousewheel',     this._scrollListener, false );\\r\\n    this.el.addEventListener( 'DOMMouseScroll', this._scrollListener, false );\\r\\n\\r\\n  };\\r\\n\\r\\n  ns.TPSCameraControl.prototype = {\\r\\n\\r\\n    constructor: ns.TPSCameraControl,\\r\\n\\r\\n    update: function () {\\r\\n\\r\\n      var position,\\r\\n          distance;\\r\\n\\r\\n      this._center = new THREE.Vector3(\\r\\n        this.trackObject.matrixWorld.elements[ 12 ] + this.offset.x,\\r\\n        this.trackObject.matrixWorld.elements[ 13 ] + this.offset.y,\\r\\n        this.trackObject.matrixWorld.elements[ 14 ] + this.offset.z\\r\\n      );\\r\\n      position = new THREE.Vector3(\\r\\n        Math.cos( this.phi ) * Math.cos( this.theta + PI_HALF ),\\r\\n        Math.sin( this.phi ),\\r\\n        Math.cos( this.phi ) * Math.sin( this.theta + PI_HALF )\\r\\n      );\\r\\n      distance = this.collisionTest( position.clone().normalize() );\\r\\n      position.multiplyScalar( distance );\\r\\n      position.add( this._center );\\r\\n      this.camera.position.copy( position );\\r\\n\\r\\n      if ( this.lat === 90 ) {\\r\\n\\r\\n        this.camera.up.set(\\r\\n          Math.cos( this.theta + Math.PI ),\\r\\n          0,\\r\\n          Math.sin( this.theta + Math.PI )\\r\\n        );\\r\\n\\r\\n      } else if ( this.lat === -90 ) {\\r\\n\\r\\n        this.camera.up.set(\\r\\n          Math.cos( this.theta ),\\r\\n          0,\\r\\n          Math.sin( this.theta )\\r\\n        );\\r\\n\\r\\n      } else {\\r\\n\\r\\n        this.camera.up.set( 0, 1, 0 );\\r\\n\\r\\n      }\\r\\n\\r\\n      this.camera.lookAt( this._center );\\r\\n      this.dispatchEvent( { type: 'updated' } );\\r\\n\\r\\n    },\\r\\n\\r\\n    getFrontAngle: function () {\\r\\n\\r\\n      return PI2 + this.theta;\\r\\n\\r\\n    },\\r\\n\\r\\n    setNearPlainCornersWithPadding: function () {\\r\\n\\r\\n      var near = this.camera.near,\\r\\n          halfFov = this.camera.fov * 0.5,\\r\\n          h = ( Math.tan( THREE.Math.degToRad( halfFov ) ) * near ),\\r\\n          w = h * this.camera.aspect;\\r\\n\\r\\n      this.nearPlainCornersWithPadding = [\\r\\n        new THREE.Vector3( -w - near, -h - near, 0 ),\\r\\n        new THREE.Vector3(  w + near, -h - near, 0 ),\\r\\n        new THREE.Vector3(  w + near,  h + near, 0 ),\\r\\n        new THREE.Vector3( -w - near,  h + near, 0 )\\r\\n      ];\\r\\n\\r\\n    },\\r\\n\\r\\n    setLatLon: function ( lat, lon ) {\\r\\n\\r\\n      this.lat = lat >  90 ?  90 :\\r\\n                 lat < -90 ? -90 :\\r\\n                 lat;\\r\\n      this.lon = lon < 0 ? 360 + lon % 360 : lon % 360;\\r\\n\\r\\n      this.phi   =  THREE.Math.degToRad( this.lat );\\r\\n      this.theta = -THREE.Math.degToRad( this.lon );\\r\\n\\r\\n    },\\r\\n\\r\\n    collisionTest: function ( direction ) {\\r\\n\\r\\n      var i,\\r\\n          distance = this.radius,\\r\\n          nearPlainCorner,\\r\\n          rotationMatrix = new THREE.Matrix4(),\\r\\n          rotationX = new THREE.Matrix4().makeRotationX( this.phi ),\\r\\n          rotationY = new THREE.Matrix4().makeRotationY( this.theta ),\\r\\n          origin,\\r\\n          raycaster,\\r\\n          intersects;\\r\\n\\r\\n      rotationMatrix.multiplyMatrices( rotationX, rotationY );\\r\\n\\r\\n      for ( i = 0; i < 4; i ++ ) {\\r\\n\\r\\n        nearPlainCorner = this.nearPlainCornersWithPadding[ i ].clone();\\r\\n        nearPlainCorner.applyMatrix4( rotationMatrix );\\r\\n\\r\\n        origin = new THREE.Vector3(\\r\\n          this._center.x + nearPlainCorner.x,\\r\\n          this._center.y + nearPlainCorner.y,\\r\\n          this._center.z + nearPlainCorner.z\\r\\n        );\\r\\n        raycaster = new THREE.Raycaster(\\r\\n          origin,           // origin\\r\\n          direction,        // direction\\r\\n          this.camera.near, // near\\r\\n          this.radius       // far\\r\\n        );\\r\\n        intersects = raycaster.intersectObjects( this.rigidObjects );\\r\\n\\r\\n        if ( intersects.length !== 0 && intersects[ 0 ].distance < distance ) {\\r\\n\\r\\n          distance = intersects[ 0 ].distance;\\r\\n\\r\\n        }\\r\\n\\r\\n      }\\r\\n\\r\\n      return distance;\\r\\n\\r\\n    }\\r\\n\\r\\n  };\\r\\n\\r\\n  function onmousedown ( event ) {\\r\\n\\r\\n    this.dispatchEvent( { type: 'mousedown' } );\\r\\n    this._pointerStart.x = event.clientX;\\r\\n    this._pointerStart.y = event.clientY;\\r\\n    this._pointerLast.x = this.lon;\\r\\n    this._pointerLast.y = this.lat;\\r\\n    this.el.removeEventListener( 'mousemove', this._mousedragListener, false );\\r\\n    this.el.addEventListener( 'mousemove', this._mousedragListener, false );\\r\\n//  document.body.className += ' js-TPSCameraDragging';\\r\\n    document.body.classList.add(\\\"js-TPSCameraDragging\\\");\\r\\n\\r\\n  }\\r\\n\\r\\n  function onmouseup () {\\r\\n\\r\\n    this.dispatchEvent( { type: 'mouseup' } );\\r\\n    this.el.removeEventListener( 'mousemove', this._mousedragListener, false );\\r\\n//  document.body.className = document.body.className.replace( / js-TPSCameraDragging/g, '' );\\r\\n    document.body.classList.remove(\\\"js-TPSCameraDragging\\\");\\r\\n\\r\\n  }\\r\\n\\r\\n  function onmousedrag ( event ) {\\r\\n\\r\\n    var w = this.el.offsetWidth,\\r\\n        h = this.el.offsetHeight,\\r\\n        x = ( this._pointerStart.x - event.clientX ) / w * 2,\\r\\n        y = ( this._pointerStart.y - event.clientY ) / h * 2;\\r\\n\\r\\n    this.setLatLon(\\r\\n      this._pointerLast.y + y * this.mouseAccelerationY,\\r\\n      this._pointerLast.x + x * this.mouseAccelerationX\\r\\n    );\\r\\n\\r\\n  }\\r\\n\\r\\n  function onscroll ( event ) {\\r\\n\\r\\n    event.preventDefault();\\r\\n\\r\\n    if ( event.wheelDeltaY ) {\\r\\n\\r\\n      // WebKit\\r\\n      this.radius -= event.wheelDeltaY * 0.05;\\r\\n\\r\\n    } else if ( event.wheelDelta ) {\\r\\n\\r\\n      // IE\\r\\n      this.radius -= event.wheelDelta * 0.05 ;\\r\\n\\r\\n    } else if ( event.detail ) {\\r\\n\\r\\n      // Firefox\\r\\n      this.radius += event.detail;\\r\\n\\r\\n    }\\r\\n\\r\\n    this.radius = Math.max( this.radius, this.minRadius );\\r\\n    this.radius = Math.min( this.radius, this.maxRadius );\\r\\n\\r\\n  }\\r\\n\\r\\n} )( THREE, MW );\\r\\n\""
		},
		{
			"name": "VirtualInput.js",
			"_id": "VirtualInput",
			"source": "\"/*!\\r\\n * @author yomotsu http://yomotsu.net/\\r\\n * MIT License\\r\\n */\\r\\n\\r\\nvirtualInput = {};\\r\\n\\r\\n( function ( ns ) {\\r\\n\\r\\n    var _ua = function () {\\r\\n        return {\\r\\n            Touch: typeof document.ontouchstart != \\\"undefined\\\",\\r\\n            Pointer: window.navigator.pointerEnabled,\\r\\n            MSPoniter: window.navigator.msPointerEnabled\\r\\n        }\\r\\n    };\\r\\n\\r\\n    ns._start = \\\"pointerdown MSPointerDown touchstart mousedown\\\";\\r\\n    ns._move  = \\\"pointermove MSPointerMove touchmove  mousemove\\\";\\r\\n    ns._end   = \\\"pointerup   MSPointerUp   touchend   mouseup\\\";\\r\\n\\r\\n    ns.Joystick = function ( $container, size, params ) {\\r\\n\\r\\n        Object.assign( this, THREE.EventDispatcher.prototype );  //  THREE.EventDispatcher.prototype.apply( this );\\r\\n\\r\\n        this.angle = 0;\\r\\n        this.position = { x: 0, y: 0 };\\r\\n        this.pointerId = null;\\r\\n        this.isActive = false;\\r\\n\\r\\n        this.width = size * 2;\\r\\n        this.halfWidth = size;\\r\\n\\r\\n        var that = this;\\r\\n        var id = params && params.id ? params.id  : '';\\r\\n        var template = [\\r\\n          '<div class=\\\"gameinput-joystick\\\" id=\\\"' + id + '\\\">',\\r\\n            '<div class=\\\"gameinput-joystick__button\\\"></div>',\\r\\n            '<svg class=\\\"gameinput-frame\\\" width=\\\"' + this.width + '\\\" height=\\\"' + this.width + '\\\" viewbox=\\\"0 0 64 64\\\">',\\r\\n              '<polygon points=\\\"32 19 34 21 30 21\\\" fill=\\\"#fff\\\"></polygon>',\\r\\n              '<polygon points=\\\"45 32 43 34 43 30\\\" fill=\\\"#fff\\\"></polygon>',\\r\\n              '<polygon points=\\\"32 45 34 43 30 43\\\" fill=\\\"#fff\\\"></polygon>',\\r\\n              '<polygon points=\\\"19 32 21 34 21 30\\\" fill=\\\"#fff\\\"></polygon>',\\r\\n              '<circle cx=\\\"32\\\" cy=\\\"32\\\" r=\\\"16\\\" fill=\\\"none\\\" stroke=\\\"#fff\\\" stroke-width=\\\"' + ( this.halfWidth / 64 ) + '\\\"></circle>',\\r\\n            '</svg>',\\r\\n          '</div>'\\r\\n        ].join( '' );\\r\\n\\r\\n        var $win = $( window );\\r\\n        this.$all = $( template );\\r\\n        this.$button = this.$all.find( \\\".gameinput-joystick__button\\\" );\\r\\n        $container.append( this.$all );\\r\\n\\r\\n        this.$all.css({\\r\\n            width:  this.width,\\r\\n            height: this.width\\r\\n        });\\r\\n\\r\\n        this.$button.css({\\r\\n            width:  size * .6,\\r\\n            height: size * .6\\r\\n        });\\r\\n\\r\\n        this.offset = this.$all.offset();\\r\\n        this.buttonRadius = this.$button.width() / 2;\\r\\n        this.frameRadius = size / 2;\\r\\n    //  this.position = { x: 0, y: 0 };\\r\\n\\r\\n        var onbuttondown = function ( event ) {\\r\\n\\r\\n            event.preventDefault();\\r\\n            event.stopPropagation();\\r\\n            \\r\\n            that.dispatchEvent( { type: 'active' } );\\r\\n            that.isActive = true;\\r\\n            \\r\\n            if ( event.originalEvent.pointerId ) {\\r\\n            \\r\\n                that.pointerId = event.originalEvent.pointerId;\\r\\n            \\r\\n            } else if ( event.originalEvent.changedTouches ) {\\r\\n            \\r\\n                that.pointerId = event.originalEvent.changedTouches[ event.originalEvent.changedTouches.length - 1 ].identifier;\\r\\n            \\r\\n            }\\r\\n            \\r\\n            var coordinate = that.getEventCoordinate( event );\\r\\n            \\r\\n            if ( !coordinate ) { return; }\\r\\n            \\r\\n            that.setPosition( coordinate.x, coordinate.y );\\r\\n            \\r\\n            $win.on( ns._move, onbuttonmove );\\r\\n            $win.on( ns._end,  onbuttonup );\\r\\n\\r\\n        };\\r\\n\\r\\n        var onbuttonmove = function ( event ) {\\r\\n\\r\\n            event.preventDefault();\\r\\n            event.stopPropagation();\\r\\n            \\r\\n            var coordinate = that.getEventCoordinate( event );\\r\\n            \\r\\n            if ( !coordinate ) {\\r\\n                return;\\r\\n            }\\r\\n            \\r\\n            that.setPosition( coordinate.x, coordinate.y );\\r\\n\\r\\n        };\\r\\n\\r\\n        var onbuttonup = function ( event ) {\\r\\n\\r\\n            event.stopPropagation();\\r\\n\\r\\n            var wasEventHappend;\\r\\n\\r\\n            if ( event.originalEvent.pointerId ) {\\r\\n\\r\\n                if ( that.pointerId !== event.originalEvent.pointerId ) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n            } else if ( event.originalEvent.changedTouches ) {\\r\\n            \\r\\n                for ( i = 0, l = event.originalEvent.changedTouches.length; i < l; i ++ ) {\\r\\n                \\r\\n                    if ( that.pointerId === event.originalEvent.changedTouches[ i ].identifier ) {\\r\\n                        wasEventHappend = true;\\r\\n                        break;\\r\\n                    }\\r\\n                \\r\\n                    if ( !wasEventHappend ) {\\r\\n                        return;\\r\\n                    }\\r\\n                \\r\\n                }\\r\\n            \\r\\n            }\\r\\n\\r\\n            that.dispatchEvent( { type: \\\"disactive\\\" } );\\r\\n            that.isActive = false;\\r\\n            that.setPosition( 0, 0 );\\r\\n            $win.off( ns._move, onbuttonmove );\\r\\n            $win.off( ns._end,  onbuttonup );\\r\\n\\r\\n        };\\r\\n\\r\\n        this.setCSSPosition( 0, 0 );\\r\\n        this.$all.on( ns._start, onbuttondown );\\r\\n\\r\\n        $win.on( \\\"resize\\\", function () {\\r\\n\\r\\n            that.offset = that.$all.offset();\\r\\n\\r\\n        });\\r\\n\\r\\n    };\\r\\n\\r\\n    ns.Joystick.prototype.getLength = function ( x, y ) {\\r\\n        return Math.sqrt( Math.pow( x, 2 ) + Math.pow( y, 2 ) );\\r\\n    };\\r\\n\\r\\n    ns.Joystick.prototype.getAngle = function ( lengthX, lengthY ) {\\r\\n\\r\\n        if ( lengthX === 0 && lengthY === 0 ) {\\r\\n          return this.angle;\\r\\n        }\\r\\n\\r\\n        var angle = Math.atan( lengthY / lengthX );\\r\\n\\r\\n        if ( 0 > lengthX && 0 <= lengthY ) {\\r\\n          //the second quadrant\\r\\n          angle += Math.PI;\\r\\n\\r\\n        } else if ( 0 > lengthX && 0 > lengthY ) {\\r\\n          //the third quadrant\\r\\n          angle += Math.PI;\\r\\n\\r\\n        } else if ( 0 <= lengthX && 0 > lengthY ) {\\r\\n          //the fourth quadrant\\r\\n          angle += Math.PI * 2;\\r\\n\\r\\n        }\\r\\n\\r\\n        this.angle = angle;\\r\\n        return angle;\\r\\n\\r\\n    };\\r\\n\\r\\n    ns.Joystick.prototype.getPointOnRadius = function ( angle ) {\\r\\n\\r\\n        return {\\r\\n          x: Math.cos( angle ),\\r\\n          y: Math.sin( angle )\\r\\n        };\\r\\n\\r\\n    };\\r\\n\\r\\n    ns.Joystick.prototype.getEventCoordinate = function ( event ) {\\r\\n\\r\\n        var x, y, _event = null, i, l;\\r\\n\\r\\n        if ( event.originalEvent.pointerId ) {\\r\\n\\r\\n            if ( this.pointerId === event.originalEvent.pointerId ) {\\r\\n                _event = event.originalEvent;\\r\\n            }\\r\\n\\r\\n        } else if ( event.originalEvent.changedTouches ) {\\r\\n\\r\\n            for ( i = 0, l = event.originalEvent.changedTouches.length; i < l; i ++ ) {\\r\\n                if ( this.pointerId === event.originalEvent.changedTouches[ i ].identifier ) {\\r\\n                  _event = event.originalEvent.changedTouches[ i ];\\r\\n                }\\r\\n            }\\r\\n\\r\\n        } else {\\r\\n\\r\\n            _event = event;\\r\\n\\r\\n        }\\r\\n\\r\\n        if ( _event === null ) {\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        x = (   ( _event.clientX - this.offset.left ) - this.halfWidth ) / this.halfWidth * 2;\\r\\n        y = ( - ( _event.clientY - this.offset.top  ) + this.halfWidth ) / this.halfWidth * 2;\\r\\n\\r\\n        return { x: x, y: y };\\r\\n\\r\\n    };\\r\\n\\r\\n    ns.Joystick.prototype.setPosition = function ( x, y ) {\\r\\n\\r\\n        this.position.x = x;\\r\\n        this.position.y = y;\\r\\n        var length = this.getLength( x, y );\\r\\n        var angle = this.getAngle( x, y );\\r\\n\\r\\n        if ( 1 >= length ) {\\r\\n            this.setCSSPosition( x, y );\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        var pointOnRadius = this.getPointOnRadius( angle );\\r\\n        this.setCSSPosition( pointOnRadius.x, pointOnRadius.y );\\r\\n\\r\\n    };\\r\\n\\r\\n    ns.Joystick.prototype.setCSSPosition = function ( x, y ) {\\r\\n\\r\\n        this.$button.css( {\\r\\n            left: ( this.halfWidth + x * this.frameRadius - this.buttonRadius ),\\r\\n            top:  ( this.halfWidth - y * this.frameRadius - this.buttonRadius )\\r\\n        });\\r\\n\\r\\n    };\\r\\n\\r\\n    ns.Button = function ( $container, size, params ) {\\r\\n\\r\\n        Object.assign( this, THREE.EventDispatcher.prototype );  // THREE.EventDispatcher.prototype.apply( this );\\r\\n\\r\\n        var that = this;\\r\\n        var id = params && params.id ? params.id  : \\\"\\\";\\r\\n        var label = params.label;\\r\\n        var template = [\\r\\n          '<div class=\\\"gameinput-button\\\" id=\\\"' + id + '\\\">',\\r\\n            '<div class=\\\"gameinput-button__inner\\\">',\\r\\n              label,\\r\\n            '</div>',\\r\\n          '</div>'\\r\\n        ].join( \\\"\\\" );\\r\\n        var $button = $( template );\\r\\n        $container.append( $button );\\r\\n        $button.css( {\\r\\n            width: size,\\r\\n            height: size\\r\\n        });\\r\\n\\r\\n        $button.on( ns._start, function () {\\r\\n            that.dispatchEvent( { type: \\\"press\\\" } );\\r\\n        });\\r\\n\\r\\n    };\\r\\n\\r\\n})( virtualInput );\\r\\n\""
		}],
	"scripts": {
		"51901104-FADB-43D1-B2A3-15BDFA72A48D": [
			{
				"name": "AW3D.js",
				"source": "//  AW3D.js (v0.4.0)\n\n\tAW3D = { VERSION: \"0.4.1\" };\n\n//  Player Holder.\n    AW3D.PlayerHolder = function ( name ){\n        var holder = new THREE.Object3D();\n        holder.position.set( 0, 1, 0 );\n        holder.name = name || \"PLAYER HOLDER\";\n        return holder;\n    };\n\n//  Player Holder Helper.\n    AW3D.PlayerHolderHelper = function ( name ){\n        var helper = new THREE.BoxHelper();\n        helper.name = name || \"HOLDER HELPER\";\n        helper.visible = true;\n        return helper;\n    };\n\n//  Player Controller Direction pointer.\n    AW3D.DirectionPointer = function ( name ){\n        var geometry = new THREE.CylinderGeometry( 0, 1, 20, 12 );\n\t//  BE CAREFULL: is not \"mesh.rotation.y = -Math.PI\".\n        geometry.rotateX( Math.PI / 2 );  //  important!\n        var material = new THREE.MeshStandardMaterial({color:0x00ff00});\n        var pointer = new THREE.Mesh(geometry, material);\n        pointer.position.set(0, 15, 0);\n        pointer.name = name || \"PLAYER DIRECTION\";\n        pointer.visible = true;\n        return pointer;\n    };\n\n//  Player Sphere.\n    AW3D.PlayerSphere = function ( name ){\n        var sphere = new THREE.Mesh(\n            new THREE.SphereGeometry( 15, 8, 4 ),\n            new THREE.MeshBasicMaterial({ \n\t\t\t\tcolor: 0xff0000,  \n\t\t\t\twireframe: true,\n\t\t\t})\n        ); \n        sphere.position.y = 12;\n        sphere.name = name || \"PLAYER SPHERE\";\n        sphere.visible = true;\n        return sphere;\n    };\n\n//  Player pointer.\n    AW3D.PlayerPointer = function ( name ){\n        var geometry = new THREE.CylinderGeometry( 0, 1, 20, 12 );\n\t//  BE CAREFULL: is not \"mesh.rotation.y = -Math.PI\".\n        geometry.rotateX( Math.PI / 2 );  //  important!\n        var material = new THREE.MeshNormalMaterial();\n        var pointer = new THREE.Mesh(geometry, material);\n        pointer.position.set(0, 40, 0);\n        pointer.name = name || \"PLAYER POINTER\";\n        pointer.visible = true; // debugMode || false;\n        return pointer;\n    };\n\n\n//  OutfitManager.js\n\n    AW3D.OutfitManager = function(){\n\n        var self = this;\n\n\t//  requires \"signals.min.js\"\n        var Signal = signals.Signal;\n        this.added = new Signal();\n        this.removed = new Signal();\n        this.changed = new Signal();\n\n        this.eventTimeout = undefined;\n        this.direction = new THREE.Object3D();\n\n        this.gender = {\n            male    : false,\n            female  : false,\n            shemale : false,\n            trans   : false,\n        };\n\n        this.genitals = { \n            vagina   : false,\n            penis    : false,\n            attached : false,\n        };\n\n        this.layers = [\n            \"body\",\n            \"head\",\n            \"face\",\n            \"hairs\",\n            \"upper\", // chest.\n            \"lower\", // hips.\n            \"torso\", // (chest & hips).\n            \"arms\",\n            \"legs\",\n            \"hands\",\n            \"feet\",\n            \"genitals\", \n            \"skeleton\",\n        ];\n\n        this.slots = [\n            \"skeleton\",\n            \"body\",\n            \"hairs\",\n            \"eyes\",\n            \"glasses\",\n            \"hat\",\n            \"stockings\",\n            \"underwears\",\n            \"costume\",\n            \"tshirt\",\n            \"skirt\",\n            \"trousers\",\n            \"skirt\",\n            \"dress\",\n            \"shoes\",\n            \"coat\",\n            \"penis\", \n            \"vagina\",\n        ];\n\n        this.stickers = [\n            \"skin\",\n            \"makeup\",\n            \"tattoo\",\n            \"bodypaint\",\n            \"neck\",\n            \"chest\",\n            \"belly\",\n            \"upperlimb\",\n            \"arm\",\n            \"forearm\",\n            \"wrist\",\n            \"hand\",\n            \"lowerlimb\",\n            \"thigh\",\n            \"leg\",\n            \"foot\",\n            \"butt\",\n            \"back\",\n            \"scapula\",\n            \"lumbar\",\n        ];\n\n        this.attachments = [\n            \"helmet\",\n            \"face\",\n            \"mask\",\n            \"teeth\",\n            \"beard\",\n            \"eyelash\",\n            \"glasses\",\n            \"ears\",\n            \"belly\",\n            \"gun\",\n            \"wepon\",\n            \"knife\",\n            \"sword\",\n            \"bistol\",\n            \"watch\",\n            \"jewelry\",\n            \"earings\",\n            \"necklace\",\n            \"bracelet\",\n            \"bag\",\n            \"handbag\",\n            \"cape\",\n            \"coat\",\n            \"horn\",\n            \"tail\",\n            \"penis\", \n        ];\n\n        this.AnimationsHandler = [];\n\n    //  Outfit.AnimationsHandler is an simple array where local\n    //  player.outfit keeps the AW3D.AnimationHandler instances.\n\n        this.AnimationsHandler.reset = function(){\n            this.length = 0; // reset array.\n        };\n\n        this.AnimationsHandler.stop = function(){\n            this.forEach( function( anim ){\n                if (!!anim ) anim.stop();\n            });\n        };\n\n        this.AnimationsHandler.jump = function(){\n            this.forEach( function( anim ){\n                if (!!anim ) anim.jump();\n            });\n        };\n\n        this.AnimationsHandler.play = function(){\n            for (var i in arguments){\n                var name = arguments[i];\n                this.forEach( function( anim ){\n                    if (!!anim ) anim.play(name);\n                });\n            }\n        };\n\n        this.AnimationsHandler.weightOff = function(){\n            for (var i in arguments){\n                var name = arguments[i];\n                this.forEach( function( anim ){\n                    if (!!anim ) anim.weightOff(name);\n                });\n            }\n        };\n\n        this.AnimationsHandler.weightOn = function(){\n            for (var i in arguments){\n                var name = arguments[i];\n                this.forEach( function( anim ){\n                    if (!!anim ) anim.weightOn(name);\n                });\n            }\n        };\n\n        this.AnimationsHandler.fadeIn = function(){\n            for (var i in arguments){\n                var name = arguments[i];\n                this.forEach( function( anim ){\n                    if (!!anim ) anim.fadeIn(name);\n                });\n            }\n        };\n\n        this.AnimationsHandler.fadeOut = function(){\n            for (var i in arguments){\n                var name = arguments[i];\n                this.forEach( function( anim ){\n                    if (!!anim ) anim.fadeOut(name);\n                });\n            }\n        };\n\n        this.AnimationsHandler.refresh = function(){\n\n            this.stop();\n            this.fill(null);\n            this.reset();\n\n            var gender = self.getGender();\n\n            self.slots.forEach( function(name, i){\n\n                if ( !!self[ name ] ){\n    \n                    var handler = new AW3D.AnimationHandler( self[ name ], gender );\n\n                    self.AnimationsHandler.push( handler );\n                }\n            });\n    \n            this.play(\"idle\");\n        };\n\n    //  Outfit EventDispatcher.\n        Object.assign( this, THREE.EventDispatcher.prototype );  // important!\n\n    };\n\n\n    AW3D.OutfitManager.prototype = {\n\n        constructor: AW3D.OutfitManager,\n\n        refresh: function(){\n            this.AnimationsHandler.refresh();\n        },\n\n\n        get: function(){\n\n            var results = {};\n\n            var _get = ( arg ) => {\n\n                if ( typeof( arg ) == \"string\" ) {\n                    if ( !!this[arg] ) results[arg] =  this[arg];\n                }\n\n                if ( arg instanceof Array ) {\n                    arg.forEach( ( key ) => {\n                        _get( key );\n                    });\n                }\n            };\n\n            if ( arguments.length > 0 ){\n\n                for (var i in arguments){\n\n                    if ( !arguments[i] ) continue;\n\n                    _get( arguments[i] );\n\n                }\n\n            } else {\n\n                this.slots.forEach( (name) => { _get( name ); });\n\n            }\n\n            return results;\n\n        },\n\n        set: function(){\n        //  Set \"this.slot\" but not add to \"this.direction\".\n\n            for (var arg in arguments){\n\n                if (!arguments[arg]) continue;\n\n                var name = Object.keys(arguments[arg])[0];\n                var asset = Object.values(arguments[arg])[0];\n\n                if ( !name || name == null || !asset ) continue;\n                if ( !!this[ name ] ) this.remove( name );\n\n                this[ name ] = asset;\n\n            //  Create an animation handler for this outfit slot.\n                var handler = new AW3D.AnimationHandler( this[ name ], this.getGender() );\n\n            //  Add animation handler.\n                this.AnimationsHandler.push( handler );\n\n            }\n\n        //  Send \"change\" event only when last \n        //  add has been completed (delay:100ms).\n\n            var msec = 100;\n            clearTimeout( this.eventTimeout );\n            this.eventTimeout = setTimeout( () => {\n                this.dispatchEvent( {type:\"change\"} );\n                this.changed && this.changed.dispatch();\n            }, msec);\n\n            return this;\n        },\n\n        add: function(){\n\n            for (var arg in arguments) {\n\n                if (!arguments[arg]) continue;\n\n                var name = Object.keys(arguments[arg])[0];\n                var asset = Object.values(arguments[arg])[0];\n\n                if ( !name || name == null || !asset ) continue;\n                if ( this[ name ] ) this.remove( name );  // important!\n\n                this[ name ] = asset;\n\n            //  Create an animation handler for this outfit slot.\n                var handler = new AW3D.AnimationHandler( this[name], this.getGender() );\n\n                if ( this.AnimationsHandler.length ) {\n\n                //  Copy each action properties of first animation handler.\n                    var masterHandler = this.AnimationsHandler[0];\n\n                    for ( var action in handler.actions ) {\n\n                        if ( !action ) break;\n\n                        handler.actions[action].loop = masterHandler.actions[action].loop;\n                        handler.actions[action].weight = masterHandler.actions[action].weight;\n                        handler.actions[action].timeScale = masterHandler.actions[action].timeScale;\n                        handler.actions[action].currentTime = masterHandler.actions[action].currentTime;\n                        handler.actions[action].interpolationType = masterHandler.actions[action].interpolationType;\n\n                        if ( masterHandler.actions[action].isPlaying ) {\n                            handler.actions[action].play( masterHandler.actions[action].currentTime );\n                        }\n\n                    }\n\n                //  Add animation handler.\n                    this.AnimationsHandler.push( handler );\n\n                } else {\n\n                //  Add animation handler.\n                    this.AnimationsHandler.push( handler );\n                //  Play idle.\n                    this.AnimationsHandler.play(\"idle\");\n\n                }\n\n            //  Add outfit item to scene.\n                this.direction.add( this[ name ] );\n\n            }\n\n        //  this.AnimationsHandler.refresh(); \n\n            this.dispatchEvent( {type:\"add\"} );\n            this.added && this.added.dispatch();\n\n        //  Send \"change\" event only when last \n        //  add has been completed (delay:100ms).\n\n            var msec = 100;\n            clearTimeout( this.eventTimeout );\n            this.eventTimeout = setTimeout( () => {\n                this.dispatchEvent( {type:\"change\"} );\n                this.changed && this.changed.dispatch();\n            }, msec);\n\n            return this;\n        },\n\n        remove: function(){\n\n            if ( arguments.length == 0 ) return;\n\n            for (var arg in arguments){\n\n                if ( !arguments[arg] ) continue;\n                if ( !this.slots.includes( arguments[arg] ) ) continue;\n\n                var name = arguments[arg];\n\n            //  Remove from scene (does not throw error).\n                this.direction.remove( this[ name ] );\n\n            //  Dispose textures.\n\n                if ( this[ name ] ) {\n                    \n                    if (this[ name ].material && !this[ name ].material.materials) {\n\n                    //  Single material.\n\n                        Object.keys(this[ name ].material).filter( (key) => {\n                            return this[ name ].material[ key ] instanceof THREE.Texture;\n                        }).forEach( (key) => {\n                            this[ name ].material[ key ].dispose();\n                        //  DO NOT NULL/DELETE TEXTURE.  important!\n                        });\n\n                        this[ name ].material.dispose();\n\n                    } else if (this[ name ].material.materials && this[ name ].material.materials.length) {\n\n                    //  Multimaterial.\n\n                        this[ name ].material.materials.forEach(function(material){\n\n                            Object.keys(material).filter(function(key){\n                                return material[ key ] instanceof THREE.Texture;\n                            }).forEach(function(key){\n                                material[ key ].dispose();\n                            //  DO NOT NULL/DELETE TEXTURE. important!\n                            });\n\n                            material.dispose();\n\n                        });\n\n                    }\n\n                }\n\n            //  Dispose geometry.\n                if ( this[ name ] ) this[ name ].geometry.dispose();\n\n            //  Dispose bones texture. !important\n                if ( this[ name ] && this[ name ].skeleton  )\n                    this[ name ].skeleton.boneTexture.dispose();\n\n            //  Remove the animation handler.\n\n                if ( this.AnimationsHandler.length ) {\n\n                //  Find handler index.\n                    var index = this.AnimationsHandler.findIndex((handler) => {\n                        return handler.mesh == this[ name ];\n                    });\n\n                    //  Keep in mind \"splice()\" uses \"zero\" \n                    //  and \"negative\" indexes also. // danger!\n                    //  debugMode && console.log({\"index\": index});\n\n                    if ( index != undefined && index > -1 ) {\n\n                    //  Get and remove handler from AnimationsHandler.\n                        var handler = this.AnimationsHandler.splice(index, 1)[0];\n\n                    //  Stop handler animations.\n                        handler.stop();\n\n                    }\n\n                }\n\n            //  Delete slot.\n                delete this[ name ];\n\n            }\n\n        //  this.AnimationsHandler.refresh(); \n\n            this.dispatchEvent( {type:\"remove\"} );\n            this.removed && this.removed.dispatch();\n\n        //  Send \"change\" event only when last \n        //  remove has been completed (delay:100ms).\n\n            var msec = 100;\n            clearTimeout( this.eventTimeout );\n            this.eventTimeout = setTimeout( () => {\n                this.dispatchEvent( {type:\"change\"} );\n                this.changed && this.changed.dispatch();\n            }, msec);\n\n            return this;\n        },\n\n        removeAll: function() { \n\n            this.slots.forEach( ( name ) => {\n                if ( this[ name ] ) this.remove( name );\n            });\n\n            return this;\n\n        },\n\n        removeFromScene: function(){\n\n            if ( arguments.length == 0 ) {\n\n                this.slots.forEach( ( name ) => {\n                    this.remove( name );\n                });\n\n            } else {\n\n                for (var arg in arguments){\n                    this.remove( arguments[arg] );\n                }\n            }\n\n            return this;\n        },\n\n        removeTexture: function( outfit, map, index ){\n\n            //  outfit: outfit slot name (e.g \"body\", \"hair\", \"dress\", etc.)\n            //  map   : material map name (e.g. \"map\", \"bumpMap\", \"normalMap\", etc.)\n            //  index : material index of multimaterial (\"null\" for simple material).\n\n            if ( !this[ outfit ] ) return;\n            if ( !this[ outfit ].material ) return;\n\n            //  Material.\n\n            if ( index == null || isNaN(index) || typeof(index) != \"number\" ) {\n\n                if ( !this[ outfit ].material[ map ] ) return;\n\n                this[ outfit ].material[ map ].dispose();\n                this[ outfit ].material[ map ] = null;\n                this[ outfit ].material.needsUpdate = true;\n\n                return;\n            }\n\n            //  MultiMaterial.\n\n            if ( typeof(index) == \"number\" && index > -1 ) {\n\n                if ( !this[ outfit ].material.materials ) return;\n                if ( !this[ outfit ].material.materials[ index ] ) return;\n                if ( !this.body.material.materials[ index ][ map ] ) return;\n\n                this[ outfit ].material.materials[ index ][ map ].dispose();\n                this[ outfit ].material.materials[ index ][ map ] = null;\n                this[ outfit ].material.materials[ index ].needsUpdate = true;\n\n                return;\n            }\n        },\n\n        setGender: function( gender ){\n\n            var self = this;\n\n            Object.keys(this.gender).forEach( function( name ){\n                self.gender[ name ] = ( name == gender );\n            });\n\n        //  Outfit direction scale. (object3D)\n\n            switch ( this.getGender() ){\n\n                case \"male\":\n                    this.direction.scale.set(1, 1, 1);\n                    break;\n\n                case \"female\":\n                    this.direction.scale.set(0.95, 0.95, 0.95);\n                    break;\n\n                default:\n                    this.direction.scale.set(1, 1, 1);\n            }\n\n            this.AnimationsHandler.refresh();\n\n            return this;\n        },\n\n        getGender: function(){\n\n            var self = this;\n\n            if (arguments.length > 0){\n\n                return self.gender[ arguments[0] ];\n\n            } else {\n\n                return Object.keys(this.gender).find( function( name ){\n                    return self.gender[ name ];\n                });\n\n            }\n        },\n\n        resetGender: function(){\n\n            var self = this;\n\n            Object.keys(this.gender).forEach( function( name ){\n                self.gender[ name ] = false;\n            });\n\n            this.direction.scale.set(1, 1, 1);\n            this.AnimationsHandler.refresh();\n\n            return this;\n        },\n\n        getPose: function( name ){\n\n            var name = name || \"body\";\n            if ( !this[ name ] ) return;\n            if ( !this.slots.includes( name ) ) return;\n\n            var pose = [];\n\n            for (var i in this[ name ].skeleton.bones) {\n                var key = {}; // {\"pos\":[], \"rot\":[], \"scl\":[]};\n                key.pos = this[ name ].skeleton.bones[i].position.toArray();\n                key.rot = this[ name ].skeleton.bones[i].quaternion.toArray();\n                key.scl = this[ name ].skeleton.bones[i].scale.toArray();\n                pose.push(key);\n            }\n\n            return pose;\n        },\n\n\n        toJSON: function(){\n\n            var data = {};\n\n            if ( arguments.length == 0 ) {\n\n                for (var i = 0; i < this.slots.length; i++) {\n\n                    var name = this.slots[i];\n\n                    if ( !name ) continue;\n                    if ( !this[ name ] ) continue;\n                    if ( !this.slots.includes( name ) ) continue;\n\n                    data[ name ] = {};\n                    data[ name ].name      = name;\n                    data[ name ].visible   = this[ name ].visible;\n                    data[ name ].scale     = this[ name ].scale.toArray();\n                    data[ name ].geometry  = this[ name ].geometry.sourceFile;\n                    data[ name ].material  = materialtoJSON( this[ name ].material );\n\n                }\n\n            } else {\n\n                for (var i = 0; i < arguments.length; i++){\n\n                    var name = arguments[i];\n\n                    if ( !name ) continue;\n                    if ( !this[ name ] ) continue;\n                    if ( !this.slots.includes( name ) ) continue;\n\n                    data[ name ] = {};\n                    data[ name ].name      = name;\n                    data[ name ].visible   = this[ name ].visible;\n                    data[ name ].scale     = this[ name ].scale.toArray();\n                    data[ name ].geometry  = this[ name ].geometry.sourceFile;\n                    data[ name ].material = materialtoJSON( this[ name ].material );\n\n                }\n\n            }\n\n            if ( this.getGender() ) \n                data.gender = this.getGender();\n\n            var data = JSON.stringify( data );\n\n            if ( data === \"{}\" ) \n                return null;\n            else \n                return JSON.parse( data );\n\n        },\n\n    //  fromJSON (v2.1).\n\n        fromJSON: function( json ){\n\n\t\t//  Make a copy of json. important!\n\n            if ( typeof(json) == \"object\" ) {\n\n                try {\n\n                    var json = JSON.stringify( json ); // string copy of json.\n\n                } catch(err) { throw err; }\n\n            }\n\n\t\t//  requires \"validation.js\".\n\n            if ( typeof(json) == \"string\" ) {\n\n                if ( !validator.isJSON( json ) ) {\n                    throw \"Validation Error: json not valid\";\n                }\n\n            } else {\n\n\t\t\t\tthrow \"Type Error: json is not string type.\";\n\n\t\t\t}\n\n\t\t\t\n\t\t\tvar json = JSON.parse( json ); // (now is a json copy).\n\n\n            var self = this;\n\n        //  Set gender first.\n\n            this.removeAll();          // important!\n            var gender = json.gender;  // important!\n            this.setGender( gender );  // important!\n\n        //  Clear gender of json.\n            delete json.gender; // (is a copy of json).\n\n        //  ORDER DOES MATTER for transparency:\n        //   Order in localPlayer.outfit.direction.children array DOES MATTER.\n        //  So we must deliver the outfit.direction.children array with the following order:\n        //  [skeleton, body, eyes, hairs, stockings, underwears, tshirt, trousers, costume, dress, shoes, coat]\n\n            var orderMap = [];\n\n            (function(){\n                if (json.skeleton) orderMap.push(\"skeleton\");\n                if (json.body) orderMap.push(\"body\");\n                if (json.eyes) orderMap.push(\"eyes\");\n                if (json.glasses) orderMap.push(\"glasses\");\n                if (json.hairs) orderMap.push(\"hairs\");\n                if (json.hat) orderMap.push(\"hat\");\n                if (json.stockings) orderMap.push(\"stockings\");\n                if (json.underwears) orderMap.push(\"underwears\");\n                if (json.costume) orderMap.push(\"costume\");\n                if (json.tshirt) orderMap.push(\"tshirt\");\n                if (json.trousers) orderMap.push(\"trousers\");\n                if (json.skirt) orderMap.push(\"skirt\");\n                if (json.dress) orderMap.push(\"dress\");\n                if (json.shoes) orderMap.push(\"shoes\");\n                if (json.coat) orderMap.push(\"coat\");\n            })();\n\n            debugMode && console.log({\"orderMap\": orderMap});\n\n            var outfit = {};\n\t\t\tvar promises = [];\n\n            for (var i = 0; i < orderMap.length; i++){\n\n\t\t\t\tpromises.push(\n\t\t\t\t\tnew Promise(function(resolve, reject){\n\n\t\t\t\t\t\tvar object = {};\n\t\t\t\t\t\tvar sortIndex = i;\n                        var key = orderMap[i];\n\n\t\t\t\t\t\tobject.name      = json[ key ].name;\n\t\t\t\t\t\tobject.visible   = json[ key ].visible;\n\t\t\t\t\t\tobject.material  = json[ key ].material;\n\t\t\t\t\t\tobject.geometry  = json[ key ].geometry;  // (url).\n\n\t\t\t\t\t//  Scale.\n\t\t\t\t\t\tvar vector = new THREE.Vector3();\n\t\t\t\t\t\tobject.scale = vector.fromArray( json[ key ].scale );\n\n\t\t\t\t\t//  Material.\n\t\t\t\t\t\tvar material = materialfromJSON( object.material );\n\n\t\t\t\t\t//  Geometry: cache first.\n\t\t\t\t\t\tcaches.match( object.geometry ).then(function(response){\n\n\t\t\t\t\t\t\tif ( !response ) \n\t\t\t\t\t\t\t\tthrow \"geometry not found! Trying to fetch geometry...\";\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t\t}).catch(function(err){\n                            console.error(err);\n\n\t\t\t\t\t\t\treturn caches.open(\"geometries\").then(function(cache){\n\t\t\t\t\t\t\t\treturn cache.add( object.geometry ).then(function(){\n\t\t\t\t\t\t\t\t\treturn cache.match( object.geometry ).then(function(response){\n\t\t\t\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}).then(function(response){\n\n\t\t\t\t\t\t\tif (!response) throw \"None response returned!\";\n\n\t\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\t\t}).then(function( gmtjson ){\n\n\t\t\t\t\t\t\tif ( !gmtjson ) throw \"None json returned fromJSON!\";\n\n\t\t\t\t\t\t\tvar loader = new THREE.JSONLoader();\n\t\t\t\t\t\t\tvar geometry = loader.parse( gmtjson ).geometry;\n\n\t\t\t\t\t\t\tgeometry.name = gmtjson.name;\n\t\t\t\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\t\t\t\tgeometry.computeVertexNormals();\n\t\t\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t\t\t\tgeometry.computeBoundingSphere();\n\t\t\t\t\t\t\tgeometry.sourceFile = object.geometry;  // important!\n\n\t\t\t\t\t\t\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\t\tskinned.renderDepth = 1;\n\t\t\t\t\t\t\tskinned.frustumCulled = false;\n\t\t\t\t\t\t\tskinned.position.set( 0, 0, 0 );\n\t\t\t\t\t\t\tskinned.rotation.set( 0, 0, 0 );\n\t\t\t\t\t\t\tskinned.scale.copy( object.scale );\n\t\t\t\t\t\t\tskinned.castShadow = true;\n\t\t\t\t\t\t\tskinned.name = object.name;\n\t\t\t\t\t\t\tskinned.sortIndex = sortIndex;\n\n\t\t\t\t\t\t\tvar obj = {};\n\t\t\t\t\t\t\tobj[ key ] = skinned;\n\t\t\t\t\t\t\tresolve( obj );\n\n\t\t\t\t\t\t\toutfit[ key ] = skinned;\n\n\t\t\t\t\t\t}).catch(function(err){\n                            resolve( null );\n\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}) // end of promise,\n\t\t\t\t); // end push.\n\t\t\t}// end for.\n\n            debugMode && console.log(\"promises:\", promises);\n\n\t\t\treturn Promise.all(promises).then(function(results){\n                debugMode && console.log(\"results:\", results);\n\n\t\t\t//  cleanup.\n\t\t\t\tvar results = results.filter(Boolean); // important!\n                debugMode && console.log(\"cleaned results:\", results);\n\n\t\t\t//  add outfit.\n\t\t\t\twhile (results.length) {\n\t\t\t\t\tself.add( results.shift() );\n\t\t\t\t}\n\n\t\t\t}).then(function(){\n                debugMode && console.log(\"outfit:\", outfit);\n\t\t\t\treturn outfit;\n\t\t\t});\n\n\t\t},\n\n\n\t//  Outfit DNA is an object that contains the outfit data that needed to\n\t//  create the player oufit anywhere remotly. It is player outfit assets\n\t//  in transfered structure ( aka like .toJSON() ).\n\t//\n\t//  .toDNA(); .fromDNA(dna); Usage:\n\t//      dna = localPlayer.outfit.toDNA();\n\t//      player = new Player();\n\t//      player.outfit = new AW3D.Outfit(player);\n\t//      player.outfit.fromDNA( dna );\n\n\t//\t.toDNA, .fromDNA (v2).\n\t//\trequires \"rawinflate.js, rawdeflate.js, and validator.js\"\n\n        toDNA: function(){\n\n            return encode( JSON.stringify( this.toJSON() ) );\n\n            function encode( string ) {\n                if ( !!window.RawDeflate ) {\n                    return window.btoa( RawDeflate.deflate( string ) );\n                } else {\n                    return string;\n                }\n            }\n\n        },\n\n        fromDNA: function( dna ){\n\n            //  Validation.\n\n            if ( typeof(dna) == \"string\" ) {\n\n                if ( validator.isBase64( dna ) ) {\n\n                    return new Promise( (resolve, reject) => {\n                        var json = JSON.parse( decode( dna ) );\n                        resolve( this.fromJSON(json) );\n                    }).catch( function(err){ \n                        console.error(err);\n                        throw err; \n                    });\n\n                } else if ( validator.isJSON( dna ) ) {\n\n                    return new Promise( (resolve, reject) => {\n                        var json = JSON.parse( dna );\n                        resolve( this.fromJSON(json) );\n                    }).catch( function(err){ \n                        console.error(err);\n                        throw err; \n                    });\n\n                } else {\n\n                    return new Promise( (resolve, reject) => {\n                        var err = \"DNA is not valid.\";\n                        console.error( \"Error: \" + err );\n                        reject( \"Validation Error: \" + err );\n                        //  throw Error( err );\n                    });\n\n                }\n\n            } else {\n\n                return new Promise( (resolve, reject) => {\n                    var err = \"Unsupported DNA type: \" + typeof(dna);\n                    console.error( \"Error: \" + err );\n                    reject( \"Validation Error: \" + err );\n                    //  throw Error( err );\n                });\n\n            }\n\n            function decode( string ) {\n                if ( !!window.RawDeflate ) {\n                    return RawDeflate.inflate( window.atob( string ) );\n                } else {\n                    return string;\n                }\n            }\n\n        },\n\n\n\t};\n\n\n//  AW3D AnimationHandler.js\n\n//  Reset THREE.AnimationHandler.animations array.\n    THREE.AnimationHandler.animations.length = 0;\n    AnimationManager = THREE.AnimationHandler;\n\n    AW3D.AnimationHandler = function ( mesh, gender ) {\n\n        this.mesh = mesh;\n        this.gender = gender; // important!\n        this.actions = {};\n\n    //  This create the animations of skinned mesh. \n        this.reloadActions(); // important!\n\n    };\n\n\n    AW3D.AnimationHandler.prototype = {\n\n        constructor: AW3D.AnimationHandler,\n\n        findAction: function(action){\n        //  returns new array with resutls.\n            return THREE.AnimationHandler.animations.filter( function(animation){\n                return (animation == action); // boolean.\n            }); \n        },\n\n        findByUuid: function( name ){\n        //  returns new array with resutls.\n            return THREE.AnimationHandler.animations.filter( function(animation){\n                return (animation.uuid == this.actions[ name ].uuid); // boolean.\n            });\n        },\n\n        findByName: function( name ){\n        //  returns new array with resutls.\n            return THREE.AnimationHandler.animations.filter( function(animation){\n                return (animation.data.name == name); // boolean.\n            });\n        },\n\n        getCurrentAction: function(){\n        //  returns current playing action name.\n            for (var name in this.actions) {\n                if ( !name ) return;\n                var action = this.actions[ name ];\n                if ( action.isPlaying ) {\n                    return name;\n                }\n            }\n        },\n\n    //  To stop an animation, find the animation in\n    //  THREE.AnimationHandler.animations and stop it from there.\n\n        stop: function stop(){\n            var self = this;\n            Object.keys( self.actions ).forEach(function(name, i){\n                var action = self.actions[name];\n                self.findAction(action).forEach(function(animation){\n                    animation.stop();\n                });\n            });\n        },\n\n    //  To delete an action, stop the animation in \n    //  THREE.AnimationHandler.animations and then delete it from this.actions.\n\n        delete: function( name ){\n            var action = this.actions[ name ];\n            this.findAction( action ).forEach(function(animation){\n                animation.stop();\n            });\n            delete this.actions[ name ];\n        },\n\n        reset: function reset(){\n            for (var i in arguments){\n                var name = arguments[i];\n                this.actions[ name ].weight = 1;\n                this.actions[ name ].timeScale = 1;\n                this.actions[ name ].currentTime = 0;\n            }\n        },\n\n        resetAll: function(){\n            var self = this;\n            Object.keys( self.actions ).forEach(function(name, i){\n                self.reset( name );\n            });\n        },\n\n        deleteAll: function(){\n            var self = this;\n            Object.keys( self.actions ).forEach(function(name, i){\n                self.delete[ name ]\n            });\n        },\n\n        play: function play(){\n            for (var i in arguments){\n                var name = arguments[i];\n                if ( !this.actions[ name ] ) return;\n                this.actions[ name ].play(0);\n            }\n        },\n\n    //  To pause an animation, find the animation \n    //  in THREE.AnimationHandler.animations and set timeScale to 0.\n    \n        pause: function pause(){\n            for (var i in arguments){\n                var name = arguments[i];\n                var action = this.actions[ name ];\n                this.findAction( action ).forEach(function(animation){\n                    animation.timeScale = 0;\n                });\n            }\n        },\n\n    //  To unpause an animation, find the animation \n    //  in THREE.AnimationHandler.animations and set timeScale to 1.\n\n        continue: function(){\n            for (var i in arguments){\n                var name = arguments[i];\n                var action = this.actions[ name ];\n                this.findAction( action ).forEach(function(animation){\n                    animation.timeScale = 1;\n                });\n            }\n        },\n\n        weightOff: function(){\n            for (var i in arguments){\n                var name = arguments[i];\n                var action = this.actions[ name ];\n                this.findAction( action ).forEach(function(animation){\n                    animation.weight = 0;\n                });\n            }\n        },\n\n        weightOn: function(){\n            for (var i in arguments){\n                var name = arguments[i];\n                var action = this.actions[ name ];\n                this.findAction( action ).forEach(function(animation){\n                    animation.weight = 1;\n                });\n            }\n        },\n\n        fadeIn: function(){\n            var fades = [];\n            for (var i in arguments){\n                var name = arguments[i];\n                var animation = this.actions[ name ];\n                fades.push(function fade(){\n                    var requestId = requestAnimationFrame( fade );\n                    animation.timeScale = 1; // !important\n                    animation.weight += ( 0.05 * (1 - animation.weight) );\n                    animation.play(animation.currentTime, animation.weight);\n                    debugMode && console.log( \"fadeIn: \", round(animation.weight, 3) );\n                    if ( round(animation.weight, 3) > 0.9 ){\n                        cancelAnimationFrame( requestId );\n                        animation.weight = 1;\n                        animation.timeScale = 1;\n                        animation.play(animation.currentTime, 1);\n                    }\n                });\n            }\n\n        //  Call all functions in fades.\n            while (fades.length){ \n                fades.shift().call(); \n            }\n        },\n\n        fadeOut: function(){\n            var fades = [];\n            for (var i in arguments){\n                var name = arguments[i];\n                var action = this.actions[ name ];\n                this.findAction( action ).forEach(function(animation){\n                    fades.push(function fade(){\n                        var requestId = requestAnimationFrame( fade );\n                        animation.timeScale = 1; // !important\n                        animation.weight -= ( 0.05 * animation.weight );\n                        animation.play(animation.currentTime, animation.weight);\n                        debugMode && console.log( \"fadeOut:\", round(animation.weight, 3) );\n                        if ( round(animation.weight, 3) < 0.1 ){\n                            cancelAnimationFrame( requestId );\n                            animation.stop();\n                            animation.weight = 1;\n                            animation.timeScale = 1;\n                        }\n                    });\n                });\n            }\n\n        //  Call all functions in fades.\n            while (fades.length){ \n                fades.shift().call(); \n            }\n        },\n\n        idle: function idle(){\n            this.actions.idle.play(0);\n        },\n\n        jump: function jump(){\n            this.actions.jump.play(0);\n        },\n\n        run: function run(){\n            this.actions.run.play(0);\n        },\n\n        walk: function walk(){\n            this.actions.walk.play(0);\n        },\n\n    //  ------------------------------------------------------  //\n    //  This create the animations of skinned mesh. important!  //\n    //  ------------------------------------------------------  //\n\n        loadAction: function(){\n\n            for ( var i in arguments ) {\n\n                var name = arguments[i];\n\n                var data;\n\n                switch (this.gender) {\n\n                    case \"male\":\n                        data = MaleAnimations[ name ];\n                    break;\n\n                    case \"female\":\n                        data = FemaleAnimations[ name ];\n                    break;\n\n                    default:\n                        data = Animations[ name ];\n                    break;\n                }\n            \n                var action = new THREE.Animation( this.mesh, data );\n                action.uuid = THREE.Math.generateUUID();\n                action.weight = 1;\n                action.timeScale = 1;\n                action.currentTime = 0;\n                this.actions[ name ] = action;\n            }\n\n        },\n\n        reloadActions: function(){\n\n            var self = this;\n\n            this.stop();\n            this.deleteAll();\n            this.actions = {};\n\n            if (this.actions.jump) this.actions.jump.loop = false;\n\n            if (MaleAnimations && this.gender && this.gender == \"male\") {\n                Object.keys( MaleAnimations ).forEach(function(name, i){\n                    self.loadAction( name );\n                });\n\n                return;\n            }\n            \n            if (FemaleAnimations && this.gender && this.gender == \"female\") {\n                Object.keys( FemaleAnimations ).forEach(function(name, i){\n                    self.loadAction( name );\n                });\n\n                return;\n            }\n\n            if ( Animations && !this.gender ) {\n                Object.keys( Animations ).forEach(function(name, i){\n                    self.loadAction( name );\n                });\n\n                return;\n            }\n\n            if ( this.gender && this.gender != \"male\" && this.gender != \"female\" ){\n                console.warn( \"AW3D.AnimationHandler: reloadActions(\" \n\t\t\t\t\t+ this.gender + \"): Gender exists but is not male or female.\"\n                );\n\n                return;\n            }\n\n        },\n\n\t};\n\n\n//  MATERIAL TO JSON.\n\n//  materialtoJson.js (v1.6)\n//  Return a promise with the \n//  material json object resolved.\n\n    function materialtoJSON( material ){\n\n    //  MULTIMATERIAL.\n\n        if ( material.type == \"MultiMaterial\" || material.materials ) {\n\n        //  multimaterial to json.\n\n            var multjson = {\n\n                _id: \"\",\n                type: material.type,\n                uuid: material.uuid || THREE.Math.generateUUID(),\n\n            };\n\n\n        //  materials to json.\n\n            multjson.materials = [];\n\n            for ( var i = 0; i < material.materials.length; i++ ){\n\n                multjson.materials.push( materialtoJSON( material.materials[i] ) );\n\n            }\n\n\n            debugMode && console.log( \"multimaterial to json:\", multjson );\n\n            return multjson;\n\n        }\n\n\n    //  MATERIAL.\n\n        var json = {};\n\n        for ( var name in material ){\n\n            if ( material[ name ] == undefined ) continue;         // important!\n            if ( material[ name ] instanceof Function ) continue;  // important!\n            if ( typeof(material[name]) === \"function\" ) continue; // important!\n\n            switch( name ){\n\n                case \"defines\":\n                case \"program\":\n                case \"_listeners\":\n                case \"needsUpdate\":\n                case \"_needsUpdate\":\n                case \"__webglShader\":\n                break;\n\n\n            //  name, _id, uuid.\n\n                case \"name\":\n                    json.name = material.name;\n                break;\n\n                case \"_id\":\n                    json._id = material._id || ObjectId();\n                break;\n\n                case \"uuid\":\n                    json.uuid = material.uuid || THREE.Math.generateUUID();\n                break;\n\n\n            //  texture to json.\n\n                case \"map\":\n                case \"bumpMap\":\n                case \"alphaMap\":\n                case \"normalMap\":\n                case \"emissiveMap\":\n                case \"displacementMap\":\n                case \"metalnessMap\":\n                case \"roughnessMap\":\n                case \"specularMap\":\n                case \"lightMap\":\n                case \"aoMap\":\n\n                    if ( !(material[ name ] instanceof THREE.Texture) ) {\n                        throw name + \" is not instance of THREE.Texture\";\n                    }\n\n                    json[ name ] = texturetoJSON( material[ name ] );\n\n                break;\n\n\n            //  three color to hex.\n\n                case \"color\":\n                case \"emissive\":\n                case \"specular\":\n\n                    if ( !(material[ name ] instanceof THREE.Color) ) {\n                        throw name + \" is not instance of THREE.Color\";\n                    }\n\n                    json[ name ] = material[ name ].getHex();\n\n                break;\n\n\n            //  vector2 to array.\n\n                case \"normalScale\":\n\n                    if ( !(material[ name ] instanceof THREE.Vector2) ) {\n                        throw name + \" is not instance of THREE.Vector2\";\n                    }\n\n                    json[ name ] = material[ name ].toArray();\n\n                break;\n\n\n\n                case \"envMap\":\n                    //  TODO: cube texture.\n                break;\n\n\n                default:\n                    json[ name ] = material[ name ];\n                break;\n\n            }\n\n        }\n\n        return json;\n    }\n\n\n//  TEXTURE TO JSON.\n//  Return a promise resolved \n//  with the texture json object.\n\n    function texturetoJSON( texture ){\n\n        var json = {};\n\n        for (var name in texture ){\n\n            if ( texture[ name ] == undefined ) continue;\n            if ( texture[ name ] instanceof Function ) continue;\n            if ( typeof(texture[name]) === \"function\" ) continue;\n\n            switch (name){\n\n                case \"_listeners\":\n                break;\n\n\n            //  uuid.\n\n                case \"uuid\":\n                    json[ name ] = texture[ name ] || THREE.Math.generateUUID();\n                break;\n\n\n            //  vector2 to array.\n\n                case \"offset\":\n                case \"repeat\":\n                    json[ name ] = texture[ name ].toArray();\n                break;\n\n\n            //  image to json.\n\n                case \"image\":\n                    json[ name ] = texture.sourceFile || getDataURL( texture[ name ] ); // important!\n                break;\n\n\n                default:\n                    json[ name ] = texture[ name ];\n                break;\n\n            }\n\n        }\n\n        return json;\n    }\n\n\n//  IMAGE TO JSON.\n//  Return an image object.\n\n    function imagetoJSON( image ){\n\n        return {\n            uuid: THREE.Math.generateUUID(),\n            src: image.src || getDataURL( image ),\n        };\n\n    }\n\n\n//  TEXTURE IMAGE TO JSON.\n//  Return an image object.\n\n    function textureImagetoJSON( texture ){\n\n        return {\n            uuid: THREE.Math.generateUUID(),\n            src: texture.sourceFile || texture.image.src || getDataURL( texture.image )\n        };\n\n    }\n\n\n//  MATERIAL FROM JSON.\n//  materialfromJson.js (v1.6)\n//  Return a promise with the material resolved.\n\n    function materialfromJSON( json ){\n\n   //  MULTIMATERIAL.\n\n       if ( json.type == \"MultiMaterial\" ) {\n\n\n           var materials = [];\n\n           for ( var i = 0; i < json.materials.length; i++ ){\n\n               materials.push( materialfromJSON( json.materials[i] ) );\n\n           }\n\n\n       //  Create multimaterial.\n\n           var multimaterial = new THREE.MeshFaceMaterial(materials);\n\n           multimaterial.uuid = json.uuid || THREE.Math.generateUUID();\n\n           return multimaterial;\n\n        }\n\n\n    //  MATERIAL.\n\n        var options = {};\n\n        for (var name in json){\n\n            if ( json[ name ] == undefined ) continue; // important!\n\n\n            switch (name){\n\n                case \"_id\":\n                case \"meta\":\n                break;\n\n\n            //  uuid.\n\n                case \"uuid\":\n                    options.uuid = json.uuid || THREE.Math.generateUUID();\n                break;\n\n\n            //  texture from json.\n\n                case \"alphaMap\":\n                case \"aoMap\":\n                case \"bumpMap\":\n                case \"displacementMap\":\n                case \"emissiveMap\":\n                case \"lightMap\":\n                case \"map\":\n                case \"metalnessMap\":\n                case \"normalMap\":\n                case \"roughnessMap\":\n                case \"specularMap\":\n\n                        options[ name ] = texturefromJSON( json[ name ] );\n\n                break;\n\n\n            //  three color to hex.\n\n                case \"color\":\n                case \"emissive\":\n                case \"specular\":\n\n                    options[ name ] = new THREE.Color();\n                    options[ name ].setHex( json[ name ] );\n\n                break;\n\n\n            //  vector2 from array.\n\n                case \"normalScale\":\n\n                    options[ name ] = new THREE.Vector2();\n                    options[ name ].fromArray( json[ name ] );\n\n                break;\n\n\n                case \"envMap\":\n                    //  TODO: cube texture.\n                break;\n\n\n                default:\n                    options[ name ] = json[ name ];\n                break;\n\n            }\n\n        }\n\n        return new THREE[ options.type ](options);\n    }\n\n\n//  TEXTURE FROM JSON (v1.6)\n//  Return a promise with the texture resolved.\n\n    function texturefromJSON( json ){\n\n        var texture = new THREE.Texture();\n\n        for ( var name in json ){\n\n            switch (name){\n\n                case \"meta\":\n                case \"image\":\n                break;\n\n            //  array to vector2.\n\n                case \"offset\":\n                case \"repeat\":\n\n                    if ( json[ name ].length != 2) break;\n\n                    texture[ name ] = new THREE.Vector2();\n                    texture[ name ].fromArray( json[ name ] );\n\n                break;\n\n\n            //  wrapS & wrapT.\n\n                case \"wrap\":\n\n                    if ( json[ name ].length != 2) break;\n                    if ( !( json[ name ] instanceof Array ) ) break;\n\n                    texture.wrapS = json[ name ][0];\n                    texture.wrapT = json[ name ][1];\n\n                break;\n\n            //  image from texture json with\"FileReader.readAsDataURL(blob)\".\n\n                //  Check whether a match for the request is found in   \n                //  the CacheStorage using CacheStorage.match(). If so, serve that.\n\n                //  If not, open the \"textures\" cache using open(), \n                //  put the default network request in the cache using Cache.put() \n                //  and return a clone of the default network request using return response.clone().\n\n                //  Clone is needed because put() consumes the response body.\n                //  If this fails (e.g., because the network is down), return a fallback response.\n\n                //  Pros:\n\n                    //  Easy to use.\n                    //  Small, compact, safe code.\n                    //  Texture.image.src is string.\n                    //  Texture.image.src is dataURL.\n                    //  Texture.image.src can reused.\n                    //  Texture.image.src is always valid.\n                    //  Texture.image.src can be send everywhere.\n                    //  Texture.image.src can converted to canvas.\n                    //  Texture.image (canvas) size always power of 2.\n                    //  Texture.image.src can saved in storage objects.\n                    //  Texture.image.src can converted vice versa to blob.\n\n                //  Cons:\n\n                    //  Larger size (~33%)\n\t\t\t\t\t//  Take more time than URL.createObjectURL(blob);\n\n            //  sourceFile.\n            //  case \"sourceFile\":\n            //      texture.sourceFile = json[ name ]; // important!\n            //  break;\n\n            //  case \"image\": (N/A).\n                case \"sourceFile\":\n\n                    texture.sourceFile = json.sourceFile;\n\n                //  SourceFile first.\n                    var url = json.sourceFile || json.image.src || json.image || \"//i.imgur.com/ODeftia.jpg\";\n\n                //  URL.\n\n                    if ( validator && validator.isURL( url ) ) {\n\n                    //  Cache first.\n                        caches.match( url ).then(function(response){\n\n                            if ( !response ) \n                                throw \"Texture not found!\";\n                            else\n                                return response;\n\n                        }).catch(function(err){\n\n                        //  We use cors origin mode to avoid\n                        //  texture tainted canvases, images.\n\n                            return fetch( url, {\n                                mode: \"cors\",  // important!\n                                method: \"GET\",\n                            });\n\n                        }).then(function(response){\n\n                            return caches.open(\"textures\").then(function(cache){\n\n\t\t\t\t\t\t\t//  Clone is needed because put() consumes the response body.\n\t\t\t\t\t\t\t//  See: \"https://developer.mozilla.org/en-US/docs/Web/API/Cache/put\"\n\n\t\t\t\t\t\t\t\tvar clone = response.clone();\n\t\t\t\t\t\t\t\treturn cache.put( url, clone ).then(function(){\n\t\t\t\t\t\t\t\t\treturn response.blob();  //  important!\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t});\n\n                        }).then(function(blob){\n\n                            var img = new Image();\n                            img.crossOrigin = \"anonymous\";  //  important!\n\n                            img.onload = function(){\n                                var canvas = makePowerOfTwo( img, true );\n                                texture.image = canvas;\n                                texture.needsUpdate = true;\n\t\t\t\t\t\t\t\timg.onload = null; // optional!\n                            };\n\n                        //  Get dataURL from blob.\n\n                            var reader = new FileReader();\n                            reader.onload = function() {\n                                img.src = reader.result;\n                            };\n\n                            reader.readAsDataURL(blob);\n\n                        });\n                        \n                        break;\n                    } \n\n                //  DataURL.\n\n                    if ( validator && validator.isDataURI( url ) ) {\n                        var img = new Image();\n                        img.crossOrigin = \"anonymous\";\n                        img.onload = function(){\n                            var canvas = makePowerOfTwo( img, true );\n                            texture.image = canvas;\n                            texture.needsUpdate = true;\n\t\t\t\t\t\t\timg.onload = null; // optional!\n                        }; \n\t\t\t\t\t\timg.src = url;  break;\n                    } \n\n                break;\n\n                default:\n                    texture[ name ] = json[ name ];\n                break;\n\n            }\n\n        }\n\n        return texture;\n    }\n\n\n//  IMAGE FROM JSON (v1.6)\n//  Return a promise with the image resolved.\n\n    function imagefromJSON( json, onLoadEnd ){\n\n        var url = json.src;\n\n    //  Cache first.\n        caches.match( url ).then(function(response){\n\n            if ( !response ) \n                throw response;\n            else\n                return response;\n\n        }).catch(function(err){\n\n            //  We use cors origin mode to avoid\n            //  texture tainted canvases, images.\n\n            return fetch( url, {\n                mode: \"cors\",  // important!\n                method: \"GET\",\n            });\n\n    //  TODO: REPLACE async/await FOR BACKWARD COMPETALITY.\n        }).then(function(response){\n\n            return caches.open(\"textures\").then(function(cache){\n\n\t\t\t//  Clone is needed because put() consumes the response body.\n\t\t\t//  See: \"https://developer.mozilla.org/en-US/docs/Web/API/Cache/put\"\n\n\t\t\t\tvar clone = response.clone();\n\t\t\t\treturn cache.put( url, clone ).then(function(){\n\t\t\t\t\treturn response.blob(); //  important!\n\t\t\t\t});\n\n\t\t\t});\n\n        }).then(function(blob){\n\n            var img = new Image();\n            img.crossOrigin = \"anonymous\";  //  important!\n            img.onload = onLoadEnd;\n\n        //  Get dataURL from blob.\n\n            return new Promise(function(resolve, reject){\n\n                var reader = new FileReader();\n                reader.onload = function() {\n                    img.src = reader.result;\n                    resolve( img );\n                };\n\n                reader.readAsDataURL(blob);\n\n            });\n\n        });\n\n    }\n\n\n//  blobToDataUrl.js\n//  https://gist.github.com/tantaman/6921973\n\n    function convertToBase64(blob, callback) {\n\n        var reader = new FileReader();\n\n        reader.onload = function(e) {\n            callback(reader.result);\n        };\n\n        reader.readAsDataURL(blob);\n    }\n\n\n//  dataUrlToBlob.js\n//  https://gist.github.com/tantaman/6921973\n\n    function dataURLToBlob(dataURL) {\n\n        var BASE64_MARKER = \";base64,\";\n\n        if (dataURL.indexOf(BASE64_MARKER) == -1) {\n            var parts = dataURL.split(\",\");\n            var contentType = parts[0].split(\":\")[1];\n            var raw = parts[1];\n\n            return new Blob([raw], {type: contentType});\n        }\n\n        var parts = dataURL.split(BASE64_MARKER);\n        var contentType = parts[0].split(\":\")[1];\n        var raw = window.atob(parts[1]);\n        var rawLength = raw.length;\n\n        var uInt8Array = new Uint8Array(rawLength);\n\n        for (var i = 0; i < rawLength; ++i) {\n            uInt8Array[i] = raw.charCodeAt(i);\n        }\n\n        return new Blob([uInt8Array], {type: contentType});\n    }\n\n\n//  makePowerOfTwo.js\n\n    function makePowerOfTwo( image, natural ) {\n\n        var canvas = document.createElement( \"canvas\" );\n\n        if ( natural ){\n            canvas.width = THREE.Math.nearestPowerOfTwo( image.naturalWidth );\n            canvas.height = THREE.Math.nearestPowerOfTwo( image.naturalHeight );\n        } else {\n            canvas.width = THREE.Math.nearestPowerOfTwo( image.width );\n            canvas.height = THREE.Math.nearestPowerOfTwo( image.height );\n        }\n\n        var context = canvas.getContext( \"2d\" );\n        context.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n    //  debugMode && console.warn( \"outfitLoader:makePowerOfTwo(img):\", \n    //  \"Image resized to:\", canvas.width, \"x\", canvas.height );\n\n        return canvas;\n    }\n\n\n//  getDataURL.js\n\n    function getDataURL( image ) {\n\n        var canvas;\n\n        if ( image.toDataURL !== undefined ) {\n\n            canvas = image;\n\n        } else {\n\n            canvas = document.createElementNS( \"http://www.w3.org/1999/xhtml\", \"canvas\" );\n            canvas.width = image.width;\n            canvas.height = image.height;\n\n            canvas.getContext( \"2d\" ).drawImage( image, 0, 0, image.width, image.height );\n\n        }\n\n        if ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n            return canvas.toDataURL( \"image/jpeg\", 0.6 );\n\n        } else {\n\n            return canvas.toDataURL( \"image/png\" );\n\n        }\n\n    }\n\n\n//  deepCopy.js\n\n    function deepCopy(obj) {\n        if (Object.prototype.toString.call(obj) === \"[object Array]\") {\n            var out = [], i = 0, len = obj.length;\n            for ( ; i < len; i++ ) {\n                out[i] = arguments.callee(obj[i]);\n            }\n            return out;\n        }\n        if (typeof obj === \"object\") {\n            var out = {}, i;\n            for ( i in obj ) {\n                out[i] = arguments.callee(obj[i]);\n            }\n            return out;\n        }\n        return obj;\n    }\n\n\n//  round.js  source: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"\n\n    function round(number, precision) {\n        var shift = function (number, precision, reverseShift) {\n            if (reverseShift) {\n                precision = -precision;\n            }  \n            numArray = (\"\" + number).split(\"e\");\n            return +(numArray[0] + \"e\" + (numArray[1] ? (+numArray[1] + precision) : precision));\n        };\n        return shift(Math.round(shift(number, precision, false)), precision, true);\n    }\n\ndebugMode && console.log(\"AW3D.js\");"
			},
			{
				"name": "background.js",
				"source": "//  Background.\n\nsceneBackground([\n\t\"https://i.imgur.com/v6bjQLb.jpg\", // \"posx.jpg\",\n\t\"https://i.imgur.com/lwrlr6P.jpg\", // \"negx.jpg\", \n\t\"https://i.imgur.com/kKUKBJg.jpg\", // \"posy.jpg\", \n\t\"https://i.imgur.com/N0oZlJR.jpg\", // \"negy.jpg\", \n\t\"https://i.imgur.com/x9q8z0K.jpg\", // \"posz.jpg\", \n\t\"https://i.imgur.com/HYcK7Ii.jpg\", // \"negz.jpg\"\n]);\n\nfunction sceneBackground( urls ){\n\tif (!scene || Number(THREE.REVISION) < 78) return;\n\tvar loader = new THREE.CubeTextureLoader();\n\tloader.load( urls, function(texture){\n\t\tscene.background = texture;\n\t\tscene.background.needsUpdate = true;\n\t});\n}\n\ndebugMode && console.log(\"background.js\");"
			},
			{
				"name": "ground-helper.js",
				"source": "groundHelper = new GroundHelper(1000, 10);  \n\nfunction GroundHelper(xz, step){\n\tif (!xz) xz = 1000;\n\tif (!step) step = 10;\n\tvar grid = new THREE.GridHelper( xz, step, 0x444444, 0x444444 );\n\tgrid.name = \"GRID\"\n\tgrid.position.y = 0;\n\tscene.add( grid );\n\treturn grid;\n}\n\ndebugMode && console.log(\"ground-helper.js\");"
			},
			{
				"name": "axis-helper.js",
				"source": "axisCustomHelper = new CustomAxisHelper(5200);\n\nfunction CustomAxisHelper( distance ){\n\tvar group = new THREE.Group();\n\tscene.add(group);\n\n\t//  Lines.\n\tvar geometryAxisXpos = new THREE.Geometry();\n\tvar geometryAxisXneg = new THREE.Geometry();\n\tvar geometryAxisYpos = new THREE.Geometry();\n\tvar geometryAxisYneg = new THREE.Geometry();\n\tvar geometryAxisZpos = new THREE.Geometry();\n\tvar geometryAxisZneg = new THREE.Geometry();\n\n\tvar materialAxisXpos = new THREE.LineBasicMaterial( {color: 0xff0000} );\n\tvar materialAxisXneg = new THREE.LineBasicMaterial( {color: 0xff0000} );\n\tvar materialAxisYpos = new THREE.LineBasicMaterial( {color: 0x00ff00} );\n\tvar materialAxisYneg = new THREE.LineBasicMaterial( {color: 0x00ff00} );\n\tvar materialAxisZpos = new THREE.LineBasicMaterial( {color: 0x0000ff} );\n\tvar materialAxisZneg = new THREE.LineBasicMaterial( {color: 0x0000ff} );\n\n\tgeometryAxisXpos.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( distance, 0, 0 ) );\n\tgeometryAxisXneg.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3(-distance, 0, 0 ) );\n\tgeometryAxisYpos.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, distance, 0 ) );\n\tgeometryAxisYneg.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0,-distance, 0 ) );\n\tgeometryAxisZpos.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 0, distance ) );\n\tgeometryAxisZneg.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 0,-distance ) );\n\n\tvar lineAxisXpos = new THREE.Line( geometryAxisXpos, materialAxisXpos );\n\tvar lineAxisXneg = new THREE.Line( geometryAxisXneg, materialAxisXneg );\n\tvar lineAxisYpos = new THREE.Line( geometryAxisYpos, materialAxisYpos );\n\tvar lineAxisYneg = new THREE.Line( geometryAxisYneg, materialAxisYneg );\n\tvar lineAxisZpos = new THREE.Line( geometryAxisZpos, materialAxisZpos );\n\tvar lineAxisZneg = new THREE.Line( geometryAxisZneg, materialAxisZneg );\n\n\tgroup.add( lineAxisXpos );\n\tgroup.add( lineAxisXneg );\n\t//  group.add( lineAxisYpos );\n\t//  group.add( lineAxisYneg );\n\tgroup.add( lineAxisZpos );\n\tgroup.add( lineAxisZneg );\n\tgroup.name = \"AXES\"\n\treturn group;\n}\n\ndebugMode && console.log(\"axis-helper.js\");"
			},
			{
				"name": "origin-helper.js",
				"source": "\nvar distance = 1200;\nvar group = new THREE.Group();\nvar loader = new THREE.FontLoader();\nvar fontPath = \"/three/fonts/helvetiker_regular.typeface.json\";\n\nloader.load( fontPath, function ( response ) {\n\tvar font = response;\n\tscene.add(group);\n\n//  Font Material\n\tvar materialFace = new THREE.MeshBasicMaterial( { color: 0xffffff } );\n\tvar materialSide = new THREE.MeshBasicMaterial( { color: 0x888888 } );\n\tvar materialArray = [ materialFace, materialSide ];\n\tvar material = new THREE.MeshFaceMaterial(materialArray);\n\n//  Text Styles.\n\th0 = { size: 40, height: 2,   curveSegments: 10, font: font, weight: \"normal\", style: \"normal\", bevelThickness: 1, bevelSize: 2, bevelEnabled: false, material: 0, extrudeMaterial: 1 }\n\th1 = { size: 20, height: 1,   curveSegments: 10, font: font, weight: \"normal\", style: \"normal\", bevelThickness: 1, bevelSize: 2, bevelEnabled: false, material: 0, extrudeMaterial: 1 }\n\th2 = { size: 10, height: 1,   curveSegments: 10, font: font, weight: \"normal\", style: \"normal\", bevelThickness: 1, bevelSize: 2, bevelEnabled: false, material: 0, extrudeMaterial: 1 }\n\th3 = { size: 5,  height: 0.5, curveSegments: 10, font: font, weight: \"normal\", style: \"normal\", bevelThickness: 1, bevelSize: 2, bevelEnabled: false, material: 0, extrudeMaterial: 1 }\n\n//  Origins Group.\n\tgroup.add( new Text3D( \"+x\", h1, [2, 2, 5], [ distance, 20, 0], [0, -Math.PI * 0.5, 0]) );\n\tgroup.add( new Text3D( \"-x\", h1, [2, 2, 5], [-distance, 20, 0], [0,  Math.PI * 0.5, 0]) ); \n\tgroup.add( new Text3D( \"+z\", h1, [2, 2, 5], [0, 20,  distance], [0, -Math.PI,       0]) ); \n\tgroup.add( new Text3D( \"-z\", h1, [2, 2, 5], [0, 20, -distance], [0,              0, 0]) ); \n\tgroup.add( new Text3D( \"+y\", h1, [2, 2, 5], [0,   distance, 0], [ Math.PI * 0.5, 0, 0]) ); \n\tgroup.add( new Text3D( \"-y\", h1, [2, 2, 5], [0,  -distance, 0], [-Math.PI * 0.5, 0, 0]) ); \n\tgroup.name = \"ORIGINS\";\n\n\taxisOriginHelper = group; // resolve(group);  //  return group;\n\n\tfunction Text3D(text, style, scale, position, rotation){\n\t\tvar geometry = new THREE.TextGeometry( text, style );\n\t\tvar mesh = new THREE.Mesh(geometry, material );\n\t\tgeometry.computeBoundingBox();\n\t\tvar width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t\tmesh.scale.fromArray( scale ); \n\t\tmesh.geometry.center();\n\t\tmesh.position.fromArray( position );\n\t\tmesh.rotation.fromArray( rotation );\n\t\treturn mesh;\n\t}\n\n});\n\ndebugMode && console.log(\"origin-helper.js\");"
			},
			{
				"name": "world-octree.js",
				"source": "world = new MW.World();\n\n//  OCTREE.\n\nvar partition = 1;\nvar min = new THREE.Vector3( -1000, -1000, -1000 );\nvar max = new THREE.Vector3(  1000,  1000,  1000 );\n\noctree = new MW.Octree( min, max, partition );\n\nworld.add( octree );\n\n//  GROUND.\n\nground = new THREE.Mesh(\n\tnew THREE.PlaneGeometry( 2500, 2500, 1, 1 ),\n\tnew THREE.MeshPhongMaterial({ \n\t\tcolor:0x829ec4,\n\t\ttransparent:false,\n\t\topacity:1, \n\t\tshininess: 80,\n\t\twireframe:false,\n\t})\n);\n\nground.rotation.x = THREE.Math.degToRad( -90 );\n//scene.add( ground );\n//ground.visible = false;\noctree.importThreeMesh( ground ); // important!\n\n//\tUPDATE.\n\nvar clock = new THREE.Clock(); // important!\n\nfunction update(){\n\n\tvar delta = clock.getDelta();\n\tworld.step( delta );\n\n}\n\n//\tOCTREE HELPERS.\n\nvar octMeshHelpers = [];\nvar octEdgesHelpers = [];\n\nfunction octreeHelpers( octree ){\n\tvar nodeIndex = octree.nodes.length - 1;\n\tvar node = octree.nodes[ nodeIndex ][0];\n\tvar x = node.max.x - node.min.x;\n\tvar y = node.max.y - node.min.y;\n\tvar z = node.max.z - node.min.z;\n\tvar geometry = new THREE.BoxGeometry(x, y, z);\n\tvar material = new THREE.MeshBasicMaterial({visible:false});\n\n\toctree.nodes[ nodeIndex ].forEach(function(node){\n\n\t\tvar x = node.max.x - node.min.x;\n\t\tvar y = node.max.y - node.min.y;\n\t\tvar z = node.max.z - node.min.z;\n\n\t\tvar mesh = new THREE.Mesh(geometry, material);\n\t\tvar helper = new THREE.EdgesHelper( mesh, 0xffff00 );\n\n\t\tmesh.position.set(\n\t\t\tnode.min.x + (x/2),\n\t\t\tnode.min.y + (y/2),\n\t\t\tnode.min.z + (z/2)\n\t\t);\n\n\t\t//  scene.add( mesh );\n\t\tscene.add( mesh, helper );\n\n\t\toctMeshHelpers.push(mesh);\n\t\toctEdgesHelpers.push(helper);\n\t});\n}\n\nfunction octreeNodeHelper( node ){\n\tvar x = node.max.x - node.min.x;\n\tvar y = node.max.y - node.min.y;\n\tvar z = node.max.z - node.min.z;\n\tvar geometry = new THREE.BoxGeometry(x, y, z);\n\tvar material = new THREE.MeshBasicMaterial({visible:false});\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.set(\n\t\tnode.min.x + (x/2),\n\t\tnode.min.y + (y/2),\n\t\tnode.min.z + (z/2)\n\t);\n\tscene.add( mesh );\n\toctMeshHelpers.push(mesh);\n\tvar helper = new THREE.EdgesHelper( mesh, 0xffff00 );\n\thelper.name = \"octree helper\";\n\tscene.add( helper );\n\toctEdgesHelpers.push(helper);\n}\n\n//  Remove octree mesh helpers.\n\nfunction removeOctreeHelpers(){\n\toctMeshHelpers.forEach( function( item, i ){\n\t\tscene.remove( octMeshHelpers[i] );\n\t\tvar geometry = octMeshHelpers[i].geometry;\n\t\tvar material = octMeshHelpers[i].material;\n\t\tgeometry.dispose();\n\t\tmaterial.dispose();\n\t});\n\tconsole.log( \"octree mesh helpers has been removed.\" );\n}\n\ndebugMode && console.log(\"world-octree.js\");"
			},
			{
				"name": "PlayerController.js",
				"source": "LocalPlayer = function(radius){\n\n\tvar player = this; // important!\n\n//  Player Holder.\n\tthis.holder = AW3D.PlayerHolder(); // important!\n\tthis.holder.visible = true;\n\tscene.add( this.holder );\n\n//  Player Sphere.\n\tthis.sphere = AW3D.PlayerSphere();\n\tthis.sphere.position.y = 12;\n\tthis.holder.add( this.sphere ); \n\n//\tthis.holderHelper = AW3D.PlayerHolderHelper();\n//  scene.add( this.holderHelper );\n\n\n//  Outfit Manager.\n\n\tthis.outfit = new AW3D.OutfitManager(); // important!\n\n\tthis.outfit.update = function() {\n\n\t//  Update avatar rotation y.\n\t\tvar direction = player.controller.direction - Math.PI;\n\n\t//  \"this\" is the \"localPlayer.outfit\".\n\t\tthis.direction.rotation.y = direction;\n\n\t//  Update avatar position.\n\t\tvar x = player.controller.center.x;\n\t\tvar y = player.controller.center.y - player.controller.radius;\n\t\tvar z = player.controller.center.z;\n\n\t//  \"this\" is the \"localPlayer.outfit\".\n\t\tthis.direction.position.set( x, y, z );\n\n\t};\n\n\t\n//  Player Controller.\n\n\tvar radius = parseInt( radius ); // important!\n\tif ( isNaN( radius ) || radius < 1 ) radius = 1;\n\n\tthis.controller = new MW.CharacterController( this.holder, radius );\n\tthis.controller.isWalking = false;\n\n\tthis.controller.getdata = function( action ){\n\n\t\tvar data = {};\n\t\tdata.playerid = socket.id;\n\t\tdata.radius = this.radius;\n\t\tdata.isGrounded = this.isGrounded;\n\t\tdata.isOnSlope = this.isOnSlope;\n\t\tdata.isIdling  = this.isIdling;\n\t\tdata.isJumping = this.isJumping;\n\t\tdata.isRunning = this.isRunning;\n\t\tdata.isWalking = this.isWalking;\n\t\tdata.direction = this.direction;\n\t\tdata.movementSpeed = this.movementSpeed;\n\t\tdata.jumpStartTime = this.jumpStartTime;\n\t\tdata.position = this.center.toArray();\n\t\tif (!!action) data.action = action;\n\n\t\treturn data;\n\t};\n\n\tfunction onStartJumping(){\n\t\tplayer.outfit.AnimationsHandler.weightOff(\"idle\", \"walk\", \"run\");\n\t};\n\n\tfunction onEndJumping(){\n\t\tplayer.outfit.AnimationsHandler.weightOn(\"idle\", \"walk\", \"run\");\n\n\t\tif ( player.controller.isRunning && player.controller.isWalking ) {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 28;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"walk\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startRunning\"});\n\n\t\t} else if ( player.controller.isRunning && !player.controller.isWalking ) {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 45;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"run\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startRunning\"});\n\n\t\t} else {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 0;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"idle\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startIdling\"});\n\n\t\t}\n\t}\n\n\tthis.controller.addEventListener(\"endJumping\",   onEndJumping);\n\tthis.controller.addEventListener(\"startJumping\", onStartJumping);\n\n//  Add controller to world.\n\n\tworld.add( this.controller ); // important!\n\n\tdebugMode && console.log( \n\t\t\"characterPool length:\", world.characterPool.length, \n\t\t\"index:\", world.characterPool.indexOf( this.controller )\n\t);\n\n//  Add outfit direction holder to scene.\n\n\tscene.add( this.outfit.direction ); // important!\n\n};\n\nLocalPlayer.prototype = {\n\n//  Collect position, direction, nickname, and gender.\n\n\tgetdata: function( socket ){\n\n\t\tif ( !socket ) return;\n\t\tvar data = {};\n\t\tdata.playerid  = socket.id;\n\t\tdata.nickname  = this.nickname;\n\t\tdata.gender    = this.outfit.getGender();\n\t\tdata.direction = this.outfit.direction.rotation.y;\n\t\tdata.position  = this.outfit.direction.position.toArray();\n\t\tdata.dna       = this.outfit.toDNA();\n\t\tdebugMode && console.log(\"player data:\", data);\n\n\t\treturn data;\n\n\t},\n\n//  Remote player set data.\n\n\tsetdata: function( data ){\n\n\t\tif ( !data.playerid || data.playerid != this.playerid ) return;\n\n\t\tthis.playerid = data.playerid;\n\t\tthis.nickname = data.nickname;\n\t\tthis.outfit.setGender( data.gender );\n\t\tthis.outfit.direction.rotation.y = data.direction;\n\t\tthis.outfit.direction.position.fromArray(data.position);\n\n\t\tif (data.action != undefined) {\n\t\t\tthis.outfit.AnimationsHandler.stop();\n\t\t\tthis.outfit.AnimationsHandler.play( data.action );\n\t\t}\n\n\t},\n\n//  Create player outfit from dna data.\n\n\tfromDNA: function( dna ){\n\n\t\tvar frontAngle = Math.PI - cameraControls.getFrontAngle(); // face front.\n\t\tthis.controller.direction = frontAngle;\n\t\tthis.outfit.fromDNA( dna );\n\t\tscene.add(this.outfit.direction);\n\t\tthis.outfit.update();\n\n\t},\n\n//  Start remote player action.\n\n\tstartAction: function( running, walking, idling, speed, name, eventType ){\n\n\t\tthis.outfit.AnimationsHandler.stop();        \n\t\tthis.controller.isRunning = running;\n\t\tthis.controller.isWalking = walking;\n\t\tthis.controller.isIdling  = idling;\n\t\tthis.controller.movementSpeed = speed;\n\t\tthis.outfit.AnimationsHandler.play( name );\n\t\tthis.controller.dispatchEvent({type: eventType});\n\n\t},\n\n//  Get local player action data.\n\n\tgetActionData: function ( name ){\n\n\t\treturn {\n\t\t\tplayerid : socket.id,\n\t\t\tdirection: this.outfit.direction.rotation.y,\n\t\t\tposition : this.outfit.direction.position.toArray(),\n\t\t\taction   : name,\n\t\t};\n\n\t},\n\n};\n\n\nlocalPlayer = new LocalPlayer(1);\nlocalPlayer.holder.visible = true;\ndebugMode && console.log({\"localPlayer\": localPlayer});\n\n\nfunction update(){\n\n\tlocalPlayer.outfit.update();\n\n}\n\nfunction stop(){\n\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\n}\n\ndebugMode && console.log(\"PlayerController.js\");"
			},
			{
				"name": "CameraControls.js",
				"source": "cameraControls = new MW.TPSCameraControl(camera, localPlayer.holder, {\n\tel: renderer.domElement, // html renderer element.\n\toffset: new THREE.Vector3( 0, 15, 0 ), // camera eye height.\n\tradius: 40, // default: 37 // (distance of the character to the camera).\n\tminRadius: 6, // default: 10 // (can take and negative values, yes!!!).\n\tmaxRadius: 100, // default: 64, runtime: 40.\n\trigidObjects: [], // collition objects for the camera.\n});\n\ncameraControls.getforward = function(){ \n\treturn -cameraControls.theta \n};\n\ncameraControls.setVerticalOffset = function(offset){ \n\tcameraControls.offset.y = offset; \n};\n\n(cameraControls.frontAngleUpdate = function(){\n\twindowAnimationFrameRequestID = requestAnimationFrame( cameraControls.frontAngleUpdate );\n\tcameraControls.forward = -cameraControls.theta;\n})();\n\n//\tUPDATE.\n\nfunction update(){\n\n\tcameraControls.update();\n\n}\n\n//cameraControls.addEventListener(\"updated\", function(e){\n//\tconsole.log(e);\n//});\n\ndebugMode && console.log(\"CameraControls.js\");"
			},
			{
				"name": "KeyInputControls.js",
				"source": "keyInputControls = new MW.KeyInputControl();\n\nkeyInputControls.On = function(){\n\n\tif ( !keyInputControls.isOff ) return;\n\n\t$(keyInputControls).on( \"movekeyon\", onMoveKeyOn );\n\t$(keyInputControls).on( \"movekeyoff\", onMoveKeyOff );\n\t$(keyInputControls).on( \"jumpkeypress\", onJumpInput );\n\t$(keyInputControls).on( \"movekeychange\", onMoveKeyChange );\n\tkeyInputControls.isOff = false;\n\n\tdebugMode && console.log( \"keyInputControls are ON.\" );\n\n};\n\nkeyInputControls.Off = function(){\n\n\tif ( keyInputControls.isOff ) return;\n\n\t$(keyInputControls).off( \"movekeyon\", onMoveKeyOn );\n\t$(keyInputControls).off( \"movekeyoff\", onMoveKeyOff );\n\t$(keyInputControls).off( \"jumpkeypress\", onJumpInput );\n\t$(keyInputControls).off( \"movekeychange\", onMoveKeyChange );\n\tkeyInputControls.isOff = true;\n\n\tdebugMode && console.log( \"keyInputControls are OFF.\" );\n\n};\n\nkeyInputControls.update = function(){\n\n\tif ( keyInputControls.isOff ) return;\n\n\tif ( keyInputControls.isMoveKeyHolded \n\t\t|| localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t|| localPlayer.controller.isOnSlope ){\n\n\t\tthis.dispatchEvent({type:\"update\"});\n\t}\n};\n\nfunction onMoveKeyOn() { \n\n//\tdebugMode && console.log(\"move key on\");\n\n\tif (  localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t||  localPlayer.controller.isOnSlope ) {\n\t\treturn;\n\t}\n\n\tlocalPlayer.controller.direction = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isRunning = true; \n\tlocalPlayer.controller.isWalking = true;\n\tlocalPlayer.controller.movementSpeed = 28;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"walk\");\n\n}\n\nfunction onMoveKeyChange() {\n\n//\tdebugMode && console.log(\"move key changed\");\n\tlocalPlayer.controller.direction = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\n}\n\nfunction onMoveKeyOff() {\n\n//\tdebugMode && console.log(\"move key off\");\n\n\tif (  localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t||  localPlayer.controller.isOnSlope ) {\n\t\treturn;\n\t}\n\n\tvar finalDirection = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\n\tlocalPlayer.controller.direction = finalDirection;\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isRunning = false;\n\tlocalPlayer.controller.isWalking = false;\n\tlocalPlayer.controller.isIdling  = true;\n\tlocalPlayer.controller.movementSpeed = 0;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"idle\");\n\tlocalPlayer.controller.dispatchEvent({type:\"startIdling\"});\n\n}\n\nfunction onJumpInput() {\n\n//\tdebugMode && console.log(\"jump key on\");\n\n\tif (  localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t||  localPlayer.controller.isOnSlope ) {\n\t\treturn;\n\t}\n\n\tlocalPlayer.controller.jump();\n\tlocalPlayer.outfit.AnimationsHandler.jump();\n\n}\n\n\nkeyInputControls.Off(); // important!\nkeyInputControls.inRun = false;\n\nfunction start(){\n\n\tkeyInputControls.On(); // important!\n\n}\n\nfunction update(){\n\n\tkeyInputControls.update();\n\n}\n\n\nfunction stop(){\n\n\tkeyInputControls.Off(); // important!\n\n}\n\ndebugMode && console.log(\"KeyInputControls.js\");"
			},
			{
				"name": "JoystickControls.js",
				"source": "var cssTextContent = \".gameinput-button__inner { display:table-cell; vertical-align: middle; } .gameinput-joystick { border:solid 0px white; border-radius:50%; position:absolute; bottom:30px; user-select:none; touch-action:none; -ms-touch-action:none; -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; } .gameinput-frame { position:absolute; top:0; left:0; pointer-events:none; opacity:0.5; } .gameinput-button { cursor:pointer; text-align:center; position:absolute; display:table; box-sizing:border-box; border:1px solid #333; border-radius:50%; background:rgba( 255, 255, 255, .5 ); user-select:none; touch-action:none; -ms-touch-action:none; -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; } #joystick1 { bottom:50px; right:40px; width:120px; height:120px;z-index:1; } #joystick2 { bottom:50px; left:40px; width:120px; height:120px; z-index:1;} #jumpButton { right:105px; bottom:240px; z-index:1; } @media ( max-width: 768px ) { #joystick1 { bottom:0px; right:0px; } #joystick2 { bottom:0px; left:0px; } #jumpButton { bottom:190px; right:65px; } .gameinput-joystick { bottom:0px;} } .gameinput-joystick__button { position:absolute; width:72px; height:72px; left:85px; top:85px; cursor:pointer; box-sizing:border-box; border-radius:50%; border:1px solid #333; background:rgba( 255, 255, 255, .5 ); }\";\n\n//  Joystick style UI.\n\nsetTimeout(function(){\n\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.innerHTML = cssTextContent;\n\tstyleElement.classList.add(\"joystick-controls\");\n\t$( styleElement ).appendTo( document.head );\n\n});\n\n//  Joystick controls UI.\n\nsetTimeout(function(){\n\n\tvar joysticControls1 = document.createElement( \"div\" );\n\tjoysticControls1.id = \"joystick-controls-1\";\n\tjoysticControls1.classList.add(\"joystick-controls\");\n\t$( joysticControls1 ).appendTo( player.dom );\n\n\tvar joysticControls2 = document.createElement( \"div\" );\n\tjoysticControls2.id = \"joystick-controls-2\";\n\tjoysticControls2.classList.add(\"joystick-controls\");\n\t$( joysticControls2 ).appendTo( player.dom );\n\n});\n\n//  MW Joystick Controls.\n\nsetTimeout(function(){\n\n\tvar joystick1Selector  = \"#joystick1\";\n\tvar joystick2Selector  = \"#joystick2\";\n\tvar jumpButtonSelector = \"#jumpButton\";\n\n\tvar joystickControlsSelector  = \".joystick-controls\";\n\tvar joystickControls1Selector = \"#joystick-controls-1\";\n\tvar joystickControls2Selector = \"#joystick-controls-2\";\n\n\tvar buttonSvgSrc = \"<svg width=\\\"48\\\" height=\\\"48\\\" viewBox=\\\"0 0 64 64\\\"><path fill=\\\"#fff\\\" d=\\\"M44.5,54.5c-0.3-5.1-2.4-9.4-5.7-13.2C41,36,40.9,30,38.5,24.7c-1.2-2.7-3.9-4.4-6.9-3.3c-0.2,0.1-0.4,0.1-0.5,0.2c-3-4.3-6.6-8.3-10.1-11.8c-2.6-2.6-6.4,1.7-3.8,4.3c3.9,3.9,8.1,8.5,11,13.7c0,0.1,0.1,0.3,0.2,0.4c1.5,3.2,1.9,6.4,0.2,9.6c-0.3,0.5-0.4,1-0.5,1.5c-1.1,1.5-2.3,3-3.6,4.4c-0.8-2.3-1.4-4.7-1.6-7.1c-0.5-4.6-7.7-4.1-7.2,0.5c0.5,4.9,2.1,9.6,3.9,14.2c0.8,1.9,3.6,3.4,5.4,1.8c2.8-2.4,5.3-4.9,7.5-7.8c0.2,0.1,0.5,0.1,0.7,0.1c0.1,0.3,0.3,0.5,0.5,0.7c1.7,1.8,2.8,3.9,3.3,6.3c-2.2,0.8-4.6,1.4-7,1.4c-4.6,0.1-4.1,7.2,0.5,7.2c4-0.1,7.9-1.3,11.6-3C43.6,57.5,44.6,56.2,44.5,54.5z M34.2,8.9c0.7,0.1,1.6-0.1,2.3,0.3c1.5,0.8,2.6,2.1,3.2,3.6c0.2-2.2,0.5-4.3,0.8-6.5c0.5-3.7-5.1-4.7-5.7-1.1C34.6,6.3,34.3,7.8,34.2,8.9z\\\"/><circle fill=\\\"#fff\\\" cx=\\\"33.8\\\" cy=\\\"15.2\\\" r=\\\"4.9\\\"/></svg>\";\n\n\tjoystick1  = new virtualInput.Joystick( $( joystickControls1Selector ), 94, { id: \"joystick1\" } );\n\tjoystick2  = new virtualInput.Joystick( $( joystickControls2Selector ), 94, { id: \"joystick2\" } );\n\tjumpButton = new virtualInput.Button(   $( joystickControls1Selector ), 58, { id: \"jumpButton\", label: \"<b>JUMP</b>\" } ); // buttonSvgSrc\n\n\tjoystick1.addEventListener( \"active\", function () { \n\n\t\tif (  localPlayer.controller.isJumping \n\t\t\t|| !localPlayer.controller.isGrounded \n\t\t\t|| localPlayer.controller.isOnSlope ) return;\n\n\t\tlocalPlayer.controller.direction = (3 * Math.PI/2) - cameraControls.getFrontAngle() + this.angle; // important!\n\n\t\tif ( localPlayer.controller.isRunning && !localPlayer.controller.isWalking ) {\n\n\t\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\t\tlocalPlayer.controller.movementSpeed = 45;\n\t\t\tlocalPlayer.outfit.AnimationsHandler.play(\"run\");\n\n\t\t} else {\n\n\t\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\t\tlocalPlayer.controller.isRunning = true; \n\t\t\tlocalPlayer.controller.isWalking = false;  // !!!danger: \"false\" cause bug in production server ??? //\n\t\t\tlocalPlayer.controller.movementSpeed = 28;\n\t\t\tlocalPlayer.outfit.AnimationsHandler.play(\"walk\");\n\n\t\t}\n\t});\n\n\tjoystick1.addEventListener( \"disactive\", function () { \n\n\t\tif (  localPlayer.controller.isJumping \n\t\t\t|| !localPlayer.controller.isGrounded \n\t\t\t||  localPlayer.controller.isOnSlope ) return;\n\n\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\tlocalPlayer.controller.isRunning = false;\n\t\tlocalPlayer.controller.isWalking = false;\n\t\tlocalPlayer.controller.movementSpeed = 0;\n\t\tlocalPlayer.outfit.AnimationsHandler.play(\"idle\");\n\t\tlocalPlayer.controller.dispatchEvent({type:\"startIdling\"});\n\n\t});\n\n\tjoystick1.update = function(){\n\n\t\tif ( this.isActive ) {\n\n\t\t\tlocalPlayer.controller.direction = (3 * Math.PI/2) - cameraControls.getFrontAngle() + this.angle;\n\n\t\t\tthis.dispatchEvent({type:\"update\"}); // important!\n\n\t\t}\n\t};\n\n\tjoystick2.update = function(){\n\n\t\tif ( this.isActive ) {\n\n\t\t\tcameraControls.setLatLon(\n\t\t\t\tcameraControls.lat + this.position.y * 0.5, // deg.\n\t\t\t\tcameraControls.lon - this.position.x        // deg.\n\t\t\t);\n\n\t\t\tthis.dispatchEvent({type:\"update\"}); // important!\n\t\t}\n\t}\n\n\tjumpButton.addEventListener( \"press\", function () { \n\n\t\tif (  localPlayer.controller.isJumping \n\t\t\t|| !localPlayer.controller.isGrounded \n\t\t\t|| localPlayer.controller.isOnSlope ) return;\n\n\t\tlocalPlayer.controller.jump();\n\t\tlocalPlayer.outfit.AnimationsHandler.jump();\n\n\t});\n\n});\n\n//\tUPDATE.\n\nfunction update(){\n\n\tjoystick1.update();\n\tjoystick2.update();\n\n}\n\n//\tREMOVE.\n\nfunction stop(){\n\n\t$(\".joystick-controls\").remove();\n\n}\n\n//var joysticControls1 = document.createElement( \"div\" );\n//var joysticControls2 = document.createElement( \"div\" );\n//joysticControls1.id = \"joystick-controls-1\";\n//joysticControls2.id = \"joystick-controls-2\";\n//joysticControls1.classList.add(\"joystick-controls\");\n//joysticControls2.classList.add(\"joystick-controls\");\n//document.body.appendChild( joysticControls1 );\n//document.body.appendChild( joysticControls2 );\n\ndebugMode && console.log(\"JoystickControls.js\");"
			}],
		"46DBECB9-D7F9-4B08-96FA-809A02D567F5": [
			{
				"name": "shadow-light.js",
				"source": "this.position.copy( camera.position );\n\ncameraLight = this;\n\ncameraLight.castShadow = true;\ncameraLight.position.multiplyScalar( 1.5 );\ncameraLight.shadow.mapSize.width  = Math.pow(2, 10); // 2048;\ncameraLight.shadow.mapSize.height = Math.pow(2, 10); // 2048;\n\nvar d = 30;\n\ncameraLight.shadow.camera.left = - d;\ncameraLight.shadow.camera.right = d;\ncameraLight.shadow.camera.top = d;\ncameraLight.shadow.camera.bottom = - d;\ncameraLight.shadow.camera.far = 10000;\n\n//\tTARGET.\n\ncameraLight.target = localPlayer.outfit.direction; // important!\n\n//  HELPER.\n\nshadowCameraHelper = new THREE.CameraHelper( cameraLight.shadow.camera );\nshadowCameraHelper.visible = false;\nscene.add( shadowCameraHelper );\n\nfunction update(){\n\n\tcameraLight.position.x = camera.position.x;\n\tcameraLight.position.y = camera.position.y;\n\tcameraLight.position.z = camera.position.z;\n\n\tshadowCameraHelper.update();\n}\n\n\n//\tWATCHER.\n//watch( camera.position, [\"x\", \"y\", \"z\"], function(){\n//\tcameraLight.position.copy( camera.position );\n//});\n\n"
			}],
		"D010E9DD-C8BD-47D5-90A4-D6BDBD67C286": [
			{
				"name": "animation-loader.js",
				"source": "var animations = [{\"_id\":\"basic\",\"idle\":{\"name\":\"idle\",\"fps\":25,\"length\":3,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,18.2131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,18.2131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000027,18.2131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000027,18.2131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000027,18.2131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000027,18.2131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,-0.0697564737441253,0,0.9975640502598242],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,-0.043619387365336,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0.052335956242943835,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0.06974584949530101,-0.01740989325235717,-0.0012174183314141707,0.9974121164231596],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0.052264231633826735,0.052264231633826735,0.0027390523158633317,0.9972609476841365],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0.2334453638559054,0,0.9723699203976766],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0.0942408065346705,0.1813965492823287,0.017466501076713336,0.9787281970150323],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0.11292745642874172,0.06930806906340573,0.007896657008951589,0.9911515645729061],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,-0.15643446504023087,0,0.9876883405951378],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0,0,-0.6691306063588582,0.7431448254773942],\"scl\":[1,1,1],\"time\":1},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.08543554994264561,-0.07426799050317771,0.6518417868674784,0.7498581981188379],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.08543554994264561,-0.07426799050317771,0.6518417868674784,0.7498581981188379],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]}]},\"walk\":{\"name\":\"walk\",\"fps\":25,\"length\":1,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,18.2,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,17.1,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000027,18.2,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000027,17.1,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.000027,18.2,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.1991781803199493,-0.008696307159570628,-0.042743715279718424,0.9789920334355671],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,-0.043619387365336,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.18206207765196525,0.007949001978167544,-0.042888976691899776,0.9823190667634029],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.00406854761967286,0.00017763662534309946,-0.04361902565803793,0.9990399371227057],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.1991781803199493,-0.008696307159570628,-0.042743715279718424,0.9789920334355671],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.6225146366376195,0,0,0.7826081568524139],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1819857780379785,-0.009537470488066906,0.051459585817926916,0.9819073908857435],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.017428488520812163,0.0009133883796357411,0.05232798522331314,0.9984774386394599],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.19909470759202602,0.010434111491904529,0.0512852964624154,0.9785817518700123],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.021494567147367777,0.0011264825308437594,0.052323831596807174,0.99839818272435],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1819857780379785,-0.009537470488066906,0.051459585817926916,0.9819073908857435],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.6225146366376195,0,0,0.7826081568524139],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.026152033653420895,-0.043604440090704404,-0.0011418224482834958,0.9987058727081077],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.026141073709985894,0.052318022017859046,0.001369995621214652,0.9982873293543426],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0.02605643483051109,0.09581290857463638,0.002508949309251106,0.9950551009505731],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,-0.08715574274765817,0,0.9961946980917455],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.28189470061061406,-0.00859441463567251,-0.6721730857124303,0.6845764067279506],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.06952405244855686,0.06597586230810733,-0.6851855277742152,0.7220348912986148],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0,0,-0.636078220277764,0.77162458338772],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.28189470061061406,-0.00859441463567251,-0.6721730857124303,0.6845764067279506],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,-0.01745240643728351,0,0.9998476951563913],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[0.09584575252022398,0,0,0.9953961983671789],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0,0,0.6560590289905073,0.754709580222772],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.12639454111990192,0.03975724874601606,0.6562136157325119,0.7428509081063979],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.271230072013406,0.00041115729626256536,0.6595719744455943,0.7009984946568864],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0,0,0.6560590289905073,0.754709580222772],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]}]},\"run\":{\"name\":\"run\",\"fps\":25,\"length\":1,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,17.6,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,18.5,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000027,17.6,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000027,18.5,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000027,17.6,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.5444524008203908,-0.01425698786603828,-0.021953836104441984,0.8383831764880539],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,-0.043619387365336,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.18206207765196525,0.007949001978167544,-0.042888976691899776,0.9823190667634029],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.00406854761967286,0.00017763662534309946,-0.04361902565803793,0.9990399371227057],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.5444524008203908,-0.01425698786603828,-0.021953836104441984,0.8383831764880539],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.5878639411164784,-0.0012696256671740815,0.031429122460403816,0.8083480593451289],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.374606593415912,0,0,0.9271838545667874],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.6225146366376195,0,0,0.7826081568524139],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.5878639411164784,-0.0012696256671740815,0.031429122460403816,0.8083480593451289],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1819857780379785,-0.009537470488066906,0.051459585817926916,0.9819073908857435],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.017428488520812163,0.0009133883796357411,0.05232798522331314,0.9984774386394599],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.5805039633113975,0.015201031253874423,0.021311059840650726,0.8138365413011672],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.021494567147367777,0.0011264825308437594,0.052323831596807174,0.99839818272435],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1819857780379785,-0.009537470488066906,0.051459585817926916,0.9819073908857435],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.3977777362344024,-0.0639708770006315,-0.027815328956978348,0.9148261621352],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.6225146366376195,0,0,0.7826081568524139],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.6819983600624985,0,0,0.7313537016191705],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.3977777362344024,-0.0639708770006315,-0.027815328956978348,0.9148261621352],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.16504760586067765,0,0,0.9862856015372314],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.2169438962559116,-0.03880515087868496,-0.026462023095532937,0.9750534690345337],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.20791169081775934,0,0,0.9781476007338057],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18285615432930413,0.04827565850963268,0.026672664754626405,0.981591389822795],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.16504760586067765,0,0,0.9862856015372314],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0.02605643483051109,0.09581290857463638,0.002508949309251106,0.9950551009505731],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,-0.08715574274765817,0,0.9961946980917455],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.15754614523438568,-0.3657737849857746,-0.5561673501929295,0.7294289745536173],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.06952405244855686,0.06597586230810733,-0.6851855277742152,0.7220348912986148],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.2952879440680951,0.24341659658857237,-0.5876596487908319,0.7128881593744631],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.15754614523438568,-0.3657737849857746,-0.5561673501929295,0.7294289745536173],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.06610968123079784,-0.5188325444666422,0.07763145689872764,0.8487730307624135],\"scl\":[1,1,1],\"time\":0},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0.05860626525863542,-0.17384233784965525,-0.0020226336387667333,0.9830259692381296],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.06610968123079784,-0.5188325444666422,0.07763145689872764,0.8487730307624135],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,-0.01745240643728351,0,0.9998476951563913],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[0.09584575252022398,0,0,0.9953961983671789],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.33528560962005943,-0.2572736969424497,0.5517252235581623,0.7190223101774836],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.12639454111990192,0.03975724874601606,0.6562136157325119,0.7428509081063979],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[-0.07919224285232154,0.29912607001191843,0.5809488075068789,0.7528284439150655],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.33528560962005943,-0.2572736969424497,0.5517252235581623,0.7190223101774836],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[-0.1228865655916834,0.5486682826619268,-0.11817712675189002,0.818471853096098],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]}]},\"jump\":{\"name\":\"jump\",\"fps\":25,\"length\":1.5,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,16.99595714285715,0.000197],\"rot\":[0.052335956242943835,0,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,10.295957142857137,0.000197],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.000027,19,0.000197],\"rot\":[-0.13917310096006544,0,0,0.9902680687415704],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.000027,16.99595714285715,0.000197],\"rot\":[0.052335956242943835,0,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.000027,10.295957142857137,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.000027,16.99595714285715,0.000197],\"rot\":[0.052335956242943835,0,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.37607492877448045,0.11790496229454614,0.09682585777078023,0.9139424604867331],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.5850008686596513,0.28224802062388366,0.2936481939239598,0.7013421253044406],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.0949129882452847,-0.013339150592090579,0.1385323756106207,0.9857090709897672],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.37607492877448045,0.11790496229454614,0.09682585777078023,0.9139424604867331],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.5850008686596513,0.28224802062388366,0.2936481939239598,0.7013421253044406],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.37607492877448045,0.11790496229454614,0.09682585777078023,0.9139424604867331],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.26834592382574773,-0.14045122128012494,-0.17766795548483635,0.9363215351581239],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.8599420883175322,0.030238015121610895,-0.22445068591284287,0.45739168857210477],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.16504760586067765,0,0,0.9862856015372314],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.26834592382574773,-0.14045122128012494,-0.17766795548483635,0.9363215351581239],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.8599420883175322,0.030238015121610895,-0.22445068591284287,0.45739168857210477],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.26834592382574773,-0.14045122128012494,-0.17766795548483635,0.9363215351581239],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[-0.17432127014427376,0.06780972803304605,0.12884074781631744,0.973865492386656],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[-0.49716211694550505,0.05460881540090392,0.12915036445059877,0.8562522351019305],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.42261826174069944,0,0,0.9063077870366499],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[-0.17432127014427376,0.06780972803304605,0.12884074781631744,0.973865492386656],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[-0.49716211694550505,0.05460881540090392,0.12915036445059877,0.8562522351019305],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[-0.17432127014427376,0.06780972803304605,0.12884074781631744,0.973865492386656],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.27394997167892027,-0.1461280576633101,-0.045902367203021724,0.9494687864621068],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.48532445791880824,-0.20227082977314997,-0.16858344271846354,0.8337423491762229],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1386435052934044,0.012129734984669321,-0.08630754905046058,0.9864997997699047],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.27394997167892027,-0.1461280576633101,-0.045902367203021724,0.9494687864621068],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.48532445791880824,-0.20227082977314997,-0.16858344271846354,0.8337423491762229],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.27394997167892027,-0.1461280576633101,-0.045902367203021724,0.9494687864621068],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.2875799671073594,0.029477085964184236,0.08193610741930832,0.953789986434415],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.8931598240462322,-0.039046606162913694,0.07780568246204939,0.4412336875551055],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.16504760586067765,0,0,0.9862856015372314],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.2875799671073594,0.029477085964184236,0.08193610741930832,0.953789986434415],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.8931598240462322,-0.039046606162913694,0.07780568246204939,0.4412336875551055],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.2875799671073594,0.029477085964184236,0.08193610741930832,0.953789986434415],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[-0.14001334613028896,0.024647134500787028,-0.10638189356491606,0.984109584542211],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[-0.5001172824205234,-0.022174112369028477,-0.10782331645183894,0.8589325613773661],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.42261826174069944,0,0,0.9063077870366499],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[-0.14001334613028896,0.024647134500787028,-0.10638189356491606,0.984109584542211],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[-0.5001172824205234,-0.022174112369028477,-0.10782331645183894,0.8589325613773661],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[-0.14001334613028896,0.024647134500787028,-0.10638189356491606,0.984109584542211],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.5075383629607041,0,0,0.8616291604415258],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.5075383629607041,0,0,0.8616291604415258],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.08014963122308415,0.1473223051406642,-0.5957120818020541,0.785493023914221],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.16810889102955337,-0.15151983569438926,-0.7334118230870764,0.6410056457661274],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.11577354879005121,-0.16230852927168515,0.5690451723474853,0.7977719088525497],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.374709505220685,0.5996605595645501,-0.27628863057543773,0.6508952239913498],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.19887619469193268,-0.22853215241961797,-0.49748804562808624,0.8128511296371926],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.08014963122308415,0.1473223051406642,-0.5957120818020541,0.785493023914221],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.017283850264164763,-0.11737996735775907,-0.08289733531458858,0.989470183270258],\"scl\":[1,1,1],\"time\":0},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0.07303471433852939,-0.8532649278657773,0.06111404516072369,0.5127084618570212],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.07421335885552183,0.18286622205336373,0.12937804702808148,-0.9717580167647246],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.15761167726442593,-0.23581835096390072,-0.042661842088100095,0.957981331638676],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.017283850264164763,-0.11737996735775907,-0.08289733531458858,0.989470183270258],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.12549087792255076,-0.10908755589498849,0.6469260813020488,0.7442033257371672],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[-0.05707589260972676,0.33129400416960864,0.6746917253656557,0.6570979386721472],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[-0.4032060384779276,0.2105132913354495,-0.4878677608861571,0.7450463694254067],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.468543129443505,-0.529591668978362,0.30441731592920374,0.6382241751629747],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[-0.23964648981650716,0.1347473791629132,0.6752257627279221,0.6844580871578978],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.12549087792255076,-0.10908755589498849,0.6469260813020488,0.7442033257371672],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[-0.07639000069733487,0.0802842884702989,0.03830362127562958,0.99310212637747],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0.7986355100472928,0,0.6018150231520483],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[-0.07639000069733487,0.0802842884702989,0.03830362127562958,0.99310212637747],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[-0.09676849654667163,0.27835143053275424,0.010486780318768311,0.9555345972988168],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[-0.07639000069733487,0.0802842884702989,0.03830362127562958,0.99310212637747],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.35},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.1},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.35},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5}]}]}},{\"_id\":\"female\",\"idle\":{\"name\":\"idle\",\"fps\":25,\"length\":3,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,19.6131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,19.6131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000027,19.6631,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000027,19.6631,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000027,19.6631,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000027,19.6131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,-0.03489949670250097,0.9993908270190958],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,-0.03489949670250097,0.9993908270190958],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,-0.03489949670250097,0.9993908270190958],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,-0.03489949670250097,0.9993908270190958],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,-0.03489949670250097,0.9993908270190958],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,-0.03489949670250097,0.9993908270190958],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0.026176948307873153,0.9996573249755573],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0.026176948307873153,0.9996573249755573],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0.026176948307873153,0.9996573249755573],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0.026176948307873153,0.9996573249755573],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0.026176948307873153,0.9996573249755573],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0.026176948307873153,0.9996573249755573],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,-0.0697564737441253,0,0.9975640502598242],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,-0.043619387365336,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0.052335956242943835,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0.06974584949530101,-0.01740989325235717,-0.0012174183314141707,0.9974121164231596],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0.052264231633826735,0.052264231633826735,0.0027390523158633317,0.9972609476841365],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0.12186934340514748,0,0,0.992546151641322],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0.08474762263774074,0.23255703376735135,0.020346104077858747,0.9686697592840581],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0.0942408065346705,0.1813965492823287,0.017466501076713336,0.9787281970150323],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0.11292745642874172,0.06930806906340573,0.007896657008951589,0.9911515645729061],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0.06889765579810342,-0.15605339854576158,-0.010912316653255151,0.9852823814384903],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0.12186934340514748,0,0,0.992546151641322],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0,0,-0.6691306063588582,0.7431448254773942],\"scl\":[1,1,1],\"time\":1},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.08543554994264561,-0.07426799050317771,0.6518417868674784,0.7498581981188379],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.08543554994264561,-0.07426799050317771,0.6518417868674784,0.7498581981188379],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]}]},\"walk\":{\"name\":\"walk\",\"fps\":25,\"length\":1,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,19,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,19.9,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000027,19,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000027,19.9,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.000027,19,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.1991781803199493,-0.008696307159570628,-0.042743715279718424,0.9789920334355671],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,-0.043619387365336,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.18206207765196525,0.007949001978167544,-0.042888976691899776,0.9823190667634029],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.14766872932209915,-0.006447355960304693,-0.043140266054445674,0.9880745394079686],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.1991781803199493,-0.008696307159570628,-0.042743715279718424,0.9789920334355671],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.6225146366376195,0,0,0.7826081568524139],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.3889322798819408,-0.08822648037766764,-0.037449919043130775,0.9162670317050963],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.2901981343013892,-0.06600012685751383,0.007143699096686766,0.954661193128746],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.37409320809892804,0.048525053641771385,0.019605394281333424,0.9259131813179834],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.3889322798819408,-0.08822648037766764,-0.037449919043130775,0.9162670317050963],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1819857780379785,-0.009537470488066906,0.051459585817926916,0.9819073908857435],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.1304466791904508,0.004555298414973698,0.03460092667022682,0.9908408999522051],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.19909470759202602,0.010434111491904529,0.0512852964624154,0.9785817518700123],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.021494567147367777,0.0011264825308437594,0.052323831596807174,0.99839818272435],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1819857780379785,-0.009537470488066906,0.051459585817926916,0.9819073908857435],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.6225146366376195,0,0,0.7826081568524139],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.1386435052934044,0.08630754905046058,0.012129734984669321,0.9864997997699047],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.37049186340830476,0.1370464995523994,0.05537037997807543,0.9169995404196012],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.33947077704170586,0.1145197226978409,0.04168177029843368,0.9326882944868016],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.30004512648791015,0.021430826823916685,-0.03897734283681863,0.9528874059813566],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.1386435052934044,0.08630754905046058,0.012129734984669321,0.9864997997699047],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.026152033653420895,-0.043604440090704404,-0.0011418224482834958,0.9987058727081077],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.026141073709985894,0.052318022017859046,0.001369995621214652,0.9982873293543426],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0.02605643483051109,0.09581290857463638,0.002508949309251106,0.9950551009505731],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,-0.08715574274765817,0,0.9961946980917455],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.28189470061061406,-0.00859441463567251,-0.6721730857124303,0.6845764067279506],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.06952405244855686,0.06597586230810733,-0.6851855277742152,0.7220348912986148],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0,0,-0.636078220277764,0.77162458338772],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.28189470061061406,-0.00859441463567251,-0.6721730857124303,0.6845764067279506],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,-0.01745240643728351,0,0.9998476951563913],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[0.09584575252022398,0,0,0.9953961983671789],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0,0,0.6560590289905073,0.754709580222772],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.12639454111990192,0.03975724874601606,0.6562136157325119,0.7428509081063979],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.271230072013406,0.00041115729626256536,0.6595719744455943,0.7009984946568864],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0,0,0.6560590289905073,0.754709580222772],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.8},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]}]},\"run\":{\"name\":\"run\",\"fps\":25,\"length\":1,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,17.6,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,18.5,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000027,17.6,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000027,18.5,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000027,17.6,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.5444524008203908,-0.01425698786603828,-0.021953836104441984,0.8383831764880539],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,-0.043619387365336,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.18206207765196525,0.007949001978167544,-0.042888976691899776,0.9823190667634029],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.00406854761967286,0.00017763662534309946,-0.04361902565803793,0.9990399371227057],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.5444524008203908,-0.01425698786603828,-0.021953836104441984,0.8383831764880539],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.5878639411164784,-0.0012696256671740815,0.031429122460403816,0.8083480593451289],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.374606593415912,0,0,0.9271838545667874],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.6225146366376195,0,0,0.7826081568524139],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.5878639411164784,-0.0012696256671740815,0.031429122460403816,0.8083480593451289],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1819857780379785,-0.009537470488066906,0.051459585817926916,0.9819073908857435],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.017428488520812163,0.0009133883796357411,0.05232798522331314,0.9984774386394599],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.5805039633113975,0.015201031253874423,0.021311059840650726,0.8138365413011672],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.021494567147367777,0.0011264825308437594,0.052323831596807174,0.99839818272435],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1819857780379785,-0.009537470488066906,0.051459585817926916,0.9819073908857435],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.3977777362344024,-0.0639708770006315,-0.027815328956978348,0.9148261621352],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.6225146366376195,0,0,0.7826081568524139],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.6819983600624985,0,0,0.7313537016191705],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.3977777362344024,-0.0639708770006315,-0.027815328956978348,0.9148261621352],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.16504760586067765,0,0,0.9862856015372314],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.2169438962559116,-0.03880515087868496,-0.026462023095532937,0.9750534690345337],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.20791169081775934,0,0,0.9781476007338057],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18285615432930413,0.04827565850963268,0.026672664754626405,0.981591389822795],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.16504760586067765,0,0,0.9862856015372314],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[-0.20791169081775934,0,0,0.9781476007338057],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[-0.1908089953765448,0,0,0.981627183447664],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[-0.13052619222005157,0,0,0.9914448613738104],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[-0.07845909572784494,0,0,0.996917333733128],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0.02605643483051109,0.09581290857463638,0.002508949309251106,0.9950551009505731],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,-0.08715574274765817,0,0.9961946980917455],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0.24192189559966773,0,0,0.9702957262759965],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0.24192189559966773,0,0,0.9702957262759965],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.15754614523438568,-0.3657737849857746,-0.5561673501929295,0.7294289745536173],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.29503633663875795,0.2799790293635443,-0.6288431958725288,0.6626624617286342],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.3261026401477096,0.2688182717849063,-0.576482644202151,0.6993293685932015],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.22694554771442302,0.1972807548345876,-0.6256946166396692,0.7197793195505365],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.15754614523438568,-0.3657737849857746,-0.5561673501929295,0.7294289745536173],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.06610968123079784,-0.5188325444666422,0.07763145689872764,0.8487730307624135],\"scl\":[1,1,1],\"time\":0},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.026098828543592686,0.008951638337318896,0.008494787596162134,0.999583192087295],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.06610968123079784,-0.5188325444666422,0.07763145689872764,0.8487730307624135],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,-0.01745240643728351,0,0.9998476951563913],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[0.09584575252022398,0,0,0.9953961983671789],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.33528560962005943,-0.2572736969424497,0.5517252235581623,0.7190223101774836],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.2699612195769417,-0.07215487183121298,0.6139486525164899,0.7382287358730611],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[-0.07919224285232154,0.29912607001191843,0.5809488075068789,0.7528284439150655],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.33528560962005943,-0.2572736969424497,0.5517252235581623,0.7190223101774836],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[-0.1228865655916834,0.5486682826619268,-0.11817712675189002,0.818471853096098],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]}]},\"jump\":{\"name\":\"jump\",\"fps\":25,\"length\":2,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,11.6,0.000197],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,19.4,0.000197],\"rot\":[0.09584575252022398,0,0,0.9953961983671789],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[0,19.4,0.000197],\"rot\":[-0.01745240643728351,0,0,0.9998476951563913],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[0,19.4,0.000197],\"rot\":[-0.224951054343865,0,0,0.9743700647852352],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.000027,11.6,0.000197],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.5850008686596513,0.28224802062388366,0.2936481939239598,0.7013421253044406],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.37607492877448045,0.11790496229454614,0.09682585777078023,0.9139424604867331],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.09581290857463638,-0.002508949309251106,0.02605643483051109,0.9950551009505731],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.17592884868747702,0.37098957232209695,-0.01576795464098875,0.9116836891346725],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.5850008686596513,0.28224802062388366,0.2936481939239598,0.7013421253044406],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.8599420883175322,0.030238015121610895,-0.22445068591284287,0.45739168857210477],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.14188960788316024,0.15848471318526997,-0.0024561127855226676,0.9771099745531875],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.6755902076156602,0,0,0.7372773368101241],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.0168176703247406,-0.267197674379182,-0.004663952754957362,0.9634836876231504],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.8599420883175322,0.030238015121610895,-0.22445068591284287,0.45739168857210477],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[-0.20823277885808641,0.012026412289235726,0.1397043476941996,0.9679758108815669],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.32,-6.81466,-0.47136],\"rot\":[0.36523434269164884,-0.2245772490104722,0.042067134496357544,0.9024407406255288],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.42261826174069944,0,0,0.9063077870366499],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.4439618609539606,0.046622517822134626,-0.13224326141296286,0.8850061732333192],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[-0.20823277885808641,0.012026412289235726,0.1397043476941996,0.9679758108815669],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.48532445791880824,-0.20227082977314997,-0.16858344271846354,0.8337423491762229],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.27394997167892027,-0.1461280576633101,-0.045902367203021724,0.9494687864621068],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.11303034255106126,-0.0183272809932813,0.0066935262494466855,0.9933999442019971],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.3279397825226716,-0.30704338143247933,0.016242095371683724,0.8932614708445836],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.48532445791880824,-0.20227082977314997,-0.16858344271846354,0.8337423491762229],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.8931598240462322,-0.039046606162913694,0.07780568246204939,0.4412336875551055],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.09911520811005155,0.04529141207343747,0.07434413002128032,0.991260719409921],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.8746197071393957,0,0,0.4848096202463371],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.4056127829343904,0.08402305684085974,0.04691788020162704,0.9089648556224397],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.8931598240462322,-0.039046606162913694,0.07780568246204939,0.4412336875551055],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[-0.2243945781548451,0.02288691043647381,0.02157755821770928,0.973990591128448],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.28321510155130286,0.026634000929435887,-0.028503497989694905,0.9582626919848897],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.42261826174069944,0,0,0.9063077870366499],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.472457554954896,0.2604489000749774,-0.049836869988972465,0.8405156248431543],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[-0.2243945781548451,0.02288691043647381,0.02157755821770928,0.973990591128448],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.5075383629607041,0,0,0.8616291604415258],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[-0.3090169943749474,0,0,0.9510565162951535],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.44619781310980877,0,0,0.8949343616020251],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.5075383629607041,0,0,0.8616291604415258],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[-0.03489949670250097,0,0,0.9993908270190958],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0.3665012267242973,0,0,0.9304175679820246],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[-0.14780941112961063,0,0,0.9890158633619168],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0.09584575252022398,0,0,0.9953961983671789],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.16810889102955337,-0.15151983569438926,-0.7334118230870764,0.6410056457661274],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.0308435645972319,0.12885997584859138,-0.6952662127734242,0.706433772212892],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.11577354879005121,-0.16230852927168515,0.5690451723474853,0.7977719088525497],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.03515404507198279,0.1642068437826166,-0.6688414713480697,0.7241901627162425],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.16810889102955337,-0.15151983569438926,-0.7334118230870764,0.6410056457661274],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0.07303471433852939,-0.8532649278657773,0.06111404516072369,0.5127084618570212],\"scl\":[1,1,1],\"time\":0},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.017283850264164763,-0.11737996735775907,-0.08289733531458858,0.989470183270258],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0.022481669216499488,-0.2924788400241779,0.000689260115942723,0.9560074411885316],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0.07303471433852939,-0.8532649278657773,0.06111404516072369,0.5127084618570212],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[-0.05707589260972676,0.33129400416960864,0.6746917253656557,0.6570979386721472],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.10178476255296239,-0.09491582661957716,0.6753611989040085,0.7242362176694146],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[-0.4032060384779276,0.2105132913354495,-0.4878677608861571,0.7450463694254067],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.12967110416611335,0.07202432123659419,0.6477848929749133,0.7472433568311122],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[-0.05707589260972676,0.33129400416960864,0.6746917253656557,0.6570979386721472],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0.7986355100472928,0,0.6018150231520483],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[-0.07639000069733487,0.0802842884702989,0.03830362127562958,0.99310212637747],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[-0.047018953455583885,0.11520866376181058,0.03736064152336122,0.9915242630793875],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0.7986355100472928,0,0.6018150231520483],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.51},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.13},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.62},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]}]}},{\"_id\":\"male\",\"idle\":{\"name\":\"idle\",\"fps\":25,\"length\":3,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,18.2131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,18.2131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000027,18.2131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000027,18.2131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000027,18.2131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000027,18.2131,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,-0.0697564737441253,0,0.9975640502598242],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,-0.043619387365336,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0.052335956242943835,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0.06974584949530101,-0.01740989325235717,-0.0012174183314141707,0.9974121164231596],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0.052264231633826735,0.052264231633826735,0.0027390523158633317,0.9972609476841365],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0.2334453638559054,0,0.9723699203976766],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0.0942408065346705,0.1813965492823287,0.017466501076713336,0.9787281970150323],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0.11292745642874172,0.06930806906340573,0.007896657008951589,0.9911515645729061],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,-0.15643446504023087,0,0.9876883405951378],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0,0,-0.6691306063588582,0.7431448254773942],\"scl\":[1,1,1],\"time\":1},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.08543554994264561,-0.07426799050317771,0.6518417868674784,0.7498581981188379],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.08543554994264561,-0.07426799050317771,0.6518417868674784,0.7498581981188379],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.8},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":3}]}]},\"walk\":{\"name\":\"walk\",\"fps\":25,\"length\":1,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,17.6,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,18.5,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000027,17.6,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000027,18.5,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.000027,17.6,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.1991781803199493,-0.008696307159570628,-0.042743715279718424,0.9789920334355671],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,-0.043619387365336,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.18206207765196525,0.007949001978167544,-0.042888976691899776,0.9823190667634029],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.00406854761967286,0.00017763662534309946,-0.04361902565803793,0.9990399371227057],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.1991781803199493,-0.008696307159570628,-0.042743715279718424,0.9789920334355671],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.6225146366376195,0,0,0.7826081568524139],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1819857780379785,-0.009537470488066906,0.051459585817926916,0.9819073908857435],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.017428488520812163,0.0009133883796357411,0.05232798522331314,0.9984774386394599],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.19909470759202602,0.010434111491904529,0.0512852964624154,0.9785817518700123],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.021494567147367777,0.0011264825308437594,0.052323831596807174,0.99839818272435],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1819857780379785,-0.009537470488066906,0.051459585817926916,0.9819073908857435],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.6225146366376195,0,0,0.7826081568524139],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.026152033653420895,-0.043604440090704404,-0.0011418224482834958,0.9987058727081077],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.026141073709985894,0.052318022017859046,0.001369995621214652,0.9982873293543426],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0.02605643483051109,0.09581290857463638,0.002508949309251106,0.9950551009505731],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,-0.08715574274765817,0,0.9961946980917455],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.28189470061061406,-0.00859441463567251,-0.6721730857124303,0.6845764067279506],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.06952405244855686,0.06597586230810733,-0.6851855277742152,0.7220348912986148],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0,0,-0.636078220277764,0.77162458338772],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.28189470061061406,-0.00859441463567251,-0.6721730857124303,0.6845764067279506],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,-0.01745240643728351,0,0.9998476951563913],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[0.09584575252022398,0,0,0.9953961983671789],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0,0,0.6560590289905073,0.754709580222772],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.12639454111990192,0.03975724874601606,0.6562136157325119,0.7428509081063979],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.271230072013406,0.00041115729626256536,0.6595719744455943,0.7009984946568864],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0,0,0.6560590289905073,0.754709580222772],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.25},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.75},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]}]},\"run\":{\"name\":\"run\",\"fps\":25,\"length\":1,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,17.6,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,18.5,0.000197],\"rot\":[-0.026176948307873153,0,0,0.9996573249755573],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000027,17.6,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000027,18.5,0.000197],\"rot\":[-0.026176948307873153,0,0,0.9996573249755573],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000027,17.6,0.000197],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.5444524008203908,-0.01425698786603828,-0.021953836104441984,0.8383831764880539],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0,0,-0.043619387365336,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.18206207765196525,0.007949001978167544,-0.042888976691899776,0.9823190667634029],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.00406854761967286,0.00017763662534309946,-0.04361902565803793,0.9990399371227057],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.5444524008203908,-0.01425698786603828,-0.021953836104441984,0.8383831764880539],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.5878639411164784,-0.0012696256671740815,0.031429122460403816,0.8083480593451289],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.374606593415912,0,0,0.9271838545667874],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.6225146366376195,0,0,0.7826081568524139],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.5878639411164784,-0.0012696256671740815,0.031429122460403816,0.8083480593451289],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1819857780379785,-0.009537470488066906,0.051459585817926916,0.9819073908857435],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.017428488520812163,0.0009133883796357411,0.05232798522331314,0.9984774386394599],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.5805039633113975,0.015201031253874423,0.021311059840650726,0.8138365413011672],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.021494567147367777,0.0011264825308437594,0.052323831596807174,0.99839818272435],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1819857780379785,-0.009537470488066906,0.051459585817926916,0.9819073908857435],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.3977777362344024,-0.0639708770006315,-0.027815328956978348,0.9148261621352],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.6225146366376195,0,0,0.7826081568524139],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.6819983600624985,0,0,0.7313537016191705],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.3977777362344024,-0.0639708770006315,-0.027815328956978348,0.9148261621352],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.16504760586067765,0,0,0.9862856015372314],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.2169438962559116,-0.03880515087868496,-0.026462023095532937,0.9750534690345337],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.20791169081775934,0,0,0.9781476007338057],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18285615432930413,0.04827565850963268,0.026672664754626405,0.981591389822795],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.16504760586067765,0,0,0.9862856015372314],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0.02605643483051109,0.09581290857463638,0.002508949309251106,0.9950551009505731],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,-0.08715574274765817,0,0.9961946980917455],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0,0,0],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.15754614523438568,-0.3657737849857746,-0.5561673501929295,0.7294289745536173],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.06952405244855686,0.06597586230810733,-0.6851855277742152,0.7220348912986148],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.2952879440680951,0.24341659658857237,-0.5876596487908319,0.7128881593744631],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.07288168199380252,0.062246836914997244,-0.6464581183448487,0.7569052073739946],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.15754614523438568,-0.3657737849857746,-0.5561673501929295,0.7294289745536173],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.06610968123079784,-0.5188325444666422,0.07763145689872764,0.8487730307624135],\"scl\":[1,1,1],\"time\":0},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0.05860626525863542,-0.17384233784965525,-0.0020226336387667333,0.9830259692381296],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.06610968123079784,-0.5188325444666422,0.07763145689872764,0.8487730307624135],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,-0.01745240643728351,0,0.9998476951563913],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[0,0,0],\"rot\":[0.09584575252022398,0,0,0.9953961983671789],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.33528560962005943,-0.2572736969424497,0.5517252235581623,0.7190223101774836],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.12639454111990192,0.03975724874601606,0.6562136157325119,0.7428509081063979],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[-0.07919224285232154,0.29912607001191843,0.5809488075068789,0.7528284439150655],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.07233570765067393,-0.0628804713312826,0.6530386633616138,0.7512350470250366],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.33528560962005943,-0.2572736969424497,0.5517252235581623,0.7190223101774836],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[-0.1228865655916834,0.5486682826619268,-0.11817712675189002,0.818471853096098],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.15},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.5},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.65},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1}]}]},\"jump\":{\"name\":\"jump\",\"fps\":25,\"length\":2,\"hierarchy\":[{\"keys\":[{\"pos\":[-0.000027,16.99595714285715,0.000197],\"rot\":[0.09584575252022398,0,0,0.9953961983671789],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000027,10.295957142857137,0.000197],\"rot\":[-0.043619387365336,0,0,0.9990482215818578],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.000027,18.615957142857113,0.000197],\"rot\":[-0.13917310096006544,0,0,0.9902680687415704],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.000027,16.99595714285715,0.000197],\"rot\":[0.052335956242943835,0,0,0.9986295347545738],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.000027,16.99595714285715,0.000197],\"rot\":[0.09584575252022398,0,0,0.9953961983671789],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.18639491963201532,-0.2715258494826644,-0.006155387212172972,0.9441889420059739],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.37607492877448045,0.11790496229454614,0.09682585777078023,0.9139424604867331],\"scl\":[1,1,1],\"time\":0},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.5850008686596513,0.28224802062388366,0.2936481939239598,0.7013421253044406],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[0.0949129882452847,-0.013339150592090579,0.1385323756106207,0.9857090709897672],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.6735782415953947,0.1940388415768481,0.1001073420675459,0.7061301583086097],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[1.54938,-2.41556,0.041129],\"rot\":[-0.37607492877448045,0.11790496229454614,0.09682585777078023,0.9139424604867331],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.05084171864426136,-0.17681805948731355,-0.14151968698517267,0.9726883733653126],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.8599420883175322,0.030238015121610895,-0.22445068591284287,0.45739168857210477],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.16504760586067765,0,0,0.9862856015372314],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.6964271303279242,-0.17392856561197542,-0.1801083021253126,0.6725318622287796],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.02,-7.21533,-0.20864],\"rot\":[0.05084171864426136,-0.17681805948731355,-0.14151968698517267,0.9726883733653126],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.16927320408540605,0.019654170015829496,0.14426299288026864,0.9747556026332329],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[-0.49716211694550505,0.05460881540090392,0.12915036445059877,0.8562522351019305],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.42261826174069944,0,0,0.9063077870366499],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[-0.17432127014427376,0.06780972803304605,0.12884074781631744,0.973865492386656],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[0.32,-7.29466,-0.47136],\"rot\":[0.16927320408540605,0.019654170015829496,0.14426299288026864,0.9747556026332329],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[0.19847,-0.54529,2.28466],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.08011560719445389,0.1793044002250701,-0.0015547154297233811,0.9805248616958799],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.27394997167892027,-0.1461280576633101,-0.045902367203021724,0.9494687864621068],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.48532445791880824,-0.20227082977314997,-0.16858344271846354,0.8337423491762229],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[0.1386435052934044,0.012129734984669321,-0.08630754905046058,0.9864997997699047],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.5622837412080928,-0.22259964117381303,-0.11211776482225357,0.7884896961492789],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-1.43938,-2.41556,0.041129],\"rot\":[-0.27394997167892027,-0.1461280576633101,-0.045902367203021724,0.9494687864621068],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.09911520811005155,0.04529141207343747,0.07434413002128032,0.991260719409921],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.8931598240462322,-0.039046606162913694,0.07780568246204939,0.4412336875551055],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.16504760586067765,0,0,0.9862856015372314],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.6563192586690026,-0.006299414625859687,0.08682556680839149,0.749444240103254],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.09,-7.21533,-0.20864],\"rot\":[0.09911520811005155,0.04529141207343747,0.07434413002128032,0.991260719409921],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.022370948628110315,0.03743098927426485,-0.10352043214736681,0.9936709625562431],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[-0.5001172824205234,-0.022174112369028477,-0.10782331645183894,0.8589325613773661],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.42261826174069944,0,0,0.9063077870366499],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[-0.14001334613028896,0.024647134500787028,-0.10638189356491606,0.984109584542211],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.32,-7.29466,-0.47136],\"rot\":[0.022370948628110315,0.03743098927426485,-0.10352043214736681,0.9936709625562431],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.30536,-0.83898,2.28801],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.5075383629607041,0,0,0.8616291604415258],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.25038000405444144,0,0,0.9681476403781077],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[0.000027,0.055037,0.000009],\"rot\":[0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.04381,1.99522,-0.197985],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.01959,2.01295,-0.04372],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[0,0,0],\"rot\":[-0.11320321376790672,0,0,0.9935718556765875],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[0.063054,2.1058,-0.51192],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.023034,1.43701,0.49728],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.322196470910003,0.345418580632478,-0.5349859591417508,0.7004751685878413],\"scl\":[1,1,1],\"time\":0},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.16810889102955337,-0.15151983569438926,-0.7334118230870764,0.6410056457661274],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[-0.11577354879005121,-0.16230852927168515,0.5690451723474853,0.7977719088525497],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.22776544840670546,0.5182437553770438,-0.39150047343136907,0.7254472343512001],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[2.59289,1.2264,-0.487197],\"rot\":[0.322196470910003,0.345418580632478,-0.5349859591417508,0.7004751685878413],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.017283850264164763,-0.11737996735775907,-0.08289733531458858,0.989470183270258],\"scl\":[1,1,1],\"time\":0},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0.07303471433852939,-0.8532649278657773,0.06111404516072369,0.5127084618570212],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.07421335885552183,0.18286622205336373,0.12937804702808148,-0.9717580167647246],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[4.14553,-0.064466,0.257385],\"rot\":[-0.017283850264164763,-0.11737996735775907,-0.08289733531458858,0.989470183270258],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[3.69801,0.065802,1.73268],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[0.559672,0,0.260979],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.000253,0,-0.000043],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[0,0,0],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.299877708990016,-0.27478729314047656,0.6171823653951081,0.6735363620657228],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[-0.05707589260972676,0.33129400416960864,0.6746917253656557,0.6570979386721472],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[-0.4032060384779276,0.2105132913354495,-0.4878677608861571,0.7450463694254067],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.26147133297296665,-0.4174480221570679,0.4459533460867624,0.7473255675704615],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-2.46562,1.22638,-0.487064],\"rot\":[0.299877708990016,-0.27478729314047656,0.6171823653951081,0.6735363620657228],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[-0.07639000069733487,0.0802842884702989,0.03830362127562958,0.99310212637747],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0.7986355100472928,0,0.6018150231520483],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[-0.07639000069733487,0.0802842884702989,0.03830362127562958,0.99310212637747],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-4.14558,-0.064367,0.259233],\"rot\":[-0.07639000069733487,0.0802842884702989,0.03830362127562958,0.99310212637747],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-3.69873,0.066645,1.72989],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.529147,0,0.246746],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]},{\"keys\":[{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.1},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":0.7},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":1.2},{\"pos\":[-0.000062,0,0.000158],\"rot\":[0,0,0,1],\"scl\":[1,1,1],\"time\":2}]}]}}];\n\nAnimations = animations.find(function(item){ return item._id == \"basic\"; });\nMaleAnimations = animations.find(function(item){ return item._id == \"male\"; });\nFemaleAnimations = animations.find(function(item){ return item._id == \"female\"; });\n\ndelete Animations._id;\ndelete MaleAnimations._id;\ndelete FemaleAnimations._id;\n\ndebugMode && console.log({\n\t\"Animations\": Animations,\n\t\"MaleAnimations\": MaleAnimations,\n\t\"FemaleAnimations\": FemaleAnimations,\n});\n\n/*\nfunction fetchAnimation(options){\n\n\tvar url = options.url;\n\tvar key = options.key;\n\tvar name = options.name;\n\tvar object = options.obj;\n\n\tfetch(url).then(function(response){\n\t\treturn response.json();\n\t}).then(function(json){\n\n\t\tobject[ name ] = json;\n\n\t\tif ( !!localPlayer && !!localPlayer.outfit ) {\n\t\t\tlocalPlayer.outfit.AnimationsHandler.refresh();\n\t\t}\n\n\t});\n\n}\n*/"
			},
			{
				"name": "animations.js",
				"source": "var clock = new THREE.Clock();\n\nfunction update() {\n\n\tvar delta = clock.getDelta();\n\n\tTHREE.AnimationHandler.update( delta );\n\n}\n"
			}],
		"7CEDA1F4-6645-4350-9266-79A7415FE7EB": [
			{
				"name": "skeleton-loader.js",
				"source": "var collection = [\n\n\t{\"name\":\"body\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/skeleton/skeleton.json\",\"material\":{\"type\":\"MeshLambertMaterial\",\"name\":\"HF_SkeletonMaterial\",\"color\":16777215,\"side\":0,\"opacity\":1,\"shading\":2,\"emissive\":0,\"skinning\":true,\"alphaTest\":0.5,\"transparent\":false},\"_id\":\"body\"},\n\n\t{\n\t\t\"_id\":\"bones\",\n\t\t\"name\":\"bones\",\n\t\t\"bodyKit\":\"FBK07\",\n\t\t\"sourceFile\":\"FM_Body_FBK07.json\",\n\t\t\"blenderFile\":\"Female-BodyKit-v07.blend\",\n\t\t\"version\":\"0.1\",\n\t\t\"bones\":[\n\t\t\t{\"name\":\"Hips\",\"rotq\":[0,0,0,1],\"pos\":[-0.000027,18.2131,0.000197],\"parent\":-1},\n\t\t\t{\"name\":\"1.LHipJoint\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},\n\t\t\t{\"name\":\"2.LeftUpLeg\",\"rotq\":[0,0,0,1],\"pos\":[1.54938,-2.41555,0.04113],\"parent\":1},\n\t\t\t{\"name\":\"3.LeftLeg\",\"rotq\":[0,0,0,1],\"pos\":[-0.019988,-7.21534,-0.208633],\"parent\":2},\n\t\t\t{\"name\":\"4.LeftFoot\",\"rotq\":[0,0,0,1],\"pos\":[0.320012,-7.29465,-0.471353],\"parent\":3},\n\t\t\t{\"name\":\"5.LeftToeBase\",\"rotq\":[0,0,0,1],\"pos\":[0.198471,-0.54529,2.28466],\"parent\":4},\n\t\t\t{\"name\":\"6.RHipJoint\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},\n\t\t\t{\"name\":\"7.RightUpLeg\",\"rotq\":[0,0,0,1],\"pos\":[-1.43938,-2.41556,0.041129],\"parent\":6},\n\t\t\t{\"name\":\"8.RightLeg\",\"rotq\":[0,0,0,1],\"pos\":[-0.08999,-7.21534,-0.208642],\"parent\":7},\n\t\t\t{\"name\":\"9.RightFoot\",\"rotq\":[0,0,0,1],\"pos\":[-0.31999,-7.29467,-0.471362],\"parent\":8},\n\t\t\t{\"name\":\"10.RightToeBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.305358,-0.83898,2.28801],\"parent\":9},\n\t\t\t{\"name\":\"11.LowerBack\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},\n\t\t\t{\"name\":\"12.Spine\",\"rotq\":[0,0,0,1],\"pos\":[-0.04381,1.99522,-0.197985],\"parent\":11},\n\t\t\t{\"name\":\"13.Spine1\",\"rotq\":[0,0,0,1],\"pos\":[-0.01959,2.01295,-0.04372],\"parent\":12},\n\t\t\t{\"name\":\"14.Neck\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":13},\n\t\t\t{\"name\":\"15.Neck1\",\"rotq\":[0,0,0,1],\"pos\":[0.063054,2.1058,-0.51192],\"parent\":14},\n\t\t\t{\"name\":\"16.Head\",\"rotq\":[0,0,0,1],\"pos\":[-0.023034,1.43701,0.497281],\"parent\":15},\n\t\t\t{\"name\":\"17.LeftShoulder\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":14},\n\t\t\t{\"name\":\"18.LeftArm\",\"rotq\":[0,0,0,1],\"pos\":[2.59288,1.2264,-0.487197],\"parent\":17},\n\t\t\t{\"name\":\"19.LeftForeArm\",\"rotq\":[0,0,0,1],\"pos\":[4.14553,-0.064466,0.257386],\"parent\":18},\n\t\t\t{\"name\":\"20.LeftHand\",\"rotq\":[0,0,0,1],\"pos\":[3.69802,0.065802,1.73268],\"parent\":19},\n\t\t\t{\"name\":\"21.LeftFingerBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.000254,0,-0.000043],\"parent\":20},\n\t\t\t{\"name\":\"22.LeftHandIndex1\",\"rotq\":[0,0,0,1],\"pos\":[0.559672,0,0.260979],\"parent\":21},\n\t\t\t{\"name\":\"23.LThumb\",\"rotq\":[0,0,0,1],\"pos\":[-0.000254,0,-0.000043],\"parent\":20},\n\t\t\t{\"name\":\"24.RightShoulder\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":14},\n\t\t\t{\"name\":\"25.RightArm\",\"rotq\":[0,0,0,1],\"pos\":[-2.46562,1.22638,-0.487065],\"parent\":24},\n\t\t\t{\"name\":\"26.RightForeArm\",\"rotq\":[0,0,0,1],\"pos\":[-4.14558,-0.064367,0.259234],\"parent\":25},\n\t\t\t{\"name\":\"27.RightHand\",\"rotq\":[0,0,0,1],\"pos\":[-3.69873,0.066645,1.72989],\"parent\":26},\n\t\t\t{\"name\":\"28.RightFingerBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.000058,0,0.000157],\"parent\":27},\n\t\t\t{\"name\":\"29.RightHandIndex1\",\"rotq\":[0,0,0,1],\"pos\":[-0.529147,0,0.246746],\"parent\":28},\n\t\t\t{\"name\":\"30.RThumb\",\"rotq\":[0,0,0,1],\"pos\":[-0.000058,0,0.000157],\"parent\":27}\n\t\t]\n\t}\n];\n\nvar json = {};\n\njson.skeleton = collection.find(function(item){ \n\t\n\treturn item._id = \"body\";\n\t\t\t\t\t\t\t\t\t\t \n});\n\nlocalPlayer.outfit.fromJSON( json ).then(function( outfit ){\n\n\tskeleton = outfit.skeleton; // important!\n\n}).then(function(){\n\n\tlocalPlayer.outfit.AnimationsHandler.refresh();\n\n}).then(function(){\n\n\tdebugMode && console.log(\"skeleton:\", skeleton);\n\n}).then(function(){\n\n\tlocalPlayer.outfit.removeAll();\n\n}).catch(function(err){\n\tconsole.error(err);\n});\n\n//localPlayer.outfit.AnimationsHandler.refresh();\n//skeleton = outfit.skeleton;\n//debugMode && console.log({\"skeleton\":skeleton});\n"
			}],
		"98A18925-6779-4954-A17C-FB56DCADA3FA": [
			{
				"name": "male-loader.js",
				"source": "var json = {\n\tgender: \"male\",\n\tbody: {\"name\":\"body\",\"gender\":\"male\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/male/body.json\",\"material\":{\"type\":\"MeshStandardMaterial\",\"map\":{\"sourceFile\":\"https://i.imgur.com/4h9rLSg.jpg\",\"image\":\"https://i.imgur.com/4h9rLSg.jpg\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":0},\"emissiveMap\":{\"sourceFile\":\"https://i.imgur.com/mAZgsw8.jpg\",\"image\":\"https://i.imgur.com/mAZgsw8.jpg\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":0},\"name\":\"HM_SkinMaterial\",\"color\":16777215,\"side\":0,\"opacity\":1,\"shading\":2,\"emissive\":9276813,\"skinning\":true,\"alphaTest\":0.5,\"transparent\":false,\"roughness\":0.5,\"metalness\":0,\"emissiveIntensity\":1},\"_id\":\"body\"},\n\teyes: {\"name\":\"eyes\",\"gender\":\"male\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/male/eyes.json\",\"material\":{\"type\":\"MeshStandardMaterial\",\"map\":{\"sourceFile\":\"https://i.imgur.com/VybEXWo.png\",\"image\":\"https://i.imgur.com/VybEXWo.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":0},\"emissiveMap\":{\"sourceFile\":\"https://i.imgur.com/Si5QWl0.png\",\"image\":\"https://i.imgur.com/Si5QWl0.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":0},\"name\":\"HM_EyesMaterial\",\"color\":16777215,\"side\":0,\"opacity\":1,\"shading\":2,\"emissive\":6710886,\"skinning\":true,\"alphaTest\":0.5,\"transparent\":false,\"roughness\":0.5,\"metalness\":0.5,\"emissiveIntensity\":1},\"_id\":\"eyes\"},\n\thairs: {\"name\":\"hairs\",\"gender\":\"male\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/male/hairs.json\",\"material\":{\"uuid\":\"89AF71A6-671B-4925-A8CA-AF769AD22126\",\"_id\":\"\",\"name\":\"\",\"type\":\"MeshStandardMaterial\",\"fog\":true,\"lights\":true,\"blending\":1,\"side\":2,\"shading\":2,\"vertexColors\":0,\"opacity\":1,\"transparent\":false,\"blendSrc\":204,\"blendDst\":205,\"blendEquation\":100,\"depthFunc\":3,\"depthTest\":true,\"depthWrite\":true,\"clipShadows\":false,\"colorWrite\":true,\"polygonOffset\":false,\"polygonOffsetFactor\":0,\"polygonOffsetUnits\":0,\"alphaTest\":0.5,\"premultipliedAlpha\":false,\"overdraw\":0,\"visible\":true,\"color\":0,\"roughness\":0.5,\"metalness\":0.5,\"lightMapIntensity\":1,\"aoMapIntensity\":1,\"emissive\":16777215,\"emissiveIntensity\":2,\"emissiveMap\":{\"uuid\":\"E3A3378B-EC5D-4DE3-B2F1-6680D9C134DD\",\"name\":\"\",\"sourceFile\":\"https://i.imgur.com/hvCqpxt.jpg\",\"image\":\"https://i.imgur.com/hvCqpxt.jpg\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":1},\"bumpScale\":1,\"normalScale\":[1,1],\"displacementScale\":1,\"displacementBias\":0,\"envMapIntensity\":1,\"refractionRatio\":0.98,\"wireframe\":false,\"wireframeLinewidth\":1,\"wireframeLinecap\":\"round\",\"wireframeLinejoin\":\"round\",\"skinning\":true,\"morphTargets\":false,\"morphNormals\":false},\"_id\":\"hairs\"},\n\tunderwears: {\"name\":\"underwears\",\"gender\":\"male\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/male/underwears.json\",\"material\":{\"type\":\"MeshStandardMaterial\",\"name\":\"\",\"color\":16777215,\"side\":0,\"opacity\":1,\"shading\":2,\"emissive\":0,\"skinning\":true,\"alphaTest\":0.5,\"transparent\":false,\"roughness\":0.5,\"metalness\":0.5},\"_id\":\"underwears\"},\n\tcostume: {\"name\":\"costume\",\"gender\":\"male\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/male/costume.json\",\"material\":{\"uuid\":\"E948086D-B292-43E1-98F8-E0416C1F6FCD\",\"_id\":\"HF_CostumeMaterial\",\"name\":\"HF_CostumeMaterial\",\"type\":\"MeshStandardMaterial\",\"fog\":true,\"lights\":true,\"blending\":1,\"side\":0,\"shading\":2,\"vertexColors\":0,\"opacity\":1,\"transparent\":true,\"blendSrc\":204,\"blendDst\":205,\"blendEquation\":100,\"depthFunc\":3,\"depthTest\":true,\"depthWrite\":true,\"clipShadows\":false,\"colorWrite\":true,\"polygonOffset\":false,\"polygonOffsetFactor\":0,\"polygonOffsetUnits\":0,\"alphaTest\":0.5,\"premultipliedAlpha\":false,\"overdraw\":0,\"visible\":true,\"color\":16777215,\"roughness\":0.5,\"metalness\":0.5,\"map\":{\"uuid\":\"9B5DD12C-2899-457C-87C0-89F7064A36FB\",\"name\":\"\",\"sourceFile\":\"https://i.imgur.com/607x9wS.png\",\"image\":\"https://i.imgur.com/607x9wS.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":3},\"lightMapIntensity\":1,\"aoMapIntensity\":1,\"emissive\":4473924,\"emissiveIntensity\":2,\"emissiveMap\":{\"uuid\":\"9B5DD12C-2899-457C-87C0-89F7064A36FB\",\"name\":\"\",\"sourceFile\":\"https://i.imgur.com/607x9wS.png\",\"image\":\"https://i.imgur.com/607x9wS.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":3},\"bumpMap\":{\"uuid\":\"9B5DD12C-2899-457C-87C0-89F7064A36FB\",\"name\":\"\",\"sourceFile\":\"https://i.imgur.com/607x9wS.png\",\"image\":\"https://i.imgur.com/607x9wS.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":3},\"bumpScale\":0.1,\"normalScale\":[1,1],\"displacementScale\":1,\"displacementBias\":0,\"envMapIntensity\":1,\"refractionRatio\":0.98,\"wireframe\":false,\"wireframeLinewidth\":1,\"wireframeLinecap\":\"round\",\"wireframeLinejoin\":\"round\",\"skinning\":true,\"morphTargets\":false,\"morphNormals\":false},\"_id\":\"costume\"},\n    tshirt: {\"name\":\"tshirt\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/male/tshirt.json\",\"material\":{\"uuid\":\"E948086D-B292-43E1-98F8-E0416C1F6FCD\",\"_id\":\"HM_TshirtMaterial\",\"name\":\"HM_TshirtMaterial\",\"type\":\"MeshStandardMaterial\",\"side\":0,\"shading\":2,\"opacity\":1,\"transparent\":false,\"alphaTest\":0.5,\"premultipliedAlpha\":false,\"color\":16777215,\"map\":{\"uuid\":\"14E72F82-815B-4D8C-ABB4-6E6A4778B9A3\",\"name\":\"\",\"sourceFile\":\"https://i.imgur.com/tGzDWi4.png\",\"image\":\"https://i.imgur.com/tGzDWi4.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":5},\"emissive\":2236962,\"emissiveIntensity\":1,\"emissiveMap\":{\"uuid\":\"14E72F82-815B-4D8C-ABB4-6E6A4778B9A3\",\"name\":\"\",\"sourceFile\":\"https://i.imgur.com/tGzDWi4.png\",\"image\":\"https://i.imgur.com/tGzDWi4.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":5},\"bumpMap\":{\"uuid\":\"14E72F82-815B-4D8C-ABB4-6E6A4778B9A3\",\"name\":\"\",\"sourceFile\":\"https://i.imgur.com/tGzDWi4.png\",\"image\":\"https://i.imgur.com/tGzDWi4.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":5},\"bumpScale\":0.05,\"normalScale\":[0,0],\"skinning\":true},\"_id\":\"tshirt\",\"gender\":\"male\"},\n\ttrousers: {\"name\":\"trousers\",\"gender\":\"male\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/male/trousers.json\",\"material\":{\"uuid\":\"86106B7C-EF13-4FBA-9D86-9F16D73B7A9B\",\"name\":\"ML Mens Jean\",\"type\":\"MeshStandardMaterial\",\"fog\":true,\"lights\":true,\"blending\":1,\"side\":0,\"shading\":2,\"vertexColors\":0,\"opacity\":1,\"transparent\":false,\"blendSrc\":204,\"blendDst\":205,\"blendEquation\":100,\"depthFunc\":3,\"depthTest\":true,\"depthWrite\":true,\"clipShadows\":false,\"colorWrite\":true,\"polygonOffset\":false,\"polygonOffsetFactor\":0,\"polygonOffsetUnits\":0,\"alphaTest\":0.5,\"premultipliedAlpha\":false,\"overdraw\":0,\"visible\":true,\"color\":16777215,\"roughness\":0.5,\"metalness\":0.5,\"map\":{\"uuid\":\"29F5595F-6C17-4900-A468-B08980DF91D9\",\"name\":\"8LrZxW4.png\",\"sourceFile\":\"https://i.imgur.com/3FQ6fvH.png\",\"image\":\"https://i.imgur.com/3FQ6fvH.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":1,\"_id\":\"5d2c0a27a1ae0bb14576d82b\"},\"lightMapIntensity\":1,\"aoMapIntensity\":1,\"emissive\":10143951,\"emissiveIntensity\":1,\"emissiveMap\":{\"uuid\":\"29F5595F-6C17-4900-A468-B08980DF91D9\",\"name\":\"8LrZxW4.png\",\"sourceFile\":\"https://i.imgur.com/3FQ6fvH.png\",\"image\":\"https://i.imgur.com/3FQ6fvH.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":1,\"_id\":\"5d2c0a27a1ae0bb14576d82b\"},\"bumpMap\":{\"uuid\":\"29F5595F-6C17-4900-A468-B08980DF91D9\",\"name\":\"8LrZxW4.png\",\"sourceFile\":\"https://i.imgur.com/3FQ6fvH.png\",\"image\":\"https://i.imgur.com/3FQ6fvH.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":1,\"_id\":\"5d2c0a27a1ae0bb14576d82b\"},\"bumpScale\":0.05,\"normalScale\":[0.1,0.1],\"displacementScale\":0,\"displacementBias\":0,\"envMapIntensity\":1,\"refractionRatio\":0.98,\"wireframe\":false,\"wireframeLinewidth\":1,\"wireframeLinecap\":\"round\",\"wireframeLinejoin\":\"round\",\"skinning\":true,\"morphTargets\":false,\"morphNormals\":false},\"_id\":\"trousers\"},\n\tshoes: {\"name\":\"shoes\",\"gender\":\"male\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/male/shoes.json\",\"material\":{\"type\":\"MeshStandardMaterial\",\"name\":\"HM_SneakersMaterial\",\"color\":16777215,\"side\":0,\"opacity\":1,\"shading\":2,\"emissive\":0,\"skinning\":true,\"alphaTest\":0.5,\"transparent\":false,\"roughness\":0.5,\"metalness\":0.5},\"_id\":\"shoes\"},\n};\n\n//\tGeometries.\n\nvar body = {\"_id\":\"body\",\"metadata\":{\"materials\":1,\"generator\":\"io_three\",\"vertices\":2747,\"faces\":5472,\"bones\":31,\"version\":3,\"type\":\"Geometry\",\"uvs\":1},\"materials\":[{\"opacity\":1,\"DbgIndex\":0,\"visible\":true,\"depthTest\":true,\"depthWrite\":true,\"wireframe\":false,\"shading\":\"standard\",\"transparent\":false,\"DbgColor\":15658734,\"colorDiffuse\":[1,1,1],\"colorEmissive\":[0,0,0],\"colorSpecular\":[0.5,0.5,0.5],\"DbgName\":\"HM_SkinMaterial\",\"blending\":\"NormalBlending\"}],\"bones\":[{\"name\":\"Hips\",\"rotq\":[0,0,0,1],\"pos\":[-0.000027,18.2131,0.000197],\"parent\":-1},{\"name\":\"LHipJoint\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},{\"name\":\"LeftUpLeg\",\"rotq\":[0,0,0,1],\"pos\":[1.54938,-2.41555,0.04113],\"parent\":1},{\"name\":\"LeftLeg\",\"rotq\":[0,0,0,1],\"pos\":[-0.019988,-7.21534,-0.208633],\"parent\":2},{\"name\":\"LeftFoot\",\"rotq\":[0,0,0,1],\"pos\":[0.320012,-7.29465,-0.471353],\"parent\":3},{\"name\":\"LeftToeBase\",\"rotq\":[0,0,0,1],\"pos\":[0.198471,-0.54529,2.28466],\"parent\":4},{\"name\":\"RHipJoint\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},{\"name\":\"RightUpLeg\",\"rotq\":[0,0,0,1],\"pos\":[-1.43938,-2.41556,0.041129],\"parent\":6},{\"name\":\"RightLeg\",\"rotq\":[0,0,0,1],\"pos\":[-0.08999,-7.21534,-0.208642],\"parent\":7},{\"name\":\"RightFoot\",\"rotq\":[0,0,0,1],\"pos\":[-0.31999,-7.29467,-0.471362],\"parent\":8},{\"name\":\"RightToeBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.305358,-0.83898,2.28801],\"parent\":9},{\"name\":\"LowerBack\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},{\"name\":\"Spine\",\"rotq\":[0,0,0,1],\"pos\":[-0.04381,1.99522,-0.197985],\"parent\":11},{\"name\":\"Spine1\",\"rotq\":[0,0,0,1],\"pos\":[-0.01959,2.01295,-0.04372],\"parent\":12},{\"name\":\"Neck\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":13},{\"name\":\"Neck1\",\"rotq\":[0,0,0,1],\"pos\":[0.063054,2.1058,-0.51192],\"parent\":14},{\"name\":\"Head\",\"rotq\":[0,0,0,1],\"pos\":[-0.023034,1.43701,0.497281],\"parent\":15},{\"name\":\"LeftShoulder\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":14},{\"name\":\"LeftArm\",\"rotq\":[0,0,0,1],\"pos\":[2.59288,1.2264,-0.487197],\"parent\":17},{\"name\":\"LeftForeArm\",\"rotq\":[0,0,0,1],\"pos\":[4.14553,-0.064466,0.257386],\"parent\":18},{\"name\":\"LeftHand\",\"rotq\":[0,0,0,1],\"pos\":[3.69802,0.065802,1.73268],\"parent\":19},{\"name\":\"LeftFingerBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.000254,0,-0.000043],\"parent\":20},{\"name\":\"LeftHandIndex1\",\"rotq\":[0,0,0,1],\"pos\":[0.559672,0,0.260979],\"parent\":21},{\"name\":\"LThumb\",\"rotq\":[0,0,0,1],\"pos\":[-0.000254,0,-0.000043],\"parent\":20},{\"name\":\"RightShoulder\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":14},{\"name\":\"RightArm\",\"rotq\":[0,0,0,1],\"pos\":[-2.46562,1.22638,-0.487065],\"parent\":24},{\"name\":\"RightForeArm\",\"rotq\":[0,0,0,1],\"pos\":[-4.14558,-0.064367,0.259234],\"parent\":25},{\"name\":\"RightHand\",\"rotq\":[0,0,0,1],\"pos\":[-3.69873,0.066645,1.72989],\"parent\":26},{\"name\":\"RightFingerBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.000058,0,0.000157],\"parent\":27},{\"name\":\"RightHandIndex1\",\"rotq\":[0,0,0,1],\"pos\":[-0.529147,0,0.246746],\"parent\":28},{\"name\":\"RThumb\",\"rotq\":[0,0,0,1],\"pos\":[-0.000058,0,0.000157],\"parent\":27}],\"faces\":[10,0,2,8,0,0,1,2,10,21,26,23,0,3,4,5,10,23,26,22,0,5,4,6,10,10,12,7,0,7,8,9,10,7,12,11,0,9,8,10,10,7,4,10,0,9,11,7,10,10,4,5,0,7,11,12,10,4,7,15,0,11,9,13,10,15,7,13,0,13,9,14,10,5,9,22,0,12,15,6,10,22,9,24,0,6,15,16,10,23,22,25,0,5,6,17,10,25,22,24,0,17,6,16,10,7,11,13,0,9,10,14,10,13,11,14,0,14,10,18,10,17,11,18,0,19,10,20,10,18,11,12,0,20,10,8,10,15,8,4,0,13,2,11,10,4,8,6,0,11,2,21,10,4,6,5,0,11,21,12,10,5,6,9,0,12,21,15,10,10,5,26,0,7,12,4,10,26,5,22,0,4,12,6,10,23,19,21,0,5,22,3,10,20,12,26,0,23,8,4,10,26,12,10,0,4,8,7,10,27,18,20,0,24,20,23,10,20,18,12,0,23,20,8,10,11,17,14,0,10,19,18,10,14,17,16,0,18,19,25,10,36,33,38,0,26,27,28,10,38,33,37,0,28,27,29,10,31,30,36,0,30,31,26,10,36,30,33,0,26,31,27,10,30,41,33,0,31,32,27,10,33,41,39,0,27,32,33,10,54,35,52,0,34,35,36,10,52,35,31,0,36,35,30,10,49,54,50,0,37,34,38,10,50,54,55,0,38,34,39,10,54,52,55,0,34,36,39,10,55,52,53,0,39,36,40,10,28,39,41,0,41,33,32,10,33,39,37,0,27,33,29,10,37,39,40,0,29,33,42,10,43,44,37,0,43,44,29,10,37,44,38,0,29,44,28,10,32,34,30,0,45,46,31,10,30,34,41,0,31,46,32,10,35,32,31,0,35,45,30,10,31,32,30,0,30,45,31,10,36,56,31,0,26,47,30,10,31,56,52,0,30,47,36,10,36,38,56,0,26,28,47,10,56,38,51,0,47,28,48,10,38,44,51,0,28,44,48,10,51,44,57,0,48,44,49,10,42,43,40,0,50,43,42,10,40,43,37,0,42,43,29,10,46,45,43,0,51,52,43,10,43,45,44,0,43,52,44,10,29,6,2,0,53,21,1,10,2,6,8,0,1,21,2,10,25,24,50,0,17,16,38,10,50,24,49,0,38,16,37,10,9,6,3,0,15,21,54,10,3,6,29,0,54,21,53,10,3,49,9,0,54,37,15,10,9,49,24,0,15,37,16,10,0,34,2,0,0,46,1,10,29,2,32,0,53,1,45,10,32,2,34,0,45,1,46,10,0,28,34,0,0,41,46,10,34,28,41,0,46,41,32,10,29,32,3,0,53,45,54,10,3,32,35,0,54,45,35,10,54,49,35,0,34,37,35,10,35,49,3,0,35,37,54,10,77,83,82,0,55,56,57,10,72,73,69,0,58,59,60,10,69,73,59,0,60,59,61,10,77,82,75,0,55,57,62,10,75,82,78,0,62,57,63,10,70,69,83,0,64,60,56,10,83,69,82,0,56,60,57,10,80,83,76,0,65,56,66,10,76,83,77,0,66,56,55,10,62,64,63,0,67,68,69,10,63,64,66,0,69,68,70,10,61,62,65,0,71,67,72,10,65,62,63,0,72,67,69,10,61,65,81,0,71,72,73,10,81,65,80,0,73,72,65,10,63,66,71,0,69,70,74,10,71,66,68,0,74,70,75,10,67,73,74,0,76,59,77,10,74,73,72,0,77,59,58,10,63,71,65,0,69,74,72,10,65,71,70,0,72,74,64,10,69,70,72,0,60,64,58,10,72,70,71,0,58,64,74,10,74,72,68,0,77,58,75,10,68,72,71,0,75,58,74,10,83,80,70,0,56,65,64,10,70,80,65,0,64,65,72,10,60,61,79,0,78,71,79,10,79,61,81,0,79,71,73,10,69,59,82,0,60,61,57,10,82,59,78,0,57,61,63,10,106,94,107,0,80,81,82,10,107,94,95,0,82,81,83,10,87,88,89,0,84,85,86,10,89,88,91,0,86,85,87,10,86,90,87,0,88,89,84,10,87,90,88,0,84,89,85,10,89,85,87,0,86,90,84,10,87,85,84,0,84,90,91,10,86,105,90,0,88,92,89,10,90,105,104,0,89,92,93,10,88,96,91,0,85,94,87,10,91,96,93,0,87,94,95,10,88,90,96,0,85,89,94,10,96,90,95,0,94,89,83,10,94,97,95,0,81,96,83,10,95,97,96,0,83,96,94,10,105,102,104,0,92,97,93,10,104,102,101,0,93,97,98,10,98,93,97,0,99,95,96,10,97,93,96,0,96,95,94,10,107,95,104,0,82,83,93,10,104,95,90,0,93,83,89,10,85,58,64,0,90,100,68,10,60,84,61,0,78,91,71,10,61,84,62,0,71,91,67,10,84,85,62,0,91,90,67,10,62,85,64,0,67,90,68,10,102,105,100,0,97,92,101,10,100,105,79,0,101,92,79,10,87,84,86,0,84,91,88,10,86,84,60,0,88,91,78,10,105,86,79,0,92,88,79,10,79,86,60,0,79,88,78,10,1269,1270,1234,0,102,103,104,10,1234,1270,1296,0,104,103,105,10,1371,1367,1376,0,106,107,108,10,1234,1296,1344,0,104,105,109,10,1344,1296,1346,0,109,105,110,10,1371,1376,1372,0,106,108,111,10,1372,1376,1368,0,111,108,112,10,1175,1174,381,0,113,114,115,10,381,1174,216,0,115,114,116,10,1377,430,451,0,117,118,119,10,1377,451,218,0,117,119,120,10,218,451,453,0,120,119,121,10,430,1377,219,0,118,117,122,10,1175,381,220,0,123,124,125,10,220,381,435,0,125,124,126,10,479,488,797,0,127,128,129,10,797,488,588,0,129,128,130,10,376,742,372,0,131,132,133,10,372,742,592,0,133,132,134,10,512,511,480,0,135,136,137,10,511,485,480,0,136,138,137,10,379,486,515,0,139,140,141,10,515,486,774,0,141,140,142,10,776,487,516,0,143,144,145,10,377,518,378,0,146,147,148,10,378,518,512,0,148,147,135,10,512,480,378,0,135,137,148,10,510,508,486,0,149,150,140,10,485,511,359,0,138,136,151,10,359,511,598,0,151,136,152,10,486,508,774,0,140,150,142,10,742,376,598,0,132,131,152,10,598,376,359,0,152,131,151,10,508,510,797,0,150,149,153,10,797,510,479,0,153,149,154,10,377,487,518,0,146,144,147,10,518,487,776,0,147,144,143,10,362,516,371,0,155,156,157,10,371,516,487,0,157,156,158,10,362,360,516,0,155,159,156,10,369,510,368,0,160,161,162,10,510,369,479,0,161,160,163,10,510,486,380,0,161,164,165,10,360,379,516,0,159,166,156,10,368,510,380,0,162,161,165,10,1077,1099,222,0,167,168,169,10,1099,227,222,0,168,170,169,10,484,483,1070,0,171,172,173,10,266,484,302,0,174,175,176,10,302,484,1068,0,176,175,177,10,228,1097,1118,0,178,179,180,10,1118,1097,1076,0,180,179,181,10,225,224,1104,0,182,183,184,10,1104,224,1103,0,184,183,185,10,1066,225,1104,0,186,182,184,10,224,482,1111,0,183,187,188,10,1111,1103,224,0,188,185,183,10,1110,1070,226,0,189,173,190,10,226,1067,1110,0,190,191,189,10,1110,1067,1104,0,189,191,192,10,1068,484,1070,0,193,171,173,10,799,288,1068,0,194,195,177,10,1068,288,302,0,177,195,176,10,483,226,1070,0,172,190,173,10,223,1075,228,0,196,197,178,10,228,1075,1097,0,178,197,179,10,1098,1075,1117,0,198,197,199,10,1117,1075,223,0,199,197,196,10,1073,1111,227,0,200,188,170,10,227,1099,1073,0,170,168,200,10,1077,222,1118,0,167,169,180,10,223,229,1117,0,201,202,203,10,1117,229,231,0,203,202,204,10,267,1067,292,0,205,206,207,10,292,1067,226,0,207,206,208,10,278,225,267,0,209,210,205,10,267,225,1066,0,205,210,211,10,267,1066,1067,0,205,211,206,10,1178,1170,1233,0,212,213,214,10,1233,1170,1347,0,214,213,215,10,1178,1171,1170,0,216,217,218,10,1177,424,1227,0,219,220,221,10,424,1226,1227,0,220,222,221,10,1178,1233,221,0,212,214,223,10,221,1233,1252,0,223,214,224,10,1254,1180,1252,0,225,226,224,10,1252,1180,221,0,224,226,223,10,1179,1255,424,0,227,228,220,10,424,1255,1226,0,220,228,222,10,1180,476,221,0,229,230,231,10,214,1171,1178,0,232,233,234,10,422,411,424,0,235,236,237,10,424,411,1179,0,237,236,238,10,476,1180,412,0,230,229,239,10,412,1180,1179,0,239,229,238,10,411,412,1179,0,236,239,238,10,214,1178,221,0,232,234,231,10,1234,1175,1269,0,104,240,102,10,1269,1175,220,0,102,240,241,10,1296,1270,1303,0,105,103,242,10,1376,1377,1375,0,108,243,244,10,1375,1377,218,0,244,243,245,10,1375,218,1373,0,244,245,246,10,1373,218,1374,0,246,245,247,10,1304,1303,1275,0,248,242,249,10,1275,1303,1272,0,249,242,250,10,1303,1304,1348,0,242,248,251,10,1348,1346,1303,0,251,110,242,10,1303,1346,1296,0,242,110,105,10,220,1367,1269,0,241,107,102,10,1303,1271,1272,0,242,252,250,10,1234,1344,1175,0,104,109,240,10,1175,1344,1174,0,240,109,253,10,111,116,108,0,254,255,256,10,108,116,115,0,256,255,257,10,112,118,122,0,258,259,260,10,122,118,109,0,260,259,261,10,110,108,115,0,262,256,257,10,160,152,159,0,263,264,265,10,159,152,153,0,265,264,266,10,188,185,187,0,267,268,269,10,187,185,183,0,269,268,270,10,141,128,138,0,271,272,273,10,138,128,124,0,273,272,274,10,141,200,139,0,271,275,276,10,139,200,140,0,276,275,277,10,466,192,464,0,278,279,280,10,464,192,193,0,280,279,281,10,136,310,137,0,282,283,284,10,190,194,135,0,285,286,287,10,158,178,179,0,288,289,290,10,179,178,176,0,290,289,291,10,173,174,169,0,292,293,294,10,169,174,172,0,294,293,295,10,168,167,194,0,296,297,286,10,194,167,192,0,286,297,279,10,178,153,145,0,289,266,298,10,145,151,146,0,298,299,300,10,194,130,168,0,286,301,296,10,168,130,171,0,296,301,302,10,185,184,156,0,268,303,304,10,156,184,177,0,304,303,305,10,183,127,142,0,270,306,307,10,127,154,142,0,306,308,307,10,156,191,185,0,304,309,268,10,185,191,183,0,268,309,270,10,175,198,174,0,310,311,293,10,174,198,197,0,293,311,312,10,148,157,149,0,313,314,315,10,149,157,160,0,315,314,263,10,150,149,159,0,316,315,265,10,159,149,160,0,265,315,263,10,192,167,193,0,279,297,281,10,193,167,195,0,281,297,317,10,164,182,163,0,318,319,320,10,163,182,147,0,320,319,321,10,148,147,157,0,313,321,314,10,157,147,182,0,314,321,319,10,159,158,150,0,265,288,316,10,150,158,186,0,316,288,322,10,196,146,164,0,323,300,318,10,164,146,182,0,318,300,319,10,126,134,131,0,324,325,326,10,131,134,190,0,326,325,285,10,152,151,145,0,264,299,298,10,125,171,129,0,327,302,328,10,129,171,130,0,328,302,301,10,125,129,156,0,327,328,304,10,156,129,191,0,304,328,309,10,178,145,176,0,289,298,291,10,188,189,186,0,267,329,322,10,182,146,157,0,319,300,314,10,157,146,151,0,314,300,299,10,205,134,155,0,330,325,331,10,155,134,126,0,331,325,324,10,141,138,200,0,271,273,275,10,200,138,199,0,275,273,332,10,154,202,142,0,308,333,307,10,155,154,205,0,331,308,330,10,205,154,127,0,330,308,306,10,181,196,162,0,334,323,335,10,162,196,164,0,335,323,318,10,186,184,188,0,322,303,267,10,188,184,185,0,267,303,268,10,205,127,191,0,330,306,309,10,191,127,183,0,309,306,270,10,179,176,175,0,290,291,310,10,175,176,198,0,310,291,311,10,174,197,172,0,293,312,295,10,172,197,170,0,295,312,336,10,197,145,170,0,312,298,336,10,165,161,168,0,337,338,296,10,168,161,167,0,296,338,297,10,157,151,160,0,314,299,263,10,160,151,152,0,263,299,264,10,133,204,137,0,339,340,284,10,181,180,145,0,334,341,298,10,180,181,166,0,341,334,342,10,166,181,162,0,342,334,335,10,166,172,180,0,342,295,341,10,180,172,170,0,341,295,336,10,170,145,180,0,336,298,341,10,176,145,198,0,291,298,311,10,191,129,205,0,309,328,330,10,205,129,134,0,330,328,325,10,200,126,140,0,275,324,277,10,140,126,131,0,277,324,326,10,134,129,190,0,325,328,285,10,190,129,130,0,285,328,301,10,126,200,155,0,324,275,331,10,155,200,199,0,331,275,332,10,128,132,206,0,272,343,344,10,124,128,206,0,274,272,344,10,159,153,158,0,265,266,288,10,158,153,178,0,288,266,289,10,184,179,177,0,303,290,305,10,177,179,175,0,305,290,310,10,184,186,179,0,303,322,290,10,179,186,158,0,290,322,288,10,203,209,312,0,345,346,347,10,177,175,173,0,305,310,292,10,173,175,174,0,292,310,293,10,166,162,165,0,342,335,337,10,165,162,161,0,337,335,338,10,168,171,165,0,296,302,337,10,165,171,169,0,337,302,294,10,169,171,173,0,294,302,292,10,173,171,125,0,292,302,327,10,195,167,163,0,317,297,320,10,163,167,161,0,320,297,338,10,169,172,165,0,294,295,337,10,165,172,166,0,337,295,342,10,162,164,161,0,335,318,338,10,161,164,163,0,338,318,320,10,173,125,177,0,292,327,305,10,177,125,156,0,305,327,304,10,181,145,196,0,334,298,323,10,110,113,492,0,348,349,350,10,325,326,133,0,351,352,339,10,133,326,322,0,339,352,353,10,115,116,210,0,257,255,354,10,210,116,117,0,354,255,355,10,114,119,116,0,356,357,255,10,116,119,117,0,255,357,355,10,119,114,120,0,357,356,358,10,120,114,118,0,358,356,259,10,117,119,210,0,355,357,354,10,210,119,289,0,354,357,359,10,113,110,123,0,360,262,361,10,110,115,123,0,262,257,361,10,115,210,123,0,257,354,361,10,211,150,189,0,362,316,329,10,189,150,186,0,329,316,322,10,204,133,322,0,340,339,353,10,213,204,322,0,363,340,353,10,208,204,213,0,364,340,363,10,1150,217,1133,0,365,366,367,10,1133,217,216,0,367,366,116,10,358,441,372,0,368,369,370,10,394,446,443,0,371,372,373,10,443,446,448,0,373,372,374,10,389,398,396,0,375,376,377,10,364,148,387,0,378,313,379,10,387,148,149,0,379,313,315,10,252,254,265,0,380,381,382,10,265,254,248,0,382,381,383,10,395,448,396,0,384,374,377,10,396,448,447,0,377,374,385,10,444,427,388,0,386,387,388,10,388,427,445,0,388,387,389,10,427,444,428,0,387,386,390,10,428,444,442,0,390,386,391,10,442,443,395,0,391,373,384,10,395,443,448,0,384,373,374,10,396,447,389,0,377,385,375,10,442,444,443,0,391,386,373,10,428,358,387,0,390,368,379,10,387,358,364,0,379,368,378,10,358,428,441,0,368,390,369,10,441,428,442,0,369,390,391,10,395,397,442,0,384,392,391,10,442,397,441,0,391,392,369,10,419,215,214,0,393,394,232,10,215,217,1120,0,394,366,395,10,1120,217,1150,0,395,366,365,10,216,1174,1181,0,116,114,396,10,355,284,232,0,397,398,399,10,136,203,310,0,282,345,283,10,249,253,255,0,400,401,402,10,367,370,374,0,403,404,405,10,258,351,352,0,406,407,408,10,272,259,275,0,409,410,411,10,275,259,274,0,411,410,412,10,353,352,354,0,413,408,414,10,354,352,351,0,414,408,407,10,285,281,282,0,415,416,417,10,271,269,313,0,418,419,420,10,313,269,234,0,420,419,421,10,137,310,327,0,284,283,422,10,231,229,258,0,204,202,406,10,258,229,351,0,406,202,407,10,283,284,282,0,423,398,417,10,282,284,285,0,417,398,415,10,255,253,254,0,402,401,381,10,354,351,232,0,414,407,399,10,232,351,229,0,399,407,202,10,1111,482,507,0,188,187,424,10,271,313,270,0,418,420,425,10,271,270,276,0,418,425,426,10,276,270,275,0,426,425,411,10,469,374,369,0,427,405,160,10,356,363,366,0,428,429,430,10,366,363,365,0,430,429,431,10,403,457,461,0,432,433,434,10,358,365,364,0,368,431,378,10,377,361,371,0,435,436,157,10,370,367,488,0,404,403,437,10,465,466,464,0,438,278,280,10,467,135,194,0,439,287,286,10,473,470,474,0,440,441,442,10,474,470,471,0,442,441,443,10,291,352,287,0,444,408,445,10,287,352,259,0,445,408,410,10,325,270,313,0,351,425,420,10,352,291,258,0,408,444,406,10,356,147,363,0,428,321,429,10,461,458,460,0,434,446,447,10,460,458,459,0,447,446,448,10,361,462,457,0,436,449,433,10,457,462,461,0,433,449,434,10,415,435,454,0,450,126,451,10,454,435,416,0,451,126,452,10,455,404,454,0,453,454,455,10,454,404,390,0,455,454,456,10,410,411,421,0,457,236,458,10,421,411,422,0,458,236,235,10,411,410,412,0,236,457,239,10,412,410,407,0,239,457,459,10,412,407,476,0,239,459,230,10,476,407,413,0,230,459,460,10,423,418,477,0,461,462,463,10,390,405,406,0,464,465,466,10,404,455,463,0,454,453,467,10,259,352,274,0,410,408,412,10,274,352,353,0,412,408,413,10,396,359,376,0,377,468,469,10,375,392,380,0,470,471,165,10,380,392,471,0,165,471,443,10,361,377,462,0,436,435,449,10,465,464,308,0,438,280,472,10,401,402,400,0,473,474,475,10,400,402,399,0,475,474,476,10,463,475,460,0,467,477,447,10,460,475,461,0,447,477,434,10,461,475,403,0,434,477,432,10,463,460,404,0,467,447,454,10,404,460,459,0,454,447,448,10,459,458,405,0,448,446,478,10,405,458,400,0,478,446,479,10,407,410,409,0,459,457,480,10,421,420,410,0,458,481,457,10,410,420,409,0,457,481,480,10,305,473,456,0,482,440,483,10,456,473,474,0,483,440,442,10,345,307,317,0,484,485,486,10,317,307,314,0,486,485,487,10,334,324,333,0,488,489,490,10,472,391,328,0,491,492,493,10,328,391,314,0,493,492,487,10,283,274,353,0,423,412,413,10,259,272,287,0,410,409,445,10,287,272,263,0,445,409,494,10,308,469,328,0,472,427,493,10,269,271,335,0,419,418,495,10,478,469,369,0,496,427,160,10,346,347,310,0,497,498,283,10,310,347,327,0,283,498,422,10,402,449,399,0,474,499,476,10,447,448,429,0,385,374,500,10,429,448,446,0,500,374,372,10,252,264,255,0,380,501,402,10,255,254,252,0,402,381,380,10,340,338,341,0,502,503,504,10,341,338,299,0,504,503,505,10,299,338,298,0,505,503,506,10,298,338,337,0,506,503,507,10,298,337,344,0,506,507,508,10,344,337,343,0,508,507,509,10,344,241,298,0,508,510,506,10,298,241,293,0,506,510,511,10,279,267,295,0,512,205,513,10,295,267,292,0,513,205,207,10,276,281,271,0,426,416,418,10,271,281,335,0,418,416,495,10,370,369,374,0,404,160,405,10,294,296,299,0,514,515,505,10,299,296,341,0,505,515,504,10,470,368,471,0,441,162,443,10,471,368,380,0,443,162,165,10,273,270,325,0,516,425,351,10,220,435,219,0,125,126,122,10,219,435,415,0,122,126,450,10,231,288,1117,0,204,195,203,10,1117,288,799,0,203,195,194,10,297,483,336,0,517,518,519,10,336,483,484,0,519,518,175,10,483,297,226,0,518,517,208,10,226,297,292,0,208,517,207,10,358,481,365,0,368,520,431,10,426,430,415,0,521,118,450,10,415,430,219,0,450,118,122,10,419,439,215,0,393,522,394,10,215,439,217,0,394,522,366,10,474,471,392,0,442,443,471,10,371,487,377,0,157,158,435,10,358,372,481,0,368,370,520,10,354,232,284,0,414,399,398,10,438,433,439,0,523,524,522,10,439,433,434,0,522,524,525,10,477,413,409,0,463,460,480,10,409,413,407,0,480,460,459,10,439,419,438,0,522,393,523,10,438,419,418,0,523,393,462,10,290,264,288,0,526,501,195,10,288,264,302,0,195,501,176,10,1177,422,424,0,527,235,237,10,388,394,444,0,388,371,386,10,444,394,443,0,386,371,373,10,273,272,270,0,516,409,425,10,270,272,275,0,425,409,411,10,272,273,263,0,409,516,494,10,263,273,262,0,494,516,528,10,353,354,283,0,413,414,423,10,283,354,284,0,423,414,398,10,254,253,248,0,381,401,383,10,248,253,247,0,383,401,529,10,240,235,237,0,530,531,532,10,237,235,261,0,532,531,533,10,222,230,355,0,534,535,397,10,260,261,257,0,536,533,537,10,257,261,235,0,537,533,531,10,228,232,223,0,538,399,201,10,223,232,229,0,201,399,202,10,285,284,230,0,415,398,535,10,230,284,355,0,535,398,397,10,244,293,245,0,539,511,540,10,245,293,241,0,540,511,510,10,338,247,337,0,503,529,507,10,337,247,251,0,507,529,541,10,266,265,336,0,174,382,519,10,336,265,339,0,519,382,542,10,249,257,250,0,400,537,543,10,250,257,235,0,543,537,531,10,319,301,318,0,544,545,546,10,318,301,236,0,546,545,547,10,262,273,323,0,528,516,548,10,306,301,316,0,549,545,550,10,316,301,315,0,550,545,551,10,389,447,431,0,375,385,552,10,431,447,429,0,552,385,500,10,451,452,453,0,119,553,121,10,451,406,452,0,119,466,553,10,1169,1171,214,0,554,233,232,10,406,450,452,0,466,555,553,10,1133,216,1181,0,367,116,396,10,334,333,323,0,488,490,548,10,323,333,262,0,548,490,528,10,264,290,255,0,501,526,402,10,255,290,256,0,402,526,556,10,307,308,314,0,485,472,487,10,314,308,328,0,487,472,493,10,324,311,333,0,489,557,490,10,333,311,320,0,490,557,558,10,295,292,300,0,513,207,559,10,300,292,297,0,559,207,517,10,294,299,293,0,514,505,511,10,293,299,298,0,511,505,506,10,260,257,256,0,536,537,556,10,255,256,249,0,402,556,400,10,264,252,302,0,501,380,176,10,265,266,252,0,382,174,380,10,252,266,302,0,380,174,176,10,338,340,247,0,503,502,529,10,247,340,248,0,529,502,383,10,293,244,294,0,511,539,514,10,294,244,246,0,514,539,560,10,246,244,233,0,560,539,561,10,296,295,341,0,515,513,504,10,341,295,300,0,504,513,559,10,193,367,374,0,281,403,405,10,241,344,242,0,510,508,562,10,242,344,342,0,562,508,563,10,464,193,374,0,280,281,405,10,300,297,339,0,559,517,542,10,339,297,336,0,542,517,519,10,341,300,340,0,504,559,502,10,340,300,339,0,502,559,542,10,249,256,257,0,400,556,537,10,245,241,243,0,540,510,564,10,243,241,242,0,564,510,562,10,401,480,485,0,473,565,566,10,432,450,449,0,567,555,499,10,449,450,399,0,499,555,476,10,216,217,434,0,116,366,525,10,434,217,439,0,525,366,522,10,413,477,419,0,460,463,393,10,419,477,418,0,393,463,462,10,373,458,462,0,568,446,449,10,462,458,461,0,449,446,434,10,397,395,396,0,392,384,377,10,404,459,390,0,454,448,456,10,390,459,405,0,456,448,478,10,490,455,436,0,569,453,570,10,434,417,216,0,525,571,116,10,216,417,381,0,116,571,115,10,485,359,398,0,566,468,376,10,398,359,396,0,376,468,377,10,389,449,398,0,375,499,376,10,398,449,402,0,376,499,474,10,431,432,389,0,552,567,375,10,389,432,449,0,375,567,499,10,408,436,414,0,572,570,573,10,414,436,416,0,573,570,574,10,468,309,348,0,575,576,577,10,324,350,311,0,489,578,557,10,311,350,317,0,557,578,486,10,349,348,346,0,579,577,497,10,346,348,309,0,497,577,576,10,309,468,345,0,576,575,484,10,345,468,307,0,484,575,485,10,269,335,280,0,419,495,580,10,348,467,468,0,577,439,575,10,303,238,306,0,581,582,549,10,240,237,321,0,530,532,583,10,283,282,274,0,423,417,412,10,242,342,318,0,562,563,546,10,318,342,319,0,546,563,544,10,237,315,321,0,532,551,583,10,342,240,319,0,563,530,544,10,319,240,321,0,544,530,583,10,470,473,478,0,441,440,496,10,478,473,472,0,496,440,491,10,308,464,469,0,472,280,427,10,464,374,469,0,280,405,427,10,369,368,478,0,160,162,496,10,478,368,470,0,496,162,441,10,473,305,472,0,440,482,491,10,472,305,391,0,491,482,492,10,306,238,301,0,549,582,545,10,301,238,236,0,545,582,547,10,478,472,469,0,496,491,427,10,469,472,328,0,427,491,493,10,372,397,376,0,370,392,469,10,376,397,396,0,469,392,377,10,244,245,233,0,539,540,561,10,343,250,342,0,509,543,563,10,250,235,342,0,543,531,563,10,342,235,240,0,563,531,530,10,282,276,274,0,417,426,412,10,274,276,275,0,412,426,411,10,281,276,282,0,416,426,417,10,406,399,450,0,466,476,555,10,398,402,485,0,376,474,566,10,485,402,401,0,566,474,473,10,406,430,426,0,466,118,521,10,451,430,406,0,119,118,466,10,391,306,314,0,492,549,487,10,314,306,316,0,487,549,550,10,311,317,315,0,557,486,551,10,315,317,316,0,551,486,550,10,303,304,330,0,581,584,585,10,365,481,366,0,431,520,430,10,366,481,488,0,430,520,437,10,397,372,441,0,392,370,369,10,488,367,366,0,437,403,430,10,301,319,315,0,545,544,551,10,315,319,321,0,551,544,583,10,462,377,373,0,449,435,568,10,379,380,486,0,166,165,164,10,222,289,230,0,534,359,535,10,311,315,320,0,557,551,558,10,436,455,416,0,570,453,574,10,416,455,454,0,574,453,455,10,423,440,418,0,461,586,462,10,418,440,438,0,462,586,523,10,423,477,425,0,461,463,587,10,425,477,409,0,587,463,480,10,440,437,438,0,586,588,523,10,438,437,433,0,523,588,524,10,433,414,434,0,524,573,525,10,434,414,417,0,525,573,571,10,437,408,433,0,588,572,524,10,433,408,414,0,524,572,573,10,425,409,420,0,587,480,481,10,253,251,247,0,401,541,529,10,253,249,251,0,401,400,541,10,251,249,250,0,541,400,543,10,265,248,339,0,382,383,542,10,339,248,340,0,542,383,502,10,337,251,343,0,507,541,509,10,343,251,250,0,509,541,543,10,294,246,296,0,514,560,515,10,296,246,268,0,515,560,589,10,295,296,279,0,513,515,512,10,279,296,268,0,512,515,589,10,344,343,342,0,508,509,563,10,266,336,484,0,174,519,175,10,355,232,228,0,397,399,538,10,507,227,1111,0,424,170,188,10,333,320,262,0,490,558,528,10,236,329,318,0,547,590,546,10,318,329,332,0,546,590,591,10,331,329,238,0,592,590,582,10,238,329,236,0,582,590,547,10,310,312,346,0,283,347,497,10,346,312,349,0,497,347,579,10,465,468,466,0,438,575,278,10,137,327,334,0,284,422,488,10,334,327,324,0,488,422,489,10,306,391,303,0,549,492,581,10,303,391,305,0,581,492,482,10,393,239,304,0,593,594,584,10,304,239,330,0,584,594,585,10,304,456,393,0,584,483,593,10,303,330,238,0,581,585,582,10,330,331,238,0,585,592,582,10,457,403,361,0,433,432,436,10,466,468,467,0,278,575,439,10,303,305,304,0,581,482,584,10,304,305,456,0,584,482,483,10,360,357,379,0,159,595,166,10,456,474,393,0,483,442,593,10,393,474,392,0,593,442,471,10,327,347,324,0,422,498,489,10,324,347,350,0,489,498,578,10,316,317,314,0,550,486,487,10,243,242,332,0,564,562,591,10,332,242,318,0,591,562,546,10,325,313,326,0,351,420,352,10,326,313,234,0,352,420,421,10,346,309,347,0,497,576,498,10,347,309,345,0,498,576,484,10,361,362,371,0,436,155,157,10,375,380,357,0,470,165,595,10,345,317,350,0,484,486,578,10,347,345,350,0,498,484,578,10,379,357,380,0,166,595,165,10,308,307,465,0,472,485,438,10,465,307,468,0,438,485,575,10,432,452,450,0,567,553,555,10,277,224,278,0,596,597,209,10,278,224,225,0,209,597,210,10,277,482,224,0,596,598,597,10,419,214,413,0,393,232,460,10,413,214,221,0,460,232,231,10,221,476,413,0,231,230,460,10,417,414,416,0,599,600,452,10,416,435,417,0,452,126,599,10,417,435,381,0,599,126,124,10,401,400,373,0,601,479,568,10,373,400,458,0,568,479,446,10,373,378,401,0,568,602,601,10,401,378,480,0,601,602,603,10,377,378,373,0,435,602,568,10,287,263,260,0,445,494,536,10,260,263,261,0,536,494,533,10,237,261,262,0,532,533,528,10,262,261,263,0,528,533,494,10,290,258,256,0,526,406,556,10,256,258,291,0,556,406,444,10,258,290,231,0,406,526,204,10,231,290,288,0,204,526,195,10,287,260,291,0,445,536,444,10,262,320,237,0,528,558,532,10,237,320,315,0,532,558,551,10,256,291,260,0,556,444,536,10,369,370,479,0,160,404,163,10,479,370,488,0,163,404,437,10,420,421,500,0,481,458,604,10,500,421,499,0,604,458,605,10,233,245,494,0,561,540,606,10,494,245,243,0,606,540,564,10,267,279,278,0,205,512,209,10,278,279,492,0,209,512,350,10,269,280,503,0,419,580,607,10,503,280,504,0,607,580,608,10,501,384,452,0,609,610,553,10,452,384,453,0,553,610,121,10,392,502,393,0,471,611,593,10,393,502,505,0,593,611,612,10,506,382,360,0,613,614,159,10,360,382,357,0,159,614,595,10,360,362,506,0,159,155,613,10,506,362,386,0,613,155,615,10,383,497,437,0,616,617,588,10,437,497,408,0,588,617,572,10,268,491,492,0,589,618,350,10,408,497,436,0,572,617,570,10,436,497,490,0,570,617,569,10,492,279,268,0,350,512,589,10,399,405,400,0,476,465,475,10,426,415,390,0,521,450,464,10,390,415,454,0,464,450,451,10,390,406,426,0,464,466,521,10,405,399,406,0,465,476,466,10,148,364,363,0,313,378,429,10,363,364,365,0,429,378,431,10,153,152,145,0,266,264,298,10,133,323,325,0,339,548,351,10,325,323,273,0,351,548,516,10,334,323,137,0,488,548,284,10,137,323,133,0,284,548,339,10,197,198,145,0,312,311,298,10,196,145,146,0,323,298,300,10,131,348,140,0,326,577,277,10,467,194,466,0,439,286,278,10,466,194,192,0,278,286,279,10,135,348,131,0,287,577,326,10,135,467,348,0,287,439,577,10,208,137,204,0,364,284,340,10,366,367,356,0,430,403,428,10,207,136,208,0,619,282,364,10,208,136,137,0,364,282,284,10,195,163,147,0,317,320,321,10,195,147,356,0,317,321,428,10,356,367,195,0,428,403,317,10,193,195,367,0,281,317,403,10,212,445,211,0,620,389,362,10,211,445,427,0,362,389,387,10,136,207,203,0,282,619,345,10,121,289,286,0,621,359,622,10,286,289,120,0,622,359,358,10,363,147,148,0,429,321,313,10,130,194,190,0,301,286,285,10,387,211,428,0,379,362,390,10,428,211,427,0,390,362,387,10,285,121,281,0,415,621,416,10,190,135,131,0,285,287,326,10,139,140,349,0,276,277,579,10,349,140,348,0,579,277,577,10,277,210,482,0,596,623,598,10,285,230,121,0,415,535,621,10,121,230,289,0,621,535,359,10,445,212,489,0,389,620,624,10,289,119,120,0,359,357,358,10,222,227,210,0,534,625,354,10,227,507,210,0,626,627,623,10,210,289,222,0,354,359,534,10,112,280,286,0,258,580,622,10,286,280,335,0,622,580,495,10,281,121,335,0,416,621,495,10,335,121,286,0,495,621,622,10,326,495,322,0,352,628,353,10,322,495,213,0,353,628,363,10,507,482,210,0,627,598,623,10,211,387,150,0,362,379,316,10,150,387,149,0,316,379,315,10,286,120,112,0,622,358,258,10,112,120,118,0,258,358,259,10,278,492,277,0,209,350,596,10,277,492,113,0,596,350,349,10,113,123,277,0,360,361,629,10,123,210,277,0,361,354,629,10,132,349,312,0,343,579,347,10,203,312,310,0,345,347,283,10,312,209,132,0,347,346,343,10,132,209,206,0,343,346,344,10,128,139,132,0,272,276,343,10,139,128,141,0,276,272,271,10,349,132,139,0,579,343,276,10,212,188,187,0,620,267,269,10,189,188,212,0,329,267,620,10,212,187,144,0,620,269,630,10,144,187,143,0,630,269,631,10,211,189,212,0,362,329,620,10,489,212,144,0,624,620,630,10,280,112,504,0,580,258,608,10,504,112,122,0,608,258,260,10,795,712,709,0,632,633,634,10,746,747,511,0,635,636,136,10,511,747,598,0,136,636,152,10,600,752,753,0,637,638,639,10,750,748,746,0,640,641,635,10,746,748,747,0,635,641,636,10,770,585,772,0,642,643,644,10,772,585,586,0,644,643,645,10,586,585,517,0,645,643,646,10,752,600,585,0,638,637,643,10,767,520,751,0,647,648,649,10,751,520,763,0,649,648,650,10,596,771,587,0,651,652,653,10,763,520,519,0,650,648,654,10,767,751,590,0,647,649,655,10,751,753,590,0,649,639,655,10,775,599,776,0,656,657,143,10,776,599,518,0,143,657,147,10,525,524,526,0,658,659,660,10,526,524,523,0,660,659,661,10,608,607,572,0,662,663,664,10,572,607,571,0,664,663,665,10,563,573,620,0,666,667,668,10,620,573,622,0,668,667,669,10,536,545,570,0,670,671,672,10,570,545,569,0,672,671,673,10,576,571,575,0,674,665,675,10,575,571,567,0,675,665,676,10,540,602,544,0,677,678,679,10,544,602,527,0,679,678,680,10,607,622,573,0,663,669,667,10,618,617,614,0,681,682,683,10,614,617,608,0,683,682,662,10,660,674,677,0,684,685,686,10,677,674,676,0,686,685,687,10,624,642,627,0,688,689,690,10,673,668,674,0,691,692,685,10,674,668,667,0,685,692,693,10,651,655,654,0,694,695,696,10,666,670,667,0,697,698,693,10,655,672,654,0,695,699,696,10,658,659,662,0,700,701,702,10,662,659,663,0,702,701,703,10,627,626,624,0,690,704,688,10,627,639,641,0,690,705,706,10,723,711,707,0,707,708,709,10,707,711,710,0,709,708,710,10,668,671,669,0,711,712,713,10,669,671,657,0,713,712,714,10,678,681,694,0,715,716,717,10,724,708,726,0,718,719,720,10,694,697,680,0,717,721,722,10,680,697,683,0,722,721,723,10,533,553,555,0,724,725,726,10,555,553,551,0,726,725,727,10,705,706,709,0,728,729,634,10,705,709,708,0,730,731,719,10,583,657,671,0,732,714,712,10,641,644,627,0,706,733,690,10,627,644,630,0,690,733,734,10,720,708,724,0,735,719,718,10,796,794,724,0,736,737,738,10,653,669,656,0,739,713,740,10,656,669,657,0,740,713,714,10,714,717,713,0,741,742,743,10,713,717,716,0,743,742,744,10,723,707,705,0,707,709,730,10,727,722,729,0,745,746,747,10,729,722,721,0,747,746,748,10,551,552,555,0,727,749,726,10,555,552,531,0,726,749,750,10,532,605,547,0,751,752,753,10,548,530,594,0,754,755,756,10,594,530,533,0,756,755,757,10,593,594,555,0,758,759,726,10,552,619,620,0,749,760,668,10,612,617,611,0,761,682,762,10,611,617,618,0,762,682,681,10,720,723,708,0,735,707,719,10,604,606,611,0,763,764,762,10,611,606,612,0,762,764,761,10,552,613,532,0,749,765,751,10,532,613,605,0,751,765,752,10,604,610,606,0,763,766,764,10,606,610,609,0,764,766,767,10,530,549,529,0,755,768,769,10,691,694,681,0,770,717,716,10,551,623,552,0,727,771,749,10,552,623,619,0,749,771,760,10,691,695,692,0,772,773,774,10,686,700,704,0,775,776,777,10,704,700,703,0,777,776,778,10,717,714,710,0,742,741,779,10,710,714,707,0,779,741,780,10,696,697,693,0,781,721,782,10,693,697,694,0,782,721,717,10,720,724,721,0,783,738,748,10,661,652,659,0,784,785,701,10,659,652,653,0,701,785,786,10,714,715,707,0,741,787,780,10,707,715,706,0,780,787,729,10,728,719,715,0,788,789,787,10,715,719,718,0,787,789,790,10,678,679,682,0,791,792,793,10,669,653,651,0,713,739,694,10,699,693,700,0,794,795,776,10,700,693,692,0,776,795,774,10,725,711,722,0,796,708,797,10,722,711,723,0,797,708,707,10,669,666,668,0,713,798,711,10,639,627,642,0,705,690,689,10,702,696,699,0,799,800,794,10,699,696,693,0,794,800,795,10,688,685,683,0,801,802,803,10,683,685,680,0,803,802,804,10,736,542,539,0,805,806,807,10,583,671,543,0,808,809,810,10,660,661,658,0,684,784,700,10,658,661,659,0,700,784,701,10,643,642,631,0,811,689,812,10,633,647,650,0,813,814,815,10,650,647,649,0,815,814,816,10,634,625,632,0,817,818,819,10,632,625,626,0,819,818,820,10,666,669,654,0,798,713,696,10,685,687,680,0,802,821,804,10,680,687,679,0,804,821,792,10,678,680,679,0,791,804,792,10,639,643,640,0,822,823,824,10,678,682,681,0,715,825,716,10,694,680,678,0,717,722,715,10,720,721,722,0,783,748,746,10,639,642,643,0,705,689,811,10,624,626,625,0,826,820,818,10,624,625,628,0,826,818,827,10,646,641,647,0,828,829,814,10,647,641,640,0,814,829,824,10,644,641,648,0,830,829,831,10,648,641,646,0,831,829,828,10,550,542,736,0,832,806,805,10,531,593,555,0,750,758,726,10,783,784,631,0,833,834,835,10,651,652,655,0,836,785,837,10,796,724,726,0,736,738,838,10,709,712,708,0,731,839,719,10,594,593,778,0,756,840,841,10,778,593,777,0,841,840,842,10,628,631,642,0,843,812,689,10,610,604,549,0,766,763,768,10,667,676,674,0,693,687,685,10,679,687,689,0,792,821,844,10,640,649,647,0,824,816,814,10,766,765,767,0,845,846,647,10,767,765,520,0,647,846,648,10,587,586,773,0,653,645,847,10,773,586,517,0,847,645,646,10,600,599,775,0,637,657,656,10,670,654,672,0,848,696,699,10,682,684,681,0,825,849,716,10,795,796,712,0,632,736,633,10,712,796,726,0,633,736,838,10,701,702,698,0,850,799,851,10,698,702,699,0,851,799,794,10,741,539,737,0,852,807,853,10,737,539,582,0,853,807,854,10,708,712,726,0,719,839,720,10,547,605,609,0,753,752,767,10,609,605,606,0,767,752,764,10,632,626,638,0,819,820,855,10,638,626,629,0,855,820,856,10,589,759,756,0,857,858,859,10,749,753,750,0,860,639,640,10,589,756,771,0,857,859,652,10,771,756,772,0,652,859,644,10,740,519,521,0,861,654,862,10,771,772,587,0,652,644,653,10,587,772,586,0,653,644,645,10,748,744,743,0,641,863,864,10,595,597,522,0,865,866,867,10,684,792,695,0,868,869,773,10,695,792,790,0,773,869,870,10,791,792,684,0,871,869,868,10,624,628,642,0,688,843,689,10,544,538,591,0,679,872,873,10,591,538,578,0,873,872,874,10,651,654,669,0,694,696,713,10,675,671,673,0,875,809,691,10,673,671,668,0,691,809,692,10,752,585,770,0,638,643,642,10,740,739,597,0,876,877,866,10,597,739,522,0,866,877,867,10,524,522,523,0,659,867,661,10,523,522,739,0,661,867,877,10,755,752,769,0,878,638,879,10,769,752,770,0,879,638,642,10,694,691,693,0,717,770,782,10,558,557,535,0,880,881,882,10,684,682,791,0,868,793,871,10,791,682,789,0,871,793,883,10,666,654,670,0,798,696,848,10,787,788,672,0,884,885,886,10,705,707,706,0,728,780,729,10,691,692,693,0,772,774,795,10,612,606,613,0,761,764,765,10,613,606,605,0,765,764,752,10,656,657,735,0,740,714,887,10,735,657,583,0,887,714,732,10,552,620,613,0,749,668,765,10,613,620,622,0,765,668,669,10,789,682,689,0,883,793,844,10,689,682,679,0,844,793,792,10,786,676,670,0,888,687,698,10,670,676,667,0,698,687,693,10,793,709,718,0,889,634,790,10,718,709,706,0,790,634,729,10,692,703,700,0,774,778,776,10,721,731,729,0,748,890,747,10,581,542,580,0,891,892,893,10,580,542,569,0,893,892,673,10,663,659,656,0,703,701,894,10,656,659,653,0,894,701,786,10,666,667,668,0,697,693,692,10,651,653,652,0,836,786,785,10,705,708,723,0,730,719,707,10,639,640,641,0,822,824,829,10,618,537,611,0,681,895,762,10,611,537,554,0,762,895,896,10,566,621,565,0,897,898,899,10,379,515,516,0,139,141,145,10,516,515,776,0,145,141,143,10,372,592,481,0,133,134,900,10,481,592,509,0,900,134,901,10,511,512,746,0,136,135,635,10,746,512,513,0,635,135,902,10,518,599,512,0,147,657,135,10,512,599,513,0,135,657,902,10,655,785,672,0,837,903,886,10,672,785,787,0,886,903,884,10,529,549,604,0,769,768,763,10,652,661,664,0,785,784,904,10,782,649,643,0,905,816,823,10,643,649,640,0,823,816,824,10,626,627,629,0,704,690,906,10,629,627,630,0,906,690,734,10,611,554,604,0,762,896,763,10,604,554,529,0,763,896,769,10,741,557,556,0,852,881,907,10,556,557,558,0,907,881,880,10,730,725,727,0,908,909,745,10,727,725,722,0,745,909,746,10,723,720,722,0,707,735,797,10,725,570,550,0,909,672,910,10,566,623,621,0,911,771,912,10,785,655,664,0,903,837,904,10,664,655,652,0,904,837,785,10,566,541,623,0,911,913,771,10,623,541,619,0,771,913,760,10,575,567,574,0,675,676,914,10,574,567,568,0,914,676,915,10,607,573,571,0,663,667,665,10,571,573,567,0,665,667,676,10,565,562,560,0,899,916,917,10,568,564,557,0,915,918,881,10,741,737,568,0,852,853,915,10,568,737,574,0,915,853,914,10,598,592,742,0,152,134,132,10,617,612,622,0,682,761,669,10,622,612,613,0,669,761,765,10,622,607,617,0,669,663,682,10,617,607,608,0,682,663,662,10,536,570,730,0,670,672,908,10,730,570,725,0,908,672,909,10,537,618,528,0,895,681,919,10,528,618,614,0,919,681,683,10,562,528,614,0,916,919,683,10,614,561,562,0,683,920,916,10,559,535,733,0,921,882,922,10,601,635,616,0,923,924,925,10,616,635,638,0,925,924,855,10,696,584,697,0,781,926,721,10,596,595,589,0,651,865,857,10,589,595,524,0,857,865,659,10,602,540,543,0,678,677,810,10,527,601,544,0,680,923,679,10,687,685,686,0,821,802,775,10,686,685,698,0,775,802,851,10,686,690,687,0,775,927,821,10,687,690,689,0,821,927,844,10,658,673,660,0,700,691,684,10,660,673,674,0,684,691,685,10,660,677,665,0,684,686,928,10,728,729,732,0,788,747,929,10,732,729,731,0,929,747,890,10,715,714,728,0,787,741,788,10,728,714,713,0,788,741,743,10,713,727,728,0,743,745,788,10,728,727,729,0,788,745,747,10,728,732,719,0,788,929,789,10,698,699,686,0,851,794,775,10,686,699,700,0,775,794,776,10,706,715,718,0,729,787,790,10,686,704,690,0,775,777,927,10,546,536,717,0,930,670,742,10,717,536,716,0,742,670,744,10,634,632,633,0,817,819,813,10,633,632,645,0,813,819,931,10,635,648,645,0,924,831,931,10,645,648,646,0,931,831,828,10,660,665,661,0,684,928,784,10,661,665,664,0,784,928,904,10,645,646,633,0,931,828,813,10,633,646,647,0,813,828,814,10,633,650,637,0,813,815,932,10,632,638,645,0,819,855,931,10,645,638,635,0,931,855,924,10,685,688,698,0,802,801,851,10,698,688,701,0,851,801,850,10,662,675,658,0,702,875,700,10,658,675,673,0,700,875,691,10,716,730,713,0,744,908,743,10,713,730,727,0,743,908,745,10,716,536,730,0,744,670,908,10,543,540,603,0,810,677,933,10,561,616,562,0,920,925,916,10,619,541,564,0,760,913,918,10,683,697,583,0,723,721,732,10,583,697,584,0,732,721,926,10,556,558,584,0,907,880,926,10,749,600,753,0,860,637,639,10,557,541,535,0,881,913,882,10,735,583,559,0,887,732,921,10,535,559,558,0,882,921,880,10,559,583,558,0,921,732,880,10,562,616,560,0,916,925,917,10,565,528,562,0,899,919,916,10,541,557,564,0,913,881,918,10,566,565,535,0,897,899,934,10,535,565,560,0,934,899,917,10,602,662,527,0,678,702,680,10,527,662,663,0,680,702,703,10,734,527,735,0,935,680,936,10,603,546,701,0,933,930,850,10,701,546,702,0,850,930,799,10,747,743,598,0,636,864,152,10,598,743,592,0,152,864,134,10,741,568,557,0,852,915,881,10,563,620,564,0,666,668,918,10,564,620,619,0,918,668,760,10,753,752,755,0,639,638,878,10,591,579,544,0,873,937,679,10,544,579,540,0,679,937,677,10,769,770,754,0,879,642,938,10,753,755,590,0,639,878,655,10,614,608,561,0,683,662,920,10,561,608,572,0,920,662,664,10,764,768,577,0,939,940,941,10,577,768,578,0,941,940,874,10,760,545,579,0,942,671,937,10,579,545,540,0,937,671,677,10,561,572,538,0,920,664,872,10,538,601,561,0,872,923,920,10,561,601,616,0,920,923,925,10,601,538,544,0,923,872,679,10,795,709,793,0,632,634,889,10,588,509,744,0,130,901,863,10,797,588,798,0,129,130,943,10,798,588,745,0,943,130,944,10,691,681,695,0,770,716,945,10,790,703,695,0,870,778,773,10,695,703,692,0,773,778,774,10,695,681,684,0,945,716,849,10,794,731,724,0,737,890,738,10,724,731,721,0,738,890,748,10,781,628,636,0,946,827,947,10,636,628,625,0,947,827,818,10,633,637,634,0,813,932,817,10,634,637,636,0,817,932,947,10,625,634,636,0,818,817,947,10,798,514,797,0,948,949,153,10,797,514,508,0,153,949,150,10,488,481,588,0,128,900,130,10,588,481,509,0,130,900,901,10,592,743,509,0,134,864,901,10,509,743,744,0,901,864,863,10,738,761,521,0,950,951,862,10,755,764,590,0,878,939,655,10,590,764,766,0,655,939,845,10,526,523,738,0,952,953,950,10,738,523,761,0,950,953,951,10,758,754,757,0,954,938,955,10,757,754,756,0,955,938,859,10,568,563,564,0,915,666,918,10,754,770,756,0,938,642,859,10,756,770,772,0,859,642,644,10,568,567,563,0,915,676,666,10,563,567,573,0,666,676,667,10,744,745,588,0,863,944,130,10,738,521,762,0,950,862,956,10,545,760,569,0,671,942,673,10,569,760,580,0,673,942,893,10,540,545,603,0,677,671,933,10,603,545,546,0,933,671,930,10,546,545,536,0,930,671,670,10,541,566,535,0,913,911,882,10,644,648,734,0,830,831,935,10,734,648,527,0,935,831,680,10,527,648,601,0,680,831,923,10,601,648,635,0,923,831,924,10,675,662,543,0,875,702,810,10,543,662,602,0,810,702,678,10,583,584,558,0,732,926,880,10,527,663,735,0,680,703,936,10,735,663,656,0,936,703,894,10,683,583,688,0,803,957,801,10,688,583,543,0,801,957,810,10,675,543,671,0,875,810,809,10,710,584,717,0,779,958,742,10,717,584,546,0,742,958,930,10,688,543,701,0,801,810,850,10,701,543,603,0,850,810,933,10,576,577,571,0,674,941,665,10,571,577,572,0,665,941,664,10,577,578,572,0,941,874,664,10,572,578,538,0,664,874,872,10,741,556,539,0,852,907,807,10,539,556,736,0,807,907,805,10,542,581,539,0,806,959,807,10,539,581,582,0,807,959,854,10,550,736,725,0,832,805,796,10,725,736,711,0,796,805,708,10,711,736,710,0,708,805,710,10,710,736,584,0,710,805,926,10,542,550,569,0,892,910,673,10,569,550,570,0,673,910,672,10,546,584,702,0,930,960,799,10,702,584,696,0,799,960,800,10,735,559,734,0,887,921,961,10,556,584,736,0,907,926,805,10,594,533,555,0,759,724,726,10,631,784,643,0,835,834,823,10,643,784,782,0,823,834,905,10,593,779,777,0,840,962,842,10,672,788,670,0,886,885,698,10,670,788,786,0,698,885,888,10,780,548,594,0,963,754,756,10,780,594,778,0,963,756,841,10,530,548,549,0,755,754,768,10,547,534,532,0,753,964,751,10,534,779,593,0,964,962,840,10,534,593,532,0,964,840,751,10,532,593,531,0,751,840,750,10,521,765,762,0,862,846,956,10,748,750,751,0,641,640,649,10,751,750,753,0,649,640,639,10,508,514,774,0,150,949,142,10,774,514,773,0,142,949,847,10,744,763,745,0,863,650,944,10,745,763,519,0,944,650,654,10,523,739,761,0,953,965,951,10,589,771,596,0,857,652,651,10,595,522,524,0,865,867,659,10,745,519,798,0,944,654,943,10,798,519,740,0,943,654,861,10,798,740,514,0,948,876,949,10,514,740,597,0,949,876,866,10,775,517,600,0,656,646,637,10,600,517,585,0,637,646,643,10,579,757,760,0,937,955,942,10,760,757,759,0,942,955,858,10,759,589,525,0,858,857,658,10,525,589,524,0,658,857,659,10,756,759,757,0,859,858,955,10,574,737,762,0,914,853,956,10,519,520,521,0,654,648,862,10,525,580,759,0,658,893,858,10,759,580,760,0,858,893,942,10,574,762,765,0,914,956,846,10,769,768,755,0,879,940,878,10,755,768,764,0,878,940,939,10,768,769,758,0,940,879,954,10,758,769,754,0,954,879,938,10,591,578,758,0,873,874,954,10,758,578,768,0,954,874,940,10,740,521,739,0,861,862,965,10,739,521,761,0,965,862,951,10,590,766,767,0,655,845,647,10,574,765,575,0,914,846,675,10,579,591,757,0,937,873,955,10,757,591,758,0,955,873,954,10,520,765,521,0,648,846,862,10,526,738,581,0,952,950,959,10,581,738,582,0,959,950,854,10,526,581,525,0,660,891,658,10,525,581,580,0,658,891,893,10,738,762,582,0,950,956,854,10,582,762,737,0,854,956,853,10,764,577,766,0,939,941,845,10,766,577,576,0,845,941,674,10,576,575,766,0,674,675,845,10,766,575,765,0,845,675,846,10,774,773,515,0,142,847,141,10,515,773,517,0,141,847,646,10,596,587,514,0,651,653,949,10,514,587,773,0,949,653,847,10,218,453,1374,0,120,121,966,10,1374,453,384,0,966,121,610,10,628,781,631,0,827,946,835,10,631,781,783,0,835,946,833,10,531,552,532,0,750,749,751,10,623,551,621,0,771,727,912,10,621,551,553,0,912,727,725,10,615,554,537,0,967,896,895,10,615,565,621,0,967,899,898,10,537,528,615,0,895,919,967,10,565,615,528,0,899,967,919,10,530,529,553,0,755,769,968,10,553,529,554,0,968,769,896,10,533,530,553,0,757,755,968,10,615,553,554,0,967,968,896,10,553,615,621,0,968,967,898,10,733,535,560,0,969,934,917,10,616,733,560,0,925,969,917,10,629,733,638,0,856,969,855,10,638,733,616,0,855,969,925,10,734,630,644,0,961,734,733,10,734,733,630,0,961,922,734,10,630,733,629,0,734,922,906,10,734,559,733,0,961,921,922,10,749,750,513,0,860,640,902,10,513,750,746,0,902,640,635,10,749,513,600,0,860,902,637,10,600,513,599,0,637,902,657,10,744,748,763,0,863,641,650,10,763,748,751,0,650,641,649,10,515,517,776,0,141,646,143,10,776,517,775,0,143,646,656,10,595,596,514,0,865,651,949,10,514,597,595,0,949,866,865,10,743,747,748,0,864,636,641,10,1115,1080,1116,0,970,971,972,10,1116,1080,1082,0,972,971,973,10,1116,1097,1074,0,972,179,974,10,1074,1097,1075,0,974,179,197,10,1080,1115,1079,0,971,970,975,10,1115,1086,1079,0,970,976,975,10,1086,1078,963,0,976,977,978,10,963,1078,1085,0,978,977,979,10,961,802,1004,0,980,981,982,10,825,971,804,0,983,984,985,10,804,971,800,0,985,984,986,10,1005,903,998,0,987,988,989,10,957,958,805,0,990,991,992,10,805,958,806,0,992,991,993,10,958,959,806,0,991,994,993,10,806,959,807,0,993,994,995,10,959,960,807,0,994,996,995,10,807,960,808,0,995,996,997,10,808,994,1004,0,997,998,982,10,952,873,803,0,999,1000,1001,10,989,1001,990,0,1002,1003,1004,10,990,1001,1000,0,1004,1003,1005,10,955,1002,989,0,1006,1007,1002,10,989,1002,1001,0,1002,1007,1003,10,827,828,826,0,1008,1009,1010,10,826,828,1007,0,1010,1009,1011,10,1003,964,1000,0,1012,1013,1005,10,1000,964,990,0,1005,1013,1004,10,944,943,901,0,1014,1015,1016,10,1081,1101,961,0,1017,1018,980,10,858,871,874,0,1019,1020,1021,10,874,871,872,0,1021,1020,1022,10,953,954,874,0,1023,1024,1021,10,874,954,858,0,1021,1024,1019,10,953,874,952,0,1023,1021,999,10,952,874,872,0,999,1021,1022,10,905,835,941,0,1025,1026,1027,10,856,866,934,0,1028,1029,1030,10,934,866,935,0,1030,1029,1031,10,936,935,867,0,1032,1031,1033,10,867,935,866,0,1033,1031,1029,10,901,902,944,0,1016,1034,1014,10,965,836,966,0,1035,1036,1037,10,966,836,933,0,1037,1036,1038,10,875,967,933,0,1039,1040,1041,10,933,967,966,0,1041,1040,1042,10,969,856,968,0,1043,1028,1044,10,968,856,934,0,1044,1028,1030,10,970,968,852,0,1045,1046,1047,10,852,968,934,0,1047,1046,1048,10,981,982,985,0,1049,1050,1051,10,985,982,986,0,1051,1050,1052,10,988,987,981,0,1053,1054,1049,10,981,987,982,0,1049,1054,1050,10,990,985,989,0,1004,1051,1002,10,989,985,986,0,1002,1051,1052,10,982,970,986,0,1050,1045,1052,10,986,970,931,0,1052,1045,1055,10,931,955,986,0,1055,1006,1052,10,986,955,989,0,1052,1006,1002,10,979,875,983,0,1056,1039,1057,10,983,875,833,0,1057,1039,1058,10,930,985,964,0,1059,1051,1013,10,964,985,990,0,1013,1051,1004,10,954,955,858,0,1024,1006,1019,10,858,955,931,0,1019,1006,1055,10,966,988,965,0,1037,1053,1035,10,965,988,981,0,1035,1053,1049,10,875,979,967,0,1039,1056,1040,10,967,979,980,0,1040,1056,1060,10,988,966,980,0,1061,1042,1060,10,980,966,967,0,1060,1042,1040,10,970,982,968,0,1045,1050,1046,10,968,982,987,0,1046,1050,1054,10,871,991,872,0,1020,1062,1022,10,872,991,873,0,1022,1062,1000,10,836,965,929,0,1036,1035,1063,10,929,965,930,0,1063,1035,1059,10,1015,945,1013,0,1064,1065,1066,10,960,857,994,0,996,1067,998,10,994,857,929,0,998,1067,1068,10,939,997,861,0,1069,1070,1071,10,943,998,832,0,1015,989,1072,10,904,832,831,0,1073,1072,1074,10,831,832,881,0,1074,1072,1075,10,880,947,879,0,1076,1077,1078,10,904,1013,832,0,1073,1066,1072,10,832,1013,945,0,1072,1066,1065,10,944,902,950,0,1014,1034,1079,10,950,902,932,0,1079,1034,1080,10,828,932,1007,0,1009,1080,1011,10,1007,932,902,0,1011,1080,1034,10,899,1011,868,0,1081,1082,1083,10,868,1011,1010,0,1083,1082,1084,10,945,1015,943,0,1065,1064,1015,10,943,1015,901,0,1015,1064,1016,10,1015,1014,901,0,1064,1085,1016,10,901,1014,902,0,1016,1085,1034,10,992,993,900,0,1086,1087,1088,10,1005,1006,903,0,987,1089,988,10,903,1006,860,0,988,1089,1090,10,992,868,1009,0,1086,1091,1092,10,1016,864,839,0,1093,1094,1095,10,839,864,863,0,1095,1094,1094,10,877,864,850,0,1096,1097,1098,10,850,864,972,0,1098,1097,1099,10,848,891,850,0,1100,1101,1098,10,850,891,878,0,1098,1101,1102,10,882,1040,1008,0,1092,1103,1104,10,1000,1001,823,0,1005,1003,1105,10,823,1001,818,0,1105,1003,1106,10,860,839,862,0,1090,1095,1107,10,862,839,863,0,1107,1095,1094,10,876,844,849,0,1108,1109,1110,10,849,844,859,0,1110,1109,1111,10,950,880,944,0,1079,1076,1014,10,944,880,1005,0,1014,1076,987,10,880,950,947,0,1076,1079,1077,10,984,1012,867,0,1112,1113,1033,10,867,1012,1011,0,1033,1113,1082,10,947,907,853,0,1077,1114,1115,10,996,1018,843,0,1116,1117,1118,10,843,1018,842,0,1118,1117,1119,10,1018,1022,842,0,1117,1120,1119,10,842,1022,918,0,1119,1120,1121,10,869,1018,920,0,1122,1123,1124,10,920,1018,996,0,1124,1123,1125,10,897,910,997,0,1126,1127,1070,10,975,886,924,0,1128,1129,1130,10,924,886,926,0,1130,1129,1131,10,803,804,800,0,1001,985,986,10,1046,1047,911,0,1132,1133,1134,10,1030,975,1026,0,1135,1136,1137,10,1026,975,924,0,1137,1136,1138,10,976,923,885,0,1139,1140,1141,10,885,923,925,0,1141,1140,1142,10,1028,1024,1029,0,1143,1144,1145,10,1029,1024,838,0,1145,1144,1146,10,854,1029,838,0,1147,1148,1149,10,926,1046,837,0,1131,1132,1150,10,837,1046,911,0,1150,1132,1134,10,1027,910,1024,0,1151,1127,1144,10,1024,910,897,0,1144,1127,1126,10,910,1027,909,0,1127,1151,1152,10,909,1027,1025,0,1152,1151,1153,10,897,997,940,0,1126,1070,1154,10,1029,923,1028,0,1145,1155,1143,10,1028,923,976,0,1143,1155,1156,10,837,1026,926,0,1150,1157,1131,10,926,1026,924,0,1131,1157,1130,10,1030,1026,1027,0,1135,1137,1151,10,1027,1026,1025,0,1151,1137,1153,10,976,885,975,0,1139,1141,1128,10,975,885,886,0,1128,1141,1129,10,1027,1028,1030,0,1151,1143,1135,10,919,843,918,0,1158,1118,1121,10,918,843,842,0,1121,1118,1119,10,1028,1027,1024,0,1143,1151,1144,10,928,1034,973,0,1159,1160,1161,10,973,974,845,0,1162,1163,1164,10,845,974,841,0,1164,1163,1165,10,895,893,892,0,1166,1167,1168,10,913,896,915,0,1169,1170,1171,10,915,896,914,0,1171,1170,1172,10,1034,840,973,0,1160,1173,1161,10,973,840,974,0,1161,1173,1174,10,1065,1037,1061,0,1175,1176,1177,10,915,1031,913,0,1171,1178,1169,10,1033,928,846,0,1179,1159,1180,10,846,928,973,0,1180,1159,1161,10,846,973,845,0,1181,1162,1164,10,915,914,841,0,1171,1172,1165,10,841,914,845,0,1165,1172,1164,10,1008,1060,1058,0,1104,1182,1183,10,947,889,912,0,1077,1184,1185,10,853,855,892,0,1186,1187,1168,10,892,855,919,0,1168,1187,1158,10,840,1048,927,0,1173,1188,1189,10,887,838,897,0,1190,1149,1191,10,1042,886,1044,0,1192,1129,1193,10,1044,886,885,0,1193,1129,1141,10,922,1059,889,0,1194,1195,1184,10,889,1059,1057,0,1184,1195,1196,10,882,942,1040,0,1197,1198,1199,10,1038,1041,917,0,1200,1201,1202,10,917,1041,916,0,1202,1201,1203,10,1038,1063,1041,0,1200,1204,1201,10,1041,1063,1062,0,1201,1204,1205,10,883,1060,1062,0,1206,1182,1207,10,1062,1060,1064,0,1207,1182,1208,10,1063,1065,884,0,1209,1175,1210,10,884,1065,1061,0,1210,1175,1177,10,917,916,898,0,1202,1203,1211,10,898,916,1039,0,1211,1203,1212,10,898,1039,942,0,1211,1212,1198,10,823,824,1000,0,1105,1213,1005,10,1000,824,1003,0,1005,1213,1012,10,815,814,816,0,1214,1215,1216,10,816,814,817,0,1216,1215,1217,10,818,817,813,0,1106,1217,1218,10,813,817,814,0,1218,1217,1215,10,962,963,812,0,1219,978,1220,10,812,963,811,0,1220,978,1221,10,961,819,1114,0,980,1222,1223,10,978,1090,977,0,1224,1225,1226,10,977,1090,821,0,1226,1225,1227,10,802,801,806,0,981,1228,993,10,806,801,805,0,993,1228,992,10,1042,926,886,0,1192,1131,1129,10,927,1048,1032,0,1189,1188,1229,10,1032,1048,1052,0,1229,1188,1230,10,1061,1055,884,0,1177,1231,1210,10,1060,883,1054,0,1182,1206,1232,10,1041,1062,1064,0,1201,1205,1233,10,861,896,913,0,1071,1170,1169,10,847,877,878,0,1234,1096,1102,10,878,877,850,0,1102,1096,1098,10,863,864,877,0,1094,1094,1096,10,1051,1049,1033,0,1235,1236,1179,10,1033,1049,928,0,1179,1236,1159,10,896,861,997,0,1170,1071,1070,10,1038,1065,1063,0,1200,1237,1204,10,1009,882,992,0,1092,1092,1086,10,992,882,1008,0,1086,1092,1104,10,1028,976,1030,0,1143,1156,1135,10,1030,976,975,0,1135,1156,1136,10,801,826,805,0,1228,1010,992,10,805,826,1007,0,992,1010,1011,10,964,1003,994,0,1013,1012,1238,10,994,1003,1004,0,1238,1012,1239,10,1010,1009,868,0,1084,1240,1083,10,1010,942,1009,0,1084,1198,1240,10,1009,942,882,0,1240,1198,1197,10,947,922,889,0,1077,1194,1184,10,807,802,806,0,995,981,993,10,1010,1012,938,0,1084,1113,1241,10,941,1015,905,0,1027,1064,1025,10,905,1015,1013,0,1025,1064,1066,10,1094,1091,810,0,1242,1243,1244,10,810,1091,1089,0,1244,1243,1245,10,1087,1106,1090,0,1246,1247,1225,10,1090,1106,1096,0,1225,1247,1248,10,820,1004,824,0,1249,1239,1213,10,824,1004,1003,0,1213,1239,1012,10,1081,1080,1101,0,1017,971,1018,10,1101,1080,1079,0,1018,971,975,10,1004,819,961,0,982,1222,980,10,1084,1102,1073,0,1250,1251,200,10,1093,1088,1094,0,1252,1253,1242,10,1094,1088,1091,0,1242,1253,1243,10,1092,1094,811,0,1254,1242,1221,10,811,1094,1095,0,1221,1242,1255,10,822,821,1096,0,1256,1227,1248,10,1096,821,1090,0,1248,1227,1225,10,814,815,810,0,1215,1214,1244,10,810,815,1095,0,1244,1214,1255,10,961,1114,809,0,980,1223,1257,10,809,1114,1112,0,1257,1223,1258,10,801,802,961,0,1228,981,980,10,1081,961,809,0,1017,980,1257,10,1107,1087,1088,0,1259,1246,1253,10,1088,1087,1091,0,1253,1246,1243,10,811,963,1092,0,1221,978,1254,10,1092,963,1085,0,1254,978,979,10,824,821,820,0,1213,1227,1249,10,820,821,822,0,1249,1227,1256,10,1081,1109,1082,0,1017,1260,973,10,1100,1083,1109,0,1261,1262,1260,10,1109,1083,1082,0,1260,1262,973,10,1037,913,889,0,1176,1263,1184,10,1098,1072,1069,0,198,1264,1265,10,1098,1069,1108,0,198,1265,1266,10,1079,827,1101,0,975,1008,1018,10,1101,827,826,0,1018,1008,1010,10,1082,1080,1081,0,973,971,1017,10,1078,1086,1115,0,977,976,970,10,928,1049,1034,0,1159,1236,1160,10,884,883,1063,0,1210,1206,1209,10,1063,883,1062,0,1209,1206,1207,10,832,998,881,0,1072,989,1075,10,895,894,893,0,1166,1267,1167,10,899,868,900,0,1268,1091,1088,10,900,868,992,0,1088,1091,1086,10,823,818,977,0,1105,1106,1226,10,977,818,813,0,1226,1106,1218,10,1054,883,1056,0,1232,1206,1269,10,1056,883,884,0,1269,1206,1210,10,846,1035,1033,0,1180,1270,1179,10,888,1051,1035,0,1271,1235,1270,10,1035,1051,1033,0,1270,1235,1179,10,1036,1031,841,0,1272,1178,1165,10,841,1031,915,0,1165,1178,1171,10,898,913,917,0,1211,1169,1202,10,917,913,1037,0,1202,1169,1273,10,984,867,983,0,1112,1033,1057,10,983,867,866,0,1057,1033,1029,10,911,888,908,0,1134,1271,1274,10,908,888,921,0,1274,1271,1275,10,870,920,996,0,1276,1124,1125,10,1008,922,992,0,1104,1194,1086,10,992,922,947,0,1086,1194,1077,10,829,857,958,0,1277,1067,991,10,958,857,959,0,991,1067,994,10,1040,942,1039,0,1199,1198,1212,10,969,980,856,0,1043,1060,1028,10,856,980,979,0,1028,1060,1056,10,939,942,1010,0,1069,1198,1084,10,1015,941,1014,0,1064,1027,1085,10,1014,941,946,0,1085,1027,1278,10,857,960,959,0,1067,996,994,10,885,1043,1044,0,1141,1279,1193,10,911,887,947,0,1134,1190,1077,10,997,939,940,0,1070,1069,1154,10,865,848,972,0,1280,1100,1099,10,972,848,850,0,1099,1100,1098,10,881,890,831,0,1075,1281,1074,10,1061,1057,1055,0,1177,1196,1231,10,1023,1020,907,0,1282,1283,1114,10,1035,846,914,0,1284,1181,1172,10,914,846,845,0,1172,1181,1164,10,1058,1060,1054,0,1183,1182,1232,10,1038,917,1065,0,1200,1202,1237,10,1065,917,1037,0,1237,1202,1273,10,930,964,929,0,1059,1013,1063,10,929,964,994,0,1063,1013,1238,10,872,873,952,0,1022,1000,999,10,808,960,994,0,997,996,998,10,983,866,979,0,1057,1029,1056,10,979,866,856,0,1056,1029,1028,10,851,880,859,0,1285,1076,1111,10,859,880,879,0,1111,1076,1078,10,909,921,910,0,1152,1286,1127,10,921,896,997,0,1286,1170,1070,10,910,921,997,0,1127,1286,1070,10,921,909,908,0,1275,1287,1274,10,879,853,893,0,1078,1115,1288,10,893,853,892,0,1288,1115,1289,10,919,918,892,0,1158,1121,1168,10,892,918,906,0,1168,1121,1290,10,912,1052,1053,0,1185,1230,1291,10,1012,905,1013,0,1113,1025,1066,10,945,943,832,0,1065,1015,1072,10,968,987,969,0,1044,1292,1043,10,988,980,987,0,1061,1060,1292,10,987,980,969,0,1292,1060,1043,10,1117,799,1098,0,199,1293,198,10,1098,799,1072,0,198,1293,1264,10,1071,1072,1068,0,1294,1264,193,10,1068,1072,799,0,193,1264,1293,10,956,825,951,0,1295,983,1296,10,951,825,804,0,1296,983,985,10,828,827,825,0,1009,1008,983,10,825,827,971,0,983,1008,984,10,1019,870,995,0,1297,1276,1298,10,995,870,996,0,1298,1276,1125,10,1008,1064,1060,0,1104,1208,1182,10,1045,1043,925,0,1299,1279,1142,10,921,888,1035,0,1275,1271,1270,10,1043,885,925,0,1279,1141,1142,10,865,972,1017,0,1300,1301,1302,10,972,1016,1017,0,1301,1093,1302,10,880,851,1005,0,1076,1285,987,10,1005,851,1006,0,987,1285,1089,10,890,903,847,0,1281,988,1234,10,903,860,862,0,988,1090,1107,10,849,859,879,0,1110,1111,1078,10,833,875,933,0,1058,1039,1041,10,834,835,833,0,1303,1026,1058,10,833,835,937,0,1058,1026,1304,10,933,836,833,0,1041,1305,1058,10,833,836,834,0,1058,1305,1303,10,983,833,984,0,1057,1058,1112,10,984,833,937,0,1112,1058,1304,10,830,831,894,0,1306,1074,1267,10,894,831,890,0,1267,1074,1281,10,894,890,878,0,1267,1281,1102,10,878,890,847,0,1102,1281,1234,10,942,939,861,0,1198,1069,1071,10,1055,1056,884,0,1231,1269,1210,10,942,861,898,0,1198,1071,1211,10,861,913,898,0,1071,1169,1211,10,1045,887,1047,0,1299,1190,1133,10,812,816,962,0,1220,1216,1219,10,1111,1113,1103,0,188,1307,185,10,1103,1113,1105,0,185,1307,1308,10,1076,1082,1083,0,181,973,1262,10,810,1095,1094,0,1244,1255,1242,10,1108,1085,1078,0,1266,979,977,10,1082,1076,1116,0,973,181,972,10,1116,1076,1097,0,972,181,179,10,1116,1074,1115,0,972,974,970,10,1115,1074,1078,0,970,974,977,10,812,815,816,0,1220,1214,1216,10,1072,1071,1069,0,1264,1294,1265,10,1069,1071,1093,0,1265,1294,1252,10,1067,1066,1104,0,191,1309,192,10,1113,1111,1102,0,1307,188,1251,10,1102,1111,1073,0,1251,188,200,10,1071,1070,1093,0,1294,173,1252,10,1093,1070,1088,0,1252,173,1253,10,977,821,823,0,1226,1227,1105,10,823,821,824,0,1105,1227,1213,10,1105,1106,1107,0,1308,1310,1311,10,809,1112,1102,0,1257,1258,1251,10,1102,1112,1113,0,1251,1258,1307,10,812,811,815,0,1220,1221,1214,10,815,811,1095,0,1214,1221,1255,10,1108,1074,1075,0,1266,974,197,10,1099,1084,1073,0,168,1250,200,10,1108,1078,1074,0,1266,977,974,10,1077,1076,1083,0,167,181,1262,10,1084,1099,1100,0,1250,168,1261,10,814,810,813,0,1215,1244,1218,10,813,810,1089,0,1218,1244,1245,10,1096,1106,1114,0,1312,1310,1223,10,1114,1106,1112,0,1223,1310,1258,10,1089,978,813,0,1245,1224,1218,10,813,978,977,0,1218,1224,1226,10,822,1096,819,0,1313,1312,1222,10,819,1096,1114,0,1222,1312,1223,10,1094,1092,1093,0,1242,1254,1252,10,1093,1092,1069,0,1252,1254,1265,10,998,903,881,0,989,988,1075,10,881,903,890,0,1075,988,1281,10,863,877,862,0,1094,1096,1107,10,1034,1049,1050,0,1160,1236,1314,10,1048,840,1050,0,1188,1173,1314,10,1050,840,1034,0,1314,1173,1160,10,892,906,895,0,1168,1290,1166,10,893,894,891,0,1167,1267,1101,10,891,894,878,0,1101,1267,1102,10,972,864,1016,0,1301,1094,1093,10,914,896,1035,0,1172,1170,1284,10,1035,896,921,0,1284,1170,1286,10,854,925,1029,0,1147,1142,1148,10,1029,925,923,0,1148,1142,1140,10,1046,926,1042,0,1132,1131,1192,10,974,840,927,0,1174,1173,1189,10,841,974,1036,0,1165,1163,1272,10,974,927,1036,0,1174,1189,1315,10,1036,927,1032,0,1315,1189,1229,10,879,947,853,0,1078,1077,1115,10,897,906,907,0,1191,1316,1114,10,888,912,1053,0,1271,1185,1291,10,888,911,947,0,1271,1134,1077,10,853,907,1021,0,1115,1114,1317,10,1019,995,853,0,1297,1298,1115,10,1005,998,944,0,987,989,1014,10,944,998,943,0,1014,989,1015,10,877,847,862,0,1096,1234,1107,10,862,847,903,0,1107,1234,988,10,1020,1023,869,0,1283,1282,1122,10,869,1023,1018,0,1122,1282,1123,10,1018,1023,1022,0,1123,1282,1318,10,865,1017,876,0,1300,1302,1108,10,876,1017,844,0,1108,1302,1109,10,865,876,848,0,1300,1108,1319,10,848,876,849,0,1319,1108,1110,10,940,895,897,0,1154,1166,1126,10,895,906,897,0,1166,1290,1126,10,853,1021,1019,0,1115,1317,1297,10,897,838,1024,0,1126,1146,1144,10,897,907,887,0,1191,1114,1190,10,1031,912,913,0,1320,1185,1263,10,907,1020,1021,0,1114,1283,1317,10,830,894,895,0,1306,1267,1166,10,904,831,938,0,1073,1074,1241,10,938,831,830,0,1241,1074,1306,10,940,939,938,0,1154,1069,1241,10,938,939,1010,0,1241,1069,1084,10,835,905,937,0,1026,1025,1304,10,937,905,1012,0,1304,1025,1113,10,1010,1011,1012,0,1084,1082,1113,10,1012,984,937,0,1113,1112,1304,10,830,895,940,0,1306,1166,1154,10,1077,1083,1099,0,167,1262,168,10,1099,1083,1100,0,168,1262,1261,10,801,961,826,0,1228,980,1010,10,826,961,1101,0,1010,980,1018,10,822,819,820,0,1313,1222,1321,10,1086,971,1079,0,976,984,975,10,1079,971,827,0,975,984,1008,10,1075,1098,1108,0,197,198,1266,10,852,931,970,0,1047,1055,1045,10,985,930,965,0,1051,1059,1035,10,965,981,985,0,1035,1049,1051,10,873,991,949,0,1000,1062,1322,10,949,991,948,0,1322,1062,1323,10,953,952,999,0,1023,999,1324,10,999,803,800,0,1324,1001,986,10,803,999,952,0,1001,1324,999,10,947,887,907,0,1077,1190,1114,10,1059,922,1058,0,1195,1194,1183,10,1058,922,1008,0,1183,1194,1104,10,853,995,855,0,1115,1298,1325,10,889,1057,1037,0,1184,1196,1176,10,1037,1057,1061,0,1176,1196,1177,10,879,891,849,0,1078,1326,1110,10,849,891,848,0,1110,1326,1319,10,879,893,891,0,1078,1288,1326,10,820,819,1004,0,1321,1222,982,10,800,962,999,0,986,1219,1324,10,1104,1103,1107,0,184,185,1311,10,1107,1103,1105,0,1311,185,1308,10,962,800,971,0,1219,986,984,10,818,1001,1002,0,1106,1003,1007,10,1076,1077,1118,0,181,167,180,10,1070,1071,1068,0,173,1294,193,10,1113,1112,1105,0,1307,1258,1308,10,1105,1112,1106,0,1308,1258,1310,10,1092,1085,1069,0,1254,979,1265,10,1069,1085,1108,0,1265,979,1266,10,913,912,889,0,1263,1185,1184,10,912,888,947,0,1185,1271,1077,10,1051,888,1053,0,1235,1271,1291,10,947,993,992,0,1077,1087,1086,10,929,857,829,0,1068,1067,1277,10,836,929,834,0,1305,1068,1303,10,834,929,829,0,1303,1068,1277,10,951,804,873,0,1296,985,1000,10,873,804,803,0,1000,985,1001,10,958,957,829,0,991,990,1277,10,829,957,946,0,1277,990,1278,10,946,941,829,0,1278,1027,1277,10,829,941,835,0,1277,1027,1026,10,950,956,947,0,1079,1295,1077,10,951,873,949,0,1296,1000,1322,10,946,957,1014,0,1278,990,1085,10,900,993,949,0,1088,1087,1322,10,899,936,1011,0,1081,1032,1082,10,1011,936,867,0,1082,1032,1033,10,948,900,949,0,1323,1088,1322,10,805,1014,957,0,992,1085,990,10,805,1007,1014,0,992,1011,1085,10,1014,1007,902,0,1085,1011,1034,10,834,829,835,0,1303,1277,1026,10,900,948,899,0,1088,1323,1268,10,899,948,936,0,1268,1323,1327,10,962,1086,963,0,1219,976,978,10,932,828,956,0,1080,1009,1295,10,956,828,825,0,1295,1009,983,10,956,950,932,0,1295,1079,1080,10,993,947,951,0,1087,1077,1296,10,947,956,951,0,1077,1295,1296,10,951,949,993,0,1296,1322,1087,10,854,838,887,0,1147,1149,1190,10,925,854,1045,0,1142,1147,1299,10,1045,854,887,0,1299,1147,1190,10,1047,887,911,0,1133,1190,1134,10,911,1025,837,0,1134,1328,1150,10,837,1025,1026,0,1150,1328,1157,10,908,909,911,0,1274,1287,1134,10,911,909,1025,0,1134,1287,1328,10,1040,1039,916,0,1199,1212,1203,10,1008,1040,1064,0,1104,1103,1208,10,1041,1064,916,0,1201,1233,1203,10,916,1064,1040,0,1203,1233,1199,10,999,962,816,0,1324,1219,1216,10,999,954,953,0,1324,1024,1023,10,818,1002,817,0,1106,1007,1217,10,817,1002,999,0,1217,1007,1324,10,999,1002,954,0,1324,1007,1024,10,954,1002,955,0,1024,1007,1006,10,999,816,817,0,1324,1216,1217,10,948,991,871,0,1323,1062,1020,10,971,1086,962,0,984,976,1219,10,931,852,858,0,1055,1047,1019,10,1004,802,808,0,982,981,997,10,808,802,807,0,997,981,995,10,1089,1091,978,0,1245,1243,1224,10,978,1091,1087,0,1224,1243,1246,10,1088,1070,1110,0,1253,173,189,10,1090,978,1087,0,1225,1224,1246,10,1104,1107,1110,0,192,1259,189,10,1110,1107,1088,0,189,1259,1253,10,1107,1106,1087,0,1259,1247,1246,10,1084,1100,1109,0,1250,1261,1260,10,1102,1109,809,0,1251,1260,1257,10,809,1109,1081,0,1257,1260,1017,10,1084,1109,1102,0,1250,1260,1251,10,904,938,1013,0,1073,1241,1066,10,1013,938,1012,0,1066,1241,1113,10,830,940,938,0,1306,1154,1241,10,852,934,935,0,1047,1048,1329,10,858,852,871,0,1019,1047,1020,10,871,852,948,0,1020,1047,1323,10,948,852,936,0,1323,1047,1327,10,936,852,935,0,1327,1047,1329,10,1031,1036,1032,0,1320,1315,1229,10,1032,1052,912,0,1229,1230,1185,10,912,1031,1032,0,1185,1320,1229,10,996,843,855,0,1116,1118,1187,10,855,843,919,0,1187,1118,1158,10,1023,907,1022,0,1282,1114,1330,10,996,855,995,0,1125,1331,1298,10,906,1022,907,0,1316,1330,1114,10,906,918,1022,0,1290,1121,1120,10,1120,1122,1126,0,1332,1333,1333,10,1124,1163,1123,0,1334,1335,1336,10,1122,1150,1130,0,1333,1337,1338,10,1130,1150,1156,0,1338,1337,1339,10,1141,1142,1138,0,1340,1341,1342,10,1138,1142,1140,0,1342,1341,1343,10,1131,1153,1149,0,1344,1345,1346,10,1129,1149,1148,0,1347,1346,1348,10,1148,1149,1147,0,1348,1346,1349,10,1129,1148,1130,0,1347,1348,1338,10,1130,1148,1146,0,1338,1348,1350,10,1136,1160,1162,0,1351,1352,1353,10,1155,1152,1157,0,1354,1355,1356,10,1159,1163,1124,0,1357,1335,1334,10,1135,1172,1158,0,1358,1359,1360,10,1142,1145,1161,0,1341,1361,1362,10,1161,1145,1144,0,1362,1361,1363,10,1151,1162,1160,0,1364,1353,1352,10,1162,1151,1125,0,1353,1364,1365,10,1162,1163,1159,0,1353,1335,1357,10,1152,1153,1131,0,1355,1345,1344,10,1143,1141,1127,0,1366,1340,1367,10,1127,1141,1128,0,1367,1340,1368,10,1132,1157,1131,0,1369,1356,1344,10,1131,1157,1152,0,1344,1356,1355,10,1147,1154,1144,0,1349,1370,1363,10,1144,1154,1139,0,1363,1370,1371,10,1121,1159,1172,0,1372,1357,1359,10,1151,1153,1152,0,1364,1345,1355,10,1125,1155,1162,0,1365,1354,1353,10,1150,1122,1120,0,1337,1333,1332,10,1123,1163,1162,0,1336,1335,1353,10,1161,1139,1136,0,1362,1371,1351,10,1127,1169,1168,0,1367,1373,1374,10,1127,1168,1126,0,1367,1374,1333,10,1126,1168,1120,0,1333,1374,1332,10,1136,1140,1161,0,1351,1343,1362,10,1161,1140,1142,0,1362,1343,1341,10,1145,1148,1144,0,1361,1348,1363,10,1144,1148,1147,0,1363,1348,1349,10,1135,1158,1166,0,1358,1360,1375,10,1167,1165,1164,0,1376,1377,1378,10,1125,1151,1152,0,1365,1364,1355,10,1138,1140,1137,0,1342,1343,1379,10,1137,1140,1136,0,1379,1343,1351,10,1123,1119,1124,0,1336,1380,1334,10,1121,1135,1166,0,1372,1358,1375,10,1160,1139,1154,0,1352,1371,1370,10,1171,1128,1170,0,217,1368,218,10,1128,1137,1170,0,1368,1379,218,10,1123,1162,1155,0,1336,1353,1354,10,1144,1139,1161,0,1363,1371,1362,10,1143,1146,1145,0,1366,1350,1361,10,1145,1146,1148,0,1361,1350,1348,10,1130,1156,1129,0,1338,1339,1347,10,1129,1156,1132,0,1347,1339,1369,10,1141,1138,1128,0,1340,1342,1368,10,1156,1134,1132,0,1339,1381,1369,10,1127,1126,1143,0,1367,1333,1366,10,1143,1126,1146,0,1366,1333,1350,10,1156,1150,1133,0,1339,1337,1382,10,1167,1164,1134,0,1376,1378,1381,10,1128,1171,1127,0,1368,217,1367,10,1127,1171,1169,0,1367,217,1373,10,1132,1134,1157,0,1369,1381,1356,10,1157,1134,1164,0,1356,1381,1378,10,1126,1122,1146,0,1333,1333,1350,10,1146,1122,1130,0,1350,1333,1338,10,1157,1164,1119,0,1356,1378,1380,10,1123,1155,1119,0,1336,1354,1380,10,1119,1155,1157,0,1380,1354,1356,10,1138,1137,1128,0,1342,1379,1368,10,1132,1131,1129,0,1369,1344,1347,10,1129,1131,1149,0,1347,1344,1346,10,1136,1162,1121,0,1351,1353,1372,10,1121,1162,1159,0,1372,1353,1357,10,1143,1145,1141,0,1366,1361,1340,10,1141,1145,1142,0,1340,1361,1341,10,1125,1152,1155,0,1365,1355,1354,10,1139,1160,1136,0,1371,1352,1351,10,1153,1151,1154,0,1345,1364,1370,10,1154,1151,1160,0,1370,1364,1352,10,1149,1154,1147,0,1346,1370,1349,10,1149,1153,1154,0,1346,1345,1370,10,1166,1158,1124,0,1375,1360,1334,10,1172,1159,1173,0,1359,1357,1383,10,1158,1172,1173,0,1360,1359,1383,10,1135,1121,1172,0,1358,1372,1359,10,1159,1124,1173,0,1357,1334,1383,10,1124,1158,1173,0,1334,1360,1383,10,1187,1342,1341,0,1384,1385,1386,10,1210,1349,1360,0,1387,1388,1389,10,1360,1350,1210,0,1389,1390,1387,10,1210,1350,1203,0,1387,1390,1391,10,1201,1190,1200,0,1392,1393,1394,10,1200,1190,1189,0,1394,1393,1395,10,1317,1351,1354,0,1396,1397,1398,10,1354,1351,1350,0,1398,1397,1390,10,1352,1351,1322,0,1399,1397,1400,10,1322,1351,1317,0,1400,1397,1396,10,1302,1298,1301,0,1401,1402,1403,10,1301,1298,1297,0,1403,1402,1404,10,1200,1199,1201,0,1394,1405,1392,10,1246,1347,1247,0,1406,215,1407,10,1247,1347,1343,0,1407,215,1408,10,1200,1189,1209,0,1394,1395,1409,10,1209,1189,1192,0,1409,1395,1410,10,1247,1343,1357,0,1407,1408,1411,10,1200,1209,1257,0,1394,1409,1412,10,1291,1292,1362,0,1413,1414,1415,10,1314,1204,1320,0,1416,1417,1418,10,1356,1225,1209,0,1419,1420,1409,10,1209,1225,1257,0,1409,1420,1412,10,1338,1324,1309,0,1421,1422,1423,10,1309,1324,1308,0,1423,1422,1424,10,1342,1328,1341,0,1385,1425,1386,10,1341,1328,1329,0,1386,1425,1426,10,1331,1329,1326,0,1427,1426,1428,10,1326,1329,1328,0,1428,1426,1425,10,1196,1193,1188,0,1429,1430,1431,10,1189,1190,1188,0,1395,1393,1431,10,1277,1274,1281,0,1432,1433,1434,10,1281,1274,1280,0,1434,1433,1435,10,1272,1271,1279,0,250,252,1436,10,1279,1271,1278,0,1436,252,1437,10,1312,1224,1311,0,1438,1439,1440,10,1311,1224,1310,0,1440,1439,1441,10,1324,1327,1308,0,1422,1442,1424,10,1308,1327,1231,0,1424,1442,1443,10,1254,1250,1255,0,225,1444,228,10,1255,1250,1253,0,228,1444,1445,10,1339,1340,1337,0,1446,1447,1448,10,1337,1340,1338,0,1448,1447,1421,10,1221,1308,1229,0,1449,1424,1450,10,1229,1308,1231,0,1450,1424,1443,10,1306,1305,1353,0,1451,1452,1453,10,1353,1305,1307,0,1453,1452,1454,10,1367,1371,1269,0,107,106,102,10,1269,1371,1270,0,102,106,103,10,1211,1206,1197,0,1455,1456,1457,10,1197,1206,1196,0,1457,1456,1429,10,1323,1326,1324,0,1458,1428,1422,10,1324,1326,1327,0,1422,1428,1442,10,1358,1357,1353,0,1459,1411,1453,10,1254,1252,1250,0,225,224,1444,10,1250,1252,1246,0,1444,224,1406,10,1193,1196,1205,0,1430,1429,1460,10,1205,1196,1206,0,1460,1429,1456,10,1355,1354,1360,0,1461,1398,1389,10,1360,1354,1350,0,1389,1398,1390,10,1325,1336,1334,0,1462,1463,1464,10,1334,1336,1335,0,1464,1463,1465,10,1291,1284,1292,0,1413,1466,1414,10,1284,1285,1292,0,1466,1467,1414,10,1209,1192,1205,0,1409,1410,1460,10,1205,1192,1193,0,1460,1410,1430,10,1329,1325,1341,0,1426,1462,1386,10,1328,1342,1333,0,1425,1385,1468,10,1323,1324,1340,0,1458,1422,1447,10,1340,1324,1338,0,1447,1422,1421,10,1188,1195,1194,0,1431,1469,1470,10,1352,1204,1206,0,1399,1417,1456,10,1206,1204,1205,0,1456,1417,1460,10,1320,1321,1316,0,1418,1471,1472,10,1316,1321,1319,0,1472,1471,1473,10,1314,1320,1311,0,1416,1418,1440,10,1311,1320,1316,0,1440,1418,1472,10,1284,1288,1285,0,1466,1474,1467,10,1316,1319,1337,0,1472,1473,1448,10,1337,1319,1339,0,1448,1473,1446,10,1309,1312,1338,0,1423,1438,1421,10,1338,1312,1337,0,1421,1438,1448,10,1340,1339,1323,0,1447,1446,1458,10,1323,1339,1330,0,1458,1446,1475,10,1194,1197,1188,0,1470,1457,1431,10,1326,1328,1327,0,1428,1425,1442,10,1327,1328,1333,0,1442,1425,1468,10,1342,1187,1232,0,1385,1384,1476,10,1342,1232,1333,0,1385,1476,1468,10,1333,1232,1230,0,1468,1476,1477,10,1311,1316,1312,0,1440,1472,1438,10,1312,1316,1337,0,1438,1472,1448,10,1274,1277,1279,0,1433,1432,1436,10,1279,1277,1276,0,1436,1432,1478,10,1322,1317,1318,0,1400,1396,1479,10,1318,1317,1300,0,1479,1396,1480,10,1289,1290,1284,0,1481,1482,1466,10,1284,1290,1288,0,1466,1482,1474,10,1357,1358,1245,0,1411,1459,1483,10,1353,1357,1361,0,1453,1411,1484,10,1361,1357,1343,0,1484,1411,1408,10,1295,1285,1287,0,1485,1467,1486,10,1287,1285,1288,0,1486,1467,1474,10,1222,1310,1216,0,1487,1441,1488,10,1216,1310,1213,0,1488,1441,1489,10,1222,1216,1236,0,1487,1488,1490,10,1236,1216,1217,0,1490,1488,1491,10,1334,1230,1232,0,1464,1477,1476,10,1230,1228,1231,0,1477,1492,1443,10,1231,1228,1229,0,1443,1492,1450,10,1332,1267,1336,0,1493,1494,1463,10,1336,1267,1268,0,1463,1494,1495,10,1252,1233,1246,0,224,214,1406,10,1246,1233,1347,0,1406,214,215,10,1345,1306,1361,0,1496,1451,1484,10,1361,1306,1353,0,1484,1451,1453,10,1341,1325,1232,0,1386,1462,1476,10,1232,1325,1334,0,1476,1462,1464,10,1246,1247,1250,0,1406,1407,1444,10,1250,1247,1249,0,1444,1407,1497,10,1223,1224,1309,0,1498,1439,1423,10,1309,1224,1312,0,1423,1439,1438,10,1321,1322,1319,0,1471,1400,1473,10,1319,1322,1318,0,1473,1400,1479,10,1205,1204,1209,0,1460,1417,1409,10,1327,1333,1231,0,1442,1468,1443,10,1231,1333,1230,0,1443,1468,1477,10,1330,1331,1323,0,1475,1427,1458,10,1323,1331,1326,0,1458,1427,1428,10,1249,1247,1245,0,1497,1407,1483,10,1245,1247,1357,0,1483,1407,1411,10,1180,1254,1179,0,226,225,227,10,1179,1254,1255,0,227,225,228,10,1310,1222,1311,0,1441,1487,1440,10,1311,1222,1314,0,1440,1487,1416,10,1365,1292,1295,0,1499,1414,1485,10,1295,1292,1285,0,1485,1414,1467,10,1238,1237,1235,0,1500,1501,1502,10,1274,1289,1280,0,1433,1481,1435,10,1280,1289,1284,0,1435,1481,1466,10,1318,1300,1315,0,1479,1480,1503,10,1315,1300,1299,0,1503,1480,1504,10,1282,1289,1370,0,1505,1481,1506,10,1370,1289,1278,0,1506,1481,1437,10,1303,1270,1271,0,242,103,252,10,1271,1270,1371,0,252,103,106,10,1370,1371,1372,0,1506,106,111,10,1370,1278,1371,0,1506,1437,106,10,1371,1278,1271,0,106,1437,252,10,1282,1283,1290,0,1505,1507,1482,10,1290,1283,1286,0,1482,1507,1508,10,1353,1349,1358,0,1453,1388,1459,10,1358,1349,1241,0,1459,1388,1509,10,1365,1366,1292,0,1499,1510,1414,10,1292,1366,1362,0,1414,1510,1415,10,1290,1286,1288,0,1482,1508,1474,10,1288,1286,1287,0,1474,1508,1486,10,1256,1358,1241,0,1511,1459,1509,10,1230,1334,1228,0,1477,1464,1492,10,1228,1334,1335,0,1492,1464,1465,10,1348,1304,1345,0,251,248,1496,10,1345,1304,1306,0,1496,248,1451,10,1212,1221,1215,0,1512,1449,1513,10,1215,1221,1229,0,1513,1449,1450,10,1290,1289,1282,0,1482,1481,1505,10,1202,1198,1208,0,1514,1515,1516,10,1208,1198,1207,0,1516,1515,1517,10,1184,1348,1345,0,1518,251,1496,10,1276,1305,1275,0,1478,1452,249,10,1207,1210,1208,0,1517,1387,1516,10,1214,1213,1224,0,1519,1489,1439,10,1224,1213,1310,0,1439,1489,1441,10,1349,1210,1359,0,1388,1387,1520,10,1359,1210,1207,0,1520,1387,1517,10,1309,1308,1223,0,1423,1424,1498,10,1223,1308,1221,0,1498,1424,1449,10,1314,1222,1356,0,1416,1487,1419,10,1356,1222,1236,0,1419,1487,1490,10,1194,1195,1203,0,1470,1469,1391,10,1203,1195,1210,0,1391,1469,1387,10,1351,1352,1211,0,1397,1399,1455,10,1211,1352,1206,0,1455,1399,1456,10,1264,1244,1238,0,1521,1522,1500,10,1275,1305,1304,0,249,1452,248,10,1304,1305,1306,0,248,1452,1451,10,1203,1211,1194,0,1391,1455,1470,10,1194,1211,1197,0,1470,1455,1457,10,1283,1282,1273,0,1507,1505,1523,10,1187,1341,1232,0,1384,1386,1476,10,1289,1274,1278,0,1481,1433,1437,10,1278,1274,1279,0,1437,1433,1436,10,1198,1242,1207,0,1515,1524,1517,10,1207,1242,1359,0,1517,1524,1520,10,1273,1368,1369,0,1523,112,1525,10,1262,1264,1259,0,1526,1521,1527,10,1259,1264,1240,0,1527,1521,1528,10,1273,1372,1368,0,1523,111,112,10,1273,1282,1372,0,1523,1505,111,10,1372,1282,1370,0,111,1505,1506,10,1211,1203,1351,0,1455,1391,1397,10,1351,1203,1350,0,1397,1391,1390,10,1305,1276,1298,0,1452,1478,1402,10,1298,1276,1277,0,1402,1478,1432,10,1237,1225,1236,0,1501,1420,1490,10,1236,1225,1356,0,1490,1420,1419,10,1264,1238,1240,0,1521,1500,1528,10,1376,1375,1368,0,108,244,112,10,1368,1375,1369,0,112,244,1525,10,1319,1318,1339,0,1473,1479,1446,10,1339,1318,1315,0,1446,1479,1503,10,1204,1321,1320,0,1417,1471,1418,10,1188,1191,1195,0,1431,1529,1469,10,1190,1191,1188,0,1393,1529,1431,10,1307,1305,1302,0,1454,1452,1401,10,1302,1305,1298,0,1401,1452,1402,10,1239,1199,1257,0,1530,1405,1412,10,1257,1199,1200,0,1412,1405,1394,10,1281,1297,1277,0,1434,1404,1432,10,1277,1297,1298,0,1432,1404,1402,10,1257,1225,1238,0,1412,1420,1500,10,1238,1225,1237,0,1500,1420,1501,10,1220,1227,1261,0,1531,221,1532,10,1261,1227,1226,0,1532,221,222,10,1242,1198,1239,0,1524,1515,1530,10,1239,1198,1199,0,1530,1515,1405,10,1189,1188,1192,0,1395,1431,1410,10,1275,1272,1276,0,249,250,1478,10,1276,1272,1279,0,1478,250,1436,10,1192,1188,1193,0,1410,1431,1430,10,1251,1248,1260,0,1533,1534,1535,10,1260,1248,1262,0,1535,1534,1526,10,1239,1257,1244,0,1530,1412,1522,10,1244,1257,1238,0,1522,1412,1500,10,1188,1197,1196,0,1431,1457,1429,10,1249,1245,1251,0,1497,1483,1533,10,1251,1245,1248,0,1533,1483,1534,10,1241,1349,1359,0,1509,1388,1520,10,1260,1261,1251,0,1535,1532,1533,10,1251,1261,1253,0,1533,1532,1445,10,1258,1220,1260,0,1536,1531,1535,10,1260,1220,1261,0,1535,1531,1532,10,1251,1253,1249,0,1533,1445,1497,10,1249,1253,1250,0,1497,1445,1444,10,1255,1253,1226,0,228,1445,222,10,1226,1253,1261,0,222,1445,1532,10,1239,1244,1242,0,1530,1522,1524,10,1242,1244,1243,0,1524,1522,1537,10,1248,1263,1262,0,1534,1538,1526,10,1262,1263,1264,0,1526,1538,1521,10,1259,1258,1262,0,1527,1536,1526,10,1262,1258,1260,0,1526,1536,1535,10,1198,1202,1199,0,1515,1514,1405,10,1199,1202,1201,0,1405,1514,1392,10,1208,1195,1202,0,1516,1469,1514,10,1202,1195,1191,0,1514,1469,1529,10,1201,1202,1190,0,1392,1514,1393,10,1190,1202,1191,0,1393,1514,1529,10,1322,1321,1352,0,1400,1471,1399,10,1352,1321,1204,0,1399,1471,1417,10,1294,1299,1301,0,1539,1504,1403,10,1301,1299,1300,0,1403,1504,1480,10,1293,1294,1297,0,1540,1539,1404,10,1297,1294,1301,0,1404,1539,1403,10,1317,1354,1302,0,1396,1398,1401,10,1302,1354,1307,0,1401,1398,1454,10,1245,1358,1256,0,1483,1459,1511,10,1353,1355,1349,0,1453,1461,1388,10,1349,1355,1360,0,1388,1461,1389,10,1353,1307,1355,0,1453,1454,1461,10,1355,1307,1354,0,1461,1454,1398,10,1299,1294,1313,0,1504,1539,1541,10,1313,1294,1363,0,1541,1539,1542,10,1317,1302,1300,0,1396,1401,1480,10,1300,1302,1301,0,1480,1401,1403,10,1208,1210,1195,0,1516,1387,1469,10,1209,1204,1356,0,1409,1417,1419,10,1356,1204,1314,0,1419,1417,1416,10,1241,1243,1256,0,1509,1537,1511,10,1256,1243,1263,0,1511,1537,1538,10,1245,1256,1248,0,1483,1511,1534,10,1248,1256,1263,0,1534,1511,1538,10,1238,1235,1240,0,1500,1502,1528,10,1244,1264,1243,0,1522,1521,1537,10,1243,1264,1263,0,1537,1521,1538,10,1242,1243,1359,0,1524,1537,1520,10,1359,1243,1241,0,1520,1537,1509,10,1166,1185,1121,0,1375,1543,1372,10,1156,1133,1181,0,1339,1382,1544,10,1165,1184,1164,0,1377,1545,1378,10,1184,1166,1124,0,1545,1375,1334,10,1134,1182,1167,0,1381,1546,1376,10,1164,1184,1119,0,1378,1545,1380,10,1119,1184,1124,0,1380,1545,1334,10,1182,1134,1181,0,1546,1381,1544,10,1181,1134,1156,0,1544,1381,1339,10,1185,1170,1137,0,1543,218,1379,10,1136,1121,1185,0,1351,1372,1543,10,1136,1185,1137,0,1351,1543,1379,10,1181,1183,1182,0,1547,1548,1549,10,1182,1183,1186,0,1549,1548,1550,10,1184,1345,1166,0,1518,1496,1551,10,1166,1345,1361,0,1551,1496,1484,10,1167,1346,1165,0,1552,110,1553,10,1165,1346,1348,0,1553,110,251,10,1344,1186,1174,0,109,1550,253,10,1174,1186,1183,0,253,1550,1548,10,1347,1170,1343,0,215,213,1408,10,1343,1170,1185,0,1408,213,1554,10,1185,1166,1361,0,1554,1551,1484,10,1361,1343,1185,0,1484,1408,1554,10,1346,1182,1186,0,110,1549,1550,10,1167,1182,1346,0,1552,1549,110,10,1344,1346,1186,0,109,110,1550,10,1348,1184,1165,0,251,1518,1553,10,214,1168,1169,0,232,1555,554,10,214,215,1168,0,232,394,1555,10,215,1120,1168,0,394,395,1555,10,1118,222,355,0,1556,534,397,10,355,228,1118,0,397,538,1556,10,2553,2527,2492,0,1557,1558,1559,10,2492,2527,2526,0,1559,1558,1560,10,2628,2631,2624,0,1561,1562,1563,10,2602,2553,2600,0,1564,1557,1565,10,2600,2553,2492,0,1565,1557,1559,10,219,1367,220,0,1566,107,241,10,1376,219,1377,0,108,1566,243,10,2625,2631,2629,0,1567,1562,1568,10,2629,2631,2628,0,1568,1562,1561,10,1482,2433,1648,0,1569,1570,1571,10,1648,2433,2434,0,1571,1570,1572,10,2632,1716,1695,0,1573,1574,1575,10,1718,1716,1484,0,1576,1574,1577,10,1484,1716,2632,0,1577,1574,1573,10,1695,1485,2632,0,1575,1578,1573,10,1700,1648,1486,0,1579,1580,1581,10,1486,1648,2434,0,1581,1580,1582,10,1744,2056,1753,0,1583,1584,1585,10,1753,2056,1847,0,1585,1584,1586,10,1851,2001,1639,0,1587,1588,1589,10,1639,2001,1643,0,1589,1588,1590,10,1771,1745,1770,0,1591,1592,1593,10,1770,1745,1750,0,1593,1592,1594,10,1646,1774,1751,0,1595,1596,1597,10,1751,1774,2033,0,1597,1596,1598,10,2035,1775,1752,0,1599,1600,1601,10,1644,1645,1777,0,1602,1603,1604,10,1777,1645,1771,0,1604,1603,1591,10,1771,1645,1745,0,1591,1603,1592,10,1769,1751,1767,0,1605,1597,1606,10,1857,1770,1626,0,1607,1593,1608,10,1626,1770,1750,0,1608,1593,1594,10,1751,2033,1767,0,1597,1598,1606,10,1626,1643,1857,0,1608,1590,1607,10,1857,1643,2001,0,1607,1590,1588,10,1744,1769,2056,0,1609,1605,1610,10,2056,1769,1767,0,1610,1605,1606,10,1644,1777,1752,0,1602,1604,1601,10,1752,1777,2035,0,1601,1604,1599,10,1629,1638,1775,0,1611,1612,1613,10,1775,1638,1752,0,1613,1612,1614,10,1629,1775,1627,0,1611,1613,1615,10,1636,1635,1769,0,1616,1617,1618,10,1769,1744,1636,0,1618,1619,1616,10,1769,1647,1751,0,1618,1620,1621,10,1627,1775,1646,0,1615,1613,1622,10,1635,1647,1769,0,1617,1620,1618,10,2336,1488,2358,0,1623,1624,1625,10,2358,1488,1493,0,1625,1624,1626,10,1749,2329,1748,0,1627,1628,1629,10,1533,1569,1749,0,1630,1631,1632,10,1749,1569,2327,0,1632,1631,1633,10,2335,2356,2377,0,1634,1635,1636,10,2377,2356,1494,0,1636,1635,1637,10,2362,1490,2363,0,1638,1639,1640,10,2363,1490,1491,0,1640,1639,1641,10,2325,2363,1491,0,1642,1640,1641,10,1490,2370,1747,0,1639,1643,1644,10,2370,1490,2362,0,1643,1639,1638,10,2369,1492,2329,0,1645,1646,1628,10,1492,2369,2326,0,1646,1645,1647,10,2326,2369,2363,0,1647,1645,1648,10,2327,2329,1749,0,1649,1628,1627,10,2058,2327,1555,0,1650,1633,1651,10,1555,2327,1569,0,1651,1633,1631,10,1748,2329,1492,0,1629,1628,1646,10,1489,1494,2334,0,1652,1637,1653,10,2334,1494,2356,0,1653,1637,1635,10,2357,2376,2334,0,1654,1655,1653,10,2334,2376,1489,0,1653,1655,1652,10,2332,1493,2370,0,1656,1626,1643,10,1493,2332,2358,0,1626,1656,1625,10,2336,2377,1488,0,1623,1636,1624,10,1497,1495,2376,0,1657,1658,1659,10,2376,1495,1489,0,1659,1658,1660,10,1534,1559,2326,0,1661,1662,1663,10,2326,1559,1492,0,1663,1662,1664,10,1545,1534,1491,0,1665,1661,1666,10,1491,1534,2325,0,1666,1661,1667,10,1534,2326,2325,0,1661,1663,1667,10,2603,2429,2491,0,1668,1669,1670,10,2491,2429,2436,0,1670,1669,1671,10,2436,2429,2430,0,1672,1673,1674,10,2435,2485,1689,0,1675,1676,1677,10,1689,2485,2484,0,1677,1676,1678,10,2510,2491,1487,0,1679,1670,1680,10,1487,2491,2436,0,1680,1670,1671,10,1487,2438,2510,0,1680,1681,1679,10,2510,2438,2512,0,1679,1681,1682,10,2484,2513,1689,0,1678,1683,1677,10,1689,2513,2437,0,1677,1683,1684,10,2438,1487,1741,0,1685,1686,1687,10,1480,2436,2430,0,1688,1689,1690,10,1687,1689,1676,0,1691,1692,1693,10,1689,2437,1676,0,1692,1694,1693,10,2437,2438,1677,0,1694,1685,1695,10,1677,2438,1741,0,1695,1685,1687,10,1676,2437,1677,0,1693,1694,1695,10,1480,1487,2436,0,1688,1686,1689,10,2492,2526,2434,0,1559,1560,1696,10,2434,2526,1486,0,1696,1560,1697,10,2553,2559,2527,0,1557,1698,1558,10,2631,2630,2632,0,1562,1699,1700,10,2632,2630,1484,0,1700,1699,1701,10,2560,2532,2559,0,1702,1703,1698,10,2559,2532,2529,0,1698,1703,1704,10,2559,2604,2560,0,1698,1705,1702,10,2553,2602,2559,0,1557,1564,1698,10,2559,2602,2604,0,1698,1564,1705,10,1367,219,1376,0,107,1566,108,10,2624,1486,2526,0,1563,1697,1560,10,2559,2529,2528,0,1698,1704,1706,10,2492,2434,2600,0,1559,1696,1565,10,2600,2434,2433,0,1565,1696,1707,10,1418,1417,1424,0,1708,1709,1710,10,1424,1417,1425,0,1710,1709,1711,10,1448,1450,1452,0,1712,1713,1714,10,1452,1450,1453,0,1714,1713,1715,10,1408,1405,1395,0,1716,1717,1718,10,1395,1405,1391,0,1718,1717,1719,10,1407,1465,1406,0,1720,1721,1722,10,1406,1465,1408,0,1722,1721,1716,10,1458,1457,1729,0,1723,1724,1725,10,1729,1457,1731,0,1725,1724,1726,10,1403,1404,1577,0,1727,1728,1729,10,1455,1402,1459,0,1730,1731,1732,10,1423,1444,1443,0,1733,1734,1735,10,1443,1444,1441,0,1735,1734,1736,10,1437,1439,1434,0,1737,1738,1739,10,1434,1439,1438,0,1739,1738,1740,10,1457,1432,1459,0,1724,1741,1732,10,1459,1432,1433,0,1732,1741,1742,10,1443,1410,1418,0,1735,1743,1708,10,1410,1411,1416,0,1743,1744,1745,10,1459,1433,1397,0,1732,1742,1746,10,1397,1433,1436,0,1746,1742,1747,10,1450,1421,1449,0,1713,1748,1749,10,1449,1421,1442,0,1749,1748,1750,10,1421,1450,1456,0,1748,1713,1751,10,1456,1450,1448,0,1751,1713,1712,10,1440,1439,1463,0,1752,1738,1753,10,1463,1439,1462,0,1753,1738,1754,10,1425,1422,1414,0,1711,1755,1756,10,1414,1422,1413,0,1756,1755,1757,10,1425,1414,1424,0,1711,1756,1710,10,1424,1414,1415,0,1710,1756,1758,10,1460,1432,1458,0,1759,1741,1723,10,1458,1432,1457,0,1723,1741,1724,10,1412,1447,1428,0,1760,1761,1762,10,1428,1447,1429,0,1762,1761,1763,10,1413,1422,1412,0,1757,1755,1760,10,1412,1422,1447,0,1760,1755,1761,10,1451,1423,1415,0,1764,1733,1758,10,1415,1423,1424,0,1758,1733,1710,10,1447,1411,1429,0,1761,1744,1763,10,1429,1411,1461,0,1763,1744,1765,10,1455,1401,1398,0,1730,1766,1767,10,1398,1401,1393,0,1767,1766,1768,10,1417,1410,1416,0,1709,1743,1745,10,1392,1396,1436,0,1769,1770,1747,10,1436,1396,1397,0,1747,1770,1746,10,1392,1421,1396,0,1769,1748,1770,10,1396,1421,1456,0,1770,1748,1751,10,1443,1441,1410,0,1735,1736,1743,10,1453,1451,1454,0,1715,1764,1771,10,1447,1422,1411,0,1761,1755,1744,10,1411,1422,1416,0,1744,1755,1745,10,1393,1401,1420,0,1768,1766,1772,10,1420,1401,1472,0,1772,1766,1773,10,1408,1465,1405,0,1716,1721,1717,10,1405,1465,1464,0,1717,1721,1774,10,1467,1464,1420,0,1775,1774,1772,10,1391,1405,1466,0,1719,1717,1776,10,1466,1405,1468,0,1776,1717,1777,10,1464,1467,1405,0,1774,1775,1717,10,1405,1467,1468,0,1717,1775,1777,10,1420,1472,1419,0,1772,1773,1778,10,1419,1472,1394,0,1778,1773,1779,10,1429,1461,1427,0,1763,1765,1780,10,1427,1461,1446,0,1780,1765,1781,10,1450,1449,1453,0,1713,1749,1715,10,1453,1449,1451,0,1715,1749,1764,10,1472,1456,1394,0,1773,1751,1779,10,1394,1456,1448,0,1779,1751,1712,10,1444,1440,1441,0,1734,1752,1736,10,1441,1440,1463,0,1736,1752,1753,10,1439,1437,1462,0,1738,1737,1754,10,1462,1437,1435,0,1754,1737,1782,10,1462,1435,1410,0,1754,1782,1743,10,1430,1433,1426,0,1783,1742,1784,10,1426,1433,1432,0,1784,1742,1741,10,1417,1416,1425,0,1709,1745,1711,10,1425,1416,1422,0,1711,1745,1755,10,1400,1404,1471,0,1785,1728,1786,10,1446,1410,1445,0,1781,1743,1787,10,1427,1446,1431,0,1780,1781,1788,10,1431,1446,1445,0,1788,1781,1787,10,1431,1445,1437,0,1788,1787,1737,10,1437,1445,1435,0,1737,1787,1782,10,1435,1445,1410,0,1782,1787,1743,10,1441,1463,1410,0,1736,1753,1743,10,1401,1396,1472,0,1766,1770,1773,10,1472,1396,1456,0,1773,1770,1751,10,1465,1407,1393,0,1721,1720,1768,10,1393,1407,1398,0,1768,1720,1767,10,1397,1396,1455,0,1746,1770,1730,10,1455,1396,1401,0,1730,1770,1766,10,1393,1420,1465,0,1768,1772,1721,10,1465,1420,1464,0,1721,1772,1774,10,1395,1473,1399,0,1718,1789,1790,10,1391,1473,1395,0,1719,1789,1718,10,1443,1418,1423,0,1735,1708,1733,10,1423,1418,1424,0,1733,1708,1710,10,1449,1442,1444,0,1749,1750,1734,10,1444,1442,1440,0,1734,1750,1752,10,1449,1444,1451,0,1749,1734,1764,10,1451,1444,1423,0,1764,1734,1733,10,1469,1579,1476,0,1791,1792,1793,10,1439,1440,1438,0,1738,1752,1740,10,1438,1440,1442,0,1740,1752,1750,10,1426,1427,1430,0,1784,1780,1783,10,1430,1427,1431,0,1783,1780,1788,10,1434,1436,1430,0,1739,1747,1783,10,1430,1436,1433,0,1783,1747,1742,10,1434,1438,1436,0,1739,1740,1747,10,1436,1438,1392,0,1747,1740,1769,10,1426,1432,1428,0,1784,1741,1762,10,1428,1432,1460,0,1762,1741,1759,10,1434,1430,1437,0,1739,1783,1737,10,1437,1430,1431,0,1737,1783,1788,10,1428,1429,1426,0,1762,1763,1784,10,1426,1429,1427,0,1784,1763,1780,10,1438,1442,1392,0,1740,1750,1769,10,1392,1442,1421,0,1769,1750,1748,10,1446,1461,1410,0,1781,1765,1743,10,1589,1593,1400,0,1794,1795,1785,10,1400,1593,1592,0,1785,1795,1796,10,1381,1477,1382,0,1797,1798,1799,10,1382,1477,1383,0,1799,1798,1800,10,1380,1382,1385,0,1801,1799,1802,10,1385,1382,1383,0,1802,1799,1800,10,1384,1380,1386,0,1803,1801,1804,10,1386,1380,1385,0,1804,1801,1802,10,1383,1477,1385,0,1800,1798,1802,10,1385,1477,1556,0,1802,1798,1805,10,1381,1389,1477,0,1797,1806,1798,10,1478,1454,1415,0,1807,1771,1758,10,1415,1454,1451,0,1758,1771,1764,10,1471,1589,1400,0,1786,1794,1785,10,2409,2392,1483,0,1808,1809,1810,10,1483,2392,1482,0,1810,1809,1569,10,1625,1639,1706,0,1811,1812,1813,10,1713,1711,1708,0,1814,1815,1816,10,1708,1711,1659,0,1816,1815,1817,10,1654,1661,1663,0,1818,1819,1820,10,1631,1652,1413,0,1821,1822,1757,10,1413,1652,1414,0,1757,1822,1756,10,1515,1521,1532,0,1823,1824,1825,10,1532,1521,1519,0,1825,1824,1826,10,1660,1661,1713,0,1827,1819,1814,10,1713,1661,1712,0,1814,1819,1828,10,1710,1692,1653,0,1829,1830,1831,10,1653,1692,1709,0,1831,1830,1832,10,1707,1709,1693,0,1833,1832,1834,10,1693,1709,1692,0,1834,1832,1830,10,1707,1660,1708,0,1833,1827,1816,10,1708,1660,1713,0,1816,1827,1814,10,1661,1654,1712,0,1819,1818,1828,10,1707,1708,1709,0,1833,1816,1832,10,1631,1625,1652,0,1821,1811,1822,10,1652,1625,1693,0,1822,1811,1834,10,1625,1706,1693,0,1811,1813,1834,10,1693,1706,1707,0,1834,1813,1833,10,1660,1707,1662,0,1827,1833,1835,10,1662,1707,1706,0,1835,1833,1813,10,1684,1480,1481,0,1836,1688,1837,10,1481,2379,1483,0,1837,1838,1810,10,1483,2379,2409,0,1810,1838,1808,10,1482,2439,2433,0,1569,1839,1570,10,1622,1498,1551,0,1840,1841,1842,10,1403,1577,1469,0,1727,1729,1791,10,1516,1522,1520,0,1843,1844,1845,10,1634,1641,1637,0,1846,1847,1848,10,1525,1619,1618,0,1849,1850,1851,10,1539,1542,1526,0,1852,1853,1854,10,1526,1542,1541,0,1854,1853,1855,10,1618,1619,1621,0,1851,1850,1856,10,1621,1619,1620,0,1856,1850,1857,10,1552,1549,1548,0,1858,1859,1860,10,1501,1536,1580,0,1861,1862,1863,10,1580,1536,1538,0,1863,1862,1864,10,1404,1594,1577,0,1728,1865,1729,10,1618,1495,1525,0,1851,1658,1849,10,1525,1495,1497,0,1849,1658,1657,10,1552,1551,1549,0,1858,1842,1859,10,1549,1551,1550,0,1859,1842,1866,10,1522,1521,1520,0,1844,1824,1845,10,1495,1618,1498,0,1658,1851,1841,10,1498,1618,1621,0,1841,1851,1856,10,2370,1766,1747,0,1643,1867,1644,10,1538,1537,1580,0,1864,1868,1863,10,1542,1537,1543,0,1853,1868,1869,10,1543,1537,1538,0,1869,1868,1864,10,1734,1636,1641,0,1870,1616,1847,10,1623,1633,1630,0,1871,1872,1873,10,1630,1633,1632,0,1873,1872,1874,10,1668,1726,1722,0,1875,1876,1877,10,1625,1631,1632,0,1811,1821,1874,10,1644,1638,1628,0,1878,1612,1879,10,1637,1753,1634,0,1848,1880,1846,10,1730,1729,1731,0,1881,1725,1726,10,1732,1459,1402,0,1882,1732,1731,10,1738,1739,1735,0,1883,1884,1885,10,1735,1739,1736,0,1885,1884,1886,10,1526,1619,1554,0,1854,1850,1887,10,1554,1619,1558,0,1887,1850,1888,10,1592,1580,1537,0,1796,1863,1868,10,1651,1696,1697,0,1889,1890,1891,10,1619,1525,1558,0,1850,1849,1888,10,1623,1630,1412,0,1871,1873,1760,10,1726,1725,1723,0,1876,1892,1893,10,1723,1725,1724,0,1893,1892,1894,10,1628,1722,1727,0,1879,1877,1895,10,1722,1726,1727,0,1877,1876,1895,10,1680,1719,1700,0,1896,1897,1579,10,1700,1719,1681,0,1579,1897,1898,10,1655,1669,1719,0,1899,1900,1901,10,1719,1669,1720,0,1901,1900,1902,10,1687,1676,1686,0,1691,1693,1903,10,1686,1676,1675,0,1903,1693,1904,10,1672,1675,1677,0,1905,1904,1695,10,1677,1675,1676,0,1695,1904,1693,10,1678,1672,1741,0,1906,1905,1687,10,1741,1672,1677,0,1687,1905,1695,10,1688,1742,1683,0,1907,1908,1909,10,1655,1671,1670,0,1910,1911,1912,10,1669,1728,1720,0,1900,1913,1902,10,1526,1541,1619,0,1854,1855,1850,10,1619,1541,1620,0,1850,1855,1857,10,1661,1643,1626,0,1819,1914,1915,10,1642,1647,1657,0,1916,1620,1917,10,1657,1647,1736,0,1917,1620,1886,10,1628,1727,1644,0,1879,1895,1878,10,1730,1575,1729,0,1881,1918,1725,10,1666,1665,1667,0,1919,1920,1921,10,1667,1665,1664,0,1921,1920,1922,10,1728,1725,1740,0,1913,1892,1923,10,1725,1726,1740,0,1892,1876,1923,10,1740,1726,1668,0,1923,1876,1875,10,1728,1669,1725,0,1913,1900,1892,10,1725,1669,1724,0,1892,1900,1894,10,1724,1670,1723,0,1894,1924,1893,10,1723,1670,1665,0,1893,1924,1925,10,1672,1674,1675,0,1905,1926,1904,10,1686,1675,1685,0,1903,1904,1927,10,1685,1675,1674,0,1927,1904,1926,10,1739,1738,1721,0,1884,1883,1928,10,1721,1738,1572,0,1928,1883,1929,10,1581,1574,1584,0,1930,1931,1932,10,1584,1574,1612,0,1932,1931,1933,10,1601,1600,1591,0,1934,1935,1936,10,1581,1656,1595,0,1930,1937,1938,10,1595,1656,1737,0,1938,1937,1939,10,1550,1620,1541,0,1866,1857,1855,10,1526,1554,1539,0,1854,1887,1852,10,1539,1554,1530,0,1852,1887,1940,10,1575,1595,1734,0,1918,1938,1870,10,1536,1602,1538,0,1862,1941,1864,10,1743,1636,1734,0,1942,1616,1870,10,1594,1614,1577,0,1865,1943,1729,10,1577,1614,1613,0,1729,1943,1944,10,1667,1664,1714,0,1921,1922,1945,10,1711,1713,1694,0,1815,1814,1946,10,1694,1713,1712,0,1946,1814,1828,10,1519,1522,1531,0,1826,1844,1947,10,1522,1519,1521,0,1844,1826,1824,10,1566,1605,1608,0,1948,1949,1950,10,1608,1605,1607,0,1950,1949,1951,10,1566,1565,1605,0,1948,1952,1949,10,1605,1565,1604,0,1949,1952,1953,10,1565,1611,1604,0,1952,1954,1953,10,1604,1611,1610,0,1953,1954,1955,10,1560,1508,1565,0,1956,1957,1952,10,1565,1508,1611,0,1952,1957,1954,10,1559,1534,1562,0,1662,1661,1958,10,1562,1534,1546,0,1958,1661,1959,10,1543,1538,1548,0,1869,1864,1860,10,1548,1538,1602,0,1860,1864,1941,10,1637,1641,1636,0,1848,1847,1616,10,1608,1563,1566,0,1950,1960,1948,10,1566,1563,1561,0,1948,1960,1961,10,1735,1736,1635,0,1885,1886,1617,10,1635,1736,1647,0,1617,1886,1620,10,1540,1592,1537,0,1962,1796,1868,10,1680,1700,1485,0,1896,1579,1578,10,1485,1700,1486,0,1578,1579,1581,10,1497,2376,1555,0,1657,1659,1651,10,1555,2376,2058,0,1651,1659,1650,10,1564,1603,1748,0,1963,1964,1965,10,1748,1603,1749,0,1965,1964,1632,10,1559,1564,1492,0,1662,1963,1664,10,1492,1564,1748,0,1664,1963,1965,10,1625,1632,1746,0,1811,1874,1966,10,1485,1695,1680,0,1578,1575,1896,10,1680,1695,1691,0,1896,1575,1967,10,1483,1704,1481,0,1810,1968,1837,10,1481,1704,1684,0,1837,1968,1836,10,1739,1657,1736,0,1884,1917,1886,10,1638,1644,1752,0,1612,1878,1614,10,1625,1746,1639,0,1811,1966,1812,10,1621,1551,1498,0,1856,1842,1841,10,1699,1698,1704,0,1969,1970,1968,10,1704,1698,1703,0,1968,1970,1971,10,1742,1674,1678,0,1908,1926,1906,10,1678,1674,1672,0,1906,1926,1905,10,1683,1684,1703,0,1909,1836,1971,10,1703,1684,1704,0,1971,1836,1968,10,1557,1555,1531,0,1972,1651,1947,10,1531,1555,1569,0,1947,1651,1631,10,2435,1689,1687,0,1973,1692,1691,10,1653,1709,1659,0,1831,1832,1817,10,1659,1709,1708,0,1817,1832,1816,10,1540,1537,1539,0,1962,1868,1852,10,1539,1537,1542,0,1852,1868,1853,10,1539,1530,1540,0,1852,1940,1962,10,1540,1530,1529,0,1962,1940,1974,10,1551,1621,1550,0,1842,1856,1866,10,1550,1621,1620,0,1866,1856,1857,10,1514,1520,1515,0,1975,1845,1823,10,1515,1520,1521,0,1823,1845,1824,10,1507,1504,1502,0,1976,1977,1978,10,1502,1504,1528,0,1978,1977,1979,10,1488,1622,1496,0,1980,1840,1981,10,1502,1528,1524,0,1978,1979,1982,10,1524,1528,1527,0,1982,1979,1983,10,1494,1489,1498,0,1984,1660,1841,10,1498,1489,1495,0,1841,1660,1658,10,1622,1551,1496,0,1840,1842,1981,10,1496,1551,1552,0,1981,1842,1858,10,1508,1560,1512,0,1957,1956,1985,10,1512,1560,1511,0,1985,1956,1986,10,1518,1514,1604,0,1987,1975,1953,10,1604,1514,1605,0,1953,1975,1949,10,1533,1603,1532,0,1630,1964,1825,10,1532,1603,1606,0,1825,1964,1988,10,1516,1517,1524,0,1843,1989,1982,10,1524,1517,1502,0,1982,1989,1978,10,1586,1585,1568,0,1990,1991,1992,10,1568,1585,1503,0,1992,1991,1993,10,1529,1590,1540,0,1974,1994,1962,10,1582,1568,1583,0,1995,1992,1996,10,1583,1568,1573,0,1996,1992,1997,10,1654,1696,1712,0,1818,1890,1828,10,1712,1696,1694,0,1828,1890,1946,10,1716,1718,1717,0,1574,1576,1998,10,1716,1717,1671,0,1574,1998,1911,10,2428,1480,2430,0,1999,1688,1690,10,1671,1717,1715,0,1911,1998,2000,10,2392,2439,1482,0,1809,1839,1569,10,1601,1590,1600,0,1934,1994,1935,10,1600,1590,1529,0,1935,1994,1974,10,1523,1557,1522,0,2001,1972,1844,10,1522,1557,1531,0,1844,1972,1947,10,1595,1575,1581,0,1938,1918,1930,10,1581,1575,1574,0,1930,1918,1931,10,1591,1600,1578,0,1936,1935,2002,10,1578,1600,1587,0,2002,1935,2003,10,1562,1567,1559,0,1958,2004,1662,10,1559,1567,1564,0,1662,2004,1963,10,1561,1560,1566,0,1961,1956,1948,10,1566,1560,1565,0,1948,1956,1952,10,1527,1523,1524,0,1983,2001,1982,10,1522,1516,1523,0,1844,1843,2001,10,1531,1569,1519,0,1947,1631,1826,10,1569,1533,1519,0,1631,1630,1826,10,1519,1533,1532,0,1826,1630,1825,10,1605,1514,1607,0,1949,1975,1951,10,1607,1514,1515,0,1951,1975,1823,10,1513,1511,1561,0,2005,1986,1961,10,1561,1511,1560,0,1961,1986,1956,10,1563,1608,1562,0,1960,1950,1958,10,1562,1608,1567,0,1958,1950,2004,10,1458,1641,1634,0,1723,1847,1846,10,1609,1611,1509,0,2006,1954,2007,10,1509,1611,1508,0,2007,1954,1957,10,1729,1641,1458,0,1725,1847,1723,10,1603,1564,1606,0,1964,1963,1988,10,1606,1564,1567,0,1988,1963,2004,10,1606,1567,1607,0,1988,2004,1951,10,1607,1567,1608,0,1951,2004,1950,10,1516,1524,1523,0,1843,1982,2001,10,1509,1508,1510,0,2007,1957,2008,10,1510,1508,1512,0,2008,1957,1985,10,1666,1750,1745,0,1919,2009,2010,10,1664,1715,1714,0,1922,2000,1945,10,1714,1715,1697,0,1945,2000,1891,10,1704,1483,1699,0,1968,1810,1969,10,1699,1483,1482,0,1969,1810,1569,10,1683,1742,1684,0,1909,1908,1836,10,1684,1742,1678,0,1836,1908,1906,10,1726,1723,1727,0,1876,1893,1895,10,1727,1723,1640,0,1895,1893,2011,10,1662,1661,1660,0,1835,1819,1827,10,1669,1655,1724,0,1900,1899,1894,10,1724,1655,1670,0,1894,1899,1924,10,1648,1682,1482,0,1571,2012,1569,10,1482,1682,1699,0,1569,2012,1969,10,1661,1626,1663,0,1819,1915,1820,10,1663,1626,1750,0,1820,1915,2009,10,1667,1714,1663,0,1921,1945,1820,10,1663,1714,1654,0,1820,1945,1818,10,1696,1654,1697,0,1890,1818,1891,10,1697,1654,1714,0,1891,1818,1945,10,1681,1701,1679,0,2013,2014,2015,10,1679,1701,1673,0,2015,2014,2016,10,1733,1615,1576,0,2017,2018,2019,10,1584,1617,1578,0,1932,2020,2002,10,1578,1617,1591,0,2002,2020,1936,10,1576,1615,1613,0,2019,2018,1944,10,1613,1615,1616,0,1944,2018,2021,10,1574,1733,1612,0,1931,2017,1933,10,1612,1733,1576,0,1933,2017,2019,10,1536,1547,1602,0,1862,2022,1941,10,1615,1733,1732,0,2018,2017,1882,10,1570,1573,1505,0,2023,1997,2024,10,1507,1588,1504,0,1976,2025,1977,10,1550,1541,1549,0,1866,1855,1859,10,1509,1585,1609,0,2007,1991,2006,10,1609,1585,1586,0,2006,1991,1990,10,1504,1588,1582,0,1977,2025,1995,10,1609,1586,1507,0,2006,1990,1976,10,1507,1586,1588,0,1976,1990,2025,10,1737,1738,1743,0,1939,1883,1942,10,1743,1738,1735,0,1942,1883,1885,10,1575,1734,1729,0,1918,1870,1725,10,1729,1734,1641,0,1725,1870,1847,10,1735,1635,1743,0,1885,1617,1942,10,1743,1635,1636,0,1942,1617,1616,10,1738,1737,1572,0,1883,1939,1929,10,1572,1737,1656,0,1929,1939,1937,10,1573,1568,1505,0,1997,1992,2024,10,1505,1568,1503,0,2024,1992,1993,10,1595,1737,1734,0,1938,1939,1870,10,1734,1737,1743,0,1870,1939,1942,10,1661,1662,1643,0,1819,1835,1914,10,1643,1662,1639,0,1914,1835,1812,10,1610,1609,1517,0,1955,2006,1989,10,1517,1609,1502,0,1989,2006,1978,10,1502,1609,1507,0,1978,2006,1976,10,1549,1541,1543,0,1859,1855,1869,10,1543,1541,1542,0,1869,1855,1853,10,1548,1549,1543,0,1860,1859,1869,10,1671,1715,1664,0,1911,2000,1922,10,1666,1667,1750,0,1919,1921,2009,10,1750,1667,1663,0,2009,1921,1820,10,1671,1691,1695,0,1911,1967,1575,10,1716,1671,1695,0,1574,1911,1575,10,1583,1573,1581,0,1996,1997,1930,10,1581,1573,1656,0,1930,1997,1937,10,1583,1584,1582,0,1996,1932,1995,10,1582,1584,1578,0,1995,1932,2002,10,1570,1597,1571,0,2023,2026,2027,10,1632,1633,1746,0,1874,1872,1966,10,1746,1633,1753,0,1966,1872,1880,10,1662,1706,1639,0,1835,1813,1812,10,1753,1633,1634,0,1880,1872,1846,10,1568,1582,1586,0,1992,1995,1990,10,1586,1582,1588,0,1990,1995,2025,10,1727,1640,1644,0,1895,2011,1878,10,1646,1751,1647,0,1622,1621,1620,10,1488,1496,1556,0,1980,1981,1805,10,1578,1587,1582,0,2002,2003,1995,10,1701,1681,1720,0,2014,2013,1902,10,1720,1681,1719,0,1902,2013,1901,10,1703,1705,1683,0,1971,2028,1909,10,1683,1705,1688,0,1909,2028,1907,10,1688,1690,1742,0,1907,2029,1908,10,1742,1690,1674,0,1908,2029,1926,10,1698,1702,1703,0,1970,2030,1971,10,1703,1702,1705,0,1971,2030,2028,10,1682,1679,1699,0,2012,2015,1969,10,1699,1679,1698,0,1969,2015,1970,10,1679,1673,1698,0,2015,2016,1970,10,1698,1673,1702,0,1970,2016,2030,10,1690,1685,1674,0,2029,1927,1926,10,1520,1514,1518,0,1845,1975,1987,10,1520,1518,1516,0,1845,1987,1843,10,1516,1518,1517,0,1843,1987,1989,10,1607,1515,1606,0,1951,1823,1988,10,1606,1515,1532,0,1988,1823,1825,10,1604,1610,1518,0,1953,1955,1987,10,1518,1610,1517,0,1987,1955,1989,10,1535,1513,1563,0,2031,2005,1960,10,1563,1513,1561,0,1960,2005,1961,10,1535,1563,1546,0,2031,1960,1959,10,1546,1563,1562,0,1959,1960,1958,10,1611,1609,1610,0,1954,2006,1955,10,1533,1749,1603,0,1630,1632,1964,10,1622,1494,1498,0,1840,1984,1841,10,1766,2370,1493,0,1867,1643,1626,10,1600,1529,1587,0,1935,1974,2003,10,1503,1585,1596,0,1993,1991,2032,10,1596,1585,1599,0,2032,1991,2033,10,1503,1596,1505,0,1993,2032,2024,10,1505,1596,1598,0,2024,2032,2034,10,1577,1613,1579,0,1729,1944,1792,10,1579,1613,1616,0,1792,1944,2021,10,1730,1731,1733,0,1881,1726,2017,10,1591,1594,1601,0,1936,1865,1934,10,1601,1594,1404,0,1934,1865,1728,10,1572,1656,1570,0,1929,1937,2023,10,1570,1656,1573,0,2023,1937,1997,10,1658,1571,1506,0,2035,2027,2036,10,1506,1571,1597,0,2036,2027,2026,10,1571,1658,1721,0,2027,2035,1928,10,1570,1505,1597,0,2023,2024,2026,10,1597,1505,1598,0,2026,2024,2034,10,1722,1628,1668,0,1877,1879,1875,10,1731,1732,1733,0,1726,1882,2017,10,1570,1571,1572,0,2023,2027,1929,10,1572,1571,1721,0,1929,2027,1928,10,1627,1646,1624,0,1615,1622,2037,10,1657,1739,1658,0,1917,1884,2035,10,1658,1739,1721,0,2035,1884,1928,10,1594,1591,1614,0,1865,1936,1943,10,1614,1591,1617,0,1943,1936,2020,10,1583,1581,1584,0,1996,1930,1932,10,1585,1509,1599,0,1991,2007,2033,10,1599,1509,1510,0,2033,2007,2008,10,1501,1580,1593,0,1861,1863,1795,10,1593,1580,1592,0,1795,1863,1796,10,1612,1576,1614,0,1933,2019,1943,10,1614,1576,1613,0,1943,2019,1944,10,1628,1638,1629,0,1879,1612,1611,10,1642,1624,1647,0,1916,2037,1620,10,1612,1617,1584,0,1933,2020,1932,10,1614,1617,1612,0,1943,2020,1933,10,1646,1647,1624,0,1622,1620,2037,10,1733,1574,1730,0,2017,1931,1881,10,1730,1574,1575,0,1881,1931,1918,10,1697,1715,1717,0,1891,2000,1998,10,1491,1490,1545,0,1666,2038,1665,10,1545,1490,1544,0,1665,2038,2039,10,1544,1490,1747,0,2039,2038,2040,10,1684,1678,1480,0,1836,1906,1688,10,1480,1678,1487,0,1688,1906,1686,10,1487,1678,1741,0,1686,1906,1687,10,1682,1681,1679,0,2041,1898,2042,10,1681,1682,1700,0,1898,2041,1579,10,1700,1682,1648,0,1579,2041,1580,10,1666,1640,1665,0,2043,2011,1925,10,1665,1640,1723,0,1925,2011,1893,10,1640,1666,1645,0,2011,2043,2044,10,1645,1666,1745,0,2044,2043,2045,10,1644,1640,1645,0,1878,2011,2044,10,1554,1527,1530,0,1887,1983,1940,10,1530,1527,1528,0,1940,1983,1979,10,1504,1529,1528,0,1977,1974,1979,10,1528,1529,1530,0,1979,1974,1940,10,1558,1525,1523,0,1888,1849,2001,10,1523,1525,1557,0,2001,1849,1972,10,1555,1557,1497,0,1651,1972,1657,10,1497,1557,1525,0,1657,1972,1849,10,1554,1558,1527,0,1887,1888,1983,10,1529,1504,1587,0,1974,1977,2003,10,1504,1582,1587,0,1977,1995,2003,10,1523,1527,1558,0,2001,1983,1888,10,1636,1744,1637,0,1616,1619,1848,10,1637,1744,1753,0,1848,1619,1880,10,1717,1761,1697,0,1998,2046,1891,10,1500,1756,1599,0,2047,2048,2033,10,1599,1756,1596,0,2033,2048,2032,10,1506,1597,1762,0,2036,2026,2049,10,1762,1597,1499,0,2049,2026,2050,10,1696,1651,1694,0,1890,1889,1946,10,1694,1651,1760,0,1946,1889,2051,10,1760,1649,1659,0,2051,2052,1817,10,1659,1649,1653,0,1817,2052,1831,10,1651,1697,1761,0,1889,1891,2046,10,1659,1711,1760,0,1817,1815,2051,10,1760,1711,1694,0,2051,1815,1946,10,1664,1665,1670,0,1922,1920,1912,10,1691,1655,1680,0,1967,1910,1896,10,1680,1655,1719,0,1896,1910,1897,10,1655,1691,1671,0,1910,1967,1911,10,1670,1671,1664,0,1912,1911,1922,10,1632,1631,1630,0,1874,1821,1873,10,1630,1631,1413,0,1873,1821,1757,10,1418,1410,1417,0,1708,1743,1709,10,1400,1592,1590,0,1785,1796,1994,10,1590,1592,1540,0,1994,1796,1962,10,1400,1590,1404,0,1785,1994,1728,10,1404,1590,1601,0,1728,1994,1934,10,1462,1410,1463,0,1754,1743,1753,10,1461,1411,1410,0,1765,1744,1743,10,1398,1407,1615,0,1767,1720,2018,10,1732,1731,1459,0,1882,1726,1732,10,1459,1731,1457,0,1732,1726,1724,10,1402,1398,1615,0,1731,1767,2018,10,1402,1615,1732,0,1731,2018,1882,10,1475,1471,1404,0,2053,1786,1728,10,1633,1623,1634,0,1872,1871,1846,10,1474,1475,1403,0,2054,2053,1727,10,1403,1475,1404,0,1727,2053,1728,10,1460,1412,1428,0,1759,1760,1762,10,1460,1623,1412,0,1759,1871,1760,10,1623,1460,1634,0,1871,1759,1846,10,1458,1634,1460,0,1723,1846,1759,10,1692,1710,1478,0,1830,1829,1807,10,1478,1710,1479,0,1807,1829,2055,10,1403,1469,1474,0,1727,1791,2054,10,1387,1553,1556,0,2056,2057,1805,10,1556,1553,1386,0,1805,2057,1804,10,1630,1413,1412,0,1873,1757,1760,10,1397,1455,1459,0,1746,1730,1732,10,1652,1693,1478,0,1822,1834,1807,10,1478,1693,1692,0,1807,1834,1830,10,1552,1548,1387,0,1858,1860,2056,10,1455,1398,1402,0,1730,1767,1731,10,1615,1407,1616,0,2018,1720,2021,10,1616,1407,1406,0,2021,1720,1722,10,1544,1747,1477,0,2039,2040,2058,10,1556,1496,1387,0,1805,1981,2056,10,1387,1496,1552,0,2056,1981,1858,10,1556,1386,1385,0,1805,1804,1802,10,1488,1477,1493,0,1980,1798,2059,10,1493,1477,1766,0,2060,2058,2061,10,1477,1488,1556,0,1798,1980,1805,10,1602,1547,1553,0,1941,2022,2057,10,1553,1547,1378,0,2057,2022,2062,10,1548,1602,1387,0,1860,1941,2056,10,1387,1602,1553,0,2056,1941,2057,10,1766,1477,1747,0,2061,2058,2040,10,1478,1415,1652,0,1807,1758,1822,10,1652,1415,1414,0,1822,1758,1756,10,1384,1386,1378,0,1803,1804,2062,10,1378,1386,1553,0,2062,1804,2057,10,1379,1544,1389,0,2063,2064,1806,10,1389,1544,1477,0,1806,2064,1798,10,1399,1579,1616,0,1790,1792,2021,10,1469,1577,1579,0,1791,1729,1792,10,1579,1399,1476,0,1792,1790,1793,10,1476,1399,1473,0,1793,1790,1789,10,1395,1399,1406,0,1718,1790,1722,10,1406,1408,1395,0,1722,1716,1718,10,1616,1406,1399,0,2021,1722,1790,10,1479,1452,1453,0,2055,1714,1715,10,1454,1479,1453,0,1771,2055,1715,10,1478,1479,1454,0,1807,2055,1771,10,1470,1474,1469,0,2065,2054,1791,10,1390,1474,1470,0,2066,2054,2065,10,1469,1476,1470,0,1791,1793,2065,10,2054,1968,1971,0,2067,2068,2069,10,1857,2006,1770,0,1607,2070,1593,10,1770,2006,2005,0,1593,2070,2071,10,1859,2012,2011,0,2072,2073,2074,10,2006,2007,2005,0,2070,2075,2071,10,2005,2007,2009,0,2071,2075,2076,10,2029,2031,1844,0,2077,2078,2079,10,1844,2031,1845,0,2079,2078,2080,10,1845,1776,1844,0,2080,2081,2079,10,2011,1844,1859,0,2074,2079,2072,10,2022,1779,2010,0,2082,2083,2084,10,2010,1779,2026,0,2084,2083,2085,10,1855,1846,2030,0,2086,2087,2088,10,2022,1778,1779,0,2082,2089,2083,10,2026,1849,2010,0,2085,2090,2084,10,2010,1849,2012,0,2084,2090,2073,10,1777,1858,2035,0,1604,2091,1599,10,2035,1858,2034,0,1599,2091,2092,10,1784,1785,1783,0,2093,2094,2095,10,1783,1785,1782,0,2095,2094,2096,10,1830,1866,1831,0,2097,2098,2099,10,1831,1866,1867,0,2099,2098,2100,10,1822,1879,1832,0,2101,2102,2103,10,1832,1879,1881,0,2103,2102,2104,10,1795,1829,1804,0,2105,2106,2107,10,1804,1829,1828,0,2107,2106,2108,10,1835,1834,1830,0,2109,2110,2097,10,1830,1834,1826,0,2097,2110,2111,10,1799,1803,1861,0,2112,2113,2114,10,1861,1803,1786,0,2114,2113,2115,10,1866,1832,1881,0,2098,2103,2104,10,1877,1873,1876,0,2116,2117,2118,10,1876,1873,1867,0,2118,2117,2100,10,1919,1936,1933,0,2119,2120,2121,10,1933,1936,1935,0,2121,2120,2122,10,1883,1886,1901,0,2123,2124,2125,10,1932,1933,1927,0,2126,2121,2127,10,1927,1933,1926,0,2127,2121,2128,10,1910,1913,1914,0,2129,2130,2131,10,1925,1926,1929,0,2132,2128,2133,10,1914,1913,1931,0,2131,2130,2134,10,1917,1921,1918,0,2135,2136,2137,10,1918,1921,1922,0,2137,2136,2138,10,1886,1883,1885,0,2124,2123,2139,10,1886,1900,1898,0,2124,2140,2141,10,1969,1970,1966,0,2142,2143,2144,10,1966,1970,1982,0,2144,2143,2145,10,1927,1928,1930,0,2146,2147,2148,10,1930,1928,1916,0,2148,2147,2149,10,1937,1953,1940,0,2150,2151,2152,10,1983,1985,1967,0,2153,2154,2155,10,1942,1956,1939,0,2156,2157,2158,10,1939,1956,1953,0,2158,2157,2151,10,1810,1812,1814,0,2159,2160,2161,10,1814,1812,1792,0,2161,2160,2162,10,1964,1968,1965,0,2163,2068,2164,10,1964,1967,1968,0,2165,2155,2166,10,1842,1930,1916,0,2167,2148,2149,10,1900,1886,1903,0,2140,2124,2168,10,1903,1886,1889,0,2168,2124,2169,10,1979,1983,1967,0,2170,2153,2155,10,2055,1983,2053,0,2171,2172,2173,10,1912,1915,1928,0,2174,2175,2147,10,1928,1915,1916,0,2147,2175,2149,10,1975,1976,1972,0,2176,2177,2178,10,1972,1976,1973,0,2178,2177,2179,10,1982,1964,1966,0,2145,2165,2144,10,1986,1988,1981,0,2180,2181,2182,10,1981,1988,1980,0,2182,2181,2183,10,1790,1811,1814,0,2184,2185,2161,10,1814,1811,1810,0,2161,2185,2159,10,1791,1806,1864,0,2186,2187,2188,10,1792,1789,1853,0,2189,2190,2191,10,1853,1789,1807,0,2191,2190,2192,10,1852,1814,1853,0,2193,2161,2194,10,1811,1879,1878,0,2185,2102,2195,10,1877,1876,1870,0,2116,2118,2196,10,1870,1876,1871,0,2196,2118,2197,10,1979,1967,1982,0,2170,2155,2145,10,1863,1870,1865,0,2198,2196,2199,10,1865,1870,1871,0,2199,2196,2197,10,1811,1791,1872,0,2185,2186,2200,10,1872,1791,1864,0,2200,2186,2188,10,1863,1865,1869,0,2198,2199,2201,10,1869,1865,1868,0,2201,2199,2202,10,1789,1788,1808,0,2190,2203,2204,10,1950,1940,1953,0,2205,2152,2151,10,1810,1811,1882,0,2159,2185,2206,10,1882,1811,1878,0,2206,2185,2195,10,1950,1951,1954,0,2207,2208,2209,10,1945,1963,1959,0,2210,2211,2212,10,1959,1963,1962,0,2212,2211,2213,10,1976,1969,1973,0,2177,2214,2179,10,1973,1969,1966,0,2179,2214,2215,10,1953,1956,1952,0,2151,2157,2216,10,1952,1956,1955,0,2216,2157,2217,10,1979,1980,1983,0,2218,2183,2172,10,1912,1911,1918,0,2219,2220,2137,10,1918,1911,1920,0,2137,2220,2221,10,1973,1966,1974,0,2179,2215,2222,10,1974,1966,1965,0,2222,2215,2164,10,1987,1974,1978,0,2223,2222,2224,10,1978,1974,1977,0,2224,2222,2225,10,1937,1941,1938,0,2226,2227,2228,10,1928,1910,1912,0,2147,2129,2174,10,1958,1959,1952,0,2229,2212,2230,10,1952,1959,1951,0,2230,2212,2208,10,1982,1970,1981,0,2145,2143,2231,10,1981,1970,1984,0,2231,2143,2232,10,1928,1927,1925,0,2147,2146,2233,10,1898,1901,1886,0,2141,2125,2124,10,1961,1958,1955,0,2234,2229,2235,10,1955,1958,1952,0,2235,2229,2230,10,1947,1942,1944,0,2236,2237,2238,10,1944,1942,1939,0,2238,2237,2239,10,1995,1798,1801,0,2240,2241,2242,10,1842,1802,1930,0,2243,2244,2245,10,1919,1917,1920,0,2119,2135,2221,10,1920,1917,1918,0,2221,2135,2137,10,1902,1890,1901,0,2246,2247,2125,10,1892,1909,1906,0,2248,2249,2250,10,1906,1909,1908,0,2250,2249,2251,10,1885,1884,1891,0,2252,2253,2254,10,1891,1884,1893,0,2254,2253,2255,10,1925,1913,1928,0,2233,2130,2147,10,1944,1939,1946,0,2238,2239,2256,10,1946,1939,1938,0,2256,2239,2228,10,1937,1938,1939,0,2226,2228,2239,10,1898,1899,1902,0,2257,2258,2259,10,1937,1940,1941,0,2150,2152,2260,10,1953,1937,1939,0,2151,2150,2158,10,1979,1981,1980,0,2218,2182,2183,10,1898,1902,1901,0,2141,2246,2125,10,1883,1884,1885,0,2261,2253,2252,10,1883,1887,1884,0,2261,2262,2253,10,1905,1906,1900,0,2263,2250,2264,10,1900,1906,1899,0,2264,2250,2258,10,1905,1900,1907,0,2263,2264,2265,10,1907,1900,1903,0,2265,2264,2266,10,1809,1995,1801,0,2267,2240,2242,10,1790,1814,1852,0,2184,2161,2193,10,2042,1890,2043,0,2268,2269,2270,10,1910,1914,1911,0,2271,2272,2220,10,2055,1985,1983,0,2171,2273,2172,10,1968,1967,1971,0,2166,2155,2274,10,1853,2037,1852,0,2191,2275,2276,10,1852,2037,2036,0,2276,2275,2277,10,1887,1901,1890,0,2278,2125,2247,10,1869,1808,1863,0,2201,2204,2198,10,1926,1933,1935,0,2128,2121,2122,10,1938,1948,1946,0,2228,2279,2256,10,1899,1906,1908,0,2258,2250,2251,10,1779,2024,2026,0,2083,2280,2085,10,2026,2024,2025,0,2085,2280,2281,10,1776,1845,2032,0,2081,2080,2282,10,2032,1845,1846,0,2282,2080,2087,10,1859,2034,1858,0,2072,2092,2091,10,1929,1931,1913,0,2283,2134,2130,10,1941,1940,1943,0,2260,2152,2284,10,1985,2055,1971,0,2273,2171,2069,10,1971,2055,2054,0,2069,2171,2067,10,1958,1961,1957,0,2229,2234,2285,10,1957,1961,1960,0,2285,2234,2286,10,1841,1798,1996,0,2287,2241,2288,10,1996,1798,2000,0,2288,2241,2289,10,1967,1985,1971,0,2155,2154,2274,10,1865,1864,1868,0,2199,2188,2202,10,1868,1864,1806,0,2202,2188,2187,10,1888,1885,1897,0,2290,2252,2291,10,1897,1885,1891,0,2291,2252,2254,10,1848,2015,2018,0,2292,2293,2294,10,2008,2009,2012,0,2295,2076,2073,10,2031,2015,2030,0,2078,2293,2088,10,2030,2015,1848,0,2088,2293,2292,10,1999,1780,1778,0,2296,2297,2089,10,1845,2031,1846,0,2080,2078,2087,10,1846,2031,2030,0,2087,2078,2088,10,2007,2002,2003,0,2075,2298,2299,10,1854,1781,1856,0,2300,2301,2302,10,1943,1954,2051,0,2303,2209,2304,10,2051,1954,2049,0,2304,2209,2305,10,2050,1943,2051,0,2306,2303,2304,10,1883,1901,1887,0,2123,2125,2278,10,1803,1850,1797,0,2113,2307,2308,10,1797,1850,1837,0,2308,2307,2309,10,1910,1928,1913,0,2129,2147,2130,10,1934,1932,1930,0,2310,2126,2245,10,1930,1932,1927,0,2245,2126,2127,10,2011,2029,1844,0,2074,2077,2079,10,1781,1998,1856,0,2301,2311,2302,10,1856,1998,1999,0,2302,2311,2312,10,1783,1782,1781,0,2095,2096,2301,10,1781,1782,1998,0,2301,2096,2311,10,2014,2028,2011,0,2313,2314,2074,10,2011,2028,2029,0,2074,2314,2077,10,1953,1952,1950,0,2151,2216,2205,10,1817,1794,1816,0,2315,2316,2317,10,1943,2050,1941,0,2303,2306,2227,10,1941,2050,2048,0,2227,2306,2318,10,1925,1929,1913,0,2233,2283,2130,10,2046,1931,2047,0,2319,2320,2321,10,1964,1965,1966,0,2163,2164,2215,10,1950,1952,1951,0,2207,2230,2208,10,1871,1872,1865,0,2197,2200,2199,10,1865,1872,1864,0,2199,2200,2188,10,1842,1916,1994,0,2167,2149,2322,10,1994,1916,1915,0,2322,2149,2175,10,1811,1872,1879,0,2185,2200,2102,10,1879,1872,1881,0,2102,2200,2104,10,2048,1948,1941,0,2318,2279,2227,10,1941,1948,1938,0,2227,2279,2228,10,2045,1929,1935,0,2323,2133,2122,10,1935,1929,1926,0,2122,2133,2128,10,2052,1977,1968,0,2324,2225,2068,10,1968,1977,1965,0,2068,2225,2164,10,1951,1959,1962,0,2208,2212,2213,10,1980,1988,1990,0,2183,2181,2325,10,1828,1801,1839,0,2108,2326,2327,10,1839,1801,1840,0,2327,2326,2328,10,1922,1915,1918,0,2138,2329,2137,10,1918,1915,1912,0,2137,2329,2219,10,1925,1927,1926,0,2132,2127,2128,10,1910,1911,1912,0,2271,2220,2219,10,1964,1982,1967,0,2165,2145,2155,10,1898,1900,1899,0,2257,2264,2258,10,1813,1796,1870,0,2330,2331,2196,10,1870,1796,1877,0,2196,2331,2116,10,1825,1824,1880,0,2332,2333,2334,10,1646,1775,1774,0,1595,1600,1596,10,1774,1775,2035,0,1596,1600,1599,10,1768,1851,1746,0,2335,1587,2336,10,1746,1851,1639,0,2336,1587,1589,10,1770,2005,1771,0,1593,2071,1591,10,1771,2005,1772,0,1591,2071,2337,10,1777,1771,1858,0,1604,1591,2091,10,1858,1771,1772,0,2091,1591,2337,10,2046,2044,1931,0,2319,2338,2320,10,1931,2044,1914,0,2320,2338,2272,10,1788,1863,1808,0,2203,2198,2204,10,1911,1923,1920,0,2220,2339,2221,10,2041,1902,1908,0,2340,2259,2251,10,1908,1902,1899,0,2251,2259,2258,10,1885,1888,1886,0,2139,2341,2124,10,1886,1888,1889,0,2124,2341,2169,10,1870,1863,1813,0,2196,2198,2330,10,1813,1863,1788,0,2330,2198,2203,10,2000,1815,1816,0,2289,2342,2317,10,1816,1815,1817,0,2317,2342,2315,10,1989,1986,1984,0,2343,2180,2344,10,1984,1986,1981,0,2344,2180,2182,10,1982,1981,1979,0,2145,2231,2170,10,1984,1809,1829,0,2344,2345,2106,10,1825,1880,1882,0,2346,2347,2206,10,2044,1923,1914,0,2338,2339,2272,10,1914,1923,1911,0,2272,2339,2220,10,1878,1800,1882,0,2195,2348,2206,10,1882,1800,1825,0,2206,2348,2346,10,1827,1826,1833,0,2349,2111,2350,10,1833,1826,1834,0,2350,2111,2110,10,1826,1832,1830,0,2111,2103,2097,10,1830,1832,1866,0,2097,2103,2098,10,1824,1819,1821,0,2333,2351,2352,10,1827,1816,1823,0,2349,2317,2353,10,1833,1996,1827,0,2350,2288,2349,10,1827,1996,2000,0,2349,2288,2289,10,1857,2001,1851,0,1607,1588,1587,10,1872,1871,1881,0,2200,2197,2104,10,1881,1871,1876,0,2104,2197,2118,10,1867,1866,1876,0,2100,2098,2118,10,1876,1866,1881,0,2118,2098,2104,10,1984,1829,1989,0,2344,2106,2343,10,1989,1829,1795,0,2343,2106,2105,10,1796,1787,1877,0,2331,2354,2116,10,1877,1787,1873,0,2116,2354,2117,10,1821,1873,1787,0,2352,2117,2354,10,1873,1821,1820,0,2117,2352,2355,10,1818,1992,1794,0,2356,2357,2316,10,1860,1875,1894,0,2358,2359,2360,10,1894,1875,1897,0,2360,2359,2291,10,1955,1956,1843,0,2217,2157,2361,10,1855,1848,1854,0,2086,2292,2300,10,1854,1848,1783,0,2300,2292,2095,10,1861,1802,1799,0,2114,2244,2112,10,1786,1803,1860,0,2115,2113,2358,10,1957,1944,1945,0,2285,2238,2210,10,1945,1944,1946,0,2210,2238,2256,10,1945,1946,1949,0,2210,2256,2362,10,1949,1946,1948,0,2362,2256,2279,10,1933,1932,1919,0,2121,2126,2119,10,1919,1932,1917,0,2119,2126,2135,10,1919,1924,1936,0,2119,2363,2120,10,1987,1991,1988,0,2223,2364,2181,10,1988,1991,1990,0,2181,2364,2325,10,1972,1973,1987,0,2178,2179,2223,10,1987,1973,1974,0,2223,2179,2222,10,1988,1986,1987,0,2181,2180,2223,10,1987,1986,1972,0,2223,2180,2178,10,1987,1978,1991,0,2223,2224,2364,10,1959,1958,1945,0,2212,2229,2210,10,1945,1958,1957,0,2210,2229,2285,10,1965,1977,1974,0,2164,2225,2222,10,1945,1949,1963,0,2210,2362,2211,10,1975,1795,1976,0,2176,2105,2177,10,1976,1795,1805,0,2177,2105,2365,10,1904,1891,1892,0,2366,2254,2248,10,1892,1891,1893,0,2248,2254,2255,10,1905,1907,1904,0,2263,2265,2366,10,1904,1907,1894,0,2366,2265,2360,10,1919,1920,1924,0,2119,2221,2363,10,1924,1920,1923,0,2363,2221,2339,10,1906,1905,1892,0,2250,2263,2248,10,1892,1905,1904,0,2248,2263,2366,10,1892,1896,1909,0,2248,2367,2249,10,1894,1897,1904,0,2360,2291,2366,10,1904,1897,1891,0,2366,2291,2254,10,1960,1947,1957,0,2286,2236,2285,10,1957,1947,1944,0,2285,2236,2238,10,1932,1934,1917,0,2126,2310,2135,10,1917,1934,1921,0,2135,2310,2136,10,1986,1989,1972,0,2180,2343,2178,10,1972,1989,1975,0,2178,2343,2176,10,1975,1989,1795,0,2176,2343,2105,10,1802,1862,1799,0,2244,2368,2112,10,1820,1821,1875,0,2355,2352,2359,10,1878,1823,1800,0,2195,2353,2348,10,1843,1956,1842,0,2361,2157,2167,10,1842,1956,1942,0,2167,2157,2156,10,1815,1843,1817,0,2342,2361,2315,10,2008,2012,1859,0,2295,2073,2072,10,1816,1794,1800,0,2317,2316,2348,10,1994,1818,1842,0,2322,2356,2167,10,1794,1817,1818,0,2316,2315,2356,10,1818,1817,1842,0,2356,2315,2167,10,1821,1819,1875,0,2352,2351,2359,10,1824,1821,1787,0,2333,2352,2354,10,1800,1823,1816,0,2348,2353,2317,10,1825,1794,1824,0,2332,2369,2333,10,1824,1794,1819,0,2333,2369,2351,10,1861,1786,1921,0,2114,2115,2136,10,1921,1786,1922,0,2136,2115,2138,10,1993,1994,1786,0,2370,2371,2115,10,1961,1805,1960,0,2234,2365,2286,10,1960,1805,1862,0,2286,2365,2368,10,1851,2002,1857,0,1587,2298,1607,10,1857,2002,2006,0,1607,2298,2070,10,2000,1816,1827,0,2289,2317,2349,10,1822,1823,1879,0,2101,2353,2102,10,1879,1823,1878,0,2102,2353,2195,10,2012,2014,2011,0,2073,2313,2074,10,1799,1838,1803,0,2112,2372,2113,10,1803,1838,1850,0,2113,2372,2307,10,2028,2013,2029,0,2314,2373,2077,10,2012,1849,2014,0,2073,2090,2313,10,1873,1820,1867,0,2117,2355,2100,10,1867,1820,1831,0,2100,2355,2099,10,1837,2027,1836,0,2309,2374,2375,10,1836,2027,2023,0,2375,2374,2376,10,1799,1804,1838,0,2112,2107,2372,10,1838,1804,2019,0,2372,2107,2377,10,1820,1797,1831,0,2355,2308,2099,10,1797,1820,1860,0,2308,2355,2358,10,1860,1820,1875,0,2358,2355,2359,10,1860,1803,1797,0,2358,2113,2308,10,2054,2052,1968,0,2067,2324,2068,10,1847,2003,1768,0,1586,2299,2335,10,2056,2057,1847,0,1584,2378,1586,10,1847,2057,2004,0,1586,2378,2379,10,1950,1954,1940,0,2205,2380,2152,10,2049,1954,1962,0,2305,2209,2213,10,1962,1954,1951,0,2213,2209,2208,10,1954,1943,1940,0,2380,2284,2152,10,2053,1983,1990,0,2173,2172,2325,10,1990,1983,1980,0,2325,2172,2183,10,2040,1895,1887,0,2381,2382,2262,10,1887,1895,1884,0,2262,2382,2253,10,1892,1893,1896,0,2248,2255,2367,10,1896,1893,1895,0,2367,2255,2382,10,1884,1895,1893,0,2253,2382,2255,10,2057,2056,1773,0,2383,1610,2384,10,1773,2056,1767,0,2384,1610,1606,10,1753,1847,1746,0,1585,1586,2336,10,1746,1847,1768,0,2336,1586,2335,10,1851,1768,2002,0,1587,2335,2298,10,2002,1768,2003,0,2298,2335,2299,10,1997,1780,2020,0,2385,2297,2386,10,2025,2023,1849,0,2281,2376,2090,10,1849,2023,2014,0,2090,2376,2313,10,1785,1997,1782,0,2387,2385,2388,10,1782,1997,2020,0,2388,2385,2386,10,2015,2013,2016,0,2293,2373,2389,10,2016,2013,2017,0,2389,2373,2390,10,1827,1823,1822,0,2349,2353,2101,10,2013,2015,2029,0,2373,2293,2077,10,2029,2015,2031,0,2077,2293,2078,10,1832,1826,1822,0,2103,2111,2101,10,1822,1826,1827,0,2101,2111,2349,10,2003,1847,2004,0,2299,1586,2379,10,1997,2021,1780,0,2385,2391,2297,10,1839,2019,1828,0,2327,2377,2108,10,1828,2019,1804,0,2108,2377,2107,10,1799,1862,1804,0,2112,2368,2107,10,1862,1805,1804,0,2368,2365,2107,10,1805,1795,1804,0,2365,2105,2107,10,1800,1794,1825,0,2348,2316,2346,10,1786,1907,1993,0,2115,2265,2370,10,1993,1907,1903,0,2370,2265,2266,10,1786,1860,1907,0,2115,2358,2265,10,1907,1860,1894,0,2265,2358,2360,10,1861,1921,1802,0,2114,2136,2244,10,1802,1921,1934,0,2244,2136,2310,10,1842,1817,1843,0,2167,2315,2361,10,1786,1994,1922,0,2115,2371,2138,10,1922,1994,1915,0,2138,2371,2329,10,1942,1947,1842,0,2237,2236,2392,10,1842,1947,1802,0,2392,2236,2244,10,1934,1930,1802,0,2310,2245,2244,10,1969,1976,1843,0,2214,2177,2393,10,1843,1976,1805,0,2393,2177,2365,10,1947,1960,1802,0,2236,2286,2244,10,1802,1960,1862,0,2244,2286,2368,10,1831,1836,1830,0,2099,2375,2097,10,1830,1836,1835,0,2097,2375,2109,10,1797,1837,1831,0,2308,2309,2099,10,1831,1837,1836,0,2099,2309,2375,10,1995,1815,1798,0,2240,2342,2241,10,1798,1815,2000,0,2241,2342,2289,10,1841,1840,1798,0,2287,2394,2241,10,1798,1840,1801,0,2241,2394,2242,10,1970,1995,1984,0,2143,2240,2232,10,1984,1995,1809,0,2232,2240,2267,10,1970,1969,1995,0,2143,2142,2240,10,1995,1969,1843,0,2240,2142,2361,10,1829,1809,1828,0,2106,2345,2108,10,1828,1809,1801,0,2108,2345,2326,10,1955,1843,1961,0,2235,2395,2234,10,1961,1843,1805,0,2234,2395,2365,10,1994,1993,1818,0,2322,2396,2356,10,1815,1995,1843,0,2342,2240,2361,10,1853,1814,1792,0,2194,2161,2162,10,1890,1902,2043,0,2269,2259,2270,10,2043,1902,2041,0,2270,2259,2340,10,1852,2036,2038,0,2276,2277,2397,10,1931,1929,2047,0,2320,2133,2321,10,2047,1929,2045,0,2321,2133,2323,10,2039,1853,1807,0,2398,2191,2192,10,2039,2037,1853,0,2398,2275,2191,10,1789,1808,1807,0,2190,2204,2192,10,1806,1791,1793,0,2187,2186,2399,10,1793,1852,2038,0,2399,2276,2397,10,1790,1852,1791,0,2184,2276,2186,10,1791,1852,1793,0,2186,2276,2399,10,1780,2021,2024,0,2297,2391,2280,10,2007,2010,2009,0,2075,2084,2076,10,2009,2010,2012,0,2076,2084,2073,10,2032,1773,2033,0,2282,2384,1598,10,2033,1773,1767,0,1598,2384,1606,10,1778,2022,2004,0,2089,2082,2379,10,2004,2022,2003,0,2379,2082,2299,10,1782,2020,1998,0,2388,2386,2400,10,1848,1855,2030,0,2292,2086,2088,10,1854,1783,1781,0,2300,2095,2301,10,2004,2057,1778,0,2379,2378,2089,10,1778,2057,1999,0,2089,2378,2296,10,1856,1999,1773,0,2302,2312,2384,10,1773,1999,2057,0,2384,2312,2383,10,2034,1859,1776,0,2092,2072,2081,10,1776,1859,1844,0,2081,2072,2079,10,2018,2016,2019,0,2294,2389,2377,10,2019,2016,1838,0,2377,2389,2372,10,1783,1848,1784,0,2095,2292,2093,10,1784,1848,2018,0,2093,2292,2294,10,2015,2016,2018,0,2293,2389,2294,10,1833,2021,1996,0,2350,2391,2288,10,1778,1780,1779,0,2089,2297,2083,10,1784,2018,1839,0,2093,2294,2327,10,1839,2018,2019,0,2327,2294,2377,10,1833,2024,2021,0,2350,2280,2391,10,2023,2027,2014,0,2376,2374,2313,10,2014,2027,2028,0,2313,2374,2314,10,2027,2017,2028,0,2374,2390,2314,10,2028,2017,2013,0,2314,2390,2373,10,1850,2017,1837,0,2307,2390,2309,10,1837,2017,2027,0,2309,2390,2374,10,1999,1998,1780,0,2296,2400,2297,10,1780,1998,2020,0,2297,2400,2386,10,1849,2026,2025,0,2090,2085,2281,10,1833,1834,2024,0,2350,2110,2280,10,1838,2016,1850,0,2372,2389,2307,10,1850,2016,2017,0,2307,2389,2390,10,1779,1780,2024,0,2083,2297,2280,10,1785,1840,1997,0,2387,2394,2385,10,1997,1840,1841,0,2385,2394,2287,10,1839,1840,1784,0,2327,2328,2093,10,1784,1840,1785,0,2093,2328,2094,10,1997,1841,2021,0,2385,2287,2391,10,2021,1841,1996,0,2391,2287,2288,10,2023,2025,1836,0,2376,2281,2375,10,2025,1835,1836,0,2281,2109,2375,10,1835,2025,1834,0,2109,2281,2110,10,1834,2025,2024,0,2110,2281,2280,10,1776,2032,1774,0,2081,2282,1596,10,1774,2032,2033,0,1596,2282,1598,10,1855,1773,1846,0,2086,2384,2087,10,1846,1773,2032,0,2087,2384,2282,10,2042,2040,1890,0,2268,2381,2269,10,1890,2040,1887,0,2269,2381,2262,10,1790,1791,1811,0,2184,2186,2185,10,1882,1880,1810,0,2206,2347,2159,10,1810,1880,1812,0,2159,2347,2160,10,1874,1796,1813,0,2401,2331,2330,10,1874,1880,1824,0,2401,2334,2333,10,1796,1874,1787,0,2331,2401,2354,10,1824,1787,1874,0,2333,2354,2401,10,1789,1812,1788,0,2190,2402,2203,10,1788,1812,1813,0,2203,2402,2330,10,1792,1812,1789,0,2189,2402,2190,10,1874,1813,1812,0,2401,2330,2402,10,1812,1880,1874,0,2402,2334,2401,10,1992,1819,1794,0,2403,2351,2369,10,1875,1819,1992,0,2359,2351,2403,10,1888,1897,1992,0,2290,2291,2403,10,1992,1897,1875,0,2403,2291,2359,10,1993,1903,1889,0,2396,2168,2169,10,1888,1992,1889,0,2341,2357,2169,10,1889,1992,1993,0,2169,2357,2396,10,1993,1992,1818,0,2396,2357,2356,10,2005,2009,1772,0,2071,2076,2337,10,1772,2009,2008,0,2337,2076,2295,10,2008,1859,1772,0,2295,2072,2337,10,1772,1859,1858,0,2337,2072,2091,10,2003,2022,2007,0,2299,2082,2075,10,2007,2022,2010,0,2075,2082,2084,10,2034,1776,2035,0,2092,2081,1599,10,2035,1776,1774,0,1599,2081,1596,10,1854,1773,1855,0,2300,2384,2086,10,1773,1854,1856,0,2384,2300,2302,10,2002,2007,2006,0,2298,2075,2070,10,2341,2339,2375,0,2404,2405,2406,10,2375,2339,2374,0,2406,2405,2407,10,2375,2333,2356,0,2406,2408,1635,10,2356,2333,2334,0,1635,2408,1653,10,2339,2338,2374,0,2405,2409,2407,10,2374,2338,2345,0,2407,2409,2410,10,2344,2337,2222,0,2411,2412,2413,10,2222,2337,2345,0,2413,2412,2410,10,2220,2263,2061,0,2414,2415,2416,10,2084,2063,2230,0,2417,2418,2419,10,2230,2063,2059,0,2419,2418,2420,10,2264,2257,2162,0,2421,2422,2423,10,2065,2217,2064,0,2424,2425,2426,10,2064,2217,2216,0,2426,2425,2427,10,2066,2218,2065,0,2428,2429,2424,10,2065,2218,2217,0,2424,2429,2425,10,2067,2219,2066,0,2430,2431,2428,10,2066,2219,2218,0,2428,2431,2429,10,2067,2263,2253,0,2430,2415,2432,10,2211,2062,2132,0,2433,2434,2435,10,2259,2260,2249,0,2436,2437,2438,10,2249,2260,2248,0,2438,2437,2439,10,2214,2248,2261,0,2440,2439,2441,10,2261,2248,2260,0,2441,2439,2437,10,2266,2087,2085,0,2442,2443,2444,10,2085,2087,2086,0,2444,2443,2445,10,2249,2223,2259,0,2438,2446,2436,10,2259,2223,2262,0,2436,2446,2447,10,2203,2160,2202,0,2448,2449,2450,10,2340,2220,2360,0,2451,2414,2452,10,2131,2130,2133,0,2453,2454,2455,10,2133,2130,2117,0,2455,2454,2456,10,2117,2213,2133,0,2456,2457,2455,10,2133,2213,2212,0,2455,2457,2458,10,2212,2211,2133,0,2458,2433,2455,10,2133,2211,2131,0,2455,2433,2453,10,2164,2200,2094,0,2459,2460,2461,10,2194,2125,2193,0,2462,2463,2464,10,2193,2125,2115,0,2464,2463,2465,10,2195,2126,2194,0,2466,2467,2462,10,2194,2126,2125,0,2462,2467,2463,10,2160,2203,2161,0,2449,2448,2468,10,2192,2095,2225,0,2469,2470,2471,10,2225,2095,2224,0,2471,2470,2472,10,2225,2226,2192,0,2473,2474,2475,10,2192,2226,2134,0,2475,2474,2476,10,2193,2115,2227,0,2464,2465,2477,10,2227,2115,2228,0,2477,2465,2478,10,2193,2227,2111,0,2479,2480,2481,10,2111,2227,2229,0,2481,2480,2482,10,2240,2244,2241,0,2483,2484,2485,10,2241,2244,2245,0,2485,2484,2486,10,2247,2240,2246,0,2487,2483,2488,10,2246,2240,2241,0,2488,2483,2485,10,2245,2244,2248,0,2486,2484,2439,10,2248,2244,2249,0,2439,2484,2438,10,2190,2229,2245,0,2489,2482,2486,10,2245,2229,2241,0,2486,2482,2485,10,2248,2214,2245,0,2439,2440,2486,10,2245,2214,2190,0,2486,2440,2489,10,2238,2242,2134,0,2490,2491,2476,10,2134,2242,2092,0,2476,2491,2492,10,2189,2223,2244,0,2493,2446,2484,10,2244,2223,2249,0,2484,2446,2438,10,2190,2214,2117,0,2489,2440,2456,10,2117,2214,2213,0,2456,2440,2457,10,2225,2224,2247,0,2471,2472,2487,10,2247,2224,2240,0,2487,2472,2483,10,2134,2226,2238,0,2476,2474,2490,10,2238,2226,2239,0,2490,2474,2494,10,2247,2239,2225,0,2495,2494,2473,10,2225,2239,2226,0,2473,2494,2474,10,2246,2241,2227,0,2488,2485,2480,10,2227,2241,2229,0,2480,2485,2482,10,2132,2250,2131,0,2435,2496,2453,10,2131,2250,2130,0,2453,2496,2454,10,2189,2224,2188,0,2493,2472,2497,10,2188,2224,2095,0,2497,2472,2470,10,2274,2272,2204,0,2498,2499,2500,10,2188,2116,2253,0,2501,2502,2432,10,2253,2116,2219,0,2432,2502,2431,10,2198,2120,2256,0,2503,2504,2505,10,2202,2091,2257,0,2450,2506,2422,10,2163,2090,2091,0,2507,2508,2506,10,2091,2090,2140,0,2506,2508,2509,10,2139,2138,2206,0,2510,2511,2512,10,2204,2272,2091,0,2500,2499,2506,10,2091,2272,2163,0,2506,2499,2507,10,2191,2161,2209,0,2513,2468,2514,10,2209,2161,2203,0,2514,2468,2448,10,2087,2266,2191,0,2443,2442,2513,10,2191,2266,2161,0,2513,2442,2468,10,2158,2127,2270,0,2515,2516,2517,10,2270,2127,2269,0,2517,2516,2518,10,2204,2202,2274,0,2500,2450,2498,10,2274,2202,2160,0,2498,2450,2449,10,2274,2160,2273,0,2498,2449,2519,10,2273,2160,2161,0,2519,2449,2468,10,2251,2159,2252,0,2520,2521,2522,10,2119,2265,2162,0,2523,2524,2423,10,2162,2265,2264,0,2423,2524,2421,10,2251,2268,2127,0,2520,2525,2526,10,2275,2098,2123,0,2527,2528,2529,10,2098,2122,2123,0,2528,2529,2529,10,2136,2109,2123,0,2530,2531,2532,10,2123,2109,2231,0,2532,2531,2533,10,2107,2109,2150,0,2534,2531,2535,10,2150,2109,2137,0,2535,2531,2536,10,2141,2267,2299,0,2525,2537,2538,10,2259,2082,2260,0,2436,2539,2437,10,2260,2082,2077,0,2437,2539,2540,10,2119,2121,2098,0,2523,2541,2528,10,2098,2121,2122,0,2528,2541,2529,10,2135,2108,2103,0,2542,2543,2544,10,2103,2108,2118,0,2544,2543,2545,10,2264,2139,2203,0,2421,2510,2448,10,2203,2139,2209,0,2448,2510,2514,10,2139,2206,2209,0,2510,2512,2514,10,2270,2271,2126,0,2517,2546,2467,10,2126,2271,2243,0,2467,2546,2547,10,2206,2112,2166,0,2512,2548,2549,10,2255,2102,2277,0,2550,2551,2552,10,2277,2102,2101,0,2552,2551,2553,10,2277,2101,2281,0,2552,2553,2554,10,2281,2101,2177,0,2554,2553,2555,10,2255,2277,2179,0,2556,2557,2558,10,2179,2277,2128,0,2558,2557,2559,10,2156,2256,2169,0,2560,2505,2561,10,2185,2145,2183,0,2562,2563,2564,10,2183,2145,2234,0,2564,2563,2565,10,2062,2059,2063,0,2434,2420,2418,10,2305,2170,2306,0,2566,2567,2568,10,2289,2285,2234,0,2569,2570,2571,10,2234,2285,2183,0,2571,2570,2572,10,2235,2144,2182,0,2573,2574,2575,10,2182,2144,2184,0,2575,2574,2576,10,2287,2288,2283,0,2577,2578,2579,10,2283,2288,2097,0,2579,2578,2580,10,2113,2097,2288,0,2581,2582,2583,10,2185,2096,2305,0,2562,2584,2566,10,2305,2096,2170,0,2566,2584,2567,10,2156,2169,2283,0,2560,2561,2579,10,2283,2169,2286,0,2579,2561,2585,10,2169,2168,2286,0,2561,2586,2585,10,2286,2168,2284,0,2585,2586,2587,10,2156,2199,2256,0,2560,2588,2505,10,2235,2182,2287,0,2589,2590,2577,10,2287,2182,2288,0,2577,2590,2578,10,2096,2185,2285,0,2584,2562,2591,10,2285,2185,2183,0,2591,2562,2564,10,2289,2286,2285,0,2569,2585,2570,10,2285,2286,2284,0,2570,2585,2587,10,2235,2234,2144,0,2573,2565,2574,10,2144,2234,2145,0,2574,2565,2563,10,2286,2289,2287,0,2585,2569,2577,10,2101,2102,2177,0,2553,2551,2555,10,2177,2102,2178,0,2555,2551,2592,10,2287,2283,2286,0,2577,2579,2585,10,2187,2232,2293,0,2593,2594,2595,10,2100,2233,2104,0,2596,2597,2598,10,2104,2233,2232,0,2598,2597,2599,10,2154,2151,2152,0,2600,2601,2602,10,2173,2155,2174,0,2603,2604,2605,10,2174,2155,2172,0,2605,2604,2606,10,2233,2099,2232,0,2607,2608,2594,10,2232,2099,2293,0,2594,2608,2595,10,2324,2320,2296,0,2609,2610,2611,10,2174,2172,2290,0,2605,2606,2612,10,2232,2187,2105,0,2594,2593,2613,10,2105,2187,2292,0,2613,2593,2614,10,2105,2104,2232,0,2615,2598,2599,10,2104,2173,2100,0,2598,2603,2596,10,2100,2173,2174,0,2596,2603,2605,10,2267,2317,2319,0,2537,2616,2617,10,2206,2171,2148,0,2512,2618,2619,10,2112,2151,2114,0,2620,2601,2621,10,2114,2151,2178,0,2621,2601,2592,10,2099,2186,2307,0,2608,2622,2623,10,2146,2156,2097,0,2624,2625,2582,10,2301,2303,2145,0,2626,2627,2563,10,2145,2303,2144,0,2563,2627,2574,10,2316,2318,2148,0,2628,2629,2619,10,2148,2318,2181,0,2619,2629,2630,10,2141,2299,2201,0,2631,2632,2633,10,2175,2300,2176,0,2634,2635,2636,10,2176,2300,2297,0,2636,2635,2637,10,2297,2300,2322,0,2637,2635,2638,10,2322,2300,2321,0,2638,2635,2639,10,2142,2321,2319,0,2640,2641,2617,10,2319,2321,2323,0,2617,2641,2642,10,2320,2324,2143,0,2610,2609,2643,10,2143,2324,2322,0,2643,2609,2644,10,2176,2157,2175,0,2636,2645,2634,10,2175,2157,2298,0,2634,2645,2646,10,2157,2201,2298,0,2645,2633,2646,10,2262,2083,2259,0,2447,2647,2436,10,2259,2083,2082,0,2436,2647,2539,10,2076,2073,2075,0,2648,2649,2650,10,2075,2073,2074,0,2650,2649,2651,10,2073,2076,2072,0,2649,2648,2652,10,2072,2076,2077,0,2652,2648,2540,10,2070,2222,2071,0,2653,2413,2654,10,2071,2222,2221,0,2654,2413,2655,10,2220,2373,2078,0,2414,2656,2657,10,2237,2236,2349,0,2658,2659,2660,10,2349,2236,2080,0,2660,2659,2661,10,2064,2060,2065,0,2426,2662,2424,10,2065,2060,2061,0,2424,2662,2416,10,2301,2145,2185,0,2626,2563,2562,10,2311,2307,2291,0,2663,2623,2664,10,2291,2307,2186,0,2664,2623,2622,10,2320,2143,2314,0,2610,2643,2665,10,2319,2313,2142,0,2617,2666,2640,10,2300,2323,2321,0,2635,2667,2639,10,2120,2172,2155,0,2504,2606,2604,10,2109,2136,2137,0,2531,2530,2536,10,2137,2136,2106,0,2536,2530,2668,10,2122,2136,2123,0,2529,2530,2529,10,2187,2308,2292,0,2593,2669,2614,10,2292,2308,2310,0,2614,2669,2670,10,2155,2256,2120,0,2604,2505,2504,10,2297,2322,2324,0,2637,2638,2671,10,2267,2141,2251,0,2537,2525,2520,10,2251,2141,2268,0,2520,2525,2525,10,2287,2289,2235,0,2577,2569,2589,10,2235,2289,2234,0,2589,2569,2571,10,2266,2085,2064,0,2442,2444,2426,10,2064,2085,2060,0,2426,2444,2662,10,2223,2253,2262,0,2446,2672,2447,10,2262,2253,2263,0,2447,2672,2673,10,2269,2127,2268,0,2518,2516,2674,10,2269,2268,2201,0,2518,2674,2633,10,2201,2268,2141,0,2633,2674,2631,10,2206,2148,2181,0,2512,2619,2630,10,2066,2065,2061,0,2428,2424,2416,10,2269,2197,2271,0,2518,2675,2546,10,2272,2274,2164,0,2499,2498,2459,10,2164,2274,2200,0,2459,2498,2460,10,2348,2350,2069,0,2676,2677,2678,10,2069,2350,2353,0,2678,2677,2679,10,2355,2365,2349,0,2680,2681,2660,10,2349,2365,2346,0,2660,2681,2682,10,2079,2083,2263,0,2683,2647,2673,10,2263,2083,2262,0,2673,2647,2447,10,2340,2360,2339,0,2451,2452,2405,10,2339,2360,2338,0,2405,2452,2409,10,2263,2220,2078,0,2415,2414,2657,10,2343,2332,2361,0,2684,1656,2685,10,2350,2347,2353,0,2677,2686,2679,10,2353,2347,2352,0,2679,2686,2687,10,2351,2070,2353,0,2688,2653,2679,10,2353,2070,2354,0,2679,2653,2689,10,2349,2080,2355,0,2660,2661,2680,10,2355,2080,2081,0,2680,2661,2690,10,2354,2074,2069,0,2689,2651,2678,10,2069,2074,2073,0,2678,2651,2649,10,2371,2373,2068,0,2691,2656,2692,10,2068,2373,2220,0,2692,2656,2414,10,2060,2220,2061,0,2662,2414,2416,10,2340,2068,2220,0,2451,2692,2414,10,2366,2347,2346,0,2693,2686,2682,10,2346,2347,2350,0,2682,2686,2677,10,2070,2351,2222,0,2653,2688,2413,10,2222,2351,2344,0,2413,2688,2411,10,2083,2079,2080,0,2647,2683,2661,10,2080,2079,2081,0,2661,2683,2690,10,2340,2341,2368,0,2451,2404,2694,10,2341,2342,2368,0,2404,2695,2694,10,2368,2342,2359,0,2694,2695,2696,10,2296,2148,2172,0,2611,2619,2697,10,2357,2328,2331,0,1654,2698,2699,10,2357,2367,2328,0,1654,2700,2698,10,2338,2360,2086,0,2409,2452,2445,10,2086,2360,2085,0,2445,2452,2444,10,2341,2340,2339,0,2404,2451,2405,10,2337,2374,2345,0,2412,2407,2410,10,2187,2293,2308,0,2593,2595,2669,10,2321,2142,2322,0,2641,2640,2644,10,2322,2142,2143,0,2644,2640,2643,10,2091,2140,2257,0,2506,2509,2422,10,2154,2152,2153,0,2600,2602,2701,10,2251,2127,2159,0,2520,2526,2521,10,2159,2127,2158,0,2521,2526,2702,10,2082,2236,2077,0,2539,2659,2540,10,2077,2236,2072,0,2540,2659,2652,10,2313,2315,2142,0,2666,2703,2640,10,2142,2315,2143,0,2640,2703,2643,10,2105,2292,2294,0,2613,2614,2704,10,2147,2294,2310,0,2705,2704,2670,10,2310,2294,2292,0,2670,2704,2614,10,2174,2290,2100,0,2605,2612,2596,10,2100,2290,2295,0,2596,2612,2706,10,2296,2172,2176,0,2707,2606,2636,10,2176,2172,2157,0,2636,2606,2645,10,2243,2242,2126,0,2547,2491,2467,10,2126,2242,2125,0,2467,2491,2463,10,2170,2167,2147,0,2567,2708,2705,10,2147,2167,2180,0,2705,2708,2709,10,2129,2255,2179,0,2710,2556,2558,10,2267,2251,2181,0,2537,2520,2630,10,2251,2206,2181,0,2520,2512,2630,10,2088,2217,2116,0,2711,2425,2502,10,2116,2217,2218,0,2502,2425,2429,10,2299,2298,2201,0,2632,2646,2633,10,2228,2115,2239,0,2478,2465,2494,10,2239,2115,2238,0,2494,2465,2490,10,2198,2269,2201,0,2503,2518,2633,10,2205,2200,2273,0,2712,2460,2519,10,2273,2200,2274,0,2519,2460,2498,10,2116,2218,2219,0,2502,2429,2431,10,2144,2303,2302,0,2574,2627,2713,10,2170,2206,2146,0,2567,2512,2624,10,2256,2199,2198,0,2505,2588,2503,10,2124,2231,2107,0,2714,2533,2534,10,2107,2231,2109,0,2534,2533,2531,10,2140,2090,2149,0,2509,2508,2715,10,2320,2314,2316,0,2610,2665,2628,10,2282,2166,2279,0,2716,2549,2717,10,2104,2105,2173,0,2598,2615,2603,10,2173,2105,2294,0,2603,2615,2718,10,2317,2313,2319,0,2616,2666,2617,10,2296,2176,2324,0,2707,2636,2671,10,2324,2176,2297,0,2671,2636,2637,10,2189,2188,2223,0,2493,2497,2446,10,2223,2188,2253,0,2446,2497,2672,10,2131,2211,2132,0,2453,2433,2435,10,2067,2253,2219,0,2430,2432,2431,10,2242,2238,2125,0,2491,2490,2463,10,2125,2238,2115,0,2463,2490,2465,10,2138,2139,2118,0,2511,2510,2545,10,2118,2139,2110,0,2545,2510,2719,10,2168,2169,2180,0,2586,2561,2720,10,2180,2256,2155,0,2720,2505,2604,10,2169,2256,2180,0,2561,2505,2720,10,2180,2167,2168,0,2709,2708,2721,10,2138,2152,2112,0,2511,2722,2548,10,2112,2152,2151,0,2548,2722,2723,10,2165,2177,2151,0,2724,2555,2601,10,2151,2177,2178,0,2601,2555,2592,10,2171,2312,2311,0,2618,2725,2663,10,2271,2272,2164,0,2546,2499,2459,10,2204,2091,2202,0,2500,2506,2450,10,2227,2228,2246,0,2477,2478,2726,10,2228,2239,2246,0,2478,2494,2726,10,2246,2239,2247,0,2726,2494,2495,10,2331,2058,2357,0,2699,2727,1654,10,2357,2058,2376,0,1654,2727,1655,10,2058,2331,2327,0,2727,2699,1649,10,2327,2331,2330,0,1649,2699,2728,10,2215,2210,2084,0,2729,2730,2417,10,2084,2210,2063,0,2417,2730,2418,10,2230,2086,2084,0,2419,2445,2417,10,2084,2086,2087,0,2417,2445,2443,10,2255,2129,2254,0,2556,2710,2731,10,2254,2129,2278,0,2731,2710,2732,10,2267,2319,2323,0,2537,2617,2642,10,2304,2184,2302,0,2733,2576,2713,10,2180,2294,2147,0,2709,2704,2705,10,2302,2184,2144,0,2713,2576,2574,10,2124,2276,2231,0,2734,2735,2736,10,2231,2276,2275,0,2736,2735,2527,10,2139,2264,2110,0,2510,2421,2719,10,2110,2264,2265,0,2719,2421,2524,10,2149,2106,2162,0,2715,2668,2423,10,2162,2121,2119,0,2423,2541,2523,10,2108,2138,2118,0,2543,2511,2545,10,2092,2192,2134,0,2492,2475,2476,10,2093,2092,2094,0,2737,2492,2461,10,2094,2092,2196,0,2461,2492,2738,10,2093,2095,2092,0,2737,2739,2492,10,2092,2095,2192,0,2492,2739,2475,10,2242,2243,2092,0,2491,2547,2492,10,2092,2243,2196,0,2492,2547,2738,10,2149,2090,2153,0,2715,2508,2701,10,2153,2090,2089,0,2701,2508,2740,10,2106,2149,2137,0,2668,2715,2536,10,2137,2149,2153,0,2536,2715,2701,10,2201,2120,2198,0,2633,2504,2503,10,2314,2143,2315,0,2665,2643,2703,10,2201,2157,2120,0,2633,2645,2504,10,2120,2157,2172,0,2504,2645,2606,10,2304,2306,2146,0,2733,2568,2624,10,2071,2221,2075,0,2654,2655,2650,10,2364,2372,2362,0,2741,2742,1638,10,2362,2372,2370,0,1638,2742,1643,10,2335,2342,2341,0,1634,2695,2404,10,2069,2353,2354,0,2678,2679,2689,10,2367,2337,2344,0,2700,2412,2411,10,2356,2335,2375,0,1635,1634,2406,10,2375,2335,2341,0,2406,1634,2404,10,2337,2333,2374,0,2412,2408,2407,10,2374,2333,2375,0,2407,2408,2406,10,2071,2075,2074,0,2654,2650,2651,10,2331,2328,2330,0,2699,2698,2728,10,2330,2328,2352,0,2728,2698,2687,10,2326,2363,2325,0,1647,1648,2743,10,2372,2361,2370,0,2742,2685,1643,10,2370,2361,2332,0,1643,2685,1656,10,2347,2329,2352,0,2686,1628,2687,10,2352,2329,2330,0,2687,1628,2728,10,2236,2082,2080,0,2659,2539,2661,10,2080,2082,2083,0,2661,2539,2647,10,2364,2366,2365,0,2741,2744,2745,10,2068,2361,2371,0,2692,2685,2691,10,2371,2361,2372,0,2691,2685,2742,10,2354,2070,2074,0,2689,2653,2651,10,2074,2070,2071,0,2651,2653,2654,10,2367,2334,2333,0,2700,1653,2408,10,2358,2332,2343,0,1625,1656,2684,10,2367,2333,2337,0,2700,2408,2412,10,2336,2342,2335,0,1623,2695,1634,10,2343,2359,2358,0,2684,2696,1625,10,2348,2069,2072,0,2676,2678,2652,10,2072,2069,2073,0,2652,2678,2649,10,2371,2365,2373,0,2691,2745,2656,10,2373,2365,2355,0,2656,2745,2746,10,2348,2072,2237,0,2676,2652,2658,10,2237,2072,2236,0,2658,2652,2659,10,2081,2078,2355,0,2747,2657,2746,10,2355,2078,2373,0,2746,2657,2656,10,2353,2352,2351,0,2679,2687,2688,10,2351,2352,2328,0,2688,2687,2698,10,2149,2162,2140,0,2715,2423,2509,10,2140,2162,2257,0,2509,2423,2422,10,2122,2121,2136,0,2529,2541,2530,10,2293,2309,2308,0,2595,2748,2669,10,2293,2099,2309,0,2595,2608,2748,10,2309,2099,2307,0,2748,2608,2623,10,2151,2154,2165,0,2601,2600,2724,10,2137,2153,2150,0,2536,2701,2535,10,2150,2153,2152,0,2535,2701,2602,10,2231,2275,2123,0,2736,2527,2529,10,2173,2294,2155,0,2603,2718,2604,10,2155,2294,2180,0,2604,2718,2720,10,2182,2184,2288,0,2575,2576,2583,10,2288,2184,2113,0,2583,2576,2581,10,2305,2301,2185,0,2566,2626,2562,10,2233,2186,2099,0,2607,2622,2608,10,2100,2295,2233,0,2596,2706,2597,10,2291,2186,2295,0,2664,2622,2749,10,2295,2186,2233,0,2749,2622,2607,10,2138,2112,2206,0,2511,2548,2512,10,2156,2166,2165,0,2625,2549,2750,10,2147,2312,2171,0,2705,2725,2618,10,2147,2206,2170,0,2705,2512,2567,10,2112,2280,2166,0,2548,2751,2549,10,2278,2112,2254,0,2732,2548,2731,10,2202,2257,2203,0,2450,2422,2448,10,2203,2257,2264,0,2448,2422,2421,10,2162,2106,2121,0,2423,2668,2541,10,2121,2106,2136,0,2541,2668,2530,10,2279,2128,2282,0,2717,2559,2716,10,2282,2128,2277,0,2716,2559,2557,10,2277,2281,2282,0,2557,2752,2716,10,2103,2276,2135,0,2544,2735,2542,10,2135,2276,2124,0,2542,2735,2734,10,2124,2107,2135,0,2734,2753,2542,10,2107,2108,2135,0,2753,2543,2542,10,2199,2156,2154,0,2588,2560,2600,10,2154,2156,2165,0,2600,2560,2724,10,2112,2278,2280,0,2548,2732,2751,10,2156,2283,2097,0,2560,2579,2580,10,2156,2146,2166,0,2625,2624,2549,10,2290,2172,2171,0,2754,2697,2618,10,2166,2280,2279,0,2549,2751,2717,10,2089,2154,2153,0,2740,2600,2701,10,2163,2197,2090,0,2507,2675,2508,10,2090,2197,2089,0,2508,2675,2740,10,2199,2197,2198,0,2588,2675,2503,10,2198,2197,2269,0,2503,2675,2518,10,2271,2164,2196,0,2546,2459,2738,10,2196,2164,2094,0,2738,2459,2461,10,2269,2271,2270,0,2518,2546,2517,10,2271,2196,2243,0,2546,2738,2547,10,2089,2199,2154,0,2740,2588,2600,10,2359,2342,2358,0,2696,2695,1625,10,2358,2342,2336,0,1625,2695,1623,10,2060,2085,2220,0,2662,2444,2414,10,2220,2085,2360,0,2414,2444,2452,10,2081,2079,2078,0,2747,2755,2657,10,2345,2338,2230,0,2410,2409,2419,10,2230,2338,2086,0,2419,2409,2445,10,2334,2367,2357,0,1653,2700,1654,10,2111,2229,2190,0,2481,2482,2489,10,2244,2224,2189,0,2484,2472,2493,10,2224,2244,2240,0,2472,2484,2483,10,2207,2250,2208,0,2756,2496,2757,10,2208,2250,2132,0,2757,2496,2435,10,2212,2258,2211,0,2458,2758,2433,10,2258,2059,2062,0,2758,2420,2434,10,2062,2211,2258,0,2434,2433,2758,10,2206,2166,2146,0,2512,2549,2624,10,2267,2181,2317,0,2537,2630,2616,10,2317,2181,2318,0,2616,2630,2629,10,2112,2114,2254,0,2548,2759,2731,10,2320,2316,2296,0,2610,2628,2611,10,2296,2316,2148,0,2611,2628,2619,10,2107,2150,2108,0,2753,2760,2543,10,2108,2150,2138,0,2543,2760,2511,10,2138,2150,2152,0,2511,2760,2722,10,2079,2263,2078,0,2755,2415,2657,10,2059,2258,2221,0,2420,2758,2655,10,2364,2362,2366,0,2741,1638,2744,10,2366,2362,2363,0,2744,1638,1640,10,2221,2230,2059,0,2655,2419,2420,10,2077,2261,2260,0,2540,2441,2437,10,2335,2377,2336,0,1634,1636,1623,10,2329,2327,2330,0,1628,1649,2728,10,2372,2364,2371,0,2742,2741,2691,10,2371,2364,2365,0,2691,2741,2745,10,2351,2328,2344,0,2688,2698,2411,10,2344,2328,2367,0,2411,2698,2700,10,2172,2148,2171,0,2697,2619,2618,10,2171,2206,2147,0,2618,2512,2705,10,2310,2312,2147,0,2670,2725,2705,10,2206,2251,2252,0,2512,2520,2522,10,2188,2088,2116,0,2501,2711,2502,10,2095,2093,2188,0,2739,2737,2501,10,2188,2093,2088,0,2501,2737,2711,10,2210,2132,2063,0,2730,2435,2418,10,2063,2132,2062,0,2418,2435,2434,10,2217,2088,2216,0,2425,2711,2427,10,2216,2088,2205,0,2427,2711,2712,10,2205,2088,2200,0,2712,2711,2460,10,2200,2088,2094,0,2460,2711,2461,10,2209,2206,2215,0,2514,2512,2729,10,2210,2208,2132,0,2730,2757,2435,10,2205,2273,2216,0,2712,2519,2427,10,2159,2208,2252,0,2521,2757,2522,10,2126,2195,2270,0,2467,2466,2517,10,2270,2195,2158,0,2517,2466,2515,10,2207,2208,2159,0,2756,2757,2521,10,2064,2216,2273,0,2426,2427,2519,10,2161,2266,2273,0,2468,2442,2519,10,2273,2266,2064,0,2519,2442,2426,10,2093,2094,2088,0,2737,2461,2711,10,2159,2158,2207,0,2521,2702,2756,10,2207,2158,2195,0,2756,2702,2761,10,2221,2222,2345,0,2655,2413,2410,10,2084,2087,2215,0,2417,2443,2729,10,2215,2087,2191,0,2729,2443,2513,10,2215,2191,2209,0,2729,2513,2514,10,2252,2210,2206,0,2522,2730,2512,10,2206,2210,2215,0,2512,2730,2729,10,2210,2252,2208,0,2730,2522,2757,10,2113,2146,2097,0,2581,2624,2582,10,2184,2304,2113,0,2576,2733,2581,10,2113,2304,2146,0,2581,2733,2624,10,2306,2170,2146,0,2568,2567,2624,10,2170,2096,2284,0,2567,2584,2762,10,2284,2096,2285,0,2762,2584,2591,10,2284,2168,2170,0,2762,2721,2567,10,2170,2168,2167,0,2567,2721,2708,10,2299,2175,2298,0,2632,2634,2646,10,2267,2323,2299,0,2537,2642,2538,10,2299,2323,2175,0,2632,2667,2634,10,2175,2323,2300,0,2634,2667,2635,10,2258,2075,2221,0,2758,2650,2655,10,2258,2212,2213,0,2758,2458,2457,10,2077,2076,2261,0,2540,2648,2441,10,2261,2076,2258,0,2441,2648,2758,10,2214,2261,2213,0,2440,2441,2457,10,2213,2261,2258,0,2457,2441,2758,10,2258,2076,2075,0,2758,2648,2650,10,2207,2130,2250,0,2756,2454,2496,10,2230,2221,2345,0,2419,2655,2410,10,2190,2117,2111,0,2489,2456,2481,10,2263,2067,2061,0,2415,2430,2416,10,2067,2066,2061,0,2430,2428,2416,10,2346,2350,2237,0,2682,2677,2658,10,2237,2350,2348,0,2658,2677,2676,10,2347,2369,2329,0,2686,1645,1628,10,2349,2346,2237,0,2660,2682,2658,10,2347,2366,2369,0,2686,2693,1645,10,2369,2366,2363,0,1645,2693,1648,10,2366,2346,2365,0,2693,2682,2681,10,2343,2368,2359,0,2684,2694,2696,10,2361,2068,2368,0,2685,2692,2694,10,2368,2068,2340,0,2694,2692,2451,10,2343,2361,2368,0,2684,2685,2694,10,2163,2272,2197,0,2507,2499,2675,10,2197,2272,2271,0,2675,2499,2546,10,2089,2197,2199,0,2740,2675,2588,10,2111,2194,2193,0,2481,2763,2479,10,2117,2130,2111,0,2456,2454,2481,10,2111,2130,2207,0,2481,2454,2756,10,2207,2195,2111,0,2756,2761,2481,10,2111,2195,2194,0,2481,2761,2763,10,2290,2291,2295,0,2754,2664,2749,10,2291,2171,2311,0,2664,2618,2663,10,2171,2291,2290,0,2618,2664,2754,10,2178,2102,2114,0,2592,2551,2621,10,2114,2102,2255,0,2621,2551,2550,10,2282,2281,2166,0,2716,2764,2549,10,2255,2254,2114,0,2556,2731,2765,10,2165,2166,2281,0,2750,2549,2764,10,2165,2281,2177,0,2724,2554,2555,10,2379,2385,2381,0,2766,2767,2767,10,2383,2382,2422,0,2768,2769,2770,10,2415,2409,2389,0,2771,2772,2773,10,2389,2409,2381,0,2773,2772,2767,10,2400,2397,2401,0,2774,2775,2776,10,2401,2397,2399,0,2776,2775,2777,10,2390,2408,2412,0,2778,2779,2780,10,2406,2408,2407,0,2781,2779,2782,10,2407,2408,2388,0,2782,2779,2783,10,2405,2407,2389,0,2784,2782,2773,10,2389,2407,2388,0,2773,2782,2783,10,2395,2421,2419,0,2785,2786,2787,10,2414,2416,2411,0,2788,2789,2790,10,2418,2383,2422,0,2791,2768,2770,10,2394,2417,2431,0,2792,2793,2794,10,2403,2404,2420,0,2795,2796,2797,10,2420,2404,2401,0,2797,2796,2776,10,2410,2419,2421,0,2798,2787,2786,10,2421,2384,2410,0,2786,2799,2798,10,2421,2418,2422,0,2786,2791,2770,10,2411,2390,2412,0,2790,2778,2780,10,2402,2386,2400,0,2800,2801,2774,10,2400,2386,2387,0,2774,2801,2802,10,2391,2390,2416,0,2803,2778,2789,10,2390,2411,2416,0,2778,2790,2789,10,2398,2413,2403,0,2804,2805,2795,10,2403,2413,2406,0,2795,2805,2781,10,2380,2431,2418,0,2806,2794,2791,10,2410,2411,2412,0,2798,2790,2780,10,2384,2421,2414,0,2799,2786,2788,10,2409,2379,2381,0,2772,2766,2767,10,2382,2421,2422,0,2769,2786,2770,10,2420,2395,2398,0,2797,2785,2804,10,2386,2427,2428,0,2801,2807,2808,10,2386,2385,2427,0,2801,2767,2807,10,2427,2385,2379,0,2807,2767,2766,10,2401,2399,2420,0,2776,2777,2797,10,2420,2399,2395,0,2797,2777,2785,10,2404,2403,2407,0,2796,2795,2782,10,2407,2403,2406,0,2782,2795,2781,10,2394,2425,2417,0,2792,2809,2793,10,2426,2423,2424,0,2810,2811,2812,10,2384,2411,2410,0,2799,2790,2798,10,2395,2399,2396,0,2785,2777,2813,10,2396,2399,2397,0,2813,2777,2775,10,2382,2383,2378,0,2769,2768,2814,10,2380,2425,2394,0,2806,2809,2792,10,2419,2413,2398,0,2787,2805,2804,10,2430,2429,2387,0,1674,1673,2802,10,2387,2429,2396,0,2802,1673,2813,10,2382,2414,2421,0,2769,2788,2786,10,2403,2420,2398,0,2795,2797,2804,10,2402,2404,2405,0,2800,2796,2784,10,2405,2404,2407,0,2784,2796,2782,10,2389,2388,2415,0,2773,2783,2771,10,2415,2388,2391,0,2771,2783,2803,10,2400,2387,2397,0,2774,2802,2775,10,2415,2391,2393,0,2771,2803,2815,10,2405,2385,2402,0,2784,2767,2800,10,2402,2385,2386,0,2800,2767,2801,10,2415,2392,2409,0,2771,2816,2772,10,2426,2393,2423,0,2810,2815,2811,10,2387,2386,2430,0,2802,2801,1674,10,2386,2428,2430,0,2801,2808,1674,10,2423,2393,2416,0,2811,2815,2789,10,2416,2393,2391,0,2789,2815,2803,10,2389,2381,2405,0,2773,2767,2784,10,2405,2381,2385,0,2784,2767,2767,10,2416,2378,2423,0,2789,2814,2811,10,2416,2414,2378,0,2789,2788,2814,10,2378,2414,2382,0,2814,2788,2769,10,2397,2387,2396,0,2775,2802,2813,10,2408,2390,2388,0,2779,2778,2783,10,2388,2390,2391,0,2783,2778,2803,10,2395,2380,2421,0,2785,2806,2786,10,2421,2380,2418,0,2786,2806,2791,10,2402,2400,2404,0,2800,2774,2796,10,2404,2400,2401,0,2796,2774,2776,10,2384,2414,2411,0,2799,2788,2790,10,2398,2395,2419,0,2804,2785,2787,10,2412,2413,2410,0,2780,2805,2798,10,2410,2413,2419,0,2798,2805,2787,10,2408,2406,2413,0,2779,2781,2805,10,2408,2413,2412,0,2779,2805,2780,10,2425,2383,2417,0,2809,2768,2793,10,2431,2432,2418,0,2794,2817,2791,10,2417,2432,2431,0,2793,2817,2794,10,2394,2431,2380,0,2792,2794,2806,10,2418,2432,2383,0,2791,2817,2768,10,2383,2432,2417,0,2768,2817,2793,10,2445,2597,2598,0,2818,2819,2820,10,2468,2616,2605,0,2821,2822,2823,10,2461,2606,2468,0,2824,2825,2821,10,2468,2606,2616,0,2821,2825,2822,10,2447,2448,2458,0,2826,2827,2828,10,2458,2448,2459,0,2828,2827,2829,10,2606,2607,2610,0,2825,2830,2831,10,2610,2607,2573,0,2831,2830,2832,10,2608,2578,2607,0,2833,2834,2830,10,2607,2578,2573,0,2830,2834,2832,10,2558,2557,2555,0,2835,2836,2837,10,2555,2557,2554,0,2837,2836,2838,10,2458,2459,2457,0,2828,2829,2839,10,2504,2505,2603,0,2840,2841,1668,10,2603,2505,2599,0,1668,2841,2842,10,2458,2467,2447,0,2828,2843,2826,10,2447,2467,2450,0,2826,2843,2844,10,2505,2613,2599,0,2841,2845,2842,10,2458,2515,2467,0,2828,2846,2843,10,2548,2618,2549,0,2847,2848,2849,10,2570,2576,2462,0,2850,2851,2852,10,2515,2483,2467,0,2846,2853,2843,10,2467,2483,2612,0,2843,2853,2854,10,2594,2565,2580,0,2855,2856,2857,10,2580,2565,2564,0,2857,2856,2858,10,2598,2597,2584,0,2820,2819,2859,10,2584,2597,2585,0,2859,2819,2860,10,2584,2585,2582,0,2859,2860,2861,10,2582,2585,2587,0,2861,2860,2862,10,2454,2446,2451,0,2863,2864,2865,10,2447,2446,2448,0,2826,2864,2827,10,2537,2531,2538,0,2866,2867,2868,10,2538,2531,2534,0,2868,2867,2869,10,2529,2536,2528,0,1704,2870,1706,10,2528,2536,2535,0,1706,2870,2871,10,2566,2482,2567,0,2872,2873,2874,10,2567,2482,2568,0,2874,2873,2875,10,2489,2583,2564,0,2876,2877,2858,10,2564,2583,2580,0,2858,2877,2857,10,2511,2508,2513,0,2878,2879,1683,10,2513,2508,2512,0,1683,2879,1682,10,2594,2596,2593,0,2855,2880,2881,10,2593,2596,2595,0,2881,2880,2882,10,2489,2564,2487,0,2876,2858,2883,10,2487,2564,2479,0,2883,2858,2884,10,2563,2561,2609,0,2885,2886,2887,10,2609,2561,2562,0,2887,2886,2888,10,2624,2526,2628,0,1563,1560,1561,10,2628,2526,2527,0,1561,1560,1558,10,2622,2548,2537,0,2889,2847,2866,10,2537,2548,2541,0,2866,2847,2890,10,2454,2464,2455,0,2863,2891,2892,10,2455,2464,2469,0,2892,2891,2893,10,2579,2580,2582,0,2894,2857,2861,10,2582,2580,2583,0,2861,2857,2877,10,2614,2609,2613,0,2895,2887,2845,10,2504,2510,2508,0,2840,1679,2879,10,2508,2510,2512,0,2879,1679,1682,10,2451,2463,2454,0,2865,2896,2863,10,2454,2463,2464,0,2863,2896,2891,10,2611,2616,2610,0,2897,2822,2831,10,2610,2616,2606,0,2831,2822,2825,10,2591,2592,2590,0,2898,2899,2900,10,2590,2592,2581,0,2900,2899,2901,10,2548,2549,2541,0,2847,2849,2890,10,2541,2549,2542,0,2890,2849,2902,10,2451,2450,2463,0,2865,2844,2896,10,2463,2450,2467,0,2896,2844,2843,10,2585,2597,2581,0,2860,2819,2901,10,2584,2589,2598,0,2859,2903,2820,10,2594,2580,2596,0,2855,2857,2880,10,2596,2580,2579,0,2880,2857,2894,10,2446,2452,2453,0,2864,2904,2905,10,2463,2462,2464,0,2896,2852,2891,10,2464,2462,2608,0,2891,2852,2833,10,2575,2577,2572,0,2906,2907,2908,10,2572,2577,2576,0,2908,2907,2851,10,2570,2567,2576,0,2850,2874,2851,10,2576,2567,2572,0,2851,2874,2908,10,2541,2542,2545,0,2890,2902,2909,10,2595,2575,2593,0,2882,2906,2881,10,2593,2575,2572,0,2881,2906,2908,10,2565,2594,2568,0,2856,2855,2875,10,2568,2594,2593,0,2875,2855,2881,10,2596,2579,2595,0,2880,2894,2882,10,2595,2579,2586,0,2882,2894,2910,10,2452,2446,2455,0,2904,2864,2892,10,2582,2583,2584,0,2861,2877,2859,10,2584,2583,2589,0,2859,2877,2903,10,2598,2490,2445,0,2820,2911,2818,10,2488,2490,2589,0,2912,2911,2903,10,2589,2490,2598,0,2903,2911,2820,10,2593,2572,2568,0,2881,2908,2875,10,2568,2572,2567,0,2875,2908,2874,10,2533,2534,2536,0,2913,2869,2870,10,2536,2534,2531,0,2870,2869,2867,10,2578,2574,2573,0,2834,2914,2832,10,2573,2574,2556,0,2832,2914,2915,10,2545,2547,2541,0,2909,2916,2890,10,2541,2547,2546,0,2890,2916,2917,10,2613,2503,2614,0,2845,2918,2895,10,2478,2485,2471,0,2919,1676,2920,10,2471,2485,2472,0,2920,1676,2921,10,2609,2617,2613,0,2887,2922,2845,10,2613,2617,2599,0,2845,2922,2842,10,2545,2542,2544,0,2909,2902,2923,10,2544,2542,2552,0,2923,2902,2924,10,2591,2486,2473,0,2898,2925,2926,10,2473,2486,2474,0,2926,2925,2927,10,2590,2490,2488,0,2900,2911,2912,10,2487,2486,2489,0,2883,2925,2876,10,2489,2486,2488,0,2876,2925,2912,10,2603,2491,2504,0,1668,1670,2840,10,2504,2491,2510,0,2840,1670,1679,10,2601,2617,2562,0,2928,2922,2888,10,2562,2617,2609,0,2888,2922,2887,10,2597,2490,2581,0,2819,2911,2901,10,2581,2490,2590,0,2901,2911,2900,10,2507,2505,2508,0,2929,2841,2879,10,2508,2505,2504,0,2879,2841,2840,10,2568,2482,2565,0,2875,2873,2856,10,2565,2482,2481,0,2856,2873,2930,10,2577,2575,2578,0,2907,2906,2834,10,2578,2575,2574,0,2834,2906,2914,10,2463,2467,2462,0,2896,2843,2852,10,2583,2489,2589,0,2877,2876,2903,10,2589,2489,2488,0,2903,2876,2912,10,2582,2587,2579,0,2861,2862,2894,10,2579,2587,2586,0,2894,2862,2910,10,2613,2505,2503,0,2845,2841,2918,10,2503,2505,2507,0,2918,2841,2929,10,2513,2512,2437,0,1683,1682,1684,10,2437,2512,2438,0,1684,1682,1681,10,2566,2567,2480,0,2872,2874,2931,10,2480,2567,2570,0,2931,2874,2850,10,2542,2549,2552,0,2902,2849,2924,10,2552,2549,2621,0,2924,2849,2932,10,2496,2493,2495,0,2933,2934,2935,10,2541,2546,2537,0,2890,2917,2866,10,2537,2546,2531,0,2866,2917,2867,10,2535,2546,2627,0,2871,2917,2936,10,2627,2546,2539,0,2936,2917,2937,10,2559,2528,2527,0,1698,1706,1558,10,2527,2528,2628,0,1558,1706,1561,10,2627,2629,2628,0,2936,1568,1561,10,2528,2535,2628,0,1706,2871,1561,10,2628,2535,2627,0,1561,2871,2936,10,2543,2540,2547,0,2938,2939,2916,10,2547,2540,2539,0,2916,2939,2937,10,2499,2605,2614,0,2940,2823,2895,10,2614,2605,2609,0,2895,2823,2887,10,2544,2543,2545,0,2923,2938,2909,10,2545,2543,2547,0,2909,2938,2916,10,2514,2499,2614,0,2941,2940,2895,10,2591,2590,2486,0,2898,2900,2925,10,2486,2590,2488,0,2925,2900,2912,10,2562,2560,2601,0,2888,1702,2928,10,2601,2560,2604,0,2928,1702,1705,10,2619,2571,2586,0,2942,2943,2910,10,2586,2571,2595,0,2910,2943,2882,10,2547,2539,2546,0,2916,2937,2917,10,2460,2466,2456,0,2944,2945,2946,10,2456,2466,2465,0,2946,2945,2947,10,2442,2601,2604,0,2948,2928,1705,10,2533,2532,2561,0,2913,1703,2886,10,2465,2466,2468,0,2947,2945,2821,10,2475,2476,2493,0,2949,2950,2934,10,2493,2476,2495,0,2934,2950,2935,10,2605,2615,2468,0,2823,2951,2821,10,2468,2615,2465,0,2821,2951,2947,10,2565,2481,2564,0,2856,2930,2858,10,2564,2481,2479,0,2858,2930,2884,10,2570,2612,2480,0,2850,2854,2931,10,2480,2612,2494,0,2931,2854,2952,10,2468,2453,2461,0,2821,2905,2824,10,2461,2453,2452,0,2824,2905,2904,10,2464,2608,2469,0,2891,2833,2893,10,2469,2608,2607,0,2893,2833,2830,10,2522,2496,2502,0,2953,2933,2954,10,2532,2560,2561,0,1703,1702,2886,10,2561,2560,2562,0,2886,1702,2888,10,2455,2469,2452,0,2892,2893,2904,10,2452,2469,2461,0,2904,2893,2824,10,2540,2530,2539,0,2939,2955,2937,10,2445,2490,2597,0,2818,2911,2819,10,2536,2531,2535,0,2870,2867,2871,10,2535,2531,2546,0,2871,2867,2917,10,2456,2465,2500,0,2946,2947,2956,10,2500,2465,2615,0,2956,2947,2951,10,2530,2626,2625,0,2955,2957,1567,10,2523,2524,2552,0,2958,2959,2924,10,2552,2524,2544,0,2924,2959,2923,10,2498,2522,2517,0,2960,2953,2961,10,2517,2522,2520,0,2961,2953,2962,10,2530,2625,2629,0,2955,1567,1568,10,2530,2629,2539,0,2955,1568,2937,10,2539,2629,2627,0,2937,1568,2936,10,2606,2461,2607,0,2825,2824,2830,10,2607,2461,2469,0,2830,2824,2893,10,2534,2533,2555,0,2869,2913,2837,10,2555,2533,2561,0,2837,2913,2886,10,2612,2483,2494,0,2854,2853,2952,10,2494,2483,2495,0,2952,2853,2935,10,2522,2498,2496,0,2953,2960,2933,10,2626,2630,2625,0,2957,1699,1567,10,2625,2630,2631,0,1567,1699,1562,10,2571,2574,2595,0,2943,2914,2882,10,2595,2574,2575,0,2882,2914,2906,10,2462,2576,2577,0,2852,2851,2907,10,2446,2453,2449,0,2864,2905,2963,10,2448,2446,2449,0,2827,2864,2963,10,2563,2558,2561,0,2885,2835,2886,10,2561,2558,2555,0,2886,2835,2837,10,2497,2515,2457,0,2964,2846,2839,10,2457,2515,2458,0,2839,2846,2828,10,2555,2554,2534,0,2837,2838,2869,10,2534,2554,2538,0,2869,2838,2868,10,2495,2483,2496,0,2935,2853,2933,10,2496,2483,2515,0,2933,2853,2846,10,2484,2485,2519,0,1678,1676,2965,10,2519,2485,2478,0,2965,1676,2919,10,2457,2456,2497,0,2839,2946,2964,10,2497,2456,2500,0,2964,2946,2956,10,2447,2450,2446,0,2826,2844,2864,10,2532,2533,2529,0,1703,2913,1704,10,2529,2533,2536,0,1704,2913,2870,10,2450,2451,2446,0,2844,2865,2864,10,2520,2506,2518,0,2962,2966,2967,10,2518,2506,2509,0,2967,2966,2968,10,2496,2515,2502,0,2933,2846,2954,10,2502,2515,2497,0,2954,2846,2964,10,2446,2454,2455,0,2864,2863,2892,10,2506,2503,2509,0,2966,2918,2968,10,2509,2503,2507,0,2968,2918,2929,10,2499,2615,2605,0,2940,2951,2823,10,2511,2519,2509,0,2878,2965,2968,10,2509,2519,2518,0,2968,2965,2967,10,2519,2478,2518,0,2965,2919,2967,10,2518,2478,2516,0,2967,2919,2969,10,2509,2507,2511,0,2968,2929,2878,10,2511,2507,2508,0,2878,2929,2879,10,2519,2511,2484,0,2965,2878,1678,10,2484,2511,2513,0,1678,2878,1683,10,2497,2500,2502,0,2964,2956,2954,10,2502,2500,2501,0,2954,2956,2970,10,2522,2521,2520,0,2953,2971,2962,10,2520,2521,2506,0,2962,2971,2966,10,2517,2520,2516,0,2961,2962,2969,10,2516,2520,2518,0,2969,2962,2967,10,2459,2460,2457,0,2829,2944,2839,10,2457,2460,2456,0,2839,2944,2946,10,2449,2453,2460,0,2963,2905,2944,10,2460,2453,2466,0,2944,2905,2945,10,2449,2460,2448,0,2963,2944,2827,10,2448,2460,2459,0,2827,2944,2829,10,2578,2608,2577,0,2834,2833,2907,10,2577,2608,2462,0,2907,2833,2852,10,2550,2554,2551,0,2972,2838,2973,10,2551,2554,2557,0,2973,2838,2836,10,2573,2558,2610,0,2832,2835,2831,10,2610,2558,2563,0,2831,2835,2885,10,2503,2514,2614,0,2918,2941,2895,10,2609,2605,2611,0,2887,2823,2897,10,2611,2605,2616,0,2897,2823,2822,10,2609,2611,2563,0,2887,2897,2885,10,2563,2611,2610,0,2885,2897,2831,10,2573,2556,2558,0,2832,2915,2835,10,2558,2556,2557,0,2835,2915,2836,10,2466,2453,2468,0,2945,2905,2821,10,2467,2612,2462,0,2843,2854,2852,10,2462,2612,2570,0,2852,2854,2850,10,2521,2501,2514,0,2971,2970,2941,10,2514,2501,2499,0,2941,2970,2940,10,2503,2506,2514,0,2918,2966,2941,10,2514,2506,2521,0,2941,2966,2971,10,2496,2498,2493,0,2933,2960,2934,10,2521,2522,2501,0,2971,2953,2970,10,2501,2522,2502,0,2970,2953,2954,10,2499,2501,2615,0,2940,2970,2951,10,2615,2501,2500,0,2951,2970,2956,10,2425,2380,2443,0,2809,2806,2974,10,2415,2439,2392,0,2771,2975,2816,10,2424,2423,2442,0,2812,2811,2976,10,2442,2383,2425,0,2976,2768,2809,10,2393,2426,2440,0,2815,2810,2977,10,2383,2442,2378,0,2768,2976,2814,10,2378,2442,2423,0,2814,2976,2811,10,2415,2393,2439,0,2771,2815,2975,10,2439,2393,2440,0,2975,2815,2977,10,2443,2396,2429,0,2974,2813,1673,10,2395,2443,2380,0,2785,2974,2806,10,2395,2396,2443,0,2785,2813,2974,10,2444,2441,2440,0,2978,2979,2980,10,2440,2441,2439,0,2980,2979,2981,10,2617,2601,2425,0,2922,2928,2982,10,2425,2601,2442,0,2982,2928,2948,10,2604,2602,2424,0,1705,1564,2983,10,2424,2602,2426,0,2983,1564,2984,10,2441,2444,2433,0,2979,2978,1707,10,2433,2444,2600,0,1707,2978,1565,10,2603,2599,2429,0,1668,2842,1669,10,2429,2599,2443,0,1669,2842,2985,10,2443,2617,2425,0,2985,2922,2982,10,2617,2443,2599,0,2922,2985,2842,10,2602,2444,2440,0,1564,2978,2980,10,2426,2602,2440,0,2984,1564,2980,10,2600,2444,2602,0,1565,2978,1564,10,2604,2424,2442,0,1705,2983,2948,10,1480,2428,2427,0,1688,1999,2986,10,1480,2427,1481,0,1688,2986,1837,10,1481,2427,2379,0,1837,2986,1838,10,2377,1622,1488,0,2987,1840,1980,10,1622,2377,1494,0,1840,2987,1984,10,1388,114,111,0,2988,356,254,10,111,114,116,0,254,356,255,10,109,118,1388,0,261,259,2988,10,1388,118,114,0,2988,259,356,10,1467,155,199,0,1775,331,332,10,202,154,1467,0,333,308,1775,10,1467,154,155,0,1775,308,331,10,1468,138,1466,0,1777,273,1776,10,1466,138,124,0,1776,273,274,10,1468,1467,138,0,1777,1775,273,10,138,1467,199,0,273,1775,332,10,206,201,124,0,344,2989,274,10,124,201,1466,0,274,2989,1776,10,1651,432,431,0,1889,567,552,10,489,1649,445,0,624,2052,389,10,445,1649,388,0,389,2052,388,10,1754,246,233,0,2990,560,561,10,329,331,1756,0,590,592,2991,10,1756,331,493,0,2991,592,2992,10,1499,493,330,0,2993,2992,585,10,330,493,331,0,585,2992,592,10,1650,499,422,0,2994,605,235,10,422,499,421,0,235,605,458,10,452,432,1761,0,553,567,2046,10,393,505,239,0,593,612,594,10,239,505,1762,0,594,612,2995,10,496,403,1765,0,2996,432,2997,10,1765,403,475,0,2997,432,477,10,1500,332,1756,0,2998,591,2991,10,1756,332,329,0,2991,591,590,10,1763,425,500,0,2999,587,604,10,500,425,420,0,604,587,481,10,239,1762,330,0,594,2995,585,10,330,1762,1499,0,585,2995,2993,10,1754,491,246,0,2990,618,560,10,246,491,268,0,560,618,589,10,431,429,1651,0,552,500,1889,10,1651,429,1760,0,1889,500,2051,10,1761,501,452,0,2046,609,553,10,1764,383,440,0,3000,616,586,10,440,383,437,0,586,616,588,10,326,234,495,0,352,421,628,10,495,234,1755,0,628,421,3001,10,503,1755,269,0,607,3001,419,10,269,1755,234,0,419,3001,421,10,1765,475,385,0,2997,477,3002,10,385,475,463,0,3002,477,467,10,388,1649,394,0,388,2052,371,10,394,1649,1760,0,371,2052,2051,10,1763,498,425,0,2999,3003,587,10,425,498,423,0,587,3003,461,10,1764,440,498,0,3000,586,3003,10,498,440,423,0,3003,586,461,10,361,403,1759,0,436,432,3004,10,1759,403,496,0,3004,432,2996,10,375,1758,392,0,470,3005,471,10,392,1758,502,0,471,3005,611,10,1758,375,382,0,3005,470,614,10,382,375,357,0,614,470,595,10,362,361,386,0,155,436,615,10,386,361,1759,0,615,436,3004,10,1651,1761,432,0,1889,2046,567,10,394,1760,446,0,371,2051,372,10,446,1760,429,0,372,2051,500,10,463,1757,385,0,467,3006,3002,10,490,1757,455,0,569,3006,453,10,455,1757,463,0,453,3006,467,10,494,243,1500,0,606,564,2998,10,1500,243,332,0,2998,564,591,10,1409,143,183,0,3007,631,270,10,183,143,187,0,270,631,269,10,1470,201,209,0,2065,2989,346,10,209,201,206,0,346,2989,344,10,213,1390,208,0,363,2066,364,10,208,1390,207,0,364,2066,619,10,183,142,1409,0,270,307,3007,10,1470,203,207,0,2065,345,619,10,1390,1470,207,0,2066,2065,619,10,203,1470,209,0,345,2065,346,10,422,1177,1650,0,235,527,2994,10,1650,1177,1176,0,2994,527,3008,10,1177,1227,1176,0,219,221,3009,10,1176,1227,2472,0,3009,221,2921,10,1220,2471,1227,0,1531,2920,221,10,1227,2471,2472,0,221,2920,2921,10,1212,2470,1221,0,1512,3010,1449,10,1221,2470,1223,0,1449,3010,1498,10,1335,2473,1228,0,1465,2926,1492,10,1228,2473,2474,0,1492,2926,2927,10,1228,2474,1229,0,1492,2927,1450,10,1229,2474,1215,0,1450,2927,1513,10,1224,1223,1214,0,1439,1498,1519,10,1214,1223,2470,0,1519,1498,3010,10,2525,1283,1265,0,3011,1507,3012,10,1265,1283,1273,0,3012,1507,1523,10,1237,2476,1235,0,1501,2950,1502,10,1235,2476,2475,0,1502,2950,2949,10,1369,2623,1273,0,1525,3013,1523,10,1273,2623,1265,0,1523,3013,3012,10,1295,2523,1365,0,1485,2958,1499,10,1365,2523,1364,0,1499,2958,3014,10,2473,1335,1268,0,2926,1465,1495,10,1268,1335,1336,0,1495,1465,1463,10,1236,1217,1237,0,1490,1491,1501,10,1237,1217,2476,0,1501,1491,2950,10,1287,2524,1295,0,1486,2959,1485,10,1295,2524,2523,0,1485,2959,2958,10,2623,1369,1373,0,3013,1525,246,10,1373,1369,1375,0,246,1525,244,10,1266,1286,2525,0,3015,1508,3011,10,2525,1286,1283,0,3011,1508,1507,10,1259,1240,2477,0,1527,1528,3016,10,2477,1240,1219,0,3016,1528,3017,10,1286,1266,1287,0,1508,3015,1486,10,1287,1266,2524,0,1486,3015,2959,10,1218,2471,1258,0,3018,2920,1536,10,1258,2471,1220,0,1536,2920,1531,10,1258,1259,1218,0,1536,1527,3018,10,1218,1259,2477,0,3018,1527,3016,10,1240,1235,1219,0,1528,1502,3017,10,1219,1235,2475,0,3017,1502,2949,10,1374,1484,1373,0,247,1701,246,10,1373,1484,2630,0,246,1701,1699,10,1382,1380,111,0,1799,1801,254,10,111,1380,1388,0,254,1801,2988,10,1381,1382,108,0,1797,1799,256,10,108,1382,111,0,256,1799,254,10,1378,122,1384,0,2062,260,1803,10,1384,122,109,0,1803,260,261,10,109,1388,1384,0,261,2988,1803,10,1384,1388,1380,0,1803,2988,1801,10,110,1381,108,0,3019,1797,256,10,1448,142,1394,0,1712,307,1779,10,1394,142,1419,0,1779,307,1778,10,1419,142,202,0,1778,307,333,10,1420,1419,1467,0,1772,1778,1775,10,1467,1419,202,0,1775,1778,333,10,1466,201,1391,0,1776,2989,1719,10,1391,201,1473,0,1719,2989,1789,10,110,492,1379,0,348,350,349,10,1379,1389,110,0,2063,1806,3019,10,110,1389,1381,0,3019,1806,1797,10,213,1589,1471,0,363,1794,1786,10,1475,213,1471,0,2053,363,1786,10,1653,1649,1710,0,1831,2052,1829,10,1710,1649,489,0,1829,2052,624,10,1754,233,1513,0,3020,3021,2005,10,1513,233,1511,0,2005,3021,1986,10,490,1701,1720,0,3022,2014,1902,10,1511,233,1512,0,1986,3021,1985,10,493,1598,1756,0,3023,2034,2048,10,1756,1598,1596,0,2048,2034,2032,10,1598,493,1597,0,2034,3023,2026,10,1597,493,1499,0,2026,3023,2050,10,1686,499,1687,0,1903,3024,1691,10,1687,499,1650,0,1691,3024,3025,10,499,1686,500,0,3024,1903,3026,10,500,1686,1685,0,3026,1903,1927,10,1762,505,1506,0,2049,3027,2036,10,1506,505,1658,0,2036,3027,2035,10,1740,1668,1765,0,1923,1875,3028,10,1765,1668,496,0,3028,1875,3029,10,1685,1690,500,0,1927,2029,3026,10,500,1690,1763,0,3026,2029,3030,10,1754,1513,491,0,3020,2005,3031,10,491,1513,1535,0,3031,2005,2031,10,233,494,1512,0,3021,3032,1985,10,1512,494,1510,0,1985,3032,2008,10,1761,1717,501,0,2046,1998,609,10,1534,1545,1546,0,1661,1665,1959,10,1546,1545,492,0,1959,1665,3033,10,1764,1705,383,0,3034,2028,3035,10,383,1705,1702,0,3035,2028,2030,10,1755,1501,495,0,3001,1861,628,10,495,1501,1593,0,628,1861,1795,10,503,1536,1755,0,607,1862,3001,10,1755,1536,1501,0,3001,1862,1861,10,504,1547,503,0,608,2022,607,10,503,1547,1536,0,607,2022,1862,10,1765,385,1740,0,3028,3036,1923,10,1740,385,1728,0,1923,3036,1913,10,1688,498,1690,0,1907,3037,2029,10,1690,498,1763,0,2029,3037,3030,10,1688,1705,498,0,1907,2028,3037,10,498,1705,1764,0,3037,2028,3034,10,1718,384,1717,0,1576,610,1998,10,1717,384,501,0,1998,610,609,10,1657,1658,502,0,1917,2035,3038,10,502,1658,505,0,3038,2035,3027,10,506,1627,382,0,3039,1615,3040,10,382,1627,1624,0,3040,1615,2037,10,386,1629,506,0,3041,1611,3039,10,506,1629,1627,0,3039,1611,1615,10,1628,1759,1668,0,1879,3042,1875,10,1668,1759,496,0,1875,3042,3029,10,1642,1657,1758,0,1916,1917,3043,10,1758,1657,502,0,3043,1917,3038,10,1758,382,1642,0,3043,3040,1916,10,1642,382,1624,0,1916,3040,2037,10,1759,1628,386,0,3042,1879,3041,10,386,1628,1629,0,3041,1879,1611,10,1673,497,1702,0,2016,3044,2030,10,1702,497,383,0,2030,3044,3035,10,1535,492,491,0,2031,3033,3031,10,1728,385,1757,0,1913,3036,3045,10,490,1720,1757,0,3022,1902,3045,10,1757,1720,1728,0,3045,1902,1913,10,1673,1701,497,0,2016,2014,3044,10,497,1701,490,0,3044,2014,3022,10,492,1535,1546,0,3033,2031,1959,10,1599,1510,1500,0,2033,2008,2047,10,1500,1510,494,0,2047,2008,3032,10,1452,143,1448,0,1714,631,1712,10,1448,143,1409,0,1712,631,3007,10,1473,201,1476,0,1789,2989,1793,10,1476,201,1470,0,1793,2989,2065,10,1474,1390,1475,0,2054,2066,2053,10,1475,1390,213,0,2053,2066,363,10,1710,489,1479,0,1829,624,2055,10,213,495,1589,0,363,628,1794,10,1589,495,1593,0,1794,628,1795,10,1545,1544,492,0,1665,2039,3033,10,1544,1379,492,0,2039,3046,3033,10,1448,1409,142,0,1712,3007,307,10,1479,144,1452,0,2055,630,1714,10,1452,144,143,0,1714,630,631,10,489,144,1479,0,624,630,2055,10,122,1378,504,0,260,2062,608,10,504,1378,1547,0,608,2062,2022,10,1176,2435,1650,0,3047,1973,3025,10,1650,2435,1687,0,3025,1973,1691,10,384,1718,1374,0,610,1576,966,10,1374,1718,1484,0,966,1576,1577,10,2435,1176,2485,0,1675,3009,1676,10,2485,1176,2472,0,1676,3009,2921,10,1213,2566,1216,0,1489,2872,1488,10,1216,2566,2480,0,1488,2872,2931,10,1212,2479,2470,0,1512,2884,3010,10,2470,2479,2481,0,3010,2884,2930,10,1217,1216,2494,0,1491,1488,2952,10,2494,1216,2480,0,2952,1488,2931,10,2486,2487,2474,0,2925,2883,2927,10,2474,2487,1215,0,2927,2883,1513,10,2470,2481,1214,0,3010,2930,1519,10,1214,2481,2482,0,1519,2930,2873,10,2588,2592,1267,0,3048,2899,1494,10,1267,2592,1268,0,1494,2899,1495,10,2530,2540,1265,0,2955,2939,3012,10,1265,2540,2525,0,3012,2939,3011,10,2487,2479,1215,0,2883,2884,1513,10,1215,2479,1212,0,1513,2884,1512,10,2566,1213,2482,0,2872,1489,2873,10,2482,1213,1214,0,2873,1489,1519,10,1265,2623,2530,0,3012,3013,2955,10,2530,2623,2626,0,2955,3013,2957,10,2552,2621,2523,0,2924,2932,2958,10,2523,2621,1364,0,2958,2932,3014,10,2592,2591,1268,0,2899,2898,1495,10,1268,2591,2473,0,1495,2898,2926,10,2476,1217,2495,0,2950,1491,2935,10,2495,1217,2494,0,2935,1491,2952,10,2623,1373,2626,0,3013,246,2957,10,2626,1373,2630,0,2957,246,1699,10,1266,2525,2543,0,3015,3011,2938,10,2543,2525,2540,0,2938,3011,2939,10,1219,2498,2477,0,3017,2960,3016,10,2477,2498,2517,0,3016,2960,2961,10,2543,2544,1266,0,2938,2923,3015,10,1266,2544,2524,0,3015,2923,2959,10,2478,2471,2516,0,2919,2920,2969,10,2516,2471,1218,0,2969,2920,3018,10,2477,2517,1218,0,3016,2961,3018,10,1218,2517,2516,0,3018,2961,2969,10,2498,1219,2493,0,2960,3017,2934,10,2493,1219,2475,0,2934,3017,2949,10,1019,920,870,0,3049,3050,3051,10,851,859,1017,0,3052,3053,3054,10,1056,1059,1054,0,3055,3056,3057,10,1053,1052,1050,0,3058,3059,3060,10,1050,1052,1048,0,3060,3059,3061,10,1047,1046,1044,0,3062,3063,3064,10,2110,2265,2276,0,3065,3066,3067,10,2119,2098,2275,0,3068,3069,3070,10,1047,1044,1045,0,3062,3064,3071,10,844,1017,859,0,3072,3054,3053,10,1053,1049,1051,0,3058,3073,3074,10,1021,1020,920,0,3075,3076,3050,10,1021,920,1019,0,3075,3050,3049,10,1045,1044,1043,0,3071,3064,3077,10,718,719,795,0,3078,3079,3080,10,731,796,732,0,3081,3082,3083,10,791,789,689,0,3084,3085,3086,10,787,785,664,0,3087,3088,3089,10,689,690,791,0,3086,3090,3084,10,777,610,778,0,3091,3092,3093,10,690,704,791,0,3090,3094,3084,10,676,788,677,0,3095,3096,3097,10,636,637,783,0,3098,3099,3100,10,649,784,650,0,3101,3102,3103,10,795,793,718,0,3080,3104,3078,10,703,792,704,0,3105,3106,3094,10,1806,1793,2038,0,3107,3108,3109,10,2036,1806,2038,0,3110,3107,3109,10,796,731,794,0,3082,3081,3111,10,609,610,777,0,3112,3092,3091,10,791,704,792,0,3084,3094,3106,10,788,676,786,0,3096,3095,3113,10,787,665,788,0,3087,3114,3096,10,796,719,732,0,3082,3079,3083,10,792,703,790,0,3106,3105,3115,10,795,719,796,0,3080,3079,3082,10,1054,1059,1058,0,3057,3056,3116,10,1044,1046,1042,0,3064,3063,3117,10,1059,1055,1057,0,3056,3118,3119,10,1056,1055,1059,0,3055,3118,3056,10,860,1016,839,0,3120,3121,3122,10,1016,860,1006,0,3121,3120,3123,10,664,665,787,0,3089,3114,3087,10,788,665,677,0,3096,3114,3097,10,610,549,778,0,3092,3124,3093,10,783,781,636,0,3100,3125,3098,10,2638,2641,2640,0,3126,3127,3128,10,2640,2641,2642,0,3128,3127,3129,10,2644,2640,2643,0,3130,3128,3131,10,2642,2643,2640,0,3129,3131,3128,10,2635,2648,2634,0,3132,3133,3134,10,2633,2636,2648,0,3135,3136,3133,10,2636,2641,2634,0,3136,3127,3137,10,2634,2648,2636,0,3134,3133,3136,10,2110,2276,2118,0,3065,3067,3138,10,2103,2118,2276,0,3139,3138,3067,10,2307,2311,2309,0,3140,3141,3142,10,2315,2313,2318,0,3143,3144,3145,10,2318,2314,2315,0,3145,3146,3143,10,2309,2311,2312,0,3142,3141,3147,10,2306,2304,2303,0,3148,3149,3150,10,2275,2265,2119,0,3070,3066,3068,10,2179,2278,2129,0,3151,3152,3153,10,2301,2305,2303,0,3154,3155,3150,10,2055,2053,1990,0,3156,3157,3158,10,2051,1963,2050,0,3159,3160,3161,10,920,1020,869,0,3050,3076,3162,10,2051,2049,1962,0,3159,3163,3164,10,1924,2047,1936,0,3165,3166,3167,10,2047,2045,1935,0,3166,3168,3169,10,1869,2037,1808,0,3170,3171,3172,10,2054,2055,1978,0,3173,3156,3174,10,1896,2043,1909,0,3175,3176,3177,10,1895,2042,1896,0,3178,3179,3175,10,1908,1909,2043,0,3180,3177,3176,10,1050,1049,1053,0,3060,3073,3058,10,1962,1963,2051,0,3164,3160,3159,10,1978,2055,1991,0,3174,3156,3181,10,1990,1991,2055,0,3158,3181,3156,10,1017,1006,851,0,3054,3123,3052,10,1807,1808,2039,0,3182,3172,3183,10,2036,1869,1868,0,3110,3170,3184,10,1868,1806,2036,0,3184,3107,3110,10,1016,1006,1017,0,3121,3123,3054,10,2046,2047,1924,0,3185,3166,3165,10,2042,1895,2040,0,3179,3178,3186,10,2054,1977,2052,0,3173,3187,3188,10,1948,2050,1949,0,3189,3161,3190,10,1977,2054,1978,0,3187,3173,3174,10,2303,2305,2306,0,3150,3155,3148,10,2312,2308,2309,0,3147,3191,3142,10,2318,2313,2317,0,3145,3144,3192,10,2316,2314,2318,0,3193,3146,3145,10,2280,2278,2179,0,3194,3152,3151,10,2276,2265,2275,0,3067,3066,3070,10,2050,1948,2048,0,3161,3189,3195,10,1935,1936,2047,0,3169,3167,3166,10,2037,1869,2036,0,3171,3170,3110,10,1808,2037,2039,0,3172,3171,3183,10,2042,2043,1896,0,3179,3176,3175,10,2658,2657,2656,0,3196,3197,3198,10,2656,2657,2654,0,3198,3197,3199,10,2661,2658,2659,0,3200,3196,3201,10,2661,2652,2658,0,3200,3202,3196,10,2658,2652,2657,0,3196,3202,3197,10,2649,2660,2656,0,3203,3204,3198,10,2657,2653,2654,0,3197,3205,3199,10,2654,2653,2655,0,3199,3205,3206,10,2660,2659,2656,0,3204,3201,3198,10,2658,2656,2659,0,3196,3198,3201,10,2660,2662,2659,0,3204,3207,3201,10,2657,2650,2653,0,3197,3208,3205,10,2652,2650,2657,0,3202,3208,3197,10,2661,2643,2642,0,3209,3131,3129,10,2645,2649,2644,0,3210,3211,3130,10,2636,2633,2661,0,3136,3135,3209,10,2661,2642,2636,0,3209,3129,3136,10,2636,2642,2641,0,3136,3129,3127,10,2649,2640,2644,0,3211,3128,3130,10,2646,2638,2649,0,3212,3126,3211,10,2649,2638,2640,0,3211,3126,3128,10,2661,2647,2643,0,3209,3213,3131,10,2663,2638,2646,0,3214,3126,3212,10,2662,2643,2647,0,3215,3131,3213,10,2644,2643,2662,0,3130,3131,3215,10,2644,2662,2645,0,3130,3215,3210,10,2663,2637,2638,0,3214,3216,3126,10,2638,2637,2639,0,3126,3216,3217,10,2645,2660,2649,0,3218,3204,3203,10,2652,2661,2633,0,3202,3200,3219,10,2651,2650,2648,0,3220,3221,3222,10,2646,2649,2654,0,3223,3203,3199,10,2654,2649,2656,0,3199,3203,3198,10,2661,2659,2647,0,3200,3201,3224,10,2663,2646,2654,0,3225,3223,3199,10,2662,2647,2659,0,3207,3224,3201,10,2660,2645,2662,0,3204,3218,3207,10,2633,2648,2652,0,3219,3222,3202,10,2650,2652,2648,0,3221,3202,3222,10,16,67,1,0,25,76,3226,10,1313,21,1299,0,1541,3,1504,10,1299,21,1315,0,1504,3,1503,10,25,1332,23,0,17,1493,5,10,23,1332,19,0,5,1493,22,10,75,78,1363,0,62,63,1542,10,1363,78,27,0,1542,63,24,10,1313,20,21,0,1541,23,3,10,21,20,26,0,3,23,4,10,1313,1363,20,0,1541,1542,23,10,20,1363,27,0,23,1542,24,10,18,27,59,0,20,24,61,10,59,27,78,0,61,24,63,10,17,73,16,0,19,59,25,10,16,73,67,0,25,59,76,10,73,17,59,0,59,19,61,10,59,17,18,0,61,19,20,10,42,2653,92,0,50,3227,3228,10,52,56,53,0,36,47,40,10,53,56,2619,0,40,47,2942,10,2569,47,2619,0,3229,3230,2942,10,2619,47,2571,0,2942,3230,2943,10,48,2588,53,0,3231,3048,40,10,53,2588,55,0,40,3048,39,10,57,103,2620,0,49,3232,3233,10,2620,103,99,0,3233,3232,3234,10,53,2619,48,0,40,2942,3231,10,40,39,2655,0,42,33,3235,10,2655,39,28,0,3235,33,41,10,40,2655,42,0,42,3235,50,10,42,2655,2653,0,50,3235,3227,10,2569,2619,51,0,3229,2942,48,10,51,2619,56,0,48,2942,47,10,2569,51,2620,0,3229,48,3233,10,2620,51,57,0,3233,48,49,10,103,57,45,0,3232,49,52,10,45,57,44,0,52,49,44,10,92,46,42,0,3228,51,50,10,42,46,43,0,50,51,43,10,50,1267,25,0,38,1494,17,10,25,1267,1332,0,17,1494,1493,10,50,55,1267,0,38,39,1494,10,1267,55,2588,0,1494,39,3048,10,81,80,1366,0,73,65,1510,10,1366,80,76,0,1510,65,66,10,1,67,74,0,3226,76,77,10,2622,106,107,0,2889,80,82,10,97,94,46,0,96,81,51,10,46,94,45,0,51,81,52,10,2622,99,106,0,2889,3234,80,10,106,99,103,0,80,3234,3232,10,104,101,107,0,93,98,82,10,107,101,2622,0,82,98,2889,10,92,98,46,0,3228,99,51,10,46,98,97,0,51,99,96,10,103,45,106,0,3232,52,80,10,106,45,94,0,80,52,81,10,93,2650,91,0,95,3236,87,10,91,2650,2651,0,87,3236,3237,10,89,91,2651,0,86,87,3237,10,2653,98,92,0,3227,99,3228,10,93,98,2650,0,95,99,3236,10,2650,98,2653,0,3236,99,3227,10,1366,100,81,0,1510,101,73,10,81,100,79,0,73,101,79,10,2651,58,89,0,3237,100,86,10,89,58,85,0,86,100,90,10,75,1363,1293,0,62,1542,1540,10,1293,1363,1294,0,1540,1542,1539,10,1280,77,1281,0,1435,55,1434,10,1281,77,75,0,1434,55,62,10,1284,1291,1280,0,1466,1413,1435,10,1280,1291,77,0,1435,1413,55,10,19,1332,1325,0,22,1493,1462,10,1325,1332,1336,0,1462,1493,1463,10,77,1291,76,0,55,1413,66,10,76,1291,1362,0,66,1413,1415,10,1362,1366,76,0,1415,1510,66,10,1330,19,1331,0,1475,22,1427,10,1339,1315,1330,0,1446,1503,1475,10,1330,1315,21,0,1475,1503,3,10,19,1325,1329,0,22,1462,1426,10,1329,1331,19,0,1426,1427,22,10,21,19,1330,0,3,22,1475,10,1281,75,1297,0,1434,62,1404,10,1297,75,1293,0,1404,62,1540,10,99,2550,2620,0,3234,2972,3233,10,2620,2550,2551,0,3233,2972,2973,10,99,2622,2538,0,3234,2889,2868,10,2538,2622,2537,0,2868,2889,2866,10,2592,2588,2581,0,2899,3048,2901,10,2581,2588,48,0,2901,3048,3231,10,2618,2548,101,0,2848,2847,98,10,101,2548,2622,0,98,2847,2889,10,47,2556,2571,0,3230,2915,2943,10,2571,2556,2574,0,2943,2915,2914,10,2618,102,2549,0,2848,97,2849,10,2549,102,2621,0,2849,97,2932,10,2618,101,102,0,2848,98,97,10,2586,2587,48,0,2910,2862,3231,10,48,2585,2581,0,3231,2860,2901,10,2585,48,2587,0,2860,3231,2862,10,2619,2586,48,0,2942,2910,3231,10,2556,47,2557,0,2915,3230,2836,10,2557,47,2551,0,2836,3230,2973,10,47,2569,2551,0,3230,3229,2973,10,2551,2569,2620,0,2973,3229,3233,10,2550,99,2554,0,2972,3234,2838,10,2554,99,2538,0,2838,3234,2868,10,1366,1365,100,0,1510,1499,101,10,100,1365,1364,0,101,1499,3014,10,1364,2621,100,0,3014,2932,101,10,100,2621,102,0,101,2932,97,10,58,2648,2635,0,3238,3133,3132,10,0,2663,28,0,3239,3225,3240,10,2663,2654,28,0,3225,3199,3240,10,28,2654,2655,0,3240,3199,3206,10,0,2637,2663,0,3241,3216,3214,10,58,2651,2648,0,3242,3220,3222,10,2683,2682,2676,0,3243,3244,3245,10,2676,2682,2673,0,3245,3244,3246,10,2700,2678,2697,0,3247,3248,3249,10,2692,2678,2675,0,3250,3248,3251,10,2690,2669,2693,0,3252,3253,3254,10,2693,2669,2666,0,3254,3253,3255,10,2692,2697,2678,0,3250,3249,3248,10,2692,2699,2697,0,3250,3256,3249,10,2683,2665,2682,0,3243,3257,3244,10,2702,2688,2694,0,3258,3259,3260,10,2687,2689,2686,0,3261,3262,3263,10,2682,2681,2673,0,3244,3264,3246,10,2673,2681,2672,0,3246,3264,3265,10,2673,2672,2674,0,3246,3265,3266,10,2674,2672,2671,0,3266,3265,3267,10,2688,2687,2685,0,3259,3261,3268,10,2681,2680,2672,0,3264,3269,3265,10,2672,2680,2668,0,3265,3269,3270,10,2688,2685,2694,0,3259,3268,3260,10,2672,2668,2671,0,3265,3270,3267,10,2671,2668,2670,0,3267,3270,3271,10,2676,2673,2677,0,3245,3246,3272,10,2677,2673,2674,0,3272,3246,3266,10,2676,2679,2683,0,3245,3273,3243,10,2683,2679,2684,0,3243,3273,3274,10,2675,2691,2692,0,3251,3275,3250,10,2679,2701,2684,0,3273,3276,3274,10,2684,2701,2696,0,3274,3276,3277,10,2671,2670,2669,0,3267,3271,3278,10,2669,2670,2666,0,3278,3271,3279,10,2667,2686,2666,0,3280,3263,3279,10,2687,2686,2667,0,3261,3263,3280,10,2693,2666,2686,0,3254,3255,3263,10,2679,2677,2678,0,3273,3272,3281,10,2689,2693,2686,0,3262,3254,3263,10,2684,2696,2703,0,3274,3277,3282,10,2703,2696,2695,0,3282,3277,3283,10,2670,2667,2666,0,3271,3280,3279,10,2669,2690,2691,0,3253,3252,3275,10,2677,2674,2675,0,3272,3266,3284,10,2675,2674,2669,0,3284,3266,3278,10,2674,2671,2669,0,3266,3267,3278,10,2675,2669,2691,0,3251,3253,3275,10,2676,2677,2679,0,3245,3272,3273,10,2677,2675,2678,0,3272,3284,3281,10,2701,2679,2698,0,3276,3273,3285,10,2678,2698,2679,0,3281,3285,3273,10,2678,2700,2698,0,3281,3286,3285,10,2685,2667,2668,0,3268,3280,3270,10,2668,2667,2670,0,3270,3280,3271,10,2680,2685,2668,0,3269,3268,3270,10,2687,2667,2685,0,3261,3280,3268,10,2705,2680,2706,0,3287,3269,3288,10,2706,2680,2681,0,3288,3269,3264,10,2692,2704,2699,0,3250,3289,3256,10,2685,2680,2694,0,3268,3269,3260,10,2694,2680,2705,0,3260,3269,3287,10,2691,2690,2704,0,3275,3252,3289,10,2706,2681,2665,0,3288,3264,3257,10,2665,2681,2682,0,3257,3264,3244,10,2691,2704,2692,0,3275,3289,3250,10,2705,2702,2694,0,3287,3258,3260,10,2727,2720,2726,0,3290,3291,3292,10,2726,2720,2717,0,3292,3291,3293,10,2743,2741,2722,0,3294,3295,3296,10,2736,2719,2722,0,3297,3298,3296,10,2710,2713,2737,0,3299,3300,3301,10,2737,2713,2734,0,3301,3300,3302,10,2736,2722,2741,0,3297,3296,3295,10,2707,2737,2734,0,3303,3301,3302,10,2731,2730,2733,0,3304,3305,3306,10,2726,2717,2725,0,3292,3293,3307,10,2725,2717,2716,0,3307,3293,3308,10,2717,2718,2716,0,3293,3309,3308,10,2716,2718,2715,0,3308,3309,3310,10,2732,2729,2731,0,3311,3312,3304,10,2725,2716,2724,0,3307,3308,3313,10,2724,2716,2712,0,3313,3308,3314,10,2732,2738,2729,0,3311,3315,3312,10,2716,2715,2712,0,3308,3310,3314,10,2712,2715,2714,0,3314,3310,3316,10,2720,2721,2717,0,3291,3317,3293,10,2717,2721,2718,0,3293,3317,3309,10,2728,2723,2727,0,3318,3319,3290,10,2727,2723,2720,0,3290,3319,3291,10,2719,2736,2735,0,3298,3297,3320,10,2740,2744,2728,0,3321,3322,3318,10,2728,2744,2723,0,3318,3322,3319,10,2715,2713,2714,0,3310,3323,3316,10,2714,2713,2710,0,3316,3323,3324,10,2727,2745,2728,0,3290,3325,3318,10,2728,2745,2709,0,3318,3325,3326,10,2711,2710,2730,0,3327,3324,3305,10,2731,2711,2730,0,3304,3327,3305,10,2737,2730,2710,0,3301,3305,3299,10,2723,2722,2721,0,3319,3328,3317,10,2733,2730,2737,0,3306,3305,3301,10,2714,2710,2711,0,3316,3324,3327,10,2732,2731,2708,0,3311,3304,3329,10,2713,2735,2734,0,3300,3320,3302,10,2713,2718,2719,0,3323,3309,3330,10,2719,2718,2721,0,3330,3309,3317,10,2718,2713,2715,0,3309,3323,3310,10,2719,2735,2713,0,3298,3320,3300,10,2720,2723,2721,0,3291,3319,3317,10,2721,2722,2719,0,3317,3328,3330,10,2744,2742,2723,0,3322,3331,3319,10,2722,2723,2742,0,3328,3319,3331,10,2722,2742,2743,0,3328,3331,3332,10,2714,2711,2712,0,3316,3327,3314,10,2712,2711,2729,0,3314,3327,3312,10,2724,2712,2729,0,3313,3314,3312,10,2731,2729,2711,0,3304,3312,3327,10,2733,2737,2746,0,3306,3301,3333,10,2746,2737,2707,0,3333,3301,3303,10,2738,2724,2729,0,3315,3313,3312,10,2733,2746,2731,0,3306,3333,3304,10,548,780,549,0,3334,3335,3124,10,777,547,609,0,3091,3336,3112,10,547,779,534,0,3336,3337,3338,10,778,549,780,0,3093,3124,3335,10,779,547,777,0,3337,3336,3091,10,784,649,782,0,3102,3101,3339,10,783,637,784,0,3100,3099,3102,10,784,637,650,0,3102,3099,3103,10,2050,1963,1949,0,3161,3160,3190,10,2046,1923,2044,0,3185,3340,3341,10,2043,2041,1908,0,3176,3342,3180,10,1923,2046,1924,0,3340,3185,3165,10,2303,2304,2302,0,3150,3149,3343,10,2179,2279,2280,0,3151,3344,3194,10,2310,2308,2312,0,3345,3191,3147,10,2128,2279,2179,0,3346,3344,3151,10,15,2637,8,0,13,3347,2,10,8,2637,0,0,2,3347,0,10,2637,15,13,0,3347,13,14,10,14,2639,13,0,18,3348,14,10,13,2639,2637,0,14,3348,3347,10,1,2639,16,0,3226,3348,25,10,16,2639,14,0,25,3348,18,10,2635,2634,66,0,3349,3350,70,10,66,2634,68,0,70,3350,75,10,64,2635,66,0,68,3349,70,10,64,58,2635,0,68,100,3349,10,2641,2638,1,0,3127,3126,3351,10,2638,2639,1,0,3126,3217,3351,10,2641,1,2634,0,3127,3351,3137,10,1,74,2634,0,3226,77,3350,10,2634,74,68,0,3350,77,75,10,2707,2690,2693,0,3352,3252,3254,10,2745,2665,2683,0,3353,3257,3243,10,2708,2688,2702,0,3354,3259,3258,10,2709,2745,2684,0,3355,3353,3274,10,2684,2745,2683,0,3274,3353,3243,10,2684,2703,2709,0,3274,3282,3355,10,2664,2687,2708,0,3356,3261,3354,10,2708,2687,2688,0,3354,3261,3259,10,2707,2693,2746,0,3352,3254,3357,10,2746,2693,2689,0,3357,3254,3262,10,2704,2690,2707,0,3289,3252,3352,10,2664,2746,2687,0,3356,3357,3261,10,2687,2746,2689,0,3261,3357,3262,10,2736,2741,2699,0,3297,3295,3256,10,2745,2727,2665,0,3325,3290,3358,10,2665,2727,2726,0,3358,3290,3292,10,2708,2702,2732,0,3329,3359,3311,10,2732,2702,2738,0,3311,3359,3315,10,2728,2703,2740,0,3318,3360,3321,10,2740,2703,2739,0,3321,3360,3283,10,2728,2709,2703,0,3318,3326,3360,10,2708,2731,2664,0,3329,3304,3361,10,2725,2724,2706,0,3307,3313,3362,10,2706,2724,2705,0,3362,3313,3363,10,2736,2699,2704,0,3297,3256,3364,10,2705,2724,2738,0,3363,3313,3315,10,2707,2734,2704,0,3303,3302,3364,10,2704,2734,2735,0,3364,3302,3320,10,2731,2746,2664,0,3304,3333,3361,10,2726,2725,2665,0,3292,3307,3358,10,2665,2725,2706,0,3358,3307,3362,10,2735,2736,2704,0,3320,3297,3364,10,2705,2738,2702,0,3363,3315,3359,10,2632,1485,2631,0,1700,3365,1562,10,2631,1485,2624,0,1562,3365,1563,10,1485,1486,2624,0,3365,1697,1563],\"influencesPerVertex\":4,\"name\":\"body\",\"skinWeightsvertices\":[0,26.3226,1.40197,-0.379691,26.2323,1.18423,0,26.274,1.45054,0,26.3618,1.58114,-0.123166,26.2964,1.51137,-0.118698,26.3813,1.55477,-0.061575,26.2895,1.52633,-0.20649,26.2898,1.47232,-0.058016,26.2764,1.44625,-0.058581,26.3783,1.57235,-0.220696,26.3515,1.50259,-0.309868,26.2602,1.38804,-0.342514,26.2993,1.40575,-0.191296,26.2712,1.40648,-0.285235,26.2549,1.33089,-0.116863,26.2779,1.43653,-0.359934,26.2406,1.25174,-0.38093,26.2391,1.28647,-0.410691,26.2557,1.30682,-0.125126,26.5493,1.52968,-0.360562,26.3314,1.39709,-0.308394,26.532,1.41014,-0.113586,26.4217,1.54999,-0.114746,26.4772,1.5389,-0.04105,26.4292,1.5615,-0.044155,26.4765,1.55875,-0.226576,26.3882,1.49123,-0.439997,26.2755,1.31433,0.121755,26.323,1.38339,0,26.2802,1.53318,0.123166,26.2964,1.51137,0.118698,26.3813,1.55477,0.061575,26.2895,1.52633,0.20649,26.2898,1.47232,0.058016,26.2764,1.44625,0.05858,26.3783,1.57235,0.220696,26.3515,1.50259,0.309868,26.2602,1.38804,0.342514,26.2993,1.40575,0.191296,26.2712,1.40648,0.285235,26.2549,1.33089,0.116863,26.2779,1.43653,0.359934,26.2406,1.25174,0.38093,26.2391,1.28647,0.410691,26.2557,1.30682,0.42579,26.2331,1.27185,0.397707,26.2335,1.25362,0.482693,26.5263,1.3188,0.125126,26.5493,1.52968,0,26.4158,1.56308,0,26.4743,1.55637,0.360562,26.3314,1.39709,0.113586,26.4217,1.54999,0.114746,26.4772,1.5389,0.04105,26.4292,1.5615,0.044155,26.4765,1.55875,0.226576,26.3882,1.49123,0.439996,26.2755,1.31433,0,26.2489,1.37301,-0.42579,26.2331,1.27185,0,26.1373,1.48968,-0.181653,26.1576,1.45807,-0.17952,26.2201,1.45942,-0.276093,26.2278,1.39522,-0.176541,26.2651,1.41719,-0.281644,26.1844,1.4003,-0.268379,26.253,1.35971,-0.381761,26.2338,1.22784,-0.343047,26.2393,1.27844,-0.414579,26.2257,1.27706,-0.376994,26.2121,1.313,-0.35741,26.2319,1.30913,-0.391765,26.2331,1.26205,-0.397708,26.2335,1.25362,-0.375599,26.2336,1.23623,-0.512423,26.1962,1.25898,-0.327383,26.0692,1.34237,-0.446817,26.1175,1.26808,-0.459393,26.229,1.27861,0,26.0859,1.44916,-0.297481,26.1358,1.38119,-0.194354,26.102,1.42718,-0.439432,26.2087,1.27808,-0.40249,26.1846,1.29945,0,26.2096,1.49555,0,26.2636,1.45174,0.181653,26.1576,1.45807,0.17952,26.2201,1.45942,0.276093,26.2278,1.39522,0.176541,26.2651,1.41719,0.281644,26.1844,1.4003,0.268379,26.253,1.35971,0.381761,26.2338,1.22784,0.343047,26.2393,1.27844,0.414579,26.2257,1.27706,0.376994,26.2121,1.313,0.35741,26.2319,1.30913,0.391765,26.2331,1.26205,0.375599,26.2336,1.23623,0.512422,26.1962,1.25898,0,26.0487,1.42823,0.327383,26.0692,1.34237,0.222531,26.0352,1.38307,0.459393,26.229,1.27861,0.297481,26.1358,1.38119,0.194354,26.102,1.42718,0.439432,26.2087,1.27808,0.40249,26.1846,1.29945,0,14.2319,0.69334,0,14.5916,1.275,0,14.3514,-0.248385,0,14.32,0.903609,-0.189869,14.7968,1.41247,-0.08105,14.2324,-0.133906,-0.138439,14.4137,1.04755,-0.140242,14.2389,0.544411,-0.158556,14.3282,0.879022,-0.315231,14.3312,0.797439,-0.161912,14.5968,1.26619,-0.368747,14.4236,0.967865,-0.462874,14.559,1.12528,-0.772177,14.914,1.33547,0,14.781,1.42177,-0.20199,14.2496,0.274449,-0.349288,19.9916,1.80162,-1.07201,21.1735,1.68052,-0.972944,20.5262,1.74965,-0.234855,21.1632,1.73617,-0.699109,19.9671,1.75648,-1.01674,21.057,1.67588,-1.54707,20.9847,1.45112,-1.38939,20.4243,1.57649,-0.892945,19.6967,1.66884,-1.14226,17.8791,1.62354,-1.02775,20.7674,1.70864,-1.68747,20.431,1.35885,-1.03927,18.8822,1.55231,-1.26135,18.381,1.49274,-0.340805,20.167,1.81125,-0.977742,20.0126,1.70389,-1.16926,20.104,1.67828,-0.755917,20.0865,1.75568,0,21.1222,1.73554,0,21.7481,1.6239,0,22.0643,1.56095,-1.64872,21.7687,1.64546,-1.86208,21.8328,1.473,-2.34493,22.017,1.09475,-2.26749,22.4116,1.12037,-1.76693,22.5481,1.2822,-1.21065,22.4463,1.48731,-1.80958,21.9338,1.48877,-1.68184,21.9937,1.54163,-1.51519,21.9885,1.60987,-0.248795,20.9249,1.79387,-0.531693,20.7009,1.8217,-0.755823,21.2995,1.746,-2.04375,22.1199,1.31327,-1.18201,22.0058,1.68904,-1.4089,22.2171,1.56063,-1.7513,22.2584,1.43041,-2.06934,21.4561,1.14102,-2.01336,21.5828,1.30977,-2.24906,21.6716,1.03882,-2.10873,21.7151,1.25138,-1.87473,21.3463,1.32631,-1.87205,21.5107,1.42895,-2.14941,21.3522,0.870133,-1.94507,21.1988,1.11399,-1.59665,21.2917,1.54984,-1.65698,21.6161,1.60684,-1.51829,21.1178,1.49721,-1.67884,21.4891,1.57181,-1.20319,21.3449,1.72123,-1.45804,21.5257,1.68454,-1.21628,21.5858,1.7506,-1.41556,21.7386,1.6944,-0.930577,21.445,1.78029,-1.3996,21.8803,1.67425,-1.13301,21.6957,1.75853,-1.75545,21.6243,1.55039,-1.81883,21.6621,1.51068,-2.17642,21.9217,1.23313,-0.240704,21.4037,1.69824,-0.771378,21.5955,1.79823,-0.434791,21.5156,1.76168,-0.776176,22.096,1.6856,-0.184993,21.869,1.67278,-0.377857,21.9444,1.71364,-0.626793,22.3304,1.58188,-1.46271,20.6886,1.51574,-0.592641,21.2069,1.71869,-2.1811,21.2505,0.742639,-2.29922,21.4132,0.581856,-1.9473,21.0715,1.07316,-2.33668,21.5949,0.730973,-1.86017,21.7258,1.48252,-1.52734,21.6331,1.66346,-1.43488,21.6783,1.69275,-0.377872,20.5096,1.85542,-0.829692,20.2472,1.76913,0,19.6485,1.80465,0,20.8016,1.80957,-0.939655,19.1936,1.57053,-0.84142,18.1872,1.65249,-0.568933,20.9263,1.76532,-0.571771,19.6546,1.78933,-0.624142,18.8429,1.75218,-0.644809,18.5589,1.7762,-0.580003,19.2837,1.73645,-0.32293,14.2669,0.682803,-1.01788,22.647,1.39947,-0.238368,22.4149,1.49299,0,18.1314,1.85551,-1.19391,27.3717,-0.436779,-1.14124,27.0567,-0.560149,-1.01189,26.5539,-0.415815,-1.08992,26.8562,-0.506539,-0.22794,25.2579,0.439655,-0.713903,25.6472,0.073574,-0.841687,25.9218,0.008768,-1.20494,27.6912,-0.423419,-0.676639,11.9814,1.01323,-2.54149,11.9811,1.51279,-0.32467,11.9199,-0.545945,-0.540693,11.9214,-0.898212,-1.7243,11.9727,-1.31828,-0.247916,11.9196,0.458265,-2.01102,11.9905,1.74382,-2.51733,14.1287,1.3435,-1.03701,14.2522,1.46594,-2.76866,14.0597,0.822778,-1.99693,14.1314,1.6877,0,16.4746,-1.46208,-0.561799,16.6684,1.84209,-2.31738,17.0531,-0.033491,-1.44479,18.7259,-0.97498,-2.19319,17.291,0.569374,-1.51279,19.1156,-1.07797,-0.722268,20.077,-1.69551,-2.22441,17.3397,-0.066528,-1.13023,17.1366,-1.28819,-1.32888,17.4679,-1.06978,-0.503062,17.2696,-1.28936,-0.340789,16.5354,-1.53532,-0.691394,17.129,-1.32706,-0.055774,15.6023,-1.50213,-1.69361,15.7182,-1.70255,-1.85642,15.0213,-1.67589,-2.29535,16.3988,-0.653635,-2.15313,16.7286,-0.805605,-1.85842,16.3182,-1.35621,-2.41306,14.5154,-0.949626,-2.11628,15.7282,-1.16813,-2.23268,15.097,-1.14376,-2.49152,15.2152,-0.493197,-2.60169,15.7175,0.026485,-2.42577,16.6422,-0.000061,-2.6561,14.8714,0.704049,-1.92369,16.286,1.27867,-2.30971,16.5833,0.598398,-2.23172,17.0209,0.586904,-1.97265,17.4138,1.12539,-2.00724,16.856,1.13633,-2.61002,14.5032,-0.507231,-2.10275,14.3436,-1.39378,-2.31172,13.8243,-1.07072,-0.642159,13.6122,-1.00854,-0.079858,14.6405,-1.27666,-0.445579,16.1531,1.75252,-1.45401,16.5096,1.5381,-1.15361,15.9818,1.56201,-1.77273,16.6746,1.34812,-1.56273,16.8579,1.45144,-1.77378,16.1857,1.38127,-1.63541,16.4034,1.44954,-1.26754,15.9402,1.52991,-0.200077,13.9629,-0.041927,-0.337794,13.8073,-0.591448,-0.28928,14.0335,-1.1304,-0.204624,15.3991,1.65272,-1.07617,15.644,1.50569,-1.45021,15.5665,1.50895,-1.65695,15.5526,1.48659,-1.59873,14.8683,1.57625,-1.21592,14.9691,1.48675,-0.65072,14.914,1.32902,-2.11878,16.4393,1.07865,-2.86881,13.9131,0.203387,-0.548643,14.4943,1.12321,-2.77011,14.6476,0.154622,-2.56432,15.5936,0.748785,-1.11922,13.5519,-1.31913,-0.573057,16.5379,-1.60217,-0.228301,15.6661,-1.71263,-0.621304,14.0214,-1.5023,-0.315121,14.6783,-1.65102,-1.58561,13.5975,-1.3515,-1.01055,16.531,-1.65124,-0.659987,15.663,-1.9009,-1.16473,14.076,-1.71022,-1.87857,18.6695,-0.52164,-2.58002,13.9505,-0.755069,-1.84284,19.3738,-1.01815,-1.47356,20.0249,-1.58053,-2.035,20.0244,-1.17144,-2.05547,19.2628,-0.613603,-2.22664,19.7982,0.470653,-2.33025,20.3599,0.319232,-1.80403,19.5828,1.20117,-1.20653,19.0819,1.5134,-2.13787,18.5061,0.365362,-1.038,19.3878,1.56717,-1.02814,16.6123,1.70512,-2.30093,19.7747,-0.06485,-2.11697,18.6009,0.021546,-2.18205,19.2182,-0.079778,-2.16836,19.1748,0.173831,-1.39354,18.0073,-0.947807,-1.90443,17.9201,-0.610185,-2.18676,17.7663,0.698781,-2.17511,17.8473,-0.076893,-0.617557,17.934,1.84217,-1.77275,17.7344,1.36002,-1.93933,18.5275,0.894342,-1.24201,17.4348,1.65024,-0.600262,17.4601,1.88753,-1.67719,18.5378,1.20227,-2.39995,20.2811,-0.100522,-0.645389,18.5983,-1.24436,-0.584064,19.5923,-1.53795,-0.564543,19.1941,-1.4127,-0.581916,17.9133,-1.16549,-2.05723,18.1679,0.869803,-1.82282,18.1471,1.18122,-0.875022,15.5519,1.5156,-1.97871,13.6692,-1.24476,-1.47033,16.4645,-1.57011,-1.22782,15.6992,-1.9184,-1.6538,14.2094,-1.65966,-1.36763,14.8762,-1.91758,-0.791088,14.7446,-1.89582,-1.90161,17.3643,-0.753877,-1.82782,16.9948,-1.04317,-1.52689,17.0652,-1.202,-2.07536,19.3109,0.738154,-1.46169,19.3208,1.43689,-1.81954,18.8848,1.06555,-1.59083,20.0578,1.44557,-1.14544,19.6956,1.63347,-2.0061,18.8321,0.727084,-2.37884,14.9355,1.28432,-2.17605,15.5795,1.28836,-1.87376,15.5555,1.43336,-1.97436,14.922,1.57581,-1.48684,14.1003,1.64341,-2.65229,22.1741,0.752282,-1.31135,22.4095,-2.26899,-2.32095,23.0077,0.821353,-2.02979,24.1627,-0.10198,-1.26459,23.0054,-2.27092,-1.021,24.0692,-2.03747,-1.2025,23.5641,-2.15879,-2.58522,22.3667,0.886456,-2.38866,22.7713,0.936271,-2.76318,22.685,0.68964,-2.76134,22.3026,0.618626,-2.55137,21.8374,0.304524,-2.50726,21.2989,-1.48894,-2.74883,21.3127,-0.867509,-2.66055,21.7752,-0.209498,-1.72638,23.9809,-1.93486,-2.49444,23.2901,0.550982,-1.59952,24.6997,-1.14073,-2.42962,21.3465,0.197037,-1.24918,21.8375,-2.21405,-2.16955,23.85,0.175133,-2.18103,24.3339,-1.62586,-2.09911,24.5754,-1.05038,-2.36644,22.9166,-2.12738,-2.12023,21.7083,-2.0246,-0.931721,25.962,-0.339971,0,22.5018,-2.15882,0,26.3972,-1.40433,0,24.8136,0.380039,0,24.9202,-1.51446,0,23.4391,-2.07388,-1.72417,22.7975,1.14602,-0.446614,23.0555,1.14188,-0.783483,24.0718,0.2906,-0.936551,25.0741,-0.672418,-2.25171,19.8704,-0.693085,-1.16764,21.2284,-2.07418,-1.04122,20.6616,-1.91914,-0.455426,23.3444,0.921626,-1.37187,23.6168,0.628708,-1.24941,23.9815,0.32069,-1.74559,23.5791,0.539818,-1.17751,24.1169,0.130947,-0.786556,24.341,0.02945,-1.23085,24.6189,-0.705675,-1.57962,24.5733,-0.744813,-1.04333,24.242,-0.048872,-0.268426,24.3129,-1.83702,-0.713832,25.2595,-1.25673,-1.03355,24.8103,-0.735969,-0.572963,24.6107,0.147238,-1.00539,28.277,-0.992948,-0.541807,26.0642,-1.25065,-0.796952,28.1526,-1.32585,-0.897037,28.4182,-1.05626,-0.92719,28.5836,-0.818054,-1.04443,28.3986,-0.770888,-1.13357,27.8221,-0.92104,-0.84683,25.919,-0.81346,-0.842424,25.5058,-0.221681,-0.834364,25.7645,-0.844145,-0.908844,25.929,-0.616895,-0.846877,27.4058,-1.42129,-1.06812,27.3205,-1.03564,-0.450016,28.407,-1.43632,-0.467578,28.6758,-1.21504,-0.486989,28.881,-0.910754,-0.356516,27.5034,-1.69808,-0.769951,28.8341,-0.541349,-0.306121,28.1639,-1.59054,-0.771879,25.1934,-0.119917,-0.829175,22.8595,1.27984,-1.53937,22.992,1.06116,-0.319919,23.7569,0.591327,-0.573308,25.2966,0.078184,-0.33124,23.887,0.475969,-0.409311,24.1254,0.322588,-0.783122,26.4126,-1.12816,-0.940737,26.4339,-0.816705,-0.912074,25.8131,-0.304267,-0.617808,25.7979,-1.19246,-0.447021,26.4251,-1.36227,-0.807363,26.9547,-1.35644,-1.01664,26.9386,-0.987163,-0.318037,26.9695,-1.61465,-1.99,23.2049,0.786073,-1.46867,23.2186,0.915009,-0.824847,23.3288,0.931583,-0.841797,23.0961,1.10583,-0.418562,22.7377,1.34721,-0.449844,23.5829,0.756077,-0.846579,23.9694,0.458564,-0.904987,23.6571,0.704835,-0.759194,24.2048,0.116411,-0.483854,24.4126,0.231205,-0.371099,24.9459,0.216575,-0.203511,24.4177,0.269558,-0.093735,24.834,0.368514,-0.874003,25.448,-0.787149,-0.562426,25.4756,-1.27611,-1.64234,20.3775,-1.65115,-1.03407,24.5564,-1.74517,-1.19101,24.8413,-1.23743,-1.00133,24.9699,-1.18037,-0.829551,24.9296,-1.47202,-0.99336,24.7782,-1.57635,-1.40206,24.5338,-1.70554,-0.399354,25.1056,-1.43458,-2.33778,20.8647,0.332528,-2.22979,20.4565,0.599073,-2.11967,20.4668,0.801345,-1.97363,20.3065,1.02417,-2.06639,20.032,0.865303,-2.50353,20.8732,-0.117378,-2.32378,20.8826,-1.41998,-1.94521,21.0552,-1.81438,-2.39027,20.3287,-0.80308,-2.15266,20.464,-1.32024,-1.81126,20.7119,-1.73162,-0.265917,24.5823,-1.69453,-1.1652,28.0707,-0.636338,-0.882392,27.7847,-1.35881,-2.57433,20.8314,-0.845118,-3.00689,22.0434,-0.878172,-2.02321,24.5121,-0.71996,-2.88224,22.8253,0.534863,-0.18424,11.9065,-0.191373,-2.22744,12.0084,-1.01087,-2.50965,12.0198,-0.751588,-1.98993,24.4137,-0.49086,-2.76133,22.1437,-1.74292,-2.22416,23.9966,-1.89253,-2.84493,22.3707,-0.154132,0,22.6788,1.31251,0,25.64,-1.34776,0,14.9402,-1.02287,0,14.4678,-0.574764,0,19.3217,-1.36016,0,16.8533,-1.41005,0,17.4646,1.92864,0,24.1901,-1.84097,0,26.0516,-1.33803,0,27.5139,-1.75263,0,28.7555,-1.2369,0,28.4663,-1.48776,0,24.3405,0.286304,0,21.266,-1.99427,0,16.1779,1.79122,0,15.398,1.66384,0,20.646,-1.84898,0,23.0057,-2.12831,-0.17248,11.9148,0.153336,-3.36769,22.6862,-1.28364,-3.33616,23.2588,0.151519,-2.99797,21.9965,-1.13578,-2.61756,24.4755,-0.386258,-2.66562,24.5849,-0.877811,-3.69488,24.5708,-0.725464,-3.89668,22.6587,-1.17179,-3.07781,23.0161,-1.8305,-2.31581,23.2881,-2.11065,-4.04727,23.609,-1.78833,-2.738,24.454,-1.37712,-5.82471,23.1153,0.104118,-7.04457,23.4257,0.242698,-6.89276,22.9687,-0.002208,-6.93518,22.8652,-0.845416,-7.51453,22.7629,-0.528288,-7.54329,23.0064,-1.01644,-8.34805,23.0354,-0.684963,-8.07031,22.7515,-0.386572,-12.1097,23.85,2.19288,-11.3669,23.6144,2.39018,-11.8461,23.0653,3.04443,-11.9062,23.0501,3.00511,-11.62,22.7979,2.88345,-11.661,22.7688,3.00305,-11.8897,22.9852,2.86966,-11.806,22.7562,3.18323,-11.7259,23.4355,2.41157,-12.3369,23.5275,1.32855,-11.4032,23.4791,2.60679,-11.0523,23.7851,1.8661,-11.1544,23.1396,1.16819,-11.5154,23.8753,1.5389,-11.2745,23.0129,2.19506,-11.3145,23.316,0.927647,-12.2503,23.7671,1.8509,-11.3998,23.9002,1.69633,-11.5994,23.6905,1.16851,-12.3359,23.627,1.52209,-11.705,22.8166,3.12363,-11.9681,22.9561,3.14721,-11.9014,23.0116,3.08812,-12.258,23.2193,1.16851,-11.6582,22.95,2.70673,-11.5401,22.8763,2.78118,-11.7635,23.1481,2.81102,-11.6264,23.2291,2.94069,-11.7485,22.9022,2.77287,-12.0073,23.0986,1.45622,-11.2384,23.0906,1.59703,-12.0018,23.3429,1.95003,-11.9466,23.3703,2.25497,-11.5944,23.6156,2.41463,-11.1642,23.7481,2.04946,-11.4172,23.7431,2.28945,-10.9558,23.2319,2.20541,-10.9989,23.1365,2.15313,-11.5397,23.5268,2.40969,-11.6513,23.3601,2.44577,-10.7825,23.418,1.83928,-10.927,23.2009,1.69843,-11.5964,23.5452,1.05685,-12.2408,23.3747,1.1782,-10.8001,23.5343,1.8559,-10.8882,23.6346,1.88486,-10.9352,23.3282,2.24739,-10.7254,23.3102,1.54696,-10.6817,23.5113,1.67395,-10.6986,23.5891,1.69587,-10.7379,23.7028,1.6867,-10.8144,23.8166,1.63877,-11.1615,23.8767,1.2712,-11.2592,23.6203,0.890721,-10.8464,23.2387,0.748268,-10.8208,23.1314,1.13291,-12.4556,23.3232,2.01324,-12.5637,23.3298,1.61797,-5.01388,24.0136,-1.42351,-5.24963,23.8086,-1.58982,-5.77888,23.4846,-1.5253,-3.28849,23.0357,-0.202128,-7.57034,23.3261,-1.10779,-7.0549,23.9619,0.025514,-11.025,23.895,1.42241,-3.00923,23.4852,0.38007,-11.9573,22.746,3.09141,-12.0155,22.8475,3.07098,-6.91864,22.9982,-1.10377,-6.87331,23.2296,-1.26464,-6.24544,22.7691,-0.712136,-2.65053,24.215,-0.030526,-3.7291,24.532,-1.06012,-4.46425,24.2476,-1.09896,-11.9994,23.9406,2.35073,-12.1929,23.9013,1.99453,-12.2888,23.754,1.67957,-11.7385,23.0303,3.08222,-11.6327,22.8523,3.07491,-11.6527,22.9446,3.09447,-10.9734,23.4535,2.27462,-11.0451,23.521,2.29395,-11.694,22.9204,3.10637,-11.7288,22.9795,3.09826,-11.5297,23.1586,2.98518,-11.4649,23.0619,2.98685,-11.4392,22.9705,2.93605,-11.2081,23.6015,2.33918,-11.5436,23.3687,2.64406,-11.9235,23.8783,2.44248,-11.1267,23.4142,2.54225,-11.2119,23.4869,2.54651,-11.1979,23.032,2.45802,-11.0689,23.156,2.45842,-11.5841,23.2923,2.53897,-11.061,23.2741,2.51299,-11.3986,23.0352,2.45687,-12.6608,22.8842,3.18428,-12.6963,22.9199,3.2168,-12.5649,23.0595,3.08479,-12.6149,23.0263,2.94889,-12.7121,22.7778,3.16763,-12.3252,23.3755,2.87429,-12.3849,23.321,2.74548,-12.8093,22.7138,3.11355,-12.678,23.1402,3.17385,-12.8355,23.0253,3.1692,-12.736,22.9896,3.2161,-12.545,23.5863,2.87662,-12.7781,22.8861,3.24917,-12.807,22.9655,3.21298,-12.4619,23.5405,2.9469,-12.8162,22.8606,2.95161,-12.9385,22.9153,3.04304,-12.8583,23.0867,2.91548,-12.7656,22.7504,3.07207,-12.9143,22.7342,3.08616,-12.4964,23.3423,2.64643,-12.7879,23.1724,3.1265,-12.863,23.1593,3.02472,-12.9175,22.989,3.07407,-12.63,23.5462,2.76675,-12.9552,22.88,3.09241,-12.8716,22.9984,3.14742,-12.9785,22.7955,2.79148,-13.0264,22.8217,2.82952,-12.9132,22.9329,2.70212,-13.0308,22.6228,2.70817,-13.0088,22.6621,2.80283,-12.7038,23.291,2.53358,-12.7335,23.2285,2.38344,-13.1355,23.0487,2.72934,-13.0161,23.027,2.78577,-13.1797,22.9037,2.76947,-13.082,22.8866,2.83079,-12.95,23.4632,2.53891,-12.8202,23.4372,2.60459,-13.095,22.7749,2.86017,-13.15,22.8453,2.81414,-13.0729,22.7195,2.57245,-13.2338,22.768,2.62512,-13.0536,22.8759,2.49849,-12.9357,22.8846,2.57333,-13.1841,22.5767,2.69991,-12.9009,23.2843,2.29579,-13.1066,22.5799,2.78446,-13.1925,23.0112,2.5957,-13.2356,22.8636,2.66457,-13.0071,23.4275,2.41994,-13.2471,22.725,2.66529,-13.2054,22.867,2.74164,-13.0608,22.6824,2.33265,-13.165,22.7897,2.38648,-13.0199,22.8628,2.25891,-13.117,22.5473,2.28378,-13.109,22.5863,2.38183,-12.8325,23.2041,2.12834,-13.1788,22.5152,2.34195,-13.1604,22.9837,2.32132,-13.2639,22.8464,2.2835,-13.1772,22.848,2.37098,-12.9594,23.3578,2.14418,-13.2109,22.7354,2.39329,-13.2557,22.7833,2.32516,-13.1418,22.6354,2.14382,-13.2878,22.7144,2.17026,-13.1689,22.8476,2.03795,-13.0088,22.8169,2.15425,-13.2545,22.5238,2.22258,-12.9653,23.1218,1.86783,-12.8389,23.0901,2.00685,-13.2341,22.9811,2.24898,-13.2608,22.9353,2.13095,-13.2899,22.7967,2.18652,-13.0327,23.3752,2.06581,-13.0775,23.3219,1.94329,-13.2985,22.6707,2.21472,-13.2733,22.7712,2.29098,-12.925,22.5692,1.83734,-13.0189,22.6697,1.82553,-12.9334,22.7924,1.7809,-12.9552,22.4439,1.80157,-13.008,22.5148,1.8764,-12.7779,23.0159,1.68433,-12.7393,22.8833,1.60077,-13.0122,22.4579,1.86048,-13.0593,22.7959,1.64451,-13.0134,22.8248,1.73929,-13.0482,22.7001,1.78327,-12.9163,23.1124,1.48734,-12.8912,23.1378,1.58798,-13.0612,22.6213,1.81615,-13.0765,22.662,1.7534,-12.9305,22.494,1.67538,-13.0468,22.5633,1.63174,-12.937,22.6789,1.55761,-12.8504,22.6678,1.69609,-13.0523,22.4198,1.71508,-12.7787,22.9021,1.46513,-13.0394,22.4021,1.77877,-13.0324,22.7354,1.56567,-13.0791,22.6867,1.69884,-13.0643,22.6259,1.63588,-12.8839,23.0212,1.41917,-13.0686,22.5545,1.66218,-13.0838,22.6481,1.7025,-12.0443,23.5366,2.63998,-12.2363,23.4252,2.347,-12.2911,23.5276,2.32524,-12.4586,23.0428,1.34284,-10.7661,23.1957,1.40143,-7.99688,22.7011,-0.065759,-6.85236,22.8078,-0.479476,-6.22231,22.8493,-0.312421,-11.0479,23.1557,1.54135,-2.57451,23.8713,0.189543,-3.56684,23.8293,0.235407,-3.74965,23.6521,0.157054,-3.84928,23.17,-0.215503,-3.51066,24.5046,-0.340739,-3.48791,24.342,-0.074352,-4.52921,24.0265,-0.093544,-4.66221,24.2591,-0.665864,-4.69799,24.2101,-0.383906,-5.79638,23.9087,0.100135,-6.85381,24.1407,-0.431228,-6.8239,24.0149,-0.159557,-7.62554,24.0827,-0.662932,-7.24236,24.1747,-0.11813,-7.61377,23.8158,-0.867007,-8.3038,23.9599,-0.569981,-8.20821,24.1262,-0.336945,-8.37163,23.6145,-0.767847,-11.2578,23.7333,1.00304,-7.12319,22.7656,-0.315275,-7.81919,22.8924,0.345872,-5.76257,23.5038,0.280941,-7.85035,24.0412,0.345715,-7.6413,23.4661,0.414268,-7.74427,23.7289,0.442586,-7.17289,23.6968,0.177736,-8.01543,24.1991,0.052515,-7.41317,24.2169,-0.399618,-6.96678,24.1182,-0.651454,-6.84835,23.5099,-1.24533,-6.81528,23.9527,-0.933992,-4.04117,23.1497,-1.67224,-3.29703,22.8399,-1.54217,-3.89066,23.9699,-1.72381,-3.08021,23.9432,-1.85477,-11.913,22.7611,3.223,-11.965,22.8212,3.22679,-11.8554,22.7343,3.19281,-11.9922,22.8913,3.19723,-12.8113,22.7682,3.25476,-12.9423,22.7538,3.17163,-12.8534,22.7438,3.23709,-12.8992,22.7321,3.19518,-13.0924,22.6698,2.86998,-13.24,22.6137,2.77478,-13.1441,22.6303,2.86229,-13.1988,22.6137,2.82827,-13.2077,22.6086,2.4305,-13.3154,22.5475,2.28822,-13.2305,22.5693,2.42063,-13.2859,22.5319,2.36892,-13.0765,22.5109,1.86177,-13.0994,22.4462,1.75003,-13.0925,22.4877,1.85021,-13.1086,22.4566,1.80535,-3.28521,22.7132,-0.806969,-3.75193,22.833,-0.643175,-2.953,12.0231,0.154261,-2.25174,1.96259,-0.39788,-1.70943,2.05119,0.10965,-1.37898,2.47927,-0.29436,-2.26535,1.53676,-0.411976,-2.18229,1.51751,-0.186059,-1.69016,1.706,0.163637,-1.44706,1.87312,-0.106514,-1.36603,1.9374,-0.367539,-1.37272,2.03669,-0.583217,-1.11725,7.37808,0.254722,-2.29082,7.15348,-1.30583,-2.60059,7.29773,-0.679978,-2.75849,6.33661,-0.607458,-2.00837,6.55856,-1.643,-2.44015,6.47162,-1.42994,-2.70348,6.42759,-1.03046,-2.64329,5.19174,-1.11071,-2.34457,4.9209,-1.44778,-1.95697,4.85667,-1.5712,-0.920996,6.3373,-0.405343,-0.821068,5.24532,-1.11772,-1.10354,6.46014,-1.3092,-0.909785,6.41186,-0.991822,-1.48541,4.85133,-1.50155,-1.16178,4.76043,-1.359,-2.09166,1.59715,0.023552,-1.9349,2.02637,0.101967,-2.01474,2.01673,0.05085,-1.9875,1.62972,0.14377,-1.36896,1.23712,-0.115436,-2.0721,-0.03216,1.94172,-1.70656,0.074527,1.91291,-1.57264,0.211476,1.70278,-1.53681,0.005817,-0.304349,-1.35036,0.770028,-0.455661,-1.38818,0.791808,-0.045174,-1.29744,0.443994,-0.795384,-2.74757,0.154008,2.16732,-2.48014,0.181198,2.05486,-1.96902,0.275481,2.60956,-2.86688,-0.010349,2.10393,-2.83532,-0.061701,1.99539,-2.48704,-0.028993,2.43109,-2.35074,-0.010537,2.46292,-2.21756,0.259002,2.46199,-2.72865,-0.049627,2.03746,-2.68429,0.006256,2.05502,-1.78211,0.084734,2.32432,-2.2474,0.017655,2.49939,-2.25361,0.234557,2.32214,-2.09352,-0.046147,2.50607,-2.11028,0.317174,2.37292,-2.20491,0.31926,-0.899185,-2.2386,0.322662,2.09743,-2.52194,0.181213,2.24477,-2.25831,0.14297,2.35796,-1.89233,-0.017123,-0.962423,-1.30288,1.45811,-0.493261,-2.28332,1.05663,-0.722487,-2.16318,0.292839,2.35978,-1.93775,0.284435,2.52456,-2.57545,-0.000204,1.67774,-1.86953,0.16892,2.59295,-2.07446,0.164608,2.7308,-2.0368,0.094534,2.6945,-2.25651,0.120234,2.6417,-2.03465,-0.033257,-0.681453,-2.1687,-0.030388,-0.352643,-2.88396,0.070278,0.887974,-2.51186,0.114887,2.48404,-2.37507,0.132056,2.51194,-2.3509,1.00236,-0.523712,-2.35534,1.1604,-0.539846,-2.31205,1.15333,-0.362521,-2.33632,1.16675,-0.671496,-1.46498,-0.005504,-0.638427,-2.28757,0.197709,2.45113,-1.86648,0.031595,2.53229,-1.9497,-0.057028,2.2678,-2.1092,0.428534,1.91011,-2.01074,0.494233,1.97118,-1.66167,0.220006,1.87194,-2.93939,0.042932,1.22409,-3.04084,-0.00392,1.82876,-2.93149,0.041458,1.8794,-2.58177,0.090285,2.36131,-2.7305,0.060948,2.32647,-2.46623,0.429631,1.80944,-2.62475,0.360404,1.64789,-2.80998,0.317519,1.47467,-1.77728,0.127102,2.15232,-2.16265,-0.014065,2.26215,-2.25115,0.177419,2.08688,-2.16364,0.272722,2.02675,-1.98615,-0.018205,2.12721,-2.17758,0.045221,1.98913,-2.60402,0.08464,1.75019,-2.42792,0.134314,1.93541,-2.75667,0.060117,1.50544,-2.67518,0.133625,0.332934,-2.60136,0.38013,0.357489,-1.64061,1.07729,0.688838,-1.83872,1.38371,0.4018,-1.77615,0.306089,2.08179,-1.63359,0.02802,1.65441,-1.47657,0.447162,0.483054,-2.47675,0.35904,1.99312,-2.38974,0.470854,1.82857,-2.63598,0.30278,1.71594,-2.61734,0.148881,1.83307,-2.52291,0.092637,1.87594,-2.60409,0.414594,1.73325,-2.74041,0.393379,1.62197,-2.81285,0.184396,1.63785,-2.69183,0.009988,1.88898,-2.79336,-0.002101,1.83287,-2.91515,-0.016856,1.60728,-2.82547,0.002697,1.68049,-2.44573,0.027063,2.25696,-2.27671,0.054315,2.30612,-2.44475,0.122601,2.50734,-2.63388,0.226372,1.73314,-2.87392,0.324105,1.4576,-2.50588,0.044437,2.26728,-2.75074,0.008514,2.22314,-2.54616,0.114589,2.32592,-2.76186,0.075514,2.26828,-2.90328,0.007275,2.08006,-2.71643,0.065981,2.11094,-1.4164,0.871509,-0.837375,-1.49742,0.888694,-1.09349,-1.96842,0.867683,-0.986852,-1.95249,1.39626,0.356908,-1.31991,0.139223,-0.760166,-2.18107,0.105213,-0.905849,-2.18656,0.039482,-0.770468,-2.44851,0.129015,-0.294909,-1.64435,0.083041,0.09408,-2.02524,-0.090113,1.67451,-2.49499,-0.050772,1.56767,-2.24155,-0.031266,1.82741,-1.50276,1.02193,0.285706,-2.64446,-0.055319,1.39055,-1.61484,0.90635,0.871855,-1.8633,1.06942,0.857649,-1.54009,0.707387,0.809966,-1.55648,1.21404,0.248309,-2.2884,0.961496,0.594476,-2.45502,0.451113,-0.169344,-2.31478,0.988529,0.011227,-1.98653,1.08571,0.805372,-2.23801,1.19558,0.019992,-2.33609,1.31944,-0.545868,-2.3077,1.30857,-0.699312,-2.20124,1.28099,-0.787606,-1.92405,1.26459,-0.975688,-2.09276,1.36248,0.241598,-1.66231,1.55958,0.204906,-1.42467,1.66583,-0.103268,-1.35424,1.7773,-0.379487,-1.36164,1.69668,-0.560717,-1.38119,6.8756,0.261308,-2.62049,6.37851,-0.182185,-2.56356,7.21181,-0.248966,-1.54987,1.4078,-1.05321,-1.37691,0.447256,-1.07316,-1.38636,0.146294,-1.01232,-1.43492,0.032191,-0.880573,-2.01347,0.137184,-1.10292,-1.84343,0.052716,-1.1236,-2.01827,0.380036,-1.11112,-2.14841,1.99718,-0.107894,-2.15039,0.099097,2.69327,-2.72754,-0.018032,2.09825,-2.87116,-0.045488,2.03368,-2.68307,-0.033493,2.22212,-2.51719,-0.001004,2.25446,-1.47714,6.51467,-1.57596,-1.50795,7.04776,-1.44461,-1.6254,-0.044986,-0.786462,-1.54156,0.011431,-1.00783,-1.53537,0.337998,-1.22326,-1.81118,0.381902,-1.22477,-1.77292,-0.059396,-0.436939,-1.90669,-0.038212,-0.159748,-1.6509,0.902148,-1.17868,-1.83072,0.890749,-1.12877,-1.71999,0.157066,-1.22221,-1.44962,0.13996,-1.10621,-1.78393,1.31278,-1.10459,-1.66409,1.40537,-1.12377,-2.33783,1.01815,-0.400828,-2.87319,0.280076,1.1717,-2.44014,0.674067,0.49911,-1.45501,1.52903,-0.863607,-2.32015,0.171648,2.4487,-2.34339,0.032677,2.51082,-2.47641,0.016181,1.82046,-1.68038,0.3377,1.81584,-2.24956,1.74788,-0.684965,-1.67713,1.76505,-1.11626,-1.78882,1.76115,-1.10825,-1.87177,1.75544,-1.06505,-1.54646,1.79528,-1.04226,-1.44084,2.01565,-0.873611,-1.9126,0.470007,2.01712,-1.98187,0.318774,2.42874,-1.87649,1.64933,0.196643,-2.96186,0.223628,1.36374,-2.93312,0.056181,1.06666,-2.48553,-0.076283,1.0623,-2.50381,-0.002823,0.331491,-2.09769,0.000125,0.351326,-1.50561,0.427091,0.707686,-1.729,1.36051,0.384254,-1.52283,0.906899,0.622339,-2.11589,0.303188,2.69414,-2.21798,0.289374,2.63645,-2.52075,0.009706,2.45597,-2.36835,0.189053,2.43769,-2.52506,0.152503,2.41331,-2.44939,0.20431,2.41306,-2.51178,0.084186,2.27658,-2.55375,0.109399,2.38794,-2.5078,0.127384,2.03679,-2.65873,0.138768,1.96894,-2.73591,0.017812,2.14912,-2.59458,0.115702,1.98951,-2.50181,0.01223,2.21248,-2.48937,0.102719,2.21582,-2.66576,-0.030294,2.1562,-2.92666,0.053186,1.92401,-2.93265,0.051367,2.03627,-2.70174,0.102782,2.05943,-2.75087,0.032112,2.14132,-2.65701,0.092041,1.92734,-2.90611,-0.012779,2.0267,-2.8116,0.150575,1.67447,-2.8436,-0.024242,1.74017,-2.82795,-0.000173,1.47204,-2.96631,0.057561,1.43743,-2.94451,-0.046946,1.68322,-2.72219,0.109242,2.32632,-2.61037,0.123009,2.35666,-2.66769,0.120924,2.34979,-2.58052,0.186701,2.28351,-2.7173,0.167368,2.24961,-2.6598,0.205235,2.2577,-2.87773,0.062124,2.12541,-2.77934,0.090395,2.12702,-2.82221,0.071234,2.1396,-2.77517,0.149007,2.06669,-2.88412,0.129266,2.0407,-2.80873,0.156251,2.05654,-3.02759,0.064382,1.81184,-2.92846,0.082147,1.85405,-2.99573,0.057624,1.85204,-2.92178,0.138031,1.80787,-2.99671,0.133029,1.77055,-2.97377,0.147784,1.78208,-3.05091,0.031924,1.79654,-2.89572,0.072676,1.8544,-3.00684,-0.048326,1.77287,-2.88742,-0.029573,1.83076,-3.01236,-0.008875,1.67342,-2.88659,0.023034,1.85739,-0.822197,11.9257,-1.18553,-1.23018,11.9357,-1.33705,-2.83985,12.0318,-0.32757,-2.42551,8.53076,-0.285359,-2.07218,9.1729,-0.92123,-2.34452,9.17618,-0.538466,-2.44884,9.12049,-0.213341,-0.750037,8.85156,0.339943,-2.04447,8.2004,0.719478,-2.01824,9.17736,0.876811,-1.46378,9.11989,1.01657,-1.25213,8.94962,0.953862,-2.30954,7.79159,0.263989,-1.93954,7.05152,0.41897,-1.7195,7.63545,0.677471,-1.4155,7.6495,0.579502,-1.48773,8.15245,0.836466,-1.30873,8.62007,0.928978,-0.853431,8.73523,0.482898,-2.47851,7.90564,-0.155466,-2.32348,7.1158,0.166052,-1.29062,7.66585,-1.154,-1.90085,8.39011,-1.07262,-1.96194,7.08944,-1.49305,-1.1643,6.98427,-1.2068,-1.92539,7.57748,-1.31944,-2.4455,7.87841,-0.644306,-2.29221,8.46506,-0.625913,-2.35481,7.7655,-0.931062,-2.50454,7.27827,-1.00018,-1.00212,6.95881,-0.964696,-1.82239,9.17632,0.981663,-2.24251,9.04067,0.475309,-0.947401,8.86401,0.737949,-0.983669,8.61134,0.638099,-1.66885,7.01152,0.423439,-0.717627,8.30964,0.24105,-0.79184,8.94043,-0.796026,-1.16948,9.13157,-1.01279,-0.924634,8.2067,-0.815437,-1.03248,7.40298,-0.89528,-1.18323,8.34387,-0.982069,-2.35744,8.60891,0.152097,-0.993799,8.23977,0.542184,-1.65098,9.15068,-1.095,-0.580427,8.80786,-0.031971,-0.937601,7.41193,-0.206928,-0.624221,8.18829,-0.24467,-1.01697,6.86939,-0.278366,-2.08513,7.71273,0.592422,-1.8495,8.14947,0.847662,-2.93404,12.0098,0.945866,-1.11482,12.0035,1.42586,-1.19965,26.6858,-0.085688,-1.24625,27.026,-0.502839,-1.15725,27.0105,-0.177573,-1.26508,26.9505,-0.585551,-1.08005,26.805,-0.189239,-1.17818,26.7972,-0.10579,-1.20897,26.789,-0.332225,-1.2885,27.1166,-0.641905,-1.29404,27.3511,-0.59452,-1.23907,27.4259,-0.29834,-1.36843,26.913,-0.513971,-1.34691,26.9127,-0.599349,-1.27016,26.725,-0.327583,-1.27104,26.5854,-0.296004,-1.14003,26.7092,-0.328226,-1.14125,26.4894,-0.160294,-1.24934,26.9246,-0.179407,-1.17515,27.1457,-0.211771,-1.23292,27.2882,-0.188909,-1.29539,27.3855,-0.24437,-1.29915,27.1391,-0.296317,-1.24722,27.3015,-0.25511,-1.34124,27.4368,-0.361311,-1.32731,27.3576,-0.331472,-1.40352,27.3315,-0.571925,-1.35579,27.2898,-0.551415,-1.39499,27.2715,-0.486187,-1.38991,27.0904,-0.629878,-1.34887,27.085,-0.601795,-1.38487,27.0743,-0.52421,-1.32885,26.9056,-0.534105,-1.19341,26.851,-0.449307,-1.26662,26.8938,-0.435822,-1.25913,26.7928,-0.230712,-1.34411,26.8786,-0.393643,-1.34354,27.0592,-0.366391,-1.21177,26.7239,-0.201861,-1.22069,26.5282,-0.32636,-1.22287,26.6589,-0.132399,-1.24907,26.8387,-0.153567,-1.12051,26.981,-0.160968,-1.24829,27.0516,-0.466022,-1.27572,27.3773,-0.342605,-1.11963,26.9426,-0.24092,-0.962972,26.9345,-0.129247,-1.17551,26.5352,-0.101415,-1.07323,26.5565,-0.045312,-1.13765,26.9903,0.011936,-1.06285,26.5117,-0.079244,-1.26284,27.2072,-0.471416,-1.25097,27.3116,-0.395744,-1.16444,27.3282,-0.173731,-1.21931,27.3744,-0.344392,-1.25937,26.9113,-0.204715,-1.256,26.8335,-0.172508,-0.9996,26.4593,-0.177479,-0.921859,26.1359,-0.051553,0,29.0826,-0.541411,-0.401894,29.0288,-0.534387,-1.19126,27.3856,-0.368351,-1.04807,28.4821,-0.526547,-1.17064,28.1126,-0.487441,-1.07515,26.515,-0.231418,-1.07414,26.4827,-0.178827,-1.03148,26.5168,-0.212163,-1.10693,26.7342,-0.021149,-1.13945,27.0595,-0.031827,-1.02492,26.4999,-0.166409,-0.10065,27.1244,1.41757,-0.46706,27.2968,0.559074,-0.353725,27.3335,1.23352,-0.559933,27.3666,1.25403,-0.68876,27.315,1.17799,-0.276391,27.2629,1.21164,-0.352894,27.2647,1.22102,-0.670351,27.2692,1.17843,-0.724557,27.2873,1.11822,-0.465853,27.2508,1.25469,-0.580348,27.2515,1.24448,-0.734624,27.3608,1.19584,-0.583014,27.3893,1.27396,-0.356312,27.3702,1.27777,-0.567334,27.3883,1.2585,-0.703656,27.3417,1.18562,-0.686486,27.2437,1.16909,-0.31578,27.1804,1.26527,-0.350542,27.2396,1.24118,-0.468221,27.2201,1.26521,-0.810531,27.3199,1.09174,-0.756733,27.3079,1.11968,-0.26413,27.2605,1.24843,-0.797281,27.2964,1.06994,-0.58927,27.2209,1.24785,0,26.7594,1.84734,0,27.0691,1.66447,0,26.9542,1.74484,0,26.6862,1.82412,0,27.2115,1.5774,0,27.3788,1.51714,0,28.599,1.1787,0,27.7708,1.52995,-0.312597,28.8343,0.705776,-0.084672,26.757,1.81256,-0.062955,27.1953,1.54815,-0.075515,26.8694,1.76394,-0.070293,26.937,1.71317,-0.215396,27.3617,1.34692,-0.662198,28.8968,-0.085703,-0.306669,29.0382,-0.040326,-0.066907,26.6582,1.76102,-0.076628,26.6946,1.79114,-0.135977,26.6753,1.68112,-0.154683,26.6962,1.68905,-0.096699,26.6553,1.64984,-1.19077,27.4824,-0.282566,-0.926406,26.1409,-0.007053,-0.066828,27.5495,1.54787,-0.074119,27.3604,1.48394,-0.086569,27.47,1.51435,-0.33251,27.551,1.46166,-0.622872,27.4513,1.30847,-0.292479,27.8061,1.46296,-0.922831,27.3977,0.953112,-0.797046,27.4242,1.17821,-0.841279,27.5294,1.13277,-0.655832,27.5556,1.32333,-1.00974,27.886,0.54457,-1.1633,27.7169,-0.058264,-1.12244,27.6572,0.143554,-0.885183,28.0722,0.840357,-1.0651,28.0371,0.310091,-1.10887,28.1444,0.058741,-0.935908,28.3202,0.551657,-1.18992,27.7477,-0.257525,-0.96363,28.4967,0.23144,-1.13992,28.1998,-0.237188,-0.967974,28.5967,-0.184095,-0.9461,27.6134,0.810299,-0.357332,27.4215,1.35168,-0.317128,28.5768,1.1141,-0.314227,28.2044,1.37414,-0.677501,28.5027,0.884261,-0.666494,28.7436,0.514715,-0.656898,28.1819,1.16255,-0.852694,27.7882,1.00266,-0.657384,27.8405,1.25912,0,25.4647,0.854061,0,25.5878,1.36303,0,26.5383,1.57732,0,26.5788,1.61242,-0.883302,26.0077,0.040191,-0.945959,26.0965,0.107866,-0.902149,25.9685,0.340902,-0.960353,26.1361,0.418941,-0.190528,25.4969,0.856413,-0.662888,25.836,0.896523,-0.970717,26.3961,0.521677,-0.88327,26.2399,0.696477,-0.747466,26.0919,0.907075,-0.745286,25.7936,0.564436,-0.836105,25.9463,0.621527,-0.5496,25.8966,1.1262,-0.631622,26.0702,1.10547,-0.415473,25.5829,0.889639,-0.12337,25.5209,1.18389,-0.465429,25.797,1.17738,-0.369499,25.8124,1.27004,-0.145087,25.578,1.3331,-0.156957,25.6862,1.39698,-0.389256,25.6946,1.23824,-0.549725,25.6812,0.912359,-0.369734,25.5893,1.16772,-0.417621,25.9775,1.25422,-0.347579,25.9026,1.28463,-0.58673,26.2369,1.22742,-0.553128,26.3794,1.27171,-0.155232,25.8292,1.41191,-0.975453,26.2095,0.063727,-0.662653,26.2588,1.13379,-0.766768,26.3455,0.970548,-0.482693,26.5263,1.3188,-0.556624,26.6255,1.27742,-0.636639,26.4492,1.19471,-0.745239,26.5727,1.09191,-1.03439,26.3862,0.189292,-1.0504,26.5555,0.295728,-0.958268,26.6221,0.694157,-1.04968,26.8126,0.495083,-0.901286,26.8031,0.933434,-0.1674,26.7446,1.68004,-0.161614,26.8307,1.62299,-0.066076,27.0545,1.63453,-0.156675,27.0018,1.52617,-0.1719,26.8711,1.54988,-0.404701,26.4375,1.36683,-0.192817,27.1476,1.3949,-0.390401,26.666,1.36234,-0.240421,26.9459,1.44015,-0.651724,26.8477,1.22933,-0.436578,26.7748,1.34378,-0.332698,26.8699,1.38516,-0.250817,27.0801,1.38061,-0.337245,27.0365,1.32929,-0.472972,26.952,1.29652,-0.242178,26.6491,1.4674,-0.227344,26.7117,1.5604,-0.089062,26.6065,1.57956,-0.186623,26.616,1.52662,-0.194573,26.6668,1.5874,-0.162429,26.6295,1.54219,-0.134425,26.6022,1.54313,-0.256697,26.6061,1.42461,-0.166976,26.581,1.50861,-0.046742,26.5404,1.5712,-0.170567,26.6647,1.58825,-0.077255,26.6354,1.66801,-0.049078,26.6152,1.68803,-0.045817,26.5878,1.60154,-0.221527,26.8491,1.46237,-0.223879,26.804,1.49874,-0.293263,26.739,1.3978,-0.263534,26.735,1.42728,-0.111893,26.6279,1.56458,-0.153382,26.6616,1.56342,-1.13683,27.2847,0.048815,-1.00117,26.4628,-0.130784,-1.10621,26.8154,0.173173,-1.04321,26.4939,-0.056633,-1.16578,27.4334,-0.131191,-1.0823,26.6197,0.04455,-0.875258,27.2821,0.975472,-0.733009,27.1345,1.11714,-0.613182,27.1022,1.21547,-0.471592,27.1269,1.25572,-0.986789,27.0559,0.729452,-0.819876,26.949,1.07959,-0.910757,27.0702,0.909537,-0.179928,27.2836,1.33519,-1.06947,27.4957,0.374865,-0.989361,27.4236,0.710119,-0.875587,27.3579,1.03432,-0.820974,27.1875,1.00575,-1.1345,27.0682,0.089316,-0.345587,25.9937,1.30634,-0.482301,26.316,1.31311,0,25.9935,1.4229,-0.155263,25.9553,1.38679,-0.222531,26.0352,1.38307,-0.757783,25.7798,0.121962,-0.450957,25.5276,0.444656,-0.244796,25.4214,0.53916,-0.622167,25.683,0.50112,-0.790664,25.8324,0.264164,-0.519306,25.5934,0.461199,0,25.2796,0.548333,0,25.2067,0.53074,-0.251241,25.3444,0.455883,-0.466119,25.4662,0.320157,-0.420318,25.3814,0.307174,0.189869,14.7968,1.41247,0.08105,14.2324,-0.133906,0.138439,14.4137,1.04755,0.140242,14.2389,0.544411,0.158556,14.3282,0.879022,0.315231,14.3312,0.797439,0.161912,14.5968,1.26619,0.368746,14.4236,0.967865,0.462873,14.559,1.12528,0.772177,14.914,1.33547,0,14.4176,1.06645,0.20199,14.2496,0.274449,0,18.8288,1.81672,0.349288,19.9916,1.80162,1.07201,21.1735,1.68052,0.972944,20.5262,1.74965,0.234855,21.1632,1.73617,0.699108,19.9671,1.75648,1.01674,21.057,1.67588,1.54707,20.9847,1.45112,1.38939,20.4243,1.57649,0.892945,19.6967,1.66884,1.14226,17.8791,1.62354,1.02774,20.7674,1.70864,1.68747,20.431,1.35885,1.03927,18.8822,1.55231,1.26135,18.381,1.49274,0.340805,20.167,1.81125,0.977742,20.0126,1.70389,1.16926,20.104,1.67828,0.755917,20.0865,1.75568,0,21.3653,1.682,1.64872,21.7687,1.64546,1.86208,21.8328,1.473,2.34493,22.017,1.09475,2.26749,22.4116,1.12037,1.76693,22.5481,1.2822,1.21065,22.4463,1.48731,1.80958,21.9338,1.48877,1.68184,21.9937,1.54163,1.51519,21.9885,1.60987,0.248795,20.9249,1.79387,0.531693,20.7009,1.8217,0.755823,21.2995,1.746,2.04375,22.1199,1.31326,1.182,22.0058,1.68904,1.4089,22.2171,1.56063,1.7513,22.2584,1.43041,2.06934,21.4561,1.14102,2.01336,21.5828,1.30977,2.24906,21.6716,1.03882,2.10873,21.7151,1.25138,1.87473,21.3463,1.32631,1.87205,21.5107,1.42895,2.14941,21.3522,0.870133,1.94507,21.1988,1.11399,1.59665,21.2917,1.54984,1.65698,21.6161,1.60684,1.51829,21.1178,1.49721,1.67884,21.4891,1.57181,1.20319,21.3449,1.72123,1.45804,21.5257,1.68454,1.21628,21.5858,1.7506,1.41556,21.7386,1.6944,0.930577,21.445,1.78029,1.3996,21.8803,1.67425,1.13301,21.6957,1.75853,1.75545,21.6243,1.55039,1.81883,21.6621,1.51068,2.17641,21.9217,1.23313,0.240704,21.4037,1.69824,0.771378,21.5955,1.79823,0.434791,21.5156,1.76168,0.776176,22.096,1.6856,0.184993,21.869,1.67278,0.377857,21.9444,1.71364,0.626792,22.3304,1.58188,1.46271,20.6886,1.51574,0.592641,21.2069,1.71869,2.1811,21.2505,0.742639,2.29922,21.4132,0.581856,1.9473,21.0715,1.07316,2.33668,21.5949,0.730973,1.86017,21.7258,1.48252,1.52734,21.6331,1.66346,1.43488,21.6783,1.69275,0.377872,20.5096,1.85542,0.829691,20.2472,1.76913,0,19.9882,1.78782,0,20.5094,1.8401,0,20.1956,1.8049,0.939655,19.1936,1.57053,0,19.1087,1.78591,0.84142,18.1872,1.65249,0.568933,20.9263,1.76532,0.571771,19.6546,1.78933,0.624142,18.8429,1.75218,0.644809,18.5589,1.7762,0.580003,19.2837,1.73645,0.322929,14.2669,0.682803,1.01788,22.647,1.39947,0.238367,22.4149,1.49299,1.19391,27.3717,-0.436779,1.14124,27.0567,-0.560149,1.01189,26.5539,-0.415815,1.08992,26.8562,-0.506539,0.22794,25.2579,0.439655,0.713903,25.6472,0.073574,0.841687,25.9218,0.008768,1.20494,27.6912,-0.423419,0.676639,11.9814,1.01323,2.54149,11.9811,1.51279,0.32467,11.9199,-0.545945,0.540693,11.9214,-0.898212,1.7243,11.9727,-1.31828,0.247916,11.9196,0.458265,2.01102,11.9905,1.74382,2.51733,14.1287,1.3435,1.03701,14.2522,1.46594,2.76866,14.0597,0.822778,1.99693,14.1314,1.6877,0,19.6566,-1.4708,0,17.8627,-1.16866,0.561799,16.6684,1.84209,2.31738,17.0531,-0.03349,1.44479,18.7259,-0.97498,2.19319,17.291,0.569374,1.51279,19.1156,-1.07797,0.722268,20.077,-1.69551,2.22441,17.3397,-0.066528,1.13023,17.1366,-1.28819,1.32888,17.4679,-1.06978,0.503061,17.2696,-1.28936,0.340789,16.5354,-1.53532,0.691394,17.129,-1.32706,0.055774,15.6023,-1.50213,1.69361,15.7182,-1.70255,1.85642,15.0213,-1.67589,2.29535,16.3988,-0.653634,2.15313,16.7286,-0.805605,1.85842,16.3182,-1.35621,2.41306,14.5154,-0.949626,2.11628,15.7282,-1.16813,2.23267,15.097,-1.14376,2.49152,15.2152,-0.493197,2.60169,15.7175,0.026485,2.42577,16.6422,-0.000061,2.6561,14.8714,0.704049,1.92369,16.286,1.27867,2.30971,16.5833,0.598398,2.23172,17.0209,0.586904,1.97265,17.4138,1.12539,2.00724,16.856,1.13633,2.61001,14.5032,-0.507231,2.10275,14.3436,-1.39378,2.31172,13.8243,-1.07072,0.642159,13.6122,-1.00854,0.079858,14.6405,-1.27666,0.445579,16.1531,1.75252,1.45401,16.5096,1.5381,1.15361,15.9818,1.56201,1.77273,16.6746,1.34812,1.56273,16.8579,1.45144,1.77378,16.1857,1.38127,1.63541,16.4034,1.44954,1.26754,15.9402,1.52991,0.200077,13.9629,-0.041927,0.337794,13.8073,-0.591448,0.28928,14.0335,-1.1304,0.204624,15.3991,1.65272,1.07617,15.644,1.50569,1.45021,15.5665,1.50895,1.65695,15.5526,1.48659,1.59873,14.8683,1.57625,1.21592,14.9691,1.48675,0.65072,14.914,1.32902,2.11877,16.4393,1.07865,2.86881,13.9131,0.203387,0.548643,14.4943,1.12321,2.77011,14.6476,0.154622,2.56432,15.5936,0.748785,1.11922,13.5519,-1.31913,0.573057,16.5379,-1.60217,0.228301,15.6661,-1.71263,0.621304,14.0214,-1.5023,0.315121,14.6783,-1.65102,1.58561,13.5975,-1.3515,1.01055,16.531,-1.65124,0.659987,15.663,-1.9009,1.16473,14.076,-1.71022,1.87857,18.6695,-0.52164,2.58002,13.9505,-0.755069,1.84284,19.3738,-1.01815,1.47356,20.0249,-1.58053,2.035,20.0244,-1.17144,2.05547,19.2628,-0.613603,2.22664,19.7982,0.470653,2.33025,20.3599,0.319232,1.80403,19.5828,1.20117,1.20653,19.0819,1.5134,2.13787,18.5061,0.365362,1.038,19.3878,1.56717,1.02814,16.6123,1.70512,2.30093,19.7747,-0.06485,2.11697,18.6009,0.021547,2.18204,19.2182,-0.079778,2.16836,19.1748,0.173831,1.39354,18.0073,-0.947807,1.90443,17.9201,-0.610185,2.18676,17.7663,0.698781,2.17511,17.8473,-0.076893,0.617557,17.934,1.84217,1.77275,17.7344,1.36002,1.93933,18.5275,0.894342,1.24201,17.4348,1.65024,0.600262,17.4601,1.88753,1.67719,18.5378,1.20227,2.39995,20.2811,-0.100522,0.645389,18.5983,-1.24436,0.584064,19.5923,-1.53795,0.564543,19.1941,-1.4127,0.581916,17.9133,-1.16549,2.05723,18.1679,0.869803,1.82282,18.1471,1.18122,0.875022,15.5519,1.5156,1.97871,13.6692,-1.24476,1.47033,16.4645,-1.57011,1.22782,15.6992,-1.9184,1.6538,14.2094,-1.65966,1.36763,14.8762,-1.91758,0.791087,14.7446,-1.89582,1.90161,17.3643,-0.753877,1.82782,16.9948,-1.04317,1.52689,17.0652,-1.20199,2.07536,19.3109,0.738154,1.46169,19.3208,1.43689,1.81954,18.8848,1.06555,1.59083,20.0578,1.44557,1.14544,19.6956,1.63347,2.0061,18.8321,0.727084,2.37884,14.9355,1.28432,2.17605,15.5795,1.28836,1.87376,15.5555,1.43336,1.97436,14.922,1.57581,1.48684,14.1003,1.64341,2.65229,22.1741,0.752282,1.31135,22.4095,-2.26899,2.32095,23.0077,0.821352,2.02979,24.1627,-0.10198,1.26459,23.0054,-2.27092,1.021,24.0692,-2.03747,1.2025,23.5641,-2.15879,2.58522,22.3667,0.886456,2.38866,22.7713,0.936271,2.76318,22.685,0.68964,2.76134,22.3026,0.618626,2.55137,21.8374,0.304524,2.50726,21.2989,-1.48894,2.74883,21.3127,-0.867509,2.66055,21.7752,-0.209498,1.72638,23.9809,-1.93486,2.49444,23.2901,0.550982,1.59952,24.6997,-1.14073,2.42962,21.3465,0.197037,1.24918,21.8375,-2.21405,2.16955,23.85,0.175133,2.18103,24.3339,-1.62586,2.09911,24.5754,-1.05038,2.36644,22.9166,-2.12738,2.12023,21.7083,-2.0246,0.931721,25.962,-0.339971,0,23.0227,1.1209,0,28.9677,-0.927468,0,23.696,0.513068,1.72417,22.7975,1.14602,0.446613,23.0555,1.14188,0.783483,24.0718,0.2906,0.936551,25.0741,-0.672418,2.25171,19.8704,-0.693085,1.16764,21.2284,-2.07418,1.04122,20.6616,-1.91914,0.455426,23.3444,0.921626,1.37187,23.6168,0.628708,1.24941,23.9815,0.32069,1.74559,23.5791,0.539818,1.17751,24.1169,0.130947,0.786556,24.341,0.02945,1.23085,24.6189,-0.705675,1.57962,24.5733,-0.744813,1.04333,24.242,-0.048872,0.268426,24.3129,-1.83702,0.713832,25.2595,-1.25673,1.03355,24.8103,-0.735969,0.572963,24.6107,0.147238,1.00539,28.277,-0.992948,0.541807,26.0642,-1.25065,0.796952,28.1526,-1.32585,0.897037,28.4182,-1.05626,0.92719,28.5836,-0.818054,1.04443,28.3986,-0.770888,1.13357,27.8221,-0.92104,0.84683,25.919,-0.81346,0.842424,25.5058,-0.221681,0.834364,25.7645,-0.844145,0.908844,25.929,-0.616895,0.846877,27.4058,-1.42129,1.06812,27.3205,-1.03564,0.450016,28.407,-1.43632,0.467578,28.6758,-1.21504,0.486989,28.881,-0.910754,0.356516,27.5034,-1.69808,0.769951,28.8341,-0.541349,0.306121,28.1639,-1.59054,0.771879,25.1934,-0.119917,0.829174,22.8595,1.27984,1.53937,22.992,1.06116,0.319919,23.7569,0.591327,0.573308,25.2966,0.078184,0.33124,23.887,0.475969,0.409311,24.1254,0.322588,0.783122,26.4126,-1.12816,0.940737,26.4339,-0.816705,0.912074,25.8131,-0.304267,0.617808,25.7979,-1.19246,0.447021,26.4251,-1.36227,0.807363,26.9547,-1.35644,1.01664,26.9386,-0.987163,0.318037,26.9695,-1.61465,1.99,23.2049,0.786072,1.46867,23.2186,0.915009,0.824846,23.3288,0.931583,0.841796,23.0961,1.10583,0.418562,22.7377,1.34721,0.449843,23.5829,0.756077,0.846579,23.9694,0.458564,0.904987,23.6571,0.704835,0.759194,24.2048,0.116411,0.483853,24.4126,0.231205,0.371099,24.9459,0.216575,0.203511,24.4177,0.269558,0.093735,24.834,0.368514,0.874003,25.448,-0.787149,0.562426,25.4756,-1.27611,1.64234,20.3775,-1.65115,1.03407,24.5564,-1.74517,1.19101,24.8413,-1.23743,1.00133,24.9699,-1.18037,0.829551,24.9296,-1.47202,0.993359,24.7782,-1.57635,1.40206,24.5338,-1.70554,0.399354,25.1056,-1.43458,2.33778,20.8647,0.332528,2.22979,20.4565,0.599073,2.11967,20.4668,0.801345,1.97363,20.3065,1.02417,2.06639,20.032,0.865303,2.50353,20.8732,-0.117378,2.32378,20.8826,-1.41998,1.94521,21.0552,-1.81438,2.39027,20.3287,-0.80308,2.15266,20.464,-1.32024,1.81126,20.7119,-1.73162,0.265917,24.5823,-1.69453,1.1652,28.0707,-0.636338,0.882392,27.7847,-1.35881,2.57433,20.8314,-0.845118,3.00689,22.0434,-0.878171,2.02321,24.5121,-0.71996,2.88224,22.8253,0.534863,0.18424,11.9065,-0.191373,2.22744,12.0084,-1.01087,2.50965,12.0198,-0.751588,1.98993,24.4137,-0.490859,2.76133,22.1437,-1.74292,2.22416,23.9966,-1.89253,2.84493,22.3707,-0.154132,0,15.5887,-1.3402,0,16.6763,1.88215,0,18.633,-1.20436,0,25.3613,-1.38344,0,21.8669,-2.08395,0,23.8115,-1.98733,0,23.3681,0.827107,0,24.0511,0.291918,0,20.1059,-1.66147,0,28.164,-1.62895,0,26.9623,-1.65157,0,24.5774,-1.6829,0.17248,11.9148,0.153336,3.36769,22.6862,-1.28364,3.33616,23.2588,0.151519,2.99797,21.9965,-1.13578,2.61756,24.4755,-0.386258,2.66562,24.5849,-0.87781,3.69488,24.5708,-0.725464,3.89668,22.6587,-1.17179,3.07781,23.0161,-1.8305,2.31581,23.2881,-2.11065,4.04727,23.609,-1.78833,2.738,24.454,-1.37712,5.82471,23.1153,0.104118,7.04457,23.4257,0.242698,6.89276,22.9687,-0.002208,6.93518,22.8652,-0.845416,7.51453,22.7629,-0.528288,7.54329,23.0064,-1.01644,8.34805,23.0354,-0.684962,8.07031,22.7515,-0.386572,12.1096,23.85,2.19288,11.3669,23.6144,2.39018,11.8461,23.0653,3.04443,11.9062,23.0501,3.00511,11.62,22.7979,2.88345,11.661,22.7688,3.00305,11.8897,22.9852,2.86966,11.806,22.7562,3.18323,11.7259,23.4355,2.41157,12.3369,23.5275,1.32855,11.4032,23.4791,2.60679,11.0523,23.7851,1.8661,11.1544,23.1396,1.16819,11.5154,23.8753,1.5389,11.2745,23.0129,2.19506,11.3145,23.316,0.927647,12.2503,23.7671,1.8509,11.3998,23.9002,1.69633,11.5994,23.6905,1.16851,12.3359,23.627,1.52209,11.705,22.8166,3.12363,11.9681,22.9561,3.14721,11.9014,23.0116,3.08812,12.258,23.2193,1.16851,11.6582,22.95,2.70673,11.5401,22.8763,2.78118,11.7635,23.1481,2.81102,11.6264,23.2291,2.94069,11.7485,22.9022,2.77287,12.0073,23.0986,1.45622,11.2384,23.0906,1.59703,12.0018,23.3429,1.95003,11.9466,23.3703,2.25497,11.5944,23.6156,2.41463,11.1642,23.7481,2.04946,11.4172,23.7431,2.28945,10.9558,23.2319,2.20541,10.9989,23.1365,2.15313,11.5397,23.5268,2.40969,11.6513,23.3601,2.44577,10.7825,23.418,1.83928,10.927,23.2009,1.69843,11.5964,23.5452,1.05685,12.2408,23.3747,1.1782,10.8001,23.5343,1.8559,10.8882,23.6346,1.88486,10.9352,23.3282,2.24739,10.7254,23.3102,1.54696,10.6817,23.5113,1.67395,10.6986,23.5891,1.69587,10.7379,23.7028,1.6867,10.8144,23.8166,1.63877,11.1615,23.8767,1.2712,11.2592,23.6203,0.890721,10.8464,23.2387,0.748268,10.8208,23.1314,1.13291,12.4556,23.3232,2.01324,12.5637,23.3298,1.61797,5.01388,24.0136,-1.42351,5.24963,23.8086,-1.58982,5.77888,23.4846,-1.5253,3.28849,23.0357,-0.202128,7.57034,23.3261,-1.10779,7.0549,23.9619,0.025514,11.025,23.895,1.42241,3.00923,23.4852,0.38007,11.9573,22.746,3.09141,12.0155,22.8475,3.07098,6.91864,22.9982,-1.10377,6.87331,23.2296,-1.26464,6.24544,22.7691,-0.712136,2.65053,24.215,-0.030526,3.7291,24.532,-1.06012,4.46425,24.2476,-1.09896,11.9994,23.9406,2.35073,12.1929,23.9013,1.99453,12.2888,23.754,1.67956,11.7385,23.0303,3.08222,11.6327,22.8523,3.07491,11.6527,22.9446,3.09447,10.9734,23.4535,2.27462,11.0451,23.521,2.29395,11.694,22.9204,3.10637,11.7288,22.9795,3.09826,11.5297,23.1586,2.98518,11.4649,23.0619,2.98685,11.4392,22.9705,2.93605,11.2081,23.6015,2.33918,11.5436,23.3687,2.64406,11.9235,23.8783,2.44248,11.1267,23.4142,2.54225,11.2119,23.4869,2.54651,11.1979,23.032,2.45802,11.0689,23.156,2.45842,11.5841,23.2923,2.53897,11.061,23.2741,2.51299,11.3986,23.0352,2.45687,12.6608,22.8842,3.18428,12.6963,22.9199,3.2168,12.5649,23.0595,3.08479,12.6149,23.0263,2.94889,12.7121,22.7778,3.16763,12.3252,23.3755,2.87429,12.3849,23.321,2.74548,12.8093,22.7138,3.11355,12.678,23.1402,3.17385,12.8355,23.0253,3.1692,12.736,22.9896,3.2161,12.545,23.5863,2.87662,12.7781,22.8861,3.24917,12.807,22.9655,3.21298,12.4619,23.5405,2.9469,12.8162,22.8606,2.95161,12.9385,22.9153,3.04304,12.8583,23.0867,2.91548,12.7656,22.7504,3.07207,12.9143,22.7342,3.08616,12.4964,23.3423,2.64643,12.7879,23.1724,3.1265,12.863,23.1593,3.02472,12.9175,22.989,3.07407,12.63,23.5462,2.76675,12.9552,22.88,3.09241,12.8716,22.9984,3.14742,12.9785,22.7955,2.79148,13.0264,22.8217,2.82952,12.9132,22.9329,2.70212,13.0308,22.6228,2.70817,13.0088,22.6621,2.80283,12.7038,23.291,2.53358,12.7335,23.2285,2.38344,13.1355,23.0487,2.72934,13.0161,23.027,2.78577,13.1797,22.9037,2.76947,13.082,22.8866,2.83079,12.95,23.4632,2.53891,12.8202,23.4372,2.60459,13.095,22.7749,2.86017,13.15,22.8453,2.81414,13.0729,22.7195,2.57245,13.2338,22.768,2.62512,13.0536,22.8759,2.49849,12.9357,22.8846,2.57333,13.1841,22.5767,2.69991,12.9009,23.2843,2.29579,13.1066,22.5799,2.78446,13.1925,23.0112,2.5957,13.2356,22.8636,2.66457,13.0071,23.4275,2.41994,13.2471,22.725,2.66529,13.2054,22.867,2.74164,13.0608,22.6824,2.33265,13.165,22.7897,2.38648,13.0199,22.8628,2.25891,13.117,22.5473,2.28378,13.109,22.5863,2.38183,12.8325,23.2041,2.12834,13.1788,22.5152,2.34195,13.1604,22.9837,2.32132,13.2639,22.8464,2.2835,13.1772,22.848,2.37098,12.9594,23.3578,2.14418,13.2109,22.7354,2.39329,13.2557,22.7833,2.32516,13.1418,22.6354,2.14382,13.2878,22.7144,2.17026,13.1689,22.8476,2.03795,13.0088,22.8169,2.15425,13.2545,22.5238,2.22258,12.9653,23.1218,1.86783,12.8389,23.0901,2.00685,13.2341,22.9811,2.24898,13.2608,22.9353,2.13095,13.2899,22.7967,2.18652,13.0327,23.3752,2.06581,13.0775,23.3219,1.94329,13.2985,22.6707,2.21472,13.2733,22.7712,2.29098,12.925,22.5692,1.83734,13.0189,22.6697,1.82553,12.9334,22.7924,1.7809,12.9552,22.4439,1.80157,13.008,22.5148,1.8764,12.7779,23.0159,1.68433,12.7393,22.8833,1.60077,13.0122,22.4579,1.86048,13.0593,22.7959,1.64451,13.0134,22.8248,1.73929,13.0482,22.7001,1.78327,12.9163,23.1124,1.48734,12.8912,23.1378,1.58798,13.0612,22.6213,1.81615,13.0765,22.662,1.7534,12.9305,22.494,1.67538,13.0468,22.5633,1.63174,12.937,22.6789,1.55761,12.8504,22.6678,1.69609,13.0523,22.4198,1.71508,12.7787,22.9021,1.46513,13.0394,22.4021,1.77877,13.0324,22.7354,1.56567,13.079,22.6867,1.69884,13.0643,22.6259,1.63588,12.8839,23.0212,1.41917,13.0686,22.5545,1.66218,13.0838,22.6481,1.7025,12.0443,23.5366,2.63998,12.2363,23.4252,2.347,12.2911,23.5276,2.32524,12.4586,23.0428,1.34284,10.7661,23.1957,1.40143,7.99688,22.7011,-0.065759,6.85236,22.8078,-0.479476,6.22231,22.8493,-0.312421,11.0479,23.1557,1.54135,2.57451,23.8713,0.189543,3.56684,23.8293,0.235407,3.74965,23.6521,0.157054,3.84928,23.17,-0.215503,3.51066,24.5046,-0.340739,3.48791,24.342,-0.074352,4.52921,24.0266,-0.093544,4.66221,24.2591,-0.665864,4.69799,24.2101,-0.383906,5.79638,23.9087,0.100136,6.85381,24.1407,-0.431228,6.8239,24.0149,-0.159557,7.62554,24.0827,-0.662932,7.24236,24.1747,-0.11813,7.61377,23.8158,-0.867007,8.3038,23.9599,-0.569981,8.20821,24.1262,-0.336945,8.37163,23.6145,-0.767847,11.2578,23.7333,1.00304,7.12319,22.7656,-0.315275,7.81919,22.8924,0.345872,5.76257,23.5038,0.280942,7.85035,24.0412,0.345716,7.6413,23.4661,0.414268,7.74427,23.7289,0.442587,7.17289,23.6968,0.177736,8.01543,24.1991,0.052515,7.41317,24.2169,-0.399618,6.96678,24.1182,-0.651454,6.84835,23.5099,-1.24533,6.81528,23.9527,-0.933992,4.04117,23.1497,-1.67224,3.29703,22.8399,-1.54217,3.89066,23.9699,-1.72381,3.08021,23.9432,-1.85477,11.913,22.7611,3.223,11.965,22.8212,3.22679,11.8554,22.7343,3.19281,11.9922,22.8913,3.19723,12.8113,22.7682,3.25476,12.9423,22.7538,3.17163,12.8534,22.7438,3.23709,12.8992,22.7321,3.19518,13.0924,22.6698,2.86998,13.24,22.6137,2.77478,13.1441,22.6303,2.86229,13.1988,22.6137,2.82827,13.2077,22.6086,2.4305,13.3154,22.5475,2.28822,13.2305,22.5693,2.42063,13.2859,22.5319,2.36892,13.0765,22.5109,1.86177,13.0994,22.4462,1.75003,13.0925,22.4877,1.85021,13.1086,22.4566,1.80535,3.28521,22.7132,-0.806969,3.75193,22.833,-0.643175,2.953,12.0231,0.154261,2.25174,1.96259,-0.39788,1.70943,2.05119,0.10965,1.37898,2.47927,-0.29436,2.26535,1.53676,-0.411976,2.18229,1.51751,-0.186059,1.69016,1.706,0.163637,1.44706,1.87312,-0.106514,1.36603,1.9374,-0.367539,1.37272,2.03669,-0.583217,1.11725,7.37808,0.254722,2.29082,7.15348,-1.30583,2.60059,7.29773,-0.679978,2.75849,6.33661,-0.607458,2.00837,6.55856,-1.643,2.44015,6.47162,-1.42994,2.70348,6.42759,-1.03046,2.64329,5.19174,-1.11071,2.34457,4.9209,-1.44778,1.95697,4.85667,-1.5712,0.920996,6.3373,-0.405343,0.821067,5.24532,-1.11772,1.10354,6.46014,-1.3092,0.909785,6.41186,-0.991822,1.48541,4.85133,-1.50155,1.16178,4.76043,-1.359,2.09166,1.59715,0.023552,1.9349,2.02637,0.101967,2.01474,2.01673,0.05085,1.9875,1.62972,0.14377,1.36896,1.23712,-0.115436,2.0721,-0.03216,1.94172,1.70656,0.074527,1.91291,1.57264,0.211476,1.70278,1.53681,0.005817,-0.304349,1.35036,0.770028,-0.455661,1.38818,0.791808,-0.045174,1.29744,0.443994,-0.795384,2.74757,0.154008,2.16732,2.48014,0.181197,2.05486,1.96902,0.275481,2.60956,2.86688,-0.010349,2.10393,2.83532,-0.061701,1.99539,2.48704,-0.028993,2.43109,2.35074,-0.010537,2.46292,2.21756,0.259002,2.46199,2.72865,-0.049628,2.03746,2.68429,0.006256,2.05502,1.78211,0.084734,2.32432,2.2474,0.017655,2.49939,2.25361,0.234556,2.32214,2.09352,-0.046147,2.50607,2.11028,0.317174,2.37292,2.20491,0.31926,-0.899185,2.2386,0.322662,2.09743,2.52194,0.181213,2.24477,2.25831,0.14297,2.35796,1.89233,-0.017123,-0.962423,1.30288,1.45811,-0.493261,2.28332,1.05663,-0.722487,2.16318,0.292839,2.35978,1.93775,0.284434,2.52456,2.57545,-0.000204,1.67774,1.86953,0.16892,2.59295,2.07446,0.164608,2.7308,2.0368,0.094534,2.6945,2.25651,0.120234,2.6417,2.03465,-0.033257,-0.681453,2.1687,-0.030388,-0.352643,2.88396,0.070277,0.887974,2.51186,0.114887,2.48404,2.37507,0.132056,2.51194,2.3509,1.00236,-0.523712,2.35534,1.1604,-0.539847,2.31205,1.15332,-0.362521,2.33632,1.16675,-0.671496,1.46498,-0.005504,-0.638427,2.28757,0.197708,2.45113,1.86648,0.031595,2.53229,1.9497,-0.057029,2.2678,2.1092,0.428534,1.91011,2.01074,0.494233,1.97118,1.66167,0.220005,1.87194,2.93939,0.042931,1.22409,3.04084,-0.00392,1.82876,2.93149,0.041457,1.8794,2.58177,0.090285,2.36131,2.7305,0.060948,2.32647,2.46623,0.429631,1.80944,2.62475,0.360404,1.64789,2.80998,0.317519,1.47467,1.77728,0.127102,2.15232,2.16265,-0.014065,2.26215,2.25115,0.177419,2.08688,2.16364,0.272722,2.02675,1.98615,-0.018205,2.12721,2.17758,0.045221,1.98913,2.60402,0.08464,1.75019,2.42792,0.134314,1.93541,2.75667,0.060117,1.50544,2.67518,0.133625,0.332934,2.60136,0.38013,0.357488,1.64061,1.07729,0.688838,1.83872,1.38371,0.4018,1.77615,0.306089,2.08179,1.63359,0.02802,1.65441,1.47657,0.447162,0.483054,2.47675,0.35904,1.99312,2.38974,0.470854,1.82857,2.63598,0.30278,1.71594,2.61734,0.148881,1.83307,2.52291,0.092637,1.87594,2.60409,0.414594,1.73325,2.74041,0.393379,1.62197,2.81285,0.184396,1.63786,2.69183,0.009988,1.88898,2.79336,-0.002102,1.83287,2.91515,-0.016856,1.60728,2.82547,0.002697,1.68049,2.44573,0.027063,2.25696,2.27671,0.054315,2.30612,2.44475,0.122601,2.50734,2.63388,0.226372,1.73314,2.87392,0.324105,1.4576,2.50588,0.044437,2.26728,2.75074,0.008514,2.22314,2.54616,0.114589,2.32592,2.76186,0.075514,2.26828,2.90328,0.007275,2.08006,2.71643,0.065981,2.11094,1.41641,0.871509,-0.837375,1.49742,0.888694,-1.09349,1.96842,0.867683,-0.986852,1.95249,1.39626,0.356908,1.31991,0.139223,-0.760166,2.18107,0.105213,-0.905849,2.18656,0.039482,-0.770468,2.44851,0.129015,-0.294909,1.64435,0.083041,0.09408,2.02524,-0.090113,1.67451,2.49499,-0.050772,1.56767,2.24155,-0.031266,1.82741,1.50276,1.02193,0.285705,2.64446,-0.055319,1.39055,1.61484,0.90635,0.871855,1.8633,1.06942,0.857649,1.54009,0.707387,0.809966,1.55648,1.21404,0.248309,2.2884,0.961496,0.594476,2.45502,0.451113,-0.169344,2.31478,0.988529,0.011227,1.98653,1.08571,0.805372,2.23801,1.19558,0.019992,2.33608,1.31944,-0.545868,2.3077,1.30857,-0.699312,2.20124,1.28099,-0.787606,1.92405,1.26459,-0.975688,2.09276,1.36248,0.241598,1.66231,1.55958,0.204906,1.42467,1.66583,-0.103268,1.35423,1.7773,-0.379487,1.36163,1.69668,-0.560717,1.38119,6.87559,0.261308,2.62049,6.37851,-0.182185,2.56355,7.21181,-0.248966,1.54987,1.4078,-1.05321,1.37691,0.447256,-1.07316,1.38636,0.146294,-1.01232,1.43492,0.032191,-0.880573,2.01347,0.137184,-1.10292,1.84343,0.052716,-1.1236,2.01827,0.380036,-1.11112,2.14841,1.99718,-0.107894,2.15039,0.099097,2.69327,2.72754,-0.018032,2.09825,2.87116,-0.045488,2.03368,2.68307,-0.033493,2.22212,2.51719,-0.001004,2.25446,1.47713,6.51467,-1.57597,1.50795,7.04776,-1.44461,1.6254,-0.044986,-0.786462,1.54156,0.011431,-1.00783,1.53537,0.337998,-1.22326,1.81118,0.381902,-1.22477,1.77292,-0.059396,-0.436939,1.90669,-0.038212,-0.159748,1.6509,0.902148,-1.17868,1.83072,0.890749,-1.12877,1.71999,0.157066,-1.22221,1.44962,0.13996,-1.10621,1.78393,1.31278,-1.10459,1.66409,1.40537,-1.12377,2.33783,1.01815,-0.400828,2.87319,0.280075,1.1717,2.44014,0.674067,0.49911,1.45501,1.52903,-0.863607,2.32015,0.171648,2.4487,2.34339,0.032677,2.51082,2.47641,0.016181,1.82046,1.68038,0.337699,1.81584,2.24956,1.74788,-0.684965,1.67713,1.76505,-1.11626,1.78882,1.76114,-1.10825,1.87177,1.75544,-1.06505,1.54646,1.79528,-1.04226,1.44084,2.01565,-0.873611,1.9126,0.470007,2.01712,1.98187,0.318774,2.42874,1.87649,1.64933,0.196643,2.96186,0.223628,1.36374,2.93312,0.056181,1.06666,2.48553,-0.076283,1.0623,2.50381,-0.002823,0.331491,2.09769,0.000125,0.351326,1.50561,0.427091,0.707685,1.729,1.36051,0.384254,1.52283,0.906899,0.622339,2.11589,0.303188,2.69414,2.21798,0.289374,2.63645,2.52075,0.009705,2.45597,2.36835,0.189053,2.43769,2.52506,0.152503,2.41331,2.44939,0.20431,2.41306,2.51178,0.084185,2.27658,2.55375,0.109399,2.38794,2.5078,0.127384,2.03679,2.65873,0.138767,1.96894,2.73591,0.017812,2.14912,2.59458,0.115702,1.98951,2.50181,0.01223,2.21248,2.48937,0.102719,2.21582,2.66576,-0.030294,2.1562,2.92666,0.053186,1.92402,2.93265,0.051367,2.03627,2.70174,0.102782,2.05943,2.75087,0.032112,2.14132,2.65701,0.092041,1.92734,2.90611,-0.01278,2.0267,2.8116,0.150575,1.67447,2.8436,-0.024242,1.74017,2.82795,-0.000173,1.47204,2.96631,0.057561,1.43743,2.94451,-0.046946,1.68322,2.72219,0.109242,2.32632,2.61037,0.123009,2.35666,2.66769,0.120924,2.34979,2.58052,0.186701,2.28351,2.7173,0.167368,2.24961,2.6598,0.205235,2.2577,2.87773,0.062124,2.12541,2.77934,0.090395,2.12702,2.82221,0.071234,2.1396,2.77517,0.149006,2.06669,2.88412,0.129265,2.0407,2.80873,0.156251,2.05654,3.02759,0.064382,1.81184,2.92846,0.082147,1.85405,2.99573,0.057624,1.85204,2.92178,0.13803,1.80787,2.99671,0.133029,1.77055,2.97377,0.147783,1.78208,3.05091,0.031924,1.79654,2.89572,0.072676,1.8544,3.00684,-0.048326,1.77287,2.88742,-0.029573,1.83076,3.01236,-0.008875,1.67342,2.88659,0.023033,1.85739,0.822196,11.9257,-1.18553,1.23017,11.9357,-1.33705,2.83985,12.0318,-0.327569,2.42551,8.53076,-0.285359,2.07218,9.1729,-0.92123,2.34452,9.17618,-0.538466,2.44884,9.12048,-0.213341,0.750037,8.85155,0.339943,2.04447,8.2004,0.719478,2.01823,9.17735,0.876811,1.46378,9.11989,1.01657,1.25213,8.94962,0.953862,2.30954,7.79159,0.263989,1.93954,7.05152,0.41897,1.7195,7.63545,0.677471,1.4155,7.6495,0.579502,1.48773,8.15245,0.836466,1.30873,8.62007,0.928978,0.853431,8.73522,0.482898,2.47851,7.90564,-0.155466,2.32348,7.1158,0.166052,1.29062,7.66585,-1.154,1.90085,8.39011,-1.07262,1.96194,7.08944,-1.49305,1.1643,6.98427,-1.2068,1.92539,7.57748,-1.31944,2.4455,7.87841,-0.644306,2.29221,8.46506,-0.625913,2.35481,7.7655,-0.931062,2.50454,7.27827,-1.00018,1.00212,6.95881,-0.964696,1.82239,9.17632,0.981663,2.24251,9.04067,0.475309,0.947401,8.86401,0.737949,0.983669,8.61134,0.638099,1.66885,7.01152,0.423439,0.717626,8.30964,0.24105,0.79184,8.94043,-0.796026,1.16948,9.13157,-1.01279,0.924634,8.2067,-0.815437,1.03248,7.40298,-0.89528,1.18323,8.34387,-0.982069,2.35744,8.60891,0.152097,0.993798,8.23977,0.542184,1.65098,9.15068,-1.095,0.580426,8.80785,-0.03197,0.937601,7.41193,-0.206928,0.624221,8.18829,-0.24467,1.01697,6.86939,-0.278366,2.08513,7.71273,0.592423,1.8495,8.14947,0.847662,2.93404,12.0098,0.945866,1.11482,12.0035,1.42586,1.19965,26.6858,-0.085688,1.24625,27.026,-0.502839,1.15725,27.0105,-0.177573,1.26508,26.9505,-0.585551,1.08005,26.805,-0.189239,1.17818,26.7972,-0.10579,1.20897,26.789,-0.332225,1.2885,27.1166,-0.641905,1.29404,27.3511,-0.59452,1.23907,27.4259,-0.29834,1.36843,26.913,-0.513971,1.34691,26.9127,-0.599349,1.27016,26.725,-0.327583,1.27104,26.5854,-0.296004,1.14003,26.7092,-0.328226,1.14125,26.4894,-0.160294,1.24934,26.9246,-0.179407,1.17515,27.1457,-0.211771,1.23292,27.2882,-0.188909,1.29539,27.3855,-0.24437,1.29915,27.1391,-0.296317,1.24722,27.3015,-0.25511,1.34124,27.4368,-0.361311,1.32731,27.3576,-0.331472,1.40352,27.3315,-0.571925,1.35579,27.2898,-0.551415,1.39499,27.2715,-0.486187,1.38991,27.0904,-0.629878,1.34887,27.085,-0.601795,1.38487,27.0743,-0.52421,1.32885,26.9056,-0.534105,1.19341,26.851,-0.449307,1.26662,26.8938,-0.435822,1.25913,26.7928,-0.230712,1.34411,26.8786,-0.393643,1.34354,27.0592,-0.366391,1.21177,26.7239,-0.201861,1.22069,26.5282,-0.32636,1.22287,26.6589,-0.132399,1.24907,26.8387,-0.153567,1.12051,26.981,-0.160968,1.24829,27.0516,-0.466022,1.27572,27.3773,-0.342605,1.11963,26.9426,-0.24092,0.962971,26.9345,-0.129247,1.17551,26.5352,-0.101415,1.07323,26.5565,-0.045312,1.13765,26.9903,0.011936,1.06285,26.5117,-0.079244,1.26284,27.2072,-0.471416,1.25097,27.3116,-0.395744,1.16444,27.3282,-0.173731,1.21931,27.3744,-0.344392,1.25937,26.9113,-0.204715,1.256,26.8335,-0.172508,0.9996,26.4593,-0.177479,0.921858,26.1359,-0.051553,0.401894,29.0288,-0.534387,1.19126,27.3856,-0.368351,1.04807,28.4821,-0.526547,1.17064,28.1126,-0.487441,1.07515,26.515,-0.231418,1.07414,26.4827,-0.178827,1.03148,26.5168,-0.212163,1.10693,26.7342,-0.021149,1.13945,27.0595,-0.031827,1.02492,26.4999,-0.166409,0.10065,27.1244,1.41757,0.46706,27.2968,0.559074,0.353725,27.3335,1.23352,0.559933,27.3666,1.25403,0.68876,27.315,1.17799,0.276391,27.2629,1.21164,0.352894,27.2647,1.22102,0.670351,27.2692,1.17843,0.724557,27.2873,1.11822,0.465853,27.2508,1.25469,0.580348,27.2515,1.24448,0.734624,27.3608,1.19584,0.583014,27.3893,1.27396,0.356312,27.3702,1.27777,0.567334,27.3883,1.2585,0.703656,27.3417,1.18562,0.686486,27.2437,1.16909,0.315779,27.1804,1.26527,0.350542,27.2396,1.24118,0.46822,27.2201,1.26521,0.810531,27.3199,1.09174,0.756732,27.3079,1.11968,0.26413,27.2605,1.24843,0.797281,27.2964,1.06994,0.58927,27.2209,1.24785,0,26.8811,1.79485,0,28.8716,0.744631,0,29.0823,-0.066668,0,26.605,1.69961,0,26.6485,1.78451,0,27.5487,1.55242,0,27.4865,1.53896,0,28.2055,1.43587,0.312596,28.8343,0.705776,0.084672,26.757,1.81256,0.062955,27.1953,1.54815,0.075515,26.8694,1.76394,0.070293,26.937,1.71317,0.215396,27.3617,1.34692,0.662198,28.8968,-0.085703,0.306669,29.0382,-0.040326,0.066907,26.6582,1.76102,0.076628,26.6946,1.79114,0.135977,26.6753,1.68112,0.154683,26.6962,1.68905,0.096699,26.6553,1.64984,1.19077,27.4824,-0.282566,0.926406,26.1409,-0.007053,0.066828,27.5495,1.54787,0.074119,27.3604,1.48394,0.086569,27.47,1.51435,0.33251,27.551,1.46166,0.622872,27.4513,1.30847,0.292479,27.8061,1.46296,0.922831,27.3977,0.953112,0.797046,27.4242,1.17821,0.841279,27.5294,1.13277,0.655832,27.5556,1.32333,1.00974,27.886,0.54457,1.1633,27.7169,-0.058264,1.12244,27.6572,0.143554,0.885183,28.0722,0.840357,1.06509,28.0371,0.310091,1.10887,28.1444,0.058741,0.935908,28.3202,0.551657,1.18992,27.7477,-0.257525,0.96363,28.4967,0.23144,1.13992,28.1998,-0.237188,0.967973,28.5967,-0.184095,0.9461,27.6134,0.810299,0.357331,27.4215,1.35168,0.317128,28.5768,1.1141,0.314227,28.2044,1.37414,0.677501,28.5027,0.884261,0.666494,28.7436,0.514715,0.656898,28.1819,1.16255,0.852694,27.7882,1.00266,0.657384,27.8405,1.25912,0,25.8383,1.44793,0,25.6904,1.42542,0,25.5177,1.20159,0.883301,26.0077,0.040191,0.945959,26.0965,0.107866,0.902149,25.9685,0.340902,0.960353,26.1361,0.418941,0.190528,25.4969,0.856413,0.662888,25.836,0.896523,0.970717,26.3961,0.521677,0.88327,26.2399,0.696477,0.747466,26.0919,0.907075,0.745286,25.7936,0.564436,0.836105,25.9463,0.621527,0.5496,25.8966,1.1262,0.631622,26.0702,1.10547,0.415473,25.5829,0.889639,0.12337,25.5209,1.18389,0.465429,25.797,1.17738,0.369499,25.8124,1.27004,0.145087,25.578,1.3331,0.156957,25.6862,1.39698,0.389256,25.6946,1.23824,0.549725,25.6812,0.912359,0.369734,25.5893,1.16772,0.417621,25.9775,1.25422,0.347579,25.9026,1.28463,0.58673,26.2369,1.22742,0.553128,26.3794,1.27171,0.155232,25.8292,1.41191,0.975453,26.2095,0.063727,0.662652,26.2588,1.13379,0.766768,26.3455,0.970548,0.556624,26.6255,1.27742,0.636639,26.4492,1.19471,0.745239,26.5727,1.09191,1.03439,26.3862,0.189292,1.0504,26.5555,0.295728,0.958267,26.6221,0.694157,1.04968,26.8126,0.495083,0.901286,26.8031,0.933434,0.1674,26.7446,1.68004,0.161614,26.8307,1.62299,0.066075,27.0545,1.63453,0.156675,27.0018,1.52617,0.1719,26.8711,1.54988,0.404701,26.4375,1.36683,0.192817,27.1476,1.3949,0.390401,26.666,1.36234,0.240421,26.9459,1.44015,0.651723,26.8477,1.22933,0.436578,26.7748,1.34378,0.332698,26.8699,1.38516,0.250817,27.0801,1.38061,0.337245,27.0365,1.32929,0.472971,26.952,1.29652,0.242178,26.6491,1.4674,0.227344,26.7117,1.5604,0.089062,26.6065,1.57956,0.186623,26.616,1.52662,0.194573,26.6668,1.5874,0.162429,26.6295,1.54219,0.134425,26.6022,1.54313,0.256697,26.6061,1.42461,0.166976,26.581,1.50861,0.046742,26.5404,1.5712,0.170567,26.6647,1.58825,0.077255,26.6354,1.66801,0.049078,26.6152,1.68803,0.045817,26.5878,1.60154,0.221527,26.8491,1.46237,0.223879,26.804,1.49874,0.293263,26.739,1.3978,0.263534,26.735,1.42728,0.111892,26.6279,1.56458,0.153382,26.6616,1.56342,1.13683,27.2847,0.048815,1.00117,26.4628,-0.130784,1.10621,26.8154,0.173173,1.04321,26.4939,-0.056633,1.16578,27.4334,-0.131191,1.0823,26.6197,0.04455,0.875258,27.2821,0.975472,0.733009,27.1345,1.11714,0.613182,27.1022,1.21547,0.471592,27.1269,1.25572,0.986789,27.0559,0.729452,0.819876,26.949,1.07959,0.910757,27.0702,0.909537,0.179928,27.2836,1.33519,1.06947,27.4957,0.374865,0.989361,27.4236,0.710119,0.875587,27.3579,1.03432,0.820973,27.1875,1.00575,1.1345,27.0682,0.089316,0.345587,25.9937,1.30634,0.308394,26.532,1.41014,0.482301,26.316,1.31311,0.155263,25.9553,1.38679,0.446817,26.1175,1.26808,0,25.368,0.596392,0.757783,25.7798,0.121962,0.450957,25.5276,0.444656,0.244796,25.4214,0.53916,0.622167,25.683,0.50112,0.790664,25.8324,0.264164,0.519306,25.5934,0.461199,0.251241,25.3444,0.455883,0.466119,25.4662,0.320157,0.420318,25.3814,0.307174,0,26.0208,1.13498,-0.324059,26.226,1.23449,-0.170332,26.254,1.34452,-0.289124,26.1648,1.24291,-0.121771,26.323,1.38339,-0.321236,26.5339,1.14513,-0.286238,26.2933,1.28209,-0.341824,26.545,0.751295,-0.381761,26.1869,1.15678,-0.371585,26.1409,0.675638,-0.322663,26.2326,0.290412,-0.182813,26.5521,0.32276,0,26.4943,0.347284,0,26.6496,1.23764,0,26.0614,0.365959,0,26.1462,1.39085,0,26.6826,0.825743,0.324059,26.226,1.23449,0.170332,26.254,1.34452,0.289124,26.1648,1.24291,0.379691,26.2323,1.18423,0.321236,26.5339,1.14513,0.286238,26.2933,1.28209,0.341824,26.545,0.751295,0.381761,26.1869,1.15678,0.371585,26.1409,0.675638,0.322663,26.2326,0.290412,0.182813,26.5521,0.32276,0,26.0211,0.6797,0,25.6411,-0.187655,0,26.5112,1.45873,0,26.2023,1.32968,0,26.3489,0.80699,-0.231453,26.1419,1.12896,-0.229602,26.2037,1.16893,-0.232409,26.2731,1.06168,-0.242726,26.137,1.02386,-0.258516,26.2053,1.07954,-0.281127,26.209,0.978545,-0.254753,26.294,0.960136,-0.27556,26.3015,0.820538,-0.299661,26.2091,0.848025,-0.251899,26.135,0.796876,-0.275654,26.2868,0.668975,-0.305493,26.2021,0.715638,-0.242444,26.0964,0.665102,-0.24649,26.2056,0.50181,-0.168905,26.3016,1.05589,-0.174017,26.3352,0.947734,-0.179097,26.348,0.804246,-0.171429,26.3243,0.652683,-0.149336,26.2318,0.479247,-0.190151,26.2467,1.18535,-0.192425,26.1586,1.22417,-0.157396,26.1925,1.26853,-0.144805,26.2406,1.24573,-0.142641,26.1341,1.22656,-0.082932,26.0811,1.02607,-0.110074,26.0699,0.887397,-0.118165,26.0365,0.725924,-0.189963,26.1177,1.14895,-0.131493,26.2753,1.14711,-0.021748,26.0734,0.408263,-0.115279,26.0661,0.407385,-0.125722,25.9978,0.629869,-0.160501,26.0522,0.424084,0,26.0137,0.711514,-0.194056,26.0362,0.471218,-0.151563,26.0556,0.419239,0,26.2692,1.1924,0,26.1067,0.421466,0,26.082,0.885296,0,26.2994,1.07054,0,26.335,0.95123,0,26.0869,1.0277,0,26.2481,1.29639,0,26.2291,0.48406,0.231452,26.1419,1.12896,0.229602,26.2037,1.16893,0.232409,26.2731,1.06168,0.242726,26.137,1.02386,0.258516,26.2053,1.07954,0.281127,26.209,0.978545,0.254753,26.294,0.960136,0.27556,26.3015,0.820538,0.29966,26.2091,0.848025,0.251899,26.135,0.796876,0.275654,26.2868,0.668975,0.305493,26.2021,0.715638,0.242444,26.0964,0.665102,0.24649,26.2056,0.50181,0.168905,26.3016,1.05589,0.174017,26.3352,0.947734,0.179097,26.348,0.804246,0.171429,26.3243,0.652683,0.149336,26.2318,0.479247,0.190151,26.2467,1.18535,0.192425,26.1586,1.22417,0.157396,26.1925,1.26853,0.144805,26.2406,1.24573,0.142641,26.1341,1.22656,0.082931,26.0811,1.02607,0.110074,26.0699,0.887397,0.118164,26.0365,0.725924,0.189963,26.1177,1.14895,0.131492,26.2753,1.14711,0.021748,26.0734,0.408263,0.115279,26.0661,0.407385,0.125722,25.9978,0.629869,0.1605,26.0522,0.424084,0.194056,26.0362,0.471218,0.151563,26.0556,0.419239,0,26.324,0.656211,0,26.15,1.27618],\"skinIndices\":[16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,7,2,6,1,7,2,6,1,7,2,6,0,7,2,6,1,7,2,6,1,7,2,6,0,7,2,6,1,7,2,6,0,7,2,6,1,7,2,6,0,7,2,6,1,7,2,6,1,7,2,6,1,7,6,2,1,7,2,6,1,7,2,6,0,11,12,6,24,12,24,11,17,12,11,24,6,12,11,24,17,11,12,6,24,12,24,11,17,12,24,11,6,12,11,24,6,11,12,6,24,6,11,1,7,12,11,24,6,12,11,24,6,11,6,12,1,6,11,12,1,11,12,6,24,11,12,6,24,11,12,6,24,11,12,6,24,12,11,17,24,12,17,24,11,12,17,24,13,24,12,11,25,24,12,11,25,24,12,25,11,24,12,25,11,24,12,25,13,24,12,13,17,24,12,11,25,24,12,11,25,24,12,11,17,12,11,24,17,12,11,24,17,12,24,11,17,24,12,25,11,24,12,11,17,24,12,11,13,24,12,25,11,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,12,24,11,25,12,24,11,17,24,12,11,25,12,24,11,6,24,12,11,25,12,24,11,17,12,24,11,17,12,24,11,17,24,12,11,17,12,24,11,17,24,12,11,17,12,24,11,17,24,12,11,25,24,12,11,25,24,12,25,11,12,24,11,17,12,24,11,17,12,24,11,17,12,24,17,11,12,24,17,11,12,24,17,11,24,12,17,13,12,11,24,6,12,11,24,17,24,12,11,25,24,12,11,25,12,24,11,25,24,12,25,11,24,12,11,25,24,12,11,17,12,24,11,17,12,11,24,17,11,12,24,6,11,12,6,1,12,11,17,24,11,6,12,1,6,11,1,12,12,11,24,17,11,12,6,1,11,6,12,1,11,6,1,12,11,6,12,1,7,2,6,0,24,12,13,17,12,24,17,13,6,11,1,12,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,15,16,0,0,15,16,0,0,16,15,0,0,16,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,6,0,0,7,2,6,0,7,6,0,0,7,6,0,0,6,1,7,2,6,1,7,11,6,7,11,0,11,6,12,24,6,7,11,0,11,6,12,24,12,11,24,6,6,11,7,0,6,7,11,1,6,11,7,1,6,1,11,7,6,7,1,2,6,1,7,11,7,2,6,1,7,6,2,0,7,6,0,0,6,7,0,0,6,7,11,0,6,7,0,0,7,6,0,0,7,6,0,0,7,6,0,0,7,6,0,0,7,6,0,0,6,7,11,0,7,6,0,0,6,7,0,0,6,7,0,0,6,7,11,0,6,11,7,0,6,7,11,0,7,6,0,0,7,6,0,0,7,0,0,0,7,2,0,0,7,2,6,1,6,7,1,2,6,7,1,11,6,7,1,2,6,7,11,1,6,7,11,1,6,7,0,0,6,7,1,11,6,7,1,2,7,2,6,0,7,2,6,0,7,2,6,0,6,7,2,1,7,6,1,2,7,6,1,2,7,6,0,0,7,6,2,0,7,6,2,1,7,6,2,1,6,7,0,0,7,0,0,0,7,2,6,1,7,6,0,0,7,6,0,0,7,2,0,0,6,7,1,2,7,6,2,1,7,2,6,0,7,2,6,1,7,0,0,0,6,7,1,2,7,6,2,1,7,6,2,0,11,6,12,24,7,0,0,0,11,12,6,24,12,11,24,6,12,11,24,6,11,12,6,24,11,12,6,24,12,11,24,6,11,12,6,24,11,6,12,24,6,11,12,24,11,6,12,24,6,7,1,11,11,12,6,24,11,6,12,24,11,6,12,24,11,6,12,24,6,11,12,7,6,11,7,12,6,11,7,12,6,11,7,12,6,11,1,12,6,11,7,1,6,11,12,24,6,11,1,7,6,1,11,7,6,11,12,0,12,11,24,6,11,6,12,1,11,12,6,24,11,12,6,1,6,11,1,12,6,11,12,7,6,11,12,7,6,7,1,2,7,0,0,0,6,7,1,2,7,6,2,1,7,6,2,0,7,6,2,0,7,6,2,0,6,11,7,0,6,7,11,0,6,7,11,1,11,6,12,24,11,6,12,24,11,6,12,24,11,12,24,6,11,12,6,24,11,6,12,24,7,6,0,0,7,6,0,0,7,6,0,0,7,6,0,0,7,6,2,0,24,25,12,11,24,12,14,25,24,25,12,13,24,25,13,0,24,14,25,12,14,24,15,25,24,14,25,15,24,25,12,11,24,25,12,13,24,25,12,0,24,25,12,11,24,12,25,11,24,12,25,11,24,12,25,11,24,25,12,11,24,25,14,15,24,25,12,13,24,25,14,15,24,12,11,25,24,12,14,25,24,25,13,0,25,24,14,15,25,24,14,15,24,25,12,14,24,12,25,11,16,15,0,0,14,12,17,24,16,15,0,0,15,13,16,0,15,14,16,0,14,17,15,24,24,12,25,13,24,13,17,12,13,24,15,25,15,14,16,24,12,11,24,6,12,24,11,14,12,24,11,17,13,24,17,12,24,13,25,12,24,13,25,15,24,25,13,0,24,13,25,15,13,24,15,14,24,14,15,13,24,25,14,15,13,24,15,14,14,15,24,17,15,14,16,24,15,14,24,13,13,15,24,16,16,0,0,0,16,15,14,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,15,14,0,15,16,13,14,15,16,14,0,16,15,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,15,13,16,14,24,13,12,17,24,13,12,25,13,24,17,15,15,16,13,0,13,24,17,15,13,24,15,17,16,15,0,0,16,15,0,0,16,15,0,0,15,16,14,0,16,15,0,0,16,0,0,0,16,0,0,0,16,0,0,0,24,25,13,12,24,13,25,12,24,13,17,12,24,13,12,17,24,12,17,13,13,24,17,12,13,24,15,25,24,13,17,25,13,24,15,14,13,15,24,0,15,13,16,0,13,15,24,0,15,13,16,0,15,16,14,24,15,16,14,24,12,24,11,6,14,15,24,25,14,15,24,25,15,14,24,16,15,14,24,16,14,15,24,25,24,14,25,15,15,14,16,24,12,24,11,25,12,11,24,6,12,11,24,6,12,11,24,6,11,12,24,6,12,24,11,25,24,12,11,25,24,12,11,25,12,24,11,6,12,24,11,25,12,24,11,25,15,14,24,0,16,0,0,0,16,0,0,0,12,24,11,25,24,25,12,11,24,25,14,15,24,25,12,0,7,0,0,0,7,0,0,0,7,0,0,0,24,25,14,13,24,25,12,0,24,25,14,0,24,25,12,0,17,24,12,13,15,16,14,0,7,2,6,1,7,2,6,0,11,12,6,1,6,1,7,2,6,1,11,7,14,15,17,24,16,15,14,0,16,0,0,0,16,0,0,0,16,0,0,0,13,15,17,0,12,17,24,14,6,1,7,2,6,7,1,2,12,11,17,24,14,17,24,12,7,0,0,0,25,24,0,0,25,24,0,0,24,25,12,11,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,24,25,14,12,25,24,0,0,25,24,0,0,25,26,0,0,25,26,0,0,25,26,0,0,25,26,0,0,26,25,0,0,26,25,0,0,26,27,0,0,26,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,26,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,26,0,0,27,0,0,0,27,0,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,27,0,0,0,27,0,0,0,25,26,0,0,25,26,0,0,25,26,0,0,25,24,0,0,26,25,0,0,25,26,0,0,26,27,0,0,25,24,0,0,27,0,0,0,27,0,0,0,25,26,0,0,25,26,0,0,25,26,0,0,25,24,0,0,25,24,0,0,25,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,26,27,0,0,26,0,0,0,25,26,0,0,25,26,0,0,27,0,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,0,0,0,25,24,0,0,25,24,0,0,25,0,0,0,25,0,0,0,25,0,0,0,25,26,0,0,25,26,0,0,25,26,0,0,26,25,0,0,26,25,0,0,26,25,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,27,0,0,26,25,0,0,26,0,0,0,25,26,0,0,26,0,0,0,26,0,0,0,26,0,0,0,25,26,0,0,26,0,0,0,26,25,0,0,25,26,0,0,25,26,0,0,25,26,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,27,0,0,0,25,24,0,0,25,0,0,0,7,0,0,0,8,9,0,0,8,9,0,0,8,0,0,0,8,9,0,0,9,8,0,0,9,8,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,9,8,0,0,8,9,0,0,8,9,0,0,9,8,0,0,9,8,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,8,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,8,0,0,8,9,0,0,9,8,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,8,0,0,9,8,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,0,0,0,9,8,0,0,9,10,0,0,9,10,0,0,9,0,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,8,0,0,9,10,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,8,0,0,9,0,0,0,9,8,0,0,9,8,0,0,9,0,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,8,9,0,0,9,8,0,0,9,8,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,9,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,8,9,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,8,0,0,0,8,0,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,9,8,0,0,8,9,0,0,8,9,0,0,9,8,0,0,9,10,0,0,9,0,0,0,8,9,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,8,9,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,9,10,0,0,9,10,0,0,9,8,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,8,0,0,9,0,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,9,10,0,0,7,0,0,0,7,0,0,0,7,0,0,0,8,7,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,8,7,0,0,7,8,0,0,7,8,0,0,7,8,0,0,8,7,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,7,0,0,7,8,0,0,7,8,0,0,8,7,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,0,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,8,0,0,0,8,7,0,0,7,8,0,0,7,8,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,7,8,0,0,7,8,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,7,0,0,8,7,0,0,7,0,0,0,7,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,15,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,15,16,0,0,16,0,0,0,16,0,0,0,15,16,0,0,2,7,6,1,2,7,6,0,2,7,6,1,2,7,6,1,2,7,6,1,2,7,6,1,2,7,6,1,2,7,6,1,2,7,6,1,2,1,7,6,7,2,6,1,2,7,6,1,11,6,1,12,11,12,1,17,12,17,11,24,12,11,17,1,12,11,17,24,11,12,1,17,12,17,11,24,12,17,11,1,12,11,17,1,11,12,1,17,1,11,6,2,12,11,17,1,12,11,17,1,11,1,12,6,1,11,6,12,11,12,17,1,11,12,1,17,11,12,17,1,11,12,17,1,12,11,17,24,17,12,11,18,17,12,11,18,17,12,18,11,17,12,18,11,17,12,18,13,17,12,13,24,17,12,11,18,17,12,11,18,17,12,11,18,12,11,17,24,12,11,17,24,12,17,11,24,17,12,18,11,17,12,11,24,17,12,11,13,17,12,18,11,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,12,17,11,1,17,12,11,18,12,17,11,24,17,12,11,24,12,17,11,24,17,12,11,24,12,17,11,24,17,12,11,24,12,17,11,24,17,12,11,18,17,12,11,18,17,12,18,11,12,17,11,24,12,17,11,24,12,17,11,24,17,12,24,11,12,17,24,11,12,17,24,11,17,12,24,13,12,11,17,1,12,17,11,24,17,12,11,18,17,12,11,18,12,17,11,18,17,12,18,11,17,12,11,18,17,12,11,18,17,12,11,24,12,11,17,24,11,12,17,1,11,12,6,1,12,11,17,24,11,12,17,6,11,1,12,6,11,6,12,1,1,11,6,12,12,11,17,24,11,12,1,6,11,1,6,12,11,1,6,12,11,12,1,6,2,7,6,1,17,12,13,24,17,12,24,13,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,15,16,0,0,15,16,0,0,16,15,0,0,16,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,1,0,0,2,7,1,6,2,0,0,0,2,1,0,0,11,12,6,1,6,1,11,0,1,6,2,7,1,2,11,0,11,1,12,17,1,2,11,0,11,1,12,17,12,11,17,1,1,2,11,0,1,2,6,11,1,11,6,2,1,6,11,2,1,6,2,7,1,6,2,11,2,7,6,1,2,1,7,6,2,1,7,0,1,2,0,0,1,2,11,0,1,2,6,0,2,1,0,0,2,1,0,0,2,1,0,0,2,1,0,0,2,1,0,0,1,2,0,0,2,1,0,0,1,2,6,0,1,2,0,0,1,2,11,0,1,11,2,6,1,2,11,6,2,1,0,0,2,1,0,0,2,0,0,0,2,7,0,0,2,7,6,1,1,6,2,7,1,2,6,11,1,2,6,7,1,2,6,11,1,2,6,11,1,2,6,0,1,2,6,0,1,2,6,7,2,7,6,0,2,7,6,0,2,7,6,0,1,2,6,7,1,2,6,7,2,1,6,7,2,1,6,7,2,1,7,6,2,1,7,6,2,7,1,6,1,2,0,0,2,0,0,0,2,7,6,1,2,1,0,0,2,1,0,0,2,7,0,0,1,2,6,7,2,7,1,6,2,7,6,1,2,7,6,1,2,0,0,0,1,2,6,7,2,1,7,6,2,7,1,0,11,1,12,17,2,0,0,0,11,12,1,17,12,11,17,1,12,11,17,1,11,1,12,17,11,12,1,17,12,11,17,1,11,12,1,17,11,1,12,6,1,11,12,17,11,1,12,6,1,6,2,11,11,12,1,17,1,11,12,17,11,1,12,17,11,1,12,17,1,11,6,12,1,11,12,2,1,11,2,12,1,11,2,12,1,6,11,12,1,11,6,2,1,11,12,17,1,6,11,2,1,6,11,2,1,11,12,6,12,11,17,1,11,1,6,12,11,12,1,17,11,12,1,6,1,11,6,0,1,11,12,2,1,11,12,6,1,2,6,7,2,0,0,0,1,2,6,7,2,1,7,6,2,1,7,0,2,1,7,6,2,7,1,6,1,11,2,0,1,2,11,6,1,2,6,11,11,1,12,17,11,1,12,17,11,1,12,17,11,12,17,1,11,12,1,17,11,1,12,17,2,1,0,0,2,1,0,0,2,1,6,0,2,1,0,0,2,1,7,0,17,18,12,11,17,12,14,18,17,18,12,13,17,18,13,0,17,14,18,12,17,14,15,18,17,14,18,15,17,18,12,11,17,18,12,0,17,18,12,0,17,18,12,11,17,12,18,11,17,12,18,11,17,12,18,11,17,18,12,11,17,18,14,15,17,18,12,0,17,18,14,15,17,12,11,18,17,12,14,18,17,18,13,0,18,17,14,15,18,17,14,15,17,18,12,14,17,12,18,11,16,15,0,0,13,17,24,12,16,0,0,0,13,17,24,0,17,12,18,13,17,13,24,12,13,17,15,18,15,14,16,17,12,11,17,1,17,12,11,14,12,17,11,14,17,13,24,12,17,13,18,12,17,13,18,15,17,18,13,0,17,13,18,15,13,17,15,14,17,14,15,18,17,18,14,15,17,13,15,14,14,15,17,24,15,14,16,17,15,14,17,13,13,15,17,16,16,0,0,0,16,15,14,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,15,14,0,15,16,13,14,15,16,14,0,16,15,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,15,16,13,14,17,13,12,24,17,12,13,18,13,17,24,15,15,16,13,0,13,17,15,24,13,17,15,0,16,15,0,0,16,15,0,0,16,15,0,0,15,16,14,0,16,15,0,0,16,0,0,0,16,0,0,0,16,0,0,0,17,18,13,12,17,13,18,12,17,13,12,24,17,13,12,24,17,12,13,24,13,17,24,12,17,13,15,18,17,13,18,24,13,17,15,14,13,15,17,16,15,13,16,17,13,15,17,16,15,13,16,0,15,16,14,17,15,16,14,17,12,17,11,1,14,15,17,18,14,15,17,18,15,14,17,16,15,14,17,16,14,15,17,18,17,14,18,15,15,14,16,17,12,17,11,18,12,11,17,1,12,11,17,1,12,11,17,1,11,12,17,1,12,17,11,18,17,12,11,18,17,12,11,18,12,17,11,1,12,17,11,18,12,17,11,18,15,14,17,0,16,0,0,0,16,0,0,0,17,12,11,18,17,18,12,11,17,18,14,15,17,18,12,0,2,0,0,0,2,0,0,0,2,0,0,0,17,18,14,15,17,18,12,0,17,18,14,0,17,18,12,0,7,2,6,1,6,1,7,2,11,6,1,12,15,16,14,0,12,14,17,24,14,15,17,24,13,17,24,12,13,17,15,24,12,11,17,24,16,0,0,0,16,0,0,0,15,14,17,24,2,0,0,0,18,17,0,0,18,17,0,0,17,18,12,11,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,17,18,14,0,18,17,0,0,18,17,0,0,18,19,0,0,19,18,0,0,19,18,0,0,18,19,0,0,19,18,0,0,19,18,0,0,19,0,0,0,19,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,0,0,0,20,0,0,0,20,19,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,0,0,0,20,0,0,0,20,19,0,0,20,19,0,0,20,0,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,20,0,0,0,20,0,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,17,0,0,19,18,0,0,18,19,0,0,19,20,0,0,18,17,0,0,20,0,0,0,20,0,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,17,0,0,18,17,0,0,18,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,19,20,0,0,19,18,0,0,18,19,0,0,18,19,0,0,20,19,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,0,0,0,18,17,0,0,18,17,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,19,0,0,18,19,0,0,18,19,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,20,0,0,19,18,0,0,19,18,0,0,18,19,0,0,19,0,0,0,19,18,0,0,19,18,0,0,18,19,0,0,19,0,0,0,19,18,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,18,17,0,0,18,0,0,0,2,0,0,0,3,4,0,0,3,4,0,0,3,0,0,0,3,4,0,0,4,3,0,0,4,3,0,0,3,4,0,0,3,4,0,0,3,4,0,0,3,2,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,3,0,0,3,4,0,0,3,4,0,0,4,3,0,0,4,3,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,3,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,3,0,0,3,4,0,0,4,3,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,3,0,0,4,3,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,0,0,0,4,0,0,0,4,3,0,0,4,5,0,0,4,5,0,0,4,0,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,3,0,0,4,5,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,3,0,0,4,0,0,0,4,3,0,0,4,3,0,0,4,0,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,3,4,0,0,4,3,0,0,4,3,0,0,3,4,0,0,3,4,0,0,3,4,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,4,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,3,4,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,3,0,0,0,3,0,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,4,3,0,0,3,4,0,0,3,4,0,0,4,3,0,0,4,5,0,0,4,0,0,0,3,4,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,3,4,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,5,0,0,4,5,0,0,4,3,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,0,0,0,4,3,0,0,4,0,0,0,4,3,0,0,4,0,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,4,5,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,2,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,2,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,0,0,0,3,2,0,0,3,2,0,0,3,2,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,0,0,0,3,2,0,0,3,2,0,0,3,0,0,0,3,0,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,0,0,0,3,0,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,0,0,0,3,2,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,2,0,0,3,0,0,0,3,2,0,0,3,2,0,0,2,0,0,0,2,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,15,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,15,16,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0],\"uvs\":[[0.221173,0.233059,0.221173,0.237662,0.218207,0.237526,0.198395,0.257254,0.206019,0.248584,0.212716,0.254748,0.213645,0.251515,0.207323,0.246567,0.199281,0.241379,0.208775,0.242127,0.20163,0.238045,0.214131,0.243554,0.214118,0.249325,0.215008,0.23744,0.209982,0.236744,0.217808,0.249393,0.218313,0.252175,0.218001,0.254715,0.202984,0.233951,0.197539,0.231959,0.194757,0.233281,0.217768,0.243608,0.210904,0.25881,0.196588,0.242613,0.191622,0.234713,0.199606,0.231051,0.235023,0.246567,0.233571,0.242127,0.243065,0.241379,0.240717,0.238045,0.228228,0.249325,0.228216,0.243554,0.227338,0.23744,0.232364,0.236744,0.224033,0.252175,0.224538,0.249393,0.228701,0.251515,0.221173,0.251472,0.221173,0.254562,0.224346,0.254715,0.22963,0.254748,0.226098,0.232159,0.239363,0.233951,0.244808,0.231959,0.247589,0.233281,0.224578,0.243608,0.224139,0.237526,0.236327,0.248584,0.245758,0.242613,0.250724,0.234713,0.242741,0.231051,0.244751,0.229245,0.247995,0.228595,0.221173,0.243383,0.221173,0.248322,0.188261,0.215208,0.194396,0.222074,0.191664,0.225867,0.19778,0.228633,0.197595,0.229245,0.194865,0.227449,0.194352,0.228595,0.183132,0.224588,0.190215,0.228261,0.197569,0.224219,0.202266,0.214758,0.198177,0.209431,0.211478,0.219962,0.211172,0.22481,0.205376,0.222147,0.205018,0.225963,0.211162,0.215904,0.204509,0.218404,0.209295,0.211997,0.199632,0.226397,0.200757,0.228393,0.19925,0.229847,0.199486,0.229364,0.221173,0.214149,0.221173,0.210138,0.250682,0.225867,0.247482,0.227449,0.24795,0.222074,0.244777,0.224219,0.230869,0.219962,0.23697,0.222147,0.231175,0.22481,0.237328,0.225963,0.231184,0.215904,0.237838,0.218404,0.221173,0.224384,0.221173,0.218771,0.233052,0.211997,0.240081,0.214758,0.242714,0.226397,0.24159,0.228393,0.244566,0.228633,0.236614,0.206818,0.24417,0.209431,0.24286,0.229364,0.221173,0.231711,0.221173,0.208017,0.059622,0.170364,0.061375,0.186451,0.046599,0.188025,0.051911,0.200561,0.095123,0.154482,0.085225,0.142842,0.140043,0.112266,0.017136,0.230535,0.028956,0.23807,0.140726,0.132628,0.146874,0.122515,0.473412,0.545219,0.467481,0.555231,0.460779,0.542959,0.459711,0.556619,0.669401,0.519453,0.661457,0.519362,0.667345,0.5078,0.674848,0.515143,0.677185,0.503078,0.661881,0.530536,0.661322,0.546913,0.651211,0.548288,0.661495,0.540051,0.651096,0.539329,0.370653,0.635378,0.381033,0.657303,0.363841,0.645456,0.368913,0.660397,0.411552,0.697031,0.399226,0.698088,0.40086,0.681768,0.38491,0.685196,0.392733,0.730831,0.395493,0.719478,0.419566,0.730223,0.420939,0.722637,0.365721,0.789158,0.34936,0.795706,0.35442,0.775312,0.342765,0.782374,0.372248,0.757143,0.396184,0.76791,0.378073,0.781413,0.405086,0.757739,0.387276,0.742058,0.415297,0.740552,0.337811,0.80166,0.334657,0.789261,0.418757,0.708562,0.394985,0.709191,0.327303,0.800322,0.333615,0.803778,0.474224,0.443684,0.512216,0.436544,0.490493,0.460825,0.509041,0.463202,0.477682,0.425861,0.545237,0.372522,0.542441,0.388233,0.52712,0.374979,0.548656,0.387972,0.527645,0.397064,0.508533,0.387647,0.514774,0.423202,0.379152,0.864486,0.372746,0.854548,0.450771,0.827786,0.442972,0.810414,0.461008,0.941319,0.460231,0.950304,0.382994,0.947358,0.494557,0.120046,0.49126,0.059388,0.508744,0.12085,0.509296,0.05654,0.460546,0.866518,0.386915,0.879178,0.455069,0.842772,0.384001,0.869552,0.426014,0.773604,0.431355,0.784173,0.349194,0.802336,0.354032,0.814616,0.420113,0.762859,0.435711,0.79397,0.362173,0.834434,0.382101,0.961264,0.45902,0.96537,0.457723,0.978876,0.380736,0.975586,0.462663,0.928432,0.524865,0.05341,0.539388,0.111382,0.461891,0.880418,0.387393,0.886074,0.383044,0.900255,0.463159,0.897537,0.366837,0.843865,0.570981,0.043414,0.579745,0.109874,0.54953,0.048564,0.560469,0.110526,0.428192,0.125177,0.445934,0.067912,0.448923,0.121747,0.460374,0.065719,0.409247,0.128364,0.422033,0.069884,0.433862,0.069227,0.009075,0.359505,0.024746,0.349297,0.021072,0.37014,0.036179,0.358529,0.788504,0.589664,0.787513,0.587552,0.793239,0.579524,0.164822,0.560785,0.109083,0.539224,0.185867,0.506042,0.143859,0.495593,0.014262,0.399213,0.03611,0.399587,0.063908,0.44515,0.03014,0.452797,0.059629,0.498302,0.10002,0.47782,0.441884,0.61006,0.437795,0.606653,0.450541,0.597072,0.453683,0.585893,0.456795,0.586836,0.456019,0.587172,0.40592,0.623747,0.421181,0.617057,0.419896,0.631138,0.432396,0.620906,0.427596,0.613122,0.044131,0.181908,0.062851,0.156533,0.059968,0.226654,0.148993,0.101752,0.181176,0.103443,0.18572,0.093018,0.221173,0.099546,0.221173,0.089377,0.07292,0.248938,0.099713,0.232196,0.094161,0.201701,0.041917,0.258515,0.092742,0.179029,0.009226,0.229294,0.680876,0.103949,0.674718,0.102779,0.680876,0.095523,0.674846,0.092929,0.673862,0.129078,0.674503,0.119978,0.680876,0.129826,0.680876,0.120488,0.680573,0.075197,0.626637,0.398492,0.628749,0.390231,0.637838,0.396627,0.634119,0.389202,0.668306,0.387053,0.666736,0.374517,0.674867,0.385099,0.67294,0.369701,0.65498,0.326051,0.656032,0.321032,0.668807,0.327706,0.668549,0.321604,0.6526,0.331798,0.646829,0.323376,0.640504,0.326852,0.596189,0.342505,0.596995,0.367863,0.581329,0.35703,0.590835,0.373396,0.640105,0.283337,0.634036,0.289909,0.630616,0.264109,0.629995,0.347812,0.609495,0.361303,0.620662,0.339488,0.644589,0.389591,0.637637,0.385414,0.645072,0.379871,0.637404,0.380981,0.64216,0.368781,0.635264,0.374984,0.629072,0.368103,0.628002,0.374331,0.611895,0.364989,0.601076,0.370499,0.630448,0.382427,0.624524,0.388527,0.622543,0.385375,0.627804,0.357529,0.628862,0.361836,0.656622,0.376445,0.657865,0.36745,0.651479,0.371677,0.673347,0.361453,0.680876,0.360712,0.673753,0.353205,0.661048,0.362986,0.642607,0.376292,0.63638,0.379236,0.633505,0.378089,0.610437,0.404954,0.617476,0.394864,0.625551,0.408185,0.643483,0.404924,0.595124,0.379055,0.613528,0.382792,0.613269,0.389034,0.606023,0.38143,0.606607,0.391971,0.655541,0.392379,0.622729,0.381898,0.647744,0.341066,0.647024,0.349876,0.632186,0.338095,0.645516,0.362923,0.646304,0.358686,0.660937,0.401558,0.662498,0.35487,0.663949,0.346754,0.668625,0.339906,0.680876,0.349128,0.623917,0.379635,0.615731,0.37811,0.629334,0.377827,0.617695,0.370476,0.61007,0.374611,0.636649,0.245758,0.647647,0.256896,0.625906,0.378509,0.620837,0.375515,0.647972,0.310694,0.661307,0.310019,0.644284,0.293538,0.659909,0.296879,0.64238,0.301652,0.386611,0.148255,0.385595,0.142728,0.397998,0.156277,0.632434,0.229299,0.658703,0.230427,0.657724,0.247827,0.670657,0.097434,0.670377,0.10131,0.675309,0.111523,0.666978,0.107227,0.662569,0.114692,0.658935,0.110587,0.676473,0.075612,0.674098,0.087108,0.649364,0.411693,0.680876,0.256547,0.656996,0.270666,0.458433,0.569159,0.456023,0.567217,0.462821,0.564289,0.606277,0.423678,0.614513,0.432115,0.595591,0.429254,0.665535,0.440564,0.665037,0.450197,0.65336,0.438432,0.64781,0.451824,0.648903,0.473445,0.632371,0.475774,0.633888,0.467053,0.605345,0.415007,0.626083,0.417312,0.507788,0.141348,0.505797,0.161502,0.489434,0.141581,0.485931,0.163683,0.632548,0.450536,0.647711,0.466193,0.653473,0.429408,0.654359,0.419647,0.666487,0.427613,0.667472,0.41542,0.630109,0.424517,0.631623,0.433597,0.61903,0.448465,0.435773,0.579019,0.453517,0.574019,0.456574,0.574603,0.466958,0.558697,0.616945,0.106132,0.616008,0.131635,0.600289,0.107461,0.528264,0.197391,0.50644,0.180448,0.527523,0.159721,0.580849,0.386583,0.566777,0.382584,0.578248,0.371273,0.562762,0.13851,0.58499,0.137801,0.59373,0.159432,0.609825,0.200076,0.603399,0.185994,0.615937,0.189533,0.610661,0.182191,0.606553,0.156904,0.60341,0.13659,0.631752,0.135076,0.637237,0.161003,0.622739,0.157515,0.635687,0.171868,0.662597,0.180854,0.641518,0.198959,0.659716,0.201472,0.612083,0.271862,0.614483,0.157481,0.43968,0.802845,0.623497,0.193674,0.631266,0.170443,0.566528,0.358637,0.594768,0.395522,0.599707,0.402454,0.589685,0.399176,0.594099,0.409351,0.440896,0.470322,0.466748,0.480325,0.464772,0.489549,0.508073,0.477189,0.467228,0.460852,0.566785,0.397487,0.589684,0.342599,0.605606,0.33587,0.52546,0.349551,0.52636,0.362696,0.507745,0.356683,0.508488,0.367878,0.571124,0.161871,0.593133,0.192793,0.473829,0.501,0.458195,0.495524,0.466421,0.505224,0.479765,0.480335,0.651224,0.529951,0.633872,0.530799,0.63473,0.541403,0.443354,0.514983,0.451315,0.509792,0.458457,0.525703,0.46348,0.521972,0.418103,0.608892,0.402691,0.612821,0.423387,0.606211,0.432822,0.595014,0.402875,0.573067,0.420009,0.576578,0.418812,0.588073,0.632986,0.521714,0.629312,0.511841,0.659126,0.497427,0.441179,0.499337,0.601867,0.475486,0.599977,0.459849,0.482029,0.390075,0.483497,0.370441,0.578747,0.341054,0.61663,0.501974,0.636904,0.485022,0.624229,0.507059,0.648089,0.48841,0.440344,0.480479,0.476219,0.518061,0.483434,0.516131,0.413854,0.598139,0.401263,0.604152,0.525579,0.334741,0.507031,0.344818,0.591431,0.302328,0.582129,0.321355,0.568485,0.299728,0.563608,0.32267,0.606674,0.256796,0.595302,0.271134,0.592446,0.2577,0.542751,0.34367,0.542005,0.328085,0.564326,0.339607,0.598431,0.207835,0.645172,0.157536,0.543999,0.359452,0.625684,0.300273,0.605189,0.285155,0.649441,0.482225,0.668907,0.458833,0.52082,0.1362,0.468801,0.165432,0.472308,0.189269,0.452019,0.165817,0.456861,0.193588,0.475714,0.215001,0.489118,0.207759,0.502652,0.227983,0.512255,0.221846,0.490397,0.234499,0.46252,0.220961,0.422456,0.143751,0.439316,0.144463,0.44237,0.196941,0.436304,0.167123,0.618057,0.208541,0.466568,0.120318,0.478724,0.062045,0.481075,0.119444,0.587833,0.412844,0.652013,0.518798,0.439401,0.566609,0.425925,0.562577,0.437072,0.547481,0.447398,0.551425,0.544198,0.135629,0.407199,0.637909,0.599795,0.228979,0.487641,0.184772,0.552612,0.230116,0.552666,0.218195,0.57665,0.225854,0.576205,0.214784,0.63669,0.02959,0.633758,0.106338,0.57404,0.199494,0.552732,0.202867,0.58818,0.040579,0.455092,0.223847,0.476741,0.239164,0.500924,0.200494,0.472949,0.142214,0.522673,0.211091,0.530932,0.25474,0.537621,0.281776,0.509735,0.261569,0.515453,0.287635,0.611549,0.240283,0.540236,0.305966,0.559842,0.301652,0.561137,0.276979,0.668614,0.465594,0.672882,0.486046,0.455813,0.583637,0.661839,0.487663,0.54765,0.171308,0.573825,0.272418,0.582614,0.24365,0.456782,0.143409,0.4327,0.199655,0.443419,0.228523,0.501235,0.243237,0.523827,0.234382,0.47268,0.246207,0.597045,0.498333,0.599745,0.490548,0.664769,0.477196,0.488363,0.499172,0.422231,0.512059,0.439605,0.525728,0.45244,0.540477,0.432445,0.53304,0.447311,0.538698,0.452277,0.531394,0.598485,0.326913,0.610895,0.310764,0.623859,0.326208,0.59018,0.284065,0.639512,0.312868,0.671747,0.153548,0.524363,0.311468,0.513718,0.301985,0.553665,0.249673,0.504645,0.333556,0.479829,0.313692,0.408673,0.556463,0.397441,0.592637,0.423448,0.54199,0.421263,0.166224,0.487007,0.283795,0.482112,0.264601,0.482719,0.301,0.484463,0.351446,0.478957,0.329763,0.480991,0.407111,0.387109,0.13016,0.410356,0.069998,0.399632,0.068903,0.641817,0.549313,0.633743,0.550457,0.494326,0.512919,0.506642,0.497634,0.507153,0.508458,0.387364,0.60522,0.388177,0.615721,0.4517,0.242962,0.680876,0.182267,0.680876,0.154526,0.680876,0.484471,0.680876,0.502093,0.445553,0.362191,0.452127,0.341062,0.435558,0.422904,0.437485,0.404841,0.434073,0.438309,0.410818,0.533946,0.416386,0.524133,0.410685,0.178681,0.657881,0.280437,0.672615,0.404019,0.649289,0.131848,0.654636,0.132987,0.364066,0.132019,0.680876,0.413889,0.658765,0.02119,0.380928,0.066996,0.38969,0.068283,0.680876,0.229766,0.671065,0.075978,0.680876,0.392444,0.680876,0.381185,0.074572,0.754805,0.073163,0.757117,0.071777,0.755089,0.366409,0.711811,0.368454,0.703677,0.33144,0.724279,0.250912,0.694277,0.253748,0.68598,0.326292,0.701665,0.332498,0.692166,0.24758,0.701725,0.310648,0.73045,0.252657,0.711963,0.303069,0.736718,0.336414,0.755065,0.241748,0.668609,0.246213,0.660275,0.288066,0.681135,0.291857,0.668266,0.246357,0.73374,0.249278,0.726365,0.28561,0.739273,0.291091,0.656738,0.243194,0.679027,0.345692,0.747131,0.359207,0.728307,0.197541,0.726835,0.222676,0.733478,0.196525,0.740554,0.214644,0.747044,0.079485,0.650156,0.081861,0.646169,0.095643,0.654638,0.098467,0.649696,0.084353,0.638584,0.083321,0.642346,0.074946,0.636772,0.07373,0.640908,0.081165,0.712501,0.096312,0.693335,0.087825,0.712402,0.099193,0.697046,0.107727,0.651872,0.109178,0.647272,0.100166,0.644459,0.088811,0.683354,0.060731,0.69344,0.087703,0.676756,0.056213,0.686375,0.069206,0.648324,0.071808,0.645143,0.074261,0.654277,0.020901,0.719979,0.022481,0.722999,0.020117,0.721906,0.019556,0.72465,0.036996,0.573241,0.037845,0.568236,0.044123,0.574487,0.026114,0.720584,0.028224,0.724774,0.022141,0.725443,0.053488,0.551762,0.052513,0.548674,0.056143,0.54752,0.022929,0.727606,0.016434,0.728365,0.055199,0.545218,0.023996,0.717506,0.021428,0.714623,0.034459,0.709122,0.032571,0.706445,0.040072,0.577889,0.042898,0.567446,0.047751,0.570729,0.103014,0.557759,0.101969,0.56702,0.099183,0.557275,0.097543,0.566643,0.063679,0.553238,0.069587,0.564703,0.059899,0.555181,0.065661,0.567281,0.076827,0.547161,0.079829,0.54358,0.08171,0.552331,0.106889,0.550157,0.103739,0.550098,0.10511,0.547932,0.083597,0.563032,0.077392,0.552778,0.07879,0.564018,0.051788,0.616842,0.060073,0.617718,0.054352,0.622175,0.058456,0.623127,0.070443,0.749579,0.07248,0.749429,0.100047,0.552458,0.100605,0.549493,0.078719,0.576914,0.055792,0.579211,0.052216,0.58344,0.1069,0.553141,0.075919,0.755089,0.077198,0.754772,0.078336,0.756414,0.055953,0.556796,0.061117,0.569153,0.07464,0.744017,0.076748,0.733089,0.077699,0.744431,0.08007,0.733203,0.080734,0.745372,0.084588,0.746938,0.079571,0.749269,0.080522,0.751151,0.057316,0.627838,0.052885,0.627218,0.049153,0.629019,0.049437,0.632293,0.04683,0.632081,0.042266,0.63782,0.044333,0.642175,0.038427,0.637022,0.04269,0.643942,0.043053,0.621162,0.043712,0.617648,0.072974,0.631511,0.055658,0.636805,0.05472,0.639658,0.048085,0.638027,0.049203,0.635172,0.056314,0.633676,0.047048,0.636596,0.047469,0.634891,0.044644,0.638772,0.046093,0.64076,0.083976,0.545802,0.069558,0.624967,0.05266,0.748018,0.047513,0.751579,0.051229,0.74657,0.047967,0.742386,0.050516,0.744327,0.047967,0.744534,0.04863,0.746941,0.07057,0.733884,0.070799,0.744214,0.088242,0.561716,0.085919,0.551015,0.082447,0.752283,0.018254,0.717794,0.015818,0.717662,0.017833,0.711394,0.074115,0.748102,0.07694,0.74807,0.075774,0.749627,0.073908,0.751072,0.04098,0.742528,0.043052,0.742723,0.041415,0.748843,0.052472,0.740573,0.056563,0.742643,0.106225,0.567285,0.107037,0.557952,0.061185,0.548612,0.05769,0.728843,0.06298,0.732497,0.052413,0.726045,0.046601,0.73768,0.046771,0.723903,0.042866,0.735978,0.103594,0.57981,0.119818,0.609008,0.113912,0.615698,0.053861,0.711156,0.040154,0.717099,0.063859,0.6999,0.040174,0.565457,0.036197,0.566676,0.012295,0.672635,0.011123,0.67572,0.010082,0.673234,0.008124,0.674582,0.012112,0.669309,0.010621,0.667534,0.016535,0.669818,0.016675,0.66552,0.044947,0.741548,0.008061,0.678732,0.003382,0.674641,0.009092,0.676946,0.07652,0.543915,0.010126,0.665418,0.00442,0.667916,0.015667,0.676427,0.0147,0.680535,0.026855,0.685388,0.029345,0.678896,0.107093,0.581055,0.005311,0.670687,0.005061,0.672202,0.002492,0.670996,0.01385,0.716328,0.011832,0.722589,0.076389,0.757688,0.102826,0.547683,0.040605,0.630314,0.040257,0.634851,0.040701,0.633171,0.035058,0.570597,0.04431,0.744956,0.22041,0.665178,0.223077,0.657303,0.329802,0.768121,0.059587,0.54581,0.079326,0.541386,0.05501,0.727129,0.049446,0.739009,0.105896,0.624386,0.116773,0.631162,0.121544,0.622952,0.030429,0.672385,0.030953,0.665801,0.225012,0.724371,0.202731,0.710762,0.226133,0.710402,0.325441,0.710465,0.279565,0.641462,0.253838,0.644275,0.360625,0.678917,0.367599,0.68758,0.242452,0.741062,0.254923,0.761455,0.238235,0.74804,0.043779,0.751442,0.045461,0.749644,0.046967,0.749766,0.044027,0.749034,0.091029,0.661895,0.103657,0.67449,0.10518,0.662984,0.036335,0.711871,0.249482,0.771963,0.234614,0.757601,0.237441,0.686043,0.231539,0.693085,0.081374,0.594608,0.100051,0.619155,0.070581,0.608076,0.043134,0.747931,0.014618,0.723997,0.015621,0.725181,0.01293,0.726379,0.067423,0.581621,0.016877,0.726226,0.073505,0.754185,0.07824,0.751973,0.119124,0.701055,0.107633,0.698998,0.108591,0.692503,0.028142,0.700772,0.063953,0.649696,0.053968,0.642802,0.056526,0.65571,0.057207,0.652148,0.062211,0.65773,0.390777,0.670514,0.374391,0.673893,0.363185,0.720203,0.013845,0.722597,0.016159,0.720375,0.005248,0.673341,0.048172,0.587175,0.09919,0.593002,0.082906,0.734176,0.088388,0.736364,0.09039,0.715411,0.07025,0.616665,0.068962,0.620278,0.080526,0.625151,0.112335,0.637681,0.102101,0.632628,0.070802,0.662523,0.061125,0.661198,0.084725,0.634549,0.068628,0.656896,0.084425,0.660919,0.070663,0.596648,0.059143,0.595722,0.056028,0.678972,0.030135,0.675592,0.055476,0.674606,0.094753,0.572899,0.046494,0.743842,0.018855,0.720327,0.077256,0.749946,0.074544,0.709716,0.016283,0.673138,0.010403,0.671359,0.069323,0.704223,0.055467,0.658765,0.039027,0.689615,0.040651,0.691605,0.103582,0.680503,0.22705,0.701773,0.216341,0.673953,0.211564,0.682554,0.106649,0.656382,0.10698,0.688509,0.354641,0.648254,0.353891,0.661048,0.083009,0.54275,0.005879,0.669681,0.009069,0.66952,0.318698,0.799189,0.322466,0.784837,0.219682,0.623484,0.2502,0.630135,0.223196,0.613866,0.241911,0.618613,0.206494,0.693351,0.204557,0.700771,0.22024,0.639039,0.053718,0.712127,0.070584,0.721118,0.127594,0.615674,0.072053,0.720906,0.066149,0.585473,0.041759,0.631794,0.040389,0.636571,0.043546,0.631527,0.260598,0.630032,0.680876,0.513747,0.059277,0.649554,0.050138,0.648013,0.044709,0.667141,0.34432,0.891262,0.342998,0.880835,0.358289,0.882648,0.35746,0.873371,0.359409,0.889785,0.323215,0.889163,0.324765,0.903452,0.346415,0.903876,0.323989,0.917812,0.346128,0.916911,0.317737,0.870838,0.192804,0.875394,0.183916,0.860468,0.160695,0.913273,0.178392,0.914153,0.161072,0.923079,0.178172,0.92574,0.047662,0.86825,0.048012,0.856535,0.062657,0.85943,0.156283,0.887425,0.167921,0.876858,0.162684,0.890999,0.173568,0.879331,0.17408,0.869946,0.17927,0.871816,0.175297,0.864865,0.181525,0.866649,0.175303,0.856873,0.160757,0.938585,0.152627,0.936448,0.16466,0.930861,0.170964,0.959886,0.182233,0.956679,0.173977,0.963051,0.18336,0.959716,0.167359,0.95616,0.181309,0.953667,0.178314,0.906878,0.159777,0.905409,0.178413,0.902237,0.159739,0.900408,0.184928,0.963127,0.176552,0.965726,0.11617,0.89203,0.112933,0.87744,0.123245,0.881698,0.34132,0.871071,0.321579,0.880535,0.156563,0.948548,0.151906,0.943463,0.158057,0.944401,0.15555,0.94096,0.162703,0.943019,0.16416,0.947658,0.122794,0.853972,0.145879,0.857183,0.137745,0.869902,0.155483,0.819585,0.147555,0.81754,0.156466,0.81326,0.149354,0.811059,0.136368,0.807853,0.138349,0.816376,0.142721,0.894795,0.158812,0.980712,0.163362,0.986909,0.153292,0.986388,0.156952,0.992504,0.150887,0.830895,0.156518,0.830283,0.155296,0.834774,0.16121,0.832141,0.16029,0.819893,0.16196,0.816285,0.147728,0.9678,0.14245,0.971152,0.142953,0.963497,0.13837,0.966657,0.153244,0.97794,0.151109,0.9725,0.162937,0.969071,0.160266,0.96443,0.149637,0.98182,0.147408,0.977153,0.157343,0.959868,0.152974,0.826772,0.145048,0.82576,0.143007,0.83288,0.165985,0.972959,0.158754,0.827195,0.162764,0.829625,0.149953,0.939438,0.17006,0.977907,0.124511,0.872001,0.112618,0.868041,0.113231,0.855158,0.168764,0.863215,0.165292,0.847256,0.072593,0.808116,0.059396,0.807992,0.067273,0.802479,0.071489,0.852525,0.070292,0.845334,0.059211,0.845906,0.061328,0.85278,0.046453,0.874891,0.119541,0.915639,0.043141,0.880668,0.117407,0.897722,0.144297,0.901355,0.118517,0.803248,0.118462,0.809855,0.102516,0.797024,0.093231,0.809743,0.144098,0.888792,0.084542,0.947917,0.117249,0.929036,0.116176,0.941677,0.026993,0.857256,0.025973,0.853866,0.097033,0.952769,0.086748,0.95856,0.017517,0.853917,0.0137,0.846679,0.021561,0.852106,0.027477,0.841559,0.020781,0.834588,0.028706,0.83302,0.0214,0.830606,0.028923,0.826393,0.037106,0.830002,0.037985,0.836842,0.079992,0.96402,0.076422,0.95542,0.262911,0.970403,0.267559,0.9596,0.025452,0.847258,0.015033,0.863379,0.018528,0.861122,0.019358,0.867237,0.022967,0.863753,0.136046,0.824249,0.119324,0.823048,0.042488,0.905027,0.028461,0.887856,0.0241,0.810369,0.02775,0.804544,0.026298,0.810166,0.028469,0.806567,0.035394,0.806191,0.033892,0.809187,0.008953,0.901492,0.00565,0.904496,0.008284,0.89922,0.003692,0.895209,0.050225,0.809763,0.055715,0.804261,0.015287,0.931584,0.01744,0.92913,0.018628,0.932417,0.019505,0.930038,0.021751,0.92679,0.021884,0.92443,0.045321,0.924748,0.046046,0.793351,0.044707,0.791481,0.048061,0.791514,0.046337,0.78923,0.01248,0.924972,0.014323,0.921578,0.015424,0.924419,0.016691,0.922324,0.041973,0.797318,0.047907,0.80238,0.040202,0.799672,0.04615,0.804326,0.020673,0.919797,0.018033,0.917633,0.02536,0.914044,0.023925,0.929107,0.051032,0.799685,0.057283,0.79989,0.052894,0.798188,0.060387,0.819557,0.038911,0.797782,0.040834,0.795815,0.02383,0.932901,0.030851,0.814426,0.031727,0.951871,0.031622,0.954192,0.028995,0.955375,0.05359,0.780784,0.057513,0.778444,0.054481,0.782691,0.057991,0.780501,0.050272,0.823914,0.038481,0.823743,0.04221,0.820505,0.071005,0.793581,0.061468,0.799886,0.061687,0.785421,0.057893,0.787686,0.034294,0.958086,0.032289,0.960328,0.053643,0.972958,0.055445,0.960981,0.055689,0.971095,0.064577,0.782831,0.03306,0.949696,0.029739,0.949626,0.052405,0.783926,0.062381,0.975179,0.061785,0.969622,0.065258,0.948487,0.0542,0.940343,0.03927,0.824109,0.028527,0.817145,0.035624,0.955525,0.036197,0.958237,0.041758,0.91343,0.035977,0.911687,0.018581,0.927559,0.018072,0.926169,0.068122,0.951747,0.060709,0.968156,0.058958,0.968415,0.092631,0.79217,0.081471,0.800735,0.087571,0.786179,0.07627,0.774852,0.081249,0.774897,0.076263,0.777838,0.081493,0.778947,0.075968,0.770466,0.081423,0.769894,0.060629,0.976171,0.059845,0.980506,0.06297,0.978675,0.053739,0.976203,0.056576,0.97334,0.07616,0.79163,0.08138,0.789881,0.258762,0.979623,0.302222,0.93503,0.30279,0.946792,0.274899,0.936786,0.268724,0.949394,0.303467,0.958787,0.301093,0.913997,0.301424,0.924225,0.324633,0.929193,0.29734,0.8515,0.313096,0.851072,0.320854,0.970149,0.32159,0.982563,0.304454,0.972195,0.305425,0.985134,0.179287,0.893605,0.0384,0.9572,0.038089,0.953729,0.058177,0.971422,0.060751,0.972731,0.084113,0.773955,0.036928,0.844921,0.035591,0.950611,0.034121,0.953057,0.072854,0.775333,0.18027,0.968736,0.189533,0.967408,0.097754,0.794089,0.065823,0.828323,0.339289,0.940709,0.334838,0.957023,0.322127,0.948912,0.321093,0.958514,0.338623,0.975797,0.334619,0.988203,0.323557,0.991505,0.271447,0.995022,0.367063,0.850188,0.353245,0.84762,0.362598,0.935005,0.358983,0.954228,0.343958,0.931137,0.323568,0.938571,0.30593,0.995074,0.33136,0.861768,0.327329,0.847583,0.359032,0.976775,0.355822,0.857647,0.365479,0.856858,0.369336,0.867144,0.053575,0.952022,0.384721,0.920995,0.364671,0.923662,0.368336,0.910178,0.043369,0.834922,0.115207,0.94895,0.059374,0.972488,0.032949,0.944391,0.048774,0.931787,0.060003,0.778717,0.073096,0.778768,0.042506,0.931636,0.04135,0.935686,0.00828,0.896492,0.156733,0.868042,0.145122,0.87671,0.017332,0.924675,0.022343,0.827055,0.045023,0.846323,0.012615,0.904729,0.012843,0.901269,0.054845,0.789609,0.025686,0.861583,0.058994,0.799203,0.03963,0.933319,0.032142,0.880848,0.031382,0.883258,0.046685,0.811225,0.037236,0.951695,0.164573,0.824291,0.462922,0.916602,0.383872,0.933264,0.145486,0.910323,0.145215,0.924059,0.012173,0.896257,0.010975,0.893625,0.020266,0.922562,0.007453,0.861405,0.009253,0.852536,0.016601,0.856338,0.156282,0.850219,0.131784,0.834586,0.15895,0.840645,0.054437,0.827871,0.345899,0.83712,0.33726,0.82441,0.456459,0.991314,0.319853,0.831191,0.334302,0.817185,0.308859,0.833892,0.295486,0.833941,0.034698,0.95453,0.036913,0.961053,0.031577,0.905262,0.013768,0.898724,0.013059,0.908696,0.013234,0.872018,0.042755,0.957691,0.264014,0.836515,0.14003,0.930668,0.132643,0.946251,0.175196,0.938066,0.017358,0.8893,0.020338,0.877999,0.128079,0.952971,0.031107,0.930929,0.134237,0.959947,0.017495,0.907652,0.011674,0.888606,0.741756,0.576975,0.750811,0.580071,0.777,0.530524,0.775617,0.541732,0.770481,0.53756,0.736144,0.558566,0.749654,0.564787,0.745119,0.535563,0.778085,0.5839,0.779132,0.579398,0.784129,0.580584,0.78417,0.57318,0.75337,0.544633,0.758064,0.555201,0.755459,0.561986,0.753777,0.563065,0.759003,0.5714,0.761032,0.570031,0.755187,0.574571,0.784323,0.560069,0.769936,0.558128,0.775441,0.54768,0.760603,0.537468,0.758572,0.542657,0.759757,0.531467,0.781778,0.54447,0.784043,0.537161,0.782257,0.538091,0.781166,0.533542,0.767299,0.578412,0.778389,0.576817,0.768076,0.57619,0.763229,0.553613,0.762723,0.545731,0.765674,0.582626,0.764187,0.589073,0.78458,0.586937,0.749383,0.537567,0.767744,0.563314,0.774616,0.565126,0.783552,0.546205,0.773122,0.595861,0.754451,0.591978,0.792735,0.536558,0.749111,0.520194,0.756079,0.519975,0.752995,0.525474,0.789047,0.57373,0.76433,0.52889,0.747751,0.525908,0.733878,0.542566,0.779615,0.534526,0.211996,0.265575,0.208775,0.264806,0.211669,0.263293,0.149781,0.318897,0.138994,0.319574,0.143595,0.310295,0.154336,0.304278,0.160257,0.312152,0.174121,0.319789,0.173967,0.314943,0.186961,0.31868,0.186497,0.312652,0.165583,0.279492,0.166121,0.301044,0.148721,0.289173,0.176747,0.302124,0.178531,0.287895,0.154061,0.258186,0.146702,0.234664,0.167787,0.248364,0.164475,0.228843,0.17455,0.325092,0.054799,0.385995,0.072714,0.372252,0.049621,0.337604,0.191067,0.310557,0.189382,0.311016,0.09076,0.349517,0.191607,0.324982,0.188442,0.200718,0.195695,0.197136,0.195255,0.203637,0.199394,0.301913,0.187758,0.305017,0.194671,0.298135,0.198412,0.312135,0.198747,0.319113,0.200037,0.276941,0.203697,0.269946,0.20729,0.279206,0.209724,0.273257,0.207671,0.262562,0.209879,0.261669,0.207001,0.260658,0.2058,0.262132,0.176916,0.311764,0.184193,0.312257,0.184719,0.312728,0.146097,0.205512,0.15387,0.17909,0.166227,0.208068,0.174617,0.191859,0.122232,0.184241,0.126072,0.164803,0.204788,0.282609,0.216043,0.285544,0.205272,0.290896,0.215689,0.293284,0.206464,0.266362,0.211051,0.270163,0.086767,0.421317,0.122894,0.438968,0.193461,0.271681,0.196172,0.271395,0.198081,0.28044,0.217006,0.275068,0.217123,0.271701,0.091817,0.278553,0.115682,0.258863,0.112107,0.304438,0.134293,0.277983,0.168824,0.310122,0.176752,0.309358,0.169371,0.312301,0.200306,0.265239,0.11863,0.336811,0.184553,0.310135,0.132805,0.301543,0.213499,0.262052,0.21746,0.261225,0.2159,0.265574,0.218184,0.265223,0.184938,0.18536,0.194445,0.190511,0.207664,0.265629,0.156257,0.316375,0.161775,0.313769,0.188025,0.294016,0.196825,0.286971,0.189846,0.281447,0.193964,0.181304,0.199339,0.26209,0.213931,0.266564,0.212355,0.2688,0.120787,0.217378,0.183119,0.274344,0.174667,0.263569,0.169571,0.167183,0.194229,0.172405,0.116092,0.373506,0.051665,0.30985,0.209771,0.194418,0.210085,0.185464,0.215108,0.303279,0.221173,0.303997,0.221173,0.293754,0.213193,0.317889,0.221173,0.319508,0.217487,0.269403,0.217357,0.258204,0.221173,0.258188,0.221173,0.260832,0.058274,0.282605,0.104275,0.400295,0.216534,0.281317,0.209118,0.201916,0.197093,0.336355,0.213356,0.328093,0.215996,0.334879,0.187659,0.266741,0.182334,0.256587,0.180426,0.157196,0.132017,0.146536,0.211436,0.168461,0.210528,0.177655,0.139313,0.330863,0.205732,0.206818,0.131982,0.34943,0.221173,0.275588,0.221173,0.271977,0.162363,0.320168,0.161231,0.324796,0.154893,0.319258,0.150146,0.322536,0.034717,0.271324,0.221173,0.286318,0.144794,0.326183,0.175815,0.357077,0.173972,0.339248,0.192163,0.142159,0.157646,0.330496,0.183812,0.116638,0.176224,0.381744,0.202381,0.37847,0.203173,0.35269,0.162594,0.316262,0.173972,0.33149,0.197571,0.438131,0.165342,0.437708,0.135653,0.411041,0.146718,0.383303,0.171115,0.409359,0.200629,0.404669,0.154524,0.338715,0.150761,0.359401,0.178151,0.243071,0.175257,0.229395,0.190781,0.249673,0.186748,0.237867,0.793675,0.551404,0.73758,0.526487,0.775387,0.525448,0.742965,0.522053,0.000095,0.250737,0.003879,0.24103,0.014708,0.244266,0.011664,0.239743,0.039462,0.302616,0.025354,0.242691,0.030939,0.247405,0.034836,0.313302,0.45623,0.580159,0.618432,0.034511,0.390435,0.200561,0.380971,0.186451,0.395747,0.188025,0.382724,0.170364,0.347223,0.154482,0.302303,0.112266,0.357121,0.142842,0.413391,0.23807,0.425211,0.230535,0.09068,0.124195,0.295472,0.122515,0.301621,0.132628,0.902042,0.556619,0.894271,0.555231,0.900974,0.542959,0.888341,0.545219,0.692352,0.519453,0.694408,0.5078,0.700296,0.519362,0.684568,0.503078,0.686905,0.515143,0.699872,0.530536,0.710657,0.539329,0.710542,0.548288,0.700258,0.540051,0.700431,0.546913,0.55976,0.635144,0.566573,0.645223,0.549381,0.65707,0.561501,0.660163,0.545504,0.684962,0.531188,0.697855,0.529554,0.681534,0.518862,0.696798,0.537681,0.730597,0.510848,0.729989,0.534921,0.719245,0.509475,0.722403,0.564693,0.788924,0.575994,0.775078,0.581054,0.795473,0.587649,0.78214,0.558166,0.75691,0.552341,0.78118,0.53423,0.767677,0.525327,0.757506,0.515118,0.740319,0.543138,0.741825,0.592603,0.801426,0.595757,0.789028,0.535429,0.708958,0.511657,0.708328,0.596799,0.803545,0.603111,0.800089,0.887529,0.443684,0.87126,0.460825,0.849537,0.436544,0.852713,0.463202,0.884071,0.425861,0.816516,0.372522,0.834633,0.37498,0.819311,0.388233,0.813097,0.387972,0.85322,0.387647,0.834108,0.397064,0.846979,0.423202,0.551696,0.865562,0.480077,0.828863,0.558103,0.855624,0.487877,0.81149,0.46984,0.942396,0.547855,0.948435,0.470618,0.95138,0.867196,0.120046,0.853009,0.12085,0.870493,0.059388,0.852457,0.05654,0.546847,0.870629,0.543934,0.880255,0.475779,0.843849,0.470302,0.867595,0.576816,0.815692,0.499493,0.78525,0.581655,0.803412,0.504834,0.774681,0.510735,0.763936,0.568676,0.835511,0.495138,0.795047,0.548748,0.96234,0.471829,0.966446,0.473125,0.979952,0.550112,0.976663,0.468186,0.929509,0.836887,0.05341,0.822365,0.111382,0.468957,0.881494,0.543455,0.88715,0.547805,0.901331,0.467689,0.898613,0.564012,0.844941,0.801284,0.110526,0.782008,0.109874,0.812223,0.048564,0.790772,0.043414,0.933561,0.125177,0.91283,0.121747,0.915819,0.067912,0.901379,0.065719,0.952506,0.128364,0.93972,0.069884,0.927891,0.069227,0.406168,0.358529,0.417601,0.349297,0.421274,0.37014,0.433271,0.359505,0.771411,0.493991,0.766676,0.483851,0.772402,0.491879,0.277525,0.560785,0.25648,0.506042,0.333263,0.539224,0.298488,0.495593,0.406237,0.399587,0.428084,0.399213,0.412207,0.452797,0.378438,0.44515,0.342327,0.47782,0.382717,0.498302,0.919869,0.61006,0.911212,0.597072,0.923958,0.606653,0.90807,0.585893,0.905734,0.587172,0.904958,0.586836,0.955833,0.623747,0.941857,0.631138,0.940572,0.617057,0.929356,0.620906,0.934157,0.613122,0.398215,0.181908,0.379496,0.156533,0.382379,0.226654,0.261171,0.103443,0.293354,0.101752,0.256627,0.093018,0.369427,0.248938,0.342634,0.232196,0.348186,0.201701,0.400429,0.258515,0.349605,0.179029,0.433121,0.229294,0.727634,0.389202,0.733004,0.390231,0.723915,0.396627,0.735116,0.398492,0.688813,0.369701,0.695017,0.374517,0.686886,0.385099,0.693447,0.387053,0.706773,0.326051,0.692946,0.327706,0.705721,0.321032,0.693204,0.321604,0.721249,0.326852,0.709154,0.331798,0.714924,0.323376,0.770918,0.373396,0.764758,0.367863,0.780424,0.35703,0.765564,0.342505,0.721648,0.283337,0.731137,0.264109,0.727718,0.289909,0.731758,0.347812,0.741091,0.339488,0.752258,0.361303,0.717164,0.389591,0.716681,0.379871,0.724116,0.385414,0.724349,0.380981,0.733751,0.374331,0.726489,0.374984,0.732681,0.368103,0.719593,0.368781,0.760677,0.370499,0.749858,0.364989,0.731305,0.382427,0.73921,0.385375,0.737229,0.388527,0.733949,0.35753,0.732891,0.361836,0.703888,0.367451,0.705131,0.376445,0.710274,0.371677,0.700705,0.362986,0.719146,0.376292,0.725373,0.379236,0.728248,0.378089,0.744277,0.394864,0.736202,0.408185,0.751316,0.404954,0.71827,0.404924,0.766629,0.379055,0.755146,0.391971,0.748484,0.389034,0.75573,0.38143,0.748225,0.382792,0.706212,0.392379,0.739024,0.381899,0.714729,0.349876,0.729567,0.338095,0.714009,0.341066,0.716237,0.362923,0.715449,0.358686,0.700816,0.401558,0.697804,0.346755,0.699255,0.35487,0.693128,0.339906,0.680876,0.339117,0.680876,0.32198,0.680876,0.328299,0.688,0.353205,0.688406,0.361453,0.746022,0.37811,0.737836,0.379635,0.732419,0.377827,0.744058,0.370476,0.751683,0.374611,0.725104,0.245759,0.714106,0.256896,0.735847,0.378509,0.740916,0.375515,0.700446,0.31002,0.713781,0.310694,0.717469,0.293538,0.719373,0.301652,0.701844,0.296879,0.704028,0.247827,0.70305,0.230427,0.729319,0.229299,0.686907,0.092929,0.691096,0.097434,0.687035,0.102779,0.691376,0.10131,0.686444,0.111523,0.694775,0.107227,0.68725,0.119978,0.699184,0.114692,0.702818,0.110587,0.687655,0.087108,0.712389,0.411693,0.90332,0.569159,0.898932,0.564289,0.90573,0.567217,0.755476,0.423678,0.766162,0.429254,0.74724,0.432115,0.713943,0.451824,0.696716,0.450197,0.708393,0.438432,0.696218,0.440565,0.71285,0.473445,0.727865,0.467053,0.729382,0.475774,0.756408,0.415007,0.735669,0.417313,0.875822,0.163683,0.855956,0.161502,0.872319,0.141581,0.853965,0.141348,0.729205,0.450536,0.714042,0.466193,0.694281,0.41542,0.707394,0.419647,0.695266,0.427613,0.708279,0.429408,0.73013,0.433597,0.731644,0.424517,0.742723,0.448465,0.92598,0.579019,0.908236,0.574019,0.905179,0.574603,0.894795,0.558697,0.744808,0.106132,0.761464,0.107461,0.745745,0.131635,0.833489,0.197391,0.83423,0.159721,0.855313,0.180448,0.780904,0.386583,0.783505,0.371273,0.794976,0.382584,0.798991,0.13851,0.768023,0.159432,0.776763,0.137801,0.751928,0.200076,0.745816,0.189533,0.758354,0.185994,0.751092,0.182191,0.758343,0.13659,0.7552,0.156904,0.730001,0.135077,0.739014,0.157515,0.724516,0.161003,0.702037,0.201472,0.699156,0.180854,0.720235,0.198959,0.726066,0.171868,0.74967,0.271862,0.74727,0.157481,0.491168,0.803922,0.738256,0.193674,0.730487,0.170443,0.795225,0.358637,0.766985,0.395522,0.772068,0.399177,0.762046,0.402454,0.767654,0.409352,0.920857,0.470322,0.896981,0.489549,0.895005,0.480325,0.85368,0.477189,0.894525,0.460852,0.794968,0.397487,0.772069,0.342599,0.756147,0.33587,0.836293,0.349551,0.854008,0.356683,0.835393,0.362696,0.853265,0.367878,0.76862,0.192793,0.790629,0.161871,0.680876,0.459087,0.693139,0.465594,0.696984,0.477196,0.903558,0.495524,0.887924,0.501,0.895332,0.505224,0.881988,0.480335,0.710529,0.529951,0.727881,0.530799,0.727023,0.541403,0.898273,0.521973,0.910438,0.509792,0.903296,0.525703,0.918399,0.514983,0.959062,0.612821,0.94365,0.608892,0.938366,0.606211,0.928931,0.595014,0.958878,0.573068,0.942942,0.588073,0.941744,0.576578,0.728767,0.521714,0.702627,0.497427,0.732441,0.511841,0.920574,0.499337,0.761776,0.459849,0.759886,0.475486,0.879724,0.390075,0.878256,0.370441,0.783006,0.341054,0.745123,0.501974,0.737524,0.507059,0.724849,0.485022,0.713664,0.48841,0.921409,0.480479,0.885534,0.518061,0.878319,0.516131,0.947899,0.598139,0.96049,0.604152,0.854722,0.344818,0.836174,0.334741,0.798145,0.32267,0.779624,0.321355,0.793268,0.299728,0.770322,0.302328,0.755079,0.256796,0.769307,0.2577,0.766451,0.271135,0.819748,0.328085,0.797427,0.339607,0.819002,0.34367,0.763322,0.207835,0.716581,0.157536,0.817754,0.359452,0.756564,0.285155,0.736069,0.300274,0.712312,0.482225,0.692846,0.458833,0.840933,0.1362,0.904891,0.193588,0.889445,0.189269,0.909734,0.165817,0.892952,0.165432,0.886039,0.215001,0.872635,0.207759,0.859101,0.227983,0.849498,0.221846,0.899233,0.220961,0.871356,0.234499,0.922437,0.144463,0.939297,0.143751,0.925449,0.167123,0.919383,0.196941,0.743696,0.208541,0.895185,0.120318,0.880678,0.119444,0.883029,0.062045,0.77392,0.412844,0.70974,0.518798,0.922352,0.566609,0.914355,0.551425,0.924681,0.547481,0.935828,0.562577,0.817555,0.135629,0.954554,0.637909,0.761958,0.228979,0.874112,0.184772,0.809141,0.230116,0.785103,0.225854,0.809087,0.218195,0.785548,0.214784,0.725063,0.029591,0.727995,0.106338,0.809021,0.202867,0.787713,0.199494,0.773573,0.040579,0.885012,0.239164,0.906661,0.223847,0.860829,0.200494,0.888804,0.142214,0.83908,0.211091,0.830821,0.25474,0.852018,0.261569,0.824132,0.281776,0.8463,0.287635,0.750204,0.240283,0.800616,0.276979,0.801911,0.301652,0.821517,0.305966,0.688871,0.486046,0.90594,0.583637,0.699914,0.487663,0.814103,0.171308,0.787928,0.272418,0.779139,0.24365,0.904971,0.143409,0.929053,0.199655,0.837926,0.234382,0.860518,0.243237,0.889073,0.246207,0.762008,0.490548,0.764708,0.498333,0.87339,0.499173,0.909313,0.540477,0.909476,0.531394,0.922148,0.525728,0.914442,0.538698,0.929309,0.53304,0.763268,0.326913,0.737894,0.326208,0.750858,0.310764,0.771573,0.284065,0.722241,0.312868,0.690006,0.153548,0.83739,0.311468,0.848035,0.301985,0.808088,0.249673,0.881924,0.313692,0.857108,0.333556,0.95308,0.556463,0.964311,0.592637,0.938305,0.54199,0.94049,0.166224,0.874746,0.283795,0.879641,0.264601,0.879034,0.301,0.87729,0.351446,0.882796,0.329763,0.880762,0.407111,0.951397,0.069998,0.974644,0.13016,0.962121,0.068903,0.719936,0.549313,0.72801,0.550457,0.867427,0.512919,0.855111,0.497634,0.8546,0.508458,0.680876,0.474834,0.893462,0.267503,0.891212,0.28359,0.903621,0.323226,0.89854,0.309396,0.680876,0.442882,0.680876,0.426993,0.704757,0.270666,0.703872,0.280437,0.689138,0.404019,0.712463,0.131848,0.707117,0.132987,0.997687,0.132019,0.702988,0.02119,0.980825,0.066996,0.972063,0.068283,0.687891,0.129078,0.68528,0.075612,0.690688,0.075978,0.680876,0.290519,0.680876,0.279301,0.855842,0.754571,0.858637,0.754855,0.857251,0.756884,0.56196,0.703444,0.564005,0.711577,0.598974,0.724045,0.676666,0.685747,0.679502,0.694044,0.597916,0.691932,0.604122,0.701431,0.682834,0.701491,0.677757,0.711729,0.619766,0.730217,0.627345,0.736485,0.594,0.754832,0.638557,0.668033,0.684201,0.660042,0.642348,0.680902,0.688666,0.668376,0.684057,0.733506,0.644804,0.739039,0.681136,0.726131,0.639323,0.656505,0.68722,0.678793,0.571207,0.728074,0.584722,0.746897,0.732873,0.726601,0.733889,0.74032,0.707738,0.733244,0.71577,0.746811,0.831947,0.649463,0.848553,0.645935,0.834771,0.654405,0.850929,0.649923,0.846061,0.63835,0.855468,0.636539,0.847093,0.642113,0.856684,0.640675,0.849249,0.712267,0.842589,0.712168,0.834102,0.693101,0.831221,0.696812,0.822687,0.651639,0.821236,0.647039,0.830248,0.644226,0.841603,0.683121,0.84271,0.676522,0.869683,0.693207,0.874201,0.686141,0.861208,0.648091,0.856153,0.654044,0.858606,0.64491,0.909513,0.719746,0.910297,0.721672,0.907933,0.722766,0.910859,0.724417,0.893418,0.573008,0.886292,0.574254,0.892568,0.568003,0.9043,0.72035,0.90219,0.724541,0.908273,0.725209,0.876926,0.551529,0.874271,0.547286,0.877901,0.548441,0.907485,0.727373,0.91398,0.728131,0.875215,0.544985,0.906418,0.717273,0.895955,0.708889,0.908986,0.71439,0.897843,0.706212,0.890342,0.577655,0.882663,0.570496,0.887516,0.567212,0.832871,0.566409,0.828445,0.566786,0.831231,0.557041,0.8274,0.557525,0.866735,0.553005,0.870515,0.554948,0.860827,0.564469,0.864753,0.567047,0.853587,0.546928,0.848704,0.552097,0.850585,0.543347,0.823525,0.549924,0.825304,0.547698,0.826675,0.549864,0.851624,0.563785,0.846817,0.562799,0.853022,0.552545,0.871958,0.622894,0.870341,0.617485,0.876062,0.621942,0.878626,0.616609,0.859971,0.749345,0.857934,0.749195,0.830367,0.552225,0.829809,0.549259,0.851695,0.57668,0.874622,0.578978,0.878198,0.583206,0.823514,0.552908,0.854495,0.754856,0.852078,0.756181,0.853216,0.754539,0.874461,0.556563,0.869298,0.56892,0.850344,0.73297,0.853666,0.732855,0.852715,0.744198,0.855774,0.743784,0.84968,0.745138,0.850843,0.749035,0.845825,0.746704,0.849892,0.750917,0.877529,0.626985,0.873098,0.627605,0.881261,0.628785,0.883584,0.631848,0.880978,0.63206,0.887724,0.643709,0.886081,0.641941,0.891987,0.636788,0.888148,0.637586,0.887361,0.620929,0.886702,0.617414,0.85744,0.631278,0.875694,0.639425,0.874756,0.636571,0.882329,0.637794,0.881211,0.634938,0.8741,0.633443,0.883366,0.636362,0.882946,0.634658,0.884321,0.640526,0.88577,0.638539,0.846438,0.545569,0.860856,0.624734,0.877754,0.747785,0.879185,0.746337,0.882901,0.751346,0.882447,0.742152,0.882447,0.744301,0.879898,0.744093,0.881784,0.746708,0.859844,0.733651,0.859615,0.74398,0.844495,0.550782,0.842172,0.561483,0.847967,0.752049,0.912581,0.711161,0.914596,0.717428,0.91216,0.71756,0.8563,0.747868,0.853474,0.747836,0.85464,0.749394,0.856506,0.750838,0.889434,0.742295,0.888999,0.74861,0.887362,0.74249,0.877942,0.740339,0.873851,0.742409,0.823377,0.557718,0.824189,0.567052,0.869229,0.548379,0.872723,0.72861,0.867434,0.732264,0.878001,0.725812,0.883643,0.72367,0.883813,0.737446,0.887548,0.735745,0.82682,0.579576,0.816502,0.615465,0.810596,0.608775,0.876553,0.710922,0.866555,0.699667,0.89026,0.716866,0.89024,0.565224,0.894217,0.566443,0.918119,0.672402,0.920332,0.673001,0.919291,0.675487,0.922289,0.674348,0.913739,0.665286,0.919793,0.667301,0.913879,0.669585,0.918302,0.669076,0.885467,0.741315,0.922353,0.678499,0.921322,0.676713,0.927032,0.674408,0.853894,0.543682,0.920288,0.665185,0.925994,0.667683,0.914747,0.676194,0.915714,0.680302,0.901069,0.678663,0.903558,0.685154,0.823321,0.580821,0.925103,0.670454,0.927921,0.670762,0.925352,0.671969,0.916564,0.716095,0.918582,0.722356,0.854025,0.757454,0.827588,0.54745,0.890157,0.634618,0.889809,0.630081,0.889713,0.632938,0.895356,0.570364,0.886104,0.744722,0.707337,0.657069,0.710004,0.664944,0.600612,0.767888,0.870827,0.545576,0.851088,0.541153,0.880968,0.738776,0.875404,0.726895,0.80887,0.622719,0.813641,0.630929,0.824518,0.624153,0.899461,0.665567,0.899985,0.672151,0.705402,0.724137,0.704281,0.710168,0.727683,0.710529,0.604973,0.710232,0.650849,0.641229,0.676576,0.644041,0.562815,0.687346,0.569789,0.678684,0.687962,0.740829,0.692179,0.747806,0.675491,0.761221,0.886635,0.751208,0.884953,0.74941,0.883447,0.749533,0.886387,0.7488,0.826757,0.674257,0.839385,0.661661,0.825233,0.662751,0.894079,0.711638,0.6958,0.757368,0.680932,0.771729,0.692973,0.685809,0.698875,0.692851,0.84904,0.594374,0.859833,0.607842,0.830363,0.618922,0.88728,0.747697,0.915797,0.723763,0.917484,0.726146,0.914793,0.724947,0.862991,0.581388,0.913537,0.725992,0.856909,0.753951,0.852174,0.75174,0.822781,0.698764,0.821823,0.69227,0.81129,0.700821,0.902272,0.700539,0.876446,0.642569,0.866461,0.649462,0.873888,0.655477,0.868203,0.657497,0.873207,0.651915,0.556023,0.673659,0.539637,0.67028,0.567229,0.719969,0.916569,0.722364,0.914255,0.720142,0.925166,0.673107,0.882242,0.586942,0.831224,0.592769,0.847508,0.733943,0.842026,0.736131,0.840024,0.715178,0.860164,0.616432,0.861452,0.620044,0.849888,0.624917,0.828313,0.632394,0.818079,0.637448,0.869289,0.660964,0.859612,0.662289,0.845689,0.634315,0.861786,0.656663,0.845989,0.660686,0.859751,0.596415,0.871271,0.595488,0.874386,0.678738,0.874938,0.674373,0.900279,0.675358,0.835661,0.572665,0.88392,0.743608,0.911559,0.720093,0.853158,0.749713,0.85587,0.709483,0.91413,0.672905,0.920012,0.671125,0.861091,0.70399,0.874947,0.658532,0.891387,0.689381,0.889763,0.691372,0.826832,0.680269,0.703364,0.701539,0.71885,0.682321,0.823765,0.656149,0.714073,0.67372,0.823434,0.688275,0.575773,0.648021,0.576523,0.660815,0.847405,0.542516,0.924536,0.669448,0.921345,0.669286,0.611716,0.798955,0.607948,0.784604,0.710732,0.623251,0.680214,0.629902,0.707218,0.613632,0.688503,0.618379,0.725857,0.700538,0.72392,0.693118,0.710175,0.638806,0.876696,0.711893,0.85983,0.720884,0.80282,0.61544,0.858361,0.720673,0.864265,0.58524,0.888655,0.631561,0.890025,0.636338,0.886868,0.631293,0.669816,0.629799,0.871137,0.649321,0.880276,0.64778,0.885705,0.666908,0.573388,0.874448,0.58785,0.881911,0.572559,0.883725,0.586528,0.892339,0.57144,0.890861,0.607633,0.89024,0.606083,0.904529,0.58472,0.917988,0.584433,0.904953,0.606859,0.918889,0.613112,0.871915,0.746932,0.861545,0.738044,0.87647,0.770153,0.91435,0.769776,0.924156,0.752457,0.91523,0.752676,0.926816,0.883187,0.869327,0.868191,0.860507,0.882837,0.857611,0.75728,0.880408,0.762927,0.877934,0.768165,0.892075,0.774565,0.888502,0.751578,0.872893,0.756768,0.871022,0.749323,0.867725,0.755551,0.865941,0.755545,0.857949,0.770091,0.939661,0.766189,0.931938,0.778221,0.937524,0.747489,0.960792,0.748616,0.957755,0.756872,0.964128,0.759884,0.960963,0.763489,0.957236,0.749539,0.954744,0.77111,0.901485,0.771071,0.906486,0.752436,0.903314,0.752534,0.907955,0.754296,0.966802,0.745921,0.964204,0.814679,0.893107,0.807603,0.882775,0.817916,0.878516,0.589528,0.872147,0.60927,0.881611,0.775298,0.942036,0.778942,0.94454,0.772791,0.945477,0.774285,0.949624,0.766688,0.948735,0.768145,0.944095,0.808055,0.855049,0.793103,0.870978,0.784969,0.85826,0.781494,0.812135,0.783294,0.818617,0.774383,0.814336,0.775365,0.820662,0.79448,0.808929,0.792499,0.817452,0.788127,0.895872,0.773897,0.993581,0.767486,0.987986,0.777556,0.987464,0.772037,0.981788,0.769639,0.833217,0.77433,0.83136,0.775552,0.83585,0.779962,0.831972,0.768888,0.817361,0.770559,0.820969,0.792478,0.967733,0.788398,0.972229,0.787896,0.964574,0.783121,0.968877,0.777605,0.979016,0.767911,0.970148,0.779739,0.973576,0.770582,0.965507,0.781212,0.982896,0.783441,0.97823,0.773505,0.960945,0.777875,0.827848,0.785801,0.826836,0.787841,0.833956,0.764863,0.974035,0.772094,0.828272,0.768084,0.830701,0.780895,0.940515,0.760788,0.978984,0.806337,0.873077,0.817617,0.856235,0.818231,0.869117,0.765557,0.848333,0.762084,0.864291,0.858256,0.809192,0.863575,0.803556,0.871453,0.809068,0.859359,0.853602,0.860557,0.846411,0.871637,0.846983,0.869521,0.853856,0.884395,0.875968,0.887707,0.881744,0.811307,0.916716,0.786551,0.902431,0.813441,0.898798,0.812331,0.804324,0.828332,0.7981,0.812386,0.810931,0.837617,0.81082,0.786751,0.889868,0.846306,0.948993,0.814673,0.942754,0.8136,0.930113,0.904875,0.854942,0.903855,0.858333,0.8441,0.959636,0.833815,0.953846,0.913331,0.854994,0.909288,0.853182,0.917149,0.847756,0.903371,0.842636,0.902142,0.834096,0.910068,0.835665,0.909449,0.831682,0.901926,0.827469,0.893742,0.831078,0.892863,0.837918,0.854427,0.956497,0.850857,0.965096,0.667938,0.97148,0.663289,0.960677,0.905396,0.848335,0.915815,0.864455,0.91149,0.868314,0.91232,0.862199,0.907882,0.864829,0.811525,0.824124,0.794802,0.825326,0.902387,0.888933,0.88836,0.906103,0.906748,0.811445,0.90455,0.811242,0.903098,0.80562,0.902379,0.807644,0.895455,0.807267,0.896957,0.810264,0.927156,0.896286,0.925198,0.905573,0.922565,0.900296,0.921896,0.902569,0.880623,0.81084,0.875133,0.805338,0.911344,0.931115,0.913408,0.930207,0.91222,0.933494,0.915561,0.932661,0.909097,0.927866,0.885527,0.925825,0.908964,0.925507,0.884802,0.794427,0.882788,0.79259,0.886142,0.792557,0.884511,0.790306,0.918368,0.926048,0.915424,0.925496,0.916526,0.922654,0.914157,0.9234,0.888876,0.798395,0.890647,0.800748,0.882941,0.803457,0.884698,0.805403,0.910175,0.920873,0.905488,0.91512,0.912816,0.91871,0.906924,0.930183,0.879816,0.800762,0.873566,0.800967,0.877954,0.799264,0.870462,0.820634,0.890015,0.796891,0.891937,0.798859,0.907019,0.933978,0.899997,0.815503,0.899122,0.952948,0.901853,0.956452,0.899227,0.955269,0.872858,0.781577,0.873335,0.779521,0.876367,0.783768,0.877258,0.78186,0.880576,0.82499,0.888638,0.821582,0.892367,0.824819,0.872956,0.788763,0.86938,0.800962,0.869161,0.786497,0.859843,0.794658,0.898559,0.961405,0.896554,0.959163,0.877205,0.974035,0.875159,0.972171,0.875403,0.962058,0.866272,0.783908,0.90111,0.950703,0.897788,0.950772,0.878443,0.785003,0.869063,0.970698,0.868467,0.976255,0.876649,0.94142,0.865591,0.949564,0.891578,0.825186,0.902322,0.818222,0.894651,0.959313,0.895224,0.956602,0.88909,0.914506,0.894871,0.912763,0.912268,0.928636,0.912777,0.927245,0.87189,0.969491,0.87014,0.969233,0.862727,0.952824,0.838217,0.793247,0.843277,0.787256,0.849378,0.801812,0.849355,0.780023,0.849599,0.775974,0.854585,0.778915,0.854579,0.775929,0.85488,0.771543,0.849425,0.770971,0.87022,0.977247,0.871003,0.981583,0.867879,0.979751,0.874273,0.974416,0.87711,0.977279,0.854689,0.792706,0.849468,0.790958,0.672087,0.980699,0.662125,0.95047,0.628058,0.947868,0.655949,0.937863,0.628627,0.936107,0.627381,0.959863,0.606216,0.93027,0.629425,0.925301,0.629755,0.915074,0.617753,0.852148,0.633508,0.852576,0.609994,0.971226,0.626394,0.973272,0.609259,0.98364,0.625424,0.986211,0.751562,0.894681,0.892759,0.954806,0.892448,0.958277,0.872672,0.972498,0.870097,0.973807,0.846735,0.775032,0.89392,0.845998,0.896728,0.954133,0.895257,0.951688,0.857995,0.77641,0.750579,0.969813,0.741315,0.968485,0.833094,0.795166,0.865025,0.8294,0.609756,0.959591,0.59601,0.9581,0.608722,0.949989,0.59156,0.941786,0.607291,0.992582,0.596229,0.989279,0.592225,0.976873,0.659401,0.996098,0.563786,0.851265,0.577603,0.848697,0.571865,0.955304,0.568251,0.936082,0.586891,0.932214,0.607281,0.939648,0.624918,0.996151,0.603519,0.84866,0.599488,0.862845,0.571816,0.977851,0.575026,0.858723,0.561513,0.86822,0.56537,0.857935,0.877273,0.953098,0.566177,0.924739,0.546127,0.922072,0.562513,0.911254,0.887479,0.835999,0.815642,0.950027,0.871474,0.973564,0.897899,0.945468,0.882075,0.932864,0.870845,0.779793,0.857753,0.779845,0.888342,0.932713,0.889499,0.936762,0.922568,0.897569,0.774115,0.869118,0.785726,0.877787,0.913516,0.925751,0.908505,0.828131,0.885826,0.847399,0.918233,0.905805,0.918006,0.902346,0.876003,0.790686,0.905163,0.86266,0.871855,0.800279,0.891218,0.934395,0.898706,0.881925,0.899466,0.884335,0.884163,0.812301,0.893612,0.952772,0.766275,0.825367,0.467927,0.917679,0.546977,0.934341,0.785362,0.9114,0.785633,0.925135,0.919873,0.894702,0.918675,0.897334,0.910582,0.923639,0.923395,0.862481,0.914247,0.857414,0.921595,0.853612,0.774566,0.851296,0.799065,0.835662,0.771899,0.841722,0.876412,0.828948,0.593589,0.825486,0.584949,0.838197,0.47439,0.992391,0.596547,0.818262,0.610996,0.832267,0.621989,0.834968,0.635362,0.835017,0.896151,0.955606,0.893936,0.962129,0.899271,0.906339,0.917081,0.899801,0.917789,0.909772,0.917614,0.873094,0.888094,0.958768,0.666834,0.837592,0.798205,0.947328,0.790818,0.931745,0.755652,0.939143,0.913491,0.890376,0.91051,0.879075,0.80277,0.954047,0.899741,0.932006,0.796612,0.961024,0.913354,0.908729,0.919174,0.889683,0.818159,0.481302,0.809104,0.484398,0.782915,0.434851,0.789434,0.441887,0.784298,0.446059,0.814796,0.43989,0.823771,0.462893,0.810261,0.469114,0.78183,0.488227,0.775786,0.484911,0.780783,0.483725,0.775744,0.477507,0.806545,0.44896,0.804456,0.466313,0.801851,0.459528,0.798883,0.474358,0.800911,0.475726,0.806138,0.467392,0.804728,0.478898,0.775592,0.464396,0.784474,0.452007,0.789979,0.462455,0.799312,0.441795,0.800157,0.435794,0.801343,0.446984,0.778137,0.448797,0.775872,0.441488,0.778748,0.437868,0.777658,0.442418,0.791839,0.480517,0.792616,0.482739,0.781526,0.481144,0.796686,0.457939,0.797192,0.450058,0.794241,0.486953,0.795728,0.4934,0.775335,0.491264,0.810532,0.441894,0.785299,0.469453,0.792171,0.467641,0.776363,0.450532,0.805464,0.496305,0.786793,0.500188,0.767179,0.440885,0.810804,0.424521,0.80692,0.429801,0.803836,0.424302,0.770868,0.478057,0.795585,0.433216,0.812164,0.430235,0.826037,0.446893,0.7803,0.438852,0.230351,0.265575,0.230678,0.263293,0.233571,0.264806,0.292566,0.318897,0.298751,0.310295,0.303353,0.319574,0.282089,0.312152,0.28801,0.304278,0.25585,0.312652,0.26838,0.314943,0.255385,0.31868,0.268226,0.319789,0.276225,0.301044,0.293626,0.289173,0.276763,0.279492,0.2656,0.302124,0.263815,0.287895,0.288286,0.258186,0.274559,0.248364,0.295644,0.234664,0.277871,0.228843,0.267797,0.325092,0.387547,0.385995,0.369633,0.372252,0.392726,0.337604,0.251279,0.310557,0.252965,0.311016,0.351587,0.349517,0.250739,0.324982,0.253905,0.200718,0.247091,0.203637,0.246651,0.197136,0.242953,0.301913,0.247675,0.298135,0.254589,0.305017,0.243599,0.319113,0.243934,0.312135,0.242309,0.276941,0.235056,0.279206,0.238649,0.269946,0.232623,0.273257,0.234675,0.262562,0.232468,0.261669,0.236546,0.262132,0.235346,0.260658,0.265431,0.311764,0.257627,0.312728,0.258154,0.312257,0.267729,0.191859,0.288477,0.17909,0.276119,0.208068,0.296249,0.205512,0.320115,0.184241,0.316274,0.164803,0.226657,0.293284,0.226303,0.285544,0.237074,0.290896,0.237558,0.282609,0.231295,0.270163,0.235882,0.266362,0.319452,0.438968,0.35558,0.421317,0.246175,0.271395,0.244265,0.28044,0.248885,0.271681,0.225223,0.271701,0.22534,0.275068,0.308053,0.277983,0.326665,0.258863,0.33024,0.304438,0.350529,0.278553,0.254085,0.215208,0.257409,0.18536,0.265595,0.309358,0.272976,0.312301,0.273522,0.310122,0.24204,0.265239,0.323717,0.336811,0.257793,0.310135,0.309542,0.301543,0.224162,0.265223,0.224886,0.261225,0.226446,0.265574,0.228848,0.262052,0.247902,0.190511,0.234683,0.265629,0.280571,0.313769,0.286089,0.316375,0.2525,0.281447,0.254321,0.294016,0.245522,0.286971,0.248383,0.181304,0.243008,0.26209,0.228416,0.266564,0.229991,0.2688,0.321559,0.217378,0.259227,0.274344,0.267679,0.263569,0.248117,0.172405,0.272776,0.167183,0.326255,0.373506,0.244775,0.438131,0.221173,0.43868,0.221173,0.512038,0.390682,0.30985,0.232261,0.185464,0.232576,0.194418,0.22486,0.269403,0.221173,0.265143,0.221173,0.269541,0.384072,0.282605,0.338071,0.400295,0.225812,0.281317,0.227238,0.303279,0.233228,0.201916,0.245253,0.336355,0.22635,0.334879,0.22899,0.328093,0.31033,0.146536,0.261921,0.157196,0.231818,0.177655,0.230911,0.168461,0.303034,0.330863,0.310365,0.34943,0.243951,0.257254,0.254687,0.266741,0.279983,0.320168,0.287453,0.319258,0.281116,0.324796,0.2922,0.322536,0.407629,0.271324,0.221173,0.334652,0.221173,0.329441,0.297553,0.326183,0.229153,0.317889,0.266532,0.357077,0.268374,0.339248,0.250183,0.142159,0.2847,0.330496,0.258535,0.116638,0.221173,0.196071,0.221173,0.186525,0.239173,0.35269,0.239965,0.37847,0.266122,0.381744,0.279752,0.316262,0.268374,0.33149,0.277005,0.437708,0.295628,0.383303,0.271231,0.409359,0.306693,0.411041,0.241717,0.404669,0.287822,0.338715,0.291586,0.359401,0.267089,0.229395,0.264196,0.243071,0.76624,0.45573,0.822335,0.430814,0.784528,0.429775,0.81695,0.42638,0.430682,0.239743,0.438467,0.24103,0.427639,0.244266,0.442251,0.250737,0.402885,0.302616,0.411407,0.247405,0.416993,0.242691,0.40751,0.313302,0.905523,0.580159,0.743321,0.034511,0.680876,0.112346,0.680876,0.309386,0.424997,0.201046,0.470541,0.28359,0.466635,0.299482,0.463213,0.309396,0.390297,0.628403,0.458132,0.323226,0.432586,0.466113,0.432357,0.478979,0.468291,0.267503,0.38767,0.591368,0.398289,0.552341,0.680876,0.201958,0.430234,0.49089,0.391389,0.570112,0.433483,0.452256,0.441129,0.383438,0.42676,0.503334,0.680876,0.369133,0.394172,0.642138,0.221173,0.569113,0.221173,0.281969,0.221173,0.167168,0.221173,0.138831,0.221173,0.113385,0.221173,0.205523,0.221173,0.179423,0.221173,0.377319,0.221173,0.350719,0.221173,0.40386,0.68118,0.075197,0.936756,0.201047,0.918334,0.228523,0.939522,0.512059,0.895118,0.299482,0.973576,0.615721,0.971456,0.628403,0.974389,0.60522,0.909626,0.341063,0.929396,0.478979,0.929167,0.466113,0.974083,0.591369,0.951068,0.178681,0.910053,0.242962,0.963755,0.156277,0.963464,0.552341,0.950935,0.533946,0.931519,0.49089,0.970364,0.570112,0.916201,0.362191,0.926195,0.422904,0.924268,0.404841,0.92768,0.438309,0.92827,0.452256,0.920624,0.383438,0.945367,0.524133,0.934993,0.503334,0.976158,0.142728,0.967581,0.642138,0.22499,0.258204,0.939731,0.764126,0.9529,0.75517,0.952081,0.762332,0.92778,0.785235,0.932805,0.775176,0.958039,0.785806,0.951717,0.655058,0.936636,0.654095,0.951735,0.64871,0.936636,0.68753,0.941159,0.679586,0.952329,0.688674,0.951945,0.681942,0.936636,0.720965,0.941159,0.713021,0.952042,0.722196,0.929066,0.841873,0.929504,0.830263,0.959324,0.841303,0.93565,0.821873,0.950132,0.822108,0.959307,0.833081,0.939731,0.730691,0.948022,0.773985,0.952093,0.695302,0.939731,0.697255,0.936636,0.7544,0.941159,0.746456,0.951824,0.728667,0.980397,0.674834,0.973475,0.66984,0.994286,0.668892,0.979101,0.658451,0.994053,0.662841,0.973056,0.664576,0.994082,0.697745,0.991134,0.701898,0.980788,0.7031,0.993824,0.726342,0.990558,0.730597,0.979366,0.73223,0.973836,0.697749,0.991746,0.79012,0.964392,0.786932,0.991037,0.784426,0.97371,0.691613,0.978898,0.711791,0.993722,0.718879,0.970989,0.718909,0.980987,0.764867,0.974995,0.758726,0.994221,0.758464,0.980908,0.74585,0.994128,0.751862,0.974935,0.752408,0.991084,0.673041,0.980322,0.685517,0.994312,0.691432,0.97259,0.826158,0.984838,0.827011,0.990721,0.833071,0.991951,0.837657,0.990502,0.659258,0.965051,0.793052,0.990712,0.71423,0.971131,0.725885,0.991934,0.686917,0.941159,0.646151,0.951653,0.715538,0.951765,0.661869,0.939731,0.66382,0.934365,0.805235,0.958022,0.794028,0.948847,0.805,0.928219,0.796846,0.970222,0.776487,0.992133,0.763181,0.339623,0.58321,0.353107,0.581067,0.340353,0.593985,0.357052,0.596265,0.338547,0.608007,0.352686,0.606755,0.356129,0.570921,0.363688,0.573007,0.352765,0.57504,0.36776,0.582665,0.355387,0.579678,0.350435,0.576762,0.934091,0.851933,0.949307,0.853123,0.953231,0.945167,0.942445,0.947523,0.953615,0.938434,0.953003,0.972051,0.95302,0.978398,0.937921,0.973013,0.953051,0.96524,0.937921,0.939578,0.937921,0.906143,0.941017,0.896418,0.953327,0.904912,0.954185,0.871938,0.941017,0.862983,0.953366,0.864777,0.952938,0.91157,0.942445,0.914088,0.994258,0.964936,0.990707,0.968519,0.979306,0.969325,0.994517,0.936344,0.973915,0.936163,0.994287,0.930031,0.952091,0.74888,0.992139,0.940859,0.980527,0.942259,0.971336,0.901892,0.993927,0.908897,0.971194,0.908867,0.990917,0.913546,0.979103,0.915985,0.964597,0.840844,0.991242,0.84335,0.970427,0.851289,0.994491,0.958885,0.97368,0.957936,0.9752,0.86905,0.994333,0.875914,0.97514,0.875368,0.981192,0.862909,0.994426,0.869312,0.981113,0.881927,0.973261,0.9632,0.980776,0.851876,0.987797,0.848011,0.965256,0.834724,0.994029,0.901434,0.992338,0.864595,0.980602,0.952942,0.991289,0.954735,0.980993,0.924676,0.974041,0.930027,0.953378,0.931806,0.942445,0.980958,0.941017,0.963288,0.937921,0.872708,0.991339,0.925878,0.302246,0.596413,0.306189,0.581216,0.318944,0.594134,0.319673,0.583358,0.290473,0.595143,0.30661,0.606904,0.30391,0.579827,0.330015,0.593147,0.32075,0.608155,0.31017,0.578387,0.317143,0.574133,0.302583,0.623187,0.308862,0.57691,0.368824,0.594995,0.334581,0.614699,0.329282,0.592999,0.329278,0.581689,0.367504,0.604767,0.329278,0.574208,0.356714,0.623039,0.336528,0.572011,0.342153,0.573984,0.324715,0.614847,0.291538,0.582813,0.303167,0.57107,0.306531,0.575189,0.295609,0.573155,0.330018,0.581836,0.291792,0.604913,0.330018,0.574356,0.20078,0.230444,0.241567,0.230444,0.243097,0.229847,0.251565,0.249673,0.260012,0.256587,0.231442,0.25881,0.252131,0.228261,0.255598,0.237867,0.259215,0.224588,0.238014,0.231192,0.240105,0.23042,0.231403,0.231245,0.367753,0.569288,0.329949,0.571156,0.322768,0.57216,0.329348,0.571007,0.291544,0.569436,0.533032,0.557629,0.531698,0.545667,0.523855,0.557699,0.522237,0.545341,0.529959,0.428329,0.519683,0.445753,0.53674,0.432016,0.534827,0.448158,0.520678,0.457036,0.539017,0.474738,0.523623,0.476351,0.529066,0.487611,0.524524,0.486171,0.546849,0.44032,0.546793,0.54474,0.54674,0.513425,0.534178,0.50686,0.534476,0.51613,0.533103,0.502218,0.533323,0.494463,0.527965,0.498048,0.531435,0.53408,0.523447,0.53332,0.513744,0.543496,0.516064,0.530467,0.528856,0.511881,0.531159,0.524437,0.524972,0.523851,0.519128,0.520241,0.515295,0.556215,0.526468,0.572392,0.534656,0.573711,0.535858,0.463116,0.529069,0.596269,0.534896,0.598106,0.510915,0.523409,0.515821,0.513164,0.523398,0.511701,0.508225,0.568271,0.546842,0.586375,0.546848,0.59979,0.505796,0.54959,0.52582,0.593663,0.519459,0.591763,0.546747,0.523138,0.54677,0.532982,0.546775,0.461737,0.560663,0.557629,0.56984,0.557699,0.561997,0.545667,0.571459,0.545341,0.563736,0.428329,0.556956,0.432017,0.574013,0.445753,0.558869,0.448158,0.573017,0.457036,0.569172,0.486171,0.570072,0.476351,0.56463,0.487611,0.554678,0.474738,0.546939,0.474132,0.560592,0.502218,0.565731,0.498048,0.560372,0.494463,0.562261,0.53408,0.570249,0.53332,0.579952,0.543496,0.577631,0.530467,0.559517,0.50686,0.56484,0.511881,0.562537,0.524437,0.568724,0.523851,0.559219,0.51613,0.574568,0.520241,0.5784,0.556215,0.55904,0.573711,0.567227,0.572392,0.557837,0.463116,0.5588,0.598106,0.564626,0.596269,0.58278,0.523409,0.577875,0.513164,0.546885,0.557696,0.546867,0.574616,0.570298,0.511701,0.585471,0.568271,0.546933,0.505814,0.5879,0.54959,0.567876,0.593663,0.574236,0.591763,0.546923,0.495867,0.980571,0.7759,0.987592,0.779766,0.972385,0.801618,0.990516,0.794705,0.984633,0.800765,0.991835,0.74713,0.979571,0.895547,0.990763,0.89718,0.99204,0.880647,0.953109,0.898441,0.942445,0.880653,0.941017,0.929853,0.953376,0.878228,0.216248,0.232159,0.204333,0.231192,0.210944,0.231245,0.202242,0.23042,0.349127,0.578239,0.546757,0.474132,0.546811,0.557696,0.546763,0.505814,0.546829,0.574616,0.546769,0.501142,0.546773,0.495867,0.546902,0.54474,0.546956,0.513425,0.546853,0.586375,0.546926,0.501142,0.546926,0.532982,0.546948,0.523138,0.546921,0.461737,0.351667,0.124195]]};\nvar eyes = {\"_id\":\"eyes\",\"metadata\":{\"materials\":1,\"generator\":\"io_three\",\"vertices\":52,\"faces\":96,\"bones\":31,\"version\":3,\"type\":\"Geometry\",\"uvs\":1},\"bones\":[{\"name\":\"Hips\",\"rotq\":[0,0,0,1],\"pos\":[-0.000027,18.2131,0.000197],\"parent\":-1},{\"name\":\"LHipJoint\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},{\"name\":\"LeftUpLeg\",\"rotq\":[0,0,0,1],\"pos\":[1.54938,-2.41555,0.04113],\"parent\":1},{\"name\":\"LeftLeg\",\"rotq\":[0,0,0,1],\"pos\":[-0.019988,-7.21534,-0.208633],\"parent\":2},{\"name\":\"LeftFoot\",\"rotq\":[0,0,0,1],\"pos\":[0.320012,-7.29465,-0.471353],\"parent\":3},{\"name\":\"LeftToeBase\",\"rotq\":[0,0,0,1],\"pos\":[0.198471,-0.54529,2.28466],\"parent\":4},{\"name\":\"RHipJoint\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},{\"name\":\"RightUpLeg\",\"rotq\":[0,0,0,1],\"pos\":[-1.43938,-2.41556,0.041129],\"parent\":6},{\"name\":\"RightLeg\",\"rotq\":[0,0,0,1],\"pos\":[-0.08999,-7.21534,-0.208642],\"parent\":7},{\"name\":\"RightFoot\",\"rotq\":[0,0,0,1],\"pos\":[-0.31999,-7.29467,-0.471362],\"parent\":8},{\"name\":\"RightToeBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.305358,-0.83898,2.28801],\"parent\":9},{\"name\":\"LowerBack\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},{\"name\":\"Spine\",\"rotq\":[0,0,0,1],\"pos\":[-0.04381,1.99522,-0.197985],\"parent\":11},{\"name\":\"Spine1\",\"rotq\":[0,0,0,1],\"pos\":[-0.01959,2.01295,-0.04372],\"parent\":12},{\"name\":\"Neck\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":13},{\"name\":\"Neck1\",\"rotq\":[0,0,0,1],\"pos\":[0.063054,2.1058,-0.51192],\"parent\":14},{\"name\":\"Head\",\"rotq\":[0,0,0,1],\"pos\":[-0.023034,1.43701,0.497281],\"parent\":15},{\"name\":\"LeftShoulder\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":14},{\"name\":\"LeftArm\",\"rotq\":[0,0,0,1],\"pos\":[2.59288,1.2264,-0.487197],\"parent\":17},{\"name\":\"LeftForeArm\",\"rotq\":[0,0,0,1],\"pos\":[4.14553,-0.064466,0.257386],\"parent\":18},{\"name\":\"LeftHand\",\"rotq\":[0,0,0,1],\"pos\":[3.69802,0.065802,1.73268],\"parent\":19},{\"name\":\"LeftFingerBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.000254,0,-0.000043],\"parent\":20},{\"name\":\"LeftHandIndex1\",\"rotq\":[0,0,0,1],\"pos\":[0.559672,0,0.260979],\"parent\":21},{\"name\":\"LThumb\",\"rotq\":[0,0,0,1],\"pos\":[-0.000254,0,-0.000043],\"parent\":20},{\"name\":\"RightShoulder\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":14},{\"name\":\"RightArm\",\"rotq\":[0,0,0,1],\"pos\":[-2.46562,1.22638,-0.487065],\"parent\":24},{\"name\":\"RightForeArm\",\"rotq\":[0,0,0,1],\"pos\":[-4.14558,-0.064367,0.259234],\"parent\":25},{\"name\":\"RightHand\",\"rotq\":[0,0,0,1],\"pos\":[-3.69873,0.066645,1.72989],\"parent\":26},{\"name\":\"RightFingerBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.000058,0,0.000157],\"parent\":27},{\"name\":\"RightHandIndex1\",\"rotq\":[0,0,0,1],\"pos\":[-0.529147,0,0.246746],\"parent\":28},{\"name\":\"RThumb\",\"rotq\":[0,0,0,1],\"pos\":[-0.000058,0,0.000157],\"parent\":27}],\"materials\":[{\"shading\":\"standard\",\"transparent\":false,\"wireframe\":false,\"DbgColor\":15658734,\"DbgIndex\":0,\"opacity\":1,\"visible\":true,\"depthTest\":true,\"depthWrite\":true,\"colorDiffuse\":[1,1,1],\"colorEmissive\":[0,0,0],\"colorSpecular\":[0.5,0.5,0.5],\"DbgName\":\"HM_EyesMaterial\",\"blending\":\"NormalBlending\"}],\"faces\":[10,1,5,4,0,0,1,2,10,1,2,0,0,0,3,4,10,1,8,7,0,0,5,6,10,1,3,2,0,0,7,3,10,1,6,5,0,0,8,1,10,1,7,6,0,0,6,8,10,1,4,3,0,0,2,7,10,1,0,8,0,0,4,5,10,8,0,9,0,9,10,11,10,14,19,20,0,12,13,14,10,2,3,10,0,15,16,17,10,10,3,11,0,17,16,18,10,3,4,11,0,16,19,18,10,11,4,12,0,18,19,20,10,4,5,12,0,19,21,20,10,12,5,13,0,20,21,22,10,5,6,13,0,21,23,22,10,13,6,14,0,22,23,12,10,6,7,14,0,23,24,12,10,14,7,15,0,12,24,25,10,11,12,18,0,18,20,26,10,15,9,21,0,25,11,27,10,14,15,19,0,12,25,13,10,10,11,17,0,17,18,28,10,9,16,21,0,11,29,27,10,11,18,17,0,18,26,28,10,15,21,19,0,25,27,13,10,13,14,20,0,22,12,14,10,7,8,15,0,24,9,25,10,15,8,9,0,25,9,11,10,27,30,31,0,30,31,32,10,27,26,28,0,30,33,34,10,27,33,34,0,30,35,36,10,27,28,29,0,30,34,37,10,27,31,32,0,30,32,38,10,27,32,33,0,30,38,35,10,27,29,30,0,30,37,31,10,27,34,26,0,30,36,33,10,46,45,44,0,28,39,40,10,48,47,44,0,41,26,40,10,49,50,44,0,13,14,40,10,34,35,26,0,9,11,10,10,26,35,36,0,10,11,42,10,39,47,48,0,20,26,41,10,37,45,46,0,17,39,28,10,41,50,49,0,12,14,13,10,28,37,29,0,15,17,16,10,29,37,38,0,16,17,18,10,29,38,30,0,16,18,19,10,30,38,39,0,19,18,20,10,30,39,31,0,19,20,21,10,31,39,40,0,21,20,22,10,31,40,32,0,21,22,23,10,32,40,41,0,23,22,12,10,32,41,33,0,23,12,24,10,33,41,42,0,24,12,25,10,38,47,39,0,18,26,20,10,42,51,35,0,25,27,11,10,45,43,44,0,39,29,40,10,47,46,44,0,26,28,40,10,51,49,44,0,27,13,40,10,50,48,44,0,14,41,40,10,43,51,44,0,29,27,40,10,41,49,42,0,12,13,25,10,36,45,37,0,42,39,17,10,35,43,36,0,11,29,42,10,37,46,38,0,17,28,18,10,35,51,43,0,11,27,29,10,39,48,40,0,20,41,22,10,38,46,47,0,18,28,26,10,36,43,45,0,42,29,39,10,40,48,50,0,22,41,14,10,42,49,51,0,25,13,27,10,40,50,41,0,22,14,12,10,26,36,28,0,10,42,15,10,28,36,37,0,15,42,17,10,33,42,34,0,24,25,9,10,34,42,35,0,9,25,11,10,9,0,25,0,11,10,42,10,12,24,18,0,20,41,26,10,10,17,23,0,17,28,39,10,25,10,23,0,42,17,39,10,9,25,16,0,11,42,29,10,12,13,24,0,20,22,41,10,13,20,24,0,22,14,41,10,0,2,25,0,10,15,42,10,25,2,10,0,42,15,17,10,17,22,23,0,28,40,39,10,24,22,18,0,41,40,26,10,19,22,20,0,13,40,14,10,23,22,16,0,39,40,29,10,18,22,17,0,26,40,28,10,21,22,19,0,27,40,13,10,20,22,24,0,14,40,41,10,16,22,21,0,29,40,27,10,25,23,16,0,42,39,29],\"influencesPerVertex\":4,\"name\":\"eyes\",\"skinWeights\":[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],\"vertices\":[0.304553,27.1953,0.945209,0.497511,27.3239,0.762302,0.451835,27.097,0.945209,0.625569,27.1315,0.945209,0.723977,27.2788,0.945209,0.690234,27.4522,0.945884,0.546495,27.5492,0.949553,0.370863,27.5153,0.947702,0.269994,27.369,0.945209,0.330848,27.2909,1.18116,0.530031,27.1577,1.18116,0.637831,27.2298,1.18116,0.663123,27.3569,1.18116,0.591089,27.4645,1.18159,0.46394,27.4895,1.18224,0.35614,27.418,1.18116,0.42405,27.2752,1.23255,0.545868,27.2508,1.233,0.583061,27.3067,1.23289,0.448244,27.3968,1.23255,0.5141,27.41,1.23281,0.410926,27.341,1.23281,0.496993,27.3239,1.24387,0.479871,27.2378,1.2328,0.569921,27.3726,1.23255,0.402866,27.183,1.18116,-0.304553,27.1953,0.945209,-0.497511,27.3239,0.762302,-0.451835,27.097,0.945209,-0.625569,27.1315,0.945209,-0.723977,27.2788,0.945209,-0.690234,27.4522,0.945884,-0.546495,27.5492,0.949553,-0.370863,27.5153,0.947702,-0.269994,27.369,0.945209,-0.330848,27.2909,1.18116,-0.402866,27.183,1.18116,-0.530031,27.1577,1.18116,-0.637831,27.2298,1.18116,-0.663123,27.3569,1.18116,-0.591089,27.4645,1.18159,-0.46394,27.4895,1.18224,-0.35614,27.418,1.18116,-0.42405,27.2752,1.23255,-0.496993,27.3239,1.24387,-0.479871,27.2378,1.2328,-0.545868,27.2508,1.233,-0.583061,27.3067,1.23289,-0.569921,27.3726,1.23255,-0.448244,27.3968,1.23255,-0.5141,27.41,1.23281,-0.410926,27.341,1.23281],\"skinIndices\":[16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0],\"uvs\":[[0.499136,0.496851,0.952029,0.787865,1.02339,0.382878,0.382371,-0.027657,0.044732,0.20876,-0.025932,0.614899,0.213475,0.952104,0.78819,0.044575,0.6236,1.02396,1.05222,0.597093,0.9407,0.187158,0.77812,0.440279,0.556005,0.781129,0.589976,0.63683,0.466594,0.663091,0.599918,-0.059323,0.193392,0.051587,0.437602,0.217265,0.255978,0.342531,-0.05644,0.389379,0.215473,0.560254,0.052629,0.799852,0.339844,0.742056,0.390409,1.0464,0.796345,0.939319,0.737821,0.657724,0.335028,0.470115,0.65863,0.530589,0.403763,0.363804,0.632789,0.406555,0.495545,0.498705,1.02051,0.388155,0.946515,0.792657,0.043039,0.207661,0.382203,-0.026516,0.206923,0.952074,-0.030273,0.613322,0.787531,0.048333,0.616561,1.02661,0.527135,0.337685,0.49683,0.500355,0.360851,0.594154,0.65389,0.257924]]};\nvar hairs = {\"_id\":\"hairs\",\"materials\":[{\"DbgColor\":15658734,\"DbgName\":\"HM_HairsMaterial\",\"transparent\":true,\"depthWrite\":true,\"wireframe\":false,\"DbgIndex\":0,\"colorEmissive\":[0,0,0],\"depthTest\":true,\"opacity\":1,\"shading\":\"standard\",\"colorSpecular\":[0.5,0.5,0.5],\"visible\":true,\"colorDiffuse\":[1,1,1],\"blending\":\"NormalBlending\"}],\"vertices\":[-1.29314,27.366,-0.447744,-1.1746,27.0502,-0.567095,-1.18521,26.8305,-0.522531,-1.3049,27.6927,-0.426014,0,26.3573,-1.496,-1.09025,28.3051,-1.03773,-0.860598,28.1811,-1.3975,-0.96571,28.4663,-1.11077,-0.999857,28.6436,-0.851474,-1.13391,28.4355,-0.796084,-1.22728,27.829,-0.955254,-0.915174,27.4002,-1.49412,-1.16026,27.3108,-1.07327,-0.486779,28.4543,-1.51637,-0.503916,28.7436,-1.27896,-0.523929,28.9637,-0.95318,-0.388539,27.5038,-1.79281,-0.831778,28.9118,-0.552875,-0.333548,28.1927,-1.6823,-0.856836,26.3819,-1.18836,-1.03339,26.4085,-0.844404,-0.481217,26.3891,-1.44908,-0.874068,26.9318,-1.42732,-1.10776,26.9175,-1.02257,-0.345236,26.9431,-1.70718,-1.26241,28.0876,-0.652507,-0.953378,27.7981,-1.42797,0,27.5145,-1.85263,0,28.8305,-1.30304,0,28.5215,-1.5712,-1.26354,27.3221,-0.161734,0,29.1816,-0.555584,-0.432474,29.1233,-0.546029,-1.29089,27.3803,-0.361753,-1.13648,28.5285,-0.532013,-1.26866,28.1323,-0.489675,-1.18323,27.0603,-0.032252,0,28.6701,1.249,-0.341458,28.9216,0.745163,-0.715868,28.9806,-0.075465,-0.332201,29.1339,-0.026989,-1.29014,27.4779,-0.272306,-1.26177,27.7195,-0.041063,-1.16498,27.6583,0.152907,-1.16092,28.0504,0.33536,-1.20506,28.1649,0.076841,-1.02388,28.3543,0.58476,-1.28923,27.7528,-0.24695,-1.04897,28.5444,0.25262,-1.23611,28.2253,-0.22712,-1.05068,28.6522,-0.174641,-0.350915,28.6451,1.17889,-0.743489,28.5593,0.933622,-0.725233,28.8182,0.546238,-1.23611,27.2826,0.06062,-1.26462,27.4294,-0.116567,1.29314,27.366,-0.447744,1.23737,27.0382,-0.580603,1.16367,26.8361,-0.51821,1.3049,27.6927,-0.426014,0,29.0576,-0.971195,1.09025,28.3051,-1.03773,0.860598,28.1811,-1.3975,0.96571,28.4663,-1.11077,0.999857,28.6436,-0.851474,1.13391,28.4355,-0.796084,1.22728,27.829,-0.955254,0.915174,27.4002,-1.49412,1.16026,27.3108,-1.07327,0.486779,28.4543,-1.51637,0.503916,28.7436,-1.27896,0.523929,28.9637,-0.95318,0.388539,27.5038,-1.79281,0.831778,28.9118,-0.552875,0.333548,28.1927,-1.6823,0.856836,26.3819,-1.18836,1.03339,26.4085,-0.844404,0.481217,26.3891,-1.44908,0.874067,26.9318,-1.42732,1.10776,26.9175,-1.02257,0.345236,26.9431,-1.70718,1.26241,28.0876,-0.652507,0.953378,27.7981,-1.42797,0,28.1945,-1.72419,0,26.9332,-1.74722,1.26354,27.3221,-0.161734,0.432474,29.1233,-0.546029,1.29089,27.3803,-0.361753,1.13648,28.5285,-0.532013,1.26866,28.1323,-0.489675,1.17732,27.0645,-0.032225,0,28.963,0.785211,0,29.1816,-0.054769,0.341458,28.9216,0.745163,0.715868,28.9806,-0.075465,0.332201,29.1339,-0.026989,1.29014,27.4779,-0.272306,1.26177,27.7195,-0.041063,1.18958,27.6589,0.157755,1.16092,28.0504,0.33536,1.20506,28.1649,0.076841,1.02387,28.3543,0.58476,1.28923,27.7528,-0.24695,1.04897,28.5444,0.25262,1.23611,28.2253,-0.22712,1.05068,28.6522,-0.174641,0.350915,28.6451,1.17889,0.743488,28.5593,0.933622,0.725233,28.8182,0.546238,1.23611,27.2826,0.06062,1.26462,27.4294,-0.116567,0.316235,29.6097,-0.18394,-0.113456,29.3404,-0.055851,0.39356,29.509,0.008728,-0.025102,29.4602,-0.5033,0.141414,29.5792,-0.390563,1.16779,28.9538,-0.940293,1.34415,27.9353,-1.15018,1.08546,27.9107,-1.65737,0.866206,28.9337,-1.44159,0.964963,29.3374,-0.67255,0.696105,29.3511,-1.11897,0.467309,29.633,-0.751297,0.657918,29.5789,-0.372047,1.12905,28.7775,-0.230096,1.38177,27.951,-0.446411,1.03024,29.1711,-0.054116,0.573954,29.5529,0.035206,0.127543,29.3999,-0.950806,-0.595631,28.8617,-1.6956,-0.075177,28.9264,-1.81621,0.035091,27.9482,-2.03599,-0.544367,27.9388,-1.94733,0.607909,27.9394,-1.94305,0.429961,28.9751,-1.76973,-0.500439,29.193,-1.29675,-0.03603,29.3942,-1.37698,0.25236,29.4088,-1.39133,0.723837,29.328,-1.06967,-0.44262,29.3996,-0.650615,0.134286,29.3958,-0.168354,-0.128095,29.4551,-0.52445,0.079039,29.4411,-0.569958,0.161271,29.514,-0.97467,0.566305,29.535,-0.611006,-0.43843,29.2984,-0.871129,-0.077852,29.4656,-0.999591,0.414885,29.5053,-0.340553,-1.12067,28.9292,-1.36781,-1.1977,28.6451,-0.569296,-0.996399,29.2481,-0.294488,-0.814755,29.3996,-1.02743,-1.35384,27.8428,-1.01545,-1.22012,27.9,-1.57568,-0.397309,29.46,-0.260397,-0.324281,29.5694,-0.543746,0.135643,29.3931,-0.154875,-0.008795,29.4367,-0.761449,-0.060259,29.3921,-0.199037,-0.170477,29.4415,0.324374,-0.047719,29.4856,0.547109,0.320099,29.5667,-0.107448,-0.35568,29.011,0.918081,-0.232475,28.7996,1.41826,-0.216143,29.2292,1.00562,-0.299274,29.2151,0.586197,-0.344763,28.6628,1.20608,0.957371,27.68,1.21615,1.04936,27.4178,1.10981,1.00723,27.7522,1.16882,0.861594,28.8321,1.2034,0.714374,28.2939,1.51926,0.846294,27.9697,1.34517,1.16701,28.3885,1.0055,0.183257,29.278,1.31825,0.000652,28.7583,1.56996,0.413944,28.6002,1.64504,0.562781,29.1047,1.33705,-0.315276,28.4679,1.20044,0.012118,28.3814,1.29501,0.457577,29.493,0.781627,0.586781,29.5713,0.008127,0.346713,28.4576,1.18699,0.763102,29.3369,0.825891,1.03267,29.1906,-0.089427,1.02327,29.082,0.693244,0.618648,28.3446,1.11237,0.800368,28.071,1.10903,1.24815,28.7572,0.558964,0.940057,27.8167,1.08267,1.36298,28.4538,0.446793,1.33797,28.0039,0.127698,1.33891,28.5071,0.2808,-0.729499,28.3936,0.993119,-0.742948,28.8228,1.26512,-0.971321,28.6372,1.23893,-0.87437,28.2415,0.858972,-0.971149,29.0777,0.988954,-0.792153,29.1858,1.01566,-0.925441,29.2713,0.403658,-0.653424,29.382,0.538467,-0.550022,29.1706,0.995717,-0.571163,28.7789,1.23399,-0.59318,28.4283,1.10527,-0.446154,29.3275,0.55654,-1.11868,29.2088,-0.035034,-1.30085,28.4927,-0.268716,-1.31719,28.4091,-0.06878,-1.06077,29.0471,0.357542,-1.29114,28.331,0.097593,-0.957028,29.3198,-0.529788,-1.25033,28.6959,-0.752221,-1.32967,28.5909,-0.497824,-0.523727,29.5444,0.192284,-0.924521,29.2245,0.468718,-0.649159,29.3722,0.545705,-0.377341,29.472,-0.331627,1.08955,27.8714,1.09068,1.16975,27.9875,1.01455,1.24736,28.0998,0.940884,-1.33054,28.1735,0.43925,-1.33733,28.1111,0.640101,-1.18016,28.766,0.896369,-1.2718,28.2661,0.263708,-1.08306,29.0901,0.282903,-1.30724,28.3487,0.078107,-1.24036,28.0883,0.980656,-1.16368,28.0935,1.10708,-1.14324,28.415,1.15319,-1.29547,28.0972,0.826268,-1.03731,27.9693,0.957373,-0.983499,27.8697,0.778075,-0.947535,28.0647,0.75712,1.28219,28.2064,0.792054,1.3117,28.2968,0.665904,1.30398,27.6791,0.629276,1.09462,27.4763,1.01522,1.16099,27.5441,0.922174,1.24575,27.6308,0.803359,1.35051,27.7979,0.482503,1.39737,27.8657,0.30913,1.39652,28.0067,-0.047048,1.3388,28.5887,0.09799,1.42501,28.08,-0.28997,-0.970081,27.4868,0.830545,-1.16121,27.6318,1.09034,-1.22832,27.605,0.861922,-1.29987,27.5772,0.660152,-1.32178,27.5846,0.502687,-1.35159,27.5947,0.255879,-1.37411,27.6849,-0.023699,1.00975,28.4934,0.54373,1.29151,28.0333,0.303383,1.28563,27.3606,-0.464219,1.29099,27.0472,-0.577504,1.31354,27.4336,-0.280334,1.3092,27.3275,0.098174,1.09224,27.5397,0.386596,1.15327,26.8485,-1.26456,0.968288,26.8946,-1.61108,0.520364,26.9385,-1.80003,0.035798,26.9391,-1.92584,0.013519,25.9483,-1.3275,0.580239,25.9717,-1.22236,0.847009,26.2918,-1.12334,0.958718,28.1741,0.84373,1.14407,27.1031,0.119303,-1.36127,27.8546,-0.36772,-1.28859,28.0581,0.179244,-1.01055,28.5152,0.577251,-1.31017,27.3537,-0.548498,-1.28687,27.3858,-0.26967,-1.26879,27.2721,-0.191779,-1.28353,27.3272,0.116118,-0.940136,26.898,-1.6415,-1.11152,26.8477,-1.25716,-1.21144,26.9048,-0.575408,-0.454045,26.938,-1.79574,-0.513194,25.9539,-1.23823,1.06757,26.4366,-0.861328,-0.994272,26.309,-0.828904,-1.07886,28.0173,0.602394,1.03662,28.6384,0.140734,-1.08923,28.6031,0.039117,1.01284,27.5148,0.684188,0.968041,27.7291,0.793804,-1.07229,27.5349,0.361537,1.12289,26.8073,0.092946,1.28681,27.2848,-0.178514,1.13094,26.8219,0.212046,-1.15553,26.8011,0.021831,-1.13724,27.1001,0.118377,-1.1878,26.7902,-0.081748,-1.37138,27.7929,-0.220941,-1.44154,27.8436,-0.474864,-1.41728,27.8937,-0.745796,-1.37937,28.0168,-1.03548,0.809095,29.3815,-0.040512,-0.472399,29.2929,0.566161,-0.216561,29.4315,-0.264395,-0.343961,29.492,0.259503,-0.282377,29.4627,0.006255,-0.454949,29.5104,-0.053872,-0.115723,29.4169,0.064355,-1.03943,29.2632,-0.27758,-0.828726,29.3724,0.075752,-0.75316,29.3843,-0.16801,-0.670875,29.395,-0.431969,1.15471,28.3908,0.032568,1.33661,27.9921,-0.07122,1.24857,27.3911,-1.20745,1.02695,27.4033,-1.63426,0.035445,27.4439,-1.98094,0.563574,27.4325,-1.87062,-0.498305,27.4285,-1.87002,-1.07829,27.3924,-1.60902,-1.23185,27.3419,-1.13713,0.551862,26.4299,-1.49614,-0.483868,26.4418,-1.51464,0.024266,26.4262,-1.61613,-0.853465,26.392,-1.27049,-1.05624,26.512,-0.997058,-1.17111,26.5898,-0.699762,1.11959,26.5993,-1.03238,1.18121,26.8082,-0.519715,0.892979,26.4732,-1.28603,-0.779224,26.1263,-1.0348,-1.17078,28.4106,-1.47256,-1.25812,28.2375,-0.795203,-0.018172,28.4207,-1.92983,-1.3135,27.5305,-0.070363,-1.30649,28.1453,-0.218844,-0.569361,28.3888,-1.8246,0.5209,28.4458,-1.85831,1.25389,28.4565,-1.04276,1.2576,28.3716,-0.327701,0.975512,28.4237,-1.54917,0.968308,27.9384,0.823087,1.20325,28.2908,0.449194],\"bones\":[{\"pos\":[-0.000027,18.2131,0.000197],\"parent\":-1,\"rotq\":[0,0,0,1],\"name\":\"Hips\"},{\"pos\":[0.000027,0.055037,0.000009],\"parent\":0,\"rotq\":[0,0,0,1],\"name\":\"LHipJoint\"},{\"pos\":[1.54938,-2.41556,0.04113],\"parent\":1,\"rotq\":[0,0,0,1],\"name\":\"LeftUpLeg\"},{\"pos\":[-0.019988,-7.21534,-0.208634],\"parent\":2,\"rotq\":[0,0,0,1],\"name\":\"LeftLeg\"},{\"pos\":[0.320011,-7.29466,-0.471354],\"parent\":3,\"rotq\":[0,0,0,1],\"name\":\"LeftFoot\"},{\"pos\":[0.198471,-0.54529,2.28466],\"parent\":4,\"rotq\":[0,0,0,1],\"name\":\"LeftToeBase\"},{\"pos\":[0.000027,0.055037,0.000009],\"parent\":0,\"rotq\":[0,0,0,1],\"name\":\"RHipJoint\"},{\"pos\":[-1.43938,-2.41556,0.041129],\"parent\":6,\"rotq\":[0,0,0,1],\"name\":\"RightUpLeg\"},{\"pos\":[-0.089993,-7.21534,-0.208641],\"parent\":7,\"rotq\":[0,0,0,1],\"name\":\"RightLeg\"},{\"pos\":[-0.319993,-7.29467,-0.471361],\"parent\":8,\"rotq\":[0,0,0,1],\"name\":\"RightFoot\"},{\"pos\":[-0.305359,-0.83898,2.28801],\"parent\":9,\"rotq\":[0,0,0,1],\"name\":\"RightToeBase\"},{\"pos\":[0.000027,0.055037,0.000009],\"parent\":0,\"rotq\":[0,0,0,1],\"name\":\"LowerBack\"},{\"pos\":[-0.04381,1.99522,-0.197985],\"parent\":11,\"rotq\":[0,0,0,1],\"name\":\"Spine\"},{\"pos\":[-0.01959,2.01295,-0.04372],\"parent\":12,\"rotq\":[0,0,0,1],\"name\":\"Spine1\"},{\"pos\":[0,0,0],\"parent\":13,\"rotq\":[0,0,0,1],\"name\":\"Neck\"},{\"pos\":[0.063054,2.1058,-0.51192],\"parent\":14,\"rotq\":[0,0,0,1],\"name\":\"Neck1\"},{\"pos\":[-0.023034,1.43701,0.497281],\"parent\":15,\"rotq\":[0,0,0,1],\"name\":\"Head\"},{\"pos\":[0,0,0],\"parent\":14,\"rotq\":[0,0,0,1],\"name\":\"LeftShoulder\"},{\"pos\":[2.59289,1.2264,-0.487197],\"parent\":17,\"rotq\":[0,0,0,1],\"name\":\"LeftArm\"},{\"pos\":[4.14553,-0.064466,0.257385],\"parent\":18,\"rotq\":[0,0,0,1],\"name\":\"LeftForeArm\"},{\"pos\":[3.69802,0.065802,1.73268],\"parent\":19,\"rotq\":[0,0,0,1],\"name\":\"LeftHand\"},{\"pos\":[-0.000254,0,-0.000044],\"parent\":20,\"rotq\":[0,0,0,1],\"name\":\"LeftFingerBase\"},{\"pos\":[0.559672,0,0.260979],\"parent\":21,\"rotq\":[0,0,0,1],\"name\":\"LeftHandIndex1\"},{\"pos\":[-0.000254,0,-0.000044],\"parent\":20,\"rotq\":[0,0,0,1],\"name\":\"LThumb\"},{\"pos\":[0,0,0],\"parent\":14,\"rotq\":[0,0,0,1],\"name\":\"RightShoulder\"},{\"pos\":[-2.46562,1.22638,-0.487065],\"parent\":24,\"rotq\":[0,0,0,1],\"name\":\"RightArm\"},{\"pos\":[-4.14558,-0.064367,0.259234],\"parent\":25,\"rotq\":[0,0,0,1],\"name\":\"RightForeArm\"},{\"pos\":[-3.69873,0.066645,1.72989],\"parent\":26,\"rotq\":[0,0,0,1],\"name\":\"RightHand\"},{\"pos\":[-0.00006,0,0.000158],\"parent\":27,\"rotq\":[0,0,0,1],\"name\":\"RightFingerBase\"},{\"pos\":[-0.529147,0,0.246746],\"parent\":28,\"rotq\":[0,0,0,1],\"name\":\"RightHandIndex1\"},{\"pos\":[-0.00006,0,0.000158],\"parent\":27,\"rotq\":[0,0,0,1],\"name\":\"RThumb\"}],\"metadata\":{\"materials\":1,\"bones\":31,\"version\":3,\"generator\":\"io_three\",\"vertices\":339,\"type\":\"Geometry\",\"faces\":533,\"uvs\":1},\"influencesPerVertex\":4,\"skinIndices\":[16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0],\"name\":\"hairs\",\"faces\":[10,33,30,41,0,0,1,2,10,41,30,55,0,2,1,3,10,32,17,40,0,4,5,6,10,17,39,40,0,5,7,6,10,33,41,3,0,0,2,8,10,3,41,47,0,8,2,9,10,49,35,47,0,10,11,9,10,47,35,3,0,9,11,8,10,34,50,17,0,12,13,5,10,17,50,39,0,5,13,7,10,35,25,3,0,11,14,8,10,15,8,17,0,15,16,5,10,17,8,34,0,5,16,12,10,25,35,9,0,14,11,17,10,9,35,34,0,17,11,12,10,8,9,34,0,16,17,12,10,0,33,3,0,18,0,8,10,12,1,0,0,19,20,18,10,7,8,14,0,21,16,22,10,14,8,15,0,22,16,15,10,8,7,9,0,16,21,17,10,9,7,5,0,17,21,23,10,9,5,25,0,17,23,14,10,25,5,10,0,14,23,24,10,16,11,26,0,25,26,27,10,5,7,6,0,23,21,28,10,14,13,7,0,22,29,21,10,7,13,6,0,21,29,28,10,12,23,1,0,19,30,20,10,1,23,2,0,20,30,31,10,22,19,23,0,32,33,30,10,23,19,20,0,30,33,34,10,26,10,6,0,27,24,28,10,6,10,5,0,28,24,23,10,23,12,22,0,30,19,32,10,22,12,11,0,32,19,26,10,32,15,17,0,4,15,5,10,20,2,23,0,34,31,30,10,10,26,12,0,24,27,19,10,12,26,11,0,19,27,26,10,16,24,11,0,25,35,26,10,11,24,22,0,26,35,32,10,16,26,18,0,25,27,36,10,18,26,6,0,36,27,28,10,24,21,22,0,35,37,32,10,22,21,19,0,32,37,33,10,18,6,13,0,36,28,29,10,12,0,10,0,19,18,24,10,10,0,3,0,24,18,8,10,3,25,10,0,8,14,24,10,13,14,29,0,29,22,38,10,29,14,28,0,38,22,39,10,42,55,43,0,40,3,41,10,43,55,54,0,41,3,42,10,49,45,50,0,10,43,13,10,50,45,48,0,13,43,44,10,49,47,45,0,10,9,43,10,45,47,42,0,43,9,40,10,47,41,42,0,9,2,40,10,42,41,55,0,40,2,3,10,42,43,45,0,40,41,43,10,45,43,44,0,43,41,45,10,35,49,34,0,11,10,12,10,34,49,50,0,12,10,13,10,38,40,53,0,46,6,47,10,53,40,39,0,47,6,7,10,52,53,46,0,48,47,49,10,46,53,48,0,49,47,44,10,51,38,52,0,50,46,48,10,52,38,53,0,48,46,47,10,46,48,44,0,49,44,45,10,44,48,45,0,45,44,43,10,50,48,39,0,13,44,7,10,39,48,53,0,7,44,47,10,55,30,54,0,3,1,42,10,54,30,36,0,42,1,51,10,110,85,96,0,52,53,54,10,96,85,87,0,54,53,55,10,86,95,73,0,56,57,58,10,73,95,94,0,58,57,59,10,102,96,59,0,60,54,61,10,59,96,87,0,61,54,55,10,59,89,102,0,61,62,60,10,102,89,104,0,60,62,63,10,94,105,73,0,59,64,58,10,73,105,88,0,58,64,65,10,89,59,81,0,62,61,66,10,71,73,64,0,67,58,68,10,73,88,64,0,58,65,68,10,88,89,65,0,65,62,69,10,65,89,81,0,69,62,66,10,64,88,65,0,68,65,69,10,56,59,87,0,70,61,55,10,68,56,57,0,71,70,72,10,71,64,70,0,67,68,73,10,70,64,63,0,73,68,74,10,61,63,65,0,75,74,69,10,65,63,64,0,69,74,68,10,66,61,81,0,76,75,66,10,81,61,65,0,66,75,69,10,72,82,67,0,77,78,79,10,61,62,63,0,75,80,74,10,70,63,69,0,73,74,81,10,69,63,62,0,81,74,80,10,58,79,57,0,82,83,72,10,57,79,68,0,72,83,71,10,76,75,79,0,84,85,83,10,79,75,78,0,83,85,86,10,82,62,66,0,78,80,76,10,66,62,61,0,76,80,75,10,67,68,78,0,79,71,86,10,78,68,79,0,86,71,83,10,86,73,71,0,56,58,67,10,79,58,76,0,83,82,84,10,67,82,68,0,79,78,71,10,68,82,66,0,71,78,76,10,78,80,67,0,86,87,79,10,67,80,72,0,79,87,77,10,72,74,82,0,77,88,78,10,82,74,62,0,78,88,80,10,75,77,78,0,85,89,86,10,78,77,80,0,86,89,87,10,74,69,62,0,88,81,80,10,68,66,56,0,71,76,70,10,56,66,59,0,70,76,61,10,59,66,81,0,61,76,66,10,97,98,110,0,90,91,52,10,110,98,109,0,52,91,92,10,103,100,105,0,93,94,64,10,105,100,104,0,64,94,63,10,97,102,100,0,90,60,94,10,100,102,104,0,94,60,63,10,93,95,91,0,95,57,96,10,91,95,92,0,96,57,97,10,110,96,97,0,52,54,90,10,97,96,102,0,90,54,60,10,99,98,100,0,98,91,94,10,100,98,97,0,94,91,90,10,105,104,88,0,64,63,65,10,88,104,89,0,65,63,62,10,94,95,108,0,59,57,99,10,108,95,93,0,99,57,95,10,103,108,101,0,93,99,100,10,101,108,107,0,100,99,101,10,108,93,107,0,99,95,101,10,107,93,106,0,101,95,102,10,101,99,103,0,100,98,93,10,103,99,100,0,93,98,94,10,108,103,94,0,99,93,59,10,94,103,105,0,59,93,64,10,110,109,85,0,52,92,53,10,85,109,90,0,53,92,103,10,60,28,15,0,104,39,15,10,15,28,14,0,15,39,22,10,83,18,29,0,105,36,38,10,29,18,13,0,38,36,29,10,84,4,24,0,106,107,35,10,24,4,21,0,35,107,37,10,83,27,18,0,105,108,36,10,18,27,16,0,36,108,25,10,84,24,27,0,106,35,108,10,27,24,16,0,108,35,25,10,15,32,60,0,15,4,104,10,60,32,31,0,104,4,109,10,32,40,31,0,4,6,109,10,31,40,92,0,109,6,97,10,38,91,40,0,46,96,6,10,40,91,92,0,6,96,97,10,37,91,51,0,110,96,50,10,51,91,38,0,50,96,46,10,70,28,71,0,73,39,67,10,71,28,60,0,67,39,104,10,28,70,29,0,39,73,38,10,29,70,69,0,38,73,81,10,69,74,29,0,81,88,38,10,29,74,83,0,38,88,105,10,84,80,4,0,106,87,107,10,4,80,77,0,107,87,89,10,72,27,74,0,77,108,88,10,74,27,83,0,88,108,105,10,72,80,27,0,77,87,108,10,27,80,84,0,108,87,106,10,31,86,60,0,109,56,104,10,60,86,71,0,104,56,67,10,86,31,95,0,56,109,57,10,95,31,92,0,57,109,97,10,93,91,106,0,95,96,102,10,106,91,37,0,102,96,110,10,111,112,113,0,111,112,113,10,114,112,115,0,114,115,116,10,334,336,119,0,117,118,119,10,120,121,122,0,120,121,122,10,335,334,116,0,123,117,124,10,257,252,285,0,125,126,127,10,115,111,123,0,128,111,129,10,111,113,127,0,111,113,130,10,114,115,122,0,114,116,131,10,115,112,111,0,128,112,111,10,130,329,332,0,132,133,134,10,333,134,119,0,135,136,119,10,135,136,130,0,137,138,132,10,119,134,137,0,119,136,139,10,139,140,141,0,140,141,142,10,141,140,142,0,142,141,143,10,137,134,130,0,139,136,132,10,143,144,138,0,144,122,121,10,134,333,329,0,136,135,133,10,135,145,146,0,137,145,146,10,136,146,143,0,138,146,144,10,140,147,142,0,141,147,143,10,144,143,142,0,122,144,143,10,146,141,142,0,146,142,143,10,139,141,146,0,140,142,146,10,149,150,151,0,148,149,150,10,152,328,327,0,151,152,153,10,150,154,155,0,149,154,155,10,155,154,156,0,155,154,156,10,155,156,157,0,155,156,157,10,148,151,135,0,158,150,137,10,155,157,135,0,155,157,137,10,153,327,332,0,159,153,134,10,121,120,116,0,121,120,124,10,120,126,124,0,120,160,161,10,161,303,160,0,162,163,164,10,162,163,164,0,165,166,167,10,167,168,169,0,168,169,170,10,171,172,173,0,171,172,173,10,175,176,177,0,174,175,176,10,174,164,163,0,177,167,166,10,163,178,179,0,166,178,179,10,160,180,181,0,164,180,181,10,176,175,179,0,175,174,179,10,208,214,305,0,182,183,184,10,187,172,171,0,185,172,171,10,184,185,188,0,186,187,188,10,167,189,168,0,189,190,191,10,190,191,192,0,192,193,194,10,193,194,195,0,195,196,197,10,197,195,194,0,198,197,196,10,199,197,198,0,199,200,201,10,202,166,162,0,202,203,204,10,166,202,203,0,203,202,205,10,165,204,201,0,206,207,208,10,220,222,223,0,209,210,211,10,211,212,304,0,212,213,214,10,205,206,207,0,215,216,217,10,305,214,215,0,184,183,218,10,306,302,216,0,219,220,221,10,298,165,159,0,222,223,224,10,301,303,158,0,225,226,227,10,124,188,242,0,228,188,229,10,176,171,170,0,175,171,230,10,171,176,182,0,171,175,231,10,189,167,172,0,190,189,172,10,229,228,222,0,232,233,210,10,230,231,232,0,234,235,236,10,228,232,196,0,233,236,237,10,222,228,195,0,210,233,197,10,222,197,199,0,210,200,199,10,194,193,203,0,196,195,205,10,194,202,201,0,196,202,238,10,200,198,201,0,239,201,208,10,160,159,165,0,164,240,241,10,180,160,164,0,180,164,167,10,177,183,180,0,176,242,180,10,183,177,170,0,242,176,230,10,173,188,185,0,173,188,187,10,219,235,233,0,243,244,245,10,206,205,304,0,216,215,214,10,236,217,169,0,246,247,170,10,237,218,217,0,248,249,247,10,238,219,218,0,250,243,249,10,239,234,233,0,251,252,245,10,240,190,234,0,253,192,252,10,241,242,192,0,254,229,194,10,244,231,230,0,255,235,234,10,230,227,245,0,234,256,257,10,245,227,226,0,258,256,259,10,246,226,229,0,260,259,232,10,229,221,247,0,232,261,262,10,248,221,220,0,263,261,209,10,249,220,223,0,264,209,211,10,225,250,223,0,265,266,211,10,128,122,121,0,267,131,268,10,278,326,320,0,269,270,271,10,260,261,312,0,272,273,274,10,270,267,152,0,275,276,151,10,117,125,253,0,277,278,279,10,118,311,313,0,280,281,282,10,322,276,275,0,283,284,285,10,311,259,260,0,281,286,272,10,317,325,264,0,287,288,289,10,323,279,264,0,290,291,289,10,258,259,311,0,292,286,281,10,267,271,330,0,276,293,294,10,331,283,149,0,295,296,148,10,259,325,317,0,286,288,287,10,329,131,132,0,133,297,298,10,314,277,274,0,299,300,301,10,324,279,323,0,302,291,290,10,312,261,277,0,274,273,300,10,131,312,314,0,297,274,299,10,262,319,317,0,303,304,287,10,280,322,321,0,305,283,306,10,273,330,272,0,307,294,308,10,266,256,257,0,309,310,125,10,281,269,268,0,311,312,313,10,124,282,308,0,161,314,315,10,256,287,288,0,310,316,317,10,256,266,289,0,310,309,318,10,273,290,291,0,307,319,320,10,287,256,289,0,316,310,318,10,333,133,131,0,135,321,297,10,293,209,207,0,322,323,217,10,207,206,294,0,217,216,324,10,295,206,212,0,325,216,213,10,296,212,211,0,326,213,212,10,320,321,275,0,271,306,285,10,268,269,283,0,313,312,296,10,338,251,265,0,327,328,329,10,181,180,183,0,181,180,242,10,215,298,300,0,218,222,330,10,302,301,299,0,220,225,331,10,213,300,301,0,332,330,225,10,305,213,302,0,184,332,220,10,300,159,303,0,330,224,226,10,304,306,307,0,214,219,333,10,205,305,306,0,215,184,219,10,172,169,217,0,172,170,247,10,126,120,123,0,160,120,129,10,254,258,310,0,334,292,335,10,254,324,323,0,334,302,290,10,310,311,118,0,335,281,280,10,277,261,319,0,300,273,304,10,132,314,315,0,298,299,336,10,258,323,325,0,292,290,288,10,131,133,313,0,297,321,282,10,315,274,275,0,336,301,285,10,316,275,276,0,337,285,284,10,260,317,319,0,272,287,304,10,153,315,316,0,159,336,337,10,318,319,262,0,338,304,303,10,326,280,321,0,270,305,306,10,318,320,274,0,338,271,301,10,328,149,148,0,152,148,158,10,328,152,267,0,152,151,276,10,273,272,292,0,307,308,339,10,330,268,331,0,294,313,295,10,286,268,330,0,340,313,294,10,133,333,336,0,321,135,118,10,117,118,336,0,277,280,118,10,309,125,335,0,341,278,123,10,125,117,334,0,278,277,117,10,252,309,308,0,126,341,315,10,282,251,338,0,314,328,327,10,252,338,337,0,126,327,342,10,327,148,129,0,153,158,343,10,309,252,257,0,341,126,125,10,297,183,185,0,344,242,187,10,173,233,234,0,173,245,252,10,163,162,166,0,166,165,345,10,116,334,119,0,124,117,119,10,123,120,122,0,129,120,122,10,124,335,116,0,161,123,124,10,284,257,285,0,346,125,127,10,122,115,123,0,122,128,129,10,123,111,127,0,129,111,130,10,128,114,122,0,267,114,131,10,129,130,332,0,343,132,134,10,336,333,119,0,118,135,119,10,129,135,130,0,343,137,132,10,138,119,137,0,121,119,139,10,136,137,130,0,138,139,132,10,137,143,138,0,139,144,121,10,130,134,329,0,132,136,133,10,136,135,146,0,138,137,146,10,137,136,143,0,139,138,144,10,147,144,142,0,147,122,143,10,143,146,142,0,144,146,143,10,145,139,146,0,145,140,146,10,148,149,151,0,158,148,150,10,153,152,327,0,159,151,153,10,151,150,155,0,150,149,155,10,129,148,135,0,343,158,137,10,151,155,135,0,150,155,137,10,132,153,332,0,298,159,134,10,119,121,116,0,119,121,124,10,116,120,124,0,124,120,161,10,303,161,158,0,163,162,347,10,303,159,160,0,163,240,164,10,165,162,164,0,241,165,167,10,170,171,173,0,230,171,173,10,174,175,177,0,177,174,176,10,175,174,163,0,174,177,166,10,175,163,179,0,174,166,179,10,161,160,181,0,162,164,181,10,182,176,179,0,231,175,179,10,205,208,305,0,215,182,184,10,186,187,171,0,348,185,171,10,124,184,188,0,228,186,188,10,196,193,195,0,237,195,197,10,198,197,194,0,349,198,196,10,200,199,198,0,239,199,201,10,201,202,162,0,238,202,204,10,178,166,203,0,350,203,205,10,162,165,201,0,351,206,208,10,224,225,223,0,352,265,211,10,222,220,221,0,210,209,261,10,223,222,224,0,211,210,352,10,210,211,304,0,353,212,214,10,207,208,205,0,217,182,215,10,208,207,209,0,182,217,323,10,213,305,215,0,332,184,218,10,307,306,216,0,333,219,221,10,300,298,159,0,330,222,224,10,299,301,158,0,331,225,227,10,188,192,242,0,188,194,229,10,242,243,124,0,229,354,228,10,192,188,190,0,194,188,192,10,177,176,170,0,176,175,230,10,186,171,182,0,348,171,231,10,187,189,172,0,185,190,172,10,228,229,226,0,233,232,259,10,229,222,221,0,232,210,261,10,226,227,228,0,259,256,233,10,232,227,230,0,236,256,234,10,227,232,228,0,256,236,233,10,195,228,196,0,197,233,237,10,197,222,195,0,198,210,197,10,224,222,199,0,352,210,199,10,202,194,203,0,202,196,205,10,198,194,201,0,349,196,238,10,204,200,201,0,207,239,208,10,164,160,165,0,167,164,241,10,174,180,164,0,177,180,167,10,174,177,180,0,177,176,180,10,185,183,170,0,187,242,230,10,170,173,185,0,230,173,187,10,212,206,304,0,213,216,214,10,119,128,121,0,355,267,268,10,318,278,320,0,338,269,271,10,313,260,312,0,282,272,274,10,316,270,152,0,337,275,151,10,310,117,253,0,335,277,279,10,133,118,313,0,321,280,282,10,321,322,275,0,306,283,285,10,313,311,260,0,282,281,272,10,263,317,264,0,356,287,289,10,325,323,264,0,288,290,289,10,310,258,311,0,335,292,281,10,271,267,270,0,293,276,275,10,271,272,330,0,293,308,294,10,328,331,149,0,152,295,148,10,260,259,317,0,272,286,287,10,332,329,132,0,134,133,298,10,315,314,274,0,336,299,301,10,314,312,277,0,299,274,300,10,132,131,314,0,298,297,299,10,263,262,317,0,356,303,287,10,286,281,268,0,340,311,313,10,335,124,308,0,123,161,315,10,329,333,131,0,133,135,297,10,274,320,275,0,301,271,285,10,331,268,283,0,295,313,296,10,337,338,265,0,342,327,329,10,297,181,183,0,344,181,242,10,213,215,300,0,332,218,330,10,216,302,299,0,221,220,331,10,302,213,301,0,220,332,225,10,306,305,302,0,219,184,220,10,301,300,303,0,225,330,226,10,210,304,307,0,353,214,333,10,304,205,306,0,214,215,219,10,218,173,172,0,249,173,172,10,172,217,218,0,172,247,249,10,218,219,173,0,249,243,173,10,172,167,169,0,172,168,170,10,127,126,123,0,130,160,129,10,255,253,125,0,357,279,278,10,309,255,125,0,341,357,278,10,253,254,310,0,279,334,335,10,258,254,323,0,292,334,290,10,117,310,118,0,277,335,280,10,318,277,319,0,338,300,304,10,153,132,315,0,159,298,336,10,259,258,325,0,286,292,288,10,312,131,313,0,274,297,282,10,316,315,275,0,337,336,285,10,270,316,276,0,275,337,284,10,261,260,319,0,273,272,304,10,152,153,316,0,151,159,337,10,278,318,262,0,269,338,303,10,320,326,321,0,271,270,306,10,277,318,274,0,300,338,301,10,327,328,148,0,153,152,158,10,331,328,267,0,295,152,276,10,290,273,292,0,319,307,339,10,267,330,331,0,276,294,295,10,273,291,286,0,307,320,340,10,286,330,273,0,340,294,307,10,118,133,336,0,280,321,118,10,334,117,336,0,117,277,118,10,308,309,335,0,315,341,123,10,335,125,334,0,123,278,117,10,338,252,308,0,327,126,315,10,308,282,338,0,315,314,327,10,285,252,337,0,127,126,342,10,332,327,129,0,134,153,343,10,256,288,309,0,310,317,341,10,309,257,256,0,341,125,310,10,184,297,185,0,186,344,187,10,234,188,173,0,252,188,173,10,188,234,190,0,188,252,192,10,173,219,233,0,173,243,245,10,178,163,166,0,178,166,345,10,288,255,309,0,317,357,341,10,296,295,212,0,326,325,213,10,295,294,206,0,325,324,216,10,294,293,207,0,324,322,217,10,249,223,250,0,264,211,266,10,248,220,249,0,263,209,264,10,248,247,221,0,263,262,261,10,247,246,229,0,262,260,232,10,246,245,226,0,260,258,259,10,169,168,236,0,170,169,246,10,237,217,236,0,248,247,246,10,237,238,218,0,248,250,249,10,235,219,238,0,244,243,250,10,235,239,233,0,244,251,245,10,239,240,234,0,251,253,252,10,240,191,190,0,253,193,192,10,192,191,241,0,194,193,254,10,242,241,243,0,229,254,354],\"uvs\":[[0.864468,0.469134,0.906479,0.5141,0.857629,0.511038,0.888833,0.544787,0.549072,0.632844,0.601704,0.619287,0.544756,0.715525,0.59732,0.698197,0.796375,0.513558,0.807862,0.561984,0.727081,0.621843,0.720823,0.562064,0.661602,0.593938,0.659396,0.663866,0.710949,0.557298,0.556777,0.571441,0.623023,0.558188,0.653983,0.546529,0.828431,0.409562,0.734511,0.249694,0.863439,0.249693,0.618833,0.510063,0.554314,0.517493,0.645448,0.501503,0.706074,0.41172,0.555245,0.249694,0.648473,0.249694,0.637779,0.335479,0.609751,0.410594,0.554738,0.43015,0.769649,0.132097,0.893745,0.132097,0.674765,0.132097,0.740649,0.012874,0.836509,0.012874,0.563051,0.132097,0.539884,0.382374,0.622818,0.012874,0.499334,0.431361,0.499583,0.522906,0.836295,0.609209,0.87222,0.661132,0.944793,0.571182,0.756159,0.685407,0.688018,0.745759,0.790991,0.747294,0.557102,0.861959,0.620724,0.816504,0.651843,0.917416,0.724194,0.826808,0.570778,0.977932,0.984056,0.509681,0.110551,0.550241,0.092636,0.519803,0.141456,0.516057,0.134246,0.474251,0.451069,0.633531,0.456115,0.716146,0.398321,0.620712,0.403401,0.699555,0.19167,0.566302,0.202728,0.517718,0.278703,0.565162,0.272974,0.625026,0.341026,0.666097,0.338203,0.596204,0.288285,0.56026,0.442822,0.572239,0.376463,0.559916,0.345403,0.548691,0.16483,0.414526,0.262999,0.249694,0.13402,0.249694,0.444808,0.51826,0.380228,0.511735,0.35354,0.503548,0.292434,0.414619,0.441996,0.249694,0.360205,0.337425,0.348836,0.249694,0.38874,0.412142,0.443923,0.430926,0.103174,0.132097,0.227036,0.132097,0.158912,0.012875,0.254407,0.012875,0.32164,0.132097,0.433126,0.132097,0.458354,0.382946,0.371958,0.012875,0.163656,0.613922,0.128191,0.666345,0.054828,0.577418,0.313129,0.748386,0.244459,0.688993,0.445064,0.862744,0.501123,0.871488,0.50042,0.712208,0.210176,0.751364,0.381045,0.818183,0.277671,0.829937,0.350819,0.919525,0.432413,0.978902,0.015025,0.516472,0.499822,0.576872,0.499104,0.37935,0.49807,0.132097,0.497284,0.012875,0.498603,0.249694,0.500084,0.636245,0.501665,0.994144,0.306463,0.635046,0.308325,0.639804,0.259191,0.635046,0.35173,0.635046,0.379225,0.639804,0.401883,0.635046,0.306372,0.350243,0.378058,0.35479,0.378058,0.425063,0.295629,0.484402,0.378058,0.495445,0.378058,0.564567,0.237219,0.348944,0.303442,0.420516,0.105486,0.2147,0.108542,0.341261,0.044221,0.304089,0.378089,0.635046,0.293676,0.564567,0.237219,0.571712,0.397589,0.62489,0.52242,0.425063,0.52242,0.35479,0.59365,0.35479,0.450495,0.35479,0.450495,0.425063,0.593766,0.495445,0.52242,0.495445,0.450495,0.495445,0.59365,0.635046,0.450495,0.639804,0.52242,0.635046,0.450495,0.635046,0.450495,0.564567,0.59365,0.564567,0.52242,0.564567,0.378058,0.635046,0.733667,0.425063,0.734783,0.495445,0.66313,0.495445,0.734783,0.285012,0.734225,0.35479,0.66313,0.35479,0.69406,0.564567,0.66313,0.564567,0.662724,0.639804,0.593766,0.564567,0.66313,0.425063,0.66313,0.285012,0.237219,0.466214,0.237219,0.409473,0.486719,0.48813,0.413676,0.582075,0.319678,0.524701,0.173691,0.563061,0.108726,0.466238,0.209805,0.515041,0.078767,0.083824,0.074763,0.013255,0.101624,0.089746,0.096436,0.251478,0.081833,0.16386,0.219376,0.178114,0.110673,0.415994,0.107131,0.338555,0.208253,0.360757,0.204813,0.426532,0.032453,0.506265,0.010868,0.418534,0.310211,0.41768,0.477417,0.418756,0.69663,0.31726,0.703557,0.369892,0.614047,0.377026,0.01913,0.174743,0.494253,0.280835,0.325612,0.285402,0.33408,0.204873,0.072653,0.082438,0.03158,0.104804,0.066892,0.010124,0.333775,0.134778,0.362559,0.016198,0.371271,0.133796,0.934922,0.212593,0.885357,0.300712,0.85926,0.251295,0.804945,0.335858,0.661563,0.365135,0.787294,0.338734,0.791815,0.38231,0.918576,0.311602,0.970491,0.316716,0.931945,0.40192,0.95501,0.244663,0.723909,0.501854,0.70383,0.468507,0.79644,0.432688,0.698056,0.121768,0.77599,0.259202,0.658018,0.137784,0.50398,0.160055,0.562931,0.153434,0.55828,0.309535,0.609954,0.308276,0.614679,0.152563,0.660647,0.15021,0.699394,0.438873,0.561002,0.377832,0.566807,0.448473,0.504979,0.447272,0.70339,0.479931,0.707449,0.520304,0.629263,0.527555,0.568394,0.488386,0.571006,0.527555,0.51172,0.524332,0.506312,0.174388,0.414373,0.137564,0.216284,0.287633,0.003493,0.328364,0.779361,0.117773,0.841348,0.195685,0.881293,0.097208,0.91943,0.073617,0.928769,0.114733,0.92633,0.159941,0.877938,0.396079,0.689771,0.426077,0.353496,0.570128,0.266627,0.588385,0.308466,0.354677,0.205273,0.117201,0.218796,0.000135,0.244306,0.121009,0.103275,0.012175,0.138484,0.099508,0.134826,0.011963,0.173258,0.10862,0.175136,0.012231,0.26386,0.007443,0.277395,0.125235,0.308463,0.002854,0.402558,0.002414,0.904249,0.004182,0.842457,0.127175,0.836473,0.029663,0.853447,0.031934,0.812555,0.121304,0.805287,0.018733,0.7405,0.114675,0.761779,0.006685,0.728603,0.003375,0.676658,0.002708,0.616276,0.148102,0.616411,0.007493,0.351691,0.635027,0.397589,0.495445,0.59333,0.003447,0.666627,0.003447,0.665942,0.074508,0.450495,0.145569,0.52242,0.145569,0.52242,0.2147,0.806477,0.2147,0.807108,0.285012,0.309301,0.287611,0.237219,0.28836,0.237219,0.182734,0.378058,0.285012,0.378058,0.2147,0.450495,0.2147,0.809034,0.074508,0.807931,0.145022,0.734993,0.145569,0.378058,0.145569,0.450495,0.074508,0.378058,0.074508,0.378058,0.003447,0.308325,0.074508,0.308325,0.003447,0.308325,0.133227,0.827226,0.2147,0.880623,0.285012,0.810067,0.35479,0.806708,0.425063,0.52242,0.285012,0.59365,0.285012,0.59365,0.2147,0.59365,0.145569,0.66313,0.145569,0.251171,0.074508,0.52242,0.003447,0.52242,0.074508,0.734727,0.003447,0.73483,0.074508,0.915927,0.28588,0.878798,0.2147,0.107532,0.143296,0.149611,0.185312,0.949696,0.425063,0.877178,0.425063,0.879751,0.35479,0.164608,0.425063,0.165063,0.35479,0.165003,0.142288,0.193318,0.170785,0.125824,0.143119,0.951746,0.2147,0.947464,0.285012,0.450495,0.285012,0.677679,0.017404,0.699711,0.148628,0.62193,0.00665,0.564758,0.001695,0.497403,0.002692,0.106407,0.35479,0.106701,0.425063,0.044852,0.425063,0.623278,0.487608,0.507916,0.486334,0.617145,0.449169,0.50248,0.378219,0.237219,0.145569,0.314603,0.216052,0.66313,0.2147,0.734889,0.2147,0.593489,0.074508,0.950406,0.141108,0.947464,0.35479,0.16638,0.306216,0.044897,0.35479,0.59365,0.425063,0.488941,0.350376,0.078873,0.513918,0.042653,0.2147,0.478403,0.591459,0.000135,0.253673,0.832465,0.371335,0.998931,0.287466,0.804336,0.486816,0.640805,0.313258,0.501853,0.311581,0.463057,0.000135,0.397589,0.425063,0.450495,0.003447,0.197071,0.186768]],\"skinWeights\":[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0]};\nvar underwears = {\"_id\":\"underwears\",\"materials\":[{\"DbgColor\":15658734,\"DbgName\":\"HM_UnderwearsMaterial\",\"transparent\":false,\"depthWrite\":true,\"wireframe\":false,\"DbgIndex\":0,\"colorEmissive\":[0,0,0],\"depthTest\":true,\"opacity\":1,\"shading\":\"standard\",\"colorSpecular\":[0.5,0.5,0.5],\"visible\":true,\"colorDiffuse\":[1,1,1],\"blending\":\"NormalBlending\"}],\"vertices\":[0,14.2177,0.695983,0,14.5817,1.28536,0,14.1675,-0.210064,0,14.3071,0.90993,-0.192441,14.7898,1.42476,-0.06797,14.2267,-0.132157,-0.140353,14.4018,1.0555,-0.140775,14.2245,0.54464,-0.160821,14.3152,0.88477,-0.316969,14.3187,0.80425,-0.164152,14.587,1.27651,-0.369546,14.4113,0.975388,-0.46224,14.5503,1.13668,-0.768775,14.9114,1.34919,0,14.7739,1.43428,-0.192449,14.239,0.276333,-0.349926,19.9913,1.81598,-1.07521,21.1698,1.69405,-0.976876,20.5268,1.76348,-0.234909,21.1659,1.7503,-0.701861,19.9663,1.77057,-1.02034,21.0567,1.6898,-1.55536,20.9837,1.46283,-1.39638,20.4247,1.58905,-0.896615,19.6946,1.68258,-1.14762,17.8814,1.63668,-1.03221,20.7691,1.72221,-1.69725,20.4312,1.36939,-1.0441,18.8828,1.56583,-1.26779,18.3824,1.50552,-0.341332,20.1657,1.82555,-0.98044,20.0106,1.71787,-1.17426,20.1029,1.69171,-0.758083,20.0849,1.7698,0,21.1252,1.7496,0,21.7496,1.6382,0,22.0688,1.57462,-1.65463,21.7697,1.65853,-1.87081,21.834,1.48436,-2.35533,22.0146,1.10439,-2.27452,22.4149,1.13248,-1.77163,22.5546,1.29416,-1.21273,22.4531,1.49985,-1.8169,21.9368,1.50077,-1.68762,21.9981,1.55405,-1.51936,21.9932,1.62281,-0.249023,20.9277,1.80798,-0.533421,20.7028,1.83586,-0.755707,21.2963,1.76001,-2.05122,22.1226,1.32527,-1.18383,22.01,1.70265,-1.4122,22.2226,1.57348,-1.7569,22.2634,1.44268,-2.08044,21.4502,1.14801,-2.02382,21.5788,1.31878,-2.26086,21.6666,1.04533,-2.11921,21.7119,1.2607,-1.88428,21.3399,1.33499,-1.88132,21.5064,1.43907,-2.16144,21.347,0.876028,-1.95588,21.1943,1.12234,-1.60367,21.2862,1.56112,-1.66323,21.6135,1.61952,-1.52515,21.1132,1.50899,-1.68625,21.4854,1.58357,-1.20647,21.3408,1.73462,-1.46286,21.5235,1.69791,-1.21901,21.5854,1.76471,-1.41848,21.7401,1.7084,-0.931581,21.4427,1.79445,-1.40262,21.8836,1.68791,-1.13471,21.6974,1.7727,-1.76356,21.6218,1.56202,-1.82784,21.6604,1.52174,-2.18601,21.9205,1.24377,-0.238703,21.4046,1.71245,-0.771161,21.596,1.8126,-0.43217,21.5147,1.77579,-0.7764,22.1008,1.69918,-0.180823,21.8714,1.68633,-0.375342,21.9479,1.72736,-0.626154,22.337,1.59464,-1.47027,20.6895,1.52794,-0.592745,21.2066,1.73306,-2.19367,21.2482,0.749218,-2.31204,21.4092,0.586999,-1.9584,21.0701,1.08219,-2.34896,21.5889,0.735403,-1.86961,21.7254,1.49335,-1.5322,21.6316,1.67691,-1.43841,21.6783,1.70669,-0.378458,20.5099,1.86978,-0.832169,20.2459,1.78324,0,19.6481,1.81902,0,20.8037,1.82379,-0.943873,19.1929,1.58426,-0.846135,18.1888,1.66597,-0.570662,20.929,1.77933,-0.574494,19.6536,1.80341,-0.627732,18.8453,1.7659,-0.648714,18.5589,1.79004,-0.583322,19.2794,1.74976,-0.314238,14.2574,0.689276,-1.01913,22.6544,1.41175,-0.235889,22.4208,1.50587,0,18.1328,1.86982,-0.235789,25.2542,0.451092,-0.726,25.6433,0.080309,-0.854783,25.9178,0.013117,-0.66618,11.9812,1.02309,-2.55067,11.9818,1.52384,-0.31172,11.9201,-0.552191,-0.529364,11.9213,-0.907065,-1.72835,11.9729,-1.33207,-0.234853,11.9195,0.464271,-2.01187,11.9905,1.75818,-2.52815,14.1305,1.35278,-1.03056,14.2519,1.47878,-2.78233,14.0616,0.826819,-2.00043,14.1327,1.70159,0,16.4795,-1.49493,-0.564258,16.6665,1.85613,-2.3311,17.0571,-0.035117,-1.45245,18.7231,-0.986805,-2.20721,17.2925,0.572231,-1.51947,19.1112,-1.08989,-0.722606,20.0721,-1.70902,-2.23825,17.3425,-0.069306,-1.13251,17.1433,-1.30074,-1.33377,17.4723,-1.08257,-0.504019,17.2733,-1.30323,-0.336685,16.54,-1.54832,-0.691815,17.1341,-1.34049,-0.043479,15.6018,-1.50957,-1.70196,15.7207,-1.71398,-1.86554,15.0216,-1.687,-2.30839,16.4013,-0.659135,-2.1652,16.7325,-0.812399,-1.86836,16.322,-1.3659,-2.42546,14.5166,-0.9568,-2.12835,15.7303,-1.17568,-2.24502,15.0986,-1.15094,-2.50487,15.2171,-0.498204,-2.6158,15.7199,0.025088,-2.4398,16.6453,-0.000665,-2.66969,14.8738,0.708059,-1.93191,16.2882,1.29027,-2.32309,16.5864,0.6027,-2.24534,17.0232,0.590901,-1.98439,17.414,1.13369,-2.01826,16.8575,1.14545,-2.62348,14.5051,-0.511925,-2.1127,14.342,-1.40405,-2.32149,13.823,-1.08118,-0.632145,13.6071,-1.0175,-0.037772,14.6229,-1.30637,-0.447781,16.1504,1.76647,-1.45988,16.509,1.55121,-1.15682,15.9793,1.57581,-1.78083,16.6762,1.35989,-1.5707,16.8585,1.46339,-1.77959,16.1868,1.39438,-1.64174,16.4033,1.46245,-1.2705,15.9391,1.54394,-0.185989,13.9601,-0.041164,-0.324559,13.8032,-0.59526,-0.278113,14.026,-1.13553,-0.20673,15.3951,1.66637,-1.0768,15.6419,1.5199,-1.45102,15.5672,1.52329,-1.65912,15.5547,1.50064,-1.59701,14.8697,1.59045,-1.21241,14.9692,1.50069,-0.652163,14.9082,1.34207,-2.12999,16.442,1.08721,-2.88309,13.9144,0.202347,-0.540897,14.4901,1.13457,-2.7843,14.6496,0.153659,-2.57761,15.596,0.753713,-1.11519,13.5469,-1.33198,-0.570426,16.5432,-1.61525,-0.219603,15.6673,-1.72402,-0.614585,14.0137,-1.51244,-0.306102,14.6746,-1.66159,-1.58805,13.5933,-1.36505,-1.01126,16.537,-1.66426,-0.656682,15.6647,-1.9148,-1.1642,14.0696,-1.7231,-1.89036,18.6678,-0.529703,-2.59263,13.951,-0.761952,-1.85142,19.3671,-1.02755,-1.47823,20.0188,-1.59268,-2.04494,20.0191,-1.18033,-2.06766,19.2579,-0.619449,-2.24036,19.7964,0.47459,-2.344,20.3585,0.323225,-1.81469,19.5816,1.21076,-1.21166,19.0813,1.52682,-2.15212,18.507,0.367148,-1.04194,19.3854,1.5808,-1.03246,16.6107,1.71875,-2.31502,19.7719,-0.064848,-2.131,18.6006,0.018414,-2.19599,19.2154,-0.081834,-2.18253,19.173,0.175475,-1.39995,18.0082,-0.960647,-1.91542,17.9221,-0.619251,-2.20074,17.7669,0.702101,-2.18908,17.8487,-0.080016,-0.620888,17.9376,1.85568,-1.7819,17.7358,1.37103,-1.95165,18.5293,0.901528,-1.24788,17.4354,1.66335,-0.603274,17.4604,1.90159,-1.68642,18.5391,1.21321,-2.41403,20.2784,-0.099535,-0.647331,18.5957,-1.25837,-0.584735,19.5873,-1.55142,-0.565647,19.1902,-1.4265,-0.58361,17.9139,-1.17976,-2.06979,18.1706,0.876275,-1.83272,18.1501,1.19119,-0.877899,15.548,1.52915,-1.98501,13.6662,-1.25731,-1.47575,16.4701,-1.58222,-1.23033,15.7016,-1.93236,-1.65912,14.205,-1.6723,-1.37082,14.8749,-1.93154,-0.787836,14.7419,-1.90955,-1.91217,17.3685,-0.762708,-1.83655,17.0005,-1.0531,-1.53264,17.0717,-1.21345,-2.08852,19.3091,0.743663,-1.46872,19.3184,1.44921,-1.83037,18.8839,1.07497,-1.5997,20.057,1.45687,-1.14949,19.6932,1.64704,-2.0194,18.8316,0.732513,-2.38979,14.9384,1.29317,-2.18535,15.5823,1.29897,-1.87842,15.5583,1.44667,-1.97867,14.9244,1.58932,-1.48312,14.1007,1.65729,-2.66437,22.1693,0.758455,-1.31205,22.4086,-2.28332,-2.32627,23.015,0.832567,-2.03189,24.174,-0.09335,-1.26471,23.0067,-2.28523,-1.02139,24.0746,-2.05081,-1.20286,23.5675,-2.17276,-2.59543,22.3668,0.896581,-2.39529,22.7768,0.947815,-2.77331,22.6871,0.699636,-2.7744,22.2985,0.623023,-2.56436,21.832,0.307393,-2.51804,21.2939,-1.49707,-2.76238,21.3079,-0.867835,-2.67372,21.7712,-0.205406,-1.72837,23.987,-1.94773,-2.49947,23.298,0.561939,-1.60339,24.7136,-1.14091,-2.44305,21.3441,0.201535,-1.2498,21.8352,-2.22822,-2.17268,23.8596,0.18543,-2.18392,24.3445,-1.63512,-2.1024,24.5894,-1.05105,-2.36968,22.916,-2.14138,-2.12626,21.7043,-2.03703,-0.945974,25.9603,-0.339045,0,22.5013,-2.17319,0,24.8098,0.393898,0,24.9259,-1.52769,0,23.4415,-2.08805,-1.72777,22.8049,1.15784,-0.446038,23.0639,1.15358,-0.784809,24.0833,0.299066,-0.950512,25.0769,-0.670448,-2.26469,19.8658,-0.697203,-1.16864,21.2247,-2.08802,-1.04239,20.6571,-1.93273,-0.454611,23.3529,0.933176,-1.37473,23.6258,0.639496,-1.25185,23.9922,0.329902,-1.74881,23.5883,0.55041,-1.17921,24.1289,0.138635,-0.794908,24.3474,0.039289,-1.23621,24.6306,-0.699151,-1.58149,24.5865,-0.739349,-1.04687,24.2535,-0.041007,-0.26702,24.319,-1.85,-0.72293,25.2665,-1.26541,-1.04477,24.8177,-0.730906,-0.581486,24.6127,0.158651,-0.547983,26.0631,-1.26359,-0.859925,25.9193,-0.819391,-0.855844,25.5042,-0.216771,-0.847618,25.7646,-0.84972,-0.922749,25.9259,-0.618895,-0.784251,25.1928,-0.112621,-0.829926,22.8674,1.29181,-1.54203,23.0001,1.07277,-0.317405,23.7662,0.601958,-0.583987,25.2948,0.087635,-0.329029,23.896,0.48691,-0.410726,24.1312,0.335669,-0.926158,25.811,-0.302244,-0.626832,25.7987,-1.20363,-1.99332,23.2134,0.797172,-1.47114,23.2271,0.926336,-0.825779,23.3372,0.943211,-0.842845,23.1046,1.11736,-0.417683,22.7446,1.35976,-0.448778,23.5917,0.767396,-0.847446,23.9802,0.468012,-0.906364,23.6657,0.716253,-0.764246,24.2134,0.126778,-0.488602,24.4161,0.244316,-0.378666,24.9445,0.22873,-0.205772,24.4181,0.28375,-0.098726,24.8307,0.381586,-0.887873,25.4493,-0.790704,-0.569397,25.4792,-1.28816,-1.64813,20.3721,-1.66314,-1.03445,24.5645,-1.75701,-1.1976,24.8539,-1.23887,-1.01093,24.9804,-1.1824,-0.833799,24.9388,-1.4822,-0.996292,24.7886,-1.58583,-1.40566,24.5437,-1.71529,-0.401056,25.1113,-1.44767,-2.35112,20.8639,0.337843,-2.24282,20.4563,0.605161,-2.13211,20.4666,0.808556,-1.98508,20.3058,1.03283,-2.07866,20.0311,0.87275,-2.51743,20.8712,-0.11427,-2.33394,20.8766,-1.4282,-1.95124,21.0499,-1.8263,-2.40338,20.324,-0.806632,-2.16257,20.4582,-1.32889,-1.81717,20.7065,-1.74354,-0.265804,24.589,-1.70729,-2.58753,20.8261,-0.847288,-3.02017,22.0388,-0.87519,-2.02484,24.5256,-0.71556,-2.89403,22.827,0.542921,-0.170146,11.9071,-0.194141,-2.23597,12.0084,-1.02245,-2.52014,12.0195,-0.761417,-1.99117,24.4264,-0.484106,-2.77003,22.1368,-1.75204,-2.22503,24.0033,-1.90522,-2.85823,22.366,-0.151255,0,22.6854,1.32528,0,25.6415,-1.36206,0,14.6089,-1.26174,0,14.1854,-0.671979,0,19.3179,-1.37401,0,16.8594,-1.44124,0,17.4649,1.94302,0,24.1954,-1.85435,0,26.0512,-1.35241,0,24.3395,0.300654,0,21.2632,-2.00839,0,16.1755,1.8054,0,15.3942,1.6777,0,20.642,-1.86279,0,23.0071,-2.14261,-0.158164,11.9154,0.154508,-3.01051,21.9907,-1.13969,-2.31747,23.2908,-2.12467,-2.96729,12.0237,0.152787,-0.81458,11.9261,-1.19772,-1.2276,11.9361,-1.35119,-2.85297,12.0321,-0.33345,-2.94765,12.0106,0.950446,-1.10697,12.0037,1.43791,0,25.2022,0.544408,-0.430727,25.3779,0.316473,0.192441,14.7898,1.42476,0.067969,14.2267,-0.132157,0.140353,14.4018,1.0555,0.140775,14.2245,0.54464,0.160821,14.3152,0.88477,0.316969,14.3187,0.80425,0.164152,14.587,1.27651,0.369546,14.4113,0.975388,0.46224,14.5503,1.13668,0.768775,14.9114,1.34919,0,14.4059,1.07483,0.192449,14.239,0.276333,0,18.83,1.83104,0.349926,19.9913,1.81598,1.07521,21.1698,1.69405,0.976876,20.5268,1.76348,0.234909,21.1659,1.7503,0.701861,19.9663,1.77057,1.02034,21.0567,1.6898,1.55536,20.9837,1.46283,1.39638,20.4247,1.58905,0.896615,19.6946,1.68258,1.14762,17.8814,1.63668,1.03221,20.7691,1.72221,1.69725,20.4312,1.36939,1.0441,18.8828,1.56583,1.26779,18.3824,1.50552,0.341331,20.1657,1.82555,0.98044,20.0106,1.71787,1.17426,20.1029,1.69171,0.758083,20.0849,1.7698,0,21.368,1.69613,1.65463,21.7697,1.65853,1.87081,21.834,1.48436,2.35533,22.0146,1.10439,2.27451,22.4149,1.13248,1.77163,22.5546,1.29416,1.21273,22.4531,1.49985,1.8169,21.9368,1.50077,1.68762,21.9981,1.55405,1.51936,21.9932,1.62281,0.249023,20.9277,1.80798,0.533421,20.7028,1.83586,0.755707,21.2963,1.76001,2.05122,22.1226,1.32526,1.18383,22.01,1.70265,1.4122,22.2226,1.57348,1.7569,22.2634,1.44268,2.08044,21.4502,1.14801,2.02382,21.5788,1.31878,2.26086,21.6666,1.04533,2.11921,21.7119,1.2607,1.88428,21.3399,1.33499,1.88132,21.5064,1.43907,2.16144,21.347,0.876028,1.95588,21.1943,1.12234,1.60367,21.2862,1.56112,1.66323,21.6135,1.61952,1.52515,21.1132,1.50899,1.68625,21.4854,1.58357,1.20647,21.3408,1.73462,1.46286,21.5235,1.69791,1.21901,21.5854,1.76471,1.41848,21.7401,1.7084,0.931581,21.4427,1.79445,1.40262,21.8836,1.68791,1.13471,21.6974,1.7727,1.76356,21.6218,1.56202,1.82784,21.6604,1.52174,2.18601,21.9205,1.24377,0.238703,21.4046,1.71245,0.77116,21.596,1.8126,0.43217,21.5147,1.77579,0.7764,22.1008,1.69918,0.180823,21.8714,1.68633,0.375342,21.9479,1.72736,0.626154,22.337,1.59464,1.47027,20.6895,1.52794,0.592745,21.2066,1.73306,2.19367,21.2482,0.749218,2.31204,21.4092,0.586999,1.9584,21.0701,1.08219,2.34896,21.5889,0.735403,1.86961,21.7254,1.49335,1.5322,21.6316,1.67691,1.43841,21.6783,1.70669,0.378458,20.5099,1.86978,0.832169,20.2459,1.78324,0,19.988,1.8022,0,20.5095,1.85448,0,20.1942,1.81921,0.943873,19.1929,1.58426,0,19.1093,1.80028,0.846135,18.1888,1.66597,0.570661,20.929,1.77933,0.574494,19.6536,1.80341,0.627732,18.8453,1.7659,0.648714,18.5589,1.79004,0.583322,19.2794,1.74976,0.314238,14.2574,0.689276,1.01913,22.6544,1.41175,0.235889,22.4208,1.50587,0.235789,25.2542,0.451092,0.726,25.6433,0.080309,0.854783,25.9178,0.013117,0.666179,11.9812,1.02309,2.55067,11.9817,1.52384,0.31172,11.9201,-0.552191,0.529364,11.9213,-0.907065,1.72835,11.9729,-1.33207,0.234853,11.9195,0.464271,2.01187,11.9905,1.75818,2.52815,14.1305,1.35278,1.03056,14.2519,1.47878,2.78233,14.0616,0.826819,2.00043,14.1327,1.70159,0,19.6515,-1.48425,0,17.864,-1.18298,0.564258,16.6665,1.85613,2.3311,17.0571,-0.035117,1.45245,18.7231,-0.986805,2.20721,17.2925,0.572231,1.51947,19.1112,-1.08989,0.722606,20.0721,-1.70902,2.23825,17.3425,-0.069306,1.13251,17.1433,-1.30074,1.33377,17.4723,-1.08257,0.504019,17.2733,-1.30323,0.336685,16.54,-1.54832,0.691815,17.1341,-1.34049,0.043479,15.6018,-1.50957,1.70196,15.7207,-1.71398,1.86554,15.0216,-1.687,2.30839,16.4013,-0.659135,2.1652,16.7325,-0.812399,1.86836,16.322,-1.3659,2.42546,14.5166,-0.9568,2.12835,15.7303,-1.17568,2.24502,15.0986,-1.15094,2.50487,15.2171,-0.498204,2.6158,15.7199,0.025088,2.4398,16.6453,-0.000665,2.66969,14.8738,0.708059,1.93191,16.2882,1.29027,2.32309,16.5864,0.6027,2.24534,17.0232,0.590901,1.98439,17.414,1.13369,2.01826,16.8575,1.14545,2.62348,14.505,-0.511925,2.1127,14.342,-1.40405,2.32149,13.823,-1.08118,0.632144,13.6071,-1.0175,0.037772,14.6229,-1.30637,0.447781,16.1504,1.76647,1.45988,16.509,1.55121,1.15682,15.9793,1.57581,1.78083,16.6762,1.35989,1.5707,16.8585,1.46339,1.77959,16.1868,1.39438,1.64174,16.4033,1.46245,1.2705,15.9391,1.54394,0.185989,13.9601,-0.041164,0.324559,13.8032,-0.59526,0.278113,14.026,-1.13553,0.20673,15.3951,1.66637,1.0768,15.6419,1.5199,1.45102,15.5672,1.52329,1.65912,15.5547,1.50064,1.59701,14.8697,1.59045,1.21241,14.9692,1.50069,0.652163,14.9082,1.34207,2.12999,16.442,1.08721,2.88309,13.9144,0.202347,0.540897,14.4901,1.13457,2.7843,14.6496,0.153659,2.57761,15.596,0.753713,1.11519,13.5469,-1.33198,0.570426,16.5432,-1.61525,0.219603,15.6673,-1.72402,0.614585,14.0137,-1.51244,0.306102,14.6746,-1.66159,1.58805,13.5933,-1.36505,1.01126,16.537,-1.66426,0.656682,15.6647,-1.9148,1.1642,14.0696,-1.7231,1.89036,18.6678,-0.529703,2.59263,13.951,-0.761952,1.85142,19.3671,-1.02755,1.47823,20.0188,-1.59268,2.04494,20.0191,-1.18033,2.06766,19.2579,-0.619449,2.24036,19.7964,0.47459,2.344,20.3585,0.323225,1.81469,19.5816,1.21076,1.21166,19.0813,1.52682,2.15212,18.507,0.367148,1.04194,19.3854,1.5808,1.03246,16.6107,1.71875,2.31502,19.7719,-0.064848,2.131,18.6006,0.018414,2.19599,19.2154,-0.081834,2.18253,19.173,0.175475,1.39995,18.0082,-0.960647,1.91542,17.9221,-0.61925,2.20074,17.7669,0.702101,2.18908,17.8487,-0.080016,0.620887,17.9376,1.85568,1.7819,17.7358,1.37103,1.95165,18.5293,0.901529,1.24788,17.4354,1.66335,0.603274,17.4604,1.90159,1.68642,18.5391,1.21321,2.41403,20.2784,-0.099535,0.647331,18.5957,-1.25837,0.584735,19.5873,-1.55142,0.565647,19.1902,-1.4265,0.58361,17.9139,-1.17976,2.06979,18.1706,0.876275,1.83272,18.1501,1.19119,0.877899,15.548,1.52915,1.98501,13.6662,-1.25731,1.47575,16.4701,-1.58222,1.23033,15.7016,-1.93236,1.65912,14.205,-1.6723,1.37082,14.8748,-1.93154,0.787836,14.7419,-1.90955,1.91217,17.3685,-0.762708,1.83655,17.0005,-1.0531,1.53264,17.0717,-1.21345,2.08852,19.3091,0.743663,1.46872,19.3184,1.44921,1.83037,18.8839,1.07497,1.5997,20.057,1.45687,1.14949,19.6932,1.64704,2.0194,18.8316,0.732513,2.38979,14.9384,1.29317,2.18535,15.5823,1.29897,1.87842,15.5583,1.44667,1.97867,14.9244,1.58932,1.48312,14.1007,1.65729,2.66437,22.1693,0.758455,1.31205,22.4086,-2.28332,2.32627,23.015,0.832567,2.03189,24.174,-0.09335,1.26471,23.0067,-2.28523,1.02139,24.0746,-2.05081,1.20286,23.5675,-2.17276,2.59543,22.3668,0.896581,2.39529,22.7768,0.947815,2.77331,22.6871,0.699636,2.7744,22.2985,0.623023,2.56435,21.832,0.307393,2.51804,21.2939,-1.49707,2.76238,21.3079,-0.867834,2.67372,21.7712,-0.205406,1.72837,23.987,-1.94773,2.49947,23.298,0.561939,1.60339,24.7136,-1.14091,2.44305,21.3441,0.201535,1.2498,21.8352,-2.22822,2.17268,23.8596,0.185431,2.18392,24.3445,-1.63512,2.1024,24.5894,-1.05105,2.36968,22.916,-2.14138,2.12626,21.7043,-2.03703,0.945974,25.9603,-0.339045,0,23.0309,1.13268,0,23.7053,0.524091,1.72777,22.8049,1.15784,0.446037,23.0639,1.15358,0.784809,24.0833,0.299066,0.950512,25.0769,-0.670448,2.26469,19.8658,-0.697203,1.16864,21.2247,-2.08802,1.04239,20.6571,-1.93273,0.454611,23.3529,0.933176,1.37473,23.6258,0.639496,1.25185,23.9922,0.329902,1.74881,23.5883,0.55041,1.17921,24.1289,0.138635,0.794908,24.3474,0.039289,1.23621,24.6306,-0.699151,1.58149,24.5865,-0.739349,1.04687,24.2535,-0.041007,0.26702,24.319,-1.85,0.72293,25.2665,-1.26541,1.04477,24.8177,-0.730906,0.581486,24.6127,0.158651,0.547983,26.0631,-1.26359,0.859925,25.9193,-0.819391,0.855844,25.5042,-0.216771,0.847618,25.7646,-0.84972,0.922749,25.9259,-0.618895,0.784251,25.1928,-0.112621,0.829925,22.8674,1.29181,1.54203,23.0001,1.07277,0.317405,23.7662,0.601958,0.583987,25.2948,0.087635,0.329029,23.896,0.48691,0.410726,24.1312,0.335669,0.926158,25.811,-0.302244,0.626832,25.7987,-1.20363,1.99332,23.2134,0.797172,1.47113,23.2271,0.926336,0.825778,23.3372,0.943211,0.842844,23.1046,1.11736,0.417683,22.7446,1.35976,0.448778,23.5917,0.767396,0.847445,23.9802,0.468012,0.906364,23.6657,0.716253,0.764246,24.2134,0.126778,0.488602,24.4161,0.244316,0.378666,24.9445,0.22873,0.205772,24.4181,0.28375,0.098726,24.8307,0.381586,0.887873,25.4493,-0.790704,0.569397,25.4792,-1.28816,1.64813,20.3721,-1.66314,1.03445,24.5645,-1.75701,1.1976,24.8539,-1.23887,1.01093,24.9804,-1.1824,0.833799,24.9388,-1.4822,0.996292,24.7886,-1.58583,1.40566,24.5437,-1.71529,0.401056,25.1113,-1.44767,2.35112,20.8639,0.337843,2.24281,20.4563,0.605161,2.13211,20.4666,0.808556,1.98508,20.3058,1.03283,2.07866,20.0311,0.87275,2.51743,20.8712,-0.11427,2.33394,20.8766,-1.4282,1.95124,21.0499,-1.8263,2.40338,20.324,-0.806632,2.16257,20.4582,-1.32889,1.81717,20.7065,-1.74354,0.265804,24.589,-1.70729,2.58753,20.8261,-0.847288,3.02017,22.0388,-0.87519,2.02484,24.5256,-0.71556,2.89403,22.827,0.542921,0.170145,11.9071,-0.194141,2.23597,12.0084,-1.02245,2.52013,12.0195,-0.761417,1.99117,24.4264,-0.484106,2.77003,22.1368,-1.75204,2.22503,24.0033,-1.90522,2.85823,22.366,-0.151255,0,15.5962,-1.48934,0,16.6746,1.89643,0,18.6306,-1.21853,0,25.3647,-1.39741,0,21.8648,-2.09818,0,23.8155,-2.00112,0,23.3772,0.83819,0,24.0559,0.305475,0,20.101,-1.675,0,24.5837,-1.69585,0.158164,11.9154,0.154508,3.01051,21.9907,-1.13969,2.31747,23.2908,-2.12467,2.96729,12.0237,0.152787,0.81458,11.9261,-1.19772,1.2276,11.9361,-1.35119,2.85297,12.0321,-0.33345,2.94765,12.0106,0.950446,1.10697,12.0037,1.43791,0.430727,25.3779,0.316473,-1.71873,17.4329,1.41557,1.71756,17.4314,1.41467,0,17.2742,-1.32411,-0.53062,17.4874,-1.26197,-0.321479,17.4872,-1.25968,0,17.4883,-1.27287,0.530619,17.4874,-1.26197,0.321483,17.4872,-1.25968,0.53056,16.9815,-1.37649,-0.53056,16.9815,-1.37649,-0.516711,17.1344,-1.34342,0.51671,17.1344,-1.34342,0,17.1341,-1.35763],\"bones\":[{\"pos\":[-0.000027,18.2131,0.000197],\"parent\":-1,\"rotq\":[0,0,0,1],\"name\":\"Hips\"},{\"pos\":[0.000027,0.055037,0.000009],\"parent\":0,\"rotq\":[0,0,0,1],\"name\":\"LHipJoint\"},{\"pos\":[1.54938,-2.41556,0.04113],\"parent\":1,\"rotq\":[0,0,0,1],\"name\":\"LeftUpLeg\"},{\"pos\":[-0.019988,-7.21534,-0.208634],\"parent\":2,\"rotq\":[0,0,0,1],\"name\":\"LeftLeg\"},{\"pos\":[0.320011,-7.29466,-0.471354],\"parent\":3,\"rotq\":[0,0,0,1],\"name\":\"LeftFoot\"},{\"pos\":[0.198471,-0.54529,2.28466],\"parent\":4,\"rotq\":[0,0,0,1],\"name\":\"LeftToeBase\"},{\"pos\":[0.000027,0.055037,0.000009],\"parent\":0,\"rotq\":[0,0,0,1],\"name\":\"RHipJoint\"},{\"pos\":[-1.43938,-2.41556,0.041129],\"parent\":6,\"rotq\":[0,0,0,1],\"name\":\"RightUpLeg\"},{\"pos\":[-0.089993,-7.21534,-0.208641],\"parent\":7,\"rotq\":[0,0,0,1],\"name\":\"RightLeg\"},{\"pos\":[-0.319993,-7.29467,-0.471361],\"parent\":8,\"rotq\":[0,0,0,1],\"name\":\"RightFoot\"},{\"pos\":[-0.305359,-0.83898,2.28801],\"parent\":9,\"rotq\":[0,0,0,1],\"name\":\"RightToeBase\"},{\"pos\":[0.000027,0.055037,0.000009],\"parent\":0,\"rotq\":[0,0,0,1],\"name\":\"LowerBack\"},{\"pos\":[-0.04381,1.99522,-0.197985],\"parent\":11,\"rotq\":[0,0,0,1],\"name\":\"Spine\"},{\"pos\":[-0.01959,2.01295,-0.04372],\"parent\":12,\"rotq\":[0,0,0,1],\"name\":\"Spine1\"},{\"pos\":[0,0,0],\"parent\":13,\"rotq\":[0,0,0,1],\"name\":\"Neck\"},{\"pos\":[0.063054,2.1058,-0.51192],\"parent\":14,\"rotq\":[0,0,0,1],\"name\":\"Neck1\"},{\"pos\":[-0.023034,1.43701,0.497281],\"parent\":15,\"rotq\":[0,0,0,1],\"name\":\"Head\"},{\"pos\":[0,0,0],\"parent\":14,\"rotq\":[0,0,0,1],\"name\":\"LeftShoulder\"},{\"pos\":[2.59289,1.2264,-0.487197],\"parent\":17,\"rotq\":[0,0,0,1],\"name\":\"LeftArm\"},{\"pos\":[4.14553,-0.064466,0.257385],\"parent\":18,\"rotq\":[0,0,0,1],\"name\":\"LeftForeArm\"},{\"pos\":[3.69802,0.065802,1.73268],\"parent\":19,\"rotq\":[0,0,0,1],\"name\":\"LeftHand\"},{\"pos\":[-0.000254,0,-0.000044],\"parent\":20,\"rotq\":[0,0,0,1],\"name\":\"LeftFingerBase\"},{\"pos\":[0.559672,0,0.260979],\"parent\":21,\"rotq\":[0,0,0,1],\"name\":\"LeftHandIndex1\"},{\"pos\":[-0.000254,0,-0.000044],\"parent\":20,\"rotq\":[0,0,0,1],\"name\":\"LThumb\"},{\"pos\":[0,0,0],\"parent\":14,\"rotq\":[0,0,0,1],\"name\":\"RightShoulder\"},{\"pos\":[-2.46562,1.22638,-0.487065],\"parent\":24,\"rotq\":[0,0,0,1],\"name\":\"RightArm\"},{\"pos\":[-4.14558,-0.064367,0.259234],\"parent\":25,\"rotq\":[0,0,0,1],\"name\":\"RightForeArm\"},{\"pos\":[-3.69873,0.066645,1.72989],\"parent\":26,\"rotq\":[0,0,0,1],\"name\":\"RightHand\"},{\"pos\":[-0.00006,0,0.000158],\"parent\":27,\"rotq\":[0,0,0,1],\"name\":\"RightFingerBase\"},{\"pos\":[-0.529147,0,0.246746],\"parent\":28,\"rotq\":[0,0,0,1],\"name\":\"RightHandIndex1\"},{\"pos\":[-0.00006,0,0.000158],\"parent\":27,\"rotq\":[0,0,0,1],\"name\":\"RThumb\"}],\"metadata\":{\"materials\":1,\"bones\":31,\"version\":3,\"generator\":\"io_three\",\"vertices\":760,\"type\":\"Geometry\",\"faces\":1444,\"uvs\":1},\"influencesPerVertex\":4,\"skinIndices\":[7,2,6,1,7,2,6,1,7,2,6,0,7,2,6,1,7,2,6,1,7,2,6,0,7,2,6,1,7,2,6,0,7,2,6,1,7,2,6,0,7,2,6,1,7,2,6,1,7,2,6,1,7,6,2,1,7,2,6,1,7,2,6,0,11,12,6,24,12,24,11,17,12,11,24,6,12,11,24,17,11,12,6,24,12,24,11,17,12,24,11,6,12,11,24,6,11,12,6,24,6,11,1,7,12,11,24,6,12,11,24,6,11,6,12,1,6,11,12,1,11,12,6,24,11,12,6,24,11,12,6,24,11,12,6,24,12,11,17,24,12,17,24,11,12,17,24,13,24,12,11,25,24,12,11,25,24,12,25,11,24,12,25,11,24,12,25,13,24,12,13,17,24,12,11,25,24,12,11,25,24,12,11,17,12,11,24,17,12,11,24,17,12,24,11,17,24,12,25,11,24,12,11,17,24,12,11,13,24,12,25,11,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,12,24,11,25,12,24,11,17,24,12,11,25,12,24,11,6,24,12,11,25,12,24,11,17,12,24,11,17,12,24,11,17,24,12,11,17,12,24,11,17,24,12,11,17,12,24,11,17,24,12,11,25,24,12,11,25,24,12,25,11,12,24,11,17,12,24,11,17,12,24,11,17,12,24,17,11,12,24,17,11,12,24,17,11,24,12,17,13,12,11,24,6,12,11,24,17,24,12,11,25,24,12,11,25,12,24,11,25,24,12,25,11,24,12,11,25,24,12,11,17,12,24,11,17,12,11,24,17,11,12,24,6,11,12,6,1,12,11,17,24,11,6,12,1,6,11,1,12,12,11,24,17,11,12,6,1,11,6,12,1,11,6,1,12,11,6,12,1,7,2,6,0,24,12,13,17,12,24,17,13,6,11,1,12,15,16,0,0,15,16,0,0,16,15,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,6,0,0,7,2,6,0,7,6,0,0,7,6,0,0,6,1,7,2,6,1,7,11,6,7,11,0,11,6,12,24,6,7,11,0,11,6,12,24,12,11,24,6,6,11,7,0,6,7,11,1,6,11,7,1,6,1,11,7,6,7,1,2,6,1,7,11,7,2,6,1,7,6,2,0,7,6,0,0,6,7,0,0,6,7,11,0,6,7,0,0,7,6,0,0,7,6,0,0,7,6,0,0,7,6,0,0,7,6,0,0,6,7,11,0,7,6,0,0,6,7,0,0,6,7,0,0,6,7,11,0,6,11,7,0,6,7,11,0,7,6,0,0,7,6,0,0,7,0,0,0,7,2,0,0,7,2,6,1,6,7,1,2,6,7,1,11,6,7,1,2,6,7,11,1,6,7,11,1,6,7,0,0,6,7,1,11,6,7,1,2,7,2,6,0,7,2,6,0,7,2,6,0,6,7,2,1,7,6,1,2,7,6,1,2,7,6,0,0,7,6,2,0,7,6,2,1,7,6,2,1,6,7,0,0,7,0,0,0,7,2,6,1,7,6,0,0,7,6,0,0,7,2,0,0,6,7,1,2,7,6,2,1,7,2,6,0,7,2,6,1,7,0,0,0,6,7,1,2,7,6,2,1,7,6,2,0,11,6,12,24,7,0,0,0,11,12,6,24,12,11,24,6,12,11,24,6,11,12,6,24,11,12,6,24,12,11,24,6,11,12,6,24,11,6,12,24,6,11,12,24,11,6,12,24,6,7,1,11,11,12,6,24,11,6,12,24,11,6,12,24,11,6,12,24,6,11,12,7,6,11,7,12,6,11,7,12,6,11,7,12,6,11,1,12,6,11,7,1,6,11,12,24,6,11,1,7,6,1,11,7,6,11,12,0,12,11,24,6,11,6,12,1,11,12,6,24,11,12,6,1,6,11,1,12,6,11,12,7,6,11,12,7,6,7,1,2,7,0,0,0,6,7,1,2,7,6,2,1,7,6,2,0,7,6,2,0,7,6,2,0,6,11,7,0,6,7,11,0,6,7,11,1,11,6,12,24,11,6,12,24,11,6,12,24,11,12,24,6,11,12,6,24,11,6,12,24,7,6,0,0,7,6,0,0,7,6,0,0,7,6,0,0,7,6,2,0,24,25,12,11,24,12,14,25,24,25,12,13,24,25,13,0,24,14,25,12,14,24,15,25,24,14,25,15,24,25,12,11,24,25,12,13,24,25,12,0,24,25,12,11,24,12,25,11,24,12,25,11,24,12,25,11,24,25,12,11,24,25,14,15,24,25,12,13,24,25,14,15,24,12,11,25,24,12,14,25,24,25,13,0,25,24,14,15,25,24,14,15,24,25,12,14,24,12,25,11,16,15,0,0,14,12,17,24,15,13,16,0,15,14,16,0,14,17,15,24,24,12,25,13,24,13,17,12,13,24,15,25,15,14,16,24,12,11,24,6,12,24,11,14,12,24,11,17,13,24,17,12,24,13,25,12,24,13,25,15,24,25,13,0,24,13,25,15,13,24,15,14,24,14,15,13,24,25,14,15,13,24,15,14,14,15,24,17,15,14,16,24,15,14,24,13,13,15,24,16,16,15,14,0,16,15,14,0,15,16,13,14,15,16,14,0,16,15,0,0,15,13,16,14,24,13,12,17,24,13,12,25,13,24,17,15,15,16,13,0,13,24,17,15,13,24,15,17,16,15,0,0,15,16,14,0,24,25,13,12,24,13,25,12,24,13,17,12,24,13,12,17,24,12,17,13,13,24,17,12,13,24,15,25,24,13,17,25,13,24,15,14,13,15,24,0,15,13,16,0,13,15,24,0,15,13,16,0,15,16,14,24,15,16,14,24,12,24,11,6,14,15,24,25,14,15,24,25,15,14,24,16,15,14,24,16,14,15,24,25,24,14,25,15,15,14,16,24,12,24,11,25,12,11,24,6,12,11,24,6,12,11,24,6,11,12,24,6,12,24,11,25,24,12,11,25,24,12,11,25,12,24,11,6,12,24,11,25,12,24,11,25,15,14,24,0,12,24,11,25,24,25,12,11,24,25,14,15,24,25,12,0,7,0,0,0,7,0,0,0,7,0,0,0,24,25,14,13,24,25,12,0,24,25,14,0,24,25,12,0,17,24,12,13,15,16,14,0,7,2,6,1,7,2,6,0,11,12,6,1,6,1,7,2,6,1,11,7,14,15,17,24,16,15,14,0,13,15,17,0,12,17,24,14,6,1,7,2,6,7,1,2,12,11,17,24,14,17,24,12,7,0,0,0,24,25,12,11,24,25,14,12,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,15,16,0,0,15,16,0,0,2,7,6,1,2,7,6,0,2,7,6,1,2,7,6,1,2,7,6,1,2,7,6,1,2,7,6,1,2,7,6,1,2,7,6,1,2,1,7,6,7,2,6,1,2,7,6,1,11,6,1,12,11,12,1,17,12,17,11,24,12,11,17,1,12,11,17,24,11,12,1,17,12,17,11,24,12,17,11,1,12,11,17,1,11,12,1,17,1,11,6,2,12,11,17,1,12,11,17,1,11,1,12,6,1,11,6,12,11,12,17,1,11,12,1,17,11,12,17,1,11,12,17,1,12,11,17,24,17,12,11,18,17,12,11,18,17,12,18,11,17,12,18,11,17,12,18,13,17,12,13,24,17,12,11,18,17,12,11,18,17,12,11,18,12,11,17,24,12,11,17,24,12,17,11,24,17,12,18,11,17,12,11,24,17,12,11,13,17,12,18,11,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,12,17,11,1,17,12,11,18,12,17,11,24,17,12,11,24,12,17,11,24,17,12,11,24,12,17,11,24,17,12,11,24,12,17,11,24,17,12,11,18,17,12,11,18,17,12,18,11,12,17,11,24,12,17,11,24,12,17,11,24,17,12,24,11,12,17,24,11,12,17,24,11,17,12,24,13,12,11,17,1,12,17,11,24,17,12,11,18,17,12,11,18,12,17,11,18,17,12,18,11,17,12,11,18,17,12,11,18,17,12,11,24,12,11,17,24,11,12,17,1,11,12,6,1,12,11,17,24,11,12,17,6,11,1,12,6,11,6,12,1,1,11,6,12,12,11,17,24,11,12,1,6,11,1,6,12,11,1,6,12,11,12,1,6,2,7,6,1,17,12,13,24,17,12,24,13,15,16,0,0,15,16,0,0,16,15,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,1,0,0,2,7,1,6,2,0,0,0,2,1,0,0,11,12,6,1,6,1,11,0,1,6,2,7,1,2,11,0,11,1,12,17,1,2,11,0,11,1,12,17,12,11,17,1,1,2,11,0,1,2,6,11,1,11,6,2,1,6,11,2,1,6,2,7,1,6,2,11,2,7,6,1,2,1,7,6,2,1,7,0,1,2,0,0,1,2,11,0,1,2,6,0,2,1,0,0,2,1,0,0,2,1,0,0,2,1,0,0,2,1,0,0,1,2,0,0,2,1,0,0,1,2,6,0,1,2,0,0,1,2,11,0,1,11,2,6,1,2,11,6,2,1,0,0,2,1,0,0,2,0,0,0,2,7,0,0,2,7,6,1,1,6,2,7,1,2,6,11,1,2,6,7,1,2,6,11,1,2,6,11,1,2,6,0,1,2,6,0,1,2,6,7,2,7,6,0,2,7,6,0,2,7,6,0,1,2,6,7,1,2,6,7,2,1,6,7,2,1,6,7,2,1,7,6,2,1,7,6,2,7,1,6,1,2,0,0,2,0,0,0,2,7,6,1,2,1,0,0,2,1,0,0,2,7,0,0,1,2,6,7,2,7,1,6,2,7,6,1,2,7,6,1,2,0,0,0,1,2,6,7,2,1,7,6,2,7,1,0,11,1,12,17,2,0,0,0,11,12,1,17,12,11,17,1,12,11,17,1,11,1,12,17,11,12,1,17,12,11,17,1,11,12,1,17,11,1,12,6,1,11,12,17,11,1,12,6,1,6,2,11,11,12,1,17,1,11,12,17,11,1,12,17,11,1,12,17,1,11,6,12,1,11,12,2,1,11,2,12,1,11,2,12,1,6,11,12,1,11,6,2,1,11,12,17,1,6,11,2,1,6,11,2,1,11,12,6,12,11,17,1,11,1,6,12,11,12,1,17,11,12,1,6,1,11,6,0,1,11,12,2,1,11,12,6,1,2,6,7,2,0,0,0,1,2,6,7,2,1,7,6,2,1,7,0,2,1,7,6,2,7,1,6,1,11,2,0,1,2,11,6,1,2,6,11,11,1,12,17,11,1,12,17,11,1,12,17,11,12,17,1,11,12,1,17,11,1,12,17,2,1,0,0,2,1,0,0,2,1,6,0,2,1,0,0,2,1,7,0,17,18,12,11,17,12,14,18,17,18,12,13,17,18,13,0,17,14,18,12,17,14,15,18,17,14,18,15,17,18,12,11,17,18,12,0,17,18,12,0,17,18,12,11,17,12,18,11,17,12,18,11,17,12,18,11,17,18,12,11,17,18,14,15,17,18,12,0,17,18,14,15,17,12,11,18,17,12,14,18,17,18,13,0,18,17,14,15,18,17,14,15,17,18,12,14,17,12,18,11,16,15,0,0,13,17,24,12,13,17,24,0,17,12,18,13,17,13,24,12,13,17,15,18,15,14,16,17,12,11,17,1,17,12,11,14,12,17,11,14,17,13,24,12,17,13,18,12,17,13,18,15,17,18,13,0,17,13,18,15,13,17,15,14,17,14,15,18,17,18,14,15,17,13,15,14,14,15,17,24,15,14,16,17,15,14,17,13,13,15,17,16,16,15,14,0,16,15,14,0,15,16,13,14,15,16,14,0,16,15,0,0,15,16,13,14,17,13,12,24,17,12,13,18,13,17,24,15,15,16,13,0,13,17,15,24,13,17,15,0,16,15,0,0,15,16,14,0,17,18,13,12,17,13,18,12,17,13,12,24,17,13,12,24,17,12,13,24,13,17,24,12,17,13,15,18,17,13,18,24,13,17,15,14,13,15,17,16,15,13,16,17,13,15,17,16,15,13,16,0,15,16,14,17,15,16,14,17,12,17,11,1,14,15,17,18,14,15,17,18,15,14,17,16,15,14,17,16,14,15,17,18,17,14,18,15,15,14,16,17,12,17,11,18,12,11,17,1,12,11,17,1,12,11,17,1,11,12,17,1,12,17,11,18,17,12,11,18,17,12,11,18,12,17,11,1,12,17,11,18,12,17,11,18,15,14,17,0,17,12,11,18,17,18,12,11,17,18,14,15,17,18,12,0,2,0,0,0,2,0,0,0,2,0,0,0,17,18,14,15,17,18,12,0,17,18,14,0,17,18,12,0,7,2,6,1,6,1,7,2,11,6,1,12,15,16,14,0,12,14,17,24,14,15,17,24,13,17,24,12,13,17,15,24,12,11,17,24,15,14,17,24,2,0,0,0,17,18,12,11,17,18,14,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,15,16,0,0,6,11,7,1,1,11,2,6,6,1,11,7,6,11,1,7,6,1,11,7,6,1,11,7,1,6,11,2,1,6,11,2,1,6,2,11,6,1,7,11,6,1,7,11,1,6,2,11,6,1,11,7],\"name\":\"underwears\",\"faces\":[10,378,302,317,0,0,1,2,10,378,317,106,0,0,2,3,10,106,317,319,0,3,2,4,10,302,378,107,0,1,0,5,10,108,268,305,0,6,7,8,10,249,370,258,0,9,10,11,10,258,370,351,0,11,10,12,10,249,247,370,0,9,13,10,10,256,369,255,0,14,15,16,10,369,256,343,0,15,14,17,10,369,350,267,0,15,18,19,10,247,266,370,0,13,20,10,10,255,369,267,0,16,15,19,10,153,348,189,0,21,22,23,10,189,348,374,0,23,22,24,10,371,175,374,0,25,26,24,10,374,175,189,0,24,26,23,10,110,116,375,0,27,28,29,10,375,116,118,0,29,28,30,10,154,373,179,0,31,32,33,10,179,373,113,0,33,32,34,10,165,112,154,0,35,36,31,10,154,112,372,0,31,36,37,10,154,372,373,0,31,37,32,10,3,8,0,0,38,39,40,10,0,8,7,0,40,39,41,10,4,10,14,0,42,43,44,10,14,10,1,0,44,43,45,10,2,0,7,0,46,40,41,10,52,44,51,0,47,48,49,10,51,44,45,0,49,48,50,10,80,77,79,0,51,52,53,10,79,77,75,0,53,52,54,10,33,20,30,0,55,56,57,10,30,20,16,0,57,56,58,10,33,92,31,0,55,59,60,10,31,92,32,0,60,59,61,10,332,84,330,0,62,63,64,10,330,84,85,0,64,63,65,10,28,197,29,0,66,67,68,10,82,86,27,0,69,70,71,10,50,70,71,0,72,73,74,10,71,70,68,0,74,73,75,10,65,66,61,0,76,77,78,10,61,66,64,0,78,77,79,10,60,59,86,0,80,81,70,10,86,59,84,0,70,81,63,10,70,45,37,0,73,50,82,10,37,43,38,0,82,83,84,10,86,22,60,0,70,85,80,10,60,22,63,0,80,85,86,10,77,76,48,0,52,87,88,10,48,76,69,0,88,87,89,10,75,19,34,0,54,90,91,10,19,46,34,0,90,92,91,10,48,83,77,0,88,93,52,10,77,83,75,0,52,93,54,10,67,90,66,0,94,95,77,10,66,90,89,0,77,95,96,10,40,49,41,0,97,98,99,10,41,49,52,0,99,98,47,10,42,41,51,0,100,99,49,10,51,41,52,0,49,99,47,10,84,59,85,0,63,81,65,10,85,59,87,0,65,81,101,10,56,74,55,0,102,103,104,10,55,74,39,0,104,103,105,10,40,39,49,0,97,105,98,10,49,39,74,0,98,105,103,10,51,50,42,0,49,72,100,10,42,50,78,0,100,72,106,10,88,38,56,0,107,84,102,10,56,38,74,0,102,84,103,10,18,26,23,0,108,109,110,10,23,26,82,0,110,109,69,10,44,43,37,0,48,83,82,10,17,63,21,0,111,86,112,10,21,63,22,0,112,86,85,10,17,21,48,0,111,112,88,10,48,21,83,0,88,112,93,10,70,37,68,0,73,82,75,10,80,81,78,0,51,113,106,10,74,38,49,0,103,84,98,10,49,38,43,0,98,84,83,10,97,26,47,0,114,109,115,10,47,26,18,0,115,109,108,10,33,30,92,0,55,57,59,10,92,30,91,0,59,57,116,10,46,94,34,0,92,117,91,10,47,46,97,0,115,92,114,10,97,46,19,0,114,92,90,10,73,88,54,0,118,107,119,10,54,88,56,0,119,107,102,10,78,76,80,0,106,87,51,10,80,76,77,0,51,87,52,10,97,19,83,0,114,90,93,10,83,19,75,0,93,90,54,10,71,68,67,0,74,75,94,10,67,68,90,0,94,75,95,10,66,89,64,0,77,96,79,10,64,89,62,0,79,96,120,10,89,37,62,0,96,82,120,10,57,53,60,0,121,122,80,10,60,53,59,0,80,122,81,10,49,43,52,0,98,83,47,10,52,43,44,0,47,83,48,10,25,96,29,0,123,124,68,10,73,72,37,0,118,125,82,10,72,73,58,0,125,118,126,10,58,73,54,0,126,118,119,10,58,64,72,0,126,79,125,10,72,64,62,0,125,79,120,10,62,37,72,0,120,82,125,10,68,37,90,0,75,82,95,10,83,21,97,0,93,112,114,10,97,21,26,0,114,112,109,10,92,18,32,0,59,108,61,10,32,18,23,0,61,108,110,10,26,21,82,0,109,112,69,10,82,21,22,0,69,112,85,10,18,92,47,0,108,59,115,10,47,92,91,0,115,59,116,10,20,24,98,0,56,127,128,10,16,20,98,0,58,56,128,10,51,45,50,0,49,50,72,10,50,45,70,0,72,50,73,10,76,71,69,0,87,74,89,10,69,71,67,0,89,74,94,10,76,78,71,0,87,106,74,10,71,78,50,0,74,106,72,10,95,101,199,0,129,130,131,10,69,67,65,0,89,94,76,10,65,67,66,0,76,94,77,10,58,54,57,0,126,119,121,10,57,54,53,0,121,119,122,10,60,63,57,0,80,86,121,10,57,63,61,0,121,86,78,10,61,63,65,0,78,86,76,10,65,63,17,0,76,86,111,10,87,59,55,0,101,81,104,10,55,59,53,0,104,81,122,10,61,64,57,0,78,79,121,10,57,64,58,0,121,79,126,10,54,56,53,0,119,102,122,10,53,56,55,0,122,102,104,10,65,17,69,0,76,111,89,10,69,17,48,0,89,111,88,10,73,37,88,0,118,82,107,10,2,5,356,0,132,133,134,10,212,213,25,0,135,136,123,10,25,213,209,0,123,136,137,10,7,8,102,0,41,39,138,10,102,8,9,0,138,39,139,10,6,11,8,0,140,141,39,10,8,11,9,0,39,141,139,10,11,6,12,0,141,140,142,10,12,6,10,0,142,140,43,10,9,11,102,0,139,141,138,10,102,11,176,0,138,141,143,10,5,2,15,0,144,46,145,10,2,7,15,0,46,41,145,10,7,102,15,0,41,138,145,10,103,42,81,0,146,100,113,10,81,42,78,0,113,100,106,10,96,25,209,0,124,123,137,10,105,96,209,0,147,124,137,10,100,96,105,0,148,124,147,10,245,307,259,0,149,150,151,10,280,312,309,0,152,153,154,10,309,312,314,0,154,153,155,10,275,284,282,0,156,157,158,10,251,40,273,0,159,97,160,10,273,40,41,0,160,97,99,10,139,141,152,0,161,162,163,10,152,141,135,0,163,162,164,10,281,314,282,0,165,155,158,10,282,314,313,0,158,155,166,10,310,299,274,0,167,168,169,10,274,299,311,0,169,168,170,10,299,310,300,0,168,167,171,10,300,310,308,0,171,167,172,10,308,309,281,0,172,154,165,10,281,309,314,0,165,154,155,10,282,313,275,0,158,166,156,10,308,310,309,0,172,167,154,10,300,245,273,0,171,149,160,10,273,245,251,0,160,149,159,10,245,300,307,0,149,171,150,10,307,300,308,0,150,171,172,10,281,283,308,0,165,173,172,10,308,283,307,0,172,173,150,10,242,171,119,0,174,175,176,10,28,95,197,0,66,129,67,10,136,140,142,0,177,178,179,10,254,257,261,0,180,181,182,10,145,238,239,0,183,184,185,10,159,146,162,0,186,187,188,10,162,146,161,0,188,187,189,10,240,239,241,0,190,185,191,10,241,239,238,0,191,185,184,10,172,168,169,0,192,193,194,10,158,156,200,0,195,196,197,10,200,156,121,0,197,196,198,10,29,197,214,0,68,67,199,10,118,116,145,0,30,28,183,10,145,116,238,0,183,28,184,10,170,171,169,0,200,175,194,10,169,171,172,0,194,175,192,10,142,140,141,0,179,178,162,10,241,238,119,0,191,184,176,10,119,238,116,0,176,184,28,10,158,200,157,0,195,197,201,10,158,157,163,0,195,201,202,10,163,157,162,0,202,201,188,10,335,261,256,0,203,182,14,10,243,250,253,0,204,205,206,10,253,250,252,0,206,205,207,10,289,323,327,0,208,209,210,10,245,252,251,0,149,207,159,10,264,248,258,0,211,212,11,10,257,254,352,0,181,180,213,10,331,332,330,0,214,62,64,10,333,27,86,0,215,71,70,10,339,336,340,0,216,217,218,10,340,336,337,0,218,217,219,10,178,239,174,0,220,185,221,10,174,239,146,0,221,185,187,10,212,157,200,0,135,201,197,10,239,178,145,0,185,220,183,10,243,39,250,0,204,105,205,10,327,324,326,0,210,222,223,10,326,324,325,0,223,222,224,10,248,328,323,0,212,225,209,10,323,328,327,0,209,225,210,10,295,305,320,0,226,8,227,10,320,305,296,0,227,8,228,10,321,290,320,0,229,230,231,10,320,290,276,0,231,230,232,10,276,291,292,0,233,234,235,10,290,321,329,0,230,229,236,10,146,239,161,0,187,185,189,10,161,239,240,0,189,185,190,10,282,246,263,0,158,237,238,10,262,278,267,0,239,240,19,10,267,278,337,0,19,240,219,10,248,264,328,0,212,211,225,10,331,330,195,0,214,64,241,10,287,288,286,0,242,243,244,10,286,288,285,0,244,243,245,10,329,341,326,0,236,246,223,10,326,341,327,0,223,246,210,10,327,341,289,0,210,246,208,10,329,326,290,0,236,223,230,10,290,326,325,0,230,223,224,10,325,324,291,0,224,222,247,10,291,324,286,0,247,222,248,10,192,339,322,0,249,216,250,10,322,339,340,0,250,216,218,10,232,194,204,0,251,252,253,10,204,194,201,0,253,252,254,10,221,211,220,0,255,256,257,10,338,277,215,0,258,259,260,10,215,277,201,0,260,259,254,10,170,161,240,0,200,189,190,10,146,159,174,0,187,186,221,10,174,159,150,0,221,186,261,10,195,335,215,0,241,203,260,10,156,158,222,0,196,195,262,10,342,335,256,0,263,203,14,10,233,234,197,0,264,265,67,10,197,234,214,0,67,265,199,10,288,315,285,0,243,266,245,10,313,314,301,0,166,155,267,10,301,314,312,0,267,155,153,10,139,151,142,0,161,268,179,10,142,141,139,0,179,162,161,10,227,225,228,0,269,270,271,10,228,225,186,0,271,270,272,10,186,225,185,0,272,270,273,10,185,225,224,0,273,270,274,10,185,224,231,0,273,274,275,10,231,224,230,0,275,274,276,10,231,128,185,0,275,277,273,10,185,128,180,0,273,277,278,10,166,154,182,0,279,31,280,10,182,154,179,0,280,31,33,10,163,168,158,0,202,193,195,10,158,168,222,0,195,193,262,10,257,256,261,0,181,14,182,10,181,183,186,0,281,282,272,10,186,183,228,0,272,282,271,10,336,255,337,0,217,16,219,10,337,255,267,0,219,16,19,10,160,157,212,0,283,201,135,10,108,305,107,0,6,8,5,10,107,305,295,0,5,8,226,10,118,175,375,0,30,26,29,10,375,175,371,0,29,26,25,10,184,347,223,0,284,285,286,10,223,347,348,0,286,285,22,10,347,184,113,0,285,284,34,10,113,184,179,0,34,284,33,10,245,345,252,0,149,287,207,10,298,302,295,0,288,1,226,10,295,302,107,0,226,1,5,10,340,337,278,0,218,219,240,10,258,351,264,0,11,12,211,10,245,259,345,0,149,151,287,10,241,119,171,0,191,176,175,10,177,151,175,0,289,268,26,10,175,151,189,0,26,268,23,10,274,280,310,0,169,152,167,10,310,280,309,0,167,152,154,10,160,159,157,0,283,186,201,10,157,159,162,0,201,186,188,10,159,160,150,0,186,283,261,10,150,160,149,0,261,283,290,10,240,241,170,0,190,191,200,10,170,241,171,0,200,191,175,10,141,140,135,0,162,178,164,10,135,140,134,0,164,178,291,10,127,122,124,0,292,293,294,10,124,122,148,0,294,293,295,10,109,117,242,0,296,297,174,10,147,148,144,0,298,295,299,10,144,148,122,0,299,295,293,10,115,119,110,0,300,176,27,10,110,119,116,0,27,176,28,10,172,171,117,0,192,175,297,10,117,171,242,0,297,175,174,10,757,759,358,0,301,302,303,10,132,180,128,0,304,278,277,10,225,134,224,0,270,291,274,10,224,134,138,0,274,291,305,10,153,152,223,0,21,163,286,10,223,152,226,0,286,163,306,10,136,144,137,0,177,299,307,10,137,144,122,0,307,299,293,10,206,188,205,0,308,309,310,10,205,188,123,0,310,309,311,10,149,160,747,0,290,283,312,10,193,188,203,0,313,309,314,10,203,188,202,0,314,309,315,10,275,313,303,0,156,166,316,10,303,313,301,0,316,166,267,10,317,318,319,0,2,317,4,10,317,292,318,0,2,235,317,10,292,316,318,0,235,318,317,10,221,220,210,0,255,257,319,10,210,220,149,0,319,257,290,10,151,177,142,0,268,289,179,10,142,177,143,0,179,289,320,10,194,195,201,0,252,241,254,10,201,195,215,0,254,241,260,10,211,198,220,0,256,321,257,10,220,198,207,0,257,321,322,10,182,179,187,0,280,33,323,10,187,179,184,0,323,33,284,10,181,186,180,0,281,272,278,10,180,186,185,0,278,272,273,10,147,144,143,0,298,299,320,10,142,143,136,0,179,320,177,10,151,139,189,0,268,161,23,10,152,153,139,0,163,21,161,10,139,153,189,0,161,21,23,10,225,227,134,0,270,269,291,10,134,227,135,0,291,269,164,10,180,131,181,0,278,324,281,10,181,131,133,0,281,324,325,10,133,131,120,0,325,324,326,10,183,182,228,0,282,280,271,10,228,182,187,0,271,280,323,10,85,254,261,0,65,180,182,10,128,231,129,0,277,275,327,10,129,231,229,0,327,275,328,10,330,85,261,0,64,65,182,10,187,184,226,0,323,284,306,10,226,184,223,0,306,284,286,10,228,187,227,0,271,323,269,10,227,187,226,0,269,323,306,10,136,143,144,0,177,320,299,10,132,128,130,0,304,277,329,10,130,128,129,0,329,277,327,10,287,344,349,0,242,330,331,10,304,316,315,0,332,318,266,10,315,316,285,0,266,318,245,10,260,324,328,0,333,222,225,10,328,324,327,0,225,222,210,10,283,281,282,0,173,165,158,10,290,325,276,0,230,224,232,10,276,325,291,0,232,224,247,10,354,321,306,0,334,229,335,10,349,246,284,0,331,237,157,10,284,246,282,0,157,237,158,10,275,315,284,0,156,266,157,10,284,315,288,0,157,266,243,10,303,304,275,0,316,332,156,10,275,304,315,0,156,332,266,10,293,306,294,0,336,335,337,10,294,306,296,0,337,335,338,10,334,196,235,0,339,340,341,10,211,237,198,0,256,342,321,10,198,237,204,0,321,342,253,10,236,235,233,0,343,341,264,10,233,235,196,0,264,341,340,10,196,334,232,0,340,339,251,10,232,334,194,0,251,339,252,10,156,222,167,0,196,262,344,10,235,333,334,0,341,215,339,10,190,125,193,0,345,346,313,10,127,124,208,0,292,294,347,10,170,169,161,0,200,194,189,10,129,229,205,0,327,328,310,10,205,229,206,0,310,328,308,10,124,202,208,0,294,315,347,10,229,127,206,0,328,292,308,10,206,127,208,0,308,292,347,10,336,339,342,0,217,216,263,10,342,339,338,0,263,216,258,10,195,330,335,0,241,64,203,10,330,261,335,0,64,182,203,10,256,255,342,0,14,16,263,10,342,255,336,0,263,16,217,10,339,192,338,0,216,249,258,10,338,192,277,0,258,249,259,10,193,125,188,0,313,346,309,10,188,125,123,0,309,346,311,10,342,338,335,0,263,258,203,10,335,338,215,0,203,258,260,10,259,283,263,0,151,173,238,10,263,283,282,0,238,173,158,10,120,131,756,0,326,324,348,10,230,137,229,0,276,307,328,10,137,122,229,0,307,293,328,10,229,122,127,0,328,293,292,10,169,163,161,0,194,202,189,10,161,163,162,0,189,202,188,10,168,163,169,0,193,202,194,10,292,285,316,0,235,245,318,10,284,288,349,0,157,243,331,10,349,288,287,0,331,243,242,10,292,302,298,0,235,1,288,10,317,302,292,0,2,1,235,10,277,193,201,0,259,313,254,10,201,193,203,0,254,313,314,10,198,204,202,0,321,253,315,10,202,204,203,0,315,253,314,10,190,191,217,0,345,349,350,10,252,345,253,0,207,287,206,10,253,345,352,0,206,287,213,10,283,259,307,0,173,151,150,10,352,254,253,0,213,180,206,10,188,206,202,0,309,308,315,10,202,206,208,0,315,308,347,10,328,264,260,0,225,211,333,10,266,267,350,0,20,19,18,10,109,176,117,0,296,143,297,10,198,202,207,0,321,315,322,10,306,321,296,0,335,229,338,10,296,321,320,0,338,229,231,10,140,138,134,0,178,305,291,10,140,136,138,0,178,177,305,10,138,136,137,0,305,177,307,10,152,135,226,0,163,164,306,10,226,135,227,0,306,164,269,10,224,138,230,0,274,305,276,10,230,138,137,0,276,305,307,10,181,133,183,0,281,325,282,10,183,133,155,0,282,325,351,10,182,183,166,0,280,282,279,10,166,183,155,0,279,282,351,10,231,230,229,0,275,276,328,10,153,223,348,0,21,286,22,10,242,119,115,0,174,176,300,10,220,207,149,0,257,322,290,10,123,216,205,0,311,352,310,10,205,216,219,0,310,352,353,10,218,216,125,0,354,352,346,10,125,216,123,0,346,352,311,10,197,199,233,0,67,131,264,10,233,199,236,0,264,131,343,10,331,334,332,0,214,339,62,10,29,214,221,0,68,199,255,10,221,214,211,0,255,199,256,10,193,277,190,0,313,259,345,10,190,277,192,0,345,259,249,10,279,126,191,0,355,356,349,10,191,126,217,0,349,356,350,10,191,322,279,0,349,250,355,10,190,217,125,0,345,350,346,10,217,218,125,0,350,354,346,10,323,289,248,0,209,208,212,10,332,334,333,0,62,339,215,10,190,192,191,0,345,249,349,10,191,192,322,0,349,249,250,10,247,244,266,0,13,357,20,10,322,340,279,0,250,218,355,10,279,340,278,0,355,218,240,10,214,234,211,0,199,265,256,10,211,234,237,0,256,265,342,10,203,204,201,0,314,253,254,10,130,129,750,0,329,327,358,10,219,129,205,0,353,327,310,10,212,200,213,0,135,197,136,10,213,200,121,0,136,197,198,10,233,196,234,0,264,340,265,10,234,196,232,0,265,340,251,10,248,249,258,0,212,9,11,10,262,267,244,0,239,19,357,10,232,204,237,0,251,253,342,10,234,232,237,0,265,251,342,10,266,244,267,0,20,357,19,10,195,194,331,0,241,252,214,10,331,194,334,0,214,252,339,10,304,318,316,0,332,317,318,10,164,111,165,0,359,360,35,10,165,111,112,0,35,360,36,10,164,346,111,0,359,361,360,10,297,294,296,0,362,363,228,10,296,305,297,0,228,8,362,10,297,305,268,0,362,8,7,10,287,286,260,0,364,248,333,10,260,286,324,0,333,248,222,10,260,265,287,0,333,365,364,10,287,265,344,0,364,365,366,10,264,265,260,0,211,365,333,10,174,150,147,0,221,261,298,10,147,150,148,0,298,261,295,10,124,148,149,0,294,295,290,10,149,148,150,0,290,295,261,10,177,145,143,0,289,183,320,10,143,145,178,0,320,183,220,10,145,177,118,0,183,289,30,10,118,177,175,0,30,289,26,10,174,147,178,0,221,298,220,10,149,207,124,0,290,322,294,10,124,207,202,0,294,322,315,10,143,178,147,0,320,220,298,10,256,257,343,0,14,181,17,10,343,257,352,0,17,181,213,10,120,756,358,0,326,348,303,10,755,758,508,0,367,368,369,10,154,166,165,0,31,279,35,10,165,166,356,0,35,279,134,10,156,167,364,0,196,344,370,10,364,167,365,0,370,344,371,10,362,270,318,0,372,373,317,10,318,270,319,0,317,373,4,10,278,363,279,0,240,374,355,10,279,363,366,0,355,374,375,10,367,269,247,0,376,377,13,10,247,269,244,0,13,377,357,10,247,249,367,0,13,9,376,10,367,249,272,0,376,9,378,10,155,355,356,0,351,379,134,10,293,361,306,0,336,380,335,10,306,361,354,0,335,380,334,10,356,166,155,0,134,279,351,10,285,291,286,0,245,234,244,10,298,295,276,0,288,226,233,10,276,295,320,0,233,226,227,10,276,292,298,0,233,235,288,10,291,285,292,0,234,245,235,10,40,251,250,0,97,159,205,10,250,251,252,0,205,159,207,10,45,44,37,0,50,48,82,10,25,210,212,0,123,319,135,10,160,212,747,0,283,135,312,10,221,210,29,0,255,319,68,10,29,210,25,0,68,319,123,10,89,90,37,0,96,95,82,10,88,37,38,0,107,82,84,10,23,235,32,0,110,341,61,10,333,86,332,0,215,70,62,10,332,86,84,0,62,70,63,10,27,235,23,0,71,341,110,10,27,333,235,0,71,215,341,10,100,29,96,0,148,68,124,10,253,254,243,0,206,180,204,10,99,28,100,0,381,66,148,10,100,28,29,0,148,66,68,10,87,55,39,0,101,104,105,10,87,39,243,0,101,105,204,10,243,254,87,0,204,180,101,10,85,87,254,0,65,101,180,10,104,311,103,0,382,170,146,10,103,311,299,0,146,170,168,10,28,99,95,0,66,381,129,10,13,176,173,0,383,143,384,10,173,176,12,0,384,143,142,10,250,39,40,0,205,105,97,10,22,86,82,0,85,70,69,10,273,103,300,0,160,146,171,10,300,103,299,0,171,146,168,10,172,13,168,0,192,383,193,10,82,27,23,0,69,71,110,10,31,32,236,0,60,61,343,10,236,32,235,0,343,61,341,10,164,102,346,0,359,385,361,10,172,117,13,0,192,297,383,10,13,117,176,0,383,297,143,10,311,104,353,0,170,382,386,10,176,11,12,0,143,141,142,10,109,114,102,0,296,387,138,10,114,368,102,0,388,389,385,10,102,176,109,0,138,143,296,10,4,167,173,0,42,344,384,10,173,167,222,0,384,344,262,10,168,13,222,0,193,383,262,10,222,13,173,0,262,383,384,10,213,359,209,0,136,390,137,10,209,359,105,0,137,390,147,10,368,346,102,0,389,361,385,10,103,273,42,0,146,160,100,10,42,273,41,0,100,160,99,10,173,12,4,0,384,142,42,10,4,12,10,0,42,142,43,10,165,356,164,0,35,134,359,10,164,356,5,0,359,134,133,10,5,15,164,0,144,145,391,10,15,102,164,0,145,138,391,10,24,236,199,0,127,343,131,10,95,199,197,0,129,131,67,10,199,101,24,0,131,130,127,10,24,101,98,0,127,130,128,10,20,31,24,0,56,60,127,10,31,20,33,0,60,56,55,10,236,24,31,0,343,127,60,10,104,80,79,0,382,51,53,10,81,80,104,0,113,51,382,10,104,79,36,0,382,53,392,10,36,79,35,0,392,53,393,10,103,81,104,0,146,113,382,10,353,104,36,0,386,382,392,10,167,4,365,0,344,42,371,10,365,4,14,0,371,42,44,10,106,319,377,0,3,4,394,10,377,319,270,0,394,4,373,10,376,109,242,0,395,296,174,10,242,115,376,0,174,300,395,10,746,691,676,0,396,397,398,10,693,691,481,0,399,397,400,10,481,691,746,0,400,397,396,10,676,482,746,0,398,401,396,10,679,644,483,0,402,403,404,10,625,634,739,0,405,406,407,10,739,634,725,0,407,406,408,10,625,739,623,0,405,407,409,10,632,631,738,0,410,411,412,10,738,717,632,0,412,413,410,10,738,643,724,0,412,414,415,10,623,739,642,0,409,407,416,10,631,643,738,0,411,414,412,10,529,565,722,0,417,418,419,10,722,565,743,0,419,418,420,10,740,743,551,0,421,420,422,10,551,743,565,0,422,420,418,10,493,491,744,0,423,424,425,10,744,491,485,0,425,424,426,10,530,555,742,0,427,428,429,10,742,555,488,0,429,428,430,10,541,530,487,0,431,427,432,10,487,530,741,0,432,427,433,10,530,742,741,0,427,429,433,10,419,418,425,0,434,435,436,10,425,418,426,0,436,435,437,10,449,451,453,0,438,439,440,10,453,451,454,0,440,439,441,10,409,406,396,0,442,443,444,10,396,406,392,0,444,443,445,10,408,466,407,0,446,447,448,10,407,466,409,0,448,447,442,10,459,458,704,0,449,450,451,10,704,458,706,0,451,450,452,10,404,405,573,0,453,454,455,10,456,403,460,0,456,457,458,10,424,445,444,0,459,460,461,10,444,445,442,0,461,460,462,10,438,440,435,0,463,464,465,10,435,440,439,0,465,464,466,10,458,433,460,0,450,467,458,10,460,433,434,0,458,467,468,10,444,411,419,0,461,469,434,10,411,412,417,0,469,470,471,10,460,434,398,0,458,468,472,10,398,434,437,0,472,468,473,10,451,422,450,0,439,474,475,10,450,422,443,0,475,474,476,10,422,451,457,0,474,439,477,10,457,451,449,0,477,439,438,10,441,440,464,0,478,464,479,10,464,440,463,0,479,464,480,10,426,423,415,0,437,481,482,10,415,423,414,0,482,481,483,10,426,415,425,0,437,482,436,10,425,415,416,0,436,482,484,10,461,433,459,0,485,467,449,10,459,433,458,0,449,467,450,10,413,448,429,0,486,487,488,10,429,448,430,0,488,487,489,10,414,423,413,0,483,481,486,10,413,423,448,0,486,481,487,10,452,424,416,0,490,459,484,10,416,424,425,0,484,459,436,10,448,412,430,0,487,470,489,10,430,412,462,0,489,470,491,10,456,402,399,0,456,492,493,10,399,402,394,0,493,492,494,10,418,411,417,0,435,469,471,10,393,397,437,0,495,496,473,10,437,397,398,0,473,496,472,10,393,422,397,0,495,474,496,10,397,422,457,0,496,474,477,10,444,442,411,0,461,462,469,10,454,452,455,0,441,490,497,10,448,423,412,0,487,481,470,10,412,423,417,0,470,481,471,10,394,402,421,0,494,492,498,10,421,402,473,0,498,492,499,10,409,466,406,0,442,447,443,10,406,466,465,0,443,447,500,10,468,465,421,0,501,500,498,10,392,406,467,0,445,443,502,10,467,406,469,0,502,443,503,10,465,468,406,0,500,501,443,10,406,468,469,0,443,501,503,10,421,473,420,0,498,499,504,10,420,473,395,0,504,499,505,10,430,462,428,0,489,491,506,10,428,462,447,0,506,491,507,10,451,450,454,0,439,475,441,10,454,450,452,0,441,475,490,10,473,457,395,0,499,477,505,10,395,457,449,0,505,477,438,10,445,441,442,0,460,478,462,10,442,441,464,0,462,478,479,10,440,438,463,0,464,463,480,10,463,438,436,0,480,463,508,10,463,436,411,0,480,508,469,10,431,434,427,0,509,468,510,10,427,434,433,0,510,468,467,10,418,417,426,0,435,471,437,10,426,417,423,0,437,471,481,10,401,405,472,0,511,454,512,10,447,411,446,0,507,469,513,10,428,447,432,0,506,507,514,10,432,447,446,0,514,507,513,10,432,446,438,0,514,513,463,10,438,446,436,0,463,513,508,10,436,446,411,0,508,513,469,10,442,464,411,0,462,479,469,10,402,397,473,0,492,496,499,10,473,397,457,0,499,496,477,10,466,408,394,0,447,446,494,10,394,408,399,0,494,446,493,10,398,397,456,0,472,496,456,10,456,397,402,0,456,496,492,10,394,421,466,0,494,498,447,10,466,421,465,0,447,498,500,10,396,474,400,0,444,515,516,10,392,474,396,0,445,515,444,10,444,419,424,0,461,434,459,10,424,419,425,0,459,434,436,10,450,443,445,0,475,476,460,10,445,443,441,0,460,476,478,10,450,445,452,0,475,460,490,10,452,445,424,0,490,460,459,10,470,575,477,0,517,518,519,10,440,441,439,0,464,478,466,10,439,441,443,0,466,478,476,10,427,428,431,0,510,506,509,10,431,428,432,0,509,506,514,10,435,437,431,0,465,473,509,10,431,437,434,0,509,473,468,10,435,439,437,0,465,466,473,10,437,439,393,0,473,466,495,10,427,433,429,0,510,467,488,10,429,433,461,0,488,467,485,10,435,431,438,0,465,509,463,10,438,431,432,0,463,509,514,10,429,430,427,0,488,489,510,10,427,430,428,0,510,489,506,10,439,443,393,0,466,476,495,10,393,443,422,0,495,476,474,10,447,462,411,0,507,491,469,10,585,589,401,0,520,521,511,10,401,589,588,0,511,521,522,10,382,478,383,0,523,524,525,10,383,478,384,0,525,524,526,10,381,383,386,0,527,525,528,10,386,383,384,0,528,525,526,10,385,381,387,0,529,527,530,10,387,381,386,0,530,527,528,10,384,478,386,0,526,524,528,10,386,478,552,0,528,524,531,10,382,390,478,0,523,532,524,10,479,455,416,0,533,497,484,10,416,455,452,0,484,497,490,10,472,585,401,0,512,520,511,10,621,635,681,0,534,535,536,10,688,686,683,0,537,538,539,10,683,686,654,0,539,538,540,10,649,656,658,0,541,542,543,10,627,647,414,0,544,545,483,10,414,647,415,0,483,545,482,10,511,517,528,0,546,547,548,10,528,517,515,0,548,547,549,10,655,656,688,0,550,542,537,10,688,656,687,0,537,542,551,10,685,673,648,0,552,553,554,10,648,673,684,0,554,553,555,10,682,684,674,0,556,555,557,10,674,684,673,0,557,555,553,10,682,655,683,0,556,550,539,10,683,655,688,0,539,550,537,10,656,649,687,0,542,541,551,10,682,683,684,0,556,539,555,10,627,621,647,0,544,534,545,10,647,621,674,0,545,534,557,10,621,681,674,0,534,536,557,10,674,681,682,0,557,536,556,10,655,682,657,0,550,556,558,10,657,682,681,0,558,556,536,10,618,494,547,0,559,560,561,10,404,573,470,0,453,455,517,10,512,518,516,0,562,563,564,10,630,637,633,0,565,566,567,10,521,615,614,0,568,569,570,10,535,538,522,0,571,572,573,10,522,538,537,0,573,572,574,10,614,615,617,0,570,569,575,10,617,615,616,0,575,569,576,10,548,545,544,0,577,578,579,10,497,532,576,0,580,581,582,10,576,532,534,0,582,581,583,10,405,590,573,0,454,584,455,10,614,491,521,0,570,424,568,10,521,491,493,0,568,424,423,10,548,547,545,0,577,561,578,10,545,547,546,0,578,561,585,10,518,517,516,0,563,547,564,10,491,614,494,0,424,570,560,10,494,614,617,0,560,570,575,10,534,533,576,0,583,586,582,10,538,533,539,0,572,586,587,10,539,533,534,0,587,586,583,10,709,632,637,0,588,410,566,10,619,629,626,0,589,590,591,10,626,629,628,0,591,590,592,10,663,701,697,0,593,594,595,10,621,627,628,0,534,544,592,10,640,634,624,0,596,406,597,10,633,726,630,0,567,598,565,10,705,704,706,0,599,451,452,10,707,460,403,0,600,458,457,10,713,714,710,0,601,602,603,10,710,714,711,0,603,602,604,10,522,615,550,0,573,569,605,10,550,615,554,0,605,569,606,10,588,576,533,0,522,582,586,10,646,677,678,0,607,608,609,10,615,521,554,0,569,568,606,10,619,626,413,0,589,591,486,10,701,700,698,0,594,610,611,10,698,700,699,0,611,610,612,10,624,697,702,0,597,595,613,10,697,701,702,0,595,594,613,10,669,694,679,0,614,615,402,10,679,694,670,0,402,615,616,10,650,664,694,0,617,618,619,10,694,664,695,0,619,618,620,10,650,666,665,0,621,622,623,10,664,703,695,0,618,624,620,10,522,537,615,0,573,574,569,10,615,537,616,0,569,574,576,10,656,639,622,0,542,625,626,10,638,643,652,0,627,414,628,10,652,643,711,0,628,414,604,10,624,702,640,0,597,613,596,10,705,571,704,0,599,629,451,10,661,660,662,0,630,631,632,10,662,660,659,0,632,631,633,10,703,700,715,0,624,610,634,10,700,701,715,0,610,594,634,10,715,701,663,0,634,594,593,10,703,664,700,0,624,618,610,10,700,664,699,0,610,618,612,10,699,665,698,0,612,635,611,10,698,665,660,0,611,635,636,10,714,713,696,0,602,601,637,10,696,713,568,0,637,601,638,10,577,570,580,0,639,640,641,10,580,570,608,0,641,640,642,10,597,596,587,0,643,644,645,10,577,651,591,0,639,646,647,10,591,651,712,0,647,646,648,10,546,616,537,0,585,576,574,10,522,550,535,0,573,605,571,10,535,550,526,0,571,605,649,10,571,591,709,0,629,647,588,10,532,598,534,0,581,650,583,10,716,632,709,0,651,410,588,10,590,610,573,0,584,652,455,10,573,610,609,0,455,652,653,10,662,659,689,0,632,633,654,10,686,688,675,0,538,537,655,10,675,688,687,0,655,537,551,10,515,518,527,0,549,563,656,10,518,515,517,0,563,549,547,10,562,601,604,0,657,658,659,10,604,601,603,0,659,658,660,10,562,561,601,0,657,661,658,10,601,561,600,0,658,661,662,10,561,607,600,0,661,663,662,10,600,607,606,0,662,663,664,10,556,504,561,0,665,666,661,10,561,504,607,0,661,666,663,10,555,530,558,0,428,427,667,10,558,530,542,0,667,427,668,10,539,534,544,0,587,583,579,10,544,534,598,0,579,583,650,10,633,637,632,0,567,566,410,10,604,559,562,0,659,669,657,10,562,559,557,0,657,669,670,10,710,711,631,0,603,604,411,10,631,711,643,0,411,604,414,10,536,588,533,0,671,522,586,10,669,679,482,0,614,402,401,10,482,679,483,0,401,402,404,10,493,744,551,0,423,425,422,10,551,744,740,0,422,425,421,10,560,599,721,0,672,673,674,10,721,599,722,0,674,673,419,10,555,560,488,0,428,672,430,10,488,560,721,0,430,672,674,10,621,628,719,0,534,592,675,10,482,676,669,0,401,398,614,10,669,676,672,0,614,398,676,10,714,652,711,0,602,628,604,10,634,640,725,0,406,596,408,10,621,719,635,0,534,675,535,10,617,547,494,0,575,561,560,10,553,551,527,0,677,422,656,10,527,551,565,0,656,422,418,10,648,684,654,0,554,555,540,10,654,684,683,0,540,555,539,10,536,533,535,0,671,586,571,10,535,533,538,0,571,586,572,10,535,526,536,0,571,649,671,10,536,526,525,0,671,649,678,10,547,617,546,0,561,575,585,10,546,617,616,0,585,575,576,10,510,516,511,0,679,564,546,10,511,516,517,0,546,564,547,10,503,500,498,0,680,681,682,10,498,500,524,0,682,681,683,10,484,618,492,0,684,559,685,10,498,524,520,0,682,683,686,10,520,524,523,0,686,683,687,10,490,485,494,0,688,426,560,10,494,485,491,0,560,426,424,10,618,547,492,0,559,561,685,10,492,547,548,0,685,561,577,10,504,556,508,0,666,665,369,10,514,510,600,0,689,679,662,10,600,510,601,0,662,679,658,10,529,599,528,0,417,673,548,10,528,599,602,0,548,673,690,10,512,513,520,0,562,691,686,10,520,513,498,0,686,691,682,10,582,581,564,0,692,693,694,10,564,581,499,0,694,693,695,10,536,525,748,0,671,678,696,10,578,564,579,0,697,694,698,10,579,564,569,0,698,694,699,10,649,677,687,0,541,608,551,10,687,677,675,0,551,608,655,10,691,693,692,0,397,399,700,10,691,692,666,0,397,700,622,10,666,692,690,0,622,700,701,10,597,586,596,0,643,702,644,10,596,586,525,0,644,702,678,10,519,553,518,0,703,677,563,10,518,553,527,0,563,677,656,10,591,571,577,0,647,629,639,10,577,571,570,0,639,629,640,10,587,596,574,0,645,644,704,10,574,596,583,0,704,644,705,10,558,563,555,0,667,706,428,10,555,563,560,0,428,706,672,10,557,556,562,0,670,665,657,10,562,556,561,0,657,665,661,10,523,519,520,0,687,703,686,10,518,512,519,0,563,562,703,10,527,565,515,0,656,418,549,10,565,529,515,0,418,417,549,10,515,529,528,0,549,417,548,10,601,510,603,0,658,679,660,10,603,510,511,0,660,679,546,10,509,507,557,0,707,708,670,10,557,507,556,0,670,708,665,10,559,604,558,0,669,659,667,10,558,604,563,0,667,659,706,10,459,637,630,0,449,566,565,10,605,607,505,0,709,663,710,10,505,607,504,0,710,663,666,10,704,637,459,0,451,566,449,10,599,560,602,0,673,672,690,10,602,560,563,0,690,672,706,10,602,563,603,0,690,706,660,10,603,563,604,0,660,706,659,10,512,520,519,0,562,686,703,10,505,504,506,0,710,666,711,10,506,504,508,0,711,666,369,10,661,723,718,0,630,712,713,10,659,690,689,0,633,701,654,10,689,690,678,0,654,701,609,10,701,698,702,0,594,611,613,10,702,698,636,0,613,611,714,10,657,656,655,0,558,542,550,10,664,650,699,0,618,617,612,10,699,650,665,0,612,617,635,10,656,622,658,0,542,626,543,10,658,622,723,0,543,626,712,10,662,689,658,0,632,654,543,10,658,689,649,0,543,654,541,10,677,649,678,0,608,541,609,10,678,649,689,0,609,541,654,10,670,680,668,0,715,716,717,10,668,680,667,0,717,716,718,10,708,611,572,0,719,720,721,10,580,613,574,0,641,722,704,10,574,613,587,0,704,722,645,10,572,611,609,0,721,720,653,10,609,611,612,0,653,720,723,10,570,708,608,0,640,719,642,10,608,708,572,0,642,719,721,10,532,543,598,0,581,724,650,10,611,708,707,0,720,719,600,10,566,569,501,0,725,699,726,10,503,584,500,0,680,727,681,10,546,537,545,0,585,574,578,10,505,581,605,0,710,693,709,10,605,581,582,0,709,693,692,10,500,584,578,0,681,727,697,10,605,582,503,0,709,692,680,10,503,582,584,0,680,692,727,10,712,713,716,0,648,601,651,10,716,713,710,0,651,601,603,10,571,709,704,0,629,588,451,10,704,709,637,0,451,588,566,10,710,631,716,0,603,411,651,10,716,631,632,0,651,411,410,10,713,712,568,0,601,648,638,10,568,712,651,0,638,648,646,10,569,564,501,0,699,694,726,10,501,564,499,0,726,694,695,10,591,712,709,0,647,648,588,10,709,712,716,0,588,648,651,10,656,657,639,0,542,558,625,10,639,657,635,0,625,558,535,10,606,605,513,0,664,709,691,10,513,605,498,0,691,709,682,10,498,605,503,0,682,709,680,10,545,537,539,0,578,574,587,10,539,537,538,0,587,574,572,10,544,545,539,0,579,578,587,10,666,690,659,0,622,701,633,10,661,662,723,0,630,632,712,10,723,662,658,0,712,632,543,10,666,672,676,0,622,676,398,10,691,666,676,0,397,622,398,10,579,569,577,0,698,699,639,10,577,569,651,0,639,699,646,10,579,580,578,0,698,641,697,10,578,580,574,0,697,641,704,10,566,593,567,0,725,728,729,10,628,629,719,0,592,590,675,10,719,629,726,0,675,590,598,10,657,681,635,0,558,536,535,10,726,629,630,0,598,590,565,10,564,578,582,0,694,697,692,10,582,578,584,0,692,697,727,10,702,636,640,0,613,714,596,10,642,724,643,0,416,415,414,10,484,492,552,0,684,685,531,10,574,583,578,0,704,705,697,10,680,670,695,0,716,715,620,10,695,670,694,0,620,715,619,10,516,510,514,0,564,679,689,10,516,514,512,0,564,689,562,10,512,514,513,0,562,689,691,10,603,511,602,0,660,546,690,10,602,511,528,0,690,546,548,10,600,606,514,0,662,664,689,10,514,606,513,0,689,664,691,10,531,509,559,0,730,707,669,10,559,509,557,0,669,707,670,10,531,559,542,0,730,669,668,10,542,559,558,0,668,669,667,10,607,605,606,0,663,709,664,10,529,722,599,0,417,419,673,10,618,490,494,0,559,688,560,10,596,525,583,0,644,678,705,10,499,581,592,0,695,693,731,10,592,581,595,0,731,693,732,10,499,592,501,0,695,731,726,10,501,592,594,0,726,731,733,10,573,609,575,0,455,653,518,10,575,609,612,0,518,653,723,10,705,706,708,0,599,452,719,10,587,590,597,0,645,584,643,10,597,590,405,0,643,584,454,10,568,651,566,0,638,646,725,10,566,651,569,0,725,646,699,10,653,567,502,0,734,729,735,10,502,567,593,0,735,729,728,10,567,653,696,0,729,734,637,10,566,501,593,0,725,726,728,10,593,501,594,0,728,726,733,10,697,624,663,0,595,597,593,10,706,707,708,0,452,600,719,10,566,567,568,0,725,729,638,10,568,567,696,0,638,729,637,10,623,642,620,0,409,416,736,10,652,714,653,0,628,602,734,10,653,714,696,0,734,602,637,10,590,587,610,0,584,645,652,10,610,587,613,0,652,645,722,10,579,577,580,0,698,639,641,10,581,505,595,0,693,710,732,10,505,506,753,0,710,711,737,10,497,576,589,0,580,582,521,10,589,576,588,0,521,582,522,10,608,572,610,0,642,721,652,10,610,572,609,0,652,721,653,10,624,634,625,0,597,406,405,10,638,620,643,0,627,736,414,10,608,613,580,0,642,722,641,10,610,613,608,0,652,722,642,10,642,643,620,0,416,414,736,10,708,570,705,0,719,640,599,10,705,570,571,0,599,640,629,10,678,690,692,0,609,701,700,10,487,486,541,0,432,738,431,10,541,486,540,0,431,738,739,10,540,486,720,0,739,738,740,10,671,670,668,0,741,616,742,10,670,671,679,0,616,741,402,10,679,671,644,0,402,741,403,10,661,636,660,0,743,714,636,10,660,636,698,0,636,714,611,10,636,661,641,0,714,743,744,10,641,661,718,0,744,743,745,10,640,636,641,0,596,714,744,10,550,523,526,0,605,687,649,10,526,523,524,0,649,687,683,10,500,525,524,0,681,678,683,10,524,525,526,0,683,678,649,10,554,521,519,0,606,568,703,10,519,521,553,0,703,568,677,10,551,553,493,0,422,677,423,10,493,553,521,0,423,677,568,10,550,554,523,0,605,606,687,10,525,500,583,0,678,681,705,10,500,578,583,0,681,697,705,10,519,523,554,0,703,687,606,10,632,717,633,0,410,413,567,10,633,717,726,0,567,413,598,10,692,734,678,0,700,746,609,10,496,729,595,0,747,748,732,10,595,729,592,0,732,748,731,10,502,593,735,0,735,728,749,10,735,593,495,0,749,728,750,10,677,646,675,0,608,607,655,10,675,646,733,0,655,607,751,10,733,645,654,0,751,752,540,10,654,645,648,0,540,752,554,10,646,678,734,0,607,609,746,10,654,686,733,0,540,538,751,10,733,686,675,0,751,538,655,10,659,660,665,0,633,631,623,10,672,650,669,0,676,621,614,10,669,650,694,0,614,621,615,10,650,672,666,0,621,676,622,10,665,666,659,0,623,622,633,10,628,627,626,0,592,544,591,10,626,627,414,0,591,544,483,10,419,411,418,0,434,469,435,10,401,588,586,0,511,522,702,10,588,536,748,0,522,671,696,10,401,586,405,0,511,702,454,10,405,586,597,0,454,702,643,10,463,411,464,0,480,469,479,10,462,412,411,0,491,470,469,10,399,408,611,0,493,446,720,10,707,706,460,0,600,452,458,10,460,706,458,0,458,452,450,10,403,399,611,0,457,493,720,10,403,611,707,0,457,720,600,10,476,472,405,0,753,512,454,10,629,619,630,0,590,589,565,10,475,476,404,0,754,753,453,10,404,476,405,0,453,753,454,10,461,413,429,0,485,486,488,10,461,619,413,0,485,589,486,10,619,461,630,0,589,485,565,10,459,630,461,0,449,565,485,10,673,685,479,0,553,552,533,10,479,685,480,0,533,552,755,10,404,470,475,0,453,517,754,10,388,549,552,0,756,757,531,10,552,549,387,0,531,757,530,10,626,414,413,0,591,483,486,10,398,456,460,0,472,456,458,10,647,674,479,0,545,557,533,10,479,674,673,0,533,557,553,10,548,544,388,0,577,579,756,10,456,399,403,0,456,493,457,10,611,408,612,0,720,446,723,10,612,408,407,0,723,446,448,10,540,720,478,0,739,740,758,10,552,492,388,0,531,685,756,10,388,492,548,0,756,685,577,10,552,387,386,0,531,530,528,10,484,478,489,0,684,524,759,10,489,478,737,0,760,758,761,10,478,484,552,0,524,684,531,10,598,543,549,0,650,724,757,10,549,543,379,0,757,724,762,10,544,598,388,0,579,650,756,10,388,598,549,0,756,650,757,10,737,478,720,0,761,758,740,10,479,416,647,0,533,484,545,10,647,416,415,0,545,484,482,10,385,387,379,0,529,530,762,10,379,387,549,0,762,530,757,10,380,540,390,0,763,764,532,10,390,540,478,0,532,764,524,10,400,575,612,0,516,518,723,10,470,573,575,0,517,455,518,10,575,400,477,0,518,516,519,10,477,400,474,0,519,516,515,10,396,400,407,0,444,516,448,10,407,409,396,0,448,442,444,10,612,407,400,0,723,448,516,10,480,453,454,0,755,440,441,10,455,480,454,0,497,755,441,10,479,480,455,0,533,755,497,10,471,475,470,0,765,754,517,10,391,475,471,0,766,754,765,10,470,477,471,0,517,519,765,10,745,618,484,0,767,559,684,10,618,745,490,0,559,767,688,10,389,6,3,0,768,140,38,10,3,6,8,0,38,140,39,10,1,10,389,0,45,43,768,10,389,10,6,0,768,43,140,10,468,47,91,0,501,115,116,10,94,46,468,0,117,92,501,10,468,46,47,0,501,92,115,10,469,30,467,0,503,57,502,10,467,30,16,0,502,57,58,10,469,468,30,0,503,501,57,10,30,468,91,0,57,501,116,10,98,93,16,0,128,769,58,10,16,93,467,0,58,769,502,10,646,304,303,0,607,332,316,10,353,645,311,0,386,752,170,10,311,645,274,0,170,752,169,10,727,133,120,0,770,325,326,10,216,218,729,0,352,354,771,10,729,218,357,0,771,354,772,10,495,357,217,0,773,772,350,10,217,357,218,0,350,772,354,10,318,304,734,0,317,332,746,10,279,366,126,0,355,375,356,10,126,366,735,0,356,375,774,10,360,289,736,0,775,208,776,10,736,289,341,0,776,208,246,10,496,219,729,0,777,353,771,10,729,219,216,0,771,353,352,10,126,735,217,0,356,774,350,10,217,735,495,0,350,774,773,10,727,355,133,0,770,379,325,10,133,355,155,0,325,379,351,10,303,301,646,0,316,267,607,10,646,301,733,0,607,267,751,10,734,362,318,0,746,372,317,10,213,121,359,0,136,198,390,10,359,121,728,0,390,198,778,10,364,728,156,0,370,778,196,10,156,728,121,0,196,778,198,10,736,341,271,0,776,246,779,10,271,341,329,0,779,246,236,10,274,645,280,0,169,752,152,10,280,645,733,0,152,752,751,10,248,289,732,0,212,208,780,10,732,289,360,0,780,208,775,10,262,731,278,0,239,781,240,10,278,731,363,0,240,781,374,10,731,262,269,0,781,239,377,10,269,262,244,0,377,239,357,10,249,248,272,0,9,212,378,10,272,248,732,0,378,212,780,10,646,734,304,0,607,746,332,10,280,733,312,0,152,751,153,10,312,733,301,0,153,751,267,10,329,730,271,0,236,782,779,10,354,730,321,0,334,782,229,10,321,730,329,0,229,782,236,10,758,759,506,0,368,783,711,10,751,130,750,0,784,329,358,10,410,35,75,0,785,393,54,10,75,35,79,0,54,393,53,10,471,93,101,0,765,769,130,10,101,93,98,0,130,769,128,10,105,391,100,0,147,766,148,10,100,391,99,0,148,766,381,10,75,34,410,0,54,91,785,10,471,95,99,0,765,129,381,10,391,471,99,0,766,765,381,10,95,471,101,0,129,765,130,10,383,381,3,0,525,527,38,10,3,381,389,0,38,527,768,10,382,383,0,0,523,525,40,10,0,383,3,0,40,525,38,10,379,14,385,0,762,44,529,10,385,14,1,0,529,44,45,10,1,389,385,0,45,768,529,10,385,389,381,0,529,768,527,10,2,382,0,0,786,523,40,10,449,34,395,0,438,91,505,10,395,34,420,0,505,91,504,10,420,34,94,0,504,91,117,10,421,420,468,0,498,504,501,10,468,420,94,0,501,504,117,10,467,93,392,0,502,769,445,10,392,93,474,0,445,769,515,10,2,356,380,0,132,134,133,10,380,390,2,0,763,532,786,10,2,390,382,0,786,532,523,10,105,585,472,0,147,520,512,10,476,105,472,0,753,147,512,10,648,645,685,0,554,752,552,10,685,645,353,0,552,752,386,10,727,120,509,0,787,788,707,10,509,120,507,0,707,788,708,10,354,680,695,0,789,716,620,10,556,507,755,0,665,708,367,10,357,594,729,0,790,733,748,10,729,594,592,0,748,733,731,10,594,357,593,0,733,790,728,10,593,357,495,0,728,790,750,10,735,366,502,0,749,791,735,10,502,366,653,0,735,791,734,10,715,663,736,0,634,593,792,10,736,663,360,0,792,593,793,10,727,509,355,0,787,707,794,10,355,509,531,0,794,707,730,10,755,358,758,0,367,795,368,10,734,692,362,0,746,700,372,10,530,541,542,0,427,431,668,10,542,541,356,0,668,431,796,10,728,497,359,0,778,580,390,10,359,497,589,0,390,580,521,10,364,532,728,0,370,581,778,10,728,532,497,0,778,581,580,10,365,543,364,0,371,724,370,10,364,543,532,0,370,724,581,10,736,271,715,0,792,797,634,10,715,271,703,0,634,797,624,10,693,270,692,0,399,373,700,10,692,270,362,0,700,373,372,10,652,653,363,0,628,734,798,10,363,653,366,0,798,734,791,10,367,623,269,0,799,409,800,10,269,623,620,0,800,409,736,10,272,625,367,0,801,405,799,10,367,625,623,0,799,405,409,10,624,732,663,0,597,802,593,10,663,732,360,0,593,802,793,10,638,652,731,0,627,628,803,10,731,652,363,0,803,628,798,10,731,269,638,0,803,800,627,10,638,269,620,0,627,800,736,10,732,624,272,0,802,597,801,10,272,624,625,0,801,597,405,10,531,356,355,0,730,796,794,10,703,271,730,0,624,797,804,10,354,695,730,0,789,620,804,10,730,695,703,0,804,620,624,10,667,680,361,0,718,716,805,10,361,680,354,0,805,716,789,10,356,531,542,0,796,730,668,10,753,506,754,0,737,711,806,10,759,749,506,0,783,807,711,10,453,35,449,0,440,393,438,10,449,35,410,0,438,393,785,10,474,93,477,0,515,769,519,10,477,93,471,0,519,769,765,10,475,391,476,0,754,766,753,10,476,391,105,0,753,766,147,10,685,353,480,0,552,386,755,10,105,359,585,0,147,390,520,10,585,359,589,0,520,390,521,10,541,540,356,0,431,739,796,10,540,380,356,0,739,808,796,10,449,410,34,0,438,785,91,10,480,36,453,0,755,392,440,10,453,36,35,0,440,392,393,10,353,36,480,0,386,392,755,10,14,379,365,0,44,762,371,10,365,379,543,0,371,762,724,10,270,693,377,0,373,399,394,10,377,693,481,0,394,399,400,10,212,210,747,0,135,319,312,10,210,149,747,0,319,290,312,10,586,588,748,0,702,522,696,10,525,586,748,0,678,702,696,10,130,751,749,0,329,784,809,10,754,506,749,0,806,711,807,10,595,505,753,0,732,710,737,10,129,219,750,0,327,353,358,10,595,753,754,0,732,737,806,10,496,754,752,0,747,806,810,10,751,750,219,0,784,358,353,10,751,496,752,0,784,777,811,10,496,595,754,0,747,732,806,10,752,754,749,0,810,806,807,10,496,751,219,0,777,784,353,10,751,752,749,0,784,811,809,10,180,132,756,0,278,304,348,10,120,358,755,0,788,795,367,10,756,132,757,0,348,304,301,10,131,180,756,0,324,278,348,10,749,759,130,0,809,302,329,10,756,757,358,0,348,301,303,10,132,130,757,0,304,329,301,10,759,758,358,0,783,368,795,10,759,757,130,0,302,301,329,10,506,508,758,0,711,369,368,10,507,120,755,0,708,788,367,10,508,556,755,0,369,665,367],\"uvs\":[[0.482048,0.848274,0.469338,0.848129,0.478759,0.82963,0.490763,0.841378,0.494503,0.822074,0.470016,0.866007,0.469399,0.881231,0.452944,0.89441,0.45276,0.880076,0.169765,0.727044,0.230552,0.71562,0.195795,0.75447,0.225472,0.758273,0.175298,0.698527,0.283386,0.613185,0.278912,0.638322,0.254399,0.617116,0.288856,0.637905,0.255239,0.652452,0.224659,0.637385,0.234645,0.694273,0.202298,0.209223,0.197023,0.11217,0.224997,0.21051,0.22588,0.107614,0.250791,0.102606,0.274027,0.195361,0.324576,0.086612,0.338599,0.192948,0.290255,0.094852,0.307757,0.193991,0.096114,0.217433,0.124501,0.125809,0.129283,0.211945,0.147605,0.1223,0.065802,0.222532,0.086259,0.128964,0.105186,0.127913,0.500408,0.183468,0.490555,0.181596,0.500408,0.169986,0.49076,0.165836,0.489186,0.223674,0.490211,0.209114,0.500408,0.224871,0.500408,0.20993,0.499923,0.137465,0.413626,0.654737,0.417005,0.641519,0.431547,0.651753,0.425597,0.639873,0.480296,0.636434,0.477784,0.616377,0.490794,0.633308,0.487711,0.608671,0.458975,0.538831,0.460658,0.530801,0.481098,0.541479,0.480685,0.531716,0.455167,0.548026,0.445933,0.534551,0.435813,0.540113,0.364909,0.565158,0.366199,0.60573,0.341133,0.588398,0.356343,0.614583,0.435175,0.470489,0.425464,0.481004,0.419992,0.439724,0.418999,0.573649,0.386199,0.595234,0.404066,0.56033,0.442349,0.640495,0.431226,0.633812,0.443122,0.624943,0.430853,0.626719,0.438463,0.607199,0.427429,0.617124,0.417522,0.606114,0.41581,0.616079,0.390039,0.601132,0.372728,0.609948,0.419723,0.629033,0.410245,0.638793,0.407075,0.63375,0.415493,0.589196,0.417186,0.596087,0.461602,0.619462,0.463591,0.60507,0.453373,0.611833,0.488362,0.595474,0.500408,0.594289,0.489011,0.582278,0.468683,0.597927,0.439178,0.619217,0.429215,0.623927,0.424615,0.622092,0.387706,0.665076,0.398968,0.648932,0.411888,0.670246,0.440579,0.665028,0.363205,0.623638,0.392651,0.629617,0.392237,0.639604,0.380643,0.627438,0.381578,0.644303,0.459872,0.644956,0.407373,0.628186,0.447397,0.562855,0.446245,0.576951,0.422504,0.558102,0.443832,0.597826,0.445093,0.591047,0.468506,0.659642,0.471003,0.584942,0.473325,0.571956,0.480807,0.560999,0.500408,0.575754,0.409274,0.624566,0.396176,0.622126,0.417941,0.621673,0.399319,0.609911,0.387119,0.616527,0.429645,0.410362,0.447242,0.428183,0.412456,0.622764,0.404346,0.617974,0.447762,0.51426,0.469098,0.51318,0.441861,0.48681,0.466861,0.492156,0.438815,0.499793,0.029584,0.254358,0.027959,0.245514,0.047803,0.267193,0.422901,0.384028,0.464931,0.385833,0.463365,0.413673,0.484058,0.173044,0.48361,0.179246,0.491501,0.195586,0.478171,0.188713,0.471117,0.200657,0.465303,0.194089,0.493363,0.138129,0.489563,0.156522,0.449989,0.675858,0.500408,0.427625,0.4622,0.450215,0.38105,0.695034,0.394227,0.708534,0.363952,0.703956,0.475863,0.722052,0.475066,0.737465,0.456383,0.718641,0.447503,0.740068,0.449251,0.774662,0.4228,0.778388,0.425227,0.764434,0.379559,0.681161,0.412739,0.684849,0.223467,0.243306,0.220282,0.275553,0.194101,0.243679,0.188496,0.279042,0.423083,0.738007,0.447344,0.763058,0.456563,0.704202,0.457981,0.688585,0.477386,0.70133,0.478962,0.681822,0.419181,0.696377,0.421604,0.710905,0.401455,0.734694,0.398119,0.186961,0.396619,0.227766,0.371469,0.189087,0.256229,0.332975,0.221311,0.305866,0.255043,0.272703,0.340365,0.635682,0.31785,0.629284,0.336203,0.611186,0.311426,0.238766,0.346991,0.237631,0.360975,0.272241,0.386727,0.337271,0.376445,0.31474,0.396506,0.320402,0.388064,0.308655,0.381491,0.268196,0.376463,0.235694,0.42181,0.233271,0.430586,0.274754,0.407389,0.269174,0.428106,0.292138,0.471162,0.306516,0.437435,0.335484,0.466552,0.339505,0.390339,0.452129,0.394179,0.269119,0.408602,0.327028,0.421032,0.289858,0.317451,0.590969,0.362635,0.649985,0.370538,0.661076,0.354503,0.655831,0.361565,0.672111,0.11644,0.769665,0.157803,0.78567,0.154642,0.800428,0.223923,0.780652,0.158571,0.754513,0.317863,0.653129,0.354501,0.565308,0.379976,0.554542,0.251743,0.576431,0.253183,0.597463,0.223399,0.587842,0.224587,0.605754,0.324805,0.276143,0.360019,0.325618,0.169133,0.81875,0.144119,0.809988,0.15728,0.825508,0.178631,0.785686,0.452965,0.865071,0.425202,0.866428,0.426575,0.883394,0.120373,0.841122,0.133111,0.832817,0.144538,0.858274,0.152575,0.852305,0.423784,0.851892,0.417906,0.836095,0.465608,0.813033,0.116893,0.816089,0.373994,0.777927,0.37097,0.752908,0.182253,0.64127,0.184602,0.609855,0.337002,0.562836,0.397615,0.820308,0.430053,0.793185,0.409773,0.828444,0.447949,0.798606,0.115557,0.785916,0.172957,0.846047,0.184501,0.842959,0.251933,0.552735,0.222256,0.568858,0.357296,0.500874,0.342413,0.531318,0.320583,0.496714,0.312779,0.533422,0.381685,0.428023,0.36349,0.450964,0.35892,0.42947,0.279408,0.567022,0.278215,0.542086,0.313928,0.560521,0.368496,0.349686,0.443282,0.269207,0.281405,0.592273,0.412101,0.497586,0.379309,0.473398,0.450112,0.78871,0.481258,0.751282,0.244319,0.23507,0.161088,0.281841,0.166699,0.31998,0.134237,0.282457,0.141984,0.32689,0.172149,0.361151,0.193595,0.349564,0.21525,0.381922,0.230615,0.372103,0.195642,0.392348,0.151039,0.370687,0.086936,0.247151,0.113912,0.24829,0.118799,0.332255,0.109093,0.284546,0.399898,0.350815,0.157515,0.209658,0.176965,0.116422,0.180727,0.20826,0.351539,0.6777,0.454227,0.847226,0.281723,0.234156,0.370679,0.383516,0.191232,0.312785,0.295186,0.385335,0.295272,0.366262,0.333647,0.378516,0.332935,0.360804,0.429711,0.064494,0.425019,0.18729,0.329471,0.33634,0.295378,0.341737,0.352095,0.082076,0.165086,0.404505,0.141053,0.416725,0.133727,0.405889,0.173792,0.399812,0.212485,0.33794,0.167725,0.244692,0.247283,0.354895,0.260498,0.424734,0.2712,0.467991,0.226583,0.43566,0.235731,0.477366,0.393069,0.384121,0.275384,0.506695,0.306754,0.499793,0.308826,0.460316,0.480789,0.7621,0.487618,0.794823,0.469949,0.79741,0.389485,0.401602,0.287247,0.291242,0.329127,0.453018,0.343189,0.40699,0.141858,0.246604,0.139154,0.375305,0.103327,0.336598,0.120477,0.382786,0.212983,0.406329,0.24913,0.392161,0.167295,0.411081,0.366279,0.814482,0.370599,0.802026,0.474637,0.780663,0.192387,0.815825,0.086576,0.836444,0.114375,0.858314,0.102919,0.870014,0.126704,0.879066,0.13465,0.86738,0.368583,0.54021,0.388439,0.514372,0.409181,0.539082,0.355295,0.471654,0.434226,0.517738,0.485802,0.262826,0.249987,0.515498,0.232955,0.500326,0.296871,0.416626,0.161365,0.395843,0.218439,0.550839,0.178733,0.519057,0.085027,0.283108,0.190218,0.471222,0.182386,0.440511,0.183357,0.49875,0.186147,0.579463,0.177338,0.54477,0.180592,0.668527,0.172338,0.420917,0.030381,0.225406,0.067576,0.129146,0.050418,0.127394,0.437914,0.89605,0.424995,0.897881,0.201928,0.83782,0.221634,0.813364,0.222451,0.830682,0.839453,0.395843,0.835733,0.404505,0.827026,0.399812,0.500408,0.308777,0.500408,0.264391,0.500408,0.792303,0.500408,0.820498,0.123891,0.596655,0.13441,0.562849,0.107899,0.693796,0.110983,0.664895,0.105523,0.718444,0.068103,0.303039,0.077224,0.855762,0.463616,0.465849,0.487191,0.66358,0.449869,0.228106,0.458424,0.229929,0.001325,0.22838,0.500408,0.679372,0.465031,0.051054,0.020491,0.124343,0.034511,0.126402,0.500408,0.384775,0.484711,0.138714,0.500408,0.64506,0.500408,0.627046,0.500408,0.839145,0.400498,0.072367,0.51877,0.848274,0.522059,0.82963,0.53148,0.848129,0.506315,0.822074,0.510055,0.841378,0.530802,0.866007,0.548058,0.880076,0.547874,0.89441,0.531419,0.881231,0.831053,0.727044,0.805023,0.75447,0.770266,0.71562,0.775348,0.758273,0.82552,0.698527,0.717432,0.613185,0.74642,0.617118,0.721904,0.638322,0.711962,0.637905,0.776159,0.637385,0.74558,0.652452,0.766173,0.694273,0.79852,0.209223,0.775821,0.21051,0.803795,0.11217,0.774938,0.107614,0.750026,0.102606,0.726791,0.195361,0.693061,0.193991,0.662219,0.192948,0.710563,0.094852,0.676242,0.086612,0.904704,0.217433,0.871535,0.211945,0.876317,0.125809,0.853213,0.1223,0.935016,0.222532,0.914559,0.128964,0.895632,0.127913,0.575221,0.639873,0.583813,0.641519,0.569271,0.651753,0.587192,0.654737,0.513107,0.608671,0.523034,0.616377,0.510024,0.633308,0.520522,0.636434,0.541843,0.538831,0.51972,0.541479,0.54016,0.530801,0.520133,0.531716,0.565005,0.540113,0.545653,0.548026,0.554885,0.534551,0.644476,0.614583,0.63462,0.60573,0.659685,0.588398,0.635909,0.565158,0.565643,0.470489,0.580826,0.439724,0.575356,0.481004,0.58182,0.573649,0.596752,0.56033,0.614619,0.595234,0.558469,0.640495,0.557696,0.624943,0.569592,0.633812,0.569965,0.626719,0.585008,0.616079,0.573389,0.617124,0.583296,0.606114,0.562355,0.607199,0.62809,0.609948,0.61078,0.601132,0.581095,0.629033,0.593743,0.63375,0.590573,0.638793,0.585325,0.589198,0.583632,0.596087,0.537227,0.605071,0.539216,0.619462,0.547445,0.611833,0.532135,0.597927,0.56164,0.619217,0.571603,0.623927,0.576204,0.622092,0.60185,0.648932,0.58893,0.670246,0.613112,0.665076,0.560239,0.665028,0.637613,0.623638,0.61924,0.644303,0.608581,0.639604,0.620175,0.627438,0.608167,0.629617,0.540946,0.644956,0.593445,0.628188,0.554573,0.576951,0.578314,0.558102,0.553421,0.562855,0.556986,0.597826,0.555725,0.591047,0.532312,0.659642,0.527493,0.571958,0.529815,0.584942,0.520012,0.560999,0.500408,0.559737,0.500408,0.532318,0.500408,0.542428,0.511807,0.582278,0.512456,0.595474,0.604642,0.622126,0.591544,0.624566,0.582877,0.621673,0.6015,0.609911,0.613699,0.616527,0.571173,0.410364,0.553576,0.428183,0.588362,0.622764,0.596472,0.617974,0.53172,0.513182,0.553056,0.51426,0.558957,0.48681,0.562003,0.499793,0.533957,0.492156,0.537452,0.413673,0.535887,0.385833,0.577917,0.384028,0.510058,0.165836,0.51676,0.173044,0.510263,0.181596,0.517208,0.179246,0.509317,0.195586,0.522647,0.188713,0.510607,0.209114,0.529701,0.200657,0.535515,0.194089,0.511254,0.156522,0.550829,0.675858,0.619768,0.695034,0.636866,0.703956,0.606591,0.708534,0.553315,0.740068,0.525752,0.737465,0.544436,0.718641,0.524955,0.722054,0.551567,0.774662,0.57559,0.764434,0.578018,0.778388,0.621259,0.681161,0.588077,0.68485,0.812322,0.279042,0.780536,0.275553,0.806717,0.243679,0.777351,0.243306,0.577735,0.738007,0.553474,0.763058,0.521856,0.681822,0.542837,0.688585,0.523432,0.70133,0.544253,0.704202,0.579215,0.710905,0.581637,0.696377,0.599363,0.734694,0.602699,0.186961,0.629349,0.189087,0.604199,0.227766,0.744589,0.332975,0.745775,0.272703,0.779507,0.305866,0.660453,0.635682,0.664615,0.611186,0.682968,0.629284,0.689392,0.238766,0.639843,0.272241,0.653827,0.237631,0.614092,0.337271,0.604312,0.320402,0.624373,0.31474,0.612754,0.308655,0.624355,0.235694,0.619327,0.268196,0.579008,0.233273,0.593429,0.269174,0.570232,0.274754,0.534266,0.339505,0.529656,0.306516,0.563383,0.335484,0.572712,0.292138,0.610479,0.452129,0.606639,0.269119,0.592216,0.327028,0.579786,0.289858,0.683367,0.590969,0.638183,0.649985,0.646315,0.655833,0.63028,0.661076,0.639253,0.672113,0.884378,0.769665,0.846176,0.800428,0.843015,0.78567,0.776895,0.780652,0.842247,0.754513,0.682956,0.653129,0.646317,0.565308,0.620842,0.554542,0.749075,0.576431,0.777419,0.587842,0.747635,0.597463,0.776231,0.605754,0.640799,0.325618,0.676013,0.276143,0.500408,0.751689,0.520029,0.7621,0.526181,0.780663,0.856699,0.809988,0.831685,0.81875,0.843538,0.825508,0.822187,0.785686,0.547853,0.865071,0.575616,0.866428,0.574244,0.883394,0.848243,0.852306,0.867707,0.832817,0.85628,0.858274,0.880445,0.841122,0.577034,0.851892,0.53521,0.813033,0.582912,0.836095,0.883925,0.816089,0.629848,0.752908,0.626824,0.777927,0.818565,0.64127,0.816216,0.609855,0.663816,0.562836,0.603204,0.820308,0.591045,0.828444,0.570765,0.793185,0.552869,0.798606,0.885261,0.785916,0.827861,0.846047,0.816317,0.842959,0.778562,0.568858,0.748885,0.552735,0.688039,0.533422,0.658405,0.531318,0.680236,0.496714,0.643522,0.500874,0.619133,0.428023,0.641898,0.42947,0.637328,0.450966,0.722603,0.542086,0.68689,0.560521,0.72141,0.567022,0.632322,0.349686,0.557536,0.269207,0.719413,0.592273,0.621509,0.473398,0.588717,0.497588,0.550706,0.78871,0.51956,0.751282,0.7565,0.23507,0.858832,0.32689,0.834119,0.31998,0.866581,0.282457,0.83973,0.281841,0.828669,0.361151,0.807223,0.349564,0.785568,0.381922,0.770203,0.372103,0.849779,0.370687,0.805176,0.392348,0.886906,0.24829,0.913882,0.247151,0.891725,0.284546,0.882019,0.332255,0.60092,0.350815,0.843303,0.209658,0.820091,0.20826,0.823853,0.116422,0.649279,0.6777,0.546591,0.847226,0.719095,0.234156,0.63014,0.383516,0.809586,0.312785,0.705632,0.385335,0.667171,0.378516,0.705546,0.366262,0.667883,0.360804,0.571108,0.064495,0.575799,0.18729,0.70544,0.341737,0.671347,0.33634,0.648723,0.082076,0.788333,0.33794,0.833093,0.244692,0.753535,0.354895,0.74032,0.424734,0.774236,0.43566,0.729618,0.467991,0.765087,0.477366,0.607731,0.384033,0.691992,0.460316,0.694064,0.499793,0.725434,0.506695,0.5132,0.794823,0.530869,0.79741,0.611333,0.401602,0.713572,0.291242,0.671692,0.453018,0.657629,0.40699,0.85896,0.246604,0.897491,0.336598,0.861664,0.375305,0.751688,0.392161,0.787835,0.406329,0.833524,0.411081,0.630219,0.802026,0.634539,0.814482,0.808431,0.815826,0.866168,0.86738,0.886443,0.858314,0.874114,0.879066,0.897901,0.870014,0.632235,0.54021,0.591637,0.539082,0.612379,0.514372,0.645523,0.471654,0.566592,0.517738,0.515016,0.262826,0.750831,0.515498,0.767863,0.500326,0.703947,0.416626,0.822085,0.519057,0.78238,0.550839,0.915791,0.283108,0.8106,0.471222,0.818432,0.440511,0.817461,0.49875,0.814671,0.579463,0.82348,0.54477,0.820226,0.668527,0.82848,0.420917,0.933242,0.129146,0.970437,0.225406,0.9504,0.127394,0.562904,0.89605,0.575823,0.897881,0.79889,0.83782,0.779184,0.813364,0.778367,0.830682,0.500408,0.776884,0.840546,0.445154,0.836946,0.470894,0.8568,0.534311,0.848671,0.512183,0.500408,0.725761,0.500408,0.700338,0.538618,0.450215,0.537202,0.465849,0.513627,0.66358,0.550948,0.228106,0.542394,0.229929,0.999493,0.22838,0.535788,0.051054,0.980327,0.124343,0.966307,0.126402,0.511632,0.223674,0.507455,0.138129,0.516108,0.138714,0.500408,0.48198,0.500408,0.464031,0.60032,0.072367,0.500408,0.196903,0.500408,0.512167,0.091002,0.338823,0.163872,0.470894,0.157623,0.496321,0.152147,0.512183,0.144018,0.534311,0.103144,0.76293,0.102778,0.783516,0.160272,0.445154,0.500408,0.340282,0.099381,0.802574,0.104579,0.740759,0.116813,0.63065,0.093823,0.822484,0.859766,0.416725,0.164751,0.423421,0.500408,0.607762,0.500895,0.137465,0.909816,0.338825,0.880341,0.382786,0.914242,0.836444,0.843195,0.496321,0.866408,0.56285,0.89804,0.783516,0.897674,0.76293,0.932715,0.303039,0.867091,0.405889,0.953015,0.267193,0.901437,0.802574,0.876928,0.596655,0.892919,0.693796,0.889835,0.664895,0.895295,0.718444,0.896239,0.740759,0.884005,0.63065,0.906995,0.822484,0.923594,0.855762,0.836067,0.423421,0.856076,0.422182,0.97286,0.245514,0.144742,0.422182,0.850437,0.430523,0.150381,0.430523]],\"skinWeights\":[0.471114,0.431094,0.080877,0.016915,0.420815,0.355928,0.148289,0.074968,0.474156,0.440402,0.085442,0,0.45348,0.411825,0.104867,0.029827,0.482228,0.255024,0.173339,0.089409,0.596116,0.333802,0.070082,0,0.523615,0.315364,0.120905,0.040117,0.599161,0.32385,0.076989,0,0.572688,0.310009,0.099557,0.017746,0.720549,0.204274,0.075177,0,0.49911,0.285131,0.149146,0.066613,0.702426,0.201338,0.087393,0.008843,0.704009,0.171481,0.101377,0.023133,0.688635,0.165933,0.102623,0.04281,0.41192,0.321495,0.163252,0.103334,0.658367,0.27645,0.065183,0,0.536175,0.289439,0.077818,0.046001,0.541631,0.22725,0.174689,0.046152,0.481072,0.323027,0.118356,0.059022,0.598718,0.178888,0.120982,0.101412,0.532093,0.296002,0.092941,0.06192,0.546773,0.196906,0.195534,0.043278,0.49058,0.26723,0.205503,0.034059,0.443287,0.344246,0.139866,0.072602,0.576356,0.224785,0.130784,0.054193,0.712541,0.189097,0.062869,0.022627,0.52242,0.256937,0.151808,0.041679,0.436576,0.324508,0.163385,0.075531,0.530049,0.328655,0.099194,0.041287,0.591864,0.310329,0.058749,0.039058,0.482744,0.343334,0.065277,0.057005,0.510732,0.313602,0.098603,0.077063,0.476409,0.336682,0.093936,0.092974,0.492429,0.338806,0.084679,0.071705,0.597855,0.186645,0.118357,0.097142,0.536579,0.1866,0.148345,0.093115,0.442267,0.240641,0.182986,0.064706,0.496408,0.348453,0.092988,0.027839,0.563457,0.287374,0.083754,0.052614,0.659837,0.181756,0.098375,0.060032,0.717081,0.134304,0.1136,0.026656,0.69212,0.151416,0.068915,0.05466,0.583353,0.223971,0.076478,0.064748,0.573417,0.273827,0.075819,0.052074,0.559371,0.282169,0.072251,0.041573,0.518731,0.314318,0.073605,0.038943,0.579367,0.228464,0.100283,0.083763,0.528442,0.281546,0.101194,0.056466,0.571453,0.201212,0.154838,0.072497,0.652903,0.203097,0.0751,0.059206,0.426422,0.387906,0.073402,0.06668,0.550102,0.26351,0.056573,0.052926,0.625651,0.211314,0.057507,0.053282,0.503908,0.321207,0.115069,0.058454,0.531659,0.308533,0.103184,0.056624,0.586425,0.248768,0.087471,0.077336,0.578761,0.266565,0.088359,0.066315,0.440182,0.382234,0.134566,0.035863,0.489781,0.353138,0.115187,0.040269,0.476414,0.327774,0.122925,0.064096,0.401377,0.386565,0.15322,0.038523,0.456138,0.360031,0.150493,0.012807,0.466918,0.379295,0.108182,0.024753,0.487941,0.29645,0.181436,0.022167,0.440657,0.399607,0.122383,0.022705,0.519723,0.286893,0.146248,0.046538,0.449865,0.386706,0.120588,0.033523,0.482262,0.33838,0.114658,0.056234,0.424713,0.40938,0.096931,0.043769,0.541865,0.253376,0.132473,0.068156,0.456367,0.374047,0.083013,0.048931,0.47417,0.34271,0.10269,0.063217,0.492957,0.355282,0.105646,0.033123,0.516322,0.333717,0.100671,0.040231,0.630995,0.220297,0.078091,0.070617,0.590858,0.144885,0.137622,0.120064,0.535662,0.250294,0.113294,0.084688,0.570925,0.184354,0.12226,0.108903,0.412831,0.357994,0.106084,0.065053,0.511118,0.190784,0.17102,0.081136,0.487174,0.240013,0.145054,0.075725,0.408002,0.319795,0.13764,0.078698,0.486057,0.268092,0.188298,0.057553,0.585904,0.170918,0.165187,0.077991,0.435031,0.351906,0.133274,0.063725,0.522215,0.282061,0.108684,0.082844,0.42263,0.341947,0.172349,0.032226,0.579448,0.241139,0.089739,0.089673,0.540165,0.311886,0.093751,0.04708,0.434152,0.406653,0.107442,0.031066,0.419674,0.416113,0.10316,0.040304,0.478646,0.343764,0.078659,0.054605,0.422291,0.405214,0.086003,0.074197,0.608506,0.205524,0.093321,0.070192,0.556631,0.26444,0.092514,0.076611,0.591037,0.226619,0.134968,0.031809,0.589569,0.292165,0.079946,0.03832,0.566704,0.225107,0.127531,0.064713,0.595345,0.213916,0.119383,0.038555,0.556331,0.278126,0.089165,0.076377,0.473692,0.372497,0.08749,0.066321,0.611529,0.171195,0.147513,0.060505,0.761747,0.179001,0.059251,0,0.601592,0.188248,0.110425,0.079038,0.302779,0.297718,0.222465,0.092972,0.465304,0.280443,0.223881,0.030372,0.616685,0.25606,0,0,0.605006,0.349668,0,0,0.660917,0.339083,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.984654,0.015346,0,0,0.883323,0.059641,0.057036,0,0.99989,0.00011,0,0,0.971512,0.028488,0,0,0.436595,0.251803,0.156449,0.148009,0.653717,0.15386,0.104668,0.051682,0.825562,0.120304,0.054135,0,0.568867,0.308132,0.110684,0.012316,0.848391,0.08394,0.067669,0,0.583475,0.186098,0.177637,0.052789,0.565077,0.323563,0.084968,0.026392,0.825449,0.090677,0.083874,0,0.790943,0.098857,0.061774,0.048426,0.819479,0.107989,0.062413,0.010119,0.715647,0.118596,0.087444,0.06543,0.544329,0.183652,0.16,0.101314,0.736125,0.095042,0.089616,0.067561,0.44587,0.274244,0.187773,0.092113,0.699391,0.292104,0.008505,0,0.871218,0.128782,0,0,0.716782,0.283218,0,0,0.80438,0.184837,0.010783,0,0.649333,0.350667,0,0,0.953435,0.046565,0,0,0.708947,0.291053,0,0,0.881209,0.118791,0,0,0.893819,0.106181,0,0,0.786968,0.213032,0,0,0.784217,0.215183,0.0006,0,0.92393,0.07607,0,0,0.701201,0.298799,0,0,0.780595,0.219405,0,0,0.837157,0.120344,0.042499,0,0.824576,0.098782,0.076642,0,0.817885,0.143162,0.038953,0,0.971701,0.028299,0,0,0.952463,0.047537,0,0,1,0,0,0,0.942138,0.057863,0,0,0.653346,0.252703,0.085225,0.008726,0.570143,0.178769,0.168112,0.076085,0.763564,0.182131,0.040605,0.0137,0.596143,0.320301,0.060611,0.022945,0.798569,0.173184,0.02552,0.002727,0.792559,0.129812,0.053844,0.023785,0.673257,0.326743,0,0,0.749392,0.232748,0.015327,0.002533,0.578602,0.358756,0.0484,0.014242,0.807805,0.164902,0.027293,0,0.880153,0.107667,0.01218,0,0.808249,0.140374,0.051377,0,0.352929,0.300513,0.174271,0.172288,0.470971,0.419594,0.058186,0.051249,0.639891,0.334793,0.014978,0.010338,0.695519,0.304481,0,0,0.865696,0.126016,0.008288,0,0.781119,0.161817,0.052019,0.005045,0.649486,0.170819,0.12435,0.055345,0.747949,0.252051,0,0,1,0,0,0,0.776713,0.140792,0.080679,0.001816,0.953249,0.046751,0,0,0.797345,0.202655,0,0,0.990574,0.009426,0,0,0.594623,0.207572,0.112616,0.076431,0.509126,0.21811,0.194826,0.077938,0.871953,0.084485,0.043562,0,0.742353,0.159549,0.092044,0.006054,1,0,0,0,0.647651,0.243848,0.062532,0.04274,0.601291,0.236111,0.110942,0.051657,0.916804,0.043566,0.039629,0,0.511471,0.362681,0.104716,0.021132,1,0,0,0,0.51095,0.254076,0.149863,0.085111,0.520421,0.285557,0.135552,0.058471,0.457627,0.278542,0.171742,0.076726,0.519803,0.211052,0.191612,0.077534,0.469389,0.265887,0.143442,0.121282,0.409182,0.276629,0.209263,0.080021,0.535256,0.207608,0.178671,0.078465,0.564901,0.275396,0.122825,0.018543,0.525856,0.383157,0.081467,0.009521,0.590492,0.190837,0.166503,0.035413,0.734978,0.138712,0.085515,0.035783,0.444517,0.290589,0.13504,0.129855,0.453302,0.440623,0.089782,0.016292,0.521928,0.229913,0.176077,0.072083,0.521525,0.252264,0.159768,0.066443,0.71891,0.241424,0.030356,0.009311,0.735957,0.207057,0.029715,0.027272,0.760546,0.165608,0.05631,0.017536,0.727182,0.198599,0.047945,0.026274,0.637699,0.215105,0.126332,0.013819,0.78836,0.147219,0.050155,0.008554,0.562006,0.353209,0.079281,0.005503,0.768269,0.109235,0.061328,0.061169,0.687644,0.143288,0.124369,0.044699,0.57109,0.352329,0.076581,0,0.410335,0.270141,0.20721,0.080061,0.634378,0.256176,0.072104,0.037342,0.603283,0.292102,0.068451,0.036164,0.70603,0.170695,0.116012,0.006765,0.691475,0.223083,0.085141,0.000301,0.682592,0.24494,0.052664,0.019804,0.700062,0.236646,0.046246,0.017046,0.427563,0.427197,0.073667,0.071574,1,0,0,0,0.687256,0.29471,0.014578,0.003456,0.665663,0.266256,0.05757,0.010511,0.950087,0.04959,0.000323,0,0.8426,0.11471,0.04269,0,0.809712,0.101125,0.089163,0,0.832479,0.089017,0.078504,0,0.822602,0.133632,0.043766,0,0.822976,0.120294,0.05428,0.00245,0.522171,0.238101,0.16942,0.070308,0.569248,0.220467,0.159578,0.050706,0.477647,0.38325,0.110704,0.028398,0.465267,0.316971,0.109708,0.108053,0.5638,0.229921,0.141773,0.063554,0.464915,0.393609,0.108691,0.032785,0.897561,0.102439,0,0,0.752469,0.24753,0,0,0.722248,0.277752,0,0,0.882105,0.117895,0,0,0.955834,0.034869,0.009296,0,0.688055,0.154086,0.124103,0.033757,0.643235,0.144959,0.114794,0.077482,0.735702,0.183493,0.057658,0.023147,0.674891,0.255164,0.069945,0,0.630963,0.160752,0.090252,0.073986,0.399138,0.346188,0.174877,0.079797,0.555496,0.229281,0.103673,0.080674,0.710454,0.157572,0.111662,0.020312,0.742473,0.164433,0.081779,0.011315,0.676004,0.256305,0.067691,0,0.688536,0.194289,0.09989,0.017286,0.637266,0.160093,0.141749,0.060892,0.558597,0.231487,0.132459,0.077457,0.532923,0.23031,0.152627,0.084139,0.617276,0.176423,0.149205,0.057097,0.516535,0.264577,0.151965,0.066923,0.663368,0.324449,0.006707,0.005476,0.418569,0.218442,0.190655,0.140392,0.515294,0.268562,0.108714,0.099976,0.532263,0.26574,0.077958,0.057381,0.673872,0.281074,0.045054,0,0.485288,0.445164,0.050129,0.019418,0.459385,0.440081,0.061166,0.039368,0.657953,0.27686,0.036469,0.028718,0.625809,0.185934,0.127285,0.044945,0.725765,0.274235,0,0,0.462073,0.219959,0.158656,0.141947,0.570186,0.337225,0.092589,0,0.716763,0.223873,0.059364,0,0.584365,0.128599,0.118291,0.110746,0.735754,0.11051,0.076893,0.069605,0.445116,0.292445,0.148091,0.114347,0.659787,0.268643,0.061397,0.010173,0.572819,0.164657,0.099369,0.083702,0.401787,0.332753,0.151271,0.104041,0.491046,0.319894,0.089476,0.046014,0.620263,0.194038,0.168138,0.012368,0.481661,0.341877,0.112159,0.064303,0.717324,0.203686,0.073249,0.00574,0.588111,0.311349,0.073092,0.027448,0.762449,0.126517,0.111034,0,0.475208,0.367404,0.070714,0.059748,0.672684,0.165365,0.121881,0.032731,0.272755,0.264453,0.210035,0.130929,0.45302,0.182478,0.157325,0.123835,0.476408,0.307261,0.092328,0.064774,0.481985,0.422233,0.076851,0.01893,0.634052,0.179077,0.128951,0.057919,0.33058,0.291625,0.157007,0.104581,0.673533,0.23394,0.060871,0.031656,0.669543,0.321165,0.009292,0,0.627751,0.363433,0.008816,0,0.646516,0.28229,0.057681,0.013513,0.517722,0.444802,0.037477,0,0.677622,0.322378,0,0,0.682764,0.140643,0.133599,0.03403,0.589762,0.163916,0.148151,0.098171,0.734528,0.095788,0.088239,0.066005,0.748812,0.172096,0.074998,0.004095,0.719895,0.174631,0.105474,0,0.776917,0.137548,0.058676,0.02686,0.826606,0.105965,0.067343,0.000087,0.633944,0.366056,0,0,0.534884,0.413195,0.051921,0,0.749094,0.141568,0.066639,0.042699,0.734268,0.126424,0.067879,0.060977,0.564438,0.297057,0.068884,0.063725,0.598534,0.216378,0.098209,0.08303,0.446905,0.197508,0.180814,0.164532,0.610913,0.278392,0.085457,0.025238,0.583338,0.362611,0.032679,0.01818,0.543875,0.384509,0.036283,0.02042,0.694726,0.198522,0.090799,0.009637,0.790066,0.137616,0.072318,0,0.596101,0.297074,0.106825,0,0.826605,0.15536,0.018035,0,0.574181,0.329399,0.09642,0,0.657869,0.228994,0.084359,0.021081,0.674351,0.214174,0.104663,0.006812,0.52845,0.214355,0.203665,0.03287,0.39461,0.292719,0.224136,0.088536,0.355041,0.264327,0.219743,0.103916,0.364097,0.35203,0.136367,0.061423,0.398212,0.386168,0.114896,0.054106,0.409797,0.317871,0.17738,0.075806,0.374695,0.266763,0.1829,0.175642,0.693019,0.191124,0.087412,0.028445,0.392843,0.325717,0.175675,0.059436,0.415565,0.271532,0.216993,0.074636,0.421531,0.281679,0.209571,0.074784,0.404033,0.341347,0.167212,0.087408,0.434118,0.312227,0.136954,0.1167,0.38656,0.346866,0.15547,0.074016,0.439678,0.341486,0.122597,0.086472,0.463999,0.355979,0.103279,0.076742,0.433468,0.235179,0.216303,0.063292,0.44622,0.274373,0.181838,0.053993,0.468668,0.320802,0.146011,0.054655,0.508171,0.443131,0.048698,0,0.373818,0.372624,0.137414,0.090852,0.558907,0.338981,0.089788,0.012324,0.526779,0.337176,0.062637,0.046939,0.615029,0.341875,0.043095,0,1,0,0,0,1,0,0,0,1,0,0,0,0.583724,0.275133,0.054138,0.049858,0.6152,0.29702,0.08778,0,0.476519,0.472908,0.050573,0,0.613966,0.320575,0.065459,0,0.328974,0.273369,0.236526,0.161131,0.639865,0.297067,0.063067,0,0.47213,0.39177,0.097394,0.038705,0.451497,0.416822,0.131681,0,0.716084,0.174372,0.065567,0.043977,0.48407,0.280637,0.095832,0.090906,0.54598,0.289824,0.131417,0.021174,0.494593,0.384435,0.068348,0.052624,0.680382,0.310959,0.00866,0,0.844482,0.130545,0.024973,0,0.616776,0.119423,0.092586,0.087501,0.458796,0.289536,0.129884,0.110442,0.311335,0.255394,0.220524,0.212747,0.667261,0.166795,0.080648,0.061472,0.549483,0.146189,0.130518,0.107913,1,0,0,0,0.574976,0.31829,0.093617,0.013117,0.640707,0.313425,0.043948,0.001921,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.61731,0.245652,0,0,0.621754,0.283963,0,0,0.393095,0.340745,0.147878,0.118281,0.563379,0.367245,0.069376,0,0.474165,0.359198,0.113762,0.052875,0.552316,0.358663,0.066514,0.022506,0.527912,0.346954,0.092923,0.032212,0.674776,0.236444,0.062985,0.025795,0.43535,0.34731,0.136422,0.080918,0.64855,0.233792,0.070936,0.046722,0.65156,0.206465,0.075672,0.066303,0.644135,0.146341,0.130997,0.078528,0.436574,0.388713,0.123562,0.051151,0.618057,0.317874,0.061022,0.003047,0.565916,0.211759,0.1366,0.085725,0.529496,0.283687,0.06486,0.057857,0.511822,0.269681,0.180813,0.028013,0.467773,0.32804,0.140967,0.056674,0.59105,0.17989,0.146431,0.082628,0.521,0.285211,0.081544,0.071772,0.521751,0.234459,0.201647,0.025996,0.4342,0.308616,0.212172,0.038292,0.41995,0.345203,0.16251,0.072337,0.558677,0.214971,0.116636,0.061976,0.671001,0.184636,0.117066,0.015529,0.503754,0.262924,0.180953,0.038967,0.412434,0.324359,0.185356,0.077852,0.515504,0.297964,0.096194,0.081225,0.56057,0.298996,0.083143,0.057291,0.479179,0.337631,0.06735,0.055182,0.498761,0.299376,0.090314,0.088713,0.470361,0.322539,0.107707,0.089344,0.484785,0.326805,0.083511,0.075694,0.593504,0.143428,0.142523,0.115878,0.549351,0.304916,0.097351,0.034054,0.601461,0.254589,0.08709,0.05686,0.671655,0.164496,0.102474,0.061376,0.731135,0.121204,0.118307,0.029354,0.726089,0.136164,0.072887,0.039624,0.625093,0.197795,0.067229,0.049659,0.615812,0.242683,0.079445,0.056614,0.60636,0.247234,0.07587,0.048056,0.575999,0.271724,0.077682,0.032285,0.577216,0.231176,0.121684,0.069441,0.52445,0.287093,0.122447,0.040637,0.544701,0.238851,0.157904,0.058544,0.677255,0.18116,0.078921,0.061293,0.504747,0.32204,0.076651,0.051893,0.604957,0.230155,0.05992,0.043215,0.666779,0.187951,0.061401,0.056226,0.525321,0.290584,0.116853,0.06168,0.558532,0.27597,0.105605,0.059893,0.602854,0.226823,0.089141,0.081183,0.600669,0.239189,0.090391,0.069751,0.470584,0.33958,0.136801,0.041988,0.523436,0.312058,0.117918,0.04652,0.492872,0.301464,0.124012,0.067525,0.410602,0.364539,0.154645,0.044775,0.417404,0.395919,0.156042,0.017705,0.517752,0.332479,0.112523,0.030868,0.433831,0.343546,0.188168,0.025694,0.491026,0.35096,0.127088,0.028872,0.480981,0.337964,0.152212,0.0278,0.444626,0.398314,0.125599,0.017007,0.437491,0.398454,0.119883,0.036264,0.494509,0.351623,0.101851,0.025109,0.507026,0.299048,0.136161,0.054801,0.526216,0.317749,0.087899,0.02931,0.427213,0.404325,0.107043,0.047015,0.537657,0.312759,0.109585,0.039458,0.555422,0.293974,0.104002,0.046601,0.648597,0.197457,0.081653,0.072292,0.581664,0.176375,0.138694,0.096646,0.504638,0.296637,0.116323,0.067191,0.553258,0.222366,0.124142,0.08662,0.416659,0.37761,0.081118,0.067853,0.502222,0.236816,0.132938,0.08198,0.467924,0.290316,0.11132,0.077457,0.471708,0.298223,0.103106,0.078472,0.449951,0.27204,0.219318,0.058691,0.566053,0.197341,0.173385,0.063221,0.450746,0.325903,0.133871,0.067185,0.532355,0.262032,0.109143,0.08662,0.386377,0.365305,0.17336,0.038368,0.591552,0.22344,0.094051,0.090956,0.575227,0.274669,0.096637,0.053467,0.493489,0.356359,0.112364,0.02197,0.483605,0.363203,0.108143,0.022356,0.473843,0.345996,0.094269,0.037927,0.420637,0.392624,0.101139,0.068127,0.535543,0.282405,0.066004,0.051443,0.480034,0.346036,0.071337,0.059428,0.471418,0.346277,0.054382,0.05406,0.57289,0.200947,0.130001,0.069963,0.615831,0.157696,0.117791,0.108682,0.526783,0.287509,0.148658,0.037051,0.555132,0.228707,0.15321,0.052696,0.580575,0.206825,0.100339,0.065314,0.552701,0.230054,0.129,0.088245,0.470039,0.305414,0.158921,0.065626,0.602181,0.144459,0.142723,0.09101,0.726398,0.211165,0.050764,0.011673,0.643026,0.170704,0.095508,0.062514,0.402504,0.29558,0.165474,0.105769,0.62697,0.247979,0,0,0.59458,0.364125,0,0,0.673514,0.326486,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.991213,0.008787,0,0,0.874913,0.074131,0.043255,0.007701,1,0,0,0,0.978811,0.021189,0,0,0.637435,0.303278,0.034517,0.0152,0.561813,0.233971,0.204216,0,0.544447,0.26227,0.091384,0.051231,0.850331,0.113231,0.036437,0,0.542833,0.309322,0.106969,0.02323,0.858874,0.078113,0.063013,0,0.57046,0.193514,0.173734,0.062292,0.539536,0.325362,0.112223,0.022879,0.848755,0.07781,0.073435,0,0.75177,0.095339,0.094933,0.057957,0.783475,0.098142,0.060396,0.057986,0.603066,0.231106,0.085819,0.06294,0.422892,0.281914,0.176889,0.108427,0.651049,0.180668,0.086496,0.065553,0.417738,0.300895,0.162225,0.119142,0.690711,0.277992,0.016104,0.015193,0.874374,0.120791,0.004835,0,0.726666,0.273334,0,0,0.821353,0.178114,0.000533,0,0.643122,0.347043,0.009835,0,0.96396,0.03604,0,0,0.714108,0.285892,0,0,0.888127,0.111873,0,0,0.905313,0.094687,0,0,0.80443,0.19557,0,0,0.795776,0.204224,0,0,0.931291,0.068709,0,0,0.700798,0.28648,0.012722,0,0.79059,0.20941,0,0,0.853778,0.113545,0.032677,0,0.819568,0.089427,0.070585,0.020421,0.824635,0.135401,0.03032,0.009644,0.983273,0.016727,0,0,0.962622,0.037378,0,0,1,0,0,0,0.930967,0.069033,0,0,0.597272,0.29585,0.073001,0.033878,0.47608,0.271248,0.154654,0.091504,0.744058,0.167106,0.078965,0.00987,0.582797,0.278688,0.098368,0.040147,0.779664,0.159828,0.041464,0.019044,0.76765,0.118583,0.065231,0.048536,0.662609,0.307388,0.030003,0,0.728571,0.214522,0.056906,0,0.57063,0.31815,0.081501,0.02972,0.783002,0.192813,0.024185,0,0.864283,0.127016,0.008701,0,0.796831,0.165512,0.037657,0,0.279828,0.255477,0.251257,0.213438,0.45877,0.384183,0.093019,0.064027,0.587114,0.334122,0.053537,0.025227,0.662931,0.303308,0.028092,0.005669,0.849706,0.122918,0.023411,0.003964,0.736429,0.15587,0.064719,0.042982,0.601674,0.15995,0.145739,0.092637,0.756629,0.243371,0,0,1,0,0,0,0.722887,0.166824,0.05651,0.053779,0.966515,0.033485,0,0,0.808814,0.191186,0,0,0.978922,0.021078,0,0,0.507152,0.201767,0.201036,0.082586,0.486016,0.215208,0.159879,0.138896,0.878534,0.101921,0.010473,0.009073,0.696709,0.182998,0.060891,0.059402,1,0,0,0,0.597459,0.23813,0.112637,0.051153,0.584778,0.197631,0.123899,0.093693,0.922299,0.054124,0.023577,0,0.466276,0.398898,0.102676,0.03215,1,0,0,0,0.49565,0.244897,0.161073,0.09838,0.490481,0.28507,0.162868,0.061581,0.431296,0.273249,0.192422,0.083742,0.493589,0.213589,0.204709,0.088113,0.451566,0.256939,0.157802,0.133693,0.388303,0.26959,0.223566,0.08833,0.524873,0.202071,0.18378,0.089276,0.541103,0.252925,0.117239,0.059978,0.569244,0.323976,0.084667,0.022113,0.566582,0.171293,0.158265,0.055604,0.681403,0.145642,0.123669,0.032967,0.423391,0.279709,0.152456,0.14244,0.545261,0.337084,0.09014,0.027515,0.482136,0.264644,0.172039,0.081182,0.480649,0.287642,0.156732,0.074977,0.695749,0.222251,0.049745,0.026988,0.766355,0.184349,0.025094,0.024202,0.784267,0.145643,0.052485,0.017604,0.775569,0.15828,0.040976,0.025176,0.526428,0.246209,0.213687,0.01322,0.764739,0.134944,0.054939,0.040919,0.572746,0.325399,0.078363,0.014275,0.727702,0.111563,0.105163,0.055572,0.573255,0.268971,0.123726,0.034048,0.553066,0.326779,0.073324,0.040818,0.389475,0.261976,0.221379,0.089631,0.623106,0.223132,0.082974,0.070788,0.591276,0.281,0.061594,0.057103,0.679234,0.163208,0.099765,0.04327,0.594316,0.218655,0.187029,0,0.703369,0.222347,0.052996,0.014958,0.690507,0.217611,0.044293,0.036202,0.429413,0.364654,0.116378,0.089555,1,0,0,0,0.64761,0.282961,0.060664,0.008765,0.64202,0.238711,0.063398,0.055871,0.954999,0.035907,0.009094,0,0.835693,0.101979,0.054566,0.007762,0.780704,0.102462,0.079341,0.037493,0.848243,0.077586,0.074171,0,0.829218,0.129004,0.031999,0.009779,0.791781,0.113295,0.049858,0.045066,0.50025,0.254708,0.165774,0.079268,0.547228,0.211143,0.152592,0.058302,0.453217,0.385891,0.107629,0.039369,0.460825,0.304329,0.125773,0.109073,0.545994,0.218945,0.131131,0.072321,0.433833,0.413555,0.107667,0.044945,0.902262,0.097738,0,0,0.756266,0.243734,0,0,0.715213,0.278622,0.006165,0,0.884468,0.115532,0,0,0.952868,0.023927,0.023205,0,0.690942,0.159553,0.114003,0.035503,0.687257,0.119718,0.104967,0.078146,0.749985,0.190515,0.052616,0.006885,0.699827,0.256668,0.043505,0,0.674283,0.137238,0.090386,0.063486,0.502192,0.246845,0.172483,0.07848,0.628426,0.172551,0.103634,0.080484,0.713316,0.162867,0.101676,0.02214,0.754382,0.170942,0.074676,0,0.673537,0.264615,0.061849,0,0.688503,0.200747,0.09207,0.01868,0.641424,0.149882,0.147084,0.06161,0.579122,0.208094,0.135171,0.077613,0.54443,0.214811,0.156637,0.084121,0.620503,0.181717,0.140242,0.057538,0.567446,0.262482,0.104012,0.06606,0.666817,0.331908,0.001275,0,0.452301,0.220606,0.179526,0.14154,0.521692,0.251962,0.108294,0.103919,0.601875,0.209418,0.074013,0.058452,0.695592,0.286661,0.017747,0,0.485395,0.4528,0.042797,0.019008,0.456005,0.448026,0.056991,0.038979,0.680735,0.280612,0.023364,0.01529,0.65704,0.157361,0.129004,0.045767,0.725404,0.274596,0,0,0.373454,0.276049,0.227919,0.122578,0.786215,0.12259,0.091195,0,0.761493,0.099551,0.080167,0.057169,0.5189,0.251521,0.119035,0.110545,0.521021,0.386738,0.075292,0.016949,0.565208,0.164312,0.103063,0.100009,0.382039,0.321431,0.166547,0.115771,0.476926,0.345894,0.091599,0.043272,0.552724,0.268788,0.17147,0.004435,0.473685,0.373116,0.089873,0.063325,0.769765,0.153257,0.075087,0.001891,0.669522,0.216758,0.074235,0.039485,0.789355,0.128393,0.082252,0,0.579836,0.249883,0.072595,0.068216,0.534063,0.262121,0.144982,0.04266,0.314067,0.260513,0.210406,0.102793,0.484506,0.182203,0.152536,0.124291,0.458605,0.307032,0.105012,0.067145,0.466429,0.42498,0.105192,0.003399,0.626175,0.174637,0.130871,0.068317,0.328953,0.289137,0.184862,0.077851,0.586784,0.263342,0.105436,0.044438,0.670108,0.320042,0.00985,0,0.626647,0.362668,0.010685,0,0.637974,0.291926,0.053281,0.016819,0.511934,0.448599,0.039467,0,0.676805,0.323195,0,0,0.666793,0.13785,0.124164,0.037049,0.641987,0.140504,0.13793,0.077882,0.769787,0.080972,0.078066,0.069136,0.689559,0.236946,0.059172,0.014323,0.719407,0.180588,0.100005,0,0.718237,0.199337,0.042689,0.039737,0.752223,0.165742,0.082035,0,0.634292,0.365708,0,0,0.530763,0.416988,0.052249,0,0.768173,0.145991,0.051135,0.034701,0.772713,0.100232,0.070571,0.056484,0.638187,0.237027,0.060708,0.05514,0.655922,0.178368,0.092391,0.06629,0.514357,0.18972,0.153445,0.141651,0.539573,0.366417,0.068669,0.025341,0.509839,0.415818,0.051081,0.023261,0.640266,0.304332,0.024223,0.018614,0.556177,0.301225,0.110232,0.017804,0.708172,0.16379,0.122696,0.005342,0.595509,0.268753,0.107263,0.028474,0.768422,0.167073,0.059991,0.004514,0.579269,0.323707,0.097024,0,0.644873,0.233057,0.08473,0.037339,0.663296,0.215179,0.102775,0.018751,0.483827,0.250761,0.202893,0.038421,0.34299,0.289858,0.279502,0.087649,0.343616,0.265215,0.249144,0.104747,0.364661,0.345919,0.158123,0.063613,0.393761,0.36853,0.136558,0.054827,0.378207,0.31403,0.212207,0.075057,0.42745,0.218218,0.180963,0.173368,0.681807,0.185442,0.087469,0.045282,0.370051,0.339483,0.173797,0.062777,0.393409,0.266462,0.23239,0.081167,0.398292,0.277434,0.226358,0.080418,0.38465,0.337478,0.185077,0.092796,0.423746,0.299895,0.151526,0.124833,0.363094,0.359026,0.153149,0.077269,0.463574,0.309903,0.121779,0.088659,0.512836,0.304751,0.103805,0.078609,0.409428,0.253141,0.212302,0.070661,0.412863,0.299102,0.179692,0.056127,0.417883,0.364846,0.146131,0.056411,0.503426,0.430726,0.065848,0,0.387837,0.348459,0.13571,0.093762,0.561228,0.343016,0.083095,0.012661,0.549064,0.340841,0.060712,0.048005,0.61071,0.354299,0.034991,0,1,0,0,0,1,0,0,0,1,0,0,0,0.611597,0.279043,0.053028,0.038863,0.625248,0.298384,0.076368,0,0.496302,0.47709,0.026608,0,0.610789,0.327991,0.06122,0,0.378108,0.347035,0.174643,0.100214,0.50679,0.294907,0.077276,0.066529,0.679355,0.159405,0.098304,0.062936,0.732953,0.161616,0.105431,0,0.49331,0.196086,0.147938,0.126165,0.58297,0.211898,0.106262,0.085541,0.580537,0.205817,0.158217,0.055429,0.857923,0.058524,0.054455,0.029098,0.59323,0.332453,0.04936,0.024957,0.5339,0.438447,0.022559,0.005093,1,0,0,0,0.579163,0.321569,0.085864,0.013404,0.660946,0.315454,0.0236,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.628399,0.279447,0,0,0.789805,0.115079,0.077573,0.013797,0.765746,0.105051,0.067787,0.058499,0.51633,0.261273,0.113147,0.056066,0.707568,0.132777,0.107414,0.043562,0.659933,0.160381,0.129735,0.041733,0.532844,0.25136,0.146214,0.035709,0.600142,0.216375,0.130215,0.041905,0.469394,0.350875,0.128698,0.040146,0.557989,0.240322,0.100834,0.051939,0.666307,0.131581,0.105194,0.053479,0.688041,0.133227,0.082704,0.070963,0.574519,0.247005,0.079494,0.06941,0.505525,0.267758,0.091514,0.069385]};\nvar costume = {\"_id\":\"costume\",\"materials\":[{\"DbgColor\":15658734,\"DbgName\":\"HM_UniformMaterial\",\"transparent\":false,\"depthWrite\":true,\"wireframe\":false,\"DbgIndex\":0,\"colorEmissive\":[0,0,0],\"depthTest\":true,\"opacity\":1,\"shading\":\"standard\",\"colorSpecular\":[0.5,0.5,0.5],\"visible\":true,\"colorDiffuse\":[1,1,1],\"blending\":\"NormalBlending\"}],\"vertices\":[0,14.1977,0.699724,0,14.5675,1.30002,0,14.0263,-0.218572,0,14.2888,0.918874,-0.19608,14.7798,1.44214,-0.098106,14.0112,-0.140482,-0.143062,14.3851,1.06674,-0.14153,14.2042,0.544963,-0.164025,14.2968,0.892901,-0.319428,14.3009,0.813886,-0.167323,14.5732,1.29111,-0.370676,14.394,0.986033,-0.461344,14.5379,1.1528,-0.763961,14.9077,1.36862,0,14.7639,1.45199,-0.155436,14.1338,0.30693,-0.351925,19.9906,1.85346,-1.08504,21.1618,1.73476,-0.982439,20.5275,1.78303,-0.23553,21.172,1.79826,-0.709043,19.9642,1.80735,-1.03205,21.0556,1.73645,-1.578,20.9794,1.49426,-1.40627,20.4253,1.60682,-0.901807,19.6916,1.70203,-1.15522,17.8846,1.65528,-1.03852,20.7714,1.74141,-1.71108,20.4315,1.3843,-1.08171,18.8797,1.70079,-1.2769,18.3843,1.52361,-0.342664,20.163,1.86188,-0.984258,20.0078,1.73765,-1.18133,20.1013,1.71072,-0.763849,20.0819,1.80566,0,21.1335,1.81391,1.4756,19.41,-1.2445,-1.48204,19.4089,-1.24181,-1.66299,21.7712,1.67701,-1.88316,21.8356,1.50044,-2.37005,22.0113,1.11804,-2.28446,22.4195,1.14963,-1.77828,22.5637,1.31107,-1.21566,22.4626,1.51759,-1.82727,21.9411,1.51774,-1.6958,22.0042,1.57163,-1.52525,21.9998,1.64113,-0.249345,20.9316,1.82793,-0.535867,20.7054,1.85588,-0.755543,21.2917,1.77983,-2.0618,22.1263,1.34224,-1.18642,22.016,1.72192,-1.41688,22.2305,1.59165,-1.76483,22.2704,1.46005,-2.09614,21.4418,1.1579,-2.03862,21.5731,1.33153,-2.27755,21.6595,1.05454,-2.13404,21.7075,1.27389,-1.89778,21.331,1.34728,-1.89444,21.5003,1.45337,-2.17845,21.3396,0.884369,-1.97117,21.1879,1.13416,-1.61362,21.2784,1.57706,-1.67208,21.6098,1.63746,-1.54632,21.099,1.54558,-1.69674,21.4802,1.60022,-1.21112,21.3351,1.75357,-1.46969,21.5205,1.71682,-1.22286,21.5849,1.78468,-1.42261,21.7423,1.7282,-0.933002,21.4395,1.81449,-1.40689,21.8883,1.70723,-1.13711,21.6999,1.79275,-1.77503,21.6184,1.57847,-1.84059,21.6579,1.5374,-2.19958,21.9189,1.25883,-0.230225,21.4077,1.82231,-0.770853,21.5966,1.83293,-0.427494,21.5133,1.81854,-0.776717,22.1075,1.71839,-2.64601,21.7888,-1.67125,-0.371783,21.9528,1.74678,-0.625251,22.3463,1.61269,-1.48096,20.6908,1.54519,-0.592892,21.2062,1.7534,-2.21145,21.2448,0.758527,-2.33017,21.4035,0.594275,-1.9741,21.0681,1.09498,-2.36633,21.5803,0.741672,-1.88296,21.7248,1.50869,-1.53907,21.6294,1.69593,-1.44341,21.6784,1.72641,-0.379287,20.5104,1.8901,-0.835675,20.2441,1.8032,0,19.6475,1.83935,0,20.8067,1.84391,-0.875127,18.1987,1.74873,-0.573107,20.9328,1.79916,-0.578346,19.6521,1.82333,-0.63281,18.8487,1.7853,-0.654239,18.5588,1.80962,-0.301941,14.2441,0.698435,-1.0209,22.6648,1.42912,-0.232383,22.4291,1.5241,0,18.1348,1.89007,-1.04625,26.5494,-0.418135,-0.246895,25.2488,0.467275,-0.743117,25.6379,0.08984,-0.873637,25.9119,0.01809,-0.651425,11.9789,1.03696,-2.56353,11.977,1.5393,-0.293665,11.9177,-0.561412,-0.513301,11.9186,-0.919379,-1.73434,11.9717,-1.35151,-0.216657,11.917,0.47316,-2.01275,11.986,1.7782,-2.54346,14.1332,1.36591,-1.02142,14.2514,1.49695,-2.80168,14.0643,0.832537,-2.00538,14.1346,1.72123,0,16.4797,-1.49642,-0.567738,16.6638,1.87599,-2.35053,17.0627,-0.037418,-1.46328,18.719,-1.00354,-2.22705,17.2945,0.576273,-1.52892,19.1048,-1.10675,-0.723085,20.0652,-1.72815,-2.25783,17.3464,-0.073237,-1.13573,17.1526,-1.31851,-1.34069,17.4785,-1.10066,-0.505374,17.2785,-1.32285,-0.330879,16.5465,-1.56672,-0.692411,17.1413,-1.3595,-0.015253,15.6019,-1.57502,-1.71377,15.7243,-1.73016,-1.87844,15.0221,-1.70272,-2.32685,16.4048,-0.666917,-2.18227,16.738,-0.822012,-1.88242,16.3273,-1.37961,-2.44301,14.5183,-0.966949,-2.14543,15.7331,-1.18636,-2.26249,15.101,-1.16109,-2.52375,15.2198,-0.505287,-2.63577,15.7233,0.02311,-2.45965,16.6497,-0.001519,-2.68893,14.8772,0.713733,-1.94354,16.2912,1.30668,-2.34202,16.5907,0.608787,-2.26461,17.0265,0.596556,-2.001,17.4143,1.14544,-2.03384,16.8596,1.15835,-2.64252,14.5077,-0.518568,-2.12677,14.3398,-1.41857,-2.33532,13.821,-1.09598,-0.617975,13.5998,-1.03018,-0.036417,14.6224,-1.30202,-0.450898,16.1465,1.78621,-1.46818,16.508,1.56976,-1.16135,15.9758,1.59533,-1.79228,16.6786,1.37655,-1.58196,16.8593,1.48031,-1.7878,16.1883,1.41294,-1.65071,16.4032,1.48071,-1.27469,15.9375,1.56379,-0.166056,13.9562,-0.040084,-0.305832,13.7974,-0.600653,-0.262313,14.0155,-1.14279,-0.20971,15.3895,1.68569,-1.07769,15.639,1.54001,-1.45217,15.5682,1.54358,-1.66219,15.5578,1.52052,-1.59456,14.8717,1.61055,-1.20744,14.9693,1.52042,-0.654206,14.8999,1.36054,-2.14586,16.446,1.09933,-2.90329,13.9164,0.200875,-0.529937,14.4842,1.15064,-2.80438,14.6526,0.152296,-2.59642,15.5994,0.760687,-1.10947,13.5398,-1.35016,-0.566704,16.5508,-1.63376,-0.207296,15.6691,-1.74012,-0.605077,14.0028,-1.52678,-0.293341,14.6694,-1.67655,-1.5915,13.5874,-1.38421,-1.01227,16.5456,-1.68269,-0.652005,15.667,-1.93446,-1.16345,14.0606,-1.74133,-1.90703,18.6654,-0.541111,-2.61048,13.9518,-0.771692,-1.86356,19.3577,-1.04085,-1.48484,20.0102,-1.60989,-2.05902,20.0115,-1.19292,-2.08491,19.251,-0.62772,-2.25977,19.794,0.48016,-2.36344,20.3566,0.328875,-1.82976,19.58,1.22432,-1.26917,19.0646,1.5799,-2.17227,18.5082,0.369675,-1.03859,16.6085,1.73803,-2.33495,19.7678,-0.064845,-2.15085,18.6002,0.013981,-2.21573,19.2114,-0.084743,-2.20258,19.1705,0.177802,-1.40901,18.0095,-0.978814,-1.93098,17.9248,-0.632077,-2.22052,17.7678,0.706799,-2.20885,17.8506,-0.084435,-0.6256,17.9427,1.87481,-1.79484,17.7378,1.3866,-1.96908,18.5319,0.911696,-1.25618,17.4364,1.6819,-0.607536,17.4609,1.92147,-1.69947,18.5411,1.2287,-2.43395,20.2745,-0.098139,-0.650079,18.592,-1.27818,-0.585684,19.5803,-1.57048,-0.567209,19.1847,-1.44601,-0.586007,17.9148,-1.19995,-2.08757,18.1744,0.885431,-1.84674,18.1544,1.2053,-0.881969,15.5426,1.54833,-1.99392,13.6618,-1.27507,-1.48343,16.4779,-1.59934,-1.23388,15.7049,-1.95211,-1.66664,14.1989,-1.69019,-1.37534,14.8729,-1.95128,-0.783235,14.738,-1.92898,-1.92712,17.3743,-0.775204,-1.84891,17.0085,-1.06716,-1.54077,17.0809,-1.22966,-2.10714,19.3066,0.751457,-1.47866,19.3151,1.46664,-1.8457,18.8828,1.0883,-1.61224,20.0559,1.47285,-1.15522,19.6896,1.66624,-2.03823,18.8308,0.740196,-2.40527,14.9425,1.3057,-2.19851,15.5863,1.31397,-1.88501,15.5623,1.4655,-1.98477,14.9277,1.60844,-1.47785,14.1012,1.67693,-2.68145,22.1626,0.767189,-1.31305,22.4074,-2.3036,-2.33379,23.0253,0.848435,-2.03008,24.1895,-0.079951,-1.26488,23.0087,-2.30548,-1.02193,24.0822,-2.06968,-1.20336,23.5723,-2.19253,-2.60988,22.367,0.910908,-2.40468,22.7845,0.964147,-2.78766,22.6899,0.713779,-2.79289,22.2927,0.629245,-2.65088,21.7923,0.334624,-2.53329,21.287,-1.50859,-2.78156,21.3011,-0.868295,-2.78268,21.7396,-0.17161,-1.73117,23.9956,-1.96594,-2.50341,23.3067,0.580133,-1.60887,24.7332,-1.14117,-2.49282,21.3321,0.220639,-1.25068,21.8319,-2.24827,-2.17201,23.8719,0.20203,-2.18656,24.3601,-1.64802,-2.1026,24.6099,-1.05289,-2.37676,22.9151,-2.1605,-2.13478,21.6987,-2.05463,-0.966,25.9568,-0.338158,0,22.5007,-2.19353,0,26.3907,-1.43843,0,24.8043,0.413506,0,24.9339,-1.54641,0,23.4449,-2.1081,-1.73286,22.8153,1.17455,-0.445223,23.0757,1.17012,-0.786686,24.0996,0.311044,-0.970266,25.0809,-0.667661,-2.28304,19.8592,-0.70303,-1.17006,21.2193,-2.1076,-1.04406,20.6507,-1.95197,-0.453459,23.365,0.949517,-1.37878,23.6387,0.654759,-1.25529,24.0075,0.342937,-1.75336,23.6012,0.565396,-1.18162,24.1459,0.149514,-0.806726,24.3564,0.053209,-1.2438,24.647,-0.689921,-1.58414,24.6051,-0.731619,-1.05187,24.2698,-0.02988,-0.265032,24.3275,-1.86836,-0.735803,25.2764,-1.2777,-1.06066,24.8282,-0.723742,-0.593546,24.6155,0.1748,-0.558188,26.0584,-1.28071,-0.878269,25.9161,-0.827913,-0.874832,25.5019,-0.209824,-0.866371,25.7648,-0.857606,-0.942549,25.9226,-0.622335,-0.801755,25.1918,-0.102297,-0.830989,22.8787,1.30875,-1.5458,23.0115,1.08919,-0.313849,23.7794,0.617,-0.599096,25.2922,0.101008,-0.3259,23.9089,0.502389,-0.412728,24.1394,0.354178,-0.809265,26.4058,-1.14997,-0.973597,26.4289,-0.826722,-0.946084,25.8081,-0.29938,-0.639601,25.7997,-1.21944,-0.458015,26.4187,-1.39458,-1.99803,23.2254,0.812878,-1.47463,23.2391,0.942362,-0.827097,23.3491,0.959663,-0.844327,23.1167,1.13366,-0.41644,22.7545,1.37751,-0.447271,23.6042,0.783412,-0.848672,23.9954,0.481378,-0.908312,23.6779,0.732409,-0.771394,24.2256,0.141446,-0.495321,24.421,0.262867,-0.389374,24.9427,0.245928,-0.208972,24.4188,0.30383,-0.105787,24.826,0.400082,-0.907498,25.4511,-0.795735,-0.57926,25.4843,-1.3052,-1.65633,20.3644,-1.6801,-1.035,24.576,-1.77378,-1.20692,24.8719,-1.24091,-1.02451,24.9953,-1.18526,-0.839809,24.9519,-1.4966,-1.00044,24.8033,-1.59922,-1.41077,24.5578,-1.72909,-0.403464,25.1194,-1.4662,-2.36999,20.8629,0.345363,-2.26125,20.4562,0.613776,-2.14971,20.4663,0.81876,-2.0013,20.3049,1.04509,-2.09602,20.0299,0.883286,-2.53709,20.8684,-0.109872,-2.34833,20.8681,-1.43984,-1.95978,21.0424,-1.84317,-2.42192,20.3173,-0.811658,-2.1766,20.45,-1.34112,-1.82554,20.6988,-1.76042,-0.265643,24.5984,-1.72534,-2.60621,20.8187,-0.850358,-3.03866,22.031,-0.87162,-2.02355,24.5453,-0.710018,-2.90912,22.8239,0.556796,-0.150258,11.9049,-0.198328,-2.24827,12.0074,-1.03864,-2.53518,12.0181,-0.77506,-1.9889,24.4444,-0.474635,-2.78309,22.1284,-1.76519,-2.22698,24.0137,-1.92264,-2.99325,22.311,-0.110527,0,22.6948,1.34333,0,25.6435,-1.3823,0,14.639,-1.28291,0,14.0526,-0.707719,0,19.293,-1.46318,0,16.8595,-1.44423,0,17.4653,1.96336,0,24.2029,-1.87327,0,26.0473,-1.37249,0,24.3383,0.320957,0,21.2593,-2.02836,0,16.1721,1.82545,0,15.3887,1.6973,0,20.6363,-1.88232,0,23.0092,-2.16285,-0.137954,11.9132,0.156694,-3.3845,22.6576,-1.29367,-3.35879,23.2428,0.172488,-3.02832,21.9814,-1.14327,-2.61433,24.5069,-0.371808,-2.66527,24.6197,-0.878076,-3.70072,24.6049,-0.723353,-3.89978,22.625,-1.17952,-3.09046,23.0076,-1.8617,-2.32247,23.2935,-2.1443,-4.05489,23.6124,-1.82204,-2.74051,24.484,-1.39448,-5.8223,23.0924,0.130173,-7.04006,23.4227,0.277,-6.88801,22.943,0.020611,-6.93663,22.8326,-0.857357,-7.51506,22.7295,-0.53756,-7.5504,22.985,-1.04284,-8.36229,23.0172,-0.710829,-8.07676,22.7193,-0.397733,-11.1771,22.9995,1.13555,-11.37,23.2473,0.811927,-10.6909,23.2144,1.65099,-10.6286,23.461,1.79986,-10.642,23.5957,1.82984,-10.6856,23.7663,1.80679,-10.7846,23.9395,1.7108,-11.1861,24.0165,1.23897,-11.3226,23.6647,0.767432,-10.86,23.2158,0.725992,-10.8231,23.0968,1.13346,-5.01669,24.0413,-1.44437,-5.25519,23.8223,-1.62123,-5.78619,23.4815,-1.5591,-3.30832,23.0118,-0.186523,-7.58045,23.3269,-1.141,-7.0475,23.9844,0.050877,-11.026,24.0402,1.43308,-3.01833,23.4936,0.412517,-6.92289,22.9731,-1.12742,-6.88012,23.2201,-1.29733,-6.2474,22.7345,-0.714972,-2.64782,24.2384,-0.004957,-3.73584,24.5639,-1.07206,-4.47146,24.2786,-1.11294,-10.7588,23.0623,1.45905,-7.99705,22.6666,-0.061346,-6.8506,22.7732,-0.477135,-6.22126,22.8168,-0.300267,-2.57502,23.8898,0.218926,-3.57277,23.8365,0.268856,-3.75678,23.6422,0.189555,-3.8499,23.1459,-0.190557,-3.51376,24.5366,-0.327576,-3.49063,24.3668,-0.050231,-4.53221,24.0499,-0.068049,-4.66923,24.2931,-0.665617,-4.70253,24.2421,-0.371196,-5.79621,23.9317,0.126158,-6.84962,24.1749,-0.427295,-6.81897,24.0466,-0.146211,-7.62975,24.1096,-0.684432,-7.23449,24.2061,-0.105479,-7.62036,23.8345,-0.895543,-8.31481,23.9837,-0.59277,-8.21593,24.1583,-0.34772,-8.38596,23.622,-0.798559,-11.3052,23.8486,0.92794,-7.11713,22.7318,-0.309655,-7.8102,22.8695,0.370406,-5.76074,23.5034,0.315614,-7.84144,24.0652,0.369266,-7.62855,23.4636,0.446464,-7.73076,23.7366,0.473622,-7.16471,23.7081,0.209521,-8.0162,24.2334,0.05798,-7.41306,24.2512,-0.405214,-6.96823,24.1503,-0.6648,-6.85603,23.5219,-1.277,-6.82194,23.9771,-0.957801,-4.04805,23.1321,-1.70137,-3.31251,22.818,-1.56424,-3.90074,23.9881,-1.7516,-3.08493,23.9579,-1.88585,-3.30483,22.6868,-0.796003,-3.75331,22.8021,-0.627408,-2.98749,12.0206,0.151115,-2.2858,1.96104,-0.391316,-1.69655,2.05391,0.141781,-1.34532,2.47941,-0.285813,-2.36036,1.4041,-0.382204,-2.26236,1.4868,-0.151782,-1.66056,1.72085,0.234449,-1.41801,1.87643,-0.087788,-1.33163,1.93831,-0.362868,-1.3385,2.03901,-0.588612,-1.09142,7.3667,0.274953,-2.31161,7.16387,-1.33163,-2.63417,7.30606,-0.683002,-2.79295,6.33568,-0.603303,-2.01428,6.56306,-1.67692,-2.46337,6.4759,-1.45539,-2.7359,6.43097,-1.04244,-2.67644,5.18842,-1.1205,-2.36471,4.91693,-1.47579,-1.96017,4.85309,-1.60559,-0.88855,6.337,-0.39298,-0.787991,5.24245,-1.12789,-1.07874,6.46414,-1.33317,-0.876372,6.41658,-1,-1.47575,4.84876,-1.5348,-1.14232,4.7565,-1.38749,-2.15771,1.57416,0.074912,-1.94549,2.02901,0.13493,-2.03796,2.01842,0.076616,-2.03653,1.63976,0.203826,-1.24596,1.55104,-0.515372,-2.40558,1.36857,-0.560066,-2.37227,1.31863,-0.742205,-2.25106,1.28437,-0.847753,-1.97124,1.25833,-1.0377,-1.35578,1.67235,-0.066896,-1.31988,1.78039,-0.37549,-1.32792,1.70006,-0.568316,-1.3596,6.86815,0.287459,-2.65064,6.37725,-0.165017,-2.59655,7.21573,-0.238901,-1.49559,1.41006,-1.10941,-2.17858,1.9968,-0.090703,-1.46435,6.51816,-1.60806,-1.49589,7.05695,-1.47585,-1.82105,1.30942,-1.1733,-1.63453,1.36522,-1.20455,-1.36673,1.43082,-0.896738,-2.28182,1.74785,-0.69782,-1.66951,1.76308,-1.15008,-1.79809,1.75863,-1.14162,-1.89175,1.75228,-1.09327,-1.52125,1.79278,-1.06602,-1.40753,2.01336,-0.883166,-1.89471,1.685,0.26668,-0.803487,11.9242,-1.21474,-1.22439,11.9345,-1.37127,-2.87145,12.0302,-0.341876,-2.46,8.53317,-0.288567,-2.09408,9.17191,-0.948151,-2.37534,9.17401,-0.55432,-2.48336,9.11677,-0.214095,-0.71941,8.84736,0.355759,-2.06984,8.19754,0.743012,-2.04116,9.1702,0.90189,-1.46304,9.11494,1.05093,-1.23865,8.94499,0.985528,-2.34005,7.79094,0.280551,-1.95087,7.04389,0.450892,-1.71909,7.62293,0.709858,-1.40052,7.63744,0.608417,-1.4785,8.14199,0.868262,-1.29769,8.61192,0.960876,-0.82438,8.72901,0.500871,-2.5127,7.90811,-0.149976,-2.34933,7.11313,0.189084,-1.27339,7.67303,-1.18328,-1.91211,8.39547,-1.10503,-1.96728,7.10017,-1.52564,-1.13945,6.99095,-1.23011,-1.93147,7.58971,-1.35136,-2.47848,7.88552,-0.652508,-2.32158,8.46983,-0.64382,-2.38111,7.77615,-0.95107,-2.53372,7.28772,-1.01645,-0.96908,6.96392,-0.974057,-1.83192,9.17043,1.01453,-2.27355,9.03466,0.489661,-0.922111,8.85644,0.760505,-0.957993,8.60262,0.659787,-1.66263,7.00315,0.456557,-0.687358,8.30246,0.256477,-0.765298,8.93811,-0.818293,-1.1574,9.12964,-1.04529,-0.898474,8.20249,-0.837879,-1.00038,7.40426,-0.908459,-1.17044,8.34469,-1.01434,-2.39064,8.61126,0.161986,-0.970763,8.23045,0.566436,-1.65428,9.14912,-1.12953,-0.54596,8.80471,-0.02916,-0.904007,7.40354,-0.204323,-0.590772,8.17991,-0.248759,-0.983618,6.86785,-0.268839,-2.106,7.70521,0.619131,-1.85909,8.14211,0.880213,-2.96685,12.0064,0.956726,-1.09677,12.0005,1.45538,-1.03391,26.4542,-0.17609,-0.955143,26.1279,-0.045635,0,25.1959,0.563747,-0.445455,25.373,0.32963,0.19608,14.7798,1.44214,0.098105,14.0112,-0.140482,0.143062,14.3851,1.06674,0.14153,14.2042,0.544963,0.164025,14.2968,0.892901,0.319427,14.3009,0.813886,0.167323,14.5732,1.29111,0.370676,14.394,0.986033,0.461344,14.5379,1.1528,0.76396,14.9077,1.36862,0,14.3894,1.0867,0.155436,14.1338,0.30693,0,18.8318,1.85131,0.351925,19.9906,1.85346,1.08501,21.1619,1.73477,0.982439,20.5275,1.78303,0.23553,21.172,1.79826,0.709043,19.9642,1.80735,1.03201,21.0556,1.73646,1.58097,20.9796,1.49859,1.40626,20.4253,1.60682,0.901807,19.6916,1.70203,1.15522,17.8846,1.65528,1.03852,20.7714,1.74141,1.71108,20.4315,1.3843,1.08171,18.8797,1.70079,1.2769,18.3843,1.52361,0.342664,20.163,1.86188,0.984258,20.0078,1.73765,1.18133,20.1013,1.71072,0.763848,20.0819,1.80566,-0.000001,21.3784,1.80587,1.66299,21.7712,1.67701,1.88316,21.8356,1.50044,2.37005,22.0113,1.11804,2.28446,22.4195,1.14963,1.77828,22.5637,1.31107,1.21566,22.4626,1.51759,1.82727,21.9411,1.51774,1.6958,22.0042,1.57163,1.52525,21.9998,1.64113,0.249345,20.9316,1.82793,0.535866,20.7054,1.85588,0.755543,21.2917,1.77983,2.0618,22.1263,1.34224,1.18642,22.016,1.72192,1.41688,22.2305,1.59165,1.76483,22.2704,1.46005,2.09614,21.4418,1.1579,2.03862,21.5731,1.33153,2.27755,21.6595,1.05454,2.13404,21.7075,1.27389,1.89778,21.331,1.34728,1.89444,21.5003,1.45337,2.17845,21.3396,0.884369,1.97117,21.1879,1.13416,1.61362,21.2784,1.57706,1.67207,21.6098,1.63746,1.54687,21.0995,1.5468,1.69674,21.4802,1.60022,1.21112,21.3351,1.75357,1.46969,21.5205,1.71682,1.22286,21.5849,1.78468,1.42261,21.7423,1.7282,0.933002,21.4395,1.81449,1.40689,21.8883,1.70723,1.13711,21.6999,1.79275,1.77503,21.6184,1.57847,1.84059,21.6579,1.5374,2.19958,21.9189,1.25883,0.230226,21.4077,1.82231,0.770853,21.5966,1.83293,0.427493,21.5133,1.81854,0.776717,22.1075,1.71839,2.6343,21.7851,-1.68319,0.371783,21.9528,1.74678,0.625251,22.3463,1.61269,1.48096,20.6908,1.54519,0.592892,21.2062,1.7534,2.21145,21.2448,0.758527,2.33017,21.4035,0.594275,1.97409,21.0681,1.09498,2.36633,21.5803,0.741672,1.88296,21.7248,1.50869,1.53907,21.6294,1.69593,1.44341,21.6784,1.72641,0.379287,20.5104,1.8901,0.835675,20.2441,1.8032,0,19.9875,1.84081,0,20.5096,1.87482,0,20.1914,1.85448,0,19.11,1.82061,0.875127,18.1987,1.74873,0.573107,20.9328,1.79916,0.578346,19.6521,1.82333,0.63281,18.8487,1.7853,0.654239,18.5588,1.80962,0.301941,14.2441,0.698435,1.0209,22.6648,1.42912,0.232382,22.4291,1.5241,1.04625,26.5494,-0.418135,0.246895,25.2488,0.467275,0.743117,25.6379,0.08984,0.873637,25.9119,0.01809,0.651425,11.9789,1.03696,2.56353,11.977,1.5393,0.293665,11.9177,-0.561412,0.513301,11.9186,-0.919379,1.73434,11.9717,-1.35151,0.216657,11.917,0.47316,2.01275,11.986,1.7782,2.54346,14.1332,1.36591,1.02142,14.2514,1.49695,2.80167,14.0643,0.832537,2.00538,14.1346,1.72123,0,19.6258,-1.57309,0,17.8658,-1.20325,0.567738,16.6638,1.87599,2.35053,17.0627,-0.037418,1.46328,18.719,-1.00354,2.22705,17.2945,0.576273,1.52892,19.1048,-1.10675,0.723085,20.0652,-1.72815,2.25783,17.3464,-0.073237,1.13573,17.1526,-1.31851,1.34069,17.4785,-1.10066,0.505374,17.2785,-1.32285,0.330878,16.5465,-1.56672,0.692411,17.1413,-1.3595,0.015253,15.6019,-1.57502,1.71377,15.7243,-1.73016,1.87844,15.0221,-1.70272,2.32685,16.4048,-0.666917,2.18227,16.738,-0.822012,1.88242,16.3273,-1.37961,2.44301,14.5183,-0.966949,2.14543,15.7331,-1.18636,2.26249,15.101,-1.16109,2.52375,15.2198,-0.505287,2.63577,15.7233,0.02311,2.45965,16.6497,-0.001519,2.68893,14.8772,0.713733,1.94354,16.2912,1.30668,2.34202,16.5907,0.608787,2.26461,17.0265,0.596556,2.001,17.4143,1.14544,2.03384,16.8596,1.15835,2.64252,14.5077,-0.518568,2.12677,14.3398,-1.41857,2.33532,13.821,-1.09598,0.617975,13.5998,-1.03018,0.036417,14.6224,-1.30202,0.450898,16.1465,1.78621,1.46818,16.508,1.56976,1.16135,15.9758,1.59533,1.79228,16.6786,1.37655,1.58196,16.8593,1.48031,1.7878,16.1883,1.41294,1.65071,16.4032,1.48071,1.27469,15.9375,1.56379,0.166056,13.9562,-0.040084,0.305832,13.7974,-0.600653,0.262313,14.0155,-1.14279,0.20971,15.3895,1.68569,1.07769,15.639,1.54001,1.45217,15.5682,1.54358,1.66219,15.5578,1.52052,1.59456,14.8717,1.61055,1.20744,14.9693,1.52042,0.654206,14.8999,1.36054,2.14585,16.446,1.09933,2.90329,13.9164,0.200875,0.529937,14.4842,1.15064,2.80438,14.6526,0.152296,2.59642,15.5994,0.760687,1.10947,13.5398,-1.35016,0.566704,16.5508,-1.63376,0.207296,15.6691,-1.74012,0.605077,14.0028,-1.52678,0.293341,14.6694,-1.67655,1.5915,13.5874,-1.38421,1.01227,16.5456,-1.68269,0.652005,15.667,-1.93446,1.16345,14.0606,-1.74133,1.90703,18.6654,-0.541111,2.61047,13.9518,-0.771692,1.86356,19.3577,-1.04085,1.48484,20.0102,-1.60989,2.05902,20.0115,-1.19292,2.08491,19.251,-0.62772,2.25977,19.794,0.48016,2.36344,20.3566,0.328875,1.82976,19.58,1.22432,1.26917,19.0646,1.5799,2.17227,18.5082,0.369675,1.03859,16.6085,1.73803,2.33495,19.7678,-0.064845,2.15085,18.6002,0.013981,2.21573,19.2114,-0.084743,2.20258,19.1705,0.177802,1.40901,18.0095,-0.978814,1.93098,17.9248,-0.632077,2.22052,17.7678,0.706799,2.20885,17.8506,-0.084435,0.6256,17.9427,1.87481,1.79484,17.7378,1.3866,1.96908,18.5319,0.911696,1.25618,17.4364,1.6819,0.607536,17.4609,1.92147,1.69947,18.5411,1.2287,2.43395,20.2745,-0.098139,0.650079,18.592,-1.27818,0.585683,19.5803,-1.57048,0.567209,19.1847,-1.44601,0.586007,17.9148,-1.19995,2.08757,18.1744,0.885431,1.84674,18.1544,1.2053,0.881969,15.5426,1.54833,1.99392,13.6618,-1.27507,1.48343,16.4779,-1.59934,1.23388,15.7049,-1.95211,1.66664,14.1989,-1.69019,1.37534,14.8729,-1.95128,0.783235,14.738,-1.92898,1.92712,17.3743,-0.775204,1.84891,17.0085,-1.06716,1.54077,17.0809,-1.22966,2.10714,19.3066,0.751457,1.47866,19.3151,1.46664,1.8457,18.8828,1.0883,1.61224,20.0559,1.47285,1.15522,19.6896,1.66624,2.03823,18.8308,0.740196,2.40527,14.9425,1.3057,2.19851,15.5863,1.31397,1.88501,15.5623,1.4655,1.98477,14.9277,1.60844,1.47785,14.1012,1.67693,2.68145,22.1626,0.767189,1.31305,22.4074,-2.3036,2.33379,23.0253,0.848435,2.03008,24.1895,-0.079951,1.26488,23.0087,-2.30548,1.02193,24.0822,-2.06968,1.20336,23.5723,-2.19253,2.60988,22.367,0.910908,2.40468,22.7845,0.964147,2.78766,22.6899,0.713779,2.79289,22.2927,0.629245,2.64974,21.7891,0.333347,2.53329,21.287,-1.50859,2.78156,21.3011,-0.868295,2.72877,21.7523,-0.188618,1.73117,23.9956,-1.96594,2.50341,23.3067,0.580133,1.60887,24.7332,-1.14117,2.4935,21.3326,0.219207,1.25068,21.8319,-2.24827,2.17201,23.8719,0.20203,2.18656,24.3601,-1.64802,2.1026,24.6099,-1.05289,2.37676,22.9151,-2.1605,2.13478,21.6987,-2.05463,0.965999,25.9568,-0.338158,0,23.0426,1.14935,0,23.7183,0.539687,1.73286,22.8153,1.17455,0.445222,23.0757,1.17012,0.786686,24.0996,0.311044,0.970266,25.0809,-0.667661,2.28304,19.8592,-0.70303,1.17006,21.2193,-2.1076,1.04406,20.6507,-1.95197,0.453458,23.365,0.949517,1.37878,23.6387,0.654759,1.25529,24.0075,0.342937,1.75336,23.6012,0.565396,1.18162,24.1459,0.149514,0.806726,24.3564,0.053209,1.2438,24.647,-0.689921,1.58414,24.6051,-0.731618,1.05187,24.2698,-0.02988,0.265032,24.3275,-1.86836,0.735803,25.2764,-1.2777,1.06066,24.8282,-0.723742,0.593546,24.6155,0.1748,0.558188,26.0584,-1.28071,0.878269,25.9161,-0.827913,0.874832,25.5019,-0.209824,0.866371,25.7648,-0.857606,0.942549,25.9226,-0.622335,0.801755,25.1918,-0.102297,0.830989,22.8787,1.30875,1.5458,23.0115,1.08919,0.313849,23.7794,0.617,0.599096,25.2922,0.101009,0.3259,23.9089,0.502389,0.412728,24.1394,0.354178,0.809265,26.4058,-1.14997,0.973597,26.4289,-0.826722,0.946084,25.8081,-0.29938,0.639601,25.7997,-1.21944,0.458015,26.4187,-1.39458,1.99803,23.2254,0.812877,1.47463,23.2391,0.942361,0.827096,23.3491,0.959663,0.844326,23.1167,1.13366,0.416439,22.7545,1.37751,0.44727,23.6042,0.783412,0.848672,23.9954,0.481378,0.908311,23.6779,0.732409,0.771394,24.2256,0.141446,0.495321,24.421,0.262867,0.389374,24.9427,0.245928,0.208972,24.4188,0.30383,0.105787,24.826,0.400082,0.907498,25.4511,-0.795735,0.57926,25.4843,-1.3052,1.65633,20.3644,-1.6801,1.035,24.576,-1.77378,1.20692,24.8719,-1.24091,1.02451,24.9953,-1.18526,0.839809,24.9519,-1.4966,1.00044,24.8033,-1.59922,1.41077,24.5578,-1.72909,0.403464,25.1193,-1.4662,2.36999,20.8629,0.345363,2.26125,20.4562,0.613776,2.14971,20.4663,0.81876,2.0013,20.3049,1.04509,2.09602,20.0299,0.883286,2.53709,20.8684,-0.109872,2.34833,20.8681,-1.43984,1.95978,21.0424,-1.84317,2.42192,20.3173,-0.811658,2.1766,20.45,-1.34112,1.82554,20.6988,-1.76042,0.265643,24.5984,-1.72534,2.60621,20.8187,-0.850358,3.03866,22.031,-0.871619,2.02355,24.5453,-0.710018,2.90912,22.8239,0.556796,0.150257,11.9049,-0.198328,2.24827,12.0074,-1.03864,2.53518,12.0181,-0.77506,1.9889,24.4444,-0.474635,2.78309,22.1284,-1.76519,2.22698,24.0137,-1.92264,3.07809,22.2673,-0.086941,0,15.5949,-1.58626,0,16.6721,1.91662,0.000003,18.6157,-1.29768,0,25.3696,-1.41718,0,21.8619,-2.11832,0,23.8213,-2.02064,0,23.3902,0.85387,0,24.0627,0.324657,0,20.0942,-1.69415,0,24.5925,-1.71419,0.137954,11.9132,0.156694,3.3845,22.6576,-1.29367,3.35879,23.2428,0.172488,3.02832,21.9814,-1.14327,2.61433,24.5069,-0.371808,2.66527,24.6197,-0.878076,3.70072,24.6049,-0.723353,3.89978,22.625,-1.17952,3.09046,23.0076,-1.8617,2.32247,23.2935,-2.1443,4.05489,23.6124,-1.82204,2.74051,24.484,-1.39448,5.8223,23.0924,0.130173,7.04006,23.4227,0.277,6.88801,22.943,0.020611,6.93663,22.8326,-0.857357,7.51506,22.7295,-0.537559,7.5504,22.985,-1.04284,8.3623,23.0172,-0.710829,8.07676,22.7193,-0.397733,11.1771,22.9995,1.13555,11.37,23.2473,0.811927,10.6909,23.2144,1.65099,10.6286,23.461,1.79986,10.642,23.5957,1.82984,10.6856,23.7663,1.80679,10.7846,23.9395,1.7108,11.1861,24.0165,1.23897,11.3226,23.6647,0.767433,10.86,23.2158,0.725992,10.8231,23.0968,1.13346,5.01669,24.0413,-1.44437,5.25519,23.8223,-1.62123,5.78619,23.4815,-1.5591,3.30832,23.0118,-0.186523,7.58045,23.3269,-1.141,7.0475,23.9844,0.050877,11.026,24.0402,1.43308,3.01833,23.4936,0.412518,6.92289,22.9731,-1.12742,6.88012,23.22,-1.29733,6.2474,22.7345,-0.714972,2.64782,24.2384,-0.004957,3.73584,24.5639,-1.07206,4.47146,24.2786,-1.11294,10.7588,23.0623,1.45905,7.99705,22.6667,-0.061346,6.8506,22.7732,-0.477135,6.22126,22.8168,-0.300267,2.57502,23.8898,0.218926,3.57277,23.8365,0.268856,3.75678,23.6422,0.189555,3.8499,23.1459,-0.190557,3.51376,24.5366,-0.327576,3.49063,24.3668,-0.050231,4.53221,24.0499,-0.068049,4.66923,24.2931,-0.665617,4.70253,24.2421,-0.371196,5.79621,23.9317,0.126158,6.84962,24.1749,-0.427295,6.81897,24.0466,-0.146211,7.62975,24.1096,-0.684432,7.23449,24.2061,-0.105478,7.62036,23.8345,-0.895542,8.31481,23.9837,-0.59277,8.21593,24.1583,-0.34772,8.38596,23.622,-0.798559,11.3052,23.8486,0.92794,7.11713,22.7318,-0.309655,7.8102,22.8695,0.370406,5.76074,23.5034,0.315615,7.84144,24.0652,0.369267,7.62855,23.4636,0.446465,7.73076,23.7366,0.473622,7.16471,23.7081,0.209521,8.0162,24.2334,0.05798,7.41306,24.2512,-0.405214,6.96823,24.1503,-0.6648,6.85603,23.5219,-1.277,6.82194,23.9771,-0.9578,4.04805,23.1321,-1.70137,3.31251,22.818,-1.56424,3.90074,23.9881,-1.7516,3.08493,23.9579,-1.88585,3.30483,22.6868,-0.796003,3.75331,22.8021,-0.627408,2.98749,12.0206,0.151115,2.2858,1.96104,-0.391316,1.69655,2.05391,0.141781,1.34532,2.47941,-0.285813,2.33373,1.43275,-0.384588,2.25536,1.51817,-0.158272,1.6562,1.70356,0.24359,1.41801,1.87643,-0.087788,1.33163,1.93831,-0.362868,1.3385,2.03901,-0.588612,1.09142,7.3667,0.274953,2.31161,7.16387,-1.33163,2.63416,7.30606,-0.683002,2.79295,6.33568,-0.603303,2.01428,6.56306,-1.67692,2.46337,6.4759,-1.45539,2.7359,6.43097,-1.04244,2.67644,5.18842,-1.1205,2.36471,4.91693,-1.47579,1.96017,4.85309,-1.60559,0.888549,6.337,-0.39298,0.787991,5.24245,-1.12789,1.07874,6.46414,-1.33317,0.876372,6.41658,-1,1.47575,4.84876,-1.5348,1.14232,4.7565,-1.38749,2.16002,1.59296,0.066017,1.94549,2.02901,0.13493,2.03795,2.01842,0.076616,2.03614,1.63972,0.204146,1.25937,1.55304,-0.501861,2.40326,1.37953,-0.562418,2.37204,1.31862,-0.742546,2.25106,1.28437,-0.847753,1.97124,1.25833,-1.0377,1.35561,1.67205,-0.067164,1.31988,1.78039,-0.37549,1.32792,1.70006,-0.568316,1.35959,6.86814,0.287459,2.65064,6.37725,-0.165017,2.59655,7.21573,-0.238901,1.4943,1.38664,-1.11509,2.17858,1.9968,-0.090703,1.46435,6.51816,-1.60806,1.49589,7.05695,-1.47585,1.82165,1.30943,-1.17298,1.64422,1.36597,-1.20846,1.34624,1.40573,-0.880278,2.28182,1.74785,-0.69782,1.66951,1.76308,-1.15008,1.79809,1.75863,-1.14162,1.89175,1.75228,-1.09327,1.52125,1.79278,-1.06602,1.40753,2.01336,-0.883166,1.89156,1.68272,0.264742,0.803487,11.9242,-1.21474,1.22439,11.9345,-1.37127,2.87145,12.0302,-0.341876,2.46,8.53317,-0.288567,2.09408,9.17191,-0.948151,2.37534,9.17401,-0.55432,2.48336,9.11677,-0.214095,0.71941,8.84736,0.355759,2.06984,8.19754,0.743012,2.04116,9.1702,0.90189,1.46304,9.11494,1.05093,1.23865,8.94499,0.985528,2.34005,7.79094,0.280551,1.95087,7.04389,0.450892,1.71909,7.62293,0.709858,1.40052,7.63744,0.608417,1.4785,8.14199,0.868263,1.29769,8.61192,0.960876,0.82438,8.729,0.500871,2.5127,7.90811,-0.149976,2.34933,7.11313,0.189084,1.27339,7.67302,-1.18328,1.91211,8.39546,-1.10503,1.96728,7.10017,-1.52564,1.13945,6.99095,-1.23011,1.93147,7.58971,-1.35136,2.47848,7.88552,-0.652508,2.32158,8.46983,-0.64382,2.38111,7.77615,-0.95107,2.53372,7.28772,-1.01645,0.96908,6.96392,-0.974057,1.83192,9.17043,1.01453,2.27355,9.03465,0.489661,0.922111,8.85643,0.760505,0.957992,8.60262,0.659787,1.66263,7.00315,0.456557,0.687358,8.30246,0.256477,0.765298,8.93811,-0.818293,1.1574,9.12964,-1.04529,0.898474,8.20249,-0.837879,1.00038,7.40426,-0.908459,1.17044,8.34469,-1.01434,2.39064,8.61126,0.161986,0.970763,8.23045,0.566436,1.65428,9.14911,-1.12953,0.54596,8.80471,-0.02916,0.904007,7.40354,-0.204323,0.590772,8.17991,-0.248759,0.983618,6.86784,-0.268839,2.106,7.7052,0.619131,1.85909,8.14211,0.880213,2.96685,12.0064,0.956726,1.09677,12.0005,1.45538,1.03391,26.4542,-0.17609,0.955143,26.1279,-0.045635,0.445455,25.373,0.32963,-1.73082,17.443,1.42766,1.73541,17.4313,1.43851,-2.63872,21.3131,-0.131463,2.60185,21.3227,-0.144442,2.63235,24.5468,-0.550867,-2.63232,24.5467,-0.5506,3.2515,23.1429,0.264179,-3.2438,23.1357,0.270763,-2.66265,5.82365,-0.609959,2.66273,5.82008,-0.612825,1.05565,19.4603,-1.4744,-1.15963,19.4422,-1.43124,0.884006,19.1584,-1.33425,-0.956194,19.1524,-1.30879,0.364683,19.2264,-1.4388,-0.371621,19.2249,-1.43945,2.64534,22.3951,-1.8992,-2.63553,22.414,-1.90874,-0.000423,22.4291,1.5241,-0.000196,21.9444,1.75894,-0.316023,17.4985,-1.27804,0,17.5,-1.29084,0.316025,17.4985,-1.27804,0.533289,17.4988,-1.2803,-0.53329,17.4988,-1.2803,2.49685,7.89764,-0.382796,-2.49751,7.89808,-0.373099,2.61633,7.26322,-0.472402,-2.61584,7.26204,-0.466596,-0.618667,8.21531,-0.102843,-0.1984,12.6473,0.086293,0.197946,12.6403,0.08361,0.620161,8.2172,-0.095026],\"bones\":[{\"pos\":[-0.000027,18.2131,0.000197],\"parent\":-1,\"rotq\":[0,0,0,1],\"name\":\"Hips\"},{\"pos\":[0.000027,0.055037,0.000009],\"parent\":0,\"rotq\":[0,0,0,1],\"name\":\"LHipJoint\"},{\"pos\":[1.54938,-2.41556,0.04113],\"parent\":1,\"rotq\":[0,0,0,1],\"name\":\"LeftUpLeg\"},{\"pos\":[-0.019988,-7.21534,-0.208634],\"parent\":2,\"rotq\":[0,0,0,1],\"name\":\"LeftLeg\"},{\"pos\":[0.320011,-7.29466,-0.471354],\"parent\":3,\"rotq\":[0,0,0,1],\"name\":\"LeftFoot\"},{\"pos\":[0.198471,-0.54529,2.28466],\"parent\":4,\"rotq\":[0,0,0,1],\"name\":\"LeftToeBase\"},{\"pos\":[0.000027,0.055037,0.000009],\"parent\":0,\"rotq\":[0,0,0,1],\"name\":\"RHipJoint\"},{\"pos\":[-1.43938,-2.41556,0.041129],\"parent\":6,\"rotq\":[0,0,0,1],\"name\":\"RightUpLeg\"},{\"pos\":[-0.089993,-7.21534,-0.208641],\"parent\":7,\"rotq\":[0,0,0,1],\"name\":\"RightLeg\"},{\"pos\":[-0.319993,-7.29467,-0.471361],\"parent\":8,\"rotq\":[0,0,0,1],\"name\":\"RightFoot\"},{\"pos\":[-0.305359,-0.83898,2.28801],\"parent\":9,\"rotq\":[0,0,0,1],\"name\":\"RightToeBase\"},{\"pos\":[0.000027,0.055037,0.000009],\"parent\":0,\"rotq\":[0,0,0,1],\"name\":\"LowerBack\"},{\"pos\":[-0.04381,1.99522,-0.197985],\"parent\":11,\"rotq\":[0,0,0,1],\"name\":\"Spine\"},{\"pos\":[-0.01959,2.01295,-0.04372],\"parent\":12,\"rotq\":[0,0,0,1],\"name\":\"Spine1\"},{\"pos\":[0,0,0],\"parent\":13,\"rotq\":[0,0,0,1],\"name\":\"Neck\"},{\"pos\":[0.063054,2.1058,-0.51192],\"parent\":14,\"rotq\":[0,0,0,1],\"name\":\"Neck1\"},{\"pos\":[-0.023034,1.43701,0.497281],\"parent\":15,\"rotq\":[0,0,0,1],\"name\":\"Head\"},{\"pos\":[0,0,0],\"parent\":14,\"rotq\":[0,0,0,1],\"name\":\"LeftShoulder\"},{\"pos\":[2.59289,1.2264,-0.487197],\"parent\":17,\"rotq\":[0,0,0,1],\"name\":\"LeftArm\"},{\"pos\":[4.14553,-0.064466,0.257385],\"parent\":18,\"rotq\":[0,0,0,1],\"name\":\"LeftForeArm\"},{\"pos\":[3.69802,0.065802,1.73268],\"parent\":19,\"rotq\":[0,0,0,1],\"name\":\"LeftHand\"},{\"pos\":[-0.000254,0,-0.000044],\"parent\":20,\"rotq\":[0,0,0,1],\"name\":\"LeftFingerBase\"},{\"pos\":[0.559672,0,0.260979],\"parent\":21,\"rotq\":[0,0,0,1],\"name\":\"LeftHandIndex1\"},{\"pos\":[-0.000254,0,-0.000044],\"parent\":20,\"rotq\":[0,0,0,1],\"name\":\"LThumb\"},{\"pos\":[0,0,0],\"parent\":14,\"rotq\":[0,0,0,1],\"name\":\"RightShoulder\"},{\"pos\":[-2.46562,1.22638,-0.487065],\"parent\":24,\"rotq\":[0,0,0,1],\"name\":\"RightArm\"},{\"pos\":[-4.14558,-0.064367,0.259234],\"parent\":25,\"rotq\":[0,0,0,1],\"name\":\"RightForeArm\"},{\"pos\":[-3.69873,0.066645,1.72989],\"parent\":26,\"rotq\":[0,0,0,1],\"name\":\"RightHand\"},{\"pos\":[-0.00006,0,0.000158],\"parent\":27,\"rotq\":[0,0,0,1],\"name\":\"RightFingerBase\"},{\"pos\":[-0.529147,0,0.246746],\"parent\":28,\"rotq\":[0,0,0,1],\"name\":\"RightHandIndex1\"},{\"pos\":[-0.00006,0,0.000158],\"parent\":27,\"rotq\":[0,0,0,1],\"name\":\"RThumb\"}],\"metadata\":{\"materials\":1,\"bones\":31,\"version\":3,\"generator\":\"io_three\",\"vertices\":1157,\"type\":\"Geometry\",\"faces\":2242,\"uvs\":1},\"influencesPerVertex\":4,\"skinIndices\":[7,2,6,1,7,2,6,1,7,2,6,0,7,2,6,1,7,2,6,1,7,2,6,0,7,2,6,1,7,2,6,0,7,2,6,1,7,2,6,0,7,2,6,1,7,2,6,1,7,2,6,1,7,6,2,1,7,2,6,1,7,2,6,0,11,12,6,24,12,24,11,17,12,11,24,6,12,11,24,17,11,12,6,24,12,24,11,17,12,24,11,6,12,11,24,6,11,12,6,24,6,11,1,7,12,11,24,6,12,11,24,6,11,6,12,1,6,11,12,1,11,12,6,24,11,12,6,24,11,12,6,24,11,12,6,24,12,11,17,24,11,12,1,17,11,12,6,24,24,12,11,25,24,12,11,25,24,12,25,11,24,12,25,11,24,12,25,13,24,12,13,17,24,12,11,25,24,12,11,25,24,12,11,17,12,11,24,17,12,11,24,17,12,24,11,17,24,12,25,11,24,12,11,17,24,12,11,13,24,12,25,11,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,12,24,11,25,12,24,11,17,24,12,11,25,12,24,11,6,24,12,11,25,12,24,11,17,12,24,11,17,12,24,11,17,24,12,11,17,12,24,11,17,24,12,11,17,12,24,11,17,24,12,11,25,24,12,11,25,24,12,25,11,12,24,11,17,12,24,11,17,12,24,11,17,12,24,17,11,24,25,12,11,12,24,17,11,24,12,17,13,12,11,24,6,12,11,24,17,24,12,11,25,24,12,11,25,12,24,11,25,24,12,25,11,24,12,11,25,24,12,11,17,12,24,11,17,12,11,24,17,11,12,24,6,11,12,6,1,12,11,17,24,6,11,1,12,12,11,24,17,11,12,6,1,11,6,12,1,11,6,1,12,7,2,6,0,24,12,13,17,12,24,17,13,6,11,1,12,16,0,0,0,15,16,0,0,15,16,0,0,16,15,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,6,0,0,7,2,6,0,7,6,0,0,7,6,0,0,6,1,7,2,6,1,7,11,6,7,11,0,11,6,12,24,6,7,11,0,11,6,12,24,12,11,24,6,6,11,7,0,6,7,11,1,6,11,7,1,6,1,11,7,6,7,1,2,6,1,7,11,7,2,6,1,7,6,2,0,7,6,0,0,6,7,0,0,6,7,11,0,6,7,0,0,7,6,0,0,7,6,0,0,7,6,0,0,7,6,0,0,7,6,0,0,6,7,11,0,7,6,0,0,6,7,0,0,6,7,0,0,6,7,11,0,6,11,7,0,6,7,11,0,7,6,0,0,7,6,0,0,7,0,0,0,7,2,0,0,7,2,6,1,6,7,1,2,6,7,1,11,6,7,1,2,6,7,11,1,6,7,11,1,6,7,0,0,6,7,1,11,6,7,1,2,7,2,6,0,7,2,6,0,7,2,6,0,6,7,2,1,7,6,1,2,7,6,1,2,7,6,0,0,7,6,2,0,7,6,2,1,7,6,2,1,6,7,0,0,7,0,0,0,7,2,6,1,7,6,0,0,7,6,0,0,7,2,0,0,6,7,1,2,7,6,2,1,7,2,6,0,7,2,6,1,7,0,0,0,6,7,1,2,7,6,2,1,7,6,2,0,11,6,12,24,7,0,0,0,11,12,6,24,12,11,24,6,12,11,24,6,11,12,6,24,11,12,6,24,12,11,24,6,11,12,6,24,11,6,12,24,6,11,12,24,6,7,1,11,11,12,6,24,11,6,12,24,11,6,12,24,11,6,12,24,6,11,12,7,6,11,7,12,6,11,7,12,6,11,7,12,6,11,1,12,6,11,7,1,6,11,12,24,6,11,1,7,6,1,11,7,6,11,12,0,12,11,24,6,11,6,12,1,11,12,6,24,11,12,6,1,6,11,1,12,6,11,12,7,6,11,12,7,6,7,1,2,7,0,0,0,6,7,1,2,7,6,2,1,7,6,2,0,7,6,2,0,7,6,2,0,6,11,7,0,6,7,11,0,6,7,11,1,11,6,12,24,11,6,12,24,11,6,12,24,11,12,24,6,11,12,6,24,11,6,12,24,7,6,0,0,7,6,0,0,7,6,0,0,7,6,0,0,7,6,2,0,24,25,12,11,24,12,14,25,24,25,12,13,24,25,13,0,24,14,25,12,14,24,15,25,24,14,25,15,24,25,12,11,24,25,12,13,24,25,12,0,24,25,12,11,24,12,25,11,24,12,25,11,24,12,25,11,24,25,12,11,24,25,14,15,24,25,12,13,24,25,14,15,24,12,11,25,24,12,14,25,24,25,13,0,25,24,14,15,25,24,14,15,24,25,12,14,24,12,25,11,16,15,0,0,14,12,17,24,16,15,0,0,15,13,16,0,15,14,16,0,14,17,15,24,24,12,25,13,24,13,17,12,13,24,15,25,15,14,16,24,12,11,24,6,12,24,11,14,12,24,11,17,13,24,17,12,24,13,25,12,24,13,25,15,24,25,13,0,24,13,25,15,13,24,15,14,24,14,15,13,24,25,14,15,13,24,15,14,14,15,24,17,15,14,16,24,15,14,24,13,13,15,24,16,16,15,14,0,16,15,14,0,15,16,13,14,15,16,14,0,16,15,0,0,15,13,16,14,24,13,12,17,24,13,12,25,13,24,17,15,15,16,13,0,13,24,17,15,13,24,15,17,16,15,0,0,16,15,0,0,16,15,0,0,15,16,14,0,16,15,0,0,24,25,13,12,24,13,25,12,24,13,17,12,24,13,12,17,24,12,17,13,13,24,17,12,13,24,15,25,24,13,17,25,13,24,15,14,13,15,24,0,15,13,16,0,13,15,24,0,15,13,16,0,15,16,14,24,15,16,14,24,12,24,11,6,14,15,24,25,14,15,24,25,15,14,24,16,15,14,24,16,14,15,24,25,24,14,25,15,15,14,16,24,12,24,11,25,12,11,24,6,12,11,24,6,12,11,24,6,11,12,24,6,12,24,11,25,24,12,11,25,24,12,11,25,12,24,11,6,12,24,11,25,12,24,11,25,15,14,24,0,12,24,11,25,24,25,12,11,24,25,14,15,24,25,12,0,7,0,0,0,7,0,0,0,7,0,0,0,24,25,14,13,24,25,12,0,24,25,14,0,24,25,12,0,17,24,12,13,15,16,14,0,7,2,6,1,7,2,6,0,11,12,6,1,6,1,7,2,6,1,11,7,14,15,17,24,16,15,14,0,13,15,17,0,12,17,24,14,6,1,7,2,6,7,1,2,12,11,17,24,14,17,24,12,7,0,0,0,25,24,0,0,25,24,0,0,24,25,12,11,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,24,25,14,12,25,24,0,0,25,24,0,0,25,26,0,0,25,26,0,0,25,26,0,0,25,26,0,0,26,25,0,0,26,25,0,0,26,27,0,0,26,0,0,0,27,0,0,0,27,26,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,26,27,0,0,25,26,0,0,25,26,0,0,25,26,0,0,25,24,0,0,26,25,0,0,25,26,0,0,26,27,0,0,25,24,0,0,25,26,0,0,25,26,0,0,25,26,0,0,25,24,0,0,25,24,0,0,25,0,0,0,26,27,0,0,26,0,0,0,25,26,0,0,25,26,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,0,0,0,25,24,0,0,25,24,0,0,25,0,0,0,25,0,0,0,25,0,0,0,25,26,0,0,25,26,0,0,25,26,0,0,26,25,0,0,26,25,0,0,26,25,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,27,0,0,26,25,0,0,26,0,0,0,25,26,0,0,26,0,0,0,26,0,0,0,26,0,0,0,25,26,0,0,26,0,0,0,26,25,0,0,25,26,0,0,25,26,0,0,25,26,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,0,0,0,7,0,0,0,8,9,0,0,8,9,0,0,8,0,0,0,8,9,0,0,9,8,0,0,9,8,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,9,8,0,0,8,9,0,0,8,9,0,0,9,8,0,0,8,9,0,0,9,8,0,0,9,8,0,0,9,8,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,9,0,0,8,9,0,0,8,0,0,0,8,0,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,9,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,9,8,0,0,7,0,0,0,7,0,0,0,7,0,0,0,8,7,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,8,7,0,0,7,8,0,0,7,8,0,0,7,8,0,0,8,7,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,7,0,0,7,8,0,0,7,8,0,0,8,7,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,0,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,8,0,0,0,8,7,0,0,7,8,0,0,7,8,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,7,8,0,0,7,8,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,7,0,0,8,7,0,0,7,0,0,0,7,0,0,0,16,0,0,0,16,15,0,0,15,16,0,0,15,16,0,0,2,7,6,1,2,7,6,0,2,7,6,1,2,7,6,1,2,7,6,1,2,7,6,1,2,7,6,1,2,7,6,1,2,7,6,1,2,1,7,6,7,2,6,1,2,7,6,1,11,6,1,12,11,12,1,17,12,17,11,24,12,11,17,1,12,11,17,24,11,12,1,17,12,17,11,24,12,17,11,1,12,11,17,1,11,12,1,17,1,11,6,2,12,11,17,1,12,11,17,1,11,1,12,6,1,11,6,12,11,12,17,1,11,12,1,17,11,12,17,1,11,12,17,1,12,11,17,24,17,12,11,18,17,12,11,18,17,12,18,11,17,12,18,11,17,12,18,13,17,12,13,24,17,12,11,18,17,12,11,18,17,12,11,18,12,11,17,24,12,11,17,24,12,17,11,24,17,12,18,11,17,12,11,24,17,12,11,13,17,12,18,11,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,12,17,11,1,17,12,11,18,12,17,11,24,17,12,11,24,12,17,11,24,17,12,11,24,12,17,11,24,17,12,11,24,12,17,11,24,17,12,11,18,17,12,11,18,17,12,18,11,12,17,11,24,12,17,11,24,12,17,11,24,17,12,24,11,17,18,12,11,12,17,24,11,17,12,24,13,12,11,17,1,12,17,11,24,17,12,11,18,17,12,11,18,12,17,11,18,17,12,18,11,17,12,11,18,17,12,11,18,17,12,11,24,12,11,17,24,11,12,17,1,11,12,6,1,12,11,17,24,11,12,17,6,11,6,12,1,1,11,6,12,12,11,17,24,11,12,1,6,11,1,6,12,11,1,6,12,2,7,6,1,17,12,13,24,17,12,24,13,16,0,0,0,15,16,0,0,15,16,0,0,16,15,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,1,0,0,2,7,1,6,2,0,0,0,2,1,0,0,11,12,6,1,6,1,11,0,1,6,2,7,1,2,11,0,11,1,12,17,1,2,11,0,11,1,12,17,12,11,17,1,1,2,11,0,1,2,6,11,1,11,6,2,1,6,11,2,1,6,2,7,1,6,2,11,2,7,6,1,2,1,7,6,2,1,7,0,1,2,0,0,1,2,11,0,1,2,6,0,2,1,0,0,2,1,0,0,2,1,0,0,2,1,0,0,2,1,0,0,1,2,0,0,2,1,0,0,1,2,6,0,1,2,0,0,1,2,11,0,1,11,2,6,1,2,11,6,2,1,0,0,2,1,0,0,2,0,0,0,2,7,0,0,2,7,6,1,1,6,2,7,1,2,6,11,1,2,6,7,1,2,6,11,1,2,6,11,1,2,6,0,1,2,6,0,1,2,6,7,2,7,6,0,2,7,6,0,2,7,6,0,1,2,6,7,1,2,6,7,2,1,6,7,2,1,6,7,2,1,7,6,2,1,7,6,2,7,1,6,1,2,0,0,2,0,0,0,2,7,6,1,2,1,0,0,2,1,0,0,2,7,0,0,1,2,6,7,2,7,1,6,2,7,6,1,2,7,6,1,2,0,0,0,1,2,6,7,2,1,7,6,2,7,1,0,11,1,12,17,2,0,0,0,11,12,1,17,12,11,17,1,12,11,17,1,11,1,12,17,11,12,1,17,12,11,17,1,11,12,1,17,11,1,12,6,1,11,12,17,1,6,2,11,11,12,1,17,1,11,12,17,11,1,12,17,11,1,12,17,1,11,6,12,1,11,12,2,1,11,2,12,1,11,2,12,1,6,11,12,1,11,6,2,1,11,12,17,1,6,11,2,1,6,11,2,1,11,12,6,12,11,17,1,11,1,6,12,11,12,1,17,11,12,1,6,1,11,6,0,1,11,12,2,1,11,12,6,1,2,6,7,2,0,0,0,1,2,6,7,2,1,7,6,2,1,7,0,2,1,7,6,2,7,1,6,1,11,2,0,1,2,11,6,1,2,6,11,11,1,12,17,11,1,12,17,11,1,12,17,11,12,17,1,11,12,1,17,11,1,12,17,2,1,0,0,2,1,0,0,2,1,6,0,2,1,0,0,2,1,7,0,17,18,12,11,17,12,14,18,17,18,12,13,17,18,13,0,17,14,18,12,17,14,15,18,17,14,18,15,17,18,12,11,17,18,12,0,17,18,12,0,17,18,12,11,17,12,18,11,17,12,18,11,17,12,18,11,17,18,12,11,17,18,14,15,17,18,12,0,17,18,14,15,17,12,11,18,17,12,14,18,17,18,13,0,18,17,14,15,18,17,14,15,17,18,12,14,17,12,18,11,16,15,0,0,13,17,24,12,13,17,24,0,17,12,18,13,17,13,24,12,13,17,15,18,15,14,16,17,12,11,17,1,17,12,11,14,12,17,11,14,17,13,24,12,17,13,18,12,17,13,18,15,17,18,13,0,17,13,18,15,13,17,15,14,17,14,15,18,17,18,14,15,17,13,15,14,14,15,17,24,15,14,16,17,15,14,17,13,13,15,17,16,16,15,14,0,16,15,14,0,15,16,13,14,15,16,14,0,16,15,0,0,15,16,13,14,17,13,12,24,17,12,13,18,13,17,24,15,15,16,13,0,13,17,15,24,13,17,15,0,16,15,0,0,16,15,0,0,16,15,0,0,15,16,14,0,16,15,0,0,17,18,13,12,17,13,18,12,17,13,12,24,17,13,12,24,17,12,13,24,13,17,24,12,17,13,15,18,17,13,18,24,13,17,15,14,13,15,17,16,15,13,16,17,13,15,17,16,15,13,16,0,15,16,14,17,15,16,14,17,12,17,11,1,14,15,17,18,14,15,17,18,15,14,17,16,15,14,17,16,14,15,17,18,17,14,18,15,15,14,16,17,12,17,11,18,12,11,17,1,12,11,17,1,12,11,17,1,11,12,17,1,12,17,11,18,17,12,11,18,17,12,11,18,12,17,11,1,12,17,11,18,12,17,11,18,15,14,17,0,17,12,11,18,17,18,12,11,17,18,14,15,17,18,12,0,2,0,0,0,2,0,0,0,2,0,0,0,17,18,14,15,17,18,12,0,17,18,14,0,17,18,12,0,7,2,6,1,6,1,7,2,11,6,1,12,15,16,14,0,12,14,17,24,14,15,17,24,13,17,24,12,13,17,15,24,12,11,17,24,15,14,17,24,2,0,0,0,18,17,0,0,18,17,0,0,17,18,12,11,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,17,18,14,0,18,17,0,0,18,17,0,0,18,19,0,0,19,18,0,0,19,18,0,0,18,19,0,0,19,18,0,0,19,18,0,0,19,0,0,0,19,0,0,0,20,19,0,0,20,19,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,19,20,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,17,0,0,19,18,0,0,18,19,0,0,19,20,0,0,18,17,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,17,0,0,18,17,0,0,18,0,0,0,19,20,0,0,19,18,0,0,18,19,0,0,18,19,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,0,0,0,18,17,0,0,18,17,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,19,0,0,18,19,0,0,18,19,0,0,19,18,0,0,19,18,0,0,19,18,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,20,0,0,19,18,0,0,19,18,0,0,18,19,0,0,19,0,0,0,19,18,0,0,19,18,0,0,18,19,0,0,19,0,0,0,19,18,0,0,18,19,0,0,18,19,0,0,18,19,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,0,0,0,2,0,0,0,3,4,0,0,3,4,0,0,3,0,0,0,3,4,0,0,4,3,0,0,4,3,0,0,3,4,0,0,3,4,0,0,3,4,0,0,3,2,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,3,0,0,3,4,0,0,3,4,0,0,4,3,0,0,3,4,0,0,4,3,0,0,4,3,0,0,4,3,0,0,3,4,0,0,3,4,0,0,3,4,0,0,3,4,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,4,0,0,3,4,0,0,3,0,0,0,3,0,0,0,3,4,0,0,3,4,0,0,3,4,0,0,3,4,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,3,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,2,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,2,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,0,0,0,3,2,0,0,3,2,0,0,3,2,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,0,0,0,3,2,0,0,3,2,0,0,3,0,0,0,3,0,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,0,0,0,3,0,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,0,0,0,3,2,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,2,0,0,3,0,0,0,3,2,0,0,3,2,0,0,2,0,0,0,2,0,0,0,16,0,0,0,16,15,0,0,15,16,0,0,6,11,7,1,1,11,2,6,24,12,25,11,17,12,18,11,18,17,0,0,25,24,0,0,18,17,12,0,25,24,12,0,8,0,0,0,3,0,0,0,11,12,1,17,11,12,6,24,11,12,1,17,11,12,6,24,11,12,1,6,11,12,6,1,17,18,12,14,24,25,12,14,17,12,24,13,12,17,24,11,6,1,11,7,6,1,11,7,1,6,11,2,1,6,11,2,6,11,1,7,3,2,0,0,8,7,0,0,3,0,0,0,8,0,0,0,8,7,0,0,7,2,6,0,2,7,6,1,3,2,0,0],\"name\":\"costume\",\"faces\":[10,565,564,266,0,0,1,2,10,266,564,104,0,2,1,3,10,567,301,319,0,4,5,6,10,567,319,105,0,4,6,7,10,105,319,321,0,7,6,8,10,301,567,106,0,5,4,9,10,565,266,107,0,0,2,10,10,107,266,306,0,10,2,11,10,345,354,454,0,12,13,14,10,454,354,404,0,14,13,15,10,261,419,257,0,16,17,18,10,257,419,408,0,18,17,19,10,375,1129,346,0,20,21,22,10,374,351,346,0,23,24,25,10,264,1141,378,0,26,27,28,10,378,352,451,0,29,30,31,10,453,353,379,0,32,33,34,10,262,381,263,0,35,36,37,10,263,381,375,0,37,36,20,10,375,346,263,0,20,22,37,10,373,371,352,0,38,39,30,10,351,374,244,0,24,23,40,10,244,374,412,0,40,23,41,10,352,371,451,0,30,39,31,10,419,261,412,0,17,16,41,10,412,261,244,0,41,16,40,10,371,373,454,0,39,38,14,10,454,373,345,0,14,38,12,10,262,353,381,0,35,33,36,10,381,353,453,0,36,33,32,10,247,379,256,0,42,34,43,10,256,379,353,0,43,34,33,10,247,245,379,0,42,44,34,10,254,373,253,0,45,38,46,10,373,254,345,0,38,45,12,10,352,265,79,0,47,48,49,10,245,264,379,0,44,26,34,10,265,253,79,0,48,50,49,10,522,544,108,0,51,52,53,10,544,113,108,0,52,54,53,10,350,349,515,0,55,56,57,10,152,350,188,0,58,55,59,10,188,350,513,0,59,55,60,10,114,542,563,0,61,62,63,10,563,542,521,0,63,62,64,10,111,110,549,0,65,66,67,10,549,110,548,0,67,66,68,10,511,111,549,0,69,65,67,10,110,348,556,0,66,70,71,10,556,548,110,0,71,68,66,10,555,515,112,0,72,57,73,10,112,512,555,0,73,74,72,10,555,512,549,0,72,74,67,10,513,350,515,0,60,55,57,10,456,174,513,0,75,76,60,10,513,174,188,0,60,76,59,10,349,112,515,0,56,73,57,10,109,520,114,0,77,78,61,10,114,520,542,0,61,78,62,10,543,520,562,0,79,78,80,10,562,520,109,0,80,78,77,10,518,556,113,0,81,82,54,10,113,544,518,0,54,52,81,10,522,108,563,0,51,53,63,10,109,115,562,0,77,83,80,10,562,115,117,0,80,83,84,10,153,512,178,0,85,74,86,10,178,512,112,0,86,74,73,10,164,111,153,0,87,65,85,10,153,111,511,0,85,65,69,10,153,511,512,0,85,69,74,10,3,8,0,0,88,89,90,10,0,8,7,0,90,89,91,10,4,10,14,0,92,93,94,10,14,10,1,0,94,93,95,10,2,0,7,0,96,90,91,10,52,44,51,0,97,98,99,10,51,44,45,0,99,98,100,10,190,1135,36,0,101,102,103,10,1134,780,755,0,104,105,106,10,33,20,30,0,107,108,109,10,30,20,16,0,109,108,110,10,33,92,31,0,107,111,112,10,31,92,32,0,112,111,113,10,334,84,332,0,114,115,116,10,332,84,85,0,116,115,117,10,28,196,29,0,118,119,120,10,82,86,27,0,121,122,123,10,50,70,71,0,124,125,126,10,71,70,68,0,126,125,127,10,65,66,61,0,128,129,130,10,61,66,64,0,130,129,131,10,60,59,86,0,132,133,122,10,86,59,84,0,122,133,115,10,70,45,37,0,125,100,134,10,37,43,38,0,134,135,136,10,86,22,60,0,122,137,132,10,60,22,63,0,132,137,138,10,77,76,48,0,139,140,141,10,48,76,69,0,141,140,142,10,75,19,34,0,143,144,145,10,19,46,34,0,144,146,145,10,48,83,77,0,141,147,139,10,77,83,75,0,139,147,143,10,67,90,66,0,148,149,129,10,66,90,89,0,129,149,150,10,40,49,41,0,151,152,153,10,41,49,52,0,153,152,97,10,42,41,51,0,154,153,99,10,51,41,52,0,99,153,97,10,84,59,85,0,115,133,117,10,85,59,87,0,117,133,155,10,56,74,55,0,156,157,158,10,55,74,39,0,158,157,159,10,40,39,49,0,151,159,152,10,49,39,74,0,152,159,157,10,51,50,42,0,99,124,154,10,42,50,78,0,154,124,160,10,88,38,56,0,161,136,156,10,56,38,74,0,156,136,157,10,18,26,23,0,162,163,164,10,23,26,82,0,164,163,121,10,44,43,37,0,98,135,134,10,17,63,21,0,165,138,166,10,21,63,22,0,166,138,137,10,17,21,48,0,165,166,141,10,48,21,83,0,141,166,147,10,70,37,68,0,125,134,127,10,80,81,78,0,167,168,160,10,74,38,49,0,157,136,152,10,49,38,43,0,152,136,135,10,96,26,47,0,169,163,170,10,47,26,18,0,170,163,162,10,33,30,92,0,107,109,111,10,92,30,91,0,111,109,171,10,46,94,34,0,146,172,145,10,47,46,96,0,170,146,169,10,96,46,19,0,169,146,144,10,73,88,54,0,173,161,174,10,54,88,56,0,174,161,156,10,78,76,80,0,160,140,167,10,80,76,77,0,167,140,139,10,96,19,83,0,169,144,147,10,83,19,75,0,147,144,143,10,71,68,67,0,126,127,148,10,67,68,90,0,148,127,149,10,66,89,64,0,129,150,131,10,64,89,62,0,131,150,175,10,89,37,62,0,150,134,175,10,57,53,60,0,176,177,132,10,60,53,59,0,132,177,133,10,49,43,52,0,152,135,97,10,52,43,44,0,97,135,98,10,25,95,29,0,178,179,120,10,73,72,37,0,173,180,134,10,72,73,58,0,180,173,181,10,58,73,54,0,181,173,174,10,58,64,72,0,181,131,180,10,72,64,62,0,180,131,175,10,62,37,72,0,175,134,180,10,68,37,90,0,127,134,149,10,83,21,96,0,147,166,169,10,96,21,26,0,169,166,163,10,92,18,32,0,111,162,113,10,32,18,23,0,113,162,164,10,26,21,82,0,163,166,121,10,82,21,22,0,121,166,137,10,18,92,47,0,162,111,170,10,47,92,91,0,170,111,171,10,20,24,97,0,108,182,183,10,16,20,97,0,110,108,183,10,51,45,50,0,99,100,124,10,50,45,70,0,124,100,125,10,76,71,69,0,140,126,142,10,69,71,67,0,142,126,148,10,76,78,71,0,140,160,126,10,71,78,50,0,126,160,124,10,69,67,65,0,142,148,128,10,65,67,66,0,128,148,129,10,58,54,57,0,181,174,176,10,57,54,53,0,176,174,177,10,60,63,57,0,132,138,176,10,57,63,61,0,176,138,130,10,61,63,65,0,130,138,128,10,65,63,17,0,128,138,165,10,87,59,55,0,155,133,158,10,55,59,53,0,158,133,177,10,61,64,57,0,130,131,176,10,57,64,58,0,176,131,181,10,54,56,53,0,174,156,177,10,53,56,55,0,177,156,158,10,65,17,69,0,128,165,142,10,69,17,48,0,142,165,141,10,73,37,88,0,173,134,161,10,2,5,358,0,184,185,186,10,210,211,25,0,187,188,178,10,25,211,207,0,178,188,189,10,7,8,100,0,91,89,190,10,100,8,9,0,190,89,191,10,6,11,8,0,192,193,89,10,8,11,9,0,89,193,191,10,11,6,12,0,193,192,194,10,12,6,10,0,194,192,93,10,9,11,100,0,191,193,190,10,100,11,175,0,190,193,195,10,5,2,15,0,196,96,197,10,2,7,15,0,96,91,197,10,7,100,15,0,91,190,197,10,101,42,81,0,198,154,168,10,81,42,78,0,168,154,160,10,95,25,207,0,179,178,189,10,103,95,207,0,199,179,189,10,99,95,103,0,200,179,199,10,243,309,257,0,201,202,18,10,279,314,311,0,203,204,205,10,311,314,316,0,205,204,206,10,274,283,281,0,207,208,209,10,249,40,272,0,210,151,211,10,272,40,41,0,211,151,153,10,138,140,151,0,212,213,214,10,151,140,134,0,214,213,215,10,280,316,281,0,216,206,209,10,281,316,315,0,209,206,217,10,312,298,273,0,218,219,220,10,273,298,313,0,220,219,221,10,298,312,299,0,219,218,222,10,299,312,310,0,222,218,223,10,310,311,280,0,223,205,216,10,280,311,316,0,216,205,206,10,281,315,274,0,209,217,207,10,310,312,311,0,223,218,205,10,299,243,272,0,222,201,211,10,272,243,249,0,211,201,210,10,243,299,309,0,201,222,202,10,309,299,310,0,202,222,223,10,280,282,310,0,216,224,223,10,310,282,309,0,223,224,202,10,240,170,118,0,225,226,227,10,28,98,24,0,118,228,182,10,135,139,141,0,229,230,231,10,252,255,259,0,232,233,234,10,144,236,237,0,235,236,237,10,158,145,161,0,238,239,240,10,161,145,160,0,240,239,241,10,238,237,239,0,242,237,243,10,239,237,236,0,243,237,236,10,171,167,168,0,244,245,246,10,157,155,198,0,247,248,249,10,198,155,120,0,249,248,250,10,29,196,212,0,120,119,251,10,117,115,144,0,252,253,235,10,144,115,236,0,235,253,236,10,169,170,168,0,254,226,246,10,168,170,171,0,246,226,244,10,141,139,140,0,231,230,213,10,239,236,118,0,243,236,227,10,118,236,115,0,227,236,253,10,556,348,370,0,71,70,255,10,157,198,156,0,247,249,256,10,157,156,162,0,247,256,257,10,162,156,161,0,257,256,240,10,254,337,1126,0,45,258,259,10,241,248,251,0,260,261,262,10,251,248,250,0,262,261,263,10,288,325,329,0,264,265,266,10,243,250,249,0,201,263,210,10,262,246,256,0,35,267,43,10,255,252,354,0,233,232,268,10,333,334,332,0,269,114,116,10,335,27,86,0,270,123,122,10,341,338,342,0,271,272,273,10,342,338,339,0,273,272,274,10,177,237,173,0,275,237,276,10,173,237,145,0,276,237,239,10,210,156,198,0,187,256,249,10,237,177,144,0,237,275,235,10,241,39,248,0,260,159,261,10,329,326,328,0,266,277,278,10,328,326,327,0,278,277,279,10,246,330,325,0,267,280,265,10,325,330,329,0,265,280,266,10,294,306,322,0,281,11,282,10,322,306,295,0,282,11,283,10,323,289,322,0,284,285,286,10,322,289,275,0,286,285,287,10,275,290,291,0,288,289,290,10,289,323,331,0,285,284,291,10,145,237,160,0,239,237,241,10,160,237,238,0,241,237,242,10,281,244,261,0,209,40,16,10,260,277,265,0,292,293,48,10,265,277,339,0,48,293,274,10,246,262,330,0,267,35,280,10,333,332,194,0,269,116,294,10,286,287,285,0,295,296,297,10,285,287,284,0,297,296,298,10,331,343,328,0,291,299,278,10,328,343,329,0,278,299,266,10,329,343,288,0,266,299,264,10,331,328,289,0,291,278,285,10,289,328,327,0,285,278,279,10,327,326,290,0,279,277,300,10,290,326,285,0,300,277,301,10,191,341,324,0,302,271,303,10,324,341,342,0,303,271,273,10,230,193,202,0,304,305,306,10,202,193,199,0,306,305,307,10,219,209,218,0,308,309,310,10,340,276,213,0,311,312,313,10,213,276,199,0,313,312,314,10,169,160,238,0,254,241,242,10,145,158,173,0,239,238,276,10,173,158,149,0,276,238,315,10,194,337,213,0,294,316,317,10,155,157,220,0,248,247,318,10,344,337,254,0,319,258,45,10,231,232,196,0,320,321,119,10,196,232,212,0,119,321,251,10,287,317,284,0,296,322,298,10,315,316,300,0,217,206,323,10,300,316,314,0,323,206,204,10,138,150,141,0,212,324,231,10,141,140,138,0,231,213,212,10,225,223,226,0,325,326,327,10,226,223,185,0,327,326,328,10,185,223,184,0,328,326,329,10,184,223,222,0,329,326,330,10,184,222,229,0,329,330,331,10,229,222,228,0,331,330,332,10,229,127,184,0,331,333,329,10,184,127,179,0,329,333,334,10,165,153,181,0,335,336,337,10,181,153,178,0,337,336,338,10,162,167,157,0,257,245,247,10,157,167,220,0,247,245,318,10,255,254,1126,0,339,45,259,10,180,182,185,0,340,341,328,10,185,182,226,0,328,341,327,10,338,253,339,0,272,50,274,10,339,253,265,0,274,50,48,10,159,156,210,0,342,256,187,10,107,306,106,0,10,11,9,10,106,306,294,0,9,11,281,10,117,174,562,0,84,343,80,10,562,174,456,0,80,343,344,10,183,349,221,0,345,56,346,10,221,349,350,0,346,56,55,10,349,183,112,0,56,345,73,10,112,183,178,0,73,345,86,10,243,347,250,0,201,347,263,10,297,301,294,0,348,5,281,10,294,301,106,0,281,5,9,10,342,339,277,0,273,274,293,10,256,353,262,0,43,33,35,10,243,257,347,0,201,18,347,10,239,118,170,0,243,227,226,10,176,150,174,0,349,324,76,10,174,150,188,0,76,324,59,10,273,279,312,0,220,203,218,10,312,279,311,0,218,203,205,10,159,158,156,0,342,238,256,10,156,158,161,0,256,238,240,10,158,159,149,0,238,342,315,10,149,159,148,0,315,342,350,10,238,239,169,0,242,243,254,10,169,239,170,0,254,243,226,10,140,139,134,0,213,230,215,10,134,139,133,0,215,230,351,10,126,121,123,0,352,353,354,10,123,121,147,0,354,353,355,10,108,116,240,0,53,356,225,10,146,147,143,0,357,355,358,10,143,147,121,0,358,355,353,10,114,118,109,0,61,227,77,10,109,118,115,0,77,227,83,10,171,170,116,0,244,226,359,10,116,170,240,0,359,226,225,10,130,179,131,0,360,334,361,10,131,179,127,0,361,334,333,10,223,133,222,0,326,351,330,10,222,133,137,0,330,351,362,10,152,151,221,0,58,214,346,10,221,151,224,0,346,214,363,10,135,143,136,0,229,364,365,10,136,143,121,0,365,364,366,10,204,187,203,0,367,368,369,10,203,187,122,0,369,368,370,10,148,159,1124,0,350,342,371,10,192,187,201,0,372,373,374,10,201,187,200,0,374,373,375,10,274,315,302,0,207,217,376,10,302,315,300,0,376,217,323,10,319,320,321,0,6,377,8,10,319,291,320,0,6,290,377,10,291,318,320,0,290,378,377,10,219,218,208,0,308,310,379,10,208,218,148,0,379,310,350,10,150,176,141,0,324,349,231,10,141,176,142,0,231,349,380,10,193,194,199,0,305,294,307,10,199,194,213,0,307,294,317,10,209,197,218,0,309,381,310,10,218,197,205,0,310,381,382,10,181,178,186,0,337,338,383,10,186,178,183,0,383,338,384,10,180,185,179,0,340,328,334,10,179,185,184,0,334,328,329,10,146,143,142,0,357,358,385,10,141,142,135,0,231,380,229,10,150,138,188,0,324,212,59,10,151,152,138,0,214,58,212,10,138,152,188,0,212,58,59,10,223,225,133,0,326,325,351,10,133,225,134,0,351,325,215,10,179,130,180,0,334,360,340,10,180,130,132,0,340,360,386,10,132,130,119,0,386,360,387,10,182,181,226,0,341,337,327,10,226,181,186,0,327,337,383,10,85,252,259,0,117,232,234,10,127,229,128,0,333,331,388,10,128,229,227,0,388,331,389,10,332,85,259,0,116,117,234,10,186,183,224,0,383,384,363,10,224,183,221,0,363,384,346,10,226,186,225,0,327,383,325,10,225,186,224,0,325,383,363,10,135,142,143,0,229,380,364,10,131,127,129,0,361,333,390,10,129,127,128,0,390,333,388,10,286,346,351,0,295,25,24,10,303,318,317,0,391,378,322,10,317,318,284,0,322,378,298,10,258,326,330,0,392,277,280,10,330,326,329,0,280,277,266,10,282,280,281,0,224,216,209,10,289,327,275,0,285,279,393,10,275,327,290,0,393,279,300,10,356,323,307,0,394,284,395,10,305,296,104,0,396,397,3,10,104,296,266,0,3,397,2,10,351,244,283,0,24,40,208,10,283,244,281,0,208,40,209,10,274,317,283,0,207,322,208,10,283,317,287,0,208,322,296,10,302,303,274,0,376,391,207,10,274,303,317,0,207,391,322,10,292,307,293,0,398,395,399,10,293,307,295,0,399,395,400,10,336,195,233,0,401,402,403,10,209,235,197,0,309,404,381,10,197,235,202,0,381,404,306,10,234,233,231,0,405,403,320,10,231,233,195,0,320,403,402,10,195,336,230,0,402,401,304,10,230,336,193,0,304,401,305,10,155,220,166,0,248,318,406,10,233,335,336,0,403,270,401,10,189,124,192,0,407,408,372,10,126,123,206,0,352,354,409,10,169,168,160,0,254,246,241,10,128,227,203,0,388,389,369,10,203,227,204,0,369,389,367,10,123,200,206,0,354,410,409,10,227,126,204,0,389,411,367,10,204,126,206,0,367,411,412,10,338,341,344,0,413,414,319,10,344,341,340,0,319,414,311,10,194,332,337,0,294,116,316,10,332,259,337,0,116,234,316,10,254,253,344,0,45,46,319,10,344,253,338,0,319,46,413,10,341,191,340,0,414,415,311,10,340,191,276,0,311,415,312,10,192,124,187,0,372,408,373,10,187,124,122,0,373,408,416,10,344,340,337,0,319,311,258,10,337,340,213,0,258,311,313,10,257,282,261,0,18,224,16,10,261,282,281,0,16,224,209,10,130,131,119,0,360,361,387,10,228,136,227,0,332,365,389,10,136,121,227,0,365,366,389,10,227,121,126,0,389,366,411,10,168,162,160,0,246,257,241,10,160,162,161,0,241,257,240,10,167,162,168,0,245,257,246,10,291,284,318,0,290,298,378,10,283,287,351,0,208,296,24,10,351,287,286,0,24,296,295,10,291,301,297,0,290,5,348,10,319,301,291,0,6,5,290,10,276,192,199,0,312,372,314,10,199,192,201,0,314,372,374,10,197,202,200,0,381,306,410,10,200,202,201,0,410,306,417,10,190,215,1135,0,101,418,102,10,250,347,251,0,263,347,262,10,251,347,354,0,262,347,268,10,282,257,309,0,224,18,202,10,354,252,251,0,268,232,262,10,187,204,200,0,368,367,419,10,200,204,206,0,419,367,412,10,330,262,258,0,280,35,392,10,264,265,1141,0,26,48,27,10,108,175,116,0,53,420,356,10,197,200,205,0,381,410,382,10,307,323,295,0,395,284,421,10,295,323,322,0,421,284,422,10,304,293,305,0,423,424,425,10,305,293,296,0,396,426,397,10,308,292,304,0,427,398,423,10,304,292,293,0,423,398,424,10,139,137,133,0,230,362,351,10,139,135,137,0,230,229,362,10,137,135,136,0,362,229,365,10,151,134,224,0,214,215,363,10,224,134,225,0,363,215,325,10,222,137,228,0,330,362,332,10,228,137,136,0,332,362,365,10,180,132,182,0,340,386,341,10,182,132,154,0,341,386,428,10,181,182,165,0,337,341,335,10,165,182,154,0,335,341,428,10,229,228,227,0,331,332,389,10,152,221,350,0,58,346,55,10,240,118,114,0,225,227,61,10,370,113,556,0,429,54,82,10,218,205,148,0,310,382,350,10,122,214,203,0,370,430,369,10,203,214,217,0,369,430,431,10,216,214,1137,0,432,430,433,10,124,214,122,0,408,430,416,10,659,93,97,0,434,435,183,10,593,589,663,0,436,437,438,10,333,336,334,0,269,401,114,10,29,212,219,0,120,251,308,10,219,212,209,0,308,251,309,10,192,276,189,0,372,312,407,10,189,276,191,0,407,312,415,10,278,125,190,0,439,440,101,10,190,125,215,0,101,440,418,10,190,324,278,0,101,303,439,10,689,1136,1134,0,441,442,104,10,779,781,1136,0,443,444,442,10,325,288,246,0,265,264,267,10,334,336,335,0,114,401,270,10,189,191,190,0,407,302,101,10,190,191,324,0,101,302,303,10,245,242,264,0,44,445,26,10,324,342,278,0,303,273,439,10,278,342,277,0,439,273,293,10,212,232,209,0,251,321,309,10,209,232,235,0,309,321,404,10,201,202,199,0,417,306,307,10,128,217,1148,0,388,431,446,10,217,128,203,0,431,388,369,10,210,198,211,0,187,249,188,10,211,198,120,0,188,249,250,10,231,195,232,0,320,402,321,10,232,195,230,0,321,402,304,10,246,247,256,0,267,42,43,10,260,265,242,0,292,48,445,10,230,202,235,0,304,306,404,10,232,230,235,0,321,304,404,10,264,242,265,0,26,445,48,10,194,193,333,0,294,305,269,10,333,193,336,0,269,305,401,10,303,320,318,0,391,377,378,10,163,110,164,0,447,66,87,10,164,110,111,0,87,66,65,10,163,348,110,0,447,70,66,10,296,293,295,0,448,449,450,10,295,306,296,0,450,11,448,10,296,306,266,0,448,11,2,10,286,285,258,0,451,301,392,10,258,285,326,0,392,301,277,10,258,263,286,0,392,37,451,10,286,263,346,0,451,37,22,10,262,263,258,0,35,37,392,10,173,149,146,0,276,315,357,10,146,149,147,0,357,315,355,10,123,147,148,0,354,355,350,10,148,147,149,0,350,355,315,10,176,144,142,0,452,235,385,10,142,144,177,0,385,235,275,10,144,176,117,0,235,452,252,10,117,176,174,0,252,452,453,10,173,146,177,0,276,357,275,10,148,205,123,0,350,382,354,10,123,205,200,0,354,382,410,10,142,177,146,0,385,275,357,10,254,255,345,0,45,339,12,10,345,255,354,0,12,339,13,10,119,131,360,0,387,361,454,10,360,131,129,0,454,361,390,10,153,165,164,0,336,335,455,10,164,165,358,0,455,335,186,10,155,166,366,0,248,406,456,10,366,166,367,0,456,406,457,10,364,269,320,0,458,459,377,10,320,269,321,0,377,459,8,10,277,365,278,0,293,460,439,10,278,365,368,0,439,460,461,10,369,267,245,0,462,463,44,10,245,267,242,0,44,463,445,10,245,247,369,0,44,42,462,10,369,247,271,0,462,42,464,10,268,363,308,0,465,466,427,10,308,363,292,0,427,466,398,10,154,357,358,0,428,467,186,10,292,363,307,0,398,466,395,10,307,363,356,0,395,466,394,10,358,165,154,0,186,335,428,10,284,290,285,0,298,289,297,10,297,294,275,0,348,281,468,10,275,294,322,0,468,281,469,10,275,291,297,0,288,290,348,10,290,284,291,0,289,298,290,10,40,249,248,0,151,210,261,10,248,249,250,0,261,210,263,10,45,44,37,0,100,98,134,10,25,208,210,0,178,379,187,10,159,210,1124,0,342,187,371,10,219,208,29,0,308,379,120,10,29,208,25,0,120,379,178,10,89,90,37,0,150,149,134,10,88,37,38,0,161,134,136,10,23,233,32,0,164,403,113,10,335,86,334,0,270,122,114,10,334,86,84,0,114,122,115,10,27,233,23,0,123,403,164,10,27,335,233,0,123,270,403,10,99,29,95,0,200,120,179,10,251,252,241,0,262,232,260,10,98,28,99,0,228,118,200,10,99,28,29,0,200,118,120,10,87,55,39,0,155,158,159,10,87,39,241,0,155,159,260,10,241,252,87,0,260,232,155,10,85,87,252,0,117,155,232,10,102,313,101,0,470,221,198,10,101,313,298,0,198,221,219,10,28,24,234,0,118,182,405,10,13,175,172,0,471,195,472,10,172,175,12,0,472,195,194,10,248,39,40,0,261,159,151,10,22,86,82,0,137,122,121,10,272,101,299,0,211,198,222,10,299,101,298,0,222,198,219,10,171,13,167,0,244,471,245,10,82,27,23,0,121,123,164,10,31,32,234,0,112,113,405,10,234,32,233,0,405,113,403,10,163,100,1154,0,473,474,475,10,171,116,13,0,244,359,471,10,13,116,175,0,471,359,195,10,313,102,355,0,221,470,476,10,175,11,12,0,195,193,194,10,108,113,100,0,53,54,474,10,113,370,100,0,54,429,474,10,100,175,108,0,474,420,53,10,4,166,172,0,92,406,472,10,172,166,220,0,472,406,318,10,167,13,220,0,245,471,318,10,220,13,172,0,318,471,472,10,211,361,207,0,188,477,189,10,207,361,103,0,189,477,199,10,100,370,1154,0,474,429,475,10,101,272,42,0,198,211,154,10,42,272,41,0,154,211,153,10,172,12,4,0,472,194,92,10,4,12,10,0,92,194,93,10,164,358,163,0,455,186,478,10,163,358,5,0,478,186,185,10,5,15,163,0,196,197,479,10,15,100,163,0,197,190,479,10,98,659,97,0,228,434,183,10,20,31,24,0,108,112,182,10,31,20,33,0,112,108,107,10,234,24,31,0,405,182,112,10,36,1135,124,0,103,102,408,10,81,80,102,0,168,167,470,10,359,1138,919,0,480,481,482,10,253,373,79,0,46,38,483,10,101,81,102,0,198,168,470,10,215,216,1135,0,418,432,102,10,166,4,367,0,406,92,457,10,367,4,14,0,457,92,94,10,423,424,374,0,484,485,486,10,374,424,412,0,486,485,487,10,414,429,430,0,488,489,490,10,427,425,423,0,491,492,484,10,423,425,424,0,484,492,485,10,447,401,449,0,493,494,495,10,449,401,402,0,495,494,496,10,402,401,380,0,496,494,497,10,429,414,401,0,489,488,494,10,444,383,428,0,498,499,500,10,428,383,440,0,500,499,501,10,410,448,403,0,502,503,504,10,440,383,382,0,501,499,505,10,444,428,406,0,498,500,506,10,428,430,406,0,500,490,506,10,452,413,453,0,507,508,509,10,453,413,381,0,509,508,510,10,388,387,389,0,511,512,513,10,389,387,386,0,513,512,514,10,443,442,444,0,515,516,498,10,444,442,383,0,498,516,499,10,403,402,450,0,504,496,517,10,450,402,380,0,517,496,497,10,414,413,452,0,488,508,507,10,415,390,400,0,518,519,520,10,405,436,433,0,521,522,523,10,426,430,427,0,524,490,491,10,405,433,448,0,521,523,503,10,448,433,449,0,503,523,495,10,418,382,384,0,525,505,526,10,448,449,403,0,503,495,504,10,403,449,402,0,504,495,496,10,425,421,420,0,492,527,528,10,409,411,385,0,529,530,531,10,429,401,447,0,489,494,493,10,418,417,411,0,532,533,530,10,411,417,385,0,530,533,531,10,387,385,386,0,512,531,514,10,386,385,417,0,514,531,533,10,432,429,446,0,534,489,535,10,446,429,447,0,535,489,493,10,399,391,398,0,536,537,538,10,264,378,379,0,26,28,34,10,379,378,453,0,34,28,32,10,257,408,347,0,18,19,347,10,408,372,1131,0,539,540,541,10,1129,375,423,0,542,543,484,10,423,375,376,0,484,543,544,10,381,413,375,0,510,508,543,10,375,413,376,0,543,508,544,10,412,408,419,0,41,19,17,10,410,409,405,0,502,529,521,10,405,409,387,0,521,529,512,10,426,414,430,0,524,488,490,10,424,420,412,0,485,528,487,10,412,420,408,0,487,528,539,10,430,429,432,0,490,489,534,10,446,447,431,0,535,493,545,10,430,432,406,0,490,534,506,10,441,445,395,0,546,547,548,10,395,445,396,0,548,547,549,10,404,372,421,0,550,540,527,10,454,404,455,0,551,550,552,10,455,404,422,0,552,550,553,10,455,377,454,0,554,555,556,10,454,377,371,0,556,555,557,10,354,347,404,0,268,347,558,10,372,404,1131,0,540,550,541,10,408,420,372,0,539,528,540,10,372,420,421,0,540,528,527,10,416,438,384,0,559,560,526,10,432,441,406,0,534,546,506,10,406,441,443,0,506,546,515,10,389,386,416,0,561,562,559,10,416,386,438,0,559,562,560,10,435,431,434,0,563,545,564,10,434,431,433,0,564,545,523,10,431,447,433,0,545,493,523,10,433,447,449,0,523,493,495,10,421,422,404,0,527,553,550,10,416,384,439,0,559,526,565,10,391,399,390,0,566,567,519,10,390,399,400,0,519,567,520,10,384,442,439,0,526,516,565,10,425,427,428,0,492,491,500,10,428,427,430,0,500,491,490,10,371,377,451,0,557,555,568,10,451,377,450,0,568,555,517,10,421,440,422,0,527,501,553,10,422,440,382,0,553,501,505,10,386,417,438,0,562,569,560,10,405,448,410,0,521,503,502,10,409,385,387,0,529,531,512,10,422,382,455,0,553,505,552,10,455,382,418,0,552,505,525,10,455,418,377,0,554,532,555,10,377,418,411,0,555,532,530,10,452,380,414,0,507,497,488,10,414,380,401,0,488,497,494,10,397,434,437,0,570,564,571,10,437,434,436,0,571,564,522,10,436,405,388,0,522,521,511,10,388,405,387,0,511,521,512,10,433,436,434,0,523,522,564,10,392,415,439,0,572,518,565,10,382,383,384,0,505,499,526,10,388,398,436,0,511,538,522,10,436,398,437,0,522,538,571,10,392,439,442,0,572,565,516,10,446,445,432,0,535,547,534,10,432,445,441,0,534,547,546,10,445,446,435,0,547,535,563,10,435,446,431,0,563,535,545,10,407,396,435,0,573,549,563,10,435,396,445,0,563,549,547,10,418,384,417,0,525,526,569,10,417,384,438,0,569,526,560,10,406,443,444,0,506,515,498,10,392,442,393,0,572,516,574,10,397,407,434,0,570,573,564,10,434,407,435,0,564,573,563,10,383,442,384,0,499,516,526,10,389,416,399,0,561,559,567,10,399,416,400,0,567,559,520,10,389,399,388,0,513,536,511,10,388,399,398,0,511,536,538,10,416,439,400,0,559,565,520,10,400,439,415,0,520,565,518,10,441,395,443,0,546,548,515,10,443,395,394,0,515,548,575,10,394,393,443,0,575,574,515,10,443,393,442,0,515,574,516,10,451,450,378,0,568,517,576,10,378,450,380,0,576,517,497,10,410,403,377,0,502,504,555,10,377,403,450,0,555,504,517,10,105,321,566,0,7,8,577,10,566,321,269,0,577,8,459,10,426,427,376,0,524,491,544,10,376,427,423,0,544,491,484,10,426,376,414,0,524,544,488,10,414,376,413,0,488,544,508,10,421,425,440,0,527,492,501,10,440,425,428,0,501,492,500,10,378,380,453,0,576,497,509,10,453,380,452,0,509,497,507,10,409,410,377,0,529,502,555,10,377,411,409,0,555,530,529,10,420,424,425,0,528,485,492,10,560,525,561,0,578,579,580,10,561,525,527,0,580,579,581,10,561,542,519,0,580,62,582,10,519,542,520,0,582,62,78,10,525,560,524,0,579,578,583,10,560,531,524,0,578,584,583,10,531,523,496,0,584,585,586,10,496,523,530,0,586,585,587,10,494,459,509,0,588,589,590,10,482,498,461,0,591,592,593,10,461,498,457,0,593,592,594,10,462,491,463,0,595,596,597,10,491,492,463,0,596,598,597,10,463,492,464,0,597,598,599,10,492,493,464,0,598,600,599,10,464,493,465,0,599,600,601,10,465,503,509,0,601,602,590,10,501,506,502,0,603,604,605,10,502,506,505,0,605,604,606,10,490,507,501,0,607,608,603,10,501,507,506,0,603,608,604,10,484,485,483,0,609,610,611,10,483,485,510,0,611,610,612,10,508,497,505,0,613,614,606,10,505,497,502,0,606,614,605,10,526,546,494,0,615,616,588,10,493,486,503,0,600,617,602,10,505,506,480,0,606,604,618,10,480,506,475,0,618,604,619,10,460,461,457,0,620,593,594,10,480,481,505,0,618,621,606,10,505,481,508,0,606,621,613,10,472,471,473,0,622,623,624,10,473,471,474,0,624,623,625,10,475,474,470,0,619,625,626,10,470,474,471,0,626,625,623,10,495,496,469,0,627,586,628,10,468,469,1152,0,629,630,631,10,494,476,559,0,588,632,633,10,500,535,499,0,634,635,636,10,499,535,478,0,636,635,637,10,459,458,463,0,589,638,597,10,463,458,462,0,597,638,595,10,458,483,462,0,638,611,595,10,462,483,510,0,595,611,612,10,497,508,503,0,614,613,639,10,503,508,509,0,639,613,640,10,464,459,463,0,599,589,597,10,539,536,467,0,641,642,643,10,467,536,534,0,643,642,644,10,532,551,535,0,645,646,635,10,535,551,541,0,635,646,647,10,477,509,481,0,648,640,621,10,481,509,508,0,621,640,613,10,526,525,546,0,615,579,616,10,546,525,524,0,616,579,583,10,509,476,494,0,590,632,588,10,529,547,518,0,649,650,81,10,538,533,539,0,651,652,641,10,539,533,536,0,641,652,642,10,537,539,468,0,653,641,629,10,468,539,540,0,629,641,654,10,479,478,541,0,655,637,647,10,541,478,535,0,647,637,635,10,471,472,467,0,623,622,643,10,467,472,540,0,643,622,654,10,494,559,466,0,588,633,656,10,466,559,557,0,656,633,657,10,458,459,494,0,638,589,588,10,526,494,466,0,615,588,656,10,552,532,533,0,658,645,652,10,533,532,536,0,652,645,642,10,1152,496,1150,0,659,586,660,10,481,478,477,0,621,637,648,10,477,478,479,0,648,637,655,10,526,554,527,0,615,661,581,10,545,528,554,0,662,663,661,10,554,528,527,0,661,663,581,10,543,517,514,0,79,664,665,10,543,514,553,0,79,665,666,10,524,484,546,0,583,609,616,10,546,484,483,0,616,609,611,10,527,525,526,0,581,579,615,10,523,531,560,0,585,584,578,10,480,475,499,0,618,619,636,10,499,475,470,0,636,619,626,10,491,486,492,0,596,617,598,10,486,493,492,0,617,600,598,10,465,493,503,0,601,600,602,10,562,456,543,0,80,344,79,10,543,456,517,0,79,344,664,10,516,517,513,0,667,668,60,10,513,517,456,0,60,668,75,10,485,484,482,0,610,609,591,10,482,484,498,0,591,609,592,10,469,473,1132,0,630,624,669,10,556,558,548,0,71,670,68,10,548,558,550,0,68,670,671,10,521,527,528,0,64,581,663,10,467,540,539,0,643,654,641,10,553,530,523,0,666,587,585,10,527,521,561,0,581,64,580,10,561,521,542,0,580,64,62,10,561,519,560,0,580,582,578,10,560,519,523,0,578,582,585,10,469,472,473,0,630,622,624,10,517,516,514,0,668,667,672,10,514,516,538,0,672,667,651,10,512,511,549,0,74,69,67,10,556,547,1153,0,82,650,673,10,547,556,518,0,650,82,81,10,516,515,538,0,667,57,651,10,538,515,533,0,651,57,652,10,499,478,480,0,636,637,618,10,480,478,481,0,618,637,621,10,550,551,552,0,671,646,658,10,466,557,547,0,656,657,650,10,547,557,1153,0,650,657,673,10,469,468,472,0,630,629,622,10,472,468,540,0,622,629,654,10,553,519,520,0,666,582,78,10,544,529,518,0,52,649,81,10,553,523,519,0,666,585,582,10,522,521,528,0,51,64,663,10,529,544,545,0,649,52,662,10,471,467,470,0,623,643,626,10,470,467,534,0,626,643,644,10,541,551,559,0,647,646,674,10,559,551,557,0,674,646,675,10,534,500,470,0,644,634,626,10,470,500,499,0,626,634,636,10,479,541,476,0,655,647,676,10,476,541,559,0,676,647,674,10,539,537,538,0,641,653,651,10,538,537,514,0,651,653,672,10,522,528,544,0,51,663,52,10,544,528,545,0,52,663,662,10,458,494,483,0,638,588,611,10,483,494,546,0,611,588,616,10,479,476,477,0,655,676,648,10,531,498,524,0,584,592,583,10,524,498,484,0,583,592,609,10,520,543,553,0,78,79,666,10,488,487,504,0,677,678,679,10,504,460,457,0,679,620,594,10,460,504,487,0,620,679,678,10,477,476,509,0,648,676,640,10,457,495,504,0,594,627,679,10,549,548,552,0,67,68,658,10,552,548,550,0,658,68,671,10,495,457,498,0,627,594,592,10,475,506,507,0,619,604,608,10,521,522,563,0,64,51,63,10,515,516,513,0,57,667,60,10,558,557,550,0,670,675,671,10,550,557,551,0,671,675,646,10,537,1150,514,0,653,680,672,10,514,530,553,0,665,587,666,10,495,531,496,0,627,584,586,10,473,504,1132,0,624,681,669,10,504,489,488,0,681,682,683,10,475,507,474,0,619,608,625,10,474,507,504,0,625,608,681,10,504,507,489,0,681,608,682,10,489,507,490,0,682,608,607,10,504,473,474,0,681,624,625,10,498,531,495,0,592,584,627,10,509,459,465,0,590,589,601,10,465,459,464,0,601,589,599,10,534,536,500,0,644,642,634,10,500,536,532,0,634,642,645,10,533,515,555,0,652,57,72,10,535,500,532,0,635,634,645,10,549,552,555,0,67,658,72,10,555,552,533,0,72,658,652,10,552,551,532,0,658,646,645,10,529,545,554,0,649,662,661,10,547,554,466,0,650,661,656,10,466,554,526,0,656,661,615,10,529,554,547,0,649,661,650,10,563,108,240,0,63,53,225,10,240,114,563,0,225,61,63,10,668,1121,831,0,684,685,686,10,831,1121,1122,0,686,685,687,10,1123,881,863,0,688,689,690,10,883,881,669,0,691,689,692,10,669,881,1123,0,692,689,688,10,863,670,1123,0,690,693,688,10,868,831,671,0,694,686,695,10,671,831,1122,0,695,686,687,10,907,1011,916,0,696,697,698,10,916,1011,961,0,698,697,699,10,965,976,822,0,700,701,702,10,822,976,826,0,702,701,703,10,908,931,1128,0,704,705,706,10,931,908,913,0,705,704,707,10,935,914,1140,0,708,709,710,10,914,935,1008,0,711,712,713,10,1010,936,915,0,714,715,716,10,827,828,938,0,717,718,719,10,938,828,932,0,719,718,720,10,932,828,908,0,720,718,721,10,930,914,928,0,722,711,723,10,969,931,809,0,724,705,725,10,809,931,913,0,725,705,707,10,914,1008,928,0,711,713,723,10,809,826,969,0,725,703,724,10,969,826,976,0,724,703,701,10,907,930,1011,0,696,722,697,10,1011,930,928,0,697,722,723,10,827,938,915,0,717,719,716,10,915,938,1010,0,716,719,714,10,812,821,936,0,726,727,715,10,936,821,915,0,715,727,716,10,812,936,810,0,726,715,728,10,819,818,930,0,729,730,722,10,930,907,819,0,722,696,729,10,930,642,914,0,722,731,711,10,810,936,829,0,728,715,732,10,930,818,642,0,722,730,731,10,1079,672,1101,0,733,734,735,10,1101,672,677,0,735,734,736,10,912,1072,911,0,737,738,739,10,717,753,912,0,740,741,737,10,912,753,1070,0,737,741,742,10,1078,1099,1120,0,743,744,745,10,1120,1099,678,0,745,744,746,10,1105,674,1106,0,747,748,749,10,1106,674,675,0,749,748,750,10,1068,1106,675,0,751,749,750,10,674,1113,910,0,748,752,753,10,1113,674,1105,0,752,748,747,10,1112,676,1072,0,754,755,738,10,676,1112,1069,0,755,754,756,10,1069,1112,1106,0,756,754,749,10,1070,1072,912,0,742,738,737,10,1013,1070,739,0,757,742,758,10,739,1070,753,0,758,742,741,10,911,1072,676,0,739,738,755,10,673,678,1077,0,759,746,760,10,1077,678,1099,0,760,746,744,10,1100,1119,1077,0,761,762,760,10,1077,1119,673,0,760,762,759,10,1075,677,1113,0,763,736,764,10,677,1075,1101,0,736,763,735,10,1079,1120,672,0,733,745,734,10,681,679,1119,0,765,766,762,10,1119,679,673,0,762,766,759,10,718,743,1069,0,767,768,756,10,1069,743,676,0,756,768,755,10,729,718,675,0,769,767,750,10,675,718,1068,0,750,767,751,10,718,1069,1068,0,767,756,751,10,608,607,614,0,770,771,772,10,614,607,615,0,772,771,773,10,642,830,914,0,774,775,709,10,1143,80,75,0,776,167,143,10,598,595,585,0,777,778,779,10,585,595,581,0,779,778,780,10,597,655,596,0,781,782,783,10,596,655,598,0,783,782,777,10,648,647,894,0,784,785,786,10,894,647,896,0,786,785,787,10,593,594,761,0,436,788,789,10,645,592,649,0,790,791,792,10,613,634,633,0,793,794,795,10,633,634,631,0,795,794,796,10,627,629,624,0,797,798,799,10,624,629,628,0,799,798,800,10,647,622,649,0,785,801,792,10,649,622,623,0,792,801,802,10,633,600,608,0,795,803,770,10,600,601,606,0,803,804,805,10,649,623,587,0,792,802,806,10,587,623,626,0,806,802,807,10,640,611,639,0,808,809,810,10,639,611,632,0,810,809,811,10,611,640,646,0,809,808,812,10,646,640,638,0,812,808,813,10,630,629,653,0,814,798,815,10,653,629,652,0,815,798,816,10,615,612,604,0,773,817,818,10,604,612,603,0,818,817,819,10,615,604,614,0,773,818,772,10,614,604,605,0,772,818,820,10,650,622,648,0,821,801,784,10,648,622,647,0,784,801,785,10,602,637,618,0,822,823,824,10,618,637,619,0,824,823,825,10,603,612,602,0,819,817,822,10,602,612,637,0,822,817,823,10,641,613,605,0,826,793,820,10,605,613,614,0,820,793,772,10,637,601,619,0,823,804,825,10,619,601,651,0,825,804,827,10,645,591,588,0,790,828,829,10,588,591,583,0,829,828,830,10,607,600,606,0,771,803,805,10,582,586,626,0,831,832,807,10,626,586,587,0,807,832,806,10,582,611,586,0,831,809,832,10,586,611,646,0,832,809,812,10,633,631,600,0,795,796,803,10,643,641,644,0,833,826,834,10,637,612,601,0,823,817,804,10,601,612,606,0,804,817,805,10,583,591,610,0,830,828,835,10,610,591,661,0,835,828,836,10,598,655,595,0,777,782,778,10,595,655,654,0,778,782,837,10,657,654,610,0,838,837,835,10,581,595,656,0,780,778,839,10,656,595,658,0,839,778,840,10,654,657,595,0,837,838,778,10,595,657,658,0,778,838,840,10,610,661,609,0,835,836,841,10,609,661,584,0,841,836,842,10,619,651,617,0,825,827,843,10,617,651,636,0,843,827,844,10,640,639,643,0,808,810,833,10,643,639,641,0,833,810,826,10,661,646,584,0,836,812,842,10,584,646,638,0,842,812,813,10,634,630,631,0,794,814,796,10,631,630,653,0,796,814,815,10,629,627,652,0,798,797,816,10,652,627,625,0,816,797,845,10,652,625,600,0,816,845,803,10,620,623,616,0,846,802,847,10,616,623,622,0,847,802,801,10,607,606,615,0,771,805,773,10,615,606,612,0,773,805,817,10,590,594,660,0,848,788,849,10,636,600,635,0,844,803,850,10,617,636,621,0,843,844,851,10,621,636,635,0,851,844,850,10,621,635,627,0,851,850,797,10,627,635,625,0,797,850,845,10,625,635,600,0,845,850,803,10,631,653,600,0,796,815,803,10,591,586,661,0,828,832,836,10,661,586,646,0,836,832,812,10,655,597,583,0,782,781,830,10,583,597,588,0,830,781,829,10,587,586,645,0,806,832,790,10,645,586,591,0,790,832,828,10,583,610,655,0,830,835,782,10,655,610,654,0,782,835,837,10,585,662,589,0,779,852,437,10,581,662,585,0,780,852,779,10,633,608,613,0,795,770,793,10,613,608,614,0,793,770,772,10,639,632,634,0,810,811,794,10,634,632,630,0,794,811,814,10,639,634,641,0,810,794,826,10,641,634,613,0,826,794,793,10,629,630,628,0,798,814,800,10,628,630,632,0,800,814,811,10,616,617,620,0,847,843,846,10,620,617,621,0,846,843,851,10,624,626,620,0,799,807,846,10,620,626,623,0,846,807,802,10,624,628,626,0,799,800,807,10,626,628,582,0,807,800,831,10,616,622,618,0,847,801,824,10,618,622,650,0,824,801,821,10,624,620,627,0,799,846,797,10,627,620,621,0,797,846,851,10,618,619,616,0,824,825,847,10,616,619,617,0,847,825,843,10,628,632,582,0,800,811,831,10,582,632,611,0,831,811,809,10,636,651,600,0,844,827,803,10,772,776,590,0,853,854,848,10,590,776,775,0,848,854,855,10,571,665,572,0,856,857,858,10,572,665,573,0,858,857,859,10,570,572,575,0,860,858,861,10,575,572,573,0,861,858,859,10,574,570,576,0,862,860,863,10,576,570,575,0,863,860,861,10,573,665,575,0,859,857,861,10,575,665,740,0,861,857,864,10,571,579,665,0,856,865,857,10,666,644,605,0,866,834,820,10,605,644,641,0,820,834,826,10,660,772,590,0,849,853,848,10,808,822,871,0,867,702,868,10,878,876,873,0,869,870,871,10,873,876,841,0,871,870,872,10,836,843,845,0,873,874,875,10,814,834,603,0,876,877,819,10,603,834,604,0,819,877,818,10,699,705,716,0,878,879,880,10,716,705,703,0,880,879,881,10,842,843,878,0,882,874,869,10,878,843,877,0,869,874,883,10,875,860,835,0,884,885,886,10,835,860,874,0,886,885,887,10,872,874,861,0,888,887,889,10,861,874,860,0,889,887,885,10,872,842,873,0,888,882,871,10,873,842,878,0,871,882,869,10,843,836,877,0,874,873,883,10,872,873,874,0,888,871,887,10,814,808,834,0,876,867,877,10,834,808,861,0,877,867,889,10,808,871,861,0,867,868,889,10,861,871,872,0,889,868,888,10,842,872,844,0,882,888,890,10,844,872,871,0,890,888,868,10,805,682,735,0,891,892,893,10,28,234,196,0,118,405,119,10,700,706,704,0,894,895,896,10,817,824,820,0,897,898,899,10,709,802,801,0,900,901,902,10,723,726,710,0,903,904,905,10,710,726,725,0,905,904,906,10,801,802,804,0,902,901,907,10,804,802,803,0,907,901,908,10,736,733,732,0,909,910,911,10,685,720,763,0,912,913,914,10,763,720,722,0,914,913,915,10,594,777,761,0,788,916,789,10,801,679,709,0,902,917,900,10,709,679,681,0,900,917,918,10,736,735,733,0,909,893,910,10,733,735,734,0,910,893,919,10,706,705,704,0,895,879,896,10,679,801,682,0,917,902,892,10,682,801,804,0,892,902,907,10,1113,927,910,0,752,920,753,10,722,721,763,0,915,921,914,10,726,721,727,0,904,921,922,10,727,721,722,0,922,921,915,10,824,899,1127,0,898,923,924,10,806,816,813,0,925,926,927,10,813,816,815,0,927,926,928,10,850,891,887,0,929,930,931,10,808,814,815,0,867,876,928,10,827,821,811,0,717,727,932,10,820,916,817,0,899,933,897,10,895,894,896,0,934,786,787,10,897,649,592,0,935,792,791,10,903,904,900,0,936,937,938,10,900,904,901,0,938,937,939,10,710,802,738,0,905,901,940,10,738,802,742,0,940,901,941,10,775,763,721,0,855,914,921,10,833,864,865,0,942,943,944,10,802,709,742,0,901,900,941,10,806,813,602,0,925,927,822,10,891,890,888,0,930,945,946,10,888,890,889,0,946,945,947,10,811,887,892,0,932,931,948,10,887,891,892,0,931,930,948,10,856,884,868,0,949,950,694,10,868,884,857,0,694,950,951,10,837,851,884,0,952,953,954,10,884,851,885,0,954,953,955,10,837,853,852,0,956,957,958,10,851,893,885,0,953,959,955,10,710,725,802,0,905,906,901,10,802,725,803,0,901,906,908,10,843,826,809,0,874,703,725,10,825,830,839,0,960,775,961,10,839,830,901,0,961,775,939,10,811,892,827,0,932,948,717,10,895,759,894,0,934,962,786,10,848,847,849,0,963,964,965,10,849,847,846,0,965,964,966,10,893,890,905,0,959,945,967,10,890,891,905,0,945,930,967,10,905,891,850,0,967,930,929,10,893,851,890,0,959,953,945,10,890,851,889,0,945,953,947,10,889,852,888,0,947,968,946,10,888,852,847,0,946,968,969,10,904,903,886,0,937,936,970,10,886,903,756,0,970,936,971,10,764,758,767,0,972,973,974,10,767,758,795,0,974,973,975,10,784,783,774,0,976,977,978,10,764,838,778,0,979,980,981,10,778,838,902,0,981,980,982,10,734,803,725,0,919,908,906,10,710,738,723,0,905,940,903,10,723,738,714,0,903,940,983,10,759,778,899,0,962,984,923,10,720,785,722,0,913,985,915,10,906,819,899,0,986,729,987,10,777,797,761,0,916,988,789,10,761,797,796,0,789,988,989,10,849,846,879,0,965,966,990,10,876,878,862,0,870,869,991,10,862,878,877,0,991,869,883,10,703,706,715,0,881,895,992,10,706,703,705,0,895,881,879,10,750,788,791,0,993,994,995,10,791,788,790,0,995,994,996,10,750,749,788,0,993,997,994,10,788,749,787,0,994,997,998,10,749,794,787,0,997,999,998,10,787,794,793,0,998,999,1000,10,744,692,749,0,1001,1002,997,10,749,692,794,0,997,1002,999,10,743,718,746,0,1003,1004,1005,10,746,718,730,0,1005,1004,1006,10,727,722,732,0,922,915,911,10,732,722,785,0,911,915,985,10,820,824,1127,0,899,898,924,10,791,747,750,0,995,1007,993,10,750,747,745,0,993,1007,1008,10,900,901,818,0,938,939,1009,10,818,901,830,0,1009,939,775,10,724,775,721,0,1010,855,921,10,856,868,670,0,949,694,693,10,670,868,671,0,693,694,695,10,681,1119,739,0,765,762,1011,10,739,1119,1013,0,1011,762,1012,10,748,786,911,0,1013,1014,739,10,911,786,912,0,739,1014,737,10,743,748,676,0,768,1013,755,10,676,748,911,0,755,1013,739,10,808,815,909,0,867,928,1015,10,670,863,856,0,693,690,949,10,856,863,859,0,949,690,1016,10,904,839,901,0,937,961,939,10,821,827,915,0,727,717,716,10,808,909,822,0,867,1015,702,10,804,735,682,0,907,893,892,10,741,739,715,0,1017,758,992,10,715,739,753,0,992,758,741,10,835,874,841,0,886,887,872,10,841,874,873,0,872,887,871,10,724,721,723,0,1010,921,903,10,723,721,726,0,903,921,904,10,723,714,724,0,903,983,1010,10,724,714,713,0,1010,983,1018,10,735,804,734,0,893,907,919,10,734,804,803,0,919,907,908,10,698,704,699,0,1019,896,878,10,699,704,705,0,878,896,879,10,691,688,686,0,1020,1021,1022,10,686,688,712,0,1022,1021,1023,10,672,805,680,0,734,891,1024,10,686,712,708,0,1022,1023,1025,10,708,712,711,0,1025,1023,1026,10,678,673,682,0,746,759,892,10,682,673,679,0,892,759,766,10,805,735,680,0,891,893,1027,10,680,735,736,0,1027,893,909,10,692,744,696,0,1002,1001,1028,10,696,744,695,0,1028,1001,1029,10,702,698,787,0,1030,1019,998,10,787,698,788,0,998,1019,994,10,717,786,716,0,740,1014,880,10,716,786,789,0,880,1014,1031,10,700,701,708,0,894,1032,1033,10,708,701,686,0,1033,1032,1034,10,769,768,752,0,1035,1036,1037,10,752,768,687,0,1037,1036,1038,10,724,713,1125,0,1010,1018,1039,10,765,752,766,0,1040,1041,1042,10,766,752,757,0,1042,1041,1043,10,836,864,877,0,873,943,883,10,877,864,862,0,883,943,991,10,881,883,882,0,689,691,1044,10,881,882,853,0,689,1044,957,10,853,882,880,0,957,1044,1045,10,784,773,783,0,976,1046,977,10,783,773,713,0,977,1046,1018,10,707,741,706,0,1047,1017,895,10,706,741,715,0,895,1017,992,10,778,759,764,0,984,962,972,10,764,759,758,0,972,962,973,10,774,783,762,0,978,977,1048,10,762,783,770,0,1048,977,1049,10,746,751,743,0,1005,1050,1003,10,743,751,748,0,1003,1050,1051,10,745,744,750,0,1008,1001,993,10,750,744,749,0,993,1001,997,10,711,707,708,0,1026,1052,1025,10,706,700,707,0,895,894,1047,10,715,753,703,0,992,741,881,10,753,717,703,0,741,740,881,10,703,717,716,0,881,740,880,10,788,698,790,0,994,1019,996,10,790,698,699,0,996,1019,878,10,697,695,745,0,1053,1029,1008,10,745,695,744,0,1008,1029,1001,10,747,791,746,0,1007,995,1005,10,746,791,751,0,1005,995,1050,10,648,824,817,0,784,898,897,10,792,794,693,0,1054,999,1055,10,693,794,692,0,1055,999,1002,10,894,824,648,0,786,898,784,10,786,748,789,0,1014,1051,1031,10,789,748,751,0,1031,1051,1050,10,789,751,790,0,1031,1050,996,10,790,751,791,0,996,1050,995,10,700,708,707,0,894,1033,1047,10,693,692,694,0,1055,1002,1056,10,694,692,696,0,1056,1002,1028,10,848,913,908,0,963,707,704,10,846,880,879,0,966,1045,990,10,879,880,865,0,990,1045,944,10,891,888,892,0,930,946,948,10,892,888,823,0,948,946,1057,10,844,843,842,0,890,874,882,10,851,837,889,0,953,1058,947,10,889,837,852,0,947,1058,968,10,831,858,668,0,686,1059,684,10,668,858,867,0,684,1059,1060,10,843,809,845,0,874,725,875,10,845,809,913,0,875,725,707,10,849,879,845,0,965,990,875,10,845,879,836,0,875,990,873,10,864,836,865,0,943,873,944,10,865,836,879,0,944,873,990,10,857,869,855,0,1061,1062,1063,10,855,869,854,0,1063,1062,1064,10,898,798,760,0,1065,1066,1067,10,767,800,762,0,974,1068,1048,10,762,800,774,0,1048,1068,978,10,760,798,796,0,1067,1066,989,10,796,798,799,0,989,1066,1069,10,758,898,795,0,973,1065,975,10,795,898,760,0,975,1065,1067,10,720,731,785,0,913,1070,985,10,798,898,897,0,1066,1065,935,10,754,757,689,0,1071,1043,441,10,691,771,688,0,1020,1072,1021,10,734,725,733,0,919,906,910,10,693,768,792,0,1055,1036,1054,10,792,768,769,0,1054,1036,1035,10,688,771,765,0,1021,1072,1073,10,792,769,691,0,1054,1035,1074,10,691,769,771,0,1074,1035,1075,10,902,903,906,0,982,1076,986,10,906,903,900,0,986,1076,1077,10,759,899,894,0,962,923,786,10,894,899,824,0,786,923,898,10,900,818,906,0,1077,730,986,10,906,818,819,0,986,730,729,10,903,902,756,0,1076,982,1078,10,756,902,838,0,1078,982,980,10,757,752,689,0,1043,1041,441,10,689,752,687,0,441,1041,1079,10,778,902,899,0,981,982,987,10,899,902,906,0,987,982,986,10,843,844,826,0,874,890,703,10,826,844,822,0,703,890,702,10,793,792,701,0,1000,1054,1032,10,701,792,686,0,1032,1054,1034,10,686,792,691,0,1034,1054,1074,10,733,725,727,0,910,906,922,10,727,725,726,0,922,906,904,10,732,733,727,0,911,910,922,10,853,880,846,0,957,1045,966,10,848,849,913,0,963,965,707,10,913,849,845,0,707,965,875,10,853,859,863,0,957,1016,690,10,881,853,863,0,689,957,690,10,766,757,764,0,1042,1043,979,10,764,757,838,0,979,1043,980,10,766,767,765,0,1080,974,1073,10,765,767,762,0,1073,974,1048,10,754,35,755,0,1071,1081,106,10,815,816,909,0,928,926,1015,10,909,816,916,0,1015,926,933,10,844,871,822,0,890,868,702,10,916,816,817,0,933,926,897,10,752,765,769,0,1037,1082,1035,10,769,765,771,0,1035,1082,1075,10,892,823,827,0,948,1057,717,10,1140,914,830,0,710,709,775,10,672,680,740,0,734,1024,1083,10,762,770,765,0,1048,1049,1073,10,869,857,885,0,1062,1084,955,10,885,857,884,0,955,1084,1085,10,858,855,867,0,1059,1086,1060,10,867,855,866,0,1087,1088,1089,10,855,854,866,0,1088,1064,1089,10,866,854,870,0,1089,1064,1090,10,704,698,702,0,896,1019,1030,10,704,702,700,0,896,1030,894,10,700,702,701,0,894,1030,1032,10,790,699,789,0,996,878,1031,10,789,699,716,0,1031,878,880,10,787,793,702,0,998,1000,1030,10,702,793,701,0,1030,1000,1032,10,719,697,747,0,1091,1053,1007,10,747,697,745,0,1007,1053,1008,10,719,747,730,0,1091,1007,1006,10,730,747,746,0,1006,1007,1005,10,794,792,793,0,999,1054,1000,10,717,912,786,0,740,737,1014,10,805,678,682,0,891,746,892,10,927,1113,677,0,1092,764,736,10,783,713,770,0,977,1018,1049,10,687,768,779,0,1038,1036,443,10,779,768,782,0,443,1036,1093,10,687,779,689,0,1079,443,441,10,689,779,1136,0,441,443,442,10,589,593,799,0,437,436,1069,10,663,662,659,0,438,852,434,10,895,896,898,0,934,787,1065,10,774,777,784,0,978,916,976,10,784,777,594,0,976,916,788,10,756,838,754,0,1078,980,1071,10,754,838,757,0,1071,980,1043,10,840,755,690,0,1094,106,1095,10,690,755,780,0,1095,106,105,10,755,840,886,0,106,1094,970,10,754,689,35,0,1071,441,1081,10,216,1137,1135,0,432,433,102,10,887,811,850,0,931,932,929,10,896,897,898,0,787,935,1065,10,754,755,756,0,1071,106,971,10,756,755,886,0,971,106,970,10,810,829,807,0,728,732,1096,10,839,904,840,0,961,937,1094,10,840,904,886,0,1094,937,970,10,777,774,797,0,916,978,988,10,797,774,800,0,988,978,1068,10,766,764,767,0,1080,972,974,10,768,693,782,0,1036,1055,1093,10,782,693,1147,0,1093,1055,1097,10,685,763,776,0,912,914,854,10,776,763,775,0,854,914,855,10,795,760,797,0,975,1067,988,10,797,760,796,0,988,1067,989,10,811,821,812,0,932,727,726,10,825,807,830,0,960,1096,775,10,795,800,767,0,975,1068,974,10,797,800,795,0,988,1068,975,10,829,830,807,0,732,775,1096,10,898,758,895,0,1065,973,934,10,895,758,759,0,934,973,962,10,865,880,882,0,944,1045,1044,10,675,674,729,0,750,748,769,10,729,674,728,0,769,748,1098,10,728,674,910,0,1098,748,753,10,858,857,855,0,1099,1100,1101,10,857,858,868,0,1100,1099,694,10,868,858,831,0,694,1099,686,10,848,823,847,0,1102,1057,969,10,847,823,888,0,969,1057,946,10,823,848,828,0,1057,1102,718,10,828,848,908,0,718,1102,721,10,827,823,828,0,717,1057,718,10,738,711,714,0,940,1026,983,10,714,711,712,0,983,1026,1023,10,688,713,712,0,1021,1018,1023,10,712,713,714,0,1023,1018,983,10,742,709,707,0,941,900,1052,10,707,709,741,0,1052,900,1103,10,739,741,681,0,1104,1103,918,10,681,741,709,0,918,1103,900,10,738,742,711,0,940,941,1026,10,713,688,770,0,1018,1021,1049,10,688,765,770,0,1021,1073,1049,10,707,711,742,0,1052,1026,941,10,819,907,820,0,729,696,1105,10,820,907,916,0,1105,696,698,10,882,924,865,0,1044,1106,944,10,684,919,782,0,1107,482,1093,10,782,919,779,0,1093,482,443,10,690,780,925,0,1095,105,1108,10,925,780,683,0,1108,105,1109,10,864,833,862,0,943,942,991,10,862,833,923,0,991,942,1110,10,923,832,841,0,1110,1111,872,10,841,832,835,0,872,1111,886,10,833,865,924,0,942,944,1106,10,841,876,923,0,872,870,1110,10,923,876,862,0,1110,870,991,10,846,847,852,0,966,964,958,10,859,837,856,0,1016,1112,949,10,856,837,884,0,949,1112,1113,10,837,859,853,0,956,1016,957,10,852,853,846,0,958,957,966,10,815,814,813,0,928,876,927,10,813,814,603,0,927,876,819,10,608,600,607,0,770,803,771,10,590,775,773,0,848,855,1046,10,775,724,1125,0,855,1010,1039,10,590,773,594,0,848,1046,788,10,594,773,784,0,788,1046,976,10,652,600,653,0,816,803,815,10,651,601,600,0,827,804,803,10,588,597,798,0,829,781,1066,10,897,896,649,0,935,787,792,10,649,896,647,0,792,787,785,10,592,588,798,0,791,829,1066,10,592,798,897,0,791,1066,935,10,664,660,594,0,1114,849,788,10,816,806,817,0,926,925,897,10,663,664,593,0,438,1114,436,10,593,664,594,0,436,1114,788,10,650,602,618,0,821,822,824,10,650,806,602,0,821,925,822,10,806,650,817,0,925,821,897,10,648,817,650,0,784,897,821,10,860,875,666,0,885,884,866,10,666,875,667,0,866,884,1115,10,662,93,659,0,852,435,434,10,577,737,740,0,1116,1117,864,10,740,737,576,0,864,1117,863,10,813,603,602,0,927,819,822,10,587,645,649,0,806,790,792,10,834,861,666,0,877,889,866,10,666,861,860,0,866,889,885,10,736,732,577,0,909,911,1116,10,645,588,592,0,790,829,791,10,798,597,799,0,1066,781,1069,10,799,597,596,0,1069,781,783,10,728,910,1155,0,1098,753,1118,10,740,680,577,0,864,1027,1116,10,577,680,736,0,1116,1027,909,10,740,576,575,0,864,863,861,10,672,665,677,0,734,1119,736,10,677,665,927,0,736,1119,1092,10,665,672,740,0,1119,734,1083,10,785,731,737,0,985,1070,1117,10,737,731,568,0,1117,1070,1120,10,732,785,577,0,911,985,1116,10,577,785,737,0,1116,985,1117,10,910,927,1155,0,753,920,1118,10,666,605,834,0,866,820,877,10,834,605,604,0,877,820,818,10,574,576,568,0,862,863,1120,10,568,576,737,0,1120,863,1117,10,569,728,579,0,1121,1122,865,10,579,728,665,0,865,1122,857,10,589,662,663,0,437,852,438,10,799,593,761,0,1069,436,789,10,98,97,24,0,228,183,182,10,585,589,596,0,779,437,783,10,596,598,585,0,783,777,779,10,799,596,589,0,1069,783,437,10,818,830,642,0,1009,775,774,10,644,667,643,0,834,1115,833,10,666,667,644,0,866,1115,834,10,799,761,796,0,1069,789,989,10,580,663,659,0,1123,438,434,10,969,981,931,0,1124,1125,1126,10,931,981,980,0,1126,1125,1127,10,971,987,986,0,1128,1129,1130,10,981,982,980,0,1125,1131,1127,10,980,982,984,0,1127,1131,1132,10,1004,1006,958,0,1133,1134,1135,10,958,1006,959,0,1135,1134,1136,10,959,937,958,0,1136,1137,1135,10,986,958,971,0,1130,1135,1128,10,997,940,985,0,1138,1139,1140,10,985,940,1001,0,1140,1139,1141,10,967,960,1005,0,1142,1143,1144,10,997,939,940,0,1138,1145,1139,10,1001,963,985,0,1141,1146,1140,10,985,963,987,0,1140,1146,1129,10,938,970,1010,0,1147,1148,1149,10,1010,970,1009,0,1149,1148,1150,10,945,946,944,0,1151,1152,1153,10,944,946,943,0,1153,1152,1154,10,940,999,1001,0,1139,1155,1141,10,1001,999,1000,0,1141,1155,1156,10,937,959,1007,0,1137,1136,1157,10,1007,959,960,0,1157,1136,1143,10,971,1009,970,0,1128,1150,1148,10,957,947,972,0,1158,1159,1160,10,962,990,993,0,1161,1162,1163,10,983,984,987,0,1164,1132,1129,10,1006,990,1005,0,1134,1162,1144,10,1005,990,962,0,1144,1162,1161,10,975,941,939,0,1165,1166,1145,10,959,1006,960,0,1136,1134,1143,10,960,1006,1005,0,1143,1134,1144,10,982,977,978,0,1131,1167,1168,10,966,942,968,0,1169,1170,1171,10,986,1004,958,0,1130,1133,1135,10,942,974,968,0,1170,1172,1171,10,968,974,975,0,1171,1172,1173,10,944,943,942,0,1153,1154,1170,10,942,943,974,0,1170,1154,1172,10,989,1003,986,0,1174,1175,1130,10,986,1003,1004,0,1130,1175,1133,10,955,948,956,0,1176,1177,1178,10,829,936,935,0,732,715,708,10,935,936,1010,0,708,715,714,10,965,909,1130,0,700,1015,1179,10,909,965,822,0,1015,700,702,10,931,980,1128,0,1126,1127,1180,10,932,980,933,0,1181,1127,1182,10,938,932,970,0,1147,1181,1148,10,970,932,933,0,1148,1181,1182,10,969,976,965,0,724,701,700,10,967,962,966,0,1142,1161,1169,10,966,962,944,0,1169,1161,1153,10,983,987,971,0,1164,1129,1128,10,965,977,969,0,1183,1167,1124,10,969,977,981,0,1124,1167,1125,10,987,989,986,0,1129,1174,1130,10,1003,988,1004,0,1175,1184,1133,10,987,963,989,0,1129,1146,1174,10,953,1002,952,0,1185,1186,1187,10,952,1002,998,0,1187,1186,1188,10,961,978,929,0,1189,1168,1190,10,1011,1012,961,0,1191,1192,1189,10,961,1012,979,0,1189,1192,1193,10,1012,1011,934,0,1194,1195,1196,10,934,1011,928,0,1196,1195,1197,10,916,961,909,0,933,1198,1015,10,909,961,1130,0,1015,1198,1179,10,965,929,977,0,1183,1190,1167,10,977,929,978,0,1167,1190,1168,10,973,941,995,0,1199,1166,1200,10,1000,998,963,0,1156,1188,1146,10,963,998,989,0,1146,1188,1174,10,946,973,943,0,1201,1199,1202,10,943,973,995,0,1202,1199,1200,10,990,988,991,0,1162,1184,1203,10,991,988,992,0,1203,1184,1204,10,988,990,1004,0,1184,1162,1133,10,1004,990,1006,0,1133,1162,1134,10,978,961,979,0,1168,1189,1193,10,973,996,941,0,1199,1205,1166,10,957,956,947,0,1158,1206,1159,10,947,956,948,0,1159,1206,1207,10,941,996,999,0,1166,1205,1155,10,982,985,984,0,1131,1140,1132,10,984,985,987,0,1132,1140,1129,10,1007,934,1008,0,1157,1196,1208,10,1008,934,928,0,1208,1196,1197,10,939,997,979,0,1145,1138,1193,10,979,997,978,0,1193,1138,1168,10,943,995,974,0,1202,1200,1209,10,962,967,1005,0,1161,1142,1144,10,966,944,942,0,1169,1153,1170,10,979,1012,939,0,1193,1192,1145,10,939,1012,975,0,1145,1192,1165,10,968,975,934,0,1171,1173,1196,10,934,975,1012,0,1196,1173,1194,10,1009,971,937,0,1150,1128,1137,10,937,971,958,0,1137,1128,1135,10,993,991,994,0,1163,1203,1210,10,994,991,954,0,1210,1203,1211,10,944,962,945,0,1153,1161,1151,10,945,962,993,0,1151,1161,1163,10,990,991,993,0,1162,1203,1163,10,949,996,972,0,1212,1205,1160,10,939,941,940,0,1145,1166,1139,10,945,993,955,0,1151,1163,1176,10,955,993,994,0,1176,1163,1210,10,949,999,996,0,1212,1155,1205,10,998,1002,989,0,1188,1186,1174,10,989,1002,1003,0,1174,1186,1175,10,1002,992,1003,0,1186,1204,1175,10,1003,992,988,0,1175,1204,1184,10,964,992,953,0,1213,1204,1185,10,953,992,1002,0,1185,1204,1186,10,975,974,941,0,1165,1209,1166,10,941,974,995,0,1166,1209,1200,10,963,1001,1000,0,1146,1141,1156,10,949,950,999,0,1212,1214,1155,10,954,991,964,0,1211,1203,1213,10,964,991,992,0,1213,1203,1204,10,940,941,999,0,1139,1166,1155,10,946,956,973,0,1201,1206,1199,10,973,956,957,0,1199,1206,1158,10,955,956,945,0,1176,1178,1151,10,945,956,946,0,1151,1178,1152,10,973,957,996,0,1199,1158,1205,10,996,957,972,0,1205,1158,1160,10,998,1000,952,0,1188,1156,1187,10,1000,951,952,0,1156,1215,1187,10,951,1000,950,0,1215,1156,1214,10,950,1000,999,0,1214,1156,1155,10,937,1007,935,0,1137,1157,1216,10,935,1007,1008,0,1216,1157,1208,10,967,934,960,0,1142,1196,1143,10,960,934,1007,0,1143,1196,1157,10,980,984,933,0,1127,1132,1182,10,933,984,983,0,1182,1132,1164,10,983,971,933,0,1164,1128,1182,10,933,971,970,0,1182,1128,1148,10,978,997,982,0,1168,1138,1131,10,982,997,985,0,1131,1138,1140,10,1009,937,1010,0,1150,1137,1149,10,1010,937,935,0,1149,1137,1216,10,966,934,967,0,1169,1196,1142,10,934,966,968,0,1196,1169,1171,10,977,982,981,0,1167,1131,1125,10,1084,1082,1118,0,1217,1218,1219,10,1118,1082,1117,0,1219,1218,1220,10,1118,1076,1099,0,1219,1221,744,10,1099,1076,1077,0,744,1221,760,10,1082,1081,1117,0,1218,1222,1220,10,1117,1081,1088,0,1220,1222,1223,10,1087,1080,1053,0,1224,1225,1226,10,1053,1080,1088,0,1226,1225,1223,10,1051,1066,1016,0,1227,1228,1229,10,1039,1018,1055,0,1230,1231,1232,10,1055,1018,1014,0,1232,1231,1233,10,1020,1048,1019,0,1234,1235,1236,10,1021,1049,1020,0,1237,1238,1234,10,1020,1049,1048,0,1234,1238,1235,10,1022,1050,1021,0,1239,1240,1237,10,1021,1050,1049,0,1237,1240,1238,10,1022,1066,1060,0,1239,1228,1241,10,1062,1063,1059,0,1242,1243,1244,10,1059,1063,1058,0,1244,1243,1245,10,1047,1058,1064,0,1246,1245,1247,10,1064,1058,1063,0,1247,1245,1243,10,1067,1042,1040,0,1248,1249,1250,10,1040,1042,1041,0,1250,1249,1251,10,1059,1054,1062,0,1244,1252,1242,10,1062,1054,1065,0,1242,1252,1253,10,1083,1051,1103,0,1254,1227,1255,10,1060,1043,1050,0,1241,1256,1240,10,1062,1037,1063,0,1242,1257,1243,10,1063,1037,1032,0,1243,1257,1258,10,1017,1014,1018,0,1259,1233,1231,10,1065,1038,1062,0,1253,1260,1242,10,1062,1038,1037,0,1242,1260,1257,10,1031,1028,1030,0,1261,1262,1263,10,1030,1028,1029,0,1263,1262,1264,10,1028,1031,1027,0,1262,1261,1265,10,1027,1031,1032,0,1265,1261,1258,10,1151,1053,1026,0,1266,1226,1267,10,1026,1053,1052,0,1267,1226,1268,10,1051,1116,1033,0,1227,1269,1270,10,1057,1056,1092,0,1271,1272,1273,10,1092,1056,1035,0,1273,1272,1274,10,1019,1015,1020,0,1236,1275,1234,10,1020,1015,1016,0,1234,1275,1229,10,1067,1040,1019,0,1248,1250,1236,10,1019,1040,1015,0,1236,1250,1275,10,1054,1060,1065,0,1252,1276,1253,10,1065,1060,1066,0,1253,1276,1277,10,1021,1020,1016,0,1237,1234,1229,10,1091,1093,1024,0,1278,1279,1280,10,1024,1093,1096,0,1280,1279,1281,10,1098,1108,1092,0,1282,1283,1273,10,1092,1108,1089,0,1273,1283,1284,10,1034,1038,1066,0,1285,1260,1277,10,1066,1038,1065,0,1277,1260,1253,10,1083,1103,1082,0,1254,1255,1218,10,1082,1103,1081,0,1218,1255,1222,10,1066,1051,1033,0,1228,1227,1270,10,1086,1075,1104,0,1286,763,1287,10,1093,1090,1096,0,1279,1288,1281,10,1096,1090,1095,0,1281,1288,1289,10,1094,1025,1096,0,1290,1291,1281,10,1096,1025,1097,0,1281,1291,1292,10,1092,1035,1098,0,1273,1274,1282,10,1098,1035,1036,0,1282,1274,1293,10,1097,1029,1024,0,1292,1264,1280,10,1024,1029,1028,0,1280,1264,1262,10,1114,1116,1023,0,1294,1269,1295,10,1023,1116,1051,0,1295,1269,1227,10,1015,1051,1016,0,1275,1227,1229,10,1083,1023,1051,0,1254,1295,1227,10,1109,1090,1089,0,1296,1288,1284,10,1089,1090,1093,0,1284,1288,1279,10,1025,1094,1149,0,1291,1290,1297,10,1151,1149,1053,0,1266,1298,1226,10,1038,1034,1035,0,1260,1285,1274,10,1035,1034,1036,0,1274,1285,1293,10,1083,1084,1111,0,1254,1217,1299,10,1084,1085,1111,0,1217,1300,1299,10,1111,1085,1102,0,1299,1300,1301,10,1100,1071,1074,0,761,1302,1303,10,1100,1110,1071,0,761,1304,1302,10,1081,1103,1041,0,1222,1255,1251,10,1041,1103,1040,0,1251,1255,1250,10,1084,1083,1082,0,1217,1254,1218,10,1080,1117,1088,0,1225,1220,1223,10,1037,1056,1032,0,1257,1272,1258,10,1032,1056,1027,0,1258,1272,1265,10,1043,1048,1049,0,1256,1235,1238,10,1043,1049,1050,0,1256,1238,1240,10,1022,1060,1050,0,1239,1241,1240,10,1074,1013,1100,0,1303,1012,761,10,1100,1013,1119,0,761,1012,762,10,1013,1074,1070,0,757,1305,742,10,1070,1074,1073,0,742,1305,1306,10,1055,1041,1039,0,1232,1251,1230,10,1039,1041,1042,0,1230,1251,1249,10,1026,1052,1133,0,1267,1268,1307,10,1107,1115,1105,0,1308,1309,747,10,1105,1115,1113,0,747,1309,752,10,1078,1085,1084,0,743,1300,1217,10,1024,1096,1097,0,1280,1281,1292,10,1110,1080,1087,0,1304,1225,1224,10,1099,1078,1118,0,744,743,1219,10,1118,1078,1084,0,1219,743,1217,10,1080,1076,1117,0,1225,1221,1220,10,1117,1076,1118,0,1220,1221,1219,10,1026,1030,1029,0,1310,1263,1264,10,1074,1071,1073,0,1305,1311,1306,10,1073,1071,1095,0,1306,1311,1289,10,1069,1106,1068,0,756,749,751,10,1115,1156,1113,0,1309,1312,752,10,1113,1104,1075,0,764,1287,763,10,1090,1072,1095,0,1288,738,1289,10,1095,1072,1073,0,1289,738,1306,10,1056,1037,1035,0,1272,1257,1274,10,1035,1037,1038,0,1274,1257,1260,10,1107,1109,1108,0,1308,1296,1283,10,1023,1104,1114,0,1295,1287,1294,10,1115,1114,1156,0,1309,1313,1312,10,1097,1025,1029,0,1292,1291,1264,10,1029,1025,1026,0,1264,1291,1310,10,1110,1077,1076,0,1304,760,1221,10,1101,1075,1086,0,735,763,1286,10,1110,1076,1080,0,1304,1221,1225,10,1079,1085,1078,0,733,1300,743,10,1086,1102,1101,0,1286,1301,735,10,1091,1024,1027,0,1278,1280,1265,10,1027,1024,1028,0,1265,1280,1262,10,1114,1108,1116,0,1313,1283,1314,10,1116,1108,1098,0,1314,1283,1282,10,1091,1027,1057,0,1278,1265,1271,10,1057,1027,1056,0,1271,1265,1272,10,1036,1033,1098,0,1293,1315,1282,10,1098,1033,1116,0,1282,1315,1314,10,1096,1095,1094,0,1281,1289,1290,10,1094,1095,1071,0,1290,1289,1311,10,1102,1085,1101,0,1301,1300,735,10,1101,1085,1079,0,735,1300,733,10,1015,1040,1051,0,1275,1250,1227,10,1051,1040,1103,0,1227,1250,1255,10,1036,1034,1033,0,1293,1285,1315,10,1088,1081,1055,0,1223,1222,1232,10,1055,1081,1041,0,1232,1222,1251,10,1077,1110,1100,0,760,1304,761,10,1045,1061,1044,0,1316,1317,1318,10,1061,1014,1017,0,1317,1233,1259,10,1017,1044,1061,0,1259,1318,1317,10,1034,1066,1033,0,1285,1277,1315,10,1014,1061,1052,0,1233,1317,1268,10,1107,1105,1109,0,1308,747,1296,10,1109,1105,1106,0,1296,747,749,10,1052,1055,1014,0,1268,1232,1233,10,1032,1064,1063,0,1258,1247,1243,10,1078,1120,1079,0,743,745,733,10,1072,1070,1073,0,738,742,1306,10,1115,1107,1114,0,1309,1308,1313,10,1114,1107,1108,0,1313,1308,1283,10,1071,1087,1149,0,1302,1224,1298,10,1087,1071,1110,0,1224,1302,1304,10,1052,1053,1088,0,1268,1226,1223,10,1052,1061,1133,0,1268,1317,1307,10,1061,1045,1046,0,1319,1320,1321,10,1032,1031,1064,0,1258,1261,1247,10,1064,1031,1061,0,1247,1261,1319,10,1047,1064,1046,0,1246,1247,1321,10,1046,1064,1061,0,1321,1247,1319,10,1061,1031,1030,0,1319,1261,1263,10,1055,1052,1088,0,1232,1268,1223,10,1066,1022,1016,0,1228,1239,1229,10,1022,1021,1016,0,1239,1237,1229,10,1089,1093,1057,0,1284,1279,1271,10,1057,1093,1091,0,1271,1279,1278,10,1090,1112,1072,0,1288,754,738,10,1092,1089,1057,0,1273,1284,1271,10,1090,1109,1112,0,1288,1296,754,10,1112,1109,1106,0,754,1296,749,10,1109,1089,1108,0,1296,1284,1283,10,1086,1111,1102,0,1286,1299,1301,10,1104,1023,1111,0,1287,1295,1299,10,1111,1023,1083,0,1299,1295,1254,10,1086,1104,1111,0,1286,1287,1299,10,1120,805,672,0,745,891,734,10,805,1120,678,0,891,745,746,10,578,6,3,0,1322,192,88,10,3,6,8,0,88,192,89,10,1,10,578,0,95,93,1322,10,578,10,6,0,1322,93,192,10,657,47,91,0,838,170,171,10,94,46,657,0,172,146,838,10,657,46,47,0,838,146,170,10,658,30,656,0,840,109,839,10,656,30,16,0,839,109,110,10,658,657,30,0,840,838,109,10,30,657,91,0,109,838,171,10,97,93,16,0,183,435,110,10,16,93,656,0,110,435,839,10,833,303,302,0,942,391,376,10,355,832,313,0,476,1111,221,10,313,832,273,0,221,1111,220,10,917,132,119,0,1323,386,387,10,214,216,919,0,430,432,1324,10,359,919,1139,0,1325,1324,1326,10,683,359,215,0,1327,1325,418,10,215,359,1139,0,418,1325,1326,10,320,303,924,0,377,391,1106,10,278,368,125,0,439,461,440,10,125,368,925,0,440,461,1328,10,362,288,926,0,1329,264,1330,10,926,288,343,0,1330,264,299,10,684,217,919,0,1331,431,1324,10,919,217,214,0,1324,431,430,10,125,925,215,0,440,1328,418,10,215,925,683,0,418,1328,1327,10,917,357,132,0,1323,467,386,10,132,357,154,0,386,467,428,10,302,300,833,0,376,323,942,10,833,300,923,0,942,323,1110,10,924,364,320,0,1106,458,377,10,211,120,361,0,188,250,477,10,361,120,918,0,477,250,1332,10,366,918,155,0,456,1332,248,10,155,918,120,0,248,1332,250,10,926,343,270,0,1330,299,1333,10,270,343,331,0,1333,299,291,10,273,832,279,0,220,1111,203,10,279,832,923,0,203,1111,1110,10,246,288,922,0,267,264,1334,10,922,288,362,0,1334,264,1329,10,260,921,277,0,292,1335,293,10,277,921,365,0,293,1335,460,10,921,260,267,0,1335,292,463,10,267,260,242,0,463,292,445,10,247,246,271,0,42,267,464,10,271,246,922,0,464,267,1334,10,833,924,303,0,942,1106,391,10,279,923,314,0,203,1110,204,10,314,923,300,0,204,1110,323,10,331,920,270,0,291,1336,1333,10,356,920,323,0,394,1336,284,10,323,920,331,0,284,1336,291,10,1145,1144,684,0,1337,1338,1331,10,684,1144,217,0,1331,1338,431,10,189,36,124,0,407,103,408,10,1136,781,1134,0,442,444,104,10,103,580,99,0,199,1123,200,10,99,580,98,0,200,1123,228,10,75,34,599,0,143,145,1339,10,196,234,231,0,119,405,320,10,580,659,98,0,1123,434,228,10,572,570,3,0,858,860,1340,10,3,570,578,0,1340,860,1341,10,571,572,0,0,856,858,1342,10,0,572,3,0,1342,858,1340,10,568,14,574,0,1120,1343,862,10,574,14,1,0,862,1343,1344,10,1,578,574,0,1344,1341,862,10,574,578,570,0,862,1341,860,10,2,571,0,0,1345,856,1342,10,638,34,584,0,813,145,842,10,584,34,609,0,842,145,841,10,609,34,94,0,841,145,172,10,610,609,657,0,835,841,838,10,657,609,94,0,838,841,172,10,656,93,581,0,839,435,780,10,581,93,662,0,780,435,852,10,2,358,569,0,184,186,1346,10,569,579,2,0,1121,865,1345,10,2,579,571,0,1345,865,856,10,103,772,660,0,199,853,849,10,664,103,660,0,1114,199,849,10,835,832,875,0,886,1111,884,10,875,832,355,0,884,1111,476,10,917,119,697,0,1347,1348,1053,10,697,119,695,0,1053,1348,1029,10,356,869,885,0,1349,1062,955,10,695,119,696,0,1029,1348,1028,10,1138,781,919,0,481,444,482,10,919,781,779,0,482,444,443,10,781,1138,780,0,444,481,105,10,780,359,683,0,105,480,1109,10,925,368,690,0,1108,1350,1095,10,690,368,840,0,1095,1350,1094,10,905,850,926,0,967,929,1351,10,926,850,362,0,1351,929,1352,10,917,697,357,0,1347,1053,1353,10,357,697,719,0,1353,1053,1091,10,119,360,696,0,1348,1354,1028,10,696,360,694,0,1028,1354,1056,10,924,882,364,0,1106,1044,458,10,718,729,730,0,1004,1355,1006,10,730,729,358,0,1006,1355,1356,10,918,685,361,0,1357,912,477,10,361,685,776,0,477,912,854,10,366,720,918,0,1358,913,1357,10,918,720,685,0,1357,913,912,10,367,731,366,0,1359,1070,1358,10,366,731,720,0,1358,1070,913,10,926,270,905,0,1351,1360,967,10,905,270,893,0,967,1360,959,10,883,269,882,0,691,459,1044,10,882,269,364,0,1044,459,458,10,839,840,365,0,961,1094,1361,10,365,840,368,0,1361,1094,1350,10,369,810,267,0,1362,728,1363,10,267,810,807,0,1363,728,1096,10,271,812,369,0,1364,726,1362,10,369,812,810,0,1362,726,728,10,811,922,850,0,932,1365,929,10,850,922,362,0,929,1365,1352,10,825,839,921,0,960,961,1366,10,921,839,365,0,1366,961,1361,10,921,267,825,0,1366,1363,960,10,825,267,807,0,960,1363,1096,10,922,811,271,0,1365,932,1364,10,271,811,812,0,1364,932,726,10,854,363,870,0,1064,1367,1090,10,870,363,268,0,1090,1367,1368,10,719,358,357,0,1091,1356,1353,10,893,270,920,0,959,1360,1369,10,356,885,920,0,1349,955,1369,10,920,885,893,0,1369,955,959,10,854,869,363,0,1064,1062,1367,10,363,869,356,0,1367,1062,1349,10,358,719,730,0,1356,1091,1006,10,782,1147,1146,0,1093,1097,1370,10,684,1146,1145,0,1107,1370,1371,10,35,1134,755,0,1081,104,106,10,781,780,1134,0,444,105,104,10,663,580,664,0,438,1123,1114,10,664,580,103,0,1114,1123,199,10,875,355,667,0,884,476,1115,10,103,361,772,0,199,477,853,10,772,361,776,0,853,477,854,10,729,728,358,0,1355,1372,1356,10,728,569,358,0,1372,1373,1356,10,638,599,34,0,813,1339,145,10,214,124,1137,0,430,408,433,10,189,190,36,0,407,101,103,10,355,102,1142,0,476,470,1374,10,14,568,367,0,1343,1120,1359,10,367,568,731,0,1359,1120,1070,10,269,883,566,0,459,691,577,10,566,883,669,0,577,691,692,10,210,208,1124,0,187,379,371,10,208,148,1124,0,379,350,371,10,713,773,1125,0,1018,1046,1039,10,773,775,1125,0,1046,855,1039,10,259,255,1126,0,234,233,1375,10,337,259,1126,0,316,234,1375,10,899,819,1127,0,987,729,1376,10,819,820,1127,0,729,1105,1376,10,932,908,1128,0,720,721,1377,10,980,932,1128,0,1127,1181,1180,10,1129,374,346,0,1378,23,25,10,374,1129,423,0,486,542,484,10,929,965,1130,0,1190,1183,1379,10,961,929,1130,0,1189,1190,1379,10,347,408,1131,0,347,19,1380,10,404,347,1131,0,558,347,1380,10,504,495,1132,0,679,627,1381,10,495,469,1132,0,627,628,1381,10,1061,1030,1133,0,1319,1263,1382,10,1030,1026,1133,0,1263,1310,1382,10,689,1134,35,0,441,104,1081,10,373,352,79,0,38,30,483,10,216,215,1139,0,432,418,1326,10,1137,124,1135,0,433,408,102,10,1138,359,780,0,481,480,105,10,919,216,1139,0,1324,432,1326,10,829,935,1140,0,732,708,710,10,829,1140,830,0,732,710,775,10,265,352,1141,0,48,47,27,10,1141,352,378,0,27,47,28,10,643,1143,638,0,833,776,813,10,667,355,1142,0,1115,476,1374,10,1142,1143,643,0,1374,776,833,10,80,1143,1142,0,167,776,1374,10,1143,75,599,0,776,143,1339,10,80,77,75,0,167,139,143,10,102,80,1142,0,470,167,1374,10,643,638,640,0,833,813,808,10,1143,599,638,0,776,1339,813,10,667,1142,643,0,1115,1374,833,10,1147,694,1146,0,1097,1056,1370,10,129,128,1148,0,390,388,446,10,1146,694,360,0,1370,1056,1354,10,1145,360,1144,0,1337,454,1338,10,693,694,1147,0,1055,1056,1097,10,1144,129,1148,0,1338,390,446,10,684,782,1146,0,1107,1093,1370,10,1144,1148,217,0,1338,446,431,10,1145,1146,360,0,1371,1370,1354,10,360,129,1144,0,454,390,1338,10,496,530,1150,0,586,587,660,10,1149,1087,1053,0,1298,1224,1226,10,1025,1151,1026,0,1291,1383,1310,10,1094,1071,1149,0,1290,1311,1297,10,1151,1025,1149,0,1383,1291,1297,10,1150,530,514,0,660,587,665,10,537,468,1150,0,653,629,680,10,469,496,1152,0,628,586,659,10,468,1152,1150,0,629,631,680,10,558,556,1153,0,670,71,1384,10,557,558,1153,0,675,670,1384,10,370,348,1154,0,255,70,1385,10,348,163,1154,0,70,447,1385,10,665,728,1155,0,1119,1386,1387,10,927,665,1155,0,1092,1119,1387,10,1156,1104,1113,0,1388,1287,764,10,1114,1104,1156,0,1294,1287,1388],\"uvs\":[[0.461974,0.985068,0.456573,0.996915,0.451626,0.978493,0.44766,0.999946,0.48167,0.955359,0.471447,0.952676,0.480877,0.937832,0.490307,0.950838,0.495296,0.9331,0.468801,0.966337,0.464939,0.976933,0.453187,0.973113,0.194217,0.792024,0.226377,0.784042,0.211949,0.815016,0.239747,0.81282,0.406261,0.879694,0.391067,0.876414,0.398954,0.851033,0.378254,0.857168,0.161129,0.939539,0.163462,0.953095,0.137789,0.953577,0.382033,0.906684,0.40389,0.914988,0.399975,0.923646,0.137867,0.84591,0.15034,0.824815,0.168963,0.848665,0.173469,0.846834,0.160059,0.811326,0.186468,0.836043,0.16937,0.887294,0.134258,0.891962,0.136298,0.861121,0.134459,0.910701,0.15913,0.918134,0.136454,0.938657,0.183604,0.796088,0.194786,0.825948,0.407593,0.897252,0.385042,0.890656,0.091539,0.873116,0.113714,0.891765,0.093703,0.850276,0.17779,0.764647,0.151915,0.775229,0.157499,0.812523,0.127954,0.79793,0.153481,0.797761,0.150494,0.776058,0.445718,0.304073,0.459026,0.299363,0.476751,0.409959,0.501613,0.404393,0.14753,0.396018,0.131227,0.396176,0.122989,0.274685,0.13505,0.472208,0.153113,0.476689,0.170464,0.395388,0.424356,0.41458,0.423963,0.312732,0.455549,0.412754,0.437591,0.310605,0.049975,0.392117,0.032502,0.391048,0.079446,0.273718,0.059767,0.265553,0.067012,0.39301,0.016203,0.389594,0.025217,0.258404,0.101917,0.274106,0.106402,0.395282,0.085455,0.393835,0.191834,0.393516,0.196186,0.474625,0.404819,0.413852,0.415246,0.312085,0.398561,0.304251,0.38136,0.412513,0.474794,0.295235,0.489577,0.290097,0.399132,0.488288,0.377057,0.485121,0.05466,0.462908,0.079957,0.460868,0.031532,0.470732,0.506215,0.491706,0.500109,0.4904,0.507078,0.482907,0.501928,0.476763,0.496705,0.518231,0.498568,0.508717,0.504112,0.518476,0.504817,0.50926,0.510264,0.446741,0.435362,0.806619,0.43849,0.796785,0.448318,0.804546,0.444847,0.796211,0.10438,0.727778,0.092204,0.703216,0.107046,0.699438,0.912377,0.703946,0.931735,0.709268,0.895703,0.72731,0.470967,0.72377,0.472978,0.719237,0.487082,0.726625,0.486673,0.720071,0.468384,0.729991,0.462194,0.721093,0.454802,0.724884,0.404328,0.739367,0.401077,0.768964,0.384545,0.754206,0.393354,0.774962,0.457384,0.677557,0.448814,0.6848,0.447184,0.658031,0.442303,0.747481,0.416903,0.762315,0.431461,0.737778,0.456916,0.796292,0.4492,0.791995,0.458669,0.784977,0.448598,0.786913,0.455196,0.772133,0.446471,0.77936,0.439282,0.770869,0.437556,0.778491,0.418146,0.766953,0.405805,0.77281,0.440419,0.788331,0.433399,0.794926,0.431113,0.791376,0.438407,0.758723,0.440462,0.763522,0.483822,0.777758,0.471515,0.780933,0.471768,0.769705,0.465539,0.7755,0.491239,0.773675,0.49125,0.76475,0.50003,0.763263,0.49071,0.755594,0.477785,0.766237,0.455488,0.781081,0.447762,0.784745,0.444209,0.783268,0.414269,0.813797,0.423712,0.802365,0.433597,0.818251,0.455006,0.813624,0.397701,0.782552,0.418891,0.787714,0.417355,0.795488,0.409434,0.786233,0.409801,0.79951,0.47139,0.799619,0.431001,0.787495,0.463026,0.740738,0.460754,0.750023,0.445704,0.73729,0.459289,0.765147,0.461139,0.760924,0.486281,0.794027,0.476671,0.809189,0.478533,0.755843,0.480044,0.747096,0.485848,0.739712,0.500028,0.750891,0.432604,0.785052,0.422474,0.782607,0.439197,0.782938,0.426055,0.773136,0.416112,0.777488,0.453861,0.638218,0.465441,0.650521,0.435166,0.783506,0.429002,0.779691,0.464692,0.708818,0.477886,0.707189,0.007553,0.456611,0.00811,0.451359,0.022123,0.471007,0.450818,0.62068,0.477073,0.621914,0.47599,0.640225,0.495513,0.482366,0.494307,0.487169,0.50028,0.497791,0.491406,0.494601,0.487024,0.50312,0.484287,0.501151,0.506085,0.44906,0.502177,0.466931,0.461577,0.822156,0.500002,0.648172,0.47434,0.66466,0.408773,0.838184,0.4204,0.847394,0.481327,0.856382,0.480814,0.868364,0.466306,0.854472,0.461237,0.870297,0.462422,0.896685,0.443725,0.899074,0.443273,0.888709,0.408042,0.827841,0.433908,0.82893,0.143894,0.500306,0.134223,0.523362,0.121975,0.494698,0.109879,0.520612,0.441937,0.868152,0.461301,0.887505,0.466637,0.842998,0.468043,0.831754,0.48233,0.841838,0.483975,0.827131,0.439886,0.837759,0.441168,0.848365,0.426563,0.866437,0.443087,0.487844,0.438827,0.517598,0.423276,0.488923,0.47518,0.67608,0.148444,0.576322,0.130154,0.547557,0.16203,0.529213,0.379483,0.791018,0.360332,0.787667,0.378042,0.772096,0.379023,0.522441,0.404045,0.5211,0.411905,0.546052,0.426927,0.590616,0.4204,0.57495,0.434098,0.579691,0.42811,0.570849,0.425714,0.545045,0.423685,0.519311,0.454401,0.521845,0.45885,0.549247,0.443566,0.545823,0.454959,0.563015,0.483562,0.571689,0.460127,0.588776,0.478949,0.591754,0.42655,0.664156,0.376748,0.491172,0.39908,0.490425,0.434994,0.545086,0.001274,0.38877,0.442057,0.584141,0.450294,0.561208,0.19384,0.731377,0.203006,0.747587,0.393644,0.806231,0.399742,0.813192,0.387641,0.811261,0.391,0.825644,0.053544,0.905802,0.084893,0.917474,0.083358,0.929674,0.084312,0.894135,0.359401,0.810636,0.395531,0.738948,0.414528,0.73321,0.136466,0.741224,0.14304,0.758812,0.117582,0.756284,0.122569,0.770503,0.385886,0.549183,0.408876,0.581458,0.095221,0.944035,0.076119,0.937168,0.086726,0.949544,0.100791,0.917673,0.456794,0.96186,0.435616,0.95963,0.432854,0.970952,0.061514,0.958876,0.069555,0.952611,0.082936,0.96887,0.095216,0.95949,0.438053,0.951175,0.432216,0.942637,0.470601,0.923434,0.056841,0.942116,0.09286,0.804038,0.090034,0.779314,0.384203,0.735172,0.414555,0.930171,0.446234,0.90951,0.426693,0.93456,0.457991,0.913101,0.052999,0.918207,0.098673,0.966684,0.108855,0.965219,0.132481,0.722306,0.111195,0.74232,0.40239,0.695206,0.390895,0.713997,0.380078,0.689963,0.370392,0.712715,0.421568,0.648544,0.409772,0.664121,0.406137,0.649729,0.157633,0.726827,0.151286,0.707842,0.181543,0.710405,0.17203,0.691833,0.414037,0.597998,0.366412,0.754095,0.368143,0.731754,0.467045,0.545839,0.167568,0.74627,0.439779,0.694828,0.418698,0.678019,0.46086,0.906181,0.485895,0.879105,0.163816,0.499687,0.090187,0.516285,0.085966,0.545097,0.069631,0.511902,0.065201,0.545027,0.080983,0.577777,0.098873,0.574239,0.106651,0.601165,0.120971,0.598477,0.089694,0.604913,0.06385,0.580417,0.041748,0.477028,0.054376,0.457832,0.060855,0.482468,0.079498,0.461031,0.211191,0.764107,0.046778,0.546635,0.049859,0.507967,0.436126,0.597956,0.353163,0.47907,0.353467,0.408652,0.100686,0.462939,0.118423,0.466082,0.383711,0.831454,0.460319,0.950187,0.192731,0.506584,0.415103,0.619921,0.104637,0.545679,0.36599,0.621378,0.365902,0.610021,0.390843,0.616761,0.390368,0.606136,0.461217,0.49272,0.38839,0.588874,0.364885,0.593863,0.461383,0.493839,0.054218,0.581921,0.07123,0.605956,0.116245,0.569253,0.10148,0.49117,0.174054,0.591172,0.138467,0.588684,0.168042,0.608166,0.132772,0.640556,0.132852,0.671964,0.105583,0.643234,0.106319,0.673454,0.430266,0.620934,0.140255,0.683859,0.130906,0.660535,0.159947,0.672305,0.15231,0.648343,0.484931,0.886784,0.489834,0.91366,0.475813,0.913768,0.427507,0.632151,0.182649,0.552008,0.386694,0.66411,0.397146,0.634633,0.08268,0.486796,0.100351,0.463609,0.359499,0.558784,0.035799,0.544794,0.040783,0.581706,0.101086,0.619986,0.130323,0.616244,0.064159,0.612604,0.480065,0.899371,0.114388,0.941766,0.089236,0.97172,0.037814,0.960957,0.062097,0.971919,0.433003,0.994535,0.44141,0.976643,0.056585,0.981348,0.079007,0.979625,0.078847,0.973552,0.407389,0.722824,0.423562,0.705457,0.436224,0.723477,0.402742,0.676326,0.454812,0.70902,0.494339,0.543001,0.124191,0.695149,0.109464,0.68578,0.367359,0.640467,0.373323,0.668505,0.163232,0.619766,0.159053,0.640621,0.14422,0.758175,0.137674,0.740667,0.133416,0.721881,0.106461,0.669404,0.370159,0.691556,0.06838,0.709665,0.158154,0.672036,0.483814,0.499868,0.07861,0.975168,0.084775,0.964108,0.065935,0.996264,0.078621,0.976861,0.080171,0.99729,0.433677,0.975692,0.049177,0.994798,0.033795,0.502241,0.51332,0.402312,0.071287,0.667698,0.069131,0.639469,0.067956,0.692722,0.084679,0.689927,0.500013,0.68609,0.500018,0.706895,0.542639,0.677533,0.535347,0.708801,0.524841,0.676066,0.085505,0.755909,0.073396,0.730498,0.890651,0.685265,0.918545,0.690002,0.92888,0.667265,0.932157,0.692318,0.095402,0.826651,0.065961,0.621839,0.006519,0.476608,0.441374,0.976851,0.43363,0.975999,0.432913,0.970454,0.120683,0.95839,0.356204,0.517975,0.352106,0.490323,0.042141,0.596793,0.030571,0.455971,0.500753,0.573438,0.502273,0.543582,0.500053,0.909879,0.500056,0.932249,0.043228,0.779669,0.043672,0.753771,0.04309,0.850993,0.042991,0.830358,0.04319,0.868674,0.031739,0.989921,0.034884,0.976552,0.032122,0.502749,0.438661,0.948008,0.435436,0.96203,0.491325,0.813891,0.473393,0.519312,0.477869,0.519203,0.527758,0.476171,0.501414,0.489329,0.518366,0.428932,0.500041,0.826076,0.499992,0.622376,0.00767,0.445809,0.501761,0.451579,0.955289,0.696436,0.940474,0.693776,0.95501,0.668268,0.15575,0.796682,0.270149,0.691891,0.27935,0.692559,0.267373,0.724859,0.278422,0.722352,0.24999,0.656375,0.26718,0.563422,0.276709,0.564917,0.273512,0.646497,0.284984,0.651414,0.258477,0.561229,0.23935,0.635022,0.24835,0.568677,0.231117,0.628003,0.217581,0.667619,0.293247,0.548612,0.303125,0.551865,0.288485,0.601177,0.303148,0.602837,0.223558,0.565993,0.232104,0.567755,0.225029,0.609573,0.315493,0.599814,0.282235,0.55216,0.227942,0.676162,0.250907,0.687225,0.222145,0.706838,0.241347,0.720251,0.221755,0.511791,0.219338,0.540286,0.206699,0.513299,0.203113,0.534164,0.292906,0.524841,0.301945,0.526233,0.202179,0.662938,0.31005,0.406088,0.32626,0.400048,0.319852,0.409696,0.229649,0.541085,0.240156,0.514357,0.244997,0.539643,0.263816,0.647248,0.329851,0.584422,0.321911,0.557083,0.304687,0.679368,0.296628,0.688572,0.214883,0.563154,0.19516,0.580544,0.20652,0.559913,0.18274,0.576648,0.195473,0.557808,0.273539,0.547262,0.264787,0.542206,0.234773,0.421928,0.234816,0.409087,0.242035,0.40889,0.302503,0.706873,0.312749,0.693327,0.314482,0.697703,0.262844,0.724566,0.254548,0.724028,0.260444,0.689994,0.254521,0.538995,0.282625,0.522102,0.272398,0.518562,0.2808,0.399916,0.273368,0.39958,0.326329,0.684825,0.341552,0.676489,0.336771,0.667053,0.322766,0.668674,0.166407,0.656817,0.182673,0.65817,0.166816,0.666355,0.180198,0.672219,0.351756,0.838092,0.33794,0.516123,0.336538,0.550452,0.349029,0.518101,0.347445,0.53928,0.259736,0.515122,0.251328,0.514435,0.321194,0.519686,0.334632,0.405174,0.328888,0.414867,0.189202,0.679694,0.338628,0.561698,0.254084,0.40118,0.246056,0.406385,0.302143,0.40252,0.260613,0.400118,0.291151,0.400923,0.285892,0.400226,0.19907,0.690978,0.500057,0.949709,0.414059,0.257401,0.429054,0.255444,0.423903,0.275248,0.437267,0.275424,0.414785,0.276003,0.419729,0.230237,0.400249,0.230994,0.398469,0.257559,0.380104,0.232473,0.380678,0.259089,0.445167,0.221905,0.45275,0.046075,0.474023,0.028037,0.413253,0.011336,0.407736,0.027367,0.404565,0.008097,0.395251,0.025479,0.431218,0.01701,0.445106,0.015994,0.444562,0.023431,0.455611,0.019946,0.455124,0.025659,0.46253,0.017093,0.463311,0.029168,0.473835,0.00765,0.099693,-0.000865,0.100051,0.013694,0.094684,0.000961,0.095827,0.013978,0.105756,-0.00283,0.103467,0.013261,0.416279,0.028316,0.419177,0.013526,0.420566,0.028789,0.423978,0.015067,0.090147,0.015021,0.090304,0.002508,0.441589,0.254954,0.431529,0.228686,0.460306,0.011571,0.094444,0.112495,0.108887,0.11253,0.395944,0.004449,0.083793,0.109512,0.143347,0.160857,0.126674,0.16168,0.137076,0.120225,0.121794,0.113694,0.110941,0.164431,0.384078,0.200238,0.366617,0.197563,0.150788,0.194775,0.159975,0.157822,0.159449,0.19487,0.47626,0.197031,0.472254,0.217868,0.093492,0.182083,0.077334,0.180663,0.09352,0.163167,0.078232,0.161323,0.430473,0.029927,0.083072,0.003119,0.082524,0.021898,0.134172,0.211851,0.11038,0.202489,0.124316,0.185883,0.110435,0.182783,0.082647,0.208155,0.065112,0.198554,0.065514,0.180336,0.070422,0.122751,0.467448,0.292456,0.47382,0.27535,0.14038,0.243638,0.112531,0.239186,0.146224,0.218388,0.137843,0.191882,0.06481,0.159334,0.456798,0.241872,0.47613,0.237953,0.078192,0.238366,0.371256,0.233577,0.372503,0.257826,0.458588,0.275822,0.459132,0.28957,0.443468,0.292396,0.371318,0.302149,0.372641,0.281194,0.388583,0.286648,0.144275,0.274468,0.159412,0.27154,0.157874,0.138727,0.035679,0.233697,0.06342,0.233177,0.156219,0.247572,0.485453,0.268378,0.037267,0.178486,0.035942,0.200276,0.041058,0.156302,0.384023,0.000725,0.389789,0.002458,0.384241,0.016589,0.157431,0.221115,0.121681,0.011386,0.116469,-0.002936,0.121238,-0.00244,0.552467,0.999945,0.543552,0.996915,0.548498,0.978489,0.538149,0.985066,0.518446,0.955356,0.519236,0.937828,0.528669,0.95267,0.504815,0.933099,0.509808,0.950837,0.531318,0.966333,0.546936,0.973107,0.535182,0.976929,0.805764,0.791502,0.787997,0.814491,0.773591,0.783484,0.760184,0.812267,0.621843,0.857132,0.609035,0.876384,0.60114,0.851003,0.59384,0.879668,0.600139,0.923621,0.618078,0.906653,0.620278,0.912955,0.596222,0.914964,0.830907,0.848136,0.842436,0.812007,0.849104,0.8235,0.839925,0.810856,0.826467,0.846372,0.813471,0.835559,0.830441,0.886777,0.863565,0.860645,0.865558,0.891499,0.865328,0.910245,0.86329,0.938206,0.840638,0.917643,0.838605,0.939051,0.861932,0.953129,0.816381,0.795579,0.805159,0.825448,0.615064,0.890625,0.592513,0.897228,0.90832,0.872714,0.886109,0.891334,0.906191,0.849864,0.822228,0.76412,0.848109,0.774732,0.844942,0.796218,0.862019,0.845425,0.554129,0.303774,0.523117,0.409784,0.540805,0.299066,0.498227,0.404225,0.853131,0.395487,0.877883,0.274215,0.869431,0.395674,0.865473,0.471689,0.847405,0.476138,0.8302,0.394817,0.562268,0.310309,0.575911,0.312432,0.544342,0.412572,0.575567,0.414384,0.941114,0.265196,0.968151,0.390723,0.921422,0.273325,0.950679,0.39176,0.933643,0.392622,0.975671,0.258109,0.984451,0.389297,0.898954,0.273673,0.894254,0.394825,0.915201,0.393414,0.808837,0.392906,0.804342,0.473997,0.595124,0.413647,0.584637,0.31178,0.601337,0.30393,0.618605,0.412295,0.525019,0.294942,0.510218,0.289807,0.622946,0.484974,0.60085,0.488154,0.945869,0.462532,0.920579,0.460448,0.96898,0.470397,0.555227,0.796192,0.561584,0.796764,0.551759,0.804529,0.564715,0.806598,0.847156,0.797243,0.872015,0.797451,0.500028,0.793687,0.529077,0.723758,0.512963,0.72662,0.527065,0.719224,0.513369,0.720065,0.545244,0.724864,0.531664,0.729977,0.53785,0.721076,0.606716,0.774924,0.59899,0.768928,0.615519,0.754163,0.595729,0.739329,0.552829,0.657998,0.551214,0.684772,0.557753,0.747458,0.568593,0.73775,0.583161,0.762284,0.543157,0.796277,0.5414,0.784962,0.550872,0.791977,0.551472,0.786895,0.562512,0.778468,0.553597,0.77934,0.560783,0.770846,0.544869,0.772117,0.594263,0.772776,0.58192,0.766923,0.559652,0.78831,0.56896,0.791351,0.566675,0.794903,0.561654,0.758699,0.559601,0.7635,0.516244,0.777752,0.528295,0.769694,0.528552,0.780923,0.534526,0.775487,0.522277,0.766229,0.508825,0.773672,0.54458,0.781064,0.552307,0.784726,0.555861,0.783248,0.576365,0.80234,0.566484,0.818229,0.585812,0.813769,0.545074,0.813609,0.602372,0.782517,0.590276,0.79948,0.58272,0.795459,0.590639,0.786202,0.581181,0.787686,0.528683,0.799609,0.569071,0.787471,0.539302,0.750007,0.554348,0.737268,0.537026,0.740723,0.540773,0.765131,0.538921,0.760909,0.51379,0.794022,0.523406,0.809181,0.52001,0.747087,0.521525,0.755835,0.514203,0.739706,0.500025,0.739689,0.500021,0.719878,0.500023,0.727644,0.509347,0.755591,0.508811,0.764746,0.577596,0.78258,0.567467,0.785028,0.560873,0.782917,0.574012,0.773109,0.583957,0.777458,0.546138,0.63819,0.534565,0.650499,0.564904,0.783483,0.571066,0.779666,0.522151,0.707179,0.52401,0.64021,0.522916,0.6219,0.549166,0.620663,0.497967,0.476677,0.504389,0.482279,0.499795,0.490321,0.505599,0.487084,0.499628,0.497717,0.508506,0.49452,0.501348,0.508649,0.512896,0.503042,0.515633,0.501069,0.497712,0.466838,0.538504,0.822143,0.591316,0.838156,0.579691,0.84737,0.538859,0.870286,0.519281,0.868359,0.533785,0.854462,0.518765,0.856377,0.537681,0.896675,0.556829,0.888693,0.55638,0.899059,0.592044,0.827812,0.566177,0.828909,0.890555,0.520131,0.866209,0.522837,0.878507,0.494199,0.856581,0.499767,0.558159,0.868135,0.5388,0.887494,0.516107,0.827126,0.532041,0.831744,0.517757,0.841832,0.533451,0.842988,0.558922,0.848347,0.560202,0.83774,0.573533,0.866416,0.556854,0.48773,0.576682,0.4888,0.561133,0.517503,0.851896,0.575765,0.838396,0.528638,0.870235,0.547037,0.620594,0.790977,0.622028,0.772053,0.639745,0.78762,0.620975,0.522321,0.588085,0.545961,0.595938,0.52099,0.573081,0.590558,0.565899,0.579631,0.579601,0.574878,0.571885,0.57078,0.576286,0.519209,0.574268,0.54496,0.545551,0.52176,0.556406,0.545747,0.541114,0.549182,0.521025,0.591725,0.516398,0.571652,0.539857,0.588736,0.545015,0.562957,0.573473,0.664111,0.600894,0.490295,0.623239,0.491035,0.564983,0.545006,0.999379,0.3885,0.557939,0.584088,0.549682,0.561146,0.633654,0.754047,0.636115,0.771034,0.606436,0.806196,0.612441,0.811224,0.60034,0.81316,0.609087,0.825609,0.946277,0.905468,0.916417,0.929302,0.9149,0.917096,0.915517,0.89375,0.640684,0.81059,0.604527,0.738908,0.585526,0.733175,0.863579,0.740715,0.882449,0.755808,0.856977,0.7583,0.87744,0.770025,0.591134,0.581382,0.614119,0.549081,0.500049,0.879634,0.515169,0.88678,0.520038,0.899366,0.923646,0.93681,0.904528,0.943649,0.913017,0.949173,0.898996,0.91727,0.543326,0.961853,0.564507,0.959619,0.567272,0.970942,0.904509,0.959109,0.930189,0.952268,0.916779,0.968511,0.938223,0.958547,0.562065,0.951162,0.529508,0.923428,0.5679,0.942621,0.942923,0.941788,0.907106,0.803614,0.909971,0.778888,0.615856,0.735127,0.58556,0.93015,0.573422,0.934543,0.553874,0.909496,0.542117,0.913091,0.946803,0.917878,0.90104,0.9663,0.890857,0.96482,0.88886,0.741848,0.867591,0.721792,0.629661,0.712663,0.609156,0.713952,0.619968,0.689911,0.597652,0.695161,0.57845,0.648488,0.593888,0.649671,0.590257,0.664069,0.828055,0.691267,0.848798,0.707304,0.81852,0.709841,0.84243,0.726295,0.58598,0.59793,0.631916,0.731704,0.532913,0.545777,0.832472,0.745741,0.806197,0.730815,0.581333,0.677976,0.560256,0.694797,0.539246,0.906171,0.514203,0.879101,0.836662,0.499113,0.935184,0.544622,0.914421,0.544655,0.930813,0.511494,0.910252,0.515839,0.919345,0.577339,0.901464,0.573771,0.893639,0.600679,0.879326,0.597966,0.936471,0.58001,0.910587,0.604456,0.921037,0.460612,0.946162,0.457458,0.93964,0.482079,0.958754,0.476674,0.95059,0.507594,0.953602,0.546262,0.849497,0.775543,0.56388,0.597909,0.646861,0.478907,0.646526,0.408418,0.899849,0.462482,0.882109,0.465593,0.616378,0.831418,0.539798,0.95018,0.807739,0.505957,0.584929,0.619842,0.895752,0.545204,0.634049,0.621297,0.609188,0.616683,0.634134,0.609936,0.609661,0.606057,0.538708,0.49262,0.635147,0.593772,0.611632,0.58879,0.538549,0.49374,0.929047,0.605532,0.946099,0.581531,0.884103,0.568754,0.899005,0.490708,0.861849,0.588143,0.826263,0.590567,0.832244,0.60757,0.867452,0.640018,0.894633,0.642744,0.867317,0.671422,0.893843,0.672959,0.569622,0.620434,0.84783,0.647767,0.869237,0.659988,0.840165,0.671737,0.859857,0.683317,0.510273,0.913658,0.524294,0.913762,0.572492,0.632077,0.817739,0.551394,0.613344,0.664052,0.602885,0.634563,0.91781,0.486368,0.900182,0.463153,0.640522,0.558676,0.964582,0.544441,0.869944,0.615714,0.89917,0.619507,0.936105,0.612192,0.885358,0.94135,0.910473,0.971352,0.558717,0.976636,0.567128,0.994532,0.920861,0.9732,0.93762,0.971593,0.920692,0.979275,0.943119,0.981033,0.592662,0.722785,0.563823,0.72345,0.57648,0.705422,0.597294,0.676276,0.545227,0.708998,0.505599,0.542953,0.87592,0.694627,0.632683,0.640394,0.62672,0.668446,0.837033,0.619177,0.841175,0.640037,0.862389,0.740161,0.855824,0.757674,0.866667,0.721367,0.893683,0.668893,0.629889,0.691501,0.893356,0.699009,0.842017,0.671449,0.516092,0.499786,0.921096,0.974818,0.914946,0.963745,0.566451,0.975684,0.919501,0.996944,0.921082,0.976511,0.933743,0.99594,0.950508,0.994499,0.966661,0.501898,0.486508,0.402148,0.931086,0.639044,0.914536,0.755483,0.926687,0.730088,0.904528,0.826229,0.934287,0.621422,0.993979,0.476316,0.558752,0.976844,0.567214,0.970444,0.566498,0.975991,0.879036,0.957969,0.643804,0.517844,0.647895,0.490176,0.788805,0.76355,0.500051,0.89707,0.955259,0.637831,0.955965,0.7302,0.955542,0.710615,0.500046,0.860278,0.500044,0.841697,0.561459,0.947995,0.564687,0.962018,0.525674,0.664645,0.508753,0.813888,0.526545,0.519237,0.522066,0.51913,0.997633,0.41985,0.498469,0.489245,0.503217,0.518169,0.49379,0.448958,0.498119,0.451476,0.50001,0.675205,0.714129,0.738844,0.713801,0.709038,0.725125,0.741573,0.723013,0.708555,0.743883,0.673452,0.719011,0.581475,0.728568,0.580173,0.708996,0.667788,0.720564,0.663103,0.737313,0.578155,0.747287,0.585805,0.754951,0.652318,0.763323,0.645466,0.776059,0.685347,0.691814,0.618855,0.692863,0.567894,0.706508,0.617491,0.702805,0.564841,0.772128,0.58362,0.769781,0.627162,0.763549,0.58521,0.679533,0.615585,0.713742,0.568609,0.751239,0.73749,0.742346,0.704278,0.770707,0.724466,0.765528,0.693679,0.775022,0.529465,0.790046,0.531276,0.776865,0.558004,0.793211,0.55221,0.694558,0.542291,0.703623,0.541081,0.791553,0.680977,0.679001,0.425417,0.672789,0.415642,0.688874,0.422007,0.76654,0.558595,0.751224,0.556844,0.756574,0.531661,0.730245,0.664049,0.665487,0.599906,0.673975,0.572732,0.696606,0.704703,0.688735,0.69534,0.78086,0.580957,0.789285,0.577884,0.800228,0.598741,0.800374,0.576003,0.812723,0.595095,0.722535,0.563887,0.731387,0.559009,0.756819,0.426177,0.764032,0.42652,0.763816,0.439359,0.632538,0.844984,0.729666,0.74137,0.737963,0.741,0.732754,0.706854,0.690364,0.722883,0.741716,0.556005,0.72568,0.41624,0.724255,0.535216,0.718242,0.416425,0.713958,0.538549,0.666987,0.70036,0.680393,0.709134,0.651936,0.691719,0.656906,0.682381,0.670874,0.684284,0.82744,0.675577,0.82684,0.685105,0.811151,0.676602,0.813343,0.690698,0.648337,0.838044,0.658775,0.531458,0.659485,0.565809,0.647647,0.533213,0.648804,0.554419,0.745403,0.531514,0.736983,0.532032,0.675446,0.535357,0.669862,0.430404,0.664316,0.420598,0.804189,0.69799,0.65717,0.577011,0.752848,0.423592,0.744927,0.418227,0.696852,0.418599,0.738422,0.417034,0.707873,0.417224,0.713146,0.416633,0.794096,0.709073,0.562575,0.275091,0.570786,0.255085,0.575953,0.274907,0.585798,0.257035,0.585082,0.275659,0.580104,0.229845,0.599608,0.230589,0.619222,0.258709,0.601407,0.257185,0.619782,0.232055,0.554632,0.22152,0.525657,0.027644,0.546936,0.045635,0.586836,0.011516,0.595325,0.00879,0.591995,0.02687,0.604478,0.025013,0.555037,0.022928,0.554394,0.015476,0.568396,0.015669,0.544498,0.025243,0.543989,0.019562,0.536341,0.028762,0.537122,0.01676,0.526586,0.006403,0.905525,0.013537,0.901295,0.013244,0.906401,0.00051,0.90164,-0.001331,0.895575,-0.003291,0.897876,0.012809,0.575754,0.014424,0.580636,0.012965,0.579149,0.028254,0.583441,0.027793,0.911063,0.001303,0.911203,0.014595,0.558237,0.254601,0.568292,0.2283,0.539639,0.011479,0.906715,0.112087,0.892273,0.112096,0.603709,0.005064,0.917371,0.109123,0.879363,0.113235,0.874398,0.161214,0.864069,0.11974,0.857726,0.160363,0.890125,0.163993,0.628868,0.233181,0.633258,0.197086,0.615782,0.199777,0.527524,0.217495,0.52351,0.19665,0.907542,0.181675,0.907548,0.16276,0.923701,0.180284,0.922839,0.160944,0.569238,0.029344,0.919147,0.001901,0.918806,0.021495,0.890599,0.182345,0.89062,0.202049,0.876714,0.18542,0.866813,0.211368,0.935521,0.179978,0.935891,0.198195,0.91834,0.207765,0.930718,0.122387,0.53237,0.292157,0.525982,0.275036,0.888403,0.238738,0.86055,0.243141,0.85475,0.217883,0.85023,0.194266,0.863178,0.191396,0.936263,0.158978,0.523652,0.237599,0.543004,0.241514,0.922739,0.23798,0.843929,0.220497,0.62776,0.257387,0.541231,0.2755,0.556375,0.292084,0.540693,0.289263,0.627275,0.280837,0.628607,0.301814,0.611317,0.286303,0.841471,0.271005,0.856601,0.27396,0.630782,0.176675,0.93752,0.232819,0.965255,0.233389,0.841102,0.157299,0.844707,0.247046,0.971645,0.234146,0.965055,0.19997,0.96377,0.17818,0.960019,0.155991,0.615744,0.000054,0.615459,0.016046,0.610074,0.002163,0.879656,0.010927,0.880096,-0.002895,0.884863,-0.003391,0.505577,0.498941,0.034966,0.544632,0.045153,0.668654,0.044836,0.696814,0.059932,0.694122,0.04457,0.710988,0.044122,0.730568,0.042857,0.900796,0.042365,0.917619,0.044957,0.638213,0.500392,0.592543,0.041432,0.932579,0.043173,0.884344,0.042952,0.804282,0.039537,0.950248,0.044203,0.623124,0.057042,0.622396,0.500032,0.772463,0.493686,0.491632,0.494328,0.498871,0.492817,0.482827,0.495805,0.518418,0.495095,0.509197,0.489607,0.44664,0.002308,0.457231,0.965416,0.54428,0.959533,0.581339,0.961927,0.960665,0.956383,0.753409,0.957441,0.917305,0.956975,0.900477,0.968333,0.502408,0.958148,0.596422,0.969967,0.455639,0.978387,0.470688,0.499571,0.592528,0.499199,0.573412,0.49766,0.543538,0.958351,0.932273,0.956788,0.779314,0.956818,0.850659,0.956949,0.830018,0.956691,0.868344,0.956684,0.88402,0.957027,0.803934,0.964834,0.976269,0.967959,0.989647,0.96022,0.949949,0.943204,0.621994,0.956041,0.622745,0.992882,0.44552,0.992433,0.451068,0.500023,0.813944,0.363981,0.771084,0.797032,0.747042,0.836253,0.952597,0.379838,0.912977,0.678694,0.713182,0.367912,0.844728,0.369164,0.177314,0.843357,0.138102,0.841803,0.194347,0.029613,0.234404,0.002837,0.42042,0.472093,0.476088,0.481395,0.428532,0.514589,0.268214]],\"skinWeights\":[0.471114,0.431094,0.080877,0.016915,0.420815,0.355928,0.148289,0.074968,0.474156,0.440402,0.085442,0,0.45348,0.411825,0.104867,0.029827,0.482228,0.255024,0.173339,0.089409,0.596116,0.333802,0.070082,0,0.523615,0.315364,0.120905,0.040117,0.599161,0.32385,0.076989,0,0.572688,0.310009,0.099557,0.017746,0.720549,0.204274,0.075177,0,0.49911,0.285131,0.149146,0.066613,0.702426,0.201338,0.087393,0.008843,0.704009,0.171481,0.101377,0.023133,0.688635,0.165933,0.102623,0.04281,0.41192,0.321495,0.163252,0.103334,0.658367,0.27645,0.065183,0,0.536175,0.289439,0.077818,0.046001,0.541631,0.22725,0.174689,0.046152,0.481072,0.323027,0.118356,0.059022,0.598718,0.178888,0.120982,0.101412,0.532093,0.296002,0.092941,0.06192,0.546773,0.196906,0.195534,0.043278,0.49058,0.26723,0.205503,0.034059,0.443287,0.344246,0.139866,0.072602,0.576356,0.224785,0.130784,0.054193,0.712541,0.189097,0.062869,0.022627,0.52242,0.256937,0.151808,0.041679,0.436576,0.324508,0.163385,0.075531,0.530049,0.328655,0.099194,0.041287,0.591864,0.310329,0.058749,0.039058,0.482744,0.343334,0.065277,0.057005,0.510732,0.313602,0.098603,0.077063,0.476409,0.336682,0.093936,0.092974,0.492429,0.338806,0.084679,0.071705,0.597855,0.186645,0.118357,0.097142,0.525623,0.256213,0.129893,0.085442,0.539416,0.265799,0.124764,0.07002,0.496408,0.348453,0.092988,0.027839,0.563457,0.287374,0.083754,0.052614,0.659837,0.181756,0.098375,0.060032,0.717081,0.134304,0.1136,0.026656,0.69212,0.151416,0.068915,0.05466,0.583353,0.223971,0.076478,0.064748,0.573417,0.273827,0.075819,0.052074,0.559371,0.282169,0.072251,0.041573,0.518731,0.314318,0.073605,0.038943,0.579367,0.228464,0.100283,0.083763,0.528442,0.281546,0.101194,0.056466,0.571453,0.201212,0.154838,0.072497,0.652903,0.203097,0.0751,0.059206,0.426422,0.387906,0.073402,0.06668,0.550102,0.26351,0.056573,0.052926,0.625651,0.211314,0.057507,0.053282,0.503908,0.321207,0.115069,0.058454,0.531659,0.308533,0.103184,0.056624,0.586425,0.248768,0.087471,0.077336,0.578761,0.266565,0.088359,0.066315,0.440182,0.382234,0.134566,0.035863,0.489781,0.353138,0.115187,0.040269,0.476414,0.327774,0.122925,0.064096,0.401377,0.386565,0.15322,0.038523,0.456138,0.360031,0.150493,0.012807,0.466918,0.379295,0.108182,0.024753,0.487941,0.29645,0.181436,0.022167,0.440657,0.399607,0.122383,0.022705,0.519723,0.286893,0.146248,0.046538,0.449865,0.386706,0.120588,0.033523,0.482262,0.33838,0.114658,0.056234,0.424713,0.40938,0.096931,0.043769,0.541865,0.253376,0.132473,0.068156,0.456367,0.374047,0.083013,0.048931,0.47417,0.34271,0.10269,0.063217,0.492957,0.355282,0.105646,0.033123,0.516322,0.333717,0.100671,0.040231,0.630995,0.220297,0.078091,0.070617,0.590858,0.144885,0.137622,0.120064,0.535662,0.250294,0.113294,0.084688,0.570925,0.184354,0.12226,0.108903,0.412831,0.357994,0.106084,0.065053,0.60107,0.220243,0.141005,0.029455,0.487174,0.240013,0.145054,0.075725,0.408002,0.319795,0.13764,0.078698,0.486057,0.268092,0.188298,0.057553,0.585904,0.170918,0.165187,0.077991,0.435031,0.351906,0.133274,0.063725,0.522215,0.282061,0.108684,0.082844,0.42263,0.341947,0.172349,0.032226,0.579448,0.241139,0.089739,0.089673,0.540165,0.311886,0.093751,0.04708,0.434152,0.406653,0.107442,0.031066,0.419674,0.416113,0.10316,0.040304,0.478646,0.343764,0.078659,0.054605,0.422291,0.405214,0.086003,0.074197,0.608506,0.205524,0.093321,0.070192,0.556631,0.26444,0.092514,0.076611,0.589569,0.292165,0.079946,0.03832,0.566704,0.225107,0.127531,0.064713,0.595345,0.213916,0.119383,0.038555,0.556331,0.278126,0.089165,0.076377,0.473692,0.372497,0.08749,0.066321,0.761747,0.179001,0.059251,0,0.601592,0.188248,0.110425,0.079038,0.302779,0.297718,0.222465,0.092972,0.465304,0.280443,0.223881,0.030372,1,0,0,0,0.616685,0.25606,0,0,0.605006,0.349668,0,0,0.660917,0.339083,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.984654,0.015346,0,0,0.883323,0.059641,0.057036,0,0.99989,0.00011,0,0,0.971512,0.028488,0,0,0.436595,0.251803,0.156449,0.148009,0.653717,0.15386,0.104668,0.051682,0.825562,0.120304,0.054135,0,0.568867,0.308132,0.110684,0.012316,0.848391,0.08394,0.067669,0,0.583475,0.186098,0.177637,0.052789,0.565077,0.323563,0.084968,0.026392,0.825449,0.090677,0.083874,0,0.790943,0.098857,0.061774,0.048426,0.819479,0.107989,0.062413,0.010119,0.715647,0.118596,0.087444,0.06543,0.544329,0.183652,0.16,0.101314,0.736125,0.095042,0.089616,0.067561,0.44587,0.274244,0.187773,0.092113,0.699391,0.292104,0.008505,0,0.871218,0.128782,0,0,0.716782,0.283218,0,0,0.80438,0.184837,0.010783,0,0.649333,0.350667,0,0,0.953435,0.046565,0,0,0.708947,0.291053,0,0,0.881209,0.118791,0,0,0.893819,0.106181,0,0,0.786968,0.213032,0,0,0.784217,0.215183,0.0006,0,0.92393,0.07607,0,0,0.701201,0.298799,0,0,0.780595,0.219405,0,0,0.837157,0.120344,0.042499,0,0.824576,0.098782,0.076642,0,0.817885,0.143162,0.038953,0,0.971701,0.028299,0,0,0.952463,0.047537,0,0,1,0,0,0,0.942138,0.057863,0,0,0.653346,0.252703,0.085225,0.008726,0.570143,0.178769,0.168112,0.076085,0.763564,0.182131,0.040605,0.0137,0.596143,0.320301,0.060611,0.022945,0.798569,0.173184,0.02552,0.002727,0.792559,0.129812,0.053844,0.023785,0.673257,0.326743,0,0,0.749392,0.232748,0.015327,0.002533,0.578602,0.358756,0.0484,0.014242,0.807805,0.164902,0.027293,0,0.880153,0.107667,0.01218,0,0.808249,0.140374,0.051377,0,0.352929,0.300513,0.174271,0.172288,0.470971,0.419594,0.058186,0.051249,0.639891,0.334793,0.014978,0.010338,0.695519,0.304481,0,0,0.865696,0.126016,0.008288,0,0.781119,0.161817,0.052019,0.005045,0.649486,0.170819,0.12435,0.055345,0.747949,0.252051,0,0,1,0,0,0,0.776713,0.140792,0.080679,0.001816,0.953249,0.046751,0,0,0.797345,0.202655,0,0,0.990574,0.009426,0,0,0.594623,0.207572,0.112616,0.076431,0.509126,0.21811,0.194826,0.077938,0.871953,0.084485,0.043562,0,0.742353,0.159549,0.092044,0.006054,1,0,0,0,0.647651,0.243848,0.062532,0.04274,0.601291,0.236111,0.110942,0.051657,0.916804,0.043566,0.039629,0,0.511471,0.362681,0.104716,0.021132,1,0,0,0,0.51095,0.254076,0.149863,0.085111,0.520421,0.285557,0.135552,0.058471,0.457627,0.278542,0.171742,0.076726,0.519803,0.211052,0.191612,0.077534,0.469389,0.265887,0.143442,0.121282,0.409182,0.276629,0.209263,0.080021,0.535256,0.207608,0.178671,0.078465,0.564901,0.275396,0.122825,0.018543,0.525856,0.383157,0.081467,0.009521,0.734978,0.138712,0.085515,0.035783,0.444517,0.290589,0.13504,0.129855,0.453302,0.440623,0.089782,0.016292,0.521928,0.229913,0.176077,0.072083,0.521525,0.252264,0.159768,0.066443,0.71891,0.241424,0.030356,0.009311,0.735957,0.207057,0.029715,0.027272,0.760546,0.165608,0.05631,0.017536,0.727182,0.198599,0.047945,0.026274,0.637699,0.215105,0.126332,0.013819,0.78836,0.147219,0.050155,0.008554,0.562006,0.353209,0.079281,0.005503,0.768269,0.109235,0.061328,0.061169,0.687644,0.143288,0.124369,0.044699,0.57109,0.352329,0.076581,0,0.410335,0.270141,0.20721,0.080061,0.634378,0.256176,0.072104,0.037342,0.603283,0.292102,0.068451,0.036164,0.70603,0.170695,0.116012,0.006765,0.691475,0.223083,0.085141,0.000301,0.682592,0.24494,0.052664,0.019804,0.700062,0.236646,0.046246,0.017046,0.427563,0.427197,0.073667,0.071574,1,0,0,0,0.687256,0.29471,0.014578,0.003456,0.665663,0.266256,0.05757,0.010511,0.950087,0.04959,0.000323,0,0.8426,0.11471,0.04269,0,0.809712,0.101125,0.089163,0,0.832479,0.089017,0.078504,0,0.822602,0.133632,0.043766,0,0.822976,0.120294,0.05428,0.00245,0.522171,0.238101,0.16942,0.070308,0.569248,0.220467,0.159578,0.050706,0.477647,0.38325,0.110704,0.028398,0.465267,0.316971,0.109708,0.108053,0.5638,0.229921,0.141773,0.063554,0.464915,0.393609,0.108691,0.032785,0.897561,0.102439,0,0,0.752469,0.24753,0,0,0.722248,0.277752,0,0,0.882105,0.117895,0,0,0.955834,0.034869,0.009296,0,0.688055,0.154086,0.124103,0.033757,0.643235,0.144959,0.114794,0.077482,0.735702,0.183493,0.057658,0.023147,0.674891,0.255164,0.069945,0,0.630963,0.160752,0.090252,0.073986,0.399138,0.346188,0.174877,0.079797,0.555496,0.229281,0.103673,0.080674,0.710454,0.157572,0.111662,0.020312,0.742473,0.164433,0.081779,0.011315,0.676004,0.256305,0.067691,0,0.688536,0.194289,0.09989,0.017286,0.637266,0.160093,0.141749,0.060892,0.558597,0.231487,0.132459,0.077457,0.532923,0.23031,0.152627,0.084139,0.617276,0.176423,0.149205,0.057097,0.516535,0.264577,0.151965,0.066923,0.663368,0.324449,0.006707,0.005476,0.418569,0.218442,0.190655,0.140392,0.515294,0.268562,0.108714,0.099976,0.532263,0.26574,0.077958,0.057381,0.673872,0.281074,0.045054,0,0.485288,0.445164,0.050129,0.019418,0.459385,0.440081,0.061166,0.039368,0.657953,0.27686,0.036469,0.028718,0.625809,0.185934,0.127285,0.044945,0.725765,0.274235,0,0,0.462073,0.219959,0.158656,0.141947,0.836744,0.163256,0,0,0.570186,0.337225,0.092589,0,0.716763,0.223873,0.059364,0,0.584365,0.128599,0.118291,0.110746,0.735754,0.11051,0.076893,0.069605,0.445116,0.292445,0.148091,0.114347,0.659787,0.268643,0.061397,0.010173,0.572819,0.164657,0.099369,0.083702,0.401787,0.332753,0.151271,0.104041,0.491046,0.319894,0.089476,0.046014,0.620263,0.194038,0.168138,0.012368,0.481661,0.341877,0.112159,0.064303,0.717324,0.203686,0.073249,0.00574,0.588111,0.311349,0.073092,0.027448,0.762449,0.126517,0.111034,0,0.475208,0.367404,0.070714,0.059748,0.672684,0.165365,0.121881,0.032731,0.272755,0.264453,0.210035,0.130929,0.45302,0.182478,0.157325,0.123835,0.476408,0.307261,0.092328,0.064774,0.481985,0.422233,0.076851,0.01893,0.634052,0.179077,0.128951,0.057919,0.33058,0.291625,0.157007,0.104581,0.673533,0.23394,0.060871,0.031656,0.669543,0.321165,0.009292,0,0.627751,0.363433,0.008816,0,0.646516,0.28229,0.057681,0.013513,0.517722,0.444802,0.037477,0,0.677622,0.322378,0,0,0.682764,0.140643,0.133599,0.03403,0.589762,0.163916,0.148151,0.098171,0.734528,0.095788,0.088239,0.066005,0.748812,0.172096,0.074998,0.004095,0.719895,0.174631,0.105474,0,0.776917,0.137548,0.058676,0.02686,0.826606,0.105965,0.067343,0.000087,0.84817,0.15183,0,0,0.860919,0.139081,0,0,0.633944,0.366056,0,0,0.534884,0.413195,0.051921,0,0.844994,0.155006,0,0,0.749094,0.141568,0.066639,0.042699,0.734268,0.126424,0.067879,0.060977,0.564438,0.297057,0.068884,0.063725,0.598534,0.216378,0.098209,0.08303,0.446905,0.197508,0.180814,0.164532,0.610913,0.278392,0.085457,0.025238,0.583338,0.362611,0.032679,0.01818,0.543875,0.384509,0.036283,0.02042,0.694726,0.198522,0.090799,0.009637,0.790066,0.137616,0.072318,0,0.596101,0.297074,0.106825,0,0.826605,0.15536,0.018035,0,0.574181,0.329399,0.09642,0,0.657869,0.228994,0.084359,0.021081,0.674351,0.214174,0.104663,0.006812,0.52845,0.214355,0.203665,0.03287,0.39461,0.292719,0.224136,0.088536,0.355041,0.264327,0.219743,0.103916,0.364097,0.35203,0.136367,0.061423,0.398212,0.386168,0.114896,0.054106,0.409797,0.317871,0.17738,0.075806,0.374695,0.266763,0.1829,0.175642,0.693019,0.191124,0.087412,0.028445,0.392843,0.325717,0.175675,0.059436,0.415565,0.271532,0.216993,0.074636,0.421531,0.281679,0.209571,0.074784,0.404033,0.341347,0.167212,0.087408,0.434118,0.312227,0.136954,0.1167,0.38656,0.346866,0.15547,0.074016,0.439678,0.341486,0.122597,0.086472,0.463999,0.355979,0.103279,0.076742,0.433468,0.235179,0.216303,0.063292,0.44622,0.274373,0.181838,0.053993,0.468668,0.320802,0.146011,0.054655,0.508171,0.443131,0.048698,0,0.373818,0.372624,0.137414,0.090852,0.558907,0.338981,0.089788,0.012324,0.526779,0.337176,0.062637,0.046939,0.615029,0.341875,0.043095,0,1,0,0,0,1,0,0,0,1,0,0,0,0.583724,0.275133,0.054138,0.049858,0.6152,0.29702,0.08778,0,0.476519,0.472908,0.050573,0,0.613966,0.320575,0.065459,0,0.328974,0.273369,0.236526,0.161131,0.639865,0.297067,0.063067,0,0.47213,0.39177,0.097394,0.038705,0.451497,0.416822,0.131681,0,0.716084,0.174372,0.065567,0.043977,0.48407,0.280637,0.095832,0.090906,0.54598,0.289824,0.131417,0.021174,0.494593,0.384435,0.068348,0.052624,0.680382,0.310959,0.00866,0,0.844482,0.130545,0.024973,0,0.616776,0.119423,0.092586,0.087501,0.458796,0.289536,0.129884,0.110442,0.311335,0.255394,0.220524,0.212747,0.667261,0.166795,0.080648,0.061472,0.549483,0.146189,0.130518,0.107913,1,0,0,0,0.83952,0.16048,0,0,0.814702,0.185298,0,0,0.574976,0.31829,0.093617,0.013117,0.802804,0.197196,0,0,0.826752,0.173248,0,0,0.977995,0.022005,0,0,0.994611,0.005389,0,0,0.777543,0.222457,0,0,0.640707,0.313425,0.043948,0.001921,0.988698,0.011302,0,0,0.828727,0.171273,0,0,1,0,0,0,0.756746,0.243254,0,0,0.817872,0.182128,0,0,0.952049,0.047951,0,0,0.940321,0.059679,0,0,0.886969,0.113031,0,0,0.979841,0.020159,0,0,1,0,0,0,1,0,0,0,0.980466,0.019534,0,0,0.999927,0.000073,0,0,0.997479,0.002521,0,0,0.975684,0.024316,0,0,0.985995,0.014005,0,0,1,0,0,0,0.999768,0.000232,0,0,0.991716,0.008284,0,0,1,0.000001,0,0,0.999958,0.000042,0,0,1,0,0,0,0.926414,0.073586,0,0,0.995027,0.004973,0,0,0.868808,0.131192,0,0,0.88513,0.11487,0,0,0.722452,0.277548,0,0,0.999994,0.000006,0,0,0.744348,0.255652,0,0,0.999781,0.000219,0,0,0.999999,0.000001,0,0,0.999963,0.000037,0,0,0.783795,0.216205,0,0,0.974036,0.025964,0,0,1,0,0,0,0.999996,0.000004,0,0,1,0,0,0,0.901567,0.098433,0,0,0.908328,0.091672,0,0,0.658177,0.341823,0,0,0.93705,0.06295,0,0,0.973354,0.026646,0,0,1,0,0,0,0.953101,0.046899,0,0,0.945651,0.054349,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.977075,0.022925,0,0,0.994286,0.005714,0,0,0.999124,0.000876,0,0,0.959844,0.040156,0,0,0.973619,0.026381,0,0,0.928529,0.071471,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.964253,0.035747,0,0,0.912043,0.087957,0,0,1,0,0,0,0.985627,0.014373,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.653637,0.346363,0,0,1,0,0,0,0.959036,0.040964,0,0,0.928213,0.071787,0,0,1,0,0,0,0.999771,0.000229,0,0,0.984766,0.015234,0,0,0.836896,0.163104,0,0,0.967404,0.032596,0,0,0.855212,0.144788,0,0,0.84146,0.15854,0,0,1,0,0,0,1,0,0,0,0.989946,0.010054,0,0,0.946577,0.053423,0,0,1,0,0,0,0.629319,0.370681,0,0,0.701006,0.298994,0,0,0.581428,0.418572,0,0,0.861471,0.138529,0,0,0.934215,0.065785,0,0,0.999424,0.000576,0,0,0.977981,0.022019,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.713994,0.286006,0,0,0.947139,0.052861,0,0,0.950662,0.049338,0,0,0.709275,0.290725,0,0,0.785527,0.214473,0,0,0.698424,0.301576,0,0,0.648894,0.351106,0,0,0.54466,0.45534,0,0,0.52911,0.47089,0,0,0.707915,0.292085,0,0,0.892017,0.107983,0,0,0.911947,0.088053,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.8383,0.1617,0,0,0.971657,0.028343,0,0,1,0,0,0,1,0,0,0,0.6213,0.3787,0,0,0.781876,0.218124,0,0,0.911885,0.088115,0,0,0.994181,0.005819,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.693858,0.306142,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.757084,0.242916,0,0,0.903554,0.096446,0,0,0.887002,0.112998,0,0,0.858916,0.141084,0,0,0.881265,0.118735,0,0,0.804692,0.195308,0,0,0.877884,0.122116,0,0,0.903657,0.096343,0,0,0.88674,0.11326,0,0,0.93498,0.06502,0,0,1,0,0,0,0.928312,0.071688,0,0,0.9226,0.0774,0,0,0.74976,0.25024,0,0,0.650108,0.349892,0,0,0.785645,0.214355,0,0,0.926438,0.073562,0,0,1,0,0,0,0.941074,0.058926,0,0,0.802968,0.197032,0,0,1,0,0,0,1,0,0,0,0.962941,0.037059,0,0,0.930451,0.069549,0,0,0.788119,0.211881,0,0,0.944717,0.055283,0,0,1,0,0,0,1,0,0,0,0.896901,0.103099,0,0,0.753782,0.246218,0,0,0.878331,0.121669,0,0,0.677618,0.322382,0,0,1,0,0,0,0.696306,0.303694,0,0,0.877965,0.122035,0,0,0.916065,0.083935,0,0,0.818559,0.181441,0,0,0.983483,0.016517,0,0,0.791331,0.208669,0,0,0.692034,0.307966,0,0,0.720544,0.279456,0,0,0.904538,0.095462,0,0,0.868457,0.131543,0,0,0.981337,0.018664,0,0,0.772116,0.227884,0,0,1,0,0,0,0.928873,0.071127,0,0,0.797214,0.202786,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.792233,0.207767,0,0,0.61731,0.245652,0,0,0.621754,0.283963,0,0,0.393095,0.340745,0.147878,0.118281,0.563379,0.367245,0.069376,0,0.474165,0.359198,0.113762,0.052875,0.552316,0.358663,0.066514,0.022506,0.527912,0.346954,0.092923,0.032212,0.674776,0.236444,0.062985,0.025795,0.43535,0.34731,0.136422,0.080918,0.64855,0.233792,0.070936,0.046722,0.65156,0.206465,0.075672,0.066303,0.644135,0.146341,0.130997,0.078528,0.436574,0.388713,0.123562,0.051151,0.618057,0.317874,0.061022,0.003047,0.565916,0.211759,0.1366,0.085725,0.529496,0.283687,0.06486,0.057857,0.511822,0.269681,0.180813,0.028013,0.467773,0.32804,0.140967,0.056674,0.59105,0.17989,0.146431,0.082628,0.521,0.285211,0.081544,0.071772,0.521751,0.234459,0.201647,0.025996,0.4342,0.308616,0.212172,0.038292,0.41995,0.345203,0.16251,0.072337,0.558677,0.214971,0.116636,0.061976,0.671001,0.184636,0.117066,0.015529,0.503754,0.262924,0.180953,0.038967,0.412434,0.324359,0.185356,0.077852,0.515504,0.297964,0.096194,0.081225,0.56057,0.298996,0.083143,0.057291,0.479179,0.337631,0.06735,0.055182,0.498761,0.299376,0.090314,0.088713,0.470361,0.322539,0.107707,0.089344,0.484785,0.326805,0.083511,0.075694,0.593504,0.143428,0.142523,0.115878,0.549351,0.304916,0.097351,0.034054,0.601461,0.254589,0.08709,0.05686,0.671655,0.164496,0.102474,0.061376,0.731135,0.121204,0.118307,0.029354,0.726089,0.136164,0.072887,0.039624,0.625093,0.197795,0.067229,0.049659,0.615812,0.242683,0.079445,0.056614,0.60636,0.247234,0.07587,0.048056,0.575999,0.271724,0.077682,0.032285,0.577216,0.231176,0.121684,0.069441,0.52445,0.287093,0.122447,0.040637,0.544701,0.238851,0.157904,0.058544,0.677255,0.18116,0.078921,0.061293,0.504747,0.32204,0.076651,0.051893,0.604957,0.230155,0.05992,0.043215,0.666779,0.187951,0.061401,0.056226,0.525321,0.290584,0.116853,0.06168,0.558532,0.27597,0.105605,0.059893,0.602854,0.226823,0.089141,0.081183,0.600669,0.239189,0.090391,0.069751,0.470584,0.33958,0.136801,0.041988,0.523436,0.312058,0.117918,0.04652,0.492872,0.301464,0.124012,0.067525,0.410602,0.364539,0.154645,0.044775,0.417404,0.395919,0.156042,0.017705,0.517752,0.332479,0.112523,0.030868,0.433831,0.343546,0.188168,0.025694,0.491026,0.35096,0.127088,0.028872,0.480981,0.337964,0.152212,0.0278,0.444626,0.398314,0.125599,0.017007,0.437491,0.398454,0.119883,0.036264,0.494509,0.351623,0.101851,0.025109,0.507026,0.299048,0.136161,0.054801,0.526216,0.317749,0.087899,0.02931,0.427213,0.404325,0.107043,0.047015,0.537657,0.312759,0.109585,0.039458,0.555422,0.293974,0.104002,0.046601,0.648597,0.197457,0.081653,0.072292,0.581664,0.176375,0.138694,0.096646,0.504638,0.296637,0.116323,0.067191,0.553258,0.222366,0.124142,0.08662,0.416659,0.37761,0.081118,0.067853,0.62016,0.220197,0.123502,0.030441,0.467924,0.290316,0.11132,0.077457,0.471708,0.298223,0.103106,0.078472,0.449951,0.27204,0.219318,0.058691,0.566053,0.197341,0.173385,0.063221,0.450746,0.325903,0.133871,0.067185,0.532355,0.262032,0.109143,0.08662,0.386377,0.365305,0.17336,0.038368,0.591552,0.22344,0.094051,0.090956,0.575227,0.274669,0.096637,0.053467,0.493489,0.356359,0.112364,0.02197,0.483605,0.363203,0.108143,0.022356,0.473843,0.345996,0.094269,0.037927,0.420637,0.392624,0.101139,0.068127,0.535543,0.282405,0.066004,0.051443,0.480034,0.346036,0.071337,0.059428,0.471418,0.346277,0.054382,0.05406,0.615831,0.157696,0.117791,0.108682,0.526783,0.287509,0.148658,0.037051,0.555132,0.228707,0.15321,0.052696,0.580575,0.206825,0.100339,0.065314,0.552701,0.230054,0.129,0.088245,0.470039,0.305414,0.158921,0.065626,0.726398,0.211165,0.050764,0.011673,0.643026,0.170704,0.095508,0.062514,0.402504,0.29558,0.165474,0.105769,1,0,0,0,0.62697,0.247979,0,0,0.59458,0.364125,0,0,0.673514,0.326486,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.991213,0.008787,0,0,0.874913,0.074131,0.043255,0.007701,1,0,0,0,0.978811,0.021189,0,0,0.637435,0.303278,0.034517,0.0152,0.561813,0.233971,0.204216,0,0.544447,0.26227,0.091384,0.051231,0.850331,0.113231,0.036437,0,0.542833,0.309322,0.106969,0.02323,0.858874,0.078113,0.063013,0,0.57046,0.193514,0.173734,0.062292,0.539536,0.325362,0.112223,0.022879,0.848755,0.07781,0.073435,0,0.75177,0.095339,0.094933,0.057957,0.783475,0.098142,0.060396,0.057986,0.603066,0.231106,0.085819,0.06294,0.422892,0.281914,0.176889,0.108427,0.651049,0.180668,0.086496,0.065553,0.417738,0.300895,0.162225,0.119142,0.690711,0.277992,0.016104,0.015193,0.874374,0.120791,0.004835,0,0.726666,0.273334,0,0,0.821353,0.178114,0.000533,0,0.643122,0.347043,0.009835,0,0.96396,0.03604,0,0,0.714108,0.285892,0,0,0.888127,0.111873,0,0,0.905313,0.094687,0,0,0.80443,0.19557,0,0,0.795776,0.204224,0,0,0.931291,0.068709,0,0,0.700798,0.28648,0.012722,0,0.79059,0.20941,0,0,0.853778,0.113545,0.032677,0,0.819568,0.089427,0.070585,0.020421,0.824635,0.135401,0.03032,0.009644,0.983273,0.016727,0,0,0.962622,0.037378,0,0,1,0,0,0,0.930967,0.069033,0,0,0.597272,0.29585,0.073001,0.033878,0.47608,0.271248,0.154654,0.091504,0.744058,0.167106,0.078965,0.00987,0.582797,0.278688,0.098368,0.040147,0.779664,0.159828,0.041464,0.019044,0.76765,0.118583,0.065231,0.048536,0.662609,0.307388,0.030003,0,0.728571,0.214522,0.056906,0,0.57063,0.31815,0.081501,0.02972,0.783002,0.192813,0.024185,0,0.864283,0.127016,0.008701,0,0.796831,0.165512,0.037657,0,0.279828,0.255477,0.251257,0.213438,0.45877,0.384183,0.093019,0.064027,0.587114,0.334122,0.053537,0.025227,0.662931,0.303308,0.028092,0.005669,0.849706,0.122918,0.023411,0.003964,0.736429,0.15587,0.064719,0.042982,0.601674,0.15995,0.145739,0.092637,0.756629,0.243371,0,0,1,0,0,0,0.722887,0.166824,0.05651,0.053779,0.966515,0.033485,0,0,0.808814,0.191186,0,0,0.978922,0.021078,0,0,0.507152,0.201767,0.201036,0.082586,0.486016,0.215208,0.159879,0.138896,0.878534,0.101921,0.010473,0.009073,0.696709,0.182998,0.060891,0.059402,1,0,0,0,0.597459,0.23813,0.112637,0.051153,0.584778,0.197631,0.123899,0.093693,0.922299,0.054124,0.023577,0,0.466276,0.398898,0.102676,0.03215,1,0,0,0,0.49565,0.244897,0.161073,0.09838,0.490481,0.28507,0.162868,0.061581,0.431296,0.273249,0.192422,0.083742,0.493589,0.213589,0.204709,0.088113,0.451566,0.256939,0.157802,0.133693,0.388303,0.26959,0.223566,0.08833,0.524873,0.202071,0.18378,0.089276,0.541103,0.252925,0.117239,0.059978,0.569244,0.323976,0.084667,0.022113,0.681403,0.145642,0.123669,0.032967,0.423391,0.279709,0.152456,0.14244,0.545261,0.337084,0.09014,0.027515,0.482136,0.264644,0.172039,0.081182,0.480649,0.287642,0.156732,0.074977,0.695749,0.222251,0.049745,0.026988,0.766355,0.184349,0.025094,0.024202,0.784267,0.145643,0.052485,0.017604,0.775569,0.15828,0.040976,0.025176,0.526428,0.246209,0.213687,0.01322,0.764739,0.134944,0.054939,0.040919,0.572746,0.325399,0.078363,0.014275,0.727702,0.111563,0.105163,0.055572,0.573255,0.268971,0.123726,0.034048,0.553066,0.326779,0.073324,0.040818,0.389475,0.261976,0.221379,0.089631,0.623106,0.223132,0.082974,0.070788,0.591276,0.281,0.061594,0.057103,0.679234,0.163208,0.099765,0.04327,0.594316,0.218655,0.187029,0,0.703369,0.222347,0.052996,0.014958,0.690507,0.217611,0.044293,0.036202,0.429413,0.364654,0.116378,0.089555,1,0,0,0,0.64761,0.282961,0.060664,0.008765,0.64202,0.238711,0.063398,0.055871,0.954999,0.035907,0.009094,0,0.835693,0.101979,0.054566,0.007762,0.780704,0.102462,0.079341,0.037493,0.848243,0.077586,0.074171,0,0.829218,0.129004,0.031999,0.009779,0.791781,0.113295,0.049858,0.045066,0.50025,0.254708,0.165774,0.079268,0.547228,0.211143,0.152592,0.058302,0.453217,0.385891,0.107629,0.039369,0.460825,0.304329,0.125773,0.109073,0.545994,0.218945,0.131131,0.072321,0.433833,0.413555,0.107667,0.044945,0.902262,0.097738,0,0,0.756266,0.243734,0,0,0.715213,0.278622,0.006165,0,0.884468,0.115532,0,0,0.952868,0.023927,0.023205,0,0.690942,0.159553,0.114003,0.035503,0.687257,0.119718,0.104967,0.078146,0.749985,0.190515,0.052616,0.006885,0.699827,0.256668,0.043505,0,0.674283,0.137238,0.090386,0.063486,0.502192,0.246845,0.172483,0.07848,0.628426,0.172551,0.103634,0.080484,0.713316,0.162867,0.101676,0.02214,0.754382,0.170942,0.074676,0,0.673537,0.264615,0.061849,0,0.688503,0.200747,0.09207,0.01868,0.641424,0.149882,0.147084,0.06161,0.579122,0.208094,0.135171,0.077613,0.54443,0.214811,0.156637,0.084121,0.620503,0.181717,0.140242,0.057538,0.567446,0.262482,0.104012,0.06606,0.666817,0.331908,0.001275,0,0.452301,0.220606,0.179526,0.14154,0.521692,0.251962,0.108294,0.103919,0.601875,0.209418,0.074013,0.058452,0.695592,0.286661,0.017747,0,0.485395,0.4528,0.042797,0.019008,0.456005,0.448026,0.056991,0.038979,0.680735,0.280612,0.023364,0.01529,0.65704,0.157361,0.129004,0.045767,0.725404,0.274596,0,0,0.373454,0.276049,0.227919,0.122578,0.786215,0.12259,0.091195,0,0.761493,0.099551,0.080167,0.057169,0.5189,0.251521,0.119035,0.110545,0.521021,0.386738,0.075292,0.016949,0.565208,0.164312,0.103063,0.100009,0.382039,0.321431,0.166547,0.115771,0.476926,0.345894,0.091599,0.043272,0.552724,0.268788,0.17147,0.004435,0.473685,0.373116,0.089873,0.063325,0.769765,0.153257,0.075087,0.001891,0.669522,0.216758,0.074235,0.039485,0.789355,0.128393,0.082252,0,0.579836,0.249883,0.072595,0.068216,0.534063,0.262121,0.144982,0.04266,0.314067,0.260513,0.210406,0.102793,0.484506,0.182203,0.152536,0.124291,0.458605,0.307032,0.105012,0.067145,0.466429,0.42498,0.105192,0.003399,0.626175,0.174637,0.130871,0.068317,0.328953,0.289137,0.184862,0.077851,0.586784,0.263342,0.105436,0.044438,0.670108,0.320042,0.00985,0,0.626647,0.362668,0.010685,0,0.637974,0.291926,0.053281,0.016819,0.511934,0.448599,0.039467,0,0.676805,0.323195,0,0,0.666793,0.13785,0.124164,0.037049,0.641987,0.140504,0.13793,0.077882,0.769787,0.080972,0.078066,0.069136,0.689559,0.236946,0.059172,0.014323,0.719407,0.180588,0.100005,0,0.718237,0.199337,0.042689,0.039737,0.752223,0.165742,0.082035,0,0.848343,0.151657,0,0,0.861206,0.138794,0,0,0.634292,0.365708,0,0,0.530763,0.416988,0.052249,0,0.845144,0.154856,0,0,0.768173,0.145991,0.051135,0.034701,0.772713,0.100232,0.070571,0.056484,0.638187,0.237027,0.060708,0.05514,0.655922,0.178368,0.092391,0.06629,0.514357,0.18972,0.153445,0.141651,0.539573,0.366417,0.068669,0.025341,0.509839,0.415818,0.051081,0.023261,0.640266,0.304332,0.024223,0.018614,0.556177,0.301225,0.110232,0.017804,0.708172,0.16379,0.122696,0.005342,0.595509,0.268753,0.107263,0.028474,0.768422,0.167073,0.059991,0.004514,0.579269,0.323707,0.097024,0,0.644873,0.233057,0.08473,0.037339,0.663296,0.215179,0.102775,0.018751,0.483827,0.250761,0.202893,0.038421,0.34299,0.289858,0.279502,0.087649,0.343616,0.265215,0.249144,0.104747,0.364661,0.345919,0.158123,0.063613,0.393761,0.36853,0.136558,0.054827,0.378207,0.31403,0.212207,0.075057,0.42745,0.218218,0.180963,0.173368,0.681807,0.185442,0.087469,0.045282,0.370051,0.339483,0.173797,0.062777,0.393409,0.266462,0.23239,0.081167,0.398292,0.277434,0.226358,0.080418,0.38465,0.337478,0.185077,0.092796,0.423746,0.299895,0.151526,0.124833,0.363094,0.359026,0.153149,0.077269,0.463574,0.309903,0.121779,0.088659,0.512836,0.304751,0.103805,0.078609,0.409428,0.253141,0.212302,0.070661,0.412863,0.299102,0.179692,0.056127,0.417883,0.364846,0.146131,0.056411,0.503426,0.430726,0.065848,0,0.387837,0.348459,0.13571,0.093762,0.561228,0.343016,0.083095,0.012661,0.549064,0.340841,0.060712,0.048005,0.61071,0.354299,0.034991,0,1,0,0,0,1,0,0,0,1,0,0,0,0.611597,0.279043,0.053028,0.038863,0.625248,0.298384,0.076368,0,0.496302,0.47709,0.026608,0,0.610789,0.327991,0.06122,0,0.378108,0.347035,0.174643,0.100214,0.50679,0.294907,0.077276,0.066529,0.679355,0.159405,0.098304,0.062936,0.732953,0.161616,0.105431,0,0.49331,0.196086,0.147938,0.126165,0.58297,0.211898,0.106262,0.085541,0.580537,0.205817,0.158217,0.055429,0.857923,0.058524,0.054455,0.029098,0.59323,0.332453,0.04936,0.024957,0.5339,0.438447,0.022559,0.005093,1,0,0,0,0.838577,0.161423,0,0,0.856926,0.143074,0,0,0.579163,0.321569,0.085864,0.013404,0.798999,0.201001,0,0,0.823311,0.176689,0,0,0.977115,0.022885,0,0,0.994522,0.005478,0,0,0.774157,0.225843,0,0,0.660946,0.315454,0.0236,0,0.98754,0.01246,0,0,0.825711,0.174289,0,0,1,0,0,0,0.573752,0.426248,0,0,0.514248,0.485752,0,0,0.997445,0.002555,0,0,1,0,0,0,0.897512,0.102488,0,0,1,0,0,0,1,0,0,0,0.954178,0.045822,0,0,0.936495,0.063505,0,0,0.993686,0.006314,0,0,0.951629,0.048371,0,0,0.923922,0.076078,0,0,0.955021,0.044979,0,0,0.940229,0.059771,0,0,0.919367,0.080633,0,0,0.992388,0.007612,0,0,0.999993,0.000007,0,0,0.93763,0.06237,0,0,0.946014,0.053987,0,0,0.926568,0.073432,0,0,0.985109,0.014891,0,0,0.880322,0.119678,0,0,0.885299,0.114701,0,0,0.688167,0.311833,0,0,0.997044,0.002956,0,0,0.755251,0.244749,0,0,0.960846,0.039154,0,0,0.999781,0.000219,0,0,1,0,0,0,0.781106,0.218894,0,0,0.972706,0.027294,0,0,1,0,0,0,0.876941,0.123059,0,0,1,0,0,0,0.999906,0.000094,0,0,0.99731,0.00269,0,0,0.65778,0.34222,0,0,0.942004,0.057996,0,0,0.984196,0.015804,0,0,1,0,0,0,0.952703,0.047297,0,0,0.946317,0.053683,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.959961,0.040039,0,0,0.944261,0.055739,0,0,0.898389,0.101611,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.9804,0.0196,0,0,0.795431,0.204569,0,0,1,0,0,0,0.999982,0.000018,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.610572,0.389428,0,0,1,0,0,0,0.907954,0.092046,0,0,0.999864,0.000136,0,0,0.947425,0.052575,0,0,0.99958,0.00042,0,0,0.983858,0.016142,0,0,0.834949,0.165051,0,0,0.965645,0.034355,0,0,0.852106,0.147894,0,0,0.842764,0.157236,0,0,1,0,0,0,1,0,0,0,0.989964,0.010036,0,0,0.944291,0.055709,0,0,1,0,0,0,0.633202,0.366798,0,0,0.719299,0.280701,0,0,0.609982,0.390018,0,0,0.856709,0.143291,0,0,0.93238,0.06762,0,0,0.99819,0.00181,0,0,0.980342,0.019658,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.743139,0.256861,0,0,0.944971,0.055029,0,0,0.948399,0.051601,0,0,0.74043,0.25957,0,0,0.783482,0.216518,0,0,0.659282,0.340718,0,0,0.557272,0.442728,0,0,0.519814,0.480186,0,0,0.524449,0.475551,0,0,0.699487,0.300513,0,0,0.889563,0.110437,0,0,0.910832,0.089168,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.839171,0.160829,0,0,0.96923,0.03077,0,0,1,0,0,0,1,0,0,0,0.623131,0.376869,0,0,0.782974,0.217026,0,0,0.911853,0.088147,0,0,0.99662,0.00338,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.725413,0.274587,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.748927,0.251073,0,0,0.907509,0.092491,0,0,0.897447,0.102553,0,0,0.881152,0.118848,0,0,0.873668,0.126332,0,0,0.796891,0.203109,0,0,0.914225,0.085776,0,0,0.91021,0.08979,0,0,0.886392,0.113608,0,0,0.931406,0.068594,0,0,1,0,0,0,0.928461,0.071539,0,0,0.924719,0.075281,0,0,0.754295,0.245705,0,0,0.640843,0.359157,0,0,0.762856,0.237144,0,0,0.922852,0.077148,0,0,1,0,0,0,0.941075,0.058925,0,0,0.801967,0.198033,0,0,1,0,0,0,1,0,0,0,0.962389,0.037611,0,0,0.928743,0.071257,0,0,0.784514,0.215486,0,0,0.943848,0.056152,0,0,1,0,0,0,1,0,0,0,0.918056,0.081945,0,0,0.844587,0.155413,0,0,0.868828,0.131172,0,0,0.613489,0.386511,0,0,1,0,0,0,0.703988,0.296012,0,0,0.876813,0.123187,0,0,0.915926,0.084074,0,0,0.819106,0.180894,0,0,0.983866,0.016134,0,0,0.791429,0.208571,0,0,0.658617,0.341383,0,0,0.73718,0.26282,0,0,0.905886,0.094113,0,0,0.864833,0.135167,0,0,0.982427,0.017573,0,0,0.774473,0.225527,0,0,1,0,0,0,0.926764,0.073236,0,0,0.794278,0.205722,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0.798285,0.201715,0,0,0.628399,0.279447,0,0,0.789766,0.115962,0.07682,0.013652,0.76575,0.104945,0.067883,0.058512,0.521215,0.255714,0.11766,0.10046,0.529343,0.239462,0.121657,0.100161,0.807598,0.192402,0,0,0.811261,0.188739,0,0,0.737005,0.254646,0.008348,0,0.693792,0.295188,0.01102,0,1,0,0,0,1,0,0,0,0.558014,0.268442,0.096197,0.071461,0.563571,0.275747,0.103467,0.057216,0.643403,0.166676,0.130647,0.030258,0.65646,0.173503,0.14436,0.021648,0.692347,0.167181,0.079914,0.051204,0.709484,0.171958,0.098681,0.019549,0.644058,0.29236,0.058399,0.005183,0.630725,0.289699,0.069147,0.010429,0.312321,0.299186,0.231716,0.099359,0.441615,0.230151,0.175659,0.081799,0.658009,0.161824,0.131195,0.040915,0.533554,0.250934,0.147634,0.034834,0.464777,0.355013,0.130179,0.039358,0.600037,0.215846,0.131808,0.04115,0.707278,0.134403,0.107013,0.042778,0.925582,0.074419,0,0,0.92822,0.07178,0,0,1,0,0,0,1,0,0,0,0.750222,0.249778,0,0,0.924382,0.056813,0.018806,0,0.913981,0.066389,0.01596,0.00367,0.753026,0.246974,0,0]};\nvar tshirt = {\"_id\":\"tshirt\",\"skinWeights\":[0.536175,0.289439,0.077818,0.046001,0.541631,0.22725,0.174689,0.046152,0.481072,0.323027,0.118356,0.059022,0.598718,0.178888,0.120982,0.101412,0.532093,0.296002,0.092941,0.06192,0.546773,0.196906,0.195534,0.043278,0.49058,0.26723,0.205503,0.034059,0.443287,0.344246,0.139866,0.072602,0.576356,0.224785,0.130784,0.054193,0.712541,0.189097,0.062869,0.022627,0.52242,0.256937,0.151808,0.041679,0.436576,0.324508,0.163385,0.075531,0.530049,0.328655,0.099194,0.041287,0.591864,0.310329,0.058749,0.039058,0.482744,0.343334,0.065277,0.057005,0.510732,0.313602,0.098603,0.077063,0.476409,0.336682,0.093936,0.092974,0.492429,0.338806,0.084679,0.071705,0.597855,0.186645,0.118357,0.097142,0.525623,0.256213,0.129893,0.085442,0.539416,0.265799,0.124764,0.07002,0.496408,0.348453,0.092988,0.027839,0.563457,0.287374,0.083754,0.052614,0.659837,0.181756,0.098375,0.060032,0.717081,0.134304,0.1136,0.026656,0.69212,0.151416,0.068915,0.05466,0.583353,0.223971,0.076478,0.064748,0.573417,0.273827,0.075819,0.052074,0.559371,0.282169,0.072251,0.041573,0.518731,0.314318,0.073605,0.038943,0.579367,0.228464,0.100283,0.083763,0.528442,0.281546,0.101194,0.056466,0.571453,0.201212,0.154838,0.072497,0.652903,0.203097,0.0751,0.059206,0.426422,0.387906,0.073402,0.06668,0.550102,0.26351,0.056573,0.052926,0.625651,0.211314,0.057507,0.053282,0.503908,0.321207,0.115069,0.058454,0.531659,0.308533,0.103184,0.056624,0.586425,0.248768,0.087471,0.077336,0.578761,0.266565,0.088359,0.066315,0.440182,0.382234,0.134566,0.035863,0.489781,0.353138,0.115187,0.040269,0.476414,0.327774,0.122925,0.064096,0.401377,0.386565,0.15322,0.038523,0.456138,0.360031,0.150493,0.012807,0.466918,0.379295,0.108182,0.024753,0.487941,0.29645,0.181436,0.022167,0.440657,0.399607,0.122383,0.022705,0.519723,0.286893,0.146248,0.046538,0.449865,0.386706,0.120588,0.033523,0.482262,0.33838,0.114658,0.056234,0.424713,0.40938,0.096931,0.043769,0.541865,0.253376,0.132473,0.068156,0.456367,0.374047,0.083013,0.048931,0.47417,0.34271,0.10269,0.063217,0.492957,0.355282,0.105646,0.033123,0.516322,0.333717,0.100671,0.040231,0.630995,0.220297,0.078091,0.070617,0.590858,0.144885,0.137622,0.120064,0.535662,0.250294,0.113294,0.084688,0.570925,0.184354,0.12226,0.108903,0.412831,0.357994,0.106084,0.065053,0.60107,0.220243,0.141005,0.029455,0.487174,0.240013,0.145054,0.075725,0.408002,0.319795,0.13764,0.078698,0.486057,0.268092,0.188298,0.057553,0.585904,0.170918,0.165187,0.077991,0.435031,0.351906,0.133274,0.063725,0.522215,0.282061,0.108684,0.082844,0.42263,0.341947,0.172349,0.032226,0.579448,0.241139,0.089739,0.089673,0.540165,0.311886,0.093751,0.04708,0.434152,0.406653,0.107442,0.031066,0.419674,0.416113,0.10316,0.040304,0.478646,0.343764,0.078659,0.054605,0.422291,0.405214,0.086003,0.074197,0.608506,0.205524,0.093321,0.070192,0.556631,0.26444,0.092514,0.076611,0.589569,0.292165,0.079946,0.03832,0.566704,0.225107,0.127531,0.064713,0.595345,0.213916,0.119383,0.038555,0.556331,0.278126,0.089165,0.076377,0.473692,0.372497,0.08749,0.066321,0.601592,0.188248,0.110425,0.079038,0.302779,0.297718,0.222465,0.092972,0.465304,0.280443,0.223881,0.030372,0.436595,0.251803,0.156449,0.148009,0.653717,0.15386,0.104668,0.051682,0.825562,0.120304,0.054135,0,0.848391,0.08394,0.067669,0,0.583475,0.186098,0.177637,0.052789,0.565077,0.323563,0.084968,0.026392,0.825449,0.090677,0.083874,0,0.790943,0.098857,0.061774,0.048426,0.819479,0.107989,0.062413,0.010119,0.715647,0.118596,0.087444,0.06543,0.544329,0.183652,0.16,0.101314,0.736125,0.095042,0.089616,0.067561,0.716782,0.283218,0,0,0.80438,0.184837,0.010783,0,0.649333,0.350667,0,0,0.784217,0.215183,0.0006,0,0.780595,0.219405,0,0,0.837157,0.120344,0.042499,0,0.824576,0.098782,0.076642,0,0.817885,0.143162,0.038953,0,0.798569,0.173184,0.02552,0.002727,0.792559,0.129812,0.053844,0.023785,0.594623,0.207572,0.112616,0.076431,0.647651,0.243848,0.062532,0.04274,0.511471,0.362681,0.104716,0.021132,0.51095,0.254076,0.149863,0.085111,0.520421,0.285557,0.135552,0.058471,0.457627,0.278542,0.171742,0.076726,0.519803,0.211052,0.191612,0.077534,0.469389,0.265887,0.143442,0.121282,0.409182,0.276629,0.209263,0.080021,0.535256,0.207608,0.178671,0.078465,0.564901,0.275396,0.122825,0.018543,0.525856,0.383157,0.081467,0.009521,0.734978,0.138712,0.085515,0.035783,0.444517,0.290589,0.13504,0.129855,0.453302,0.440623,0.089782,0.016292,0.521928,0.229913,0.176077,0.072083,0.521525,0.252264,0.159768,0.066443,0.71891,0.241424,0.030356,0.009311,0.735957,0.207057,0.029715,0.027272,0.760546,0.165608,0.05631,0.017536,0.727182,0.198599,0.047945,0.026274,0.637699,0.215105,0.126332,0.013819,0.78836,0.147219,0.050155,0.008554,0.562006,0.353209,0.079281,0.005503,0.768269,0.109235,0.061328,0.061169,0.687644,0.143288,0.124369,0.044699,0.57109,0.352329,0.076581,0,0.410335,0.270141,0.20721,0.080061,0.634378,0.256176,0.072104,0.037342,0.603283,0.292102,0.068451,0.036164,0.70603,0.170695,0.116012,0.006765,0.691475,0.223083,0.085141,0.000301,0.682592,0.24494,0.052664,0.019804,0.700062,0.236646,0.046246,0.017046,0.687256,0.29471,0.014578,0.003456,0.832479,0.089017,0.078504,0,0.822602,0.133632,0.043766,0,0.822976,0.120294,0.05428,0.00245,0.522171,0.238101,0.16942,0.070308,0.569248,0.220467,0.159578,0.050706,0.477647,0.38325,0.110704,0.028398,0.465267,0.316971,0.109708,0.108053,0.5638,0.229921,0.141773,0.063554,0.464915,0.393609,0.108691,0.032785,0.688055,0.154086,0.124103,0.033757,0.643235,0.144959,0.114794,0.077482,0.735702,0.183493,0.057658,0.023147,0.674891,0.255164,0.069945,0,0.630963,0.160752,0.090252,0.073986,0.399138,0.346188,0.174877,0.079797,0.555496,0.229281,0.103673,0.080674,0.710454,0.157572,0.111662,0.020312,0.742473,0.164433,0.081779,0.011315,0.676004,0.256305,0.067691,0,0.688536,0.194289,0.09989,0.017286,0.637266,0.160093,0.141749,0.060892,0.558597,0.231487,0.132459,0.077457,0.532923,0.23031,0.152627,0.084139,0.617276,0.176423,0.149205,0.057097,0.516535,0.264577,0.151965,0.066923,0.663368,0.324449,0.006707,0.005476,0.418569,0.218442,0.190655,0.140392,0.515294,0.268562,0.108714,0.099976,0.532263,0.26574,0.077958,0.057381,0.673872,0.281074,0.045054,0,0.485288,0.445164,0.050129,0.019418,0.459385,0.440081,0.061166,0.039368,0.657953,0.27686,0.036469,0.028718,0.625809,0.185934,0.127285,0.044945,0.462073,0.219959,0.158656,0.141947,0.716763,0.223873,0.059364,0,0.584365,0.128599,0.118291,0.110746,0.735754,0.11051,0.076893,0.069605,0.445116,0.292445,0.148091,0.114347,0.659787,0.268643,0.061397,0.010173,0.401787,0.332753,0.151271,0.104041,0.491046,0.319894,0.089476,0.046014,0.620263,0.194038,0.168138,0.012368,0.481661,0.341877,0.112159,0.064303,0.717324,0.203686,0.073249,0.00574,0.588111,0.311349,0.073092,0.027448,0.762449,0.126517,0.111034,0,0.475208,0.367404,0.070714,0.059748,0.272755,0.264453,0.210035,0.130929,0.45302,0.182478,0.157325,0.123835,0.476408,0.307261,0.092328,0.064774,0.481985,0.422233,0.076851,0.01893,0.589762,0.163916,0.148151,0.098171,0.734528,0.095788,0.088239,0.066005,0.748812,0.172096,0.074998,0.004095,0.776917,0.137548,0.058676,0.02686,0.826606,0.105965,0.067343,0.000087,0.749094,0.141568,0.066639,0.042699,0.734268,0.126424,0.067879,0.060977,0.564438,0.297057,0.068884,0.063725,0.598534,0.216378,0.098209,0.08303,0.446905,0.197508,0.180814,0.164532,0.610913,0.278392,0.085457,0.025238,0.583338,0.362611,0.032679,0.01818,0.543875,0.384509,0.036283,0.02042,0.694726,0.198522,0.090799,0.009637,0.52845,0.214355,0.203665,0.03287,0.39461,0.292719,0.224136,0.088536,0.355041,0.264327,0.219743,0.103916,0.398212,0.386168,0.114896,0.054106,0.409797,0.317871,0.17738,0.075806,0.374695,0.266763,0.1829,0.175642,0.392843,0.325717,0.175675,0.059436,0.415565,0.271532,0.216993,0.074636,0.421531,0.281679,0.209571,0.074784,0.404033,0.341347,0.167212,0.087408,0.434118,0.312227,0.136954,0.1167,0.38656,0.346866,0.15547,0.074016,0.439678,0.341486,0.122597,0.086472,0.463999,0.355979,0.103279,0.076742,0.433468,0.235179,0.216303,0.063292,0.44622,0.274373,0.181838,0.053993,0.468668,0.320802,0.146011,0.054655,0.508171,0.443131,0.048698,0,0.373818,0.372624,0.137414,0.090852,0.558907,0.338981,0.089788,0.012324,0.526779,0.337176,0.062637,0.046939,0.615029,0.341875,0.043095,0,0.583724,0.275133,0.054138,0.049858,0.6152,0.29702,0.08778,0,0.476519,0.472908,0.050573,0,0.613966,0.320575,0.065459,0,0.328974,0.273369,0.236526,0.161131,0.716084,0.174372,0.065567,0.043977,0.48407,0.280637,0.095832,0.090906,0.54598,0.289824,0.131417,0.021174,0.494593,0.384435,0.068348,0.052624,0.616776,0.119423,0.092586,0.087501,0.667261,0.166795,0.080648,0.061472,0.549483,0.146189,0.130518,0.107913,0.83952,0.16048,0,0,0.814702,0.185298,0,0,0.574976,0.31829,0.093617,0.013117,0.802804,0.197196,0,0,0.826752,0.173248,0,0,0.977995,0.022005,0,0,0.777543,0.222457,0,0,0.640707,0.313425,0.043948,0.001921,0.988698,0.011302,0,0,0.828727,0.171273,0,0,0.868808,0.131192,0,0,0.744348,0.255652,0,0,0.783795,0.216205,0,0,0.974036,0.025964,0,0,0.658177,0.341823,0,0,0.93705,0.06295,0,0,0.973354,0.026646,0,0,0.953101,0.046899,0,0,0.945651,0.054349,0,0,0.984766,0.015234,0,0,0.836896,0.163104,0,0,0.967404,0.032596,0,0,0.855212,0.144788,0,0,0.84146,0.15854,0,0,1,0,0,0,0.565916,0.211759,0.1366,0.085725,0.529496,0.283687,0.06486,0.057857,0.511822,0.269681,0.180813,0.028013,0.467773,0.32804,0.140967,0.056674,0.59105,0.17989,0.146431,0.082628,0.521,0.285211,0.081544,0.071772,0.521751,0.234459,0.201647,0.025996,0.4342,0.308616,0.212172,0.038292,0.41995,0.345203,0.16251,0.072337,0.558677,0.214971,0.116636,0.061976,0.671001,0.184636,0.117066,0.015529,0.503754,0.262924,0.180953,0.038967,0.412434,0.324359,0.185356,0.077852,0.515504,0.297964,0.096194,0.081225,0.56057,0.298996,0.083143,0.057291,0.479179,0.337631,0.06735,0.055182,0.498761,0.299376,0.090314,0.088713,0.470361,0.322539,0.107707,0.089344,0.484785,0.326805,0.083511,0.075694,0.593504,0.143428,0.142523,0.115878,0.549351,0.304916,0.097351,0.034054,0.601461,0.254589,0.08709,0.05686,0.671655,0.164496,0.102474,0.061376,0.731135,0.121204,0.118307,0.029354,0.726089,0.136164,0.072887,0.039624,0.625093,0.197795,0.067229,0.049659,0.615812,0.242683,0.079445,0.056614,0.60636,0.247234,0.07587,0.048056,0.575999,0.271724,0.077682,0.032285,0.577216,0.231176,0.121684,0.069441,0.52445,0.287093,0.122447,0.040637,0.544701,0.238851,0.157904,0.058544,0.677255,0.18116,0.078921,0.061293,0.504747,0.32204,0.076651,0.051893,0.604957,0.230155,0.05992,0.043215,0.666779,0.187951,0.061401,0.056226,0.525321,0.290584,0.116853,0.06168,0.558532,0.27597,0.105605,0.059893,0.602854,0.226823,0.089141,0.081183,0.600669,0.239189,0.090391,0.069751,0.470584,0.33958,0.136801,0.041988,0.523436,0.312058,0.117918,0.04652,0.492872,0.301464,0.124012,0.067525,0.410602,0.364539,0.154645,0.044775,0.417404,0.395919,0.156042,0.017705,0.517752,0.332479,0.112523,0.030868,0.433831,0.343546,0.188168,0.025694,0.491026,0.35096,0.127088,0.028872,0.480981,0.337964,0.152212,0.0278,0.444626,0.398314,0.125599,0.017007,0.437491,0.398454,0.119883,0.036264,0.494509,0.351623,0.101851,0.025109,0.507026,0.299048,0.136161,0.054801,0.526216,0.317749,0.087899,0.02931,0.427213,0.404325,0.107043,0.047015,0.537657,0.312759,0.109585,0.039458,0.555422,0.293974,0.104002,0.046601,0.648597,0.197457,0.081653,0.072292,0.581664,0.176375,0.138694,0.096646,0.504638,0.296637,0.116323,0.067191,0.553258,0.222366,0.124142,0.08662,0.416659,0.37761,0.081118,0.067853,0.62016,0.220197,0.123502,0.030441,0.467924,0.290316,0.11132,0.077457,0.471708,0.298223,0.103106,0.078472,0.449951,0.27204,0.219318,0.058691,0.566053,0.197341,0.173385,0.063221,0.450746,0.325903,0.133871,0.067185,0.532355,0.262032,0.109143,0.08662,0.386377,0.365305,0.17336,0.038368,0.591552,0.22344,0.094051,0.090956,0.575227,0.274669,0.096637,0.053467,0.493489,0.356359,0.112364,0.02197,0.483605,0.363203,0.108143,0.022356,0.473843,0.345996,0.094269,0.037927,0.420637,0.392624,0.101139,0.068127,0.535543,0.282405,0.066004,0.051443,0.480034,0.346036,0.071337,0.059428,0.471418,0.346277,0.054382,0.05406,0.615831,0.157696,0.117791,0.108682,0.526783,0.287509,0.148658,0.037051,0.555132,0.228707,0.15321,0.052696,0.580575,0.206825,0.100339,0.065314,0.552701,0.230054,0.129,0.088245,0.470039,0.305414,0.158921,0.065626,0.643026,0.170704,0.095508,0.062514,0.402504,0.29558,0.165474,0.105769,0.637435,0.303278,0.034517,0.0152,0.561813,0.233971,0.204216,0,0.544447,0.26227,0.091384,0.051231,0.850331,0.113231,0.036437,0,0.858874,0.078113,0.063013,0,0.57046,0.193514,0.173734,0.062292,0.539536,0.325362,0.112223,0.022879,0.848755,0.07781,0.073435,0,0.75177,0.095339,0.094933,0.057957,0.783475,0.098142,0.060396,0.057986,0.603066,0.231106,0.085819,0.06294,0.422892,0.281914,0.176889,0.108427,0.651049,0.180668,0.086496,0.065553,0.726666,0.273334,0,0,0.821353,0.178114,0.000533,0,0.643122,0.347043,0.009835,0,0.795776,0.204224,0,0,0.79059,0.20941,0,0,0.853778,0.113545,0.032677,0,0.819568,0.089427,0.070585,0.020421,0.824635,0.135401,0.03032,0.009644,0.779664,0.159828,0.041464,0.019044,0.76765,0.118583,0.065231,0.048536,0.507152,0.201767,0.201036,0.082586,0.597459,0.23813,0.112637,0.051153,0.466276,0.398898,0.102676,0.03215,0.49565,0.244897,0.161073,0.09838,0.490481,0.28507,0.162868,0.061581,0.431296,0.273249,0.192422,0.083742,0.493589,0.213589,0.204709,0.088113,0.451566,0.256939,0.157802,0.133693,0.388303,0.26959,0.223566,0.08833,0.524873,0.202071,0.18378,0.089276,0.541103,0.252925,0.117239,0.059978,0.569244,0.323976,0.084667,0.022113,0.681403,0.145642,0.123669,0.032967,0.423391,0.279709,0.152456,0.14244,0.545261,0.337084,0.09014,0.027515,0.482136,0.264644,0.172039,0.081182,0.480649,0.287642,0.156732,0.074977,0.695749,0.222251,0.049745,0.026988,0.766355,0.184349,0.025094,0.024202,0.784267,0.145643,0.052485,0.017604,0.775569,0.15828,0.040976,0.025176,0.526428,0.246209,0.213687,0.01322,0.764739,0.134944,0.054939,0.040919,0.572746,0.325399,0.078363,0.014275,0.727702,0.111563,0.105163,0.055572,0.573255,0.268971,0.123726,0.034048,0.553066,0.326779,0.073324,0.040818,0.389475,0.261976,0.221379,0.089631,0.623106,0.223132,0.082974,0.070788,0.591276,0.281,0.061594,0.057103,0.679234,0.163208,0.099765,0.04327,0.594316,0.218655,0.187029,0,0.703369,0.222347,0.052996,0.014958,0.690507,0.217611,0.044293,0.036202,0.64761,0.282961,0.060664,0.008765,0.848243,0.077586,0.074171,0,0.829218,0.129004,0.031999,0.009779,0.791781,0.113295,0.049858,0.045066,0.50025,0.254708,0.165774,0.079268,0.547228,0.211143,0.152592,0.058302,0.453217,0.385891,0.107629,0.039369,0.460825,0.304329,0.125773,0.109073,0.545994,0.218945,0.131131,0.072321,0.433833,0.413555,0.107667,0.044945,0.690942,0.159553,0.114003,0.035503,0.687257,0.119718,0.104967,0.078146,0.749985,0.190515,0.052616,0.006885,0.699827,0.256668,0.043505,0,0.674283,0.137238,0.090386,0.063486,0.502192,0.246845,0.172483,0.07848,0.628426,0.172551,0.103634,0.080484,0.713316,0.162867,0.101676,0.02214,0.754382,0.170942,0.074676,0,0.673537,0.264615,0.061849,0,0.688503,0.200747,0.09207,0.01868,0.641424,0.149882,0.147084,0.06161,0.579122,0.208094,0.135171,0.077613,0.54443,0.214811,0.156637,0.084121,0.620503,0.181717,0.140242,0.057538,0.567446,0.262482,0.104012,0.06606,0.666817,0.331908,0.001275,0,0.452301,0.220606,0.179526,0.14154,0.521692,0.251962,0.108294,0.103919,0.601875,0.209418,0.074013,0.058452,0.695592,0.286661,0.017747,0,0.485395,0.4528,0.042797,0.019008,0.456005,0.448026,0.056991,0.038979,0.680735,0.280612,0.023364,0.01529,0.65704,0.157361,0.129004,0.045767,0.373454,0.276049,0.227919,0.122578,0.786215,0.12259,0.091195,0,0.761493,0.099551,0.080167,0.057169,0.5189,0.251521,0.119035,0.110545,0.521021,0.386738,0.075292,0.016949,0.382039,0.321431,0.166547,0.115771,0.476926,0.345894,0.091599,0.043272,0.552724,0.268788,0.17147,0.004435,0.473685,0.373116,0.089873,0.063325,0.769765,0.153257,0.075087,0.001891,0.669522,0.216758,0.074235,0.039485,0.789355,0.128393,0.082252,0,0.579836,0.249883,0.072595,0.068216,0.314067,0.260513,0.210406,0.102793,0.484506,0.182203,0.152536,0.124291,0.458605,0.307032,0.105012,0.067145,0.466429,0.42498,0.105192,0.003399,0.641987,0.140504,0.13793,0.077882,0.769787,0.080972,0.078066,0.069136,0.689559,0.236946,0.059172,0.014323,0.718237,0.199337,0.042689,0.039737,0.752223,0.165742,0.082035,0,0.768173,0.145991,0.051135,0.034701,0.772713,0.100232,0.070571,0.056484,0.638187,0.237027,0.060708,0.05514,0.655922,0.178368,0.092391,0.06629,0.514357,0.18972,0.153445,0.141651,0.539573,0.366417,0.068669,0.025341,0.509839,0.415818,0.051081,0.023261,0.640266,0.304332,0.024223,0.018614,0.556177,0.301225,0.110232,0.017804,0.483827,0.250761,0.202893,0.038421,0.34299,0.289858,0.279502,0.087649,0.343616,0.265215,0.249144,0.104747,0.393761,0.36853,0.136558,0.054827,0.378207,0.31403,0.212207,0.075057,0.42745,0.218218,0.180963,0.173368,0.370051,0.339483,0.173797,0.062777,0.393409,0.266462,0.23239,0.081167,0.398292,0.277434,0.226358,0.080418,0.38465,0.337478,0.185077,0.092796,0.423746,0.299895,0.151526,0.124833,0.363094,0.359026,0.153149,0.077269,0.463574,0.309903,0.121779,0.088659,0.512836,0.304751,0.103805,0.078609,0.409428,0.253141,0.212302,0.070661,0.412863,0.299102,0.179692,0.056127,0.417883,0.364846,0.146131,0.056411,0.503426,0.430726,0.065848,0,0.387837,0.348459,0.13571,0.093762,0.561228,0.343016,0.083095,0.012661,0.549064,0.340841,0.060712,0.048005,0.61071,0.354299,0.034991,0,0.611597,0.279043,0.053028,0.038863,0.625248,0.298384,0.076368,0,0.496302,0.47709,0.026608,0,0.610789,0.327991,0.06122,0,0.50679,0.294907,0.077276,0.066529,0.679355,0.159405,0.098304,0.062936,0.49331,0.196086,0.147938,0.126165,0.58297,0.211898,0.106262,0.085541,0.580537,0.205817,0.158217,0.055429,0.857923,0.058524,0.054455,0.029098,0.59323,0.332453,0.04936,0.024957,0.5339,0.438447,0.022559,0.005093,0.838577,0.161423,0,0,0.856926,0.143074,0,0,0.579163,0.321569,0.085864,0.013404,0.798999,0.201001,0,0,0.823311,0.176689,0,0,0.977115,0.022885,0,0,0.994522,0.005478,0,0,0.774157,0.225843,0,0,0.660946,0.315454,0.0236,0,0.98754,0.01246,0,0,0.825711,0.174289,0,0,0.880322,0.119678,0,0,0.755251,0.244749,0,0,0.781106,0.218894,0,0,0.972706,0.027294,0,0,0.65778,0.34222,0,0,0.942004,0.057996,0,0,0.984196,0.015804,0,0,0.952703,0.047297,0,0,0.946317,0.053683,0,0,0.983858,0.016142,0,0,0.834949,0.165051,0,0,0.965645,0.034355,0,0,0.852106,0.147894,0,0,0.842764,0.157236,0,0,1,0,0,0,0.789766,0.115962,0.07682,0.013652,0.76575,0.104945,0.067883,0.058512,0.521215,0.255714,0.11766,0.10046,0.529343,0.239462,0.121657,0.100161,0.807598,0.192402,0,0,0.811261,0.188739,0,0,0.737005,0.254646,0.008348,0,0.693792,0.295188,0.01102,0,0.558014,0.268442,0.096197,0.071461,0.563571,0.275747,0.103467,0.057216,0.643403,0.166676,0.130647,0.030258,0.65646,0.173503,0.14436,0.021648,0.692347,0.167181,0.079914,0.051204,0.709484,0.171958,0.098681,0.019549,0.644058,0.29236,0.058399,0.005183,0.630725,0.289699,0.069147,0.010429,0.312321,0.299186,0.231716,0.099359,0.441615,0.230151,0.175659,0.081799,0.658009,0.161824,0.131195,0.040915,0.533554,0.250934,0.147634,0.034834,0.464777,0.355013,0.130179,0.039358,0.600037,0.215846,0.131808,0.04115,0.707278,0.134403,0.107013,0.042778,0.709491,0.289988,0.000521,0,0.704243,0.295757,0,0,0.791193,0.188495,0.01541,0.004902,0.782627,0.198057,0.019315,0,0.775569,0.16047,0.033641,0.030321,0.764266,0.164077,0.043698,0.027959,0.753842,0.146984,0.073269,0.025905,0.74161,0.150414,0.083844,0.024132,0.632298,0.273907,0.058697,0.035098,0.623303,0.265888,0.058782,0.052027,0.477045,0.285649,0.14296,0.094346,0.397781,0.291167,0.217211,0.093842,0.480065,0.260774,0.155433,0.103727,0.390746,0.262343,0.242019,0.104892,0.526083,0.361805,0.100188,0.010707,0.506619,0.352974,0.097934,0.021271,0.973743,0.026257,0,0,0.974863,0.025137,0,0,0.975613,0.024387,0,0,0.950254,0.049746,0,0,0.963625,0.036375,0,0,0.95942,0.04058,0,0,0.962009,0.037991,0,0,0.962478,0.037522,0,0,0.958827,0.041173,0,0,0.953303,0.046697,0,0,0.961479,0.038521,0,0],\"skinIndices\":[11,12,6,24,12,24,11,17,12,11,24,6,12,11,24,17,11,12,6,24,12,24,11,17,12,24,11,6,12,11,24,6,11,12,6,24,6,11,1,7,12,11,24,6,12,11,24,6,11,6,12,1,6,11,12,1,11,12,6,24,11,12,6,24,11,12,6,24,11,12,6,24,12,11,17,24,11,12,1,17,11,12,6,24,24,12,11,25,24,12,11,25,24,12,25,11,24,12,25,11,24,12,25,13,24,12,13,17,24,12,11,25,24,12,11,25,24,12,11,17,12,11,24,17,12,11,24,17,12,24,11,17,24,12,25,11,24,12,11,17,24,12,11,13,24,12,25,11,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,24,12,11,25,12,24,11,25,12,24,11,17,24,12,11,25,12,24,11,6,24,12,11,25,12,24,11,17,12,24,11,17,12,24,11,17,24,12,11,17,12,24,11,17,24,12,11,17,12,24,11,17,24,12,11,25,24,12,11,25,24,12,25,11,12,24,11,17,12,24,11,17,12,24,11,17,12,24,17,11,24,25,12,11,12,24,17,11,24,12,17,13,12,11,24,6,12,11,24,17,24,12,11,25,24,12,11,25,12,24,11,25,24,12,25,11,24,12,11,25,24,12,11,17,12,24,11,17,12,11,24,17,11,12,24,6,11,12,6,1,12,11,17,24,6,11,1,12,12,11,24,17,11,12,6,1,11,6,12,1,11,6,1,12,24,12,13,17,12,24,17,13,6,11,1,12,6,1,7,2,6,1,7,11,6,7,11,0,6,7,11,0,11,6,12,24,12,11,24,6,6,11,7,0,6,7,11,1,6,11,7,1,6,1,11,7,6,7,1,2,6,1,7,11,6,7,0,0,6,7,11,0,6,7,0,0,6,7,11,0,6,7,0,0,6,7,11,0,6,11,7,0,6,7,11,0,6,7,11,1,6,7,11,1,6,7,1,2,6,7,1,2,11,6,12,24,11,12,6,24,12,11,24,6,12,11,24,6,11,12,6,24,11,12,6,24,12,11,24,6,11,12,6,24,11,6,12,24,6,11,12,24,6,7,1,11,11,12,6,24,11,6,12,24,11,6,12,24,11,6,12,24,6,11,12,7,6,11,7,12,6,11,7,12,6,11,7,12,6,11,1,12,6,11,7,1,6,11,12,24,6,11,1,7,6,1,11,7,6,11,12,0,12,11,24,6,11,6,12,1,11,12,6,24,11,12,6,1,6,11,1,12,6,11,12,7,6,11,12,7,6,7,1,2,6,11,7,0,6,7,11,0,6,7,11,1,11,6,12,24,11,6,12,24,11,6,12,24,11,12,24,6,11,12,6,24,11,6,12,24,24,25,12,11,24,12,14,25,24,25,12,13,24,25,13,0,24,14,25,12,14,24,15,25,24,14,25,15,24,25,12,11,24,25,12,13,24,25,12,0,24,25,12,11,24,12,25,11,24,12,25,11,24,12,25,11,24,25,12,11,24,25,14,15,24,25,12,13,24,25,14,15,24,12,11,25,24,12,14,25,24,25,13,0,25,24,14,15,25,24,14,15,24,25,12,14,24,12,25,11,14,12,17,24,15,14,16,0,14,17,15,24,24,12,25,13,24,13,17,12,13,24,15,25,12,11,24,6,12,24,11,14,12,24,11,17,13,24,17,12,24,13,25,12,24,13,25,15,24,25,13,0,24,13,25,15,24,14,15,13,24,25,14,15,13,24,15,14,14,15,24,17,24,13,12,17,24,13,12,25,13,24,17,15,13,24,17,15,13,24,15,17,24,25,13,12,24,13,25,12,24,13,17,12,24,13,12,17,24,12,17,13,13,24,17,12,13,24,15,25,24,13,17,25,13,24,15,14,12,24,11,6,14,15,24,25,14,15,24,25,15,14,24,16,14,15,24,25,24,14,25,15,12,24,11,25,12,11,24,6,12,11,24,6,12,11,24,6,11,12,24,6,12,24,11,25,24,12,11,25,24,12,11,25,12,24,11,6,12,24,11,25,12,24,11,25,15,14,24,0,12,24,11,25,24,25,12,11,24,25,14,15,24,25,12,0,24,25,14,13,24,25,12,0,24,25,14,0,24,25,12,0,17,24,12,13,11,12,6,1,6,1,7,2,6,1,11,7,14,15,17,24,12,17,24,14,12,11,17,24,14,17,24,12,25,24,0,0,25,24,0,0,24,25,12,11,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,24,25,14,12,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,0,0,0,11,6,1,12,11,12,1,17,12,17,11,24,12,11,17,1,12,11,17,24,11,12,1,17,12,17,11,24,12,17,11,1,12,11,17,1,11,12,1,17,1,11,6,2,12,11,17,1,12,11,17,1,11,1,12,6,1,11,6,12,11,12,17,1,11,12,1,17,11,12,17,1,11,12,17,1,12,11,17,24,17,12,11,18,17,12,11,18,17,12,18,11,17,12,18,11,17,12,18,13,17,12,13,24,17,12,11,18,17,12,11,18,17,12,11,18,12,11,17,24,12,11,17,24,12,17,11,24,17,12,18,11,17,12,11,24,17,12,11,13,17,12,18,11,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,17,12,11,18,12,17,11,1,17,12,11,18,12,17,11,24,17,12,11,24,12,17,11,24,17,12,11,24,12,17,11,24,17,12,11,24,12,17,11,24,17,12,11,18,17,12,11,18,17,12,18,11,12,17,11,24,12,17,11,24,12,17,11,24,17,12,24,11,17,18,12,11,12,17,24,11,17,12,24,13,12,11,17,1,12,17,11,24,17,12,11,18,17,12,11,18,12,17,11,18,17,12,18,11,17,12,11,18,17,12,11,18,17,12,11,24,12,11,17,24,11,12,17,1,11,12,6,1,12,11,17,24,11,12,17,6,11,6,12,1,1,11,6,12,12,11,17,24,11,12,1,6,11,1,6,12,11,1,6,12,17,12,13,24,17,12,24,13,11,12,6,1,6,1,11,0,1,6,2,7,1,2,11,0,1,2,11,0,11,1,12,17,12,11,17,1,1,2,11,0,1,2,6,11,1,11,6,2,1,6,11,2,1,6,2,7,1,6,2,11,1,2,0,0,1,2,11,0,1,2,6,0,1,2,0,0,1,2,0,0,1,2,11,0,1,11,2,6,1,2,11,6,1,2,6,11,1,2,6,11,1,2,6,7,1,2,6,7,11,1,12,17,11,12,1,17,12,11,17,1,12,11,17,1,11,1,12,17,11,12,1,17,12,11,17,1,11,12,1,17,11,1,12,6,1,11,12,17,1,6,2,11,11,12,1,17,1,11,12,17,11,1,12,17,11,1,12,17,1,11,6,12,1,11,12,2,1,11,2,12,1,11,2,12,1,6,11,12,1,11,6,2,1,11,12,17,1,6,11,2,1,6,11,2,1,11,12,6,12,11,17,1,11,1,6,12,11,12,1,17,11,12,1,6,1,11,6,0,1,11,12,2,1,11,12,6,1,2,6,7,1,11,2,0,1,2,11,6,1,2,6,11,11,1,12,17,11,1,12,17,11,1,12,17,11,12,17,1,11,12,1,17,11,1,12,17,17,18,12,11,17,12,14,18,17,18,12,13,17,18,13,0,17,14,18,12,17,14,15,18,17,14,18,15,17,18,12,11,17,18,12,0,17,18,12,0,17,18,12,11,17,12,18,11,17,12,18,11,17,12,18,11,17,18,12,11,17,18,14,15,17,18,12,0,17,18,14,15,17,12,11,18,17,12,14,18,17,18,13,0,18,17,14,15,18,17,14,15,17,18,12,14,17,12,18,11,13,17,24,12,13,17,24,0,17,12,18,13,17,13,24,12,13,17,15,18,12,11,17,1,17,12,11,14,12,17,11,14,17,13,24,12,17,13,18,12,17,13,18,15,17,18,13,0,17,13,18,15,17,14,15,18,17,18,14,15,17,13,15,14,14,15,17,24,17,13,12,24,17,12,13,18,13,17,24,15,13,17,15,24,13,17,15,0,17,18,13,12,17,13,18,12,17,13,12,24,17,13,12,24,17,12,13,24,13,17,24,12,17,13,15,18,17,13,18,24,13,17,15,14,12,17,11,1,14,15,17,18,14,15,17,18,15,14,17,16,14,15,17,18,17,14,18,15,12,17,11,18,12,11,17,1,12,11,17,1,12,11,17,1,11,12,17,1,12,17,11,18,17,12,11,18,17,12,11,18,12,17,11,1,12,17,11,18,12,17,11,18,15,14,17,0,17,12,11,18,17,18,12,11,17,18,14,15,17,18,12,0,17,18,14,15,17,18,12,0,17,18,14,0,17,18,12,0,6,1,7,2,11,6,1,12,12,14,17,24,14,15,17,24,13,17,24,12,13,17,15,24,12,11,17,24,15,14,17,24,18,17,0,0,18,17,0,0,17,18,12,11,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,17,18,14,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,0,0,0,6,11,7,1,1,11,2,6,24,12,25,11,17,12,18,11,18,17,0,0,25,24,0,0,18,17,12,0,25,24,12,0,11,12,1,17,11,12,6,24,11,12,1,17,11,12,6,24,11,12,1,6,11,12,6,1,17,18,12,14,24,25,12,14,17,12,24,13,12,17,24,11,6,1,11,7,6,1,11,7,1,6,11,2,1,6,11,2,6,11,1,7,6,7,11,0,1,2,0,0,1,2,11,6,6,7,11,0,6,7,1,11,6,7,1,11,1,2,6,11,1,2,6,11,15,14,16,24,15,14,16,17,17,18,14,15,24,25,14,15,17,18,14,15,24,25,14,15,11,6,12,24,11,1,12,6,25,24,0,0,25,24,0,0,18,17,0,0,25,24,0,0,25,24,0,0,25,24,0,0,25,24,0,0,18,17,0,0,18,17,0,0,18,17,0,0,18,17,0,0],\"bones\":[{\"parent\":-1,\"name\":\"Hips\",\"pos\":[-0.000027,18.2131,0.000197],\"rotq\":[0,0,0,1]},{\"parent\":0,\"name\":\"LHipJoint\",\"pos\":[0.000027,0.055037,0.000009],\"rotq\":[0,0,0,1]},{\"parent\":1,\"name\":\"LeftUpLeg\",\"pos\":[1.54938,-2.41555,0.04113],\"rotq\":[0,0,0,1]},{\"parent\":2,\"name\":\"LeftLeg\",\"pos\":[-0.019987,-7.21534,-0.208632],\"rotq\":[0,0,0,1]},{\"parent\":3,\"name\":\"LeftFoot\",\"pos\":[0.320013,-7.29466,-0.471352],\"rotq\":[0,0,0,1]},{\"parent\":4,\"name\":\"LeftToeBase\",\"pos\":[0.198471,-0.54529,2.28466],\"rotq\":[0,0,0,1]},{\"parent\":0,\"name\":\"RHipJoint\",\"pos\":[0.000027,0.055037,0.000009],\"rotq\":[0,0,0,1]},{\"parent\":6,\"name\":\"RightUpLeg\",\"pos\":[-1.43938,-2.41556,0.041129],\"rotq\":[0,0,0,1]},{\"parent\":7,\"name\":\"RightLeg\",\"pos\":[-0.089991,-7.21534,-0.208641],\"rotq\":[0,0,0,1]},{\"parent\":8,\"name\":\"RightFoot\",\"pos\":[-0.319991,-7.29467,-0.471361],\"rotq\":[0,0,0,1]},{\"parent\":9,\"name\":\"RightToeBase\",\"pos\":[-0.305358,-0.83898,2.28801],\"rotq\":[0,0,0,1]},{\"parent\":0,\"name\":\"LowerBack\",\"pos\":[0.000027,0.055037,0.000009],\"rotq\":[0,0,0,1]},{\"parent\":11,\"name\":\"Spine\",\"pos\":[-0.04381,1.99522,-0.197985],\"rotq\":[0,0,0,1]},{\"parent\":12,\"name\":\"Spine1\",\"pos\":[-0.01959,2.01295,-0.04372],\"rotq\":[0,0,0,1]},{\"parent\":13,\"name\":\"Neck\",\"pos\":[0,0,0],\"rotq\":[0,0,0,1]},{\"parent\":14,\"name\":\"Neck1\",\"pos\":[0.063054,2.1058,-0.51192],\"rotq\":[0,0,0,1]},{\"parent\":15,\"name\":\"Head\",\"pos\":[-0.023034,1.43701,0.497281],\"rotq\":[0,0,0,1]},{\"parent\":14,\"name\":\"LeftShoulder\",\"pos\":[0,0,0],\"rotq\":[0,0,0,1]},{\"parent\":17,\"name\":\"LeftArm\",\"pos\":[2.59288,1.2264,-0.487197],\"rotq\":[0,0,0,1]},{\"parent\":18,\"name\":\"LeftForeArm\",\"pos\":[4.14553,-0.064466,0.257386],\"rotq\":[0,0,0,1]},{\"parent\":19,\"name\":\"LeftHand\",\"pos\":[3.69802,0.065802,1.73268],\"rotq\":[0,0,0,1]},{\"parent\":20,\"name\":\"LeftFingerBase\",\"pos\":[-0.000254,0,-0.000043],\"rotq\":[0,0,0,1]},{\"parent\":21,\"name\":\"LeftHandIndex1\",\"pos\":[0.559672,0,0.260979],\"rotq\":[0,0,0,1]},{\"parent\":20,\"name\":\"LThumb\",\"pos\":[-0.000254,0,-0.000043],\"rotq\":[0,0,0,1]},{\"parent\":14,\"name\":\"RightShoulder\",\"pos\":[0,0,0],\"rotq\":[0,0,0,1]},{\"parent\":24,\"name\":\"RightArm\",\"pos\":[-2.46562,1.22638,-0.487065],\"rotq\":[0,0,0,1]},{\"parent\":25,\"name\":\"RightForeArm\",\"pos\":[-4.14558,-0.064367,0.259234],\"rotq\":[0,0,0,1]},{\"parent\":26,\"name\":\"RightHand\",\"pos\":[-3.69873,0.066645,1.72989],\"rotq\":[0,0,0,1]},{\"parent\":27,\"name\":\"RightFingerBase\",\"pos\":[-0.000059,0,0.000157],\"rotq\":[0,0,0,1]},{\"parent\":28,\"name\":\"RightHandIndex1\",\"pos\":[-0.529147,0,0.246746],\"rotq\":[0,0,0,1]},{\"parent\":27,\"name\":\"RThumb\",\"pos\":[-0.000059,0,0.000157],\"rotq\":[0,0,0,1]}],\"vertices\":[-0.352383,19.9902,1.86347,-1.08728,21.16,1.74446,-0.985192,20.5279,1.79271,-0.23644,21.1722,1.80829,-0.711173,19.9634,1.81716,-1.03435,21.0552,1.74636,-1.58416,20.9782,1.50235,-1.41115,20.4255,1.6156,-0.904201,19.6909,1.7118,-1.15921,17.8859,1.66437,-1.04156,20.7721,1.75101,-1.71793,20.4316,1.39167,-1.0857,18.8792,1.7102,-1.28189,18.3848,1.53243,-0.343101,20.1624,1.87189,-0.986404,20.0064,1.74733,-1.18485,20.1005,1.72016,-0.765791,20.0811,1.81548,0,21.134,1.82395,1.47954,19.406,-1.25281,-1.48617,19.4049,-1.25006,-1.66725,21.772,1.68642,-1.88926,21.8365,1.50839,-2.37758,22.0096,1.12503,-2.28945,22.4218,1.15822,-1.78158,22.5683,1.31944,-1.2171,22.4673,1.52635,-1.83237,21.9432,1.52611,-1.69983,22.0072,1.58031,-1.52816,22.003,1.65016,-0.249753,20.9329,1.83786,-0.537079,20.7067,1.86581,-0.755399,21.2896,1.78964,-2.06707,22.1281,1.35068,-1.1877,22.019,1.73145,-1.41919,22.2343,1.60063,-1.76876,22.2739,1.46866,-2.10389,21.4377,1.16278,-2.04597,21.5702,1.33786,-2.28587,21.656,1.05912,-2.14143,21.7052,1.28045,-1.90456,21.3267,1.35335,-1.90095,21.4972,1.46048,-2.18686,21.3359,0.888498,-1.97889,21.1848,1.13997,-1.61869,21.2751,1.58521,-1.67643,21.6079,1.6463,-1.55135,21.0961,1.55403,-1.70195,21.4776,1.6085,-1.21358,21.3328,1.76307,-1.47308,21.5189,1.72622,-1.22476,21.5846,1.79455,-1.42465,21.7433,1.73795,-0.93365,21.4381,1.82445,-1.40901,21.8907,1.71675,-1.1383,21.7011,1.80267,-1.78068,21.6168,1.58659,-1.84688,21.6566,1.54512,-2.20638,21.918,1.26638,-0.230395,21.4078,1.83241,-0.77092,21.597,1.84309,-0.427338,21.5133,1.8287,-0.776871,22.1108,1.7279,-2.65319,21.7848,-1.6772,-0.37148,21.9556,1.75649,-0.624802,22.351,1.62162,-1.48633,20.6912,1.55377,-0.593415,21.2058,1.76357,-2.22025,21.2432,0.763132,-2.33886,21.4004,0.598361,-1.98196,21.0671,1.10124,-2.37462,21.576,0.745267,-1.88956,21.7246,1.51626,-1.54248,21.6283,1.70533,-1.44588,21.6785,1.73612,-0.379746,20.5108,1.90022,-0.837602,20.2435,1.81301,0,19.6472,1.84936,0,20.8077,1.85387,-0.878677,18.1997,1.75818,-0.574303,20.9345,1.80897,-0.58024,19.6517,1.83327,-0.634226,18.8492,1.79524,-0.656357,18.5589,1.81954,-1.02178,22.67,1.43771,-0.231846,22.4338,1.53299,0,18.1357,1.90014,0,16.5576,-1.57547,-0.569486,16.6632,1.88587,-2.36036,17.0656,-0.038586,-2.23699,17.2955,0.578294,-1.53386,19.1011,-1.11498,-0.723326,20.0617,-1.73759,-2.2678,17.3483,-0.075254,-1.13732,17.1573,-1.3273,-1.34419,17.4817,-1.10979,-0.506042,17.2811,-1.33257,-0.323979,16.5631,-1.60249,-0.692716,17.1449,-1.36893,-2.33597,16.4069,-0.670744,-2.19081,16.7407,-0.826818,-1.92315,16.4606,-1.37779,-2.46968,16.6519,-0.001951,-2.35145,16.5925,0.611828,-2.27416,17.0281,0.599361,-2.0094,17.4144,1.15129,-2.04176,16.8607,1.1649,-1.79796,16.68,1.3847,-1.58753,16.8597,1.48869,-0.565193,16.5555,-1.64253,-1.01291,16.5508,-1.69137,-1.91559,18.6642,-0.54697,-1.86994,19.3528,-1.04742,-1.48829,20.0062,-1.61863,-2.06606,20.0077,-1.19921,-2.09368,19.2475,-0.63193,-2.26941,19.7928,0.48292,-2.37306,20.3556,0.331668,-1.83726,19.5792,1.23106,-1.27492,19.0641,1.58811,-2.18241,18.5088,0.37094,-1.04186,16.6081,1.74748,-2.34488,19.7657,-0.064849,-2.16086,18.5999,0.011753,-2.22559,19.2094,-0.086213,-2.21253,19.1692,0.178949,-1.41359,18.0102,-0.987978,-1.9389,17.9262,-0.638604,-2.23058,17.7682,0.709183,-2.21888,17.8515,-0.086682,-0.627759,17.9445,1.88461,-1.8014,17.7389,1.39446,-1.97782,18.5332,0.916794,-1.26024,17.4368,1.6911,-0.609658,17.4611,1.93138,-1.70612,18.5419,1.23632,-2.44383,20.2726,-0.097454,-0.651885,18.5902,-1.28799,-0.586133,19.5771,-1.58001,-0.568072,19.1817,-1.45572,-0.587341,17.915,-1.21005,-2.09643,18.1762,0.889992,-1.85372,18.1565,1.21232,-1.48729,16.4825,-1.60757,-1.93482,17.3773,-0.781626,-1.85505,17.0124,-1.07413,-1.54481,17.0855,-1.23769,-2.11644,19.3054,0.755349,-1.48436,19.314,1.47485,-1.85349,18.8822,1.0948,-1.61851,20.0554,1.48083,-1.15847,19.6889,1.67585,-2.04758,18.8305,0.74401,-2.6899,22.1595,0.772025,-1.31355,22.4067,-2.31367,-2.33756,23.0304,0.856326,-2.03017,24.1974,-0.073482,-1.26496,23.0097,-2.31553,-1.02221,24.086,-2.07913,-1.20361,23.5746,-2.20234,-2.61715,22.367,0.918102,-2.4094,22.7883,0.972344,-2.79503,22.6914,0.721068,-2.80198,22.2903,0.633196,-2.65955,21.7882,0.337667,-2.54087,21.2829,-1.5142,-2.79122,21.2975,-0.868954,-2.79181,21.7363,-0.169202,-1.73256,23.9999,-1.97497,-2.5061,23.3116,0.588805,-1.61174,24.7435,-1.14132,-2.5018,21.3296,0.224469,-1.25113,21.8302,-2.25824,-2.17273,23.8782,0.209901,-2.18824,24.3679,-1.6547,-2.10366,24.6203,-1.05367,-2.37979,22.9146,-2.17022,-2.1388,21.6959,-2.0637,0,22.5004,-2.20361,0,24.9383,-1.55536,0,23.4466,-2.11801,-1.73538,22.8204,1.18281,-0.444821,23.0815,1.17827,-0.787599,24.1078,0.316988,-2.29229,19.8559,-0.705967,-1.17077,21.2167,-2.11736,-1.0449,20.6475,-1.96155,-0.452889,23.3709,0.95757,-1.38077,23.645,0.662282,-1.257,24.015,0.349407,-1.7556,23.6076,0.572764,-1.18279,24.1543,0.154863,-1.24559,24.6559,-0.685511,-1.58544,24.6143,-0.727818,-1.05307,24.2784,-0.024885,-0.264047,24.3317,-1.87744,-0.831513,22.8842,1.31711,-1.54765,23.0171,1.09728,-0.312068,23.786,0.624442,-0.324281,23.9153,0.510081,-0.413123,24.1453,0.362587,-2.00035,23.2313,0.820608,-1.47634,23.245,0.95025,-0.827746,23.3549,0.967772,-0.845057,23.1226,1.14169,-0.415826,22.7593,1.38627,-0.446526,23.6103,0.791316,-0.849281,24.0031,0.488115,-0.909277,23.6839,0.740416,-0.772895,24.2337,0.14706,-1.66043,20.3605,-1.68857,-1.03527,24.5817,-1.78207,-1.21091,24.8817,-1.24282,-0.841676,24.9587,-1.50445,-1.0026,24.811,-1.60618,-1.41342,24.5651,-1.73624,-2.37925,20.8622,0.349164,-2.27034,20.4561,0.618028,-2.15838,20.4661,0.823789,-2.00929,20.3045,1.05114,-2.10461,20.0293,0.8885,-2.54681,20.8664,-0.107731,-2.35556,20.8639,-1.44567,-1.96406,21.0386,-1.85163,-2.43137,20.3139,-0.814222,-2.18364,20.4459,-1.34726,-1.82973,20.6949,-1.76887,-0.265581,24.603,-1.73423,-2.61572,20.8149,-0.851922,-3.04796,22.0274,-0.870507,-2.02365,24.555,-0.707142,-2.91764,22.8238,0.564237,-1.9886,24.4534,-0.46991,-2.78985,22.1246,-1.77216,-2.22781,24.0187,-1.93151,-3.00233,22.3075,-0.108042,0,22.6998,1.35208,0.000009,19.2901,-1.47277,0,16.8612,-1.45411,0,17.4656,1.97341,0,24.2066,-1.88268,0,21.2574,-2.03821,0,20.6335,-1.89195,0,23.0102,-2.17286,-3.39037,22.6476,-1.2972,-3.36606,23.2378,0.179123,-3.03749,21.9771,-1.14526,-2.61339,24.5161,-0.367561,-2.66517,24.6299,-0.878156,-3.70244,24.6151,-0.722741,-3.09432,23.005,-1.87132,-2.32443,23.295,-2.15415,-4.05731,23.6135,-1.83283,-2.74126,24.4929,-1.39966,-3.31514,23.0047,-0.181382,-3.02117,23.4962,0.422653,-2.64703,24.2452,0.002554,-3.73789,24.5735,-1.07568,-2.57519,23.8951,0.227413,-3.57463,23.8387,0.279313,-3.75905,23.639,0.200257,-3.51468,24.546,-0.323678,-3.49145,24.3742,-0.043026,-4.05015,23.1267,-1.71016,-3.31729,22.8113,-1.57105,-4.00929,23.9937,-1.76011,-3.08641,23.9625,-1.89556,-3.31191,22.6779,-0.792775,-3.75367,22.7931,-0.622827,0,18.8326,1.86132,0.352383,19.9902,1.86347,1.08725,21.16,1.74447,0.985192,20.5279,1.79271,0.236439,21.1722,1.80829,0.711173,19.9634,1.81716,1.03429,21.0552,1.74636,1.58714,20.9784,1.50667,1.41115,20.4255,1.6156,0.904201,19.6909,1.7118,1.15921,17.8859,1.66437,1.04156,20.7721,1.75101,1.71793,20.4316,1.39167,1.0857,18.8792,1.7102,1.28189,18.3848,1.53243,0.343101,20.1624,1.87189,0.986404,20.0064,1.74733,1.18485,20.1005,1.72016,0.765791,20.0811,1.81548,-0.000001,21.379,1.81589,1.66725,21.772,1.68642,1.88926,21.8365,1.50839,2.37758,22.0096,1.12503,2.28945,22.4218,1.15822,1.78158,22.5683,1.31944,1.2171,22.4673,1.52635,1.83237,21.9432,1.52611,1.69983,22.0072,1.58031,1.52816,22.003,1.65016,0.249753,20.9329,1.83786,0.537078,20.7067,1.86581,0.755399,21.2896,1.78964,2.06707,22.1281,1.35068,1.1877,22.019,1.73145,1.41919,22.2343,1.60063,1.76876,22.2739,1.46866,2.10389,21.4377,1.16278,2.04597,21.5702,1.33786,2.28587,21.656,1.05912,2.14143,21.7052,1.28045,1.90456,21.3267,1.35335,1.90095,21.4972,1.46048,2.18686,21.3359,0.888498,1.97891,21.1848,1.13996,1.6187,21.2752,1.58522,1.67643,21.6079,1.6463,1.55191,21.0967,1.55531,1.70195,21.4776,1.6085,1.21358,21.3328,1.76307,1.47308,21.5189,1.72622,1.22476,21.5846,1.79455,1.42465,21.7433,1.73795,0.93365,21.4381,1.82445,1.40901,21.8907,1.71675,1.1383,21.7011,1.80267,1.78068,21.6168,1.58659,1.84688,21.6566,1.54512,2.20638,21.918,1.26638,0.230396,21.4078,1.83241,0.77092,21.597,1.84309,0.427337,21.5133,1.8287,0.77687,22.1108,1.7279,2.64142,21.7811,-1.68921,0.37148,21.9556,1.75649,0.624801,22.351,1.62162,1.48633,20.6911,1.55378,0.593415,21.2058,1.76357,2.22025,21.2432,0.763132,2.33886,21.4004,0.59836,1.98197,21.0671,1.10122,2.37462,21.576,0.745268,1.88956,21.7246,1.51626,1.54248,21.6283,1.70533,1.44588,21.6785,1.73612,0.379746,20.5108,1.90022,0.837601,20.2435,1.81301,0,19.9872,1.85081,0,20.5099,1.88488,0,20.1907,1.86446,0,19.1102,1.83066,0.878677,18.1997,1.75818,0.574302,20.9345,1.80897,0.580239,19.6517,1.83327,0.634226,18.8492,1.79524,0.656357,18.5589,1.81954,1.02177,22.67,1.43771,0.231845,22.4338,1.53299,0,19.6229,-1.5827,0,17.8663,-1.21338,0.569486,16.6632,1.88587,2.36036,17.0655,-0.038586,2.23699,17.2955,0.578294,1.53384,19.1011,-1.115,0.723326,20.0617,-1.73759,2.2678,17.3483,-0.075254,1.13732,17.1573,-1.3273,1.34419,17.4817,-1.10979,0.506042,17.2811,-1.33257,0.323979,16.5631,-1.60249,0.692716,17.1449,-1.36893,2.33598,16.4069,-0.670732,2.19081,16.7407,-0.826817,1.92315,16.4606,-1.37779,2.46968,16.6519,-0.001951,2.35145,16.5925,0.611814,2.27416,17.0281,0.599361,2.00944,17.4144,1.15122,2.04176,16.8607,1.1649,1.79795,16.68,1.3847,1.58753,16.8596,1.48871,0.565193,16.5555,-1.64253,1.01291,16.5508,-1.69137,1.91559,18.6642,-0.54697,1.86994,19.3528,-1.04743,1.4883,20.0062,-1.61862,2.06606,20.0077,-1.19921,2.09368,19.2475,-0.63193,2.26941,19.7928,0.48292,2.37306,20.3556,0.331668,1.83726,19.5792,1.23106,1.27492,19.0641,1.58811,2.18241,18.5088,0.37094,1.04186,16.6081,1.74748,2.34488,19.7657,-0.064849,2.16086,18.5999,0.011753,2.22559,19.2094,-0.086213,2.21253,19.1692,0.178949,1.41359,18.0102,-0.987978,1.9389,17.9262,-0.638604,2.23058,17.7682,0.709184,2.21888,17.8515,-0.086682,0.627759,17.9445,1.88461,1.80141,17.739,1.39443,1.97782,18.5332,0.916794,1.26019,17.4368,1.69111,0.609658,17.4611,1.93138,1.70612,18.5419,1.23632,2.44383,20.2726,-0.097454,0.651885,18.5902,-1.28799,0.586019,19.5772,-1.58002,0.568019,19.1817,-1.45572,0.58734,17.915,-1.21005,2.09643,18.1762,0.889992,1.85372,18.1565,1.21232,1.48729,16.4825,-1.60757,1.93482,17.3773,-0.781626,1.85505,17.0124,-1.07413,1.54481,17.0855,-1.23769,2.11644,19.3054,0.755349,1.48436,19.314,1.47485,1.85349,18.8822,1.0948,1.61851,20.0554,1.48083,1.15847,19.6889,1.67585,2.04758,18.8305,0.74401,2.6899,22.1595,0.772025,1.31355,22.4067,-2.31367,2.33756,23.0304,0.856326,2.03016,24.1974,-0.073482,1.26496,23.0097,-2.31553,1.0222,24.086,-2.07913,1.20361,23.5746,-2.20234,2.61715,22.367,0.918103,2.4094,22.7883,0.972344,2.79503,22.6914,0.721068,2.80172,22.2902,0.633653,2.65829,21.7846,0.336246,2.54087,21.2829,-1.5142,2.79135,21.2976,-0.868717,2.73774,21.7481,-0.186541,1.73256,23.9999,-1.97497,2.5061,23.3116,0.588805,1.61174,24.7435,-1.14132,2.50272,21.3302,0.222627,1.25113,21.8302,-2.25824,2.17273,23.8782,0.209901,2.18824,24.3679,-1.6547,2.10366,24.6203,-1.05367,2.37979,22.9146,-2.17022,2.13879,21.6959,-2.0637,0,23.0484,1.15762,0,23.725,0.547661,1.73538,22.8204,1.18281,0.44482,23.0815,1.17827,0.787599,24.1078,0.316988,2.29229,19.8559,-0.705967,1.17077,21.2167,-2.11736,1.0449,20.6475,-1.96155,0.452888,23.3709,0.95757,1.38077,23.645,0.662282,1.257,24.015,0.349407,1.7556,23.6076,0.572764,1.18279,24.1543,0.154863,1.24559,24.6559,-0.685511,1.58544,24.6143,-0.727818,1.05307,24.2784,-0.024885,0.264047,24.3317,-1.87744,0.831512,22.8842,1.31711,1.54765,23.0171,1.09728,0.312068,23.786,0.624442,0.324281,23.9153,0.510081,0.413123,24.1453,0.362587,2.00035,23.2313,0.820608,1.47634,23.245,0.95025,0.827745,23.3549,0.967772,0.845056,23.1226,1.14169,0.415825,22.7593,1.38627,0.446526,23.6103,0.791316,0.84928,24.0031,0.488115,0.909276,23.6839,0.740416,0.772895,24.2337,0.14706,1.66043,20.3605,-1.68857,1.03527,24.5817,-1.78207,1.21091,24.8817,-1.24282,0.841676,24.9587,-1.50445,1.0026,24.811,-1.60618,1.41342,24.5651,-1.73624,2.37925,20.8622,0.349165,2.27034,20.4561,0.618028,2.15838,20.4661,0.823789,2.00929,20.3045,1.05114,2.10461,20.0293,0.8885,2.54685,20.8667,-0.107768,2.35556,20.8639,-1.44567,1.96406,21.0386,-1.85163,2.43137,20.3139,-0.814222,2.18364,20.4459,-1.34726,1.82973,20.6949,-1.76887,0.265581,24.603,-1.73423,2.61572,20.8149,-0.851922,3.04791,22.0271,-0.870668,2.02365,24.555,-0.707142,2.91732,22.8241,0.56432,1.9886,24.4534,-0.46991,2.78986,22.1246,-1.77215,2.2278,24.0187,-1.93151,3.0872,22.2633,-0.084512,0,16.6716,1.92663,0.000004,18.6138,-1.30753,0,21.8605,-2.12827,0,23.8241,-2.03032,0,23.3967,0.861727,0,24.0681,0.333246,0,20.0912,-1.70371,0,24.5968,-1.72324,3.39037,22.6476,-1.2972,3.36606,23.2378,0.179123,3.03749,21.9771,-1.14527,2.61339,24.5161,-0.367561,2.66516,24.6299,-0.878156,3.70244,24.6151,-0.722741,3.90076,22.6138,-1.18209,3.09432,23.005,-1.87132,2.32443,23.295,-2.15415,4.05731,23.6135,-1.83283,2.74126,24.4929,-1.39966,3.31565,23.0049,-0.181188,3.02117,23.4962,0.422653,2.64702,24.2452,0.002555,3.73789,24.5735,-1.07568,2.57519,23.8951,0.227414,3.57463,23.8387,0.279313,3.75905,23.639,0.200257,3.51468,24.546,-0.323678,3.49145,24.3742,-0.043025,4.05015,23.1267,-1.71016,3.31729,22.8113,-1.57105,4.00929,23.9937,-1.76011,3.08641,23.9625,-1.89556,3.31234,22.6778,-0.793098,3.75367,22.7931,-0.622827,-1.73691,17.4425,1.43574,1.74158,17.4309,1.44662,-2.64805,21.3106,-0.128552,2.61134,21.3209,-0.141794,2.63184,24.5565,-0.548743,-2.63182,24.5565,-0.548476,3.25992,23.1398,0.270629,-3.25222,23.1326,0.277212,1.05797,19.4561,-1.48333,-1.16228,19.4378,-1.43999,0.886851,19.1546,-1.34321,-0.95904,19.1486,-1.31775,0.364315,19.2237,-1.44846,-0.371246,19.2222,-1.44911,2.64984,22.393,-1.90791,-2.64003,22.412,-1.91745,-0.000423,22.4341,1.5328,-0.000196,21.9473,1.76869,-0.316174,17.5007,-1.28782,0,17.5023,-1.30058,0.316175,17.5007,-1.28782,0.534343,17.5005,-1.29016,-0.534343,17.5006,-1.29016,-2.49277,16.5304,0.001265,2.49659,16.5103,0.001794,2.09728,16.6576,1.13509,-2.09867,16.6525,1.13435,-1.52065,16.6539,1.54117,-1.44132,16.6466,1.59536,1.52073,16.6541,1.54111,1.44123,16.647,1.59541,-0.358649,24.9526,-1.56033,0.358721,24.9528,-1.5602,1.61586,24.2295,-1.86304,-1.63002,24.233,-1.85789,1.54458,24.2123,-1.88899,-1.54714,24.2129,-1.88806,-1.46157,18.6246,-1.00886,1.46254,18.6371,-1.00929,-3.82069,22.6191,-1.20015,-3.74757,23.1131,-0.182854,3.74117,23.1115,-0.182792,-3.77417,23.8846,0.207987,-3.74239,24.4347,-0.263334,-3.75407,24.2927,-0.046816,-3.74137,24.4914,-0.337211,3.73747,24.4438,-0.267354,3.74809,24.299,-0.044917,3.77297,23.8802,0.214934,3.73535,24.4914,-0.331793],\"metadata\":{\"version\":3,\"vertices\":589,\"type\":\"Geometry\",\"uvs\":1,\"bones\":31,\"faces\":1106,\"materials\":1,\"generator\":\"io_three\"},\"uvs\":[[0.292311,0.663925,0.352258,0.653399,0.321965,0.705322,0.373895,0.703726,0.337128,0.797864,0.307002,0.795652,0.316234,0.747388,0.276476,0.762182,0.217684,0.914908,0.219777,0.938968,0.172533,0.935919,0.298989,0.855833,0.345558,0.862872,0.341692,0.880794,0.186024,0.748757,0.211522,0.713049,0.243121,0.756542,0.226422,0.692324,0.269412,0.740178,0.239583,0.824111,0.174773,0.828616,0.181595,0.775207,0.173133,0.860998,0.217195,0.876926,0.172764,0.909683,0.272313,0.669816,0.288178,0.722404,0.345384,0.829105,0.298986,0.82413,0.287015,0.724125,0.098582,0.792403,0.137406,0.82637,0.104072,0.752937,0.263213,0.605155,0.272483,0.659165,0.21471,0.622455,0.292202,0.652526,0.17269,0.662412,0.221221,0.666006,0.221276,0.660095,0.378954,0.662615,0.383969,0.644626,0.403398,0.657789,0.396106,0.643099,0.129203,0.537316,0.106869,0.493293,0.135464,0.486981,0.902975,0.495377,0.939545,0.504867,0.872114,0.537282,0.443265,0.509904,0.447082,0.50147,0.475116,0.514968,0.474224,0.502902,0.43833,0.521419,0.425868,0.50502,0.411324,0.512328,0.31205,0.542066,0.308408,0.597107,0.274121,0.571634,0.294014,0.608855,0.41534,0.423656,0.398193,0.437414,0.394662,0.386998,0.387585,0.554818,0.338746,0.583467,0.365655,0.537381,0.419162,0.642428,0.404154,0.635156,0.421905,0.621873,0.402667,0.625936,0.414469,0.598468,0.397966,0.612195,0.383273,0.597001,0.380523,0.611171,0.341542,0.591727,0.318016,0.603576,0.386938,0.629057,0.373988,0.641665,0.369184,0.63537,0.380595,0.575499,0.385092,0.583721,0.470133,0.607911,0.446455,0.613992,0.446487,0.593569,0.434713,0.604266,0.483963,0.600662,0.483315,0.584698,0.500429,0.582058,0.482339,0.568282,0.457673,0.587287,0.415545,0.614885,0.400887,0.621998,0.393879,0.619492,0.33952,0.677769,0.356186,0.656023,0.376856,0.683599,0.416687,0.673421,0.303289,0.622262,0.345131,0.629672,0.343069,0.644059,0.326525,0.627833,0.328884,0.652143,0.446705,0.647736,0.368557,0.628273,0.428094,0.541537,0.423981,0.558778,0.393804,0.535802,0.422037,0.585846,0.425372,0.578375,0.474501,0.637525,0.456951,0.664565,0.4588,0.568754,0.46155,0.55278,0.472825,0.539118,0.500461,0.559631,0.371441,0.623631,0.351533,0.619982,0.384116,0.61921,0.357576,0.602246,0.338597,0.611136,0.408093,0.349639,0.431289,0.372766,0.376291,0.620575,0.363958,0.614062,0.430469,0.482155,0.456614,0.479057,0.402058,0.316662,0.454473,0.318702,0.452435,0.353357,0.429548,0.687932,0.500581,0.368203,0.449229,0.399291,0.332759,0.722456,0.356327,0.73707,0.467399,0.744933,0.467234,0.764498,0.440799,0.742858,0.433936,0.769507,0.440637,0.81097,0.410343,0.819743,0.40648,0.802849,0.329687,0.704007,0.378724,0.702483,0.399643,0.76907,0.437039,0.797008,0.440366,0.723547,0.442071,0.704191,0.468507,0.720649,0.470972,0.695457,0.391021,0.717272,0.394863,0.735515,0.371457,0.769312,0.451021,0.420803,0.268549,0.639957,0.229688,0.637063,0.263581,0.605483,0.353033,0.398729,0.262796,0.60422,0.293907,0.547145,0.3103,0.575415,0.298185,0.666362,0.311283,0.678483,0.286973,0.676584,0.296677,0.70262,0.027768,0.847379,0.083981,0.867614,0.080903,0.887754,0.123219,0.84244,0.084201,0.827969,0.231345,0.680408,0.294499,0.542046,0.33181,0.52982,0.188909,0.561718,0.200827,0.592451,0.153292,0.587878,0.162433,0.613037,0.100255,0.91122,0.068454,0.899847,0.112245,0.869172,0.105428,0.671756,0.101092,0.628034,0.271446,0.535872,0.373817,0.886291,0.41844,0.835708,0.399284,0.887389,0.026977,0.868761,0.182099,0.528597,0.141643,0.563157,0.304769,0.45878,0.282958,0.495308,0.258774,0.45034,0.241558,0.494569,0.342929,0.369042,0.318651,0.398854,0.311273,0.371038,0.226756,0.538543,0.216312,0.505284,0.272298,0.511556,0.255792,0.478462,0.237706,0.573344,0.238822,0.530805,0.244539,0.572259,0.380369,0.456503,0.337264,0.425219,0.476517,0.781151,0.05328,0.265664,0.086469,0.251984,0.112285,0.29818,0.138973,0.288182,0.081217,0.311054,0.022427,0.277826,0.325074,0.605117,0.31069,0.576256,0.283957,0.71415,0.355947,0.261156,0.373293,0.274743,0.330438,0.273697,0.330737,0.314364,0.22886,0.310514,0.232161,0.288038,0.28164,0.305795,0.282559,0.285719,0.282313,0.253762,0.235306,0.256797,0.005688,0.284592,0.046886,0.319343,0.1841,0.239758,0.169249,0.26452,0.177755,0.360453,0.190502,0.418633,0.125454,0.374999,0.135595,0.423908,0.361086,0.316779,0.199172,0.464081,0.238828,0.454527,0.240774,0.408463,0.475435,0.79309,0.355277,0.337937,0.270167,0.39915,0.293276,0.341259,0.108534,0.334114,0.163735,0.317238,0.036195,0.333374,0.132984,0.911342,0.440498,0.825713,0.468519,0.811952,0.316821,0.510811,0.348197,0.47717,0.374347,0.510427,0.304419,0.422528,0.41085,0.482759,0.167995,0.480694,0.141093,0.461944,0.229412,0.350285,0.24438,0.571828,0.226409,0.537977,0.860137,0.461937,0.865443,0.424904,0.935803,0.428898,0.293605,0.54633,0.270933,0.509436,0.000592,0.291797,0.216918,0.505792,0.199274,0.463185,0.257401,0.479979,0.236725,0.444577,0.061781,0.504894,0.122581,0.244224,0.065424,0.428915,0.054271,0.378922,0.060519,0.474835,0.092474,0.469419,0.50056,0.439503,0.50054,0.478377,0.585812,0.4237,0.570635,0.48223,0.550119,0.42083,0.093216,0.586658,0.071036,0.541722,0.914711,0.470329,0.940728,0.474819,0.10887,0.711702,0.04272,0.34893,0.419954,0.25736,0.457325,0.261726,0.140229,0.941214,0.116663,0.950064,0.351744,0.640297,0.000592,0.31367,0.000592,0.627256,0.000592,0.5821,0.000592,0.751621,0.000592,0.715611,0.000592,0.782421,0.484125,0.672296,0.500171,0.693441,0.500592,0.319269,1.00108,0.482983,0.956328,0.477818,1.00108,0.434457,0.266874,0.109072,0.28834,0.110836,0.264034,0.168002,0.294689,0.166277,0.267605,0.092448,0.274228,0.091954,0.162363,0.075845,0.218032,0.093569,0.146015,0.129085,0.192817,0.15779,0.351451,0.144658,0.374357,0.119406,0.378349,0.131481,0.251701,0.166698,0.229094,0.164187,0.240809,0.096449,0.330032,0.105256,0.402911,0.111078,0.343084,0.089796,0.446627,0.104237,0.429267,0.078443,0.222938,0.733931,0.065645,0.089751,0.104968,0.049486,0.082451,0.113363,0.139509,0.057963,0.392911,0.082604,0.709081,0.663968,0.679452,0.705419,0.648657,0.652663,0.62746,0.704253,0.723523,0.763921,0.69267,0.797118,0.683912,0.748743,0.662513,0.799072,0.657194,0.881972,0.700117,0.857358,0.701799,0.870236,0.653489,0.86402,0.758301,0.756571,0.774974,0.692342,0.788914,0.711699,0.732001,0.740216,0.76188,0.824138,0.819842,0.775202,0.826693,0.828611,0.82835,0.860992,0.828747,0.909678,0.784296,0.876942,0.783829,0.914925,0.828994,0.935915,0.729066,0.669859,0.713234,0.722461,0.700409,0.825662,0.653967,0.830253,0.71439,0.724167,0.902868,0.79236,0.864061,0.826349,0.897358,0.752895,0.738127,0.605181,0.786657,0.622463,0.728903,0.659194,0.709202,0.652552,0.781428,0.665913,0.815397,0.748752,0.78138,0.66014,0.604665,0.643545,0.616835,0.645133,0.597272,0.658246,0.621769,0.663218,0.828696,0.6624,0.500311,0.636734,0.557793,0.50999,0.525913,0.515009,0.553986,0.501543,0.526825,0.502939,0.589769,0.512456,0.562715,0.521522,0.575215,0.505122,0.70748,0.609412,0.692971,0.597576,0.72739,0.571863,0.689258,0.542281,0.606505,0.387031,0.602963,0.437472,0.613514,0.55506,0.63551,0.537592,0.662478,0.583837,0.581547,0.642772,0.578887,0.62216,0.596629,0.635544,0.598159,0.626302,0.620441,0.611557,0.602927,0.612532,0.617727,0.597318,0.586415,0.598724,0.683297,0.604084,0.659651,0.592141,0.61393,0.629491,0.631732,0.635904,0.626873,0.642206,0.62046,0.575845,0.615916,0.584052,0.530644,0.608015,0.554364,0.593736,0.554324,0.614183,0.566118,0.60448,0.543186,0.587414,0.516835,0.600716,0.585287,0.615177,0.599961,0.622358,0.607002,0.619867,0.644683,0.656721,0.623738,0.68429,0.661286,0.678692,0.583861,0.673848,0.698116,0.622932,0.672186,0.652965,0.657945,0.644755,0.674668,0.628484,0.655935,0.630271,0.553927,0.647972,0.632392,0.628775,0.577,0.558961,0.607298,0.535991,0.572923,0.541682,0.578861,0.58607,0.575539,0.578586,0.526154,0.637632,0.543581,0.664775,0.539407,0.552868,0.542115,0.568862,0.528156,0.539174,0.500488,0.539018,0.500522,0.502507,0.50051,0.516812,0.518564,0.568328,0.517537,0.584748,0.649533,0.620505,0.629515,0.624101,0.616803,0.619616,0.643522,0.602661,0.66257,0.61165,0.593076,0.349671,0.569875,0.372793,0.624655,0.621015,0.637069,0.614514,0.544476,0.479105,0.548735,0.353375,0.546712,0.318723,0.599106,0.316723,0.570884,0.688315,0.667626,0.723608,0.643867,0.73806,0.565893,0.769956,0.532622,0.764716,0.559234,0.743241,0.532602,0.745143,0.558859,0.811383,0.593089,0.803511,0.589082,0.82038,0.670911,0.705141,0.621723,0.703218,0.600215,0.769763,0.562569,0.797444,0.529365,0.69562,0.558237,0.704526,0.531665,0.72084,0.559809,0.723916,0.60528,0.736203,0.609278,0.717954,0.628423,0.770221,0.733336,0.640624,0.738371,0.605996,0.772643,0.637011,0.648155,0.398766,0.763867,0.573355,0.767041,0.605747,0.703072,0.667534,0.714308,0.677977,0.689719,0.679646,0.704069,0.704117,0.973714,0.847301,0.920601,0.887702,0.917512,0.867563,0.87305,0.84437,0.770689,0.681589,0.706859,0.542227,0.669434,0.530013,0.812427,0.561717,0.848055,0.587859,0.800525,0.592453,0.838928,0.613022,0.581272,0.257376,0.613828,0.259767,0.499861,0.781582,0.524198,0.793258,0.530968,0.812168,0.933057,0.899788,0.901262,0.911178,0.917271,0.827918,0.889248,0.869135,0.895961,0.671714,0.900275,0.627992,0.729936,0.535989,0.625024,0.887214,0.599549,0.888112,0.580848,0.836283,0.974516,0.868682,0.85969,0.563132,0.819218,0.528596,0.759737,0.494593,0.718326,0.495394,0.742476,0.45038,0.696464,0.458851,0.658265,0.369059,0.689935,0.371062,0.682556,0.39889,0.745506,0.478501,0.784996,0.505302,0.72902,0.5116,0.774571,0.538562,0.670796,0.273723,0.645294,0.261199,0.674825,0.258782,0.762566,0.53082,0.756804,0.572282,0.738543,0.604248,0.707421,0.547204,0.663935,0.425273,0.620795,0.456581,0.52321,0.78131,0.947932,0.265666,0.888935,0.298177,0.914748,0.251986,0.86225,0.288181,0.978781,0.277827,0.92,0.311049,0.627945,0.274787,0.71656,0.715858,0.62112,0.26013,0.670511,0.31435,0.772366,0.310517,0.719587,0.3058,0.769062,0.288041,0.718668,0.285729,0.765912,0.256799,0.718904,0.253778,0.954325,0.319337,0.995517,0.284591,0.817123,0.23976,0.831975,0.264521,0.823479,0.360451,0.875776,0.374983,0.810752,0.418639,0.639872,0.315975,0.760463,0.408487,0.762428,0.454556,0.802092,0.464105,0.645895,0.337928,0.731063,0.399177,0.707947,0.341267,0.765488,0.246584,0.837491,0.317236,0.892689,0.334105,0.965014,0.333365,0.868531,0.911316,0.558878,0.826126,0.684438,0.510957,0.626809,0.51058,0.653001,0.477275,0.696801,0.422575,0.590272,0.48285,0.833286,0.480702,0.771819,0.350291,0.774917,0.537994,0.756964,0.571852,0.73038,0.509475,0.707721,0.546393,0.764556,0.444638,0.802006,0.463217,0.74391,0.480039,0.784396,0.50582,0.86638,0.487078,0.87864,0.244226,0.946943,0.378906,0.908131,0.586614,0.930293,0.541676,0.892538,0.711661,0.95849,0.348918,0.543884,0.261733,0.861302,0.941195,0.884875,0.950033,0.67677,0.60488,0.648902,0.640901,1.00108,0.383163,1.00108,0.541656,1.00108,0.507602,0.499976,0.750831,0.500085,0.720009,0.499754,0.809169,0.551922,0.399315,0.516343,0.672375,0.500567,0.419116,0.707274,0.16627,0.713625,0.110831,0.73793,0.167996,0.73509,0.109067,0.809147,0.157783,0.78393,0.093562,0.855948,0.129075,0.839597,0.075836,0.747137,0.741267,0.75028,0.166689,0.77287,0.16418,0.761153,0.096443,0.650514,0.144645,0.671938,0.105252,0.599094,0.111066,0.658887,0.089795,0.627634,0.119403,0.555331,0.104236,0.572701,0.078462,0.608915,0.083039,0.98972,0.034424,0.989112,0.068155,0.94848,0.041062,0.954743,0.076597,0.77726,0.736273,0.743196,0.74535,0.896991,0.049473,0.936317,0.089736,0.86245,0.057953,0.919512,0.11335,0.000592,0.434498,0.000592,0.483043,0.045454,0.47775,0.000592,0.507674,0.000592,0.541732,0.000592,0.838491,0.000592,0.867983,0.000592,0.383183,0.500601,0.262462,0.000592,0.894557,0.000592,0.809701,0.000592,0.670148,0.000592,0.357993,0.026365,0.352699,0.5004,0.598739,1.00108,0.291795,1.00108,0.58202,1.00108,0.867894,1.00108,0.838403,1.00108,0.313665,1.00108,0.894468,1.00108,0.627174,1.00108,0.751535,1.00108,0.715525,1.00108,0.782334,1.00108,0.809614,1.00108,0.670064,0.974842,0.352686,1.00108,0.357979,0.500203,0.67237,0.234964,0.605514,0.691193,0.575873,0.691112,0.576262,0.78175,0.938968,0.297192,0.86868,0.62391,0.130666,0.253799,0.738713,0.257556,0.742751,0.235671,0.248028,0.326299,0.258376,0.380127,0.260074,0.387408,0.259704,0.032659,0.89632,0.968846,0.896266,0.878457,0.842339,0.129511,0.844799,0.012816,0.068192,0.012238,0.034443,0.047938,0.044772,0.274282,0.09197,0.291197,0.091107,0.291367,0.091187,0.323715,0.090191,0.323844,0.090241,0.728317,0.093303,0.734375,0.092826,0.677857,0.091134,0.71099,0.092644,0.054937,0.046916,0.047218,0.076613,0.052496,0.046652]],\"faces\":[10,229,235,267,0,0,1,2,10,267,235,254,0,2,1,3,10,173,258,169,0,4,5,6,10,169,258,255,0,6,5,7,10,248,544,230,0,8,9,10,10,247,232,230,0,11,12,13,10,176,554,250,0,14,15,16,10,250,233,264,0,16,17,18,10,266,234,251,0,19,20,21,10,174,253,175,0,22,23,24,10,175,253,248,0,24,23,8,10,248,230,175,0,8,10,24,10,246,244,233,0,25,26,17,10,232,247,156,0,12,11,27,10,156,247,256,0,27,11,28,10,233,244,264,0,17,29,18,10,258,173,256,0,5,4,28,10,256,173,156,0,28,4,27,10,244,246,267,0,26,25,2,10,267,246,229,0,2,25,0,10,174,234,253,0,22,20,23,10,253,234,266,0,23,20,19,10,159,251,168,0,30,21,31,10,168,251,234,0,31,21,20,10,159,157,251,0,30,32,21,10,166,246,165,0,33,34,35,10,246,166,229,0,34,33,36,10,233,177,63,0,17,37,38,10,157,176,251,0,32,14,21,10,177,165,63,0,37,35,39,10,36,28,35,0,40,41,42,10,35,28,29,0,42,41,43,10,113,548,20,0,44,45,46,10,547,408,383,0,47,48,49,10,17,4,14,0,50,51,52,10,14,4,0,0,52,51,53,10,17,76,15,0,50,54,55,10,15,76,16,0,55,54,56,10,218,68,216,0,57,58,59,10,216,68,69,0,59,58,60,10,12,119,13,0,61,62,63,10,66,70,11,0,64,65,66,10,34,54,55,0,67,68,69,10,55,54,52,0,69,68,70,10,49,50,45,0,71,72,73,10,45,50,48,0,73,72,74,10,44,43,70,0,75,76,65,10,70,43,68,0,65,76,58,10,54,29,21,0,68,43,77,10,21,27,22,0,77,78,79,10,70,6,44,0,65,80,75,10,44,6,47,0,75,80,81,10,61,60,32,0,82,83,84,10,32,60,53,0,84,83,85,10,59,3,18,0,86,87,88,10,3,30,18,0,87,89,88,10,32,67,61,0,84,90,82,10,61,67,59,0,82,90,86,10,51,74,50,0,91,92,72,10,50,74,73,0,72,92,93,10,24,33,25,0,94,95,96,10,25,33,36,0,96,95,40,10,26,25,35,0,97,96,42,10,35,25,36,0,42,96,40,10,68,43,69,0,58,76,60,10,69,43,71,0,60,76,98,10,40,58,39,0,99,100,101,10,39,58,23,0,101,100,102,10,24,23,33,0,94,102,95,10,33,23,58,0,95,102,100,10,35,34,26,0,42,67,97,10,26,34,62,0,97,67,103,10,72,22,40,0,104,79,99,10,40,22,58,0,99,79,100,10,2,10,7,0,105,106,107,10,7,10,66,0,107,106,64,10,28,27,21,0,41,78,77,10,1,47,5,0,108,81,109,10,5,47,6,0,109,81,80,10,1,5,32,0,108,109,84,10,32,5,67,0,84,109,90,10,54,21,52,0,68,77,70,10,64,65,62,0,110,111,103,10,58,22,33,0,100,79,95,10,33,22,27,0,95,79,78,10,80,10,31,0,112,106,113,10,31,10,2,0,113,106,105,10,17,14,76,0,50,52,54,10,76,14,75,0,54,52,114,10,30,78,18,0,89,115,88,10,31,30,80,0,113,89,112,10,80,30,3,0,112,89,87,10,57,72,38,0,116,104,117,10,38,72,40,0,117,104,99,10,62,60,64,0,103,83,110,10,64,60,61,0,110,83,82,10,80,3,67,0,112,87,90,10,67,3,59,0,90,87,86,10,55,52,51,0,69,70,91,10,51,52,74,0,91,70,92,10,50,73,48,0,72,93,74,10,48,73,46,0,74,93,118,10,73,21,46,0,93,77,118,10,41,37,44,0,119,120,75,10,44,37,43,0,75,120,76,10,33,27,36,0,95,78,40,10,36,27,28,0,40,78,41,10,9,79,13,0,121,122,63,10,57,56,21,0,116,123,77,10,56,57,42,0,123,116,124,10,42,57,38,0,124,116,117,10,42,48,56,0,124,74,123,10,56,48,46,0,123,74,118,10,46,21,56,0,118,77,123,10,52,21,74,0,70,77,92,10,67,5,80,0,90,109,112,10,80,5,10,0,112,109,106,10,76,2,16,0,54,105,56,10,16,2,7,0,56,105,107,10,10,5,66,0,106,109,64,10,66,5,6,0,64,109,80,10,2,76,31,0,105,54,113,10,31,76,75,0,113,54,114,10,4,8,81,0,51,125,126,10,0,4,81,0,53,51,126,10,35,29,34,0,42,43,67,10,34,29,54,0,67,43,68,10,60,55,53,0,83,69,85,10,53,55,51,0,85,69,91,10,60,62,55,0,83,103,69,10,55,62,34,0,69,103,67,10,53,51,49,0,85,91,71,10,49,51,50,0,71,91,72,10,42,38,41,0,124,117,119,10,41,38,37,0,119,117,120,10,44,47,41,0,75,81,119,10,41,47,45,0,119,81,73,10,45,47,49,0,73,81,71,10,49,47,1,0,71,81,108,10,71,43,39,0,98,76,101,10,39,43,37,0,101,76,120,10,45,48,41,0,73,74,119,10,41,48,42,0,119,74,124,10,38,40,37,0,117,99,120,10,37,40,39,0,120,99,101,10,49,1,53,0,71,108,85,10,53,1,32,0,85,108,84,10,57,21,72,0,116,77,104,10,133,134,9,0,127,128,121,10,9,134,130,0,121,128,129,10,84,26,65,0,130,97,111,10,65,26,62,0,111,97,103,10,79,9,130,0,122,121,129,10,86,79,130,0,131,122,129,10,83,79,86,0,132,122,131,10,155,201,169,0,133,134,6,10,187,206,203,0,135,136,137,10,203,206,208,0,137,136,138,10,183,191,189,0,139,140,141,10,161,24,181,0,142,94,143,10,181,24,25,0,143,94,96,10,188,208,189,0,144,138,141,10,189,208,207,0,141,138,145,10,204,196,182,0,146,147,148,10,182,196,205,0,148,147,149,10,196,204,197,0,147,146,150,10,197,204,202,0,150,146,151,10,202,203,188,0,151,137,144,10,188,203,208,0,144,137,138,10,189,207,183,0,141,145,139,10,202,204,203,0,151,146,137,10,197,155,181,0,150,133,143,10,181,155,161,0,143,133,142,10,155,197,201,0,133,150,134,10,201,197,202,0,134,150,151,10,188,190,202,0,144,152,151,10,202,190,201,0,151,152,134,10,12,82,8,0,61,153,125,10,164,167,171,0,154,155,156,10,13,119,135,0,63,62,157,10,166,221,541,0,158,159,160,10,153,160,163,0,161,162,163,10,163,160,162,0,163,162,164,10,195,211,214,0,165,166,167,10,155,162,161,0,133,164,142,10,575,158,168,0,168,169,31,10,167,164,235,0,155,154,170,10,217,218,216,0,171,57,59,10,219,11,70,0,172,66,65,10,225,222,226,0,173,174,175,10,226,222,223,0,175,174,176,10,153,23,160,0,161,102,162,10,214,212,213,0,167,177,178,10,158,215,211,0,169,179,166,10,211,215,214,0,166,179,167,10,189,156,173,0,141,27,4,10,172,185,177,0,180,181,37,10,177,185,223,0,37,181,176,10,158,575,215,0,169,168,179,10,217,216,117,0,171,59,182,10,193,194,192,0,183,184,185,10,213,227,214,0,178,186,167,10,214,227,195,0,167,186,165,10,114,225,210,0,187,173,188,10,210,225,226,0,188,173,175,10,147,116,125,0,189,190,191,10,125,116,122,0,191,190,192,10,142,132,141,0,193,194,195,10,224,184,136,0,196,197,198,10,136,184,122,0,198,197,199,10,117,221,136,0,182,200,201,10,228,221,166,0,202,159,158,10,148,149,119,0,203,204,62,10,119,149,135,0,62,204,157,10,207,208,198,0,145,138,205,10,198,208,206,0,205,138,136,10,110,143,146,0,206,207,208,10,146,143,145,0,208,207,209,10,146,94,110,0,208,210,206,10,110,94,109,0,206,210,211,10,167,166,541,0,212,33,213,10,222,165,223,0,174,35,176,10,223,165,177,0,176,35,37,10,155,231,162,0,133,214,164,10,226,223,185,0,175,176,181,10,168,234,174,0,31,20,22,10,155,169,231,0,133,6,214,10,182,187,204,0,148,135,146,10,204,187,203,0,146,135,137,10,107,108,106,0,215,216,217,10,106,108,105,0,217,216,218,10,93,89,90,0,219,220,221,10,90,89,104,0,221,220,222,10,103,104,102,0,223,222,224,10,102,104,89,0,224,222,220,10,97,109,98,0,225,211,226,10,98,109,94,0,226,211,210,10,99,102,100,0,227,224,228,10,100,102,89,0,228,224,220,10,127,111,126,0,229,230,231,10,126,111,576,0,231,230,232,10,105,108,539,0,218,216,233,10,115,111,124,0,234,230,235,10,124,111,123,0,235,230,236,10,183,207,199,0,139,145,237,10,199,207,198,0,237,145,205,10,142,141,131,0,193,195,238,10,131,141,105,0,238,195,218,10,116,117,122,0,190,182,192,10,122,117,136,0,192,182,201,10,132,120,141,0,194,239,195,10,141,120,128,0,195,239,240,10,69,164,171,0,60,154,156,10,94,146,95,0,210,208,241,10,95,146,144,0,241,208,242,10,216,69,171,0,59,60,156,10,98,94,96,0,226,210,243,10,96,94,95,0,243,210,241,10,193,230,232,0,183,13,12,10,170,212,215,0,244,177,179,10,215,212,214,0,179,177,167,10,190,188,189,0,152,144,141,10,232,156,191,0,12,27,140,10,191,156,189,0,140,27,141,10,183,209,191,0,139,245,140,10,191,209,194,0,140,245,184,10,199,200,183,0,237,246,139,10,183,200,209,0,139,246,245,10,220,118,150,0,247,248,249,10,132,152,120,0,194,250,239,10,120,152,125,0,239,250,191,10,151,150,148,0,251,249,203,10,148,150,118,0,203,249,248,10,118,220,147,0,248,247,189,10,147,220,116,0,189,247,190,10,150,219,220,0,249,172,247,10,112,91,115,0,252,253,234,10,93,90,129,0,219,221,254,10,95,144,126,0,241,242,231,10,126,144,127,0,231,242,229,10,90,123,129,0,221,236,254,10,144,93,127,0,242,219,229,10,127,93,129,0,229,219,254,10,222,225,228,0,174,173,255,10,228,225,224,0,255,173,256,10,117,216,221,0,182,59,200,10,216,171,221,0,59,156,200,10,166,165,228,0,158,35,202,10,228,165,222,0,202,35,174,10,225,114,224,0,173,187,196,10,224,114,184,0,196,187,197,10,115,91,111,0,234,253,230,10,361,577,407,0,257,258,259,10,228,224,221,0,255,256,260,10,221,224,136,0,260,256,261,10,169,190,173,0,6,152,4,10,173,190,189,0,4,152,141,10,97,98,87,0,225,226,262,10,145,100,144,0,209,228,242,10,100,89,144,0,228,220,242,10,144,89,93,0,242,220,219,10,191,194,232,0,140,184,12,10,232,194,193,0,12,184,183,10,184,115,122,0,263,264,265,10,122,115,124,0,265,264,266,10,120,125,123,0,239,191,236,10,123,125,124,0,236,191,235,10,113,138,548,0,44,267,45,10,162,231,163,0,164,214,163,10,163,231,235,0,163,214,170,10,190,169,201,0,152,6,134,10,235,164,163,0,170,154,163,10,111,127,123,0,230,229,236,10,123,127,129,0,236,229,254,10,215,174,170,0,179,22,244,10,176,177,554,0,14,37,15,10,120,123,128,0,239,236,240,10,101,99,100,0,268,227,228,10,143,101,145,0,207,268,209,10,145,101,100,0,209,268,228,10,146,145,144,0,208,209,242,10,141,128,105,0,195,240,218,10,137,126,576,0,269,231,232,10,126,137,140,0,231,269,270,10,139,137,550,0,271,269,272,10,91,576,111,0,253,232,230,10,348,77,81,0,273,274,126,10,282,278,352,0,275,276,277,10,217,220,218,0,171,247,57,10,13,135,142,0,63,157,193,10,142,135,132,0,193,157,194,10,115,184,112,0,264,263,252,10,112,184,114,0,252,263,187,10,186,92,113,0,278,279,44,10,113,92,138,0,44,279,267,10,113,210,186,0,44,188,278,10,361,549,547,0,257,280,47,10,407,409,549,0,259,281,280,10,211,195,158,0,166,165,169,10,218,220,219,0,57,247,172,10,112,114,113,0,252,187,44,10,113,114,210,0,44,187,188,10,157,154,176,0,32,282,14,10,210,226,186,0,188,175,278,10,186,226,185,0,278,175,181,10,135,149,132,0,157,204,194,10,132,149,152,0,194,204,250,10,124,125,122,0,235,191,192,10,95,140,561,0,241,270,283,10,140,95,126,0,270,241,231,10,133,121,134,0,127,284,128,10,134,121,88,0,128,284,285,10,148,118,149,0,203,248,204,10,149,118,147,0,204,248,189,10,158,159,168,0,169,30,31,10,172,177,154,0,180,37,282,10,147,125,152,0,189,191,250,10,149,147,152,0,204,189,250,10,176,154,177,0,14,282,37,10,117,116,217,0,182,190,171,10,217,116,220,0,171,190,247,10,193,192,170,0,286,287,244,10,170,192,212,0,244,287,177,10,170,175,193,0,244,24,286,10,193,175,230,0,286,24,10,10,174,175,170,0,22,24,244,10,103,106,104,0,223,217,222,10,90,104,105,0,221,222,218,10,105,104,106,0,218,222,217,10,105,128,90,0,218,240,221,10,90,128,123,0,221,240,236,10,166,167,229,0,33,212,36,10,229,167,235,0,36,212,288,10,87,98,238,0,262,226,289,10,238,98,96,0,289,226,243,10,185,241,186,0,181,290,278,10,186,241,242,0,278,290,291,10,243,178,157,0,292,293,32,10,157,178,154,0,32,293,282,10,157,159,243,0,32,30,292,10,243,159,180,0,292,30,294,10,24,161,160,0,94,142,162,10,160,161,162,0,162,142,164,10,29,28,21,0,43,41,77,10,9,131,133,0,121,238,127,10,108,133,539,0,216,127,233,10,142,131,13,0,193,238,63,10,13,131,9,0,63,238,121,10,73,74,21,0,93,92,77,10,72,21,22,0,104,77,79,10,7,150,16,0,107,249,56,10,219,70,218,0,172,65,57,10,218,70,68,0,57,65,58,10,11,150,7,0,66,249,107,10,11,219,150,0,66,172,249,10,83,13,79,0,132,63,122,10,163,164,153,0,163,154,161,10,82,12,83,0,153,61,132,10,83,12,13,0,132,61,63,10,71,39,23,0,98,101,102,10,71,23,153,0,98,102,161,10,153,164,71,0,161,154,98,10,69,71,164,0,60,98,154,10,85,205,84,0,295,149,130,10,84,205,196,0,130,149,147,10,12,8,151,0,61,125,251,10,160,23,24,0,162,102,94,10,6,70,66,0,80,65,64,10,181,84,197,0,143,130,150,10,197,84,196,0,150,130,147,10,66,11,7,0,64,66,107,10,15,16,151,0,55,56,251,10,151,16,150,0,251,56,249,10,205,85,236,0,149,295,296,10,134,239,130,0,128,297,129,10,130,239,86,0,129,297,131,10,84,181,26,0,130,143,97,10,26,181,25,0,97,143,96,10,82,348,81,0,153,273,126,10,4,15,8,0,51,55,125,10,15,4,17,0,55,51,50,10,151,8,15,0,251,125,55,10,20,548,91,0,46,45,253,10,65,64,85,0,111,110,295,10,237,551,506,0,298,299,300,10,165,246,63,0,35,34,39,10,84,65,85,0,130,111,295,10,138,139,548,0,267,271,45,10,261,262,247,0,301,302,303,10,247,262,256,0,303,302,304,10,584,582,261,0,305,306,301,10,265,257,266,0,307,308,309,10,266,257,253,0,309,308,310,10,176,250,251,0,14,16,21,10,251,250,266,0,21,16,19,10,169,255,231,0,6,7,214,10,255,245,546,0,311,312,313,10,544,248,261,0,314,315,301,10,261,248,249,0,301,315,316,10,253,257,248,0,310,308,315,10,248,257,249,0,315,308,316,10,256,255,258,0,28,7,5,10,262,259,256,0,302,317,304,10,256,259,255,0,304,317,311,10,254,245,260,0,318,312,319,10,267,254,268,0,320,318,321,10,235,231,254,0,170,214,322,10,245,254,546,0,312,318,313,10,255,259,245,0,311,317,312,10,245,259,260,0,312,317,319,10,264,263,250,0,323,324,325,10,250,263,252,0,325,324,326,10,268,254,579,0,321,318,327,10,250,252,266,0,325,326,309,10,266,252,265,0,309,326,307,10,498,537,504,0,328,329,330,10,504,537,524,0,330,329,331,10,525,528,439,0,332,333,334,10,439,528,443,0,334,333,335,10,499,516,543,0,336,337,338,10,516,499,501,0,337,336,339,10,520,502,553,0,340,341,342,10,502,520,534,0,341,340,343,10,536,521,503,0,344,345,346,10,444,445,523,0,347,348,349,10,523,445,517,0,349,348,350,10,517,445,499,0,350,348,351,10,515,502,513,0,352,341,353,10,526,516,426,0,354,337,355,10,426,516,501,0,355,337,339,10,502,534,513,0,341,343,356,10,426,443,526,0,355,335,354,10,526,443,528,0,354,335,333,10,498,515,537,0,328,352,329,10,537,515,513,0,329,352,353,10,444,523,503,0,347,349,346,10,503,523,536,0,346,349,344,10,429,438,521,0,357,358,345,10,521,438,503,0,345,358,346,10,429,521,427,0,357,345,359,10,436,435,515,0,360,361,362,10,515,498,436,0,362,363,360,10,515,331,502,0,352,364,341,10,427,521,446,0,359,345,365,10,515,435,331,0,362,361,366,10,297,296,303,0,367,368,369,10,303,296,304,0,369,368,370,10,331,447,502,0,364,371,341,10,556,64,59,0,372,110,86,10,287,284,274,0,373,374,375,10,274,284,270,0,375,374,376,10,286,344,285,0,377,378,379,10,285,344,287,0,379,378,373,10,337,336,485,0,380,381,382,10,485,336,487,0,382,381,383,10,282,283,389,0,275,384,385,10,334,281,338,0,386,387,388,10,302,323,322,0,389,390,391,10,322,323,320,0,391,390,392,10,316,318,313,0,393,394,395,10,313,318,317,0,395,394,396,10,336,311,338,0,381,397,388,10,338,311,312,0,388,397,398,10,322,289,297,0,391,399,367,10,289,290,295,0,399,400,401,10,338,312,276,0,388,398,402,10,276,312,315,0,402,398,403,10,329,300,328,0,404,405,406,10,328,300,321,0,406,405,407,10,300,329,335,0,405,404,408,10,335,329,327,0,408,404,409,10,319,318,342,0,410,394,411,10,342,318,341,0,411,394,412,10,304,301,293,0,370,413,414,10,293,301,292,0,414,413,415,10,304,293,303,0,370,414,369,10,303,293,294,0,369,414,416,10,339,311,337,0,417,397,380,10,337,311,336,0,380,397,381,10,291,326,307,0,418,419,420,10,307,326,308,0,420,419,421,10,292,301,291,0,415,413,418,10,291,301,326,0,418,413,419,10,330,302,294,0,422,389,416,10,294,302,303,0,416,389,369,10,326,290,308,0,419,400,421,10,308,290,340,0,421,400,423,10,334,280,277,0,386,424,425,10,277,280,272,0,425,424,426,10,296,289,295,0,368,399,401,10,271,275,315,0,427,428,403,10,315,275,276,0,403,428,402,10,271,300,275,0,427,405,428,10,275,300,335,0,428,405,408,10,322,320,289,0,391,392,399,10,332,330,333,0,429,422,430,10,326,301,290,0,419,413,400,10,290,301,295,0,400,413,401,10,272,280,299,0,426,424,431,10,299,280,350,0,431,424,432,10,287,344,284,0,373,378,374,10,284,344,343,0,374,378,433,10,346,343,299,0,434,433,431,10,270,284,345,0,376,374,435,10,345,284,347,0,435,374,436,10,343,346,284,0,433,434,374,10,284,346,347,0,374,434,436,10,299,350,298,0,431,432,437,10,298,350,273,0,437,432,438,10,308,340,306,0,421,423,439,10,306,340,325,0,439,423,440,10,329,328,332,0,404,406,429,10,332,328,330,0,429,406,422,10,350,335,273,0,432,408,438,10,273,335,327,0,438,408,409,10,323,319,320,0,390,410,392,10,320,319,342,0,392,410,411,10,318,316,341,0,394,393,412,10,341,316,314,0,412,393,441,10,341,314,289,0,412,441,399,10,309,312,305,0,442,398,443,10,305,312,311,0,443,398,397,10,296,295,304,0,368,401,370,10,304,295,301,0,370,401,413,10,279,283,349,0,444,384,445,10,325,289,324,0,440,399,446,10,306,325,310,0,439,440,447,10,310,325,324,0,447,440,446,10,310,324,316,0,447,446,393,10,316,324,314,0,393,446,441,10,314,324,289,0,441,446,399,10,320,342,289,0,392,411,399,10,280,275,350,0,424,428,432,10,350,275,335,0,432,428,408,10,344,286,272,0,378,377,426,10,272,286,277,0,426,377,425,10,276,275,334,0,402,428,386,10,334,275,280,0,386,428,424,10,272,299,344,0,426,431,378,10,344,299,343,0,378,431,433,10,274,351,278,0,375,448,276,10,270,351,274,0,376,448,375,10,322,297,302,0,391,367,389,10,302,297,303,0,389,367,369,10,328,321,323,0,406,407,390,10,323,321,319,0,390,407,410,10,328,323,330,0,406,390,422,10,330,323,302,0,422,390,389,10,318,319,317,0,394,410,396,10,317,319,321,0,396,410,407,10,305,306,309,0,443,439,442,10,309,306,310,0,442,439,447,10,313,315,309,0,395,403,442,10,309,315,312,0,442,403,398,10,313,317,315,0,395,396,403,10,315,317,271,0,403,396,427,10,305,311,307,0,443,397,420,10,307,311,339,0,420,397,417,10,313,309,316,0,395,442,393,10,316,309,310,0,393,442,447,10,307,308,305,0,420,421,443,10,305,308,306,0,443,421,439,10,317,321,271,0,396,407,427,10,271,321,300,0,427,407,405,10,325,340,289,0,440,423,399,10,400,404,279,0,449,450,444,10,279,404,403,0,444,450,451,10,354,333,294,0,452,430,416,10,294,333,330,0,416,430,422,10,349,400,279,0,445,449,444,10,425,439,470,0,453,334,454,10,477,475,472,0,455,456,457,10,472,475,456,0,457,456,458,10,452,458,460,0,459,460,461,10,431,450,292,0,462,463,415,10,292,450,293,0,415,463,414,10,457,458,477,0,464,460,455,10,477,458,476,0,455,460,465,10,474,465,451,0,466,467,468,10,451,465,473,0,468,467,469,10,471,473,466,0,470,469,471,10,466,473,465,0,471,469,467,10,471,457,472,0,470,464,457,10,472,457,477,0,457,464,455,10,458,452,476,0,460,459,465,10,471,472,473,0,470,457,469,10,431,425,450,0,462,453,463,10,450,425,466,0,463,453,471,10,425,470,466,0,453,454,471,10,466,470,471,0,471,454,470,10,457,471,459,0,464,470,472,10,459,471,470,0,472,470,454,10,12,151,119,0,61,251,62,10,434,441,437,0,473,474,475,10,283,405,389,0,384,476,385,10,441,490,542,0,474,477,478,10,423,433,430,0,479,480,481,10,430,433,432,0,481,480,482,10,464,483,480,0,483,484,485,10,425,431,432,0,453,462,482,10,444,438,572,0,347,358,486,10,437,504,434,0,475,487,473,10,486,485,487,0,488,382,383,10,488,338,281,0,489,388,387,10,494,495,491,0,490,491,492,10,491,495,492,0,492,491,493,10,403,391,569,0,451,494,495,10,449,468,469,0,496,497,498,10,423,430,291,0,479,481,418,10,483,482,481,0,484,499,500,10,428,480,484,0,501,485,502,10,480,483,484,0,485,484,502,10,458,443,426,0,460,335,355,10,442,447,454,0,503,371,504,10,454,447,492,0,504,371,493,10,484,444,572,0,502,347,486,10,486,387,485,0,488,505,382,10,462,461,463,0,506,507,508,10,482,483,496,0,499,484,509,10,496,483,464,0,509,484,483,10,495,494,479,0,491,490,510,10,479,494,384,0,510,490,511,10,392,386,395,0,512,513,514,10,395,386,417,0,514,513,515,10,412,411,402,0,516,517,518,10,392,453,406,0,519,520,521,10,406,453,493,0,521,520,522,10,376,377,564,0,523,524,525,10,387,406,490,0,505,526,477,10,497,436,490,0,527,528,529,10,405,419,389,0,476,530,385,10,389,419,418,0,385,530,531,10,475,477,467,0,456,455,532,10,467,477,476,0,532,455,465,10,380,416,413,0,533,534,535,10,413,416,415,0,535,534,536,10,379,364,380,0,537,538,533,10,380,364,416,0,533,538,534,10,437,441,542,0,475,474,478,10,491,492,435,0,492,493,361,10,435,492,447,0,361,493,371,10,378,403,569,0,539,451,495,10,425,432,500,0,453,482,540,10,495,454,492,0,491,504,493,10,438,444,503,0,358,347,346,10,425,500,439,0,453,540,334,10,451,473,456,0,468,469,458,10,456,473,472,0,458,469,457,10,378,568,377,0,539,541,524,10,377,376,378,0,524,523,539,10,378,376,375,0,539,523,542,10,363,360,359,0,543,544,545,10,359,360,374,0,545,544,546,10,359,374,372,0,545,546,547,10,372,374,373,0,547,546,548,10,364,379,368,0,538,537,549,10,368,379,367,0,549,537,550,10,369,370,372,0,551,552,547,10,372,370,359,0,547,552,545,10,397,396,381,0,553,554,555,10,381,396,577,0,555,554,258,10,378,375,540,0,539,542,556,10,393,381,394,0,557,555,558,10,394,381,385,0,558,555,559,10,452,468,476,0,459,497,465,10,476,468,467,0,465,497,532,10,412,401,411,0,516,560,517,10,411,401,375,0,517,560,542,10,406,387,392,0,526,505,512,10,392,387,386,0,512,505,513,10,402,411,390,0,518,517,561,10,390,411,398,0,561,517,562,10,372,373,563,0,547,548,563,10,337,441,434,0,380,474,473,10,414,416,365,0,564,534,565,10,365,416,364,0,565,534,538,10,485,441,337,0,382,474,380,10,369,372,563,0,551,547,563,10,365,364,366,0,565,538,566,10,366,364,368,0,566,538,549,10,462,501,499,0,506,339,336,10,483,481,484,0,484,500,502,10,484,481,440,0,502,500,567,10,459,458,457,0,472,460,464,10,458,426,460,0,460,355,461,10,460,426,501,0,461,355,339,10,463,478,460,0,508,568,461,10,460,478,452,0,461,568,459,10,468,452,469,0,497,459,498,10,469,452,478,0,498,459,568,10,489,420,388,0,569,570,571,10,395,422,390,0,514,572,561,10,390,422,402,0,561,572,518,10,388,420,418,0,571,570,531,10,418,420,421,0,531,570,573,10,386,489,417,0,513,569,515,10,417,489,388,0,515,569,571,10,420,489,488,0,570,569,489,10,382,385,361,0,574,559,257,10,363,399,360,0,543,575,544,10,365,396,414,0,565,554,564,10,414,396,397,0,564,554,553,10,360,399,393,0,544,575,557,10,414,397,363,0,564,553,543,10,363,397,399,0,543,553,575,10,493,494,497,0,576,490,577,10,497,494,491,0,577,490,492,10,387,490,485,0,505,477,382,10,485,490,441,0,382,477,474,10,491,435,497,0,492,361,527,10,497,435,436,0,527,361,528,10,494,493,384,0,490,522,511,10,384,493,453,0,511,522,520,10,385,381,361,0,559,555,257,10,137,576,91,0,269,232,253,10,406,493,490,0,578,576,579,10,490,493,497,0,579,576,577,10,458,459,443,0,460,472,335,10,443,459,439,0,335,472,334,10,415,414,370,0,536,564,552,10,370,414,359,0,552,564,545,10,359,414,363,0,545,564,543,10,462,463,501,0,506,508,339,10,501,463,460,0,339,508,461,10,394,385,392,0,580,581,582,10,392,385,453,0,582,581,583,10,394,395,393,0,558,514,557,10,393,395,390,0,557,514,561,10,382,19,383,0,574,584,49,10,432,433,500,0,482,480,540,10,500,433,504,0,540,480,487,10,459,470,439,0,472,454,334,10,504,433,434,0,487,480,473,10,381,393,397,0,555,557,553,10,397,393,399,0,553,557,575,10,484,440,444,0,502,567,347,10,553,502,447,0,342,341,371,10,390,398,393,0,561,562,557,10,369,371,370,0,551,585,552,10,413,415,371,0,535,536,585,10,371,415,370,0,585,536,552,10,416,414,415,0,534,564,536,10,411,375,398,0,517,542,562,10,577,396,407,0,258,554,259,10,407,396,410,0,259,554,586,10,361,407,549,0,257,259,280,10,278,282,421,0,276,275,573,10,352,351,348,0,277,448,273,10,486,487,489,0,488,383,569,10,402,405,412,0,518,476,516,10,412,405,283,0,516,476,384,10,384,453,382,0,511,583,574,10,382,453,385,0,574,583,581,10,455,383,362,0,587,49,588,10,362,383,408,0,588,49,48,10,383,455,479,0,49,587,510,10,382,361,19,0,574,257,584,10,139,550,548,0,271,272,45,10,480,428,464,0,485,501,483,10,487,488,489,0,383,489,569,10,382,383,384,0,574,49,511,10,384,383,479,0,511,49,510,10,427,446,424,0,359,365,589,10,454,495,455,0,504,491,587,10,455,495,479,0,587,491,510,10,405,402,419,0,476,518,530,10,419,402,422,0,530,518,572,10,394,392,395,0,558,512,514,10,396,365,410,0,554,565,586,10,410,365,560,0,586,565,590,10,358,391,404,0,591,494,450,10,404,391,403,0,450,494,451,10,417,388,419,0,515,571,530,10,419,388,418,0,530,571,531,10,428,438,429,0,501,358,357,10,442,424,447,0,503,589,371,10,417,422,395,0,515,572,514,10,419,422,417,0,530,572,515,10,446,447,424,0,365,371,589,10,489,386,486,0,569,513,488,10,486,386,387,0,488,513,505,10,462,440,461,0,592,567,593,10,461,440,481,0,593,567,500,10,440,462,445,0,567,592,348,10,445,462,499,0,348,592,351,10,444,440,445,0,347,567,348,10,373,376,564,0,548,523,525,10,376,373,374,0,523,548,546,10,360,375,374,0,544,542,546,10,374,375,376,0,546,542,523,10,375,360,398,0,542,544,562,10,360,393,398,0,544,557,562,10,436,498,437,0,360,363,594,10,437,498,504,0,594,363,595,10,357,506,410,0,596,300,586,10,410,506,407,0,586,300,259,10,362,408,511,0,588,48,597,10,511,408,356,0,597,48,598,10,468,449,467,0,497,496,532,10,467,449,509,0,532,496,599,10,509,448,456,0,599,600,458,10,456,448,451,0,458,600,468,10,449,469,510,0,496,498,601,10,456,475,509,0,458,456,599,10,509,475,467,0,599,456,532,10,432,431,430,0,482,462,481,10,430,431,292,0,481,462,415,10,297,289,296,0,367,399,368,10,279,403,401,0,444,451,560,10,403,378,540,0,451,539,556,10,279,401,283,0,444,560,384,10,283,401,412,0,384,560,516,10,341,289,342,0,412,399,411,10,340,290,289,0,423,400,399,10,277,286,420,0,425,377,570,10,488,487,338,0,489,383,388,10,338,487,336,0,388,383,381,10,281,277,420,0,387,425,570,10,281,420,488,0,387,570,489,10,353,349,283,0,602,445,384,10,433,423,434,0,480,479,473,10,352,353,282,0,277,602,275,10,282,353,283,0,275,602,384,10,339,291,307,0,417,418,420,10,339,423,291,0,417,479,418,10,423,339,434,0,479,417,473,10,337,434,339,0,380,473,417,10,465,474,354,0,467,466,452,10,354,474,355,0,452,466,603,10,351,77,348,0,448,274,273,10,430,292,291,0,481,415,418,10,276,334,338,0,402,386,388,10,450,466,354,0,463,471,452,10,354,466,465,0,452,471,467,10,334,277,281,0,386,425,387,10,420,286,421,0,570,377,573,10,421,286,285,0,573,377,379,10,354,294,450,0,452,416,463,10,450,294,293,0,463,416,414,10,278,351,352,0,276,448,277,10,421,282,389,0,573,275,385,10,82,81,8,0,153,126,125,10,274,278,285,0,375,276,379,10,285,287,274,0,379,373,375,10,421,285,278,0,573,379,276,10,435,447,331,0,361,371,366,10,333,355,332,0,430,603,429,10,354,355,333,0,452,603,430,10,421,389,418,0,573,385,531,10,269,352,348,0,604,277,273,10,526,532,516,0,605,606,607,10,516,532,531,0,607,606,608,10,523,527,536,0,609,610,611,10,536,527,535,0,611,610,612,10,446,521,520,0,365,345,340,10,520,521,536,0,340,345,344,10,525,500,545,0,332,540,613,10,500,525,439,0,540,332,334,10,516,531,543,0,607,608,614,10,517,531,518,0,615,608,616,10,523,517,527,0,609,615,610,10,527,517,518,0,610,615,616,10,526,528,525,0,354,333,332,10,525,529,526,0,617,618,605,10,526,529,532,0,605,618,606,10,524,530,514,0,619,620,621,10,537,538,524,0,622,623,619,10,524,538,580,0,619,623,624,10,538,537,519,0,625,626,627,10,519,537,513,0,627,626,628,10,504,524,500,0,487,629,540,10,500,524,545,0,540,629,630,10,525,514,529,0,617,621,618,10,529,514,530,0,618,621,620,10,530,524,580,0,620,619,624,10,533,519,534,0,631,627,632,10,534,519,513,0,632,627,628,10,522,533,520,0,633,631,634,10,520,533,534,0,634,631,632,10,535,522,536,0,612,633,611,10,536,522,520,0,611,633,634,10,346,31,75,0,434,113,114,10,78,30,346,0,115,89,434,10,346,30,31,0,434,89,113,10,347,14,345,0,436,52,435,10,345,14,0,0,435,52,53,10,347,346,14,0,436,434,52,10,14,346,75,0,52,434,114,10,81,77,0,0,126,274,53,10,0,77,345,0,53,274,435,10,449,200,199,0,496,246,237,10,236,448,205,0,296,600,149,10,205,448,182,0,149,600,148,10,137,139,506,0,269,271,635,10,237,506,552,0,636,635,637,10,356,237,138,0,638,636,267,10,138,237,552,0,267,636,637,10,186,242,92,0,278,291,279,10,92,242,511,0,279,291,639,10,240,195,512,0,640,165,641,10,512,195,227,0,641,165,186,10,357,140,506,0,642,270,635,10,506,140,137,0,635,270,269,10,92,511,138,0,279,639,267,10,138,511,356,0,267,639,638,10,199,198,449,0,237,205,496,10,449,198,509,0,496,205,599,10,134,88,239,0,128,285,297,10,239,88,505,0,297,285,643,10,512,227,179,0,641,186,644,10,182,448,187,0,148,600,135,10,187,448,509,0,135,600,599,10,158,195,508,0,169,165,645,10,508,195,240,0,645,165,640,10,172,507,185,0,180,646,181,10,185,507,241,0,181,646,290,10,507,172,178,0,646,180,293,10,178,172,154,0,293,180,282,10,159,158,180,0,30,169,294,10,180,158,508,0,294,169,645,10,449,510,200,0,496,601,246,10,187,509,206,0,135,599,136,10,206,509,198,0,136,599,205,10,558,557,357,0,647,648,642,10,357,557,140,0,642,648,270,10,112,20,91,0,252,46,253,10,549,409,547,0,280,281,47,10,86,269,83,0,131,604,132,10,83,269,82,0,132,604,153,10,59,18,288,0,86,88,649,10,119,151,148,0,62,251,203,10,269,348,82,0,604,273,153,10,327,18,273,0,409,88,438,10,273,18,298,0,438,88,437,10,298,18,78,0,437,88,115,10,299,298,346,0,431,437,434,10,346,298,78,0,434,437,115,10,345,77,270,0,435,274,376,10,270,77,351,0,376,274,448,10,86,400,349,0,131,449,445,10,353,86,349,0,602,131,445,10,451,448,474,0,468,600,466,10,474,448,236,0,466,600,296,10,367,87,368,0,550,650,549,10,551,409,506,0,299,281,300,10,506,409,407,0,300,281,259,10,409,551,408,0,281,299,48,10,408,237,356,0,48,298,598,10,511,242,362,0,597,651,588,10,362,242,455,0,588,651,587,10,496,464,512,0,509,483,652,10,512,464,240,0,652,483,653,10,87,238,368,0,650,654,549,10,368,238,366,0,549,654,566,10,505,358,239,0,643,591,297,10,239,358,404,0,297,591,450,10,512,179,496,0,652,655,509,10,454,455,241,0,504,587,656,10,241,455,242,0,656,587,651,10,243,427,178,0,657,359,658,10,178,427,424,0,658,359,589,10,180,429,243,0,659,357,657,10,243,429,427,0,657,357,359,10,428,508,464,0,501,660,483,10,464,508,240,0,483,660,653,10,442,454,507,0,503,504,661,10,507,454,241,0,661,504,656,10,507,178,442,0,661,658,503,10,442,178,424,0,503,658,589,10,508,428,180,0,660,501,659,10,180,428,429,0,659,501,357,10,410,560,559,0,586,590,662,10,357,559,558,0,596,662,663,10,19,547,383,0,584,47,49,10,409,408,547,0,281,48,47,10,352,269,353,0,277,604,602,10,353,269,86,0,602,604,131,10,474,236,355,0,466,296,603,10,86,239,400,0,131,297,449,10,400,239,404,0,449,297,450,10,327,288,18,0,409,649,88,10,137,91,550,0,269,253,272,10,112,113,20,0,252,44,46,10,236,85,555,0,296,295,664,10,133,131,539,0,127,238,233,10,131,105,539,0,238,218,233,10,375,401,540,0,542,560,556,10,401,403,540,0,560,451,556,10,171,167,541,0,156,155,665,10,221,171,541,0,200,156,665,10,490,436,542,0,529,528,666,10,436,437,542,0,360,594,667,10,517,499,543,0,350,351,668,10,531,517,543,0,608,615,614,10,544,247,230,0,669,11,13,10,247,544,261,0,303,314,301,10,514,525,545,0,621,617,670,10,524,514,545,0,619,621,670,10,231,255,546,0,214,7,671,10,254,231,546,0,322,214,672,10,361,547,19,0,257,47,584,10,246,233,63,0,25,17,38,10,139,138,552,0,271,267,637,10,550,91,548,0,272,253,45,10,551,237,408,0,299,298,48,10,506,139,552,0,635,271,637,10,446,520,553,0,365,340,342,10,446,553,447,0,365,342,371,10,177,233,554,0,37,17,15,10,554,233,250,0,15,17,16,10,332,556,327,0,429,372,409,10,355,236,555,0,603,296,664,10,555,556,332,0,664,372,429,10,64,556,555,0,110,372,664,10,556,59,288,0,372,86,649,10,64,61,59,0,110,82,86,10,85,64,555,0,295,110,664,10,332,327,329,0,429,409,404,10,556,288,327,0,372,649,409,10,355,555,332,0,603,664,429,10,560,366,559,0,590,566,662,10,96,95,561,0,243,241,283,10,559,366,238,0,662,566,654,10,558,238,557,0,647,289,648,10,365,366,560,0,565,566,590,10,557,96,561,0,648,243,283,10,357,410,559,0,596,586,662,10,557,561,140,0,648,283,270,10,558,559,238,0,663,662,654,10,238,96,557,0,289,243,648,10,102,99,562,0,224,227,673,10,103,102,562,0,223,224,673,10,565,106,103,0,674,217,223,10,107,106,565,0,215,217,674,10,108,566,567,0,216,675,676,10,133,567,121,0,127,676,284,10,108,107,566,0,216,215,675,10,133,108,567,0,127,216,676,10,568,378,569,0,541,539,495,10,179,227,570,0,644,186,677,10,496,179,571,0,509,655,678,10,482,496,571,0,499,509,678,10,570,227,213,0,677,186,178,10,484,572,574,0,502,486,679,10,572,438,574,0,486,358,679,10,573,174,215,0,680,22,179,10,174,573,168,0,22,680,31,10,428,484,574,0,501,502,679,10,438,428,574,0,358,501,679,10,575,573,215,0,168,680,179,10,573,575,168,0,680,168,31,10,381,577,361,0,555,258,257,10,261,249,584,0,301,316,305,10,267,268,578,0,681,682,683,10,254,260,579,0,318,319,327,11,261,582,583,262,0,301,684,685,302,11,259,262,583,581,0,317,302,686,687,10,260,259,581,0,319,317,688,10,531,585,588,0,608,689,690,10,531,588,518,0,608,690,616,11,529,587,586,532,0,618,691,692,606,11,532,586,585,531,0,606,692,689,608,10,587,529,530,0,691,618,620,10,264,578,263,0,323,693,324,10,244,578,264,0,694,693,323,10,267,578,244,0,681,695,694],\"influencesPerVertex\":4,\"materials\":[{\"DbgName\":\"HM_TshirtMaterial\",\"wireframe\":false,\"shading\":\"standard\",\"opacity\":1,\"specularCoef\":50,\"DbgColor\":15658734,\"visible\":true,\"colorDiffuse\":[1,1,1],\"DbgIndex\":0,\"depthTest\":true,\"transparent\":false,\"blending\":\"NormalBlending\",\"depthWrite\":true,\"colorEmissive\":[0,0,0]}],\"name\":\"tshirt\"};\nvar trousers = {\"_id\":\"trousers\",\"skinIndices\":[8,0,0,0,8,0,0,0,8,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,8,7,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,8,0,0,0,7,8,0,0,8,7,0,0,8,7,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,0,0,0,7,8,0,0,7,8,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,6,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,6,0,0,7,6,0,0,7,6,0,0,7,6,0,0,7,8,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,8,0,0,7,0,0,0,7,8,0,0,7,0,0,0,7,8,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,6,0,0,7,6,2,0,7,6,2,0,7,0,0,0,7,2,0,0,7,6,2,1,7,2,6,1,7,2,0,0,7,2,0,0,7,2,0,0,7,2,0,0,7,2,0,0,7,2,0,0,7,2,6,0,7,2,6,1,7,2,6,0,7,2,6,0,7,6,0,0,7,6,0,0,7,6,0,0,7,6,2,0,6,7,1,0,6,7,0,0,6,7,1,0,7,6,0,0,6,7,0,0,6,7,0,0,6,7,0,0,7,6,2,1,6,7,1,2,7,6,2,1,6,7,1,2,6,1,7,2,6,1,7,2,6,7,1,0,6,7,1,0,6,7,1,0,6,7,0,0,6,1,7,2,6,1,7,2,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,7,0,0,8,0,0,0,7,2,6,1,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,7,8,0,0,8,0,0,0,8,0,0,0,8,0,0,0,2,7,1,6,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,7,0,0,8,7,0,0,7,8,0,0,8,7,0,0,7,8,0,0,8,0,0,0,3,2,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,3,2,0,0,3,0,0,0,8,7,0,0,7,8,0,0,3,2,0,0,7,8,0,0,8,7,0,0,3,2,0,0,8,7,0,0,8,7,0,0,3,0,0,0,2,3,0,0,7,8,0,0,8,7,0,0,8,7,0,0,8,0,0,0,8,7,0,0,8,7,0,0,8,7,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,3,0,0,0,3,0,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,8,0,0,7,8,0,0,7,0,0,0,7,0,0,0,7,8,0,0,7,8,0,0,7,8,0,0,7,0,0,0,7,8,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,8,0,0,7,8,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,6,0,0,7,0,0,0,7,0,0,0,7,6,0,0,7,6,2,0,7,0,0,0,7,2,0,0,7,2,0,0,7,2,0,0,7,2,0,0,7,2,0,0,7,2,0,0,7,2,6,0,7,2,6,0,7,2,6,1,7,0,0,0,7,2,0,0,7,2,6,1,7,2,6,1,7,6,0,0,7,6,0,0,6,7,0,0,6,7,0,0,6,7,0,0,6,7,1,0,7,6,0,0,7,6,0,0,7,6,2,1,7,6,1,2,6,7,1,0,7,6,2,1,7,6,1,2,6,7,1,2,6,7,1,2,6,1,7,2,6,7,0,0,6,7,1,0,6,7,1,0,6,1,7,0,6,1,7,2,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,8,7,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,8,7,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,7,8,0,0,2,3,0,0,3,2,0,0,3,2,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,3,2,0,0,7,8,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,2,0,0,3,2,0,0,3,2,0,0,2,3,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,3,0,0,2,0,0,0,2,3,0,0,2,0,0,0,2,3,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,3,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,3,0,0,2,3,0,0,2,0,0,0,2,7,0,0,2,7,6,1,2,7,1,6,2,7,0,0,2,7,0,0,2,7,0,0,2,7,0,0,2,7,0,0,2,7,0,0,2,7,6,0,2,7,6,1,2,7,6,0,7,2,6,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,1,7,0,2,1,7,0,2,1,0,0,2,0,0,0,2,3,0,0,2,3,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,1,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,1,0,0,2,1,0,0,2,1,0,0,2,1,0,0,2,7,1,6,1,6,2,7,2,1,7,6,1,2,6,7,1,6,2,7,1,2,6,0,6,7,1,0,1,6,2,7,2,1,7,6,1,2,6,7,2,1,0,0,2,1,0,0,2,1,0,0,1,2,6,0,1,2,6,0,2,1,0,0,2,1,0,0,1,2,0,0,1,2,0,0,1,2,0,0,1,6,2,7,7,6,0,0,1,6,2,7,1,2,6,0,1,2,6,0,1,2,6,0,1,2,0,0,2,1,0,0,1,2,6,0,6,7,1,0,1,2,6,7,7,6,0,0,7,6,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,2,0,0,2,3,0,0,3,0,0,0,3,0,0,0,3,2,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,1,0,0,2,1,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,2,0,0,3,0,0,0,3,2,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,2,0,0,3,0,0,0,8,7,0,0,3,2,0,0,3,0,0,0,3,2,0,0,3,0,0,0,8,0,0,0,3,0,0,0,3,0,0,0,8,7,0,0,3,2,0,0,8,0,0,0,3,2,0,0,3,2,0,0,3,0,0,0,3,2,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,3,2,0,0,3,0,0,0,8,0,0,0,3,0,0,0,8,7,0,0,8,0,0,0,8,0,0,0,8,0,0,0,3,2,0,0,2,3,0,0,3,2,0,0,3,2,0,0,3,2,0,0,8,7,0,0,8,7,0,0,2,3,0,0,8,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,2,0,0,3,2,0,0,3,0,0,0,2,3,0,0,3,2,0,0,2,3,0,0,8,0,0,0,2,3,0,0,2,0,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,3,0,0,2,3,0,0,2,0,0,0,2,0,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,3,0,0,2,3,0,0,2,0,0,0,2,0,0,0,2,7,0,0,2,7,0,0,2,7,0,0,2,7,0,0,2,0,0,0,2,7,0,0,2,7,0,0,2,7,6,0,2,7,6,0,2,7,6,1,2,0,0,0,2,7,0,0,2,7,6,1,2,7,1,6,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,1,0,0,2,0,0,0,2,0,0,0,8,0,0,0,2,1,7,0,2,1,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,3,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,1,2,6,7,2,1,7,6,1,2,6,7,1,6,2,7,1,2,6,7,2,1,0,0,2,1,0,0,1,2,6,0,1,2,0,0,1,2,0,0,1,2,6,0,2,1,7,6,2,1,6,7,2,1,7,0,2,1,6,0,1,2,6,7,6,7,1,2,1,6,2,7,1,6,2,7,1,6,2,7,6,1,7,2,1,2,6,0,1,2,6,0,1,2,6,0,6,7,1,2,6,1,7,2,1,6,2,7,1,6,2,7,2,3,0,0,7,8,0,0,7,6,0,0,2,1,0,0,7,2,6,0,2,7,1,0,7,2,6,0,2,7,6,1,7,6,0,0,2,1,0,0,1,2,6,0,6,7,1,0,2,1,0,0,7,6,0,0,6,7,0,0,1,2,6,0,1,2,0,0,6,7,0,0,7,0,0,0,7,6,0,0,7,6,0,0,7,0,0,0,7,0,0,0,7,6,2,0,2,1,7,0,2,1,7,0,2,0,0,0,2,0,0,0,2,0,0,0,2,1,7,0,7,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,3,0,0,7,0,0,0,7,0,0,0,7,8,0,0,2,0,0,0,2,3,0,0,2,3,0,0,7,8,0,0,7,8,0,0,7,0,0,0,7,8,0,0,7,8,0,0,2,3,0,0,2,3,0,0,3,0,0,0,8,0,0,0,3,0,0,0,8,0,0,0,2,1,0,0,2,7,1,6,7,2,6,0,7,6,0,0,2,1,0,0,2,1,0,0,7,6,0,0,7,6,0,0,2,7,1,0,7,2,6,0,1,2,6,0,6,7,1,0,2,7,1,0,7,2,6,0,3,0,0,0,3,2,0,0,3,0,0,0,8,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,3,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,7,0,0,3,2,0,0,8,7,0,0,8,0,0,0,8,7,0,0,7,8,0,0,3,0,0,0,3,2,0,0,8,0,0,0,2,3,0,0,8,7,0,0,8,7,0,0,8,0,0,0,3,2,0,0,8,0,0,0,3,2,0,0,3,0,0,0,8,7,0,0,3,2,0,0,2,3,0,0,3,0,0,0,3,0,0,0,7,8,0,0,8,7,0,0,8,0,0,0,3,0,0,0,3,2,0,0,8,0,0,0,8,7,0,0,3,2,0,0,8,0,0,0,8,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,2,0,0,8,7,0,0,2,0,0,0,2,0,0,0,2,3,0,0,8,0,0,0,7,8,0,0,8,0,0,0,8,0,0,0,8,0,0,0,7,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,7,0,0,0,2,3,0,0,3,0,0,0,2,3,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,7,0,0,3,2,0,0,3,0,0,0,3,0,0,0,2,1,0,0,2,1,0,0,1,2,0,0,1,2,0,0,2,1,0,0,7,6,0,0,7,6,0,0,6,7,0,0,6,7,0,0,7,6,0,0,7,6,0,0,2,7,1,6,2,7,1,6,2,7,1,6,7,2,6,0,7,2,6,1,7,2,6,1,2,7,6,1,7,2,6,0,6,1,7,2,6,1,7,2,7,2,6,1,6,1,7,2,6,1,7,2,7,2,6,1,7,2,6,0,7,2,6,1,6,1,7,2,7,2,6,1,6,1,7,2,6,1,7,2,7,2,6,1,6,1,7,2,7,2,6,0,7,2,6,0,7,2,6,0,2,7,6,1,6,7,1,0,6,7,1,0,6,7,1,0,6,7,0,0,6,1,7,2,6,1,7,2,6,7,0,0,6,7,1,0,6,7,1,0,6,1,7,0,6,1,7,2,1,6,2,7,1,6,2,7,1,2,6,0,1,2,6,0,1,2,6,0,1,2,0,0,1,6,2,7,1,6,2,7,1,2,6,0,1,2,6,0,1,2,6,0,6,1,7,2,6,1,7,2,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0],\"skinWeights\":[0.845869,0,0,0,0.444804,0,0,0,0.86197,0,0,0,0.986434,0,0,0,0.97926,0,0,0,0.836633,0,0,0,0.842059,0,0,0,0.976443,0,0,0,0.977077,0,0,0,0.939337,0,0,0,0.977675,0,0,0,0.950166,0.049581,0,0,0.87105,0,0,0,0.582466,0,0,0,0.902983,0,0,0,0.79579,0,0,0,0.935908,0,0,0,0.94997,0,0,0,0.981469,0,0,0,0.962988,0,0,0,0.996477,0,0,0,0.973393,0,0,0,0.991464,0,0,0,0.994555,0,0,0,0.991623,0,0,0,0.979205,0,0,0,0.942923,0.056949,0,0,0.843449,0.156485,0,0,0.603234,0.396688,0,0,0.990913,0,0,0,0.99479,0,0,0,0.990928,0,0,0,0.994569,0,0,0,0.991765,0,0,0,0.99554,0,0,0,0.991811,0,0,0,0.976551,0,0,0,0.991581,0,0,0,0.977451,0,0,0,0.993187,0,0,0,0.996255,0,0,0,0.995318,0,0,0,0.997191,0,0,0,0.981109,0,0,0,0.976478,0,0,0,0.923781,0.076121,0,0,0.763407,0.236523,0,0,0.932869,0.067016,0,0,0.803705,0.196228,0,0,0.919621,0.080303,0,0,0.735978,0.263948,0,0,0.678633,0.32124,0,0,0.861062,0.138645,0,0,0.578811,0.421094,0,0,0.715491,0.284349,0,0,0.992722,0,0,0,0.886736,0.112831,0,0,0.740668,0.259266,0,0,0.93314,0.066818,0,0,0.887633,0.111945,0,0,0.715156,0.284697,0,0,0.886604,0.113003,0,0,0.691471,0.308406,0,0,0.878662,0.120994,0,0,0.987408,0,0,0,0.925275,0.07431,0,0,0.969477,0.009219,0,0,0.988896,0,0,0,0.985813,0,0,0,0.990771,0,0,0,0.983955,0,0,0,0.973823,0,0,0,0.953045,0.019954,0,0,0.987015,0,0,0,0.978993,0,0,0,0.99011,0,0,0,0.984264,0,0,0,0.961119,0.012015,0,0,0.925723,0.064199,0,0,0.970293,0.000077,0,0,0.939434,0.05502,0,0,0.948178,0.050821,0,0,0.975235,0,0,0,0.985806,0,0,0,0.984509,0,0,0,0.983635,0,0,0,0.941051,0.058227,0,0,0.972919,0.000808,0,0,0.950691,0.046512,0,0,0.976651,0,0,0,0.984853,0,0,0,0.981826,0,0,0,0.952182,0.043523,0,0,0.977623,0,0,0,0.953006,0.041941,0,0,0.978422,0,0,0,0.951442,0.045244,0,0,0.978485,0,0,0,0.98507,0,0,0,0.980526,0,0,0,0.985317,0,0,0,0.9793,0,0,0,0.985543,0,0,0,0.978703,0,0,0,0.980274,0,0,0,0.966888,0,0,0,0.974098,0,0,0,0.952717,0,0,0,0.941084,0.029332,0,0,0.914341,0.038111,0.017719,0,0.849202,0.096396,0.030796,0,0.966453,0,0,0,0.930935,0.037818,0,0,0.776252,0.099919,0.097102,0.003067,0.621283,0.234807,0.0979,0.041631,0.960392,0.005925,0,0,0.909752,0.065223,0,0,0.953975,0.021061,0,0,0.883689,0.092835,0,0,0.949232,0.035053,0,0,0.860537,0.122701,0,0,0.686151,0.251718,0.039573,0,0.549866,0.338806,0.072996,0.026143,0.560243,0.401946,0.006763,0,0.505481,0.454622,0.00928,0,0.868829,0.124758,0,0,0.765923,0.204655,0,0,0.533733,0.441074,0,0,0.726778,0.214088,0.023085,0,0.479373,0.469106,0.006743,0,0.715356,0.249284,0,0,0.810493,0.144496,0.017592,0,0.668355,0.318192,0,0,0.709663,0.269952,0,0,0.714672,0.274356,0,0,0.833505,0.149256,0,0,0.634187,0.229504,0.086564,0.049297,0.52844,0.330466,0.078585,0.062464,0.461626,0.229274,0.204482,0.104517,0.452322,0.2379,0.177858,0.13187,0.737134,0.11886,0.111192,0.015598,0.599945,0.256638,0.086395,0.057006,0.820817,0.129193,0.026467,0,0.803218,0.122151,0.057976,0,0.834019,0.131757,0.001687,0,0.849896,0.12838,0,0,0.735187,0.132155,0.100448,0.014392,0.597092,0.271198,0.078906,0.05279,0.56258,0,0,0,0.89656,0,0,0,0.811557,0,0,0,0.942309,0,0,0,0.959503,0,0,0,0.983765,0,0,0,0.974358,0,0,0,0.988413,0,0,0,0.907387,0,0,0,0.966946,0,0,0,0.983689,0,0,0,0.991788,0,0,0,0.947475,0,0,0,0.979461,0,0,0,0.96363,0,0,0,0.984802,0,0,0,0.901735,0.0982,0,0,0.973259,0,0,0,0.468753,0.261376,0.162436,0.10735,0.989134,0,0,0,0.99404,0,0,0,0.991526,0,0,0,0.99509,0,0,0,0.993825,0,0,0,0.993193,0,0,0,0.879695,0,0,0,0.943983,0,0,0,0.979873,0,0,0,0.720819,0.279018,0,0,0.99031,0,0,0,0.99544,0,0,0,0.973747,0,0,0,0.421641,0.299532,0.145563,0.133178,0.975868,0,0,0,0.983427,0,0,0,0.962685,0,0,0,0.985304,0,0,0,0.993811,0,0,0,0.996454,0,0,0,0.992392,0,0,0,0.996063,0,0,0,0.992695,0,0,0,0.994739,0,0,0,0.993942,0,0,0,0.994895,0,0,0,0.991821,0,0,0,0.981374,0,0,0,0.991887,0,0,0,0.98257,0,0,0,0.995043,0,0,0,0.995186,0,0,0,0.992087,0,0,0,0.983472,0,0,0,0.953593,0.042528,0,0,0.88156,0.118373,0,0,0.756898,0.242978,0,0,0.712457,0.287483,0,0,0.742168,0.257717,0,0,0.995963,0,0,0,0.904135,0.095812,0,0,0.996438,0,0,0,0.955483,0.03891,0,0,0.904097,0.09584,0,0,0.993676,0,0,0,0.992666,0,0,0,0.983763,0,0,0,0.99723,0,0,0,0.997523,0,0,0,0.997388,0,0,0,0.997148,0,0,0,0.994828,0,0,0,0.997379,0,0,0,0.996661,0,0,0,0.997421,0,0,0,0.996928,0,0,0,0.895334,0.10461,0,0,0.995993,0,0,0,0.720765,0.279176,0,0,0.739155,0.260732,0,0,0.702431,0.297498,0,0,0.764176,0.235656,0,0,0.96172,0.026301,0,0,0.956421,0.037049,0,0,0.960976,0.027856,0,0,0.891429,0.10852,0,0,0.992516,0,0,0,0.762671,0.237138,0,0,0.751643,0.248208,0,0,0.862485,0.137473,0,0,0.810107,0.189855,0,0,0.983653,0,0,0,0.82012,0.179841,0,0,0.644254,0.355675,0,0,0.699443,0.300491,0,0,0.553017,0.446901,0,0,0.847223,0.152496,0,0,0.575567,0.424351,0,0,0.832797,0.166971,0,0,0.983561,0,0,0,0.983792,0,0,0,0.913288,0.086421,0,0,0.967149,0.01438,0,0,0.90903,0.090702,0,0,0.966321,0.016109,0,0,0.986082,0,0,0,0.991897,0,0,0,0.986126,0,0,0,0.99199,0,0,0,0.991486,0,0,0,0.985812,0,0,0,0.991134,0,0,0,0.984429,0,0,0,0.971982,0,0,0,0.969007,0,0,0,0.908803,0.090923,0,0,0.96656,0.015546,0,0,0.909582,0.09008,0,0,0.96634,0.015626,0,0,0.986256,0,0,0,0.991674,0,0,0,0.985738,0,0,0,0.990336,0,0,0,0.912051,0.087558,0,0,0.967162,0.013657,0,0,0.985583,0,0,0,0.989124,0,0,0,0.924933,0.074529,0,0,0.97132,0.004437,0,0,0.943536,0.055677,0,0,0.976695,0,0,0,0.936271,0.063077,0,0,0.974457,0,0,0,0.985774,0,0,0,0.985952,0,0,0,0.985931,0,0,0,0.981131,0,0,0,0.986062,0,0,0,0.983859,0,0,0,0.917442,0.082095,0,0,0.968768,0.009981,0,0,0.985524,0,0,0,0.987498,0,0,0,0.98974,0,0,0,0.980453,0,0,0,0.986135,0,0,0,0.972007,0,0,0,0.960743,0.000749,0,0,0.982677,0,0,0,0.96327,0,0,0,0.900061,0.067758,0,0,0.85917,0.077217,0.043073,0,0.972692,0,0,0,0.932942,0.043802,0,0,0.956938,0.021217,0,0,0.888153,0.096951,0,0,0.965715,0.002173,0,0,0.91418,0.067562,0,0,0.681649,0.285314,0,0,0.499192,0.456933,0.014326,0,0.78694,0.167304,0.016168,0,0.458159,0.422012,0.089889,0.009449,0.977895,0,0,0,0.948487,0.014055,0,0,0.774317,0.107845,0.086656,0.012086,0.54635,0.312272,0.091975,0.048494,0.57735,0.415476,0,0,0.673758,0.30436,0,0,0.724572,0.26308,0,0,0.837573,0.142871,0,0,0.82513,0.143565,0,0,0.803476,0.138884,0.037823,0,0.818318,0.143625,0,0,0.655264,0.303891,0,0,0.770319,0.155953,0.041909,0.005407,0.612395,0.313779,0.025781,0.021801,0.637856,0.29549,0.036674,0,0.674532,0.168614,0.102449,0.05433,0.519206,0.322288,0.082043,0.076424,0.371205,0.309109,0.171994,0.14765,0.609538,0.243496,0.099011,0.045872,0.530196,0.218068,0.16609,0.085624,0.852804,0.120821,0,0,0.845273,0.117491,0.007889,0,0.828646,0.111259,0.04545,0,0.768844,0.113042,0.093656,0,0.636101,0.251564,0.071665,0.031324,0.738731,0,0,0,0.925861,0,0,0,0.863973,0,0,0,0.556294,0,0,0,0.896513,0,0,0,0.97033,0,0,0,0.948122,0,0,0,0.980946,0,0,0,0.960778,0,0,0,0.745917,0.254014,0,0,0.842289,0,0,0,0.841034,0,0,0,0.939599,0,0,0,0.977875,0,0,0,0.923119,0.07682,0,0,0.97767,0,0,0,0.97917,0,0,0,0.857321,0,0,0,0.507617,0,0,0,0.883835,0,0,0,0.982251,0,0,0,0.993092,0,0,0,0.996289,0,0,0,0.995167,0,0,0,0.997215,0,0,0,0.982644,0,0,0,0.991895,0,0,0,0.995645,0,0,0,0.991454,0,0,0,0.995036,0,0,0,0.991746,0,0,0,0.9949,0,0,0,0.991989,0,0,0,0.976912,0,0,0,0.991766,0,0,0,0.977609,0,0,0,0.875194,0.124422,0,0,0.880553,0.118967,0,0,0.752834,0.247097,0,0,0.939626,0.060333,0,0,0.665838,0.334005,0,0,0.865377,0.134171,0,0,0.551325,0.448559,0,0,0.843354,0.156244,0,0,0.87602,0.123504,0,0,0.699998,0.299827,0,0,0.921157,0.07877,0,0,0.73863,0.261292,0,0,0.923835,0.076074,0,0,0.763754,0.236176,0,0,0.932852,0.067047,0,0,0.803184,0.196753,0,0,0.7218,0.278041,0,0,0.678252,0.321615,0,0,0.860454,0.139239,0,0,0.581934,0.417971,0,0,0.9926,0,0,0,0.994992,0,0,0,0.991835,0,0,0,0.979395,0,0,0,0.943239,0.056653,0,0,0.84488,0.155061,0,0,0.602929,0.396994,0,0,0.947017,0.051807,0,0,0.974651,0,0,0,0.983378,0,0,0,0.98003,0,0,0,0.944711,0.054104,0,0,0.974801,0,0,0,0.940381,0.058509,0,0,0.97414,0,0,0,0.946551,0.052247,0,0,0.974853,0,0,0,0.98298,0,0,0,0.97636,0,0,0,0.982851,0,0,0,0.975284,0,0,0,0.98318,0,0,0,0.978163,0,0,0,0.94605,0.052862,0,0,0.974053,0,0,0,0.983653,0,0,0,0.982532,0,0,0,0.985342,0,0,0,0.940758,0.058483,0,0,0.972954,0.000599,0,0,0.963407,0,0,0,0.92448,0.048984,0,0,0.583413,0.269683,0.074247,0.072455,0.759629,0.110776,0.087216,0.034356,0.948453,0.030546,0,0,0.873107,0.102366,0,0,0.942615,0.046597,0,0,0.846797,0.135617,0,0,0.956075,0.013212,0,0,0.9012,0.072806,0,0,0.662912,0.274652,0.029507,0,0.508612,0.378408,0.067217,0.040993,0.53693,0.42504,0.006222,0,0.499686,0.460277,0.00946,0,0.972289,0,0,0,0.949815,0,0,0,0.97944,0,0,0,0.965437,0,0,0,0.909625,0.030529,0.025638,0,0.843568,0.090271,0.040282,0,0.938654,0.027767,0,0,0.987253,0,0,0,0.927476,0.072113,0,0,0.970633,0.006924,0,0,0.989004,0,0,0,0.98643,0,0,0,0.991165,0,0,0,0.983538,0,0,0,0.972791,0,0,0,0.950339,0.022275,0,0,0.986823,0,0,0,0.978101,0,0,0,0.990263,0,0,0,0.983934,0,0,0,0.958013,0.016797,0,0,0.916129,0.073127,0,0,0.968167,0.004139,0,0,0.930197,0.064323,0,0,0.433396,0.227946,0.17279,0.165767,0.373253,0.257697,0.225794,0.143206,0.617016,0.208156,0.098049,0.07668,0.497676,0.318323,0.114069,0.069888,0.510229,0.347854,0.080322,0.061579,0.791096,0.117906,0.072854,0,0.796602,0.134136,0.052743,0,0.70101,0.161263,0.102188,0.021051,0.720996,0.205635,0.030988,0.015551,0.480051,0.454398,0.030098,0.000933,0.771321,0.197486,0,0,0.492975,0.477447,0,0,0.888615,0.083193,0,0,0.74099,0.215608,0.013626,0,0.821337,0.122177,0.039364,0,0.796323,0.187668,0,0,0.511913,0.476264,0,0,0.759647,0.21641,0,0,0.777228,0.211085,0,0,0.861959,0.117846,0,0,0.509586,0.360559,0.072819,0.057021,0.892163,0.083628,0,0,0.696973,0.176931,0.091378,0.019412,0.798697,0.106175,0.077351,0,0.827562,0.108898,0.051049,0,0.848855,0.108451,0.017868,0,0.871159,0.102965,0,0,0.829463,0.164673,0,0,0.718254,0.205481,0.056288,0,0.716735,0.22373,0.032083,0,0.649895,0.162064,0.142212,0.041615,0.939966,0.053963,0,0,0.857616,0.135397,0,0,0.850768,0,0,0,0.932465,0,0,0,0.976561,0,0,0,0.927118,0.072822,0,0,0.7091,0.290721,0,0,0.989216,0,0,0,0.99506,0,0,0,0.752166,0.247762,0,0,0.957013,0,0,0,0.983578,0,0,0,0.973153,0,0,0,0.993791,0,0,0,0.979731,0,0,0,0.983704,0,0,0,0.991793,0,0,0,0.995896,0,0,0,0.993998,0,0,0,0.996634,0,0,0,0.997482,0,0,0,0.9813,0,0,0,0.996882,0,0,0,0.972306,0,0,0,0.988316,0,0,0,0.978892,0,0,0,0.990651,0,0,0,0.994883,0,0,0,0.995023,0,0,0,0.993381,0,0,0,0.996011,0,0,0,0.994497,0,0,0,0.996543,0,0,0,0.937952,0.055781,0,0,0.850387,0.142494,0,0,0.42144,0,0,0,0.790626,0,0,0,0.936033,0,0,0,0.908736,0,0,0,0.967541,0,0,0,0.972212,0,0,0,0.988055,0,0,0,0.984175,0,0,0,0.99222,0,0,0,0.954225,0,0,0,0.981846,0,0,0,0.990294,0,0,0,0.994633,0,0,0,0.997087,0,0,0,0.997531,0,0,0,0.9973,0,0,0,0.99716,0,0,0,0.94453,0.055434,0,0,0.995013,0,0,0,0.950548,0.048819,0,0,0.995431,0,0,0,0.997415,0,0,0,0.996974,0,0,0,0.997519,0,0,0,0.996755,0,0,0,0.947907,0.052055,0,0,0.984541,0,0,0,0.946183,0.053778,0,0,0.884158,0.115798,0,0,0.996866,0,0,0,0.958489,0.032798,0,0,0.997138,0,0,0,0.983426,0,0,0,0.992828,0,0,0,0.98398,0,0,0,0.958473,0.03276,0,0,0.958891,0.032086,0,0,0.994437,0,0,0,0.822494,0.177465,0,0,0.825401,0.174558,0,0,0.983775,0,0,0,0.863474,0.136484,0,0,0.524934,0.474975,0,0,0.83172,0.167948,0,0,0.566785,0.433121,0,0,0.824453,0.175271,0,0,0.649644,0.350277,0,0,0.996549,0,0,0,0.996125,0,0,0,0.993205,0,0,0,0.941172,0.058792,0,0,0.997174,0,0,0,0.99231,0,0,0,0.995573,0,0,0,0.718778,0.281165,0,0,0.742378,0.257506,0,0,0.961056,0.027733,0,0,0.892124,0.10783,0,0,0.961895,0.026015,0,0,0.884142,0.115812,0,0,0.958309,0.033222,0,0,0.751435,0.248401,0,0,0.992465,0,0,0,0.994198,0,0,0,0.995296,0,0,0,0.995434,0,0,0,0.9955,0,0,0,0.992062,0,0,0,0.981555,0,0,0,0.992164,0,0,0,0.982777,0,0,0,0.996265,0,0,0,0.995725,0,0,0,0.992335,0,0,0,0.983543,0,0,0,0.953656,0.042459,0,0,0.881931,0.118012,0,0,0.330225,0,0,0,0.761293,0.238585,0,0,0.712374,0.287569,0,0,0.745723,0.254163,0,0,0.983455,0,0,0,0.936542,0.062515,0,0,0.973341,0,0,0,0.932269,0.066958,0,0,0.97211,0.001566,0,0,0.92228,0.077093,0,0,0.969698,0.007189,0,0,0.983612,0,0,0,0.978101,0,0,0,0.984307,0,0,0,0.981533,0,0,0,0.98457,0,0,0,0.984329,0,0,0,0.915817,0.08365,0,0,0.967886,0.011396,0,0,0.984766,0,0,0,0.986362,0,0,0,0.909967,0.089668,0,0,0.966586,0.014997,0,0,0.910557,0.089159,0,0,0.96747,0.013682,0,0,0.985748,0,0,0,0.990044,0,0,0,0.986702,0,0,0,0.991835,0,0,0,0.911709,0.087855,0,0,0.966923,0.013914,0,0,0.985275,0,0,0,0.988488,0,0,0,0.951267,0.030877,0,0,0.877685,0.106519,0,0,0.961349,0.009166,0,0,0.906014,0.074376,0,0,0.969641,0,0,0,0.925996,0.051892,0,0,0.662283,0.305183,0,0,0.485695,0.470339,0.014269,0,0.780886,0.171935,0.006912,0,0.474542,0.413389,0.081241,0.011221,0.975556,0,0,0,0.943602,0.019904,0,0,0.526109,0.32885,0.081856,0.063025,0.749457,0.117439,0.088585,0.038752,0.985379,0,0,0,0.970282,0,0,0,0.989633,0,0,0,0.979811,0,0,0,0.959092,0.000437,0,0,0.981241,0,0,0,0.960538,0,0,0,0.996381,0,0,0,0.843492,0.081659,0.051117,0,0.891968,0.070362,0,0,0.915771,0.083943,0,0,0.968539,0.011629,0,0,0.911385,0.088348,0,0,0.967618,0.013522,0,0,0.986848,0,0,0,0.992357,0,0,0,0.986819,0,0,0,0.992377,0,0,0,0.991799,0,0,0,0.985968,0,0,0,0.991369,0,0,0,0.98449,0,0,0,0.971634,0,0,0,0.968575,0,0,0,0.984993,0,0,0,0.34838,0.251589,0.223532,0.176456,0.615445,0.195828,0.116962,0.07169,0.427605,0.374034,0.107951,0.090371,0.468699,0.291602,0.135865,0.103813,0.612639,0.196863,0.133464,0.057016,0.554148,0.43861,0,0,0.660923,0.312936,0,0,0.805275,0.121319,0.057432,0,0.754324,0.231855,0,0,0.856835,0.120078,0,0,0.836927,0.124727,0.009273,0,0.739636,0.171502,0.051985,0.023616,0.56649,0.34215,0.050218,0.032218,0.803342,0.151143,0.000904,0,0.63158,0.318231,0.006189,0,0.648402,0.26689,0.057537,0.00431,0.684781,0.171326,0.101979,0.033781,0.55077,0.34089,0.059514,0.047638,0.475288,0.319583,0.119721,0.085383,0.738367,0.154833,0.077744,0.008098,0.563237,0.230481,0.127415,0.078842,0.828541,0.095582,0.061622,0,0.867412,0.100698,0.000388,0,0.853937,0.100319,0.023011,0,0.751234,0.117886,0.102817,0.006108,0.625581,0.236426,0.088892,0.048182,0.728809,0.13953,0.098571,0.016164,0.543121,0.32388,0.073786,0.059202,0.810143,0.189678,0,0,0.805751,0.194072,0,0,0.914647,0.071115,0,0,0.906608,0.077664,0,0,0.869419,0.076514,0.034585,0,0.858389,0.086025,0.019371,0,0.797707,0.142489,0.037257,0,0.779781,0.159001,0.011133,0.010494,0.841759,0.145985,0,0,0.802972,0.184824,0,0,0.661582,0.282685,0.025475,0,0.649577,0.305936,0.007622,0,0.517735,0.47686,0,0,0.689114,0.303521,0,0,0.821333,0.14916,0,0,0.841523,0.122029,0.007191,0,0.701551,0.26858,0,0,0.684725,0.290548,0,0,0.960673,0,0,0,0.750963,0.208089,0,0,0.928781,0.03523,0,0,0.977654,0,0,0,0.984886,0,0,0,0.871765,0.091546,0.003055,0,0.925386,0.030631,0.000148,0,0.750146,0.202661,0.00136,0,0.958295,0,0,0,0.976128,0,0,0,0.984027,0,0,0,0.868796,0.087859,0.007622,0,0.984719,0,0,0,0.984744,0,0,0,0.973435,0,0,0,0.984155,0,0,0,0.944323,0.05472,0,0,0.984463,0,0,0,0.973939,0,0,0,0.945397,0.053708,0,0,0.9853,0,0,0,0.971701,0.004,0,0,0.935017,0.064416,0,0,0.971261,0.00493,0,0,0.934558,0.064887,0,0,0.985031,0,0,0,0.84069,0.159081,0,0,0.874145,0.125493,0,0,0.839512,0.160252,0,0,0.872387,0.127223,0,0,0.316411,0,0,0,0.377574,0,0,0,0.991034,0,0,0,0.989233,0,0,0,0.943904,0.008069,0,0,0.814511,0.12808,0.007695,0.006509,0.826571,0.120337,0.02476,0,0.947573,0.007997,0,0,0.837904,0.13774,0,0,0.916561,0.062082,0,0,0.843865,0.134968,0,0,0.919904,0.061149,0,0,0.873783,0.072104,0.017736,0,0.884815,0.066373,0.022479,0,0.813941,0.122531,0.049084,0,0.810705,0.140072,0.024661,0,0.92044,0.021054,0.014066,0,0.927366,0.015228,0.014077,0,0.996371,0,0,0,0.801856,0.198095,0,0,0.994904,0,0,0,0.996303,0,0,0,0.992658,0,0,0,0.99306,0,0,0,0.994162,0,0,0,0.994283,0,0,0,0.988753,0,0,0,0.988085,0,0,0,0.995272,0,0,0,0.768525,0.231426,0,0,0.961504,0.026776,0,0,0.961587,0.026538,0,0,0.988716,0,0,0,0.724279,0.275662,0,0,0.743441,0.256433,0,0,0.991494,0,0,0,0.724757,0.275183,0,0,0.983626,0,0,0,0.742828,0.257035,0,0,0.903129,0.096813,0,0,0.961189,0.027398,0,0,0.996894,0,0,0,0.718217,0.281717,0,0,0.995923,0,0,0,0.902419,0.097532,0,0,0.997367,0,0,0,0.715949,0.283988,0,0,0.961266,0.027295,0,0,0.782346,0.217429,0,0,0.983783,0,0,0,0.99686,0,0,0,0.786839,0.212968,0,0,0.689973,0.309963,0,0,0.983647,0,0,0,0.996183,0,0,0,0.686705,0.313233,0,0,0.995845,0,0,0,0.896194,0.103739,0,0,0.901497,0.09845,0,0,0.421402,0,0,0,0.984034,0,0,0,0.994565,0,0,0,0.994622,0,0,0,0.948053,0,0,0,0.941669,0,0,0,0.938975,0,0,0,0.945746,0,0,0,0.940783,0,0,0,0.955784,0,0,0,0.933547,0.066404,0,0,0.928418,0.071532,0,0,0.973569,0,0,0,0.983918,0,0,0,0.944657,0.05436,0,0,0.98703,0,0,0,0.94579,0.053296,0,0,0.990912,0,0,0,0.996658,0,0,0,0.997681,0,0,0,0.9844,0,0,0,0.990369,0,0,0,0.997697,0,0,0,0.959134,0,0,0,0.993777,0,0,0,0.983734,0,0,0,0.994285,0,0,0,0.964712,0,0,0,0.985772,0,0,0,0.974184,0,0,0,0.87137,0.128213,0,0,0.977064,0,0,0,0.709994,0.289833,0,0,0.992905,0,0,0,0.993448,0,0,0,0.977849,0,0,0,0.744724,0.255217,0,0,0.766872,0.233066,0,0,0.978832,0,0,0,0.993751,0,0,0,0.635823,0.352131,0,0,0.934694,0.055386,0,0,0.854833,0.120492,0,0,0.741025,0.24218,0,0,0.85528,0.133644,0,0,0.856687,0.131225,0,0,0.660173,0.325408,0,0,0.828303,0.143372,0,0,0.698397,0.282005,0,0,0.93468,0.055454,0,0,0.828498,0.156503,0,0,0.469122,0.246227,0.161621,0.122946,0.826408,0.116273,0.010239,0.003783,0.630167,0.222461,0.078718,0.068505,0.835775,0.111324,0.024744,0,0.640731,0.21972,0.092769,0.043273,0.506319,0.223513,0.170922,0.099164,0.654384,0.269782,0.04885,0.002296,0.674536,0.253929,0.05122,0,0.511458,0.377843,0.060484,0.050207,0.431282,0.324356,0.133942,0.110399,0.434477,0.410249,0.097818,0.0573,0.501815,0.362262,0.07431,0.061603,0.316023,0.247369,0.23799,0.198575,0.391432,0.331092,0.150807,0.126582,0.470082,0.439931,0.067309,0,0.470216,0.414801,0.072621,0.034206,0.373316,0.259287,0.189967,0.177379,0.331098,0.302703,0.227347,0.13875,0.491791,0.3771,0.06802,0.063075,0.492662,0.364104,0.074211,0.069006,0.455453,0.385306,0.096637,0.062407,0.460199,0.333457,0.106708,0.09961,0.483468,0.472407,0.014687,0,0.49392,0.46585,0.010894,0,0.502486,0.457507,0.009447,0,0.44654,0.436482,0.0866,0.010326,0.820817,0.129193,0.026467,0,0.803218,0.122151,0.057976,0,0.834019,0.131757,0.001687,0,0.849896,0.12838,0,0,0.735187,0.132155,0.100448,0.014392,0.597092,0.271198,0.078906,0.05279,0.852804,0.120821,0,0,0.845273,0.117491,0.007889,0,0.828646,0.111259,0.04545,0,0.768844,0.113042,0.093656,0,0.636101,0.251564,0.071665,0.031324,0.509586,0.360559,0.072819,0.057021,0.696973,0.176931,0.091378,0.019412,0.798697,0.106175,0.077351,0,0.827562,0.108898,0.051049,0,0.848855,0.108451,0.017868,0,0.871159,0.102965,0,0,0.55077,0.34089,0.059514,0.047638,0.738367,0.154833,0.077744,0.008098,0.828541,0.095582,0.061622,0,0.867412,0.100698,0.000388,0,0.853937,0.100319,0.023011,0,0.511458,0.377843,0.060484,0.050207,0.491791,0.3771,0.06802,0.063075,0.444804,0,0,0,0.582466,0,0,0,0.79579,0,0,0,0.56258,0,0,0,0.811557,0,0,0,0.907387,0,0,0,0.947475,0,0,0,0.96363,0,0,0,0.973259,0,0,0,0.879695,0,0,0,0.943983,0,0,0,0.973747,0,0,0,0.975868,0,0,0,0.962685,0,0,0,0.738731,0,0,0,0.556294,0,0,0,0.507617,0,0,0,0.850768,0,0,0,0.932465,0,0,0,0.957013,0,0,0,0.973153,0,0,0,0.979731,0,0,0,0.9813,0,0,0,0.972306,0,0,0,0.978892,0,0,0,0.42144,0,0,0,0.790626,0,0,0,0.908736,0,0,0,0.954225,0,0,0,0.330225,0,0,0,0.316411,0,0,0,0.377574,0,0,0,0.421402,0,0,0],\"faces\":[10,549,562,563,0,0,1,2,10,349,816,815,0,3,4,5,10,823,19,21,0,6,7,8,10,809,238,551,0,9,10,11,10,15,16,14,0,12,13,14,10,361,363,366,0,15,16,17,10,774,810,564,0,18,19,20,10,17,18,10,0,21,22,23,10,215,827,826,0,24,25,26,10,14,19,17,0,14,7,21,10,14,16,21,0,14,13,8,10,12,17,9,0,27,21,28,10,808,12,6,0,29,27,30,10,0,1,750,0,31,32,33,10,813,8,4,0,34,35,36,10,7,8,813,0,37,35,34,10,29,30,32,0,38,39,40,10,33,34,30,0,41,42,39,10,35,36,38,0,43,44,45,10,55,44,36,0,46,47,44,10,42,40,39,0,48,49,50,10,39,40,34,0,50,49,42,10,543,564,550,0,51,20,52,10,773,211,182,0,53,54,55,10,30,35,37,0,39,43,56,10,34,55,35,0,42,46,43,10,843,43,819,0,57,58,59,10,218,238,809,0,60,10,9,10,46,48,47,0,61,62,63,10,49,50,46,0,64,65,61,10,743,745,52,0,66,67,68,10,372,818,494,0,69,70,71,10,809,43,811,0,9,58,72,10,218,561,556,0,73,74,75,10,63,61,60,0,76,77,78,10,343,57,386,0,79,80,81,10,839,367,382,0,82,83,84,10,49,348,343,0,64,85,79,10,43,843,842,0,58,57,86,10,842,55,34,0,86,46,42,10,56,88,81,0,87,88,89,10,46,51,53,0,61,90,91,10,44,843,348,0,47,57,85,10,374,845,372,0,92,93,69,10,495,371,378,0,94,95,96,10,748,840,387,0,97,98,99,10,31,32,23,0,100,40,101,10,24,37,38,0,102,56,45,10,32,37,24,0,40,56,102,10,26,47,48,0,103,63,62,10,27,48,53,0,104,62,91,10,45,47,38,0,105,63,45,10,44,49,45,0,47,64,105,10,25,38,47,0,106,45,63,10,7,29,31,0,37,38,100,10,10,33,29,0,23,41,38,10,39,18,823,0,50,22,6,10,18,39,33,0,22,50,41,10,4,8,31,0,36,35,100,10,743,742,66,0,66,107,108,10,69,68,744,0,109,110,111,10,742,744,68,0,107,111,110,10,73,74,76,0,112,113,114,10,77,78,80,0,115,116,117,10,71,74,73,0,118,113,112,10,479,703,72,0,119,120,121,10,74,77,79,0,113,115,122,10,72,77,74,0,121,115,113,10,441,417,734,0,123,124,125,10,231,584,605,0,126,127,128,10,96,97,95,0,129,130,131,10,94,95,93,0,132,131,133,10,102,103,101,0,134,135,136,10,98,100,101,0,137,138,136,10,88,89,82,0,88,139,140,10,84,90,91,0,141,142,143,10,92,93,89,0,144,133,139,10,98,99,91,0,137,145,143,10,97,102,100,0,130,134,138,10,95,100,98,0,131,138,137,10,389,396,701,0,146,147,148,10,93,98,90,0,133,137,142,10,89,90,84,0,139,142,141,10,104,722,719,0,149,150,151,10,455,704,449,0,152,153,154,10,120,118,117,0,155,156,157,10,115,117,118,0,158,157,156,10,111,112,107,0,159,160,161,10,110,109,113,0,162,163,164,10,115,116,112,0,158,165,160,10,116,707,705,0,165,166,167,10,105,719,721,0,168,151,169,10,120,123,121,0,155,170,171,10,708,430,425,0,172,173,174,10,107,112,705,0,161,160,167,10,745,743,65,0,67,66,175,10,222,220,211,0,176,177,54,10,70,104,105,0,178,149,168,10,470,704,468,0,179,153,180,10,71,105,108,0,118,168,181,10,73,75,69,0,112,182,109,10,70,73,67,0,178,112,183,10,723,722,104,0,184,150,149,10,119,117,101,0,185,157,136,10,99,101,117,0,145,136,157,10,99,115,111,0,145,158,159,10,85,91,111,0,186,143,159,10,83,104,70,0,187,149,178,10,680,694,763,0,188,189,190,10,126,720,127,0,191,192,193,10,133,715,135,0,194,195,196,10,138,139,137,0,197,198,199,10,139,693,689,0,198,200,201,10,128,136,137,0,202,203,199,10,435,438,706,0,204,205,206,10,696,695,850,0,207,208,209,10,127,129,487,0,193,210,211,10,760,857,759,0,212,213,214,10,754,642,646,0,215,216,217,10,127,130,133,0,193,218,194,10,118,121,707,0,156,171,166,10,130,487,464,0,218,211,219,10,145,135,715,0,220,196,195,10,140,689,693,0,221,201,200,10,126,858,703,0,191,222,120,10,113,114,138,0,164,223,197,10,110,113,136,0,162,164,203,10,113,705,707,0,164,167,166,10,149,151,150,0,224,225,226,10,152,153,155,0,227,228,229,10,151,157,156,0,225,230,231,10,155,159,158,0,229,232,233,10,152,154,151,0,227,234,225,10,154,158,157,0,234,233,230,10,161,163,162,0,235,236,237,10,584,231,232,0,127,126,238,10,168,170,169,0,239,240,241,10,170,792,172,0,240,242,243,10,555,803,224,0,244,245,246,10,768,541,373,0,247,248,249,10,552,560,230,0,250,251,252,10,781,184,183,0,253,254,255,10,186,188,187,0,256,257,258,10,529,817,353,0,259,260,261,10,509,511,508,0,262,263,264,10,770,186,185,0,265,256,266,10,183,184,175,0,255,254,267,10,188,178,177,0,257,268,269,10,167,169,163,0,270,241,236,10,213,605,772,0,271,128,272,10,805,572,790,0,273,274,275,10,62,60,844,0,276,78,277,10,185,187,184,0,266,258,254,10,187,177,175,0,258,269,267,10,511,516,507,0,263,278,279,10,157,161,160,0,230,235,280,10,159,168,167,0,232,239,270,10,158,167,161,0,233,270,235,10,189,190,192,0,281,282,283,10,194,196,195,0,284,285,286,10,191,192,198,0,287,283,288,10,195,196,200,0,286,285,289,10,193,195,192,0,290,286,283,10,192,195,199,0,283,286,291,10,780,200,196,0,292,289,285,10,821,734,417,0,293,125,124,10,604,602,804,0,294,295,296,10,565,570,227,0,297,298,299,10,166,312,863,0,300,301,302,10,326,166,864,0,303,300,304,10,790,575,770,0,275,305,265,10,586,805,577,0,306,273,307,10,217,215,214,0,308,309,310,10,220,222,221,0,177,176,311,10,219,575,655,0,312,305,313,10,222,217,216,0,176,308,314,10,561,773,556,0,74,53,75,10,833,832,497,0,315,316,317,10,772,655,572,0,272,313,274,10,773,561,217,0,53,74,308,10,205,204,801,0,318,319,320,10,788,232,231,0,321,238,126,10,562,549,541,0,322,323,248,10,549,550,672,0,323,324,325,10,245,243,242,0,326,327,328,10,28,801,202,0,329,330,331,10,226,783,782,0,332,333,334,10,786,586,576,0,335,306,336,10,239,244,242,0,337,338,328,10,244,239,236,0,338,337,339,10,581,580,560,0,340,341,251,10,552,227,791,0,250,299,342,10,573,557,767,0,343,344,345,10,558,798,771,0,346,347,348,10,577,198,199,0,307,288,291,10,205,226,225,0,318,332,349,10,175,177,836,0,267,269,350,10,807,223,554,0,351,352,353,10,779,554,594,0,354,353,355,10,5,6,9,0,356,30,28,10,231,213,786,0,126,271,335,10,153,189,191,0,228,281,287,10,191,197,159,0,287,357,232,10,206,208,170,0,358,359,240,10,208,790,792,0,359,275,242,10,815,817,354,0,5,260,360,10,825,21,836,0,361,8,362,10,219,221,188,0,312,311,257,10,188,221,216,0,257,311,314,10,575,219,186,0,305,312,256,10,197,206,168,0,357,358,239,10,248,249,251,0,363,364,365,10,252,253,255,0,366,367,368,10,249,252,254,0,364,366,369,10,257,259,258,0,370,371,372,10,716,483,482,0,373,374,375,10,260,261,259,0,376,377,371,10,263,265,264,0,378,379,380,10,269,268,266,0,381,382,383,10,279,277,276,0,384,385,386,10,275,279,278,0,387,384,388,10,284,285,283,0,389,390,391,10,285,284,280,0,390,389,392,10,271,287,286,0,393,394,395,10,273,289,288,0,396,397,398,10,264,265,271,0,380,379,393,10,287,275,274,0,394,387,399,10,269,273,272,0,381,396,400,10,288,289,281,0,398,397,401,10,268,265,263,0,382,379,378,10,279,284,282,0,384,389,402,10,284,279,275,0,389,384,387,10,265,268,272,0,379,382,400,10,288,280,275,0,398,392,387,10,272,288,287,0,400,398,394,10,291,293,292,0,403,404,405,10,756,294,297,0,406,407,408,10,304,302,301,0,409,410,411,10,300,304,303,0,412,409,413,10,866,308,306,0,414,415,416,10,296,310,309,0,417,418,419,10,293,756,766,0,404,406,420,10,292,293,296,0,405,404,417,10,310,300,299,0,418,412,421,10,293,291,294,0,404,403,407,10,755,307,304,0,422,423,409,10,862,755,300,0,424,422,412,10,624,579,787,0,425,426,427,10,307,305,302,0,423,428,410,10,863,312,755,0,302,301,422,10,251,263,262,0,365,378,429,10,267,266,254,0,430,383,369,10,254,266,263,0,369,383,378,10,259,291,290,0,371,403,431,10,852,849,757,0,432,433,434,10,261,294,291,0,377,407,403,10,256,258,255,0,435,372,368,10,290,292,269,0,431,405,381,10,303,301,283,0,413,411,391,10,303,285,281,0,413,390,401,10,292,295,273,0,405,436,396,10,289,309,299,0,397,419,421,10,295,309,289,0,436,419,397,10,258,290,267,0,372,431,430,10,858,132,709,0,222,437,438,10,320,712,323,0,439,440,441,10,322,321,319,0,442,443,444,10,812,4,153,0,445,36,446,10,690,700,870,0,447,448,449,10,325,324,321,0,450,451,443,10,320,319,759,0,439,444,214,10,314,718,712,0,452,453,440,10,327,328,326,0,454,455,303,10,327,325,322,0,454,450,442,10,855,330,317,0,456,457,458,10,331,318,764,0,459,460,461,10,332,697,318,0,462,463,460,10,323,318,697,0,441,460,463,10,321,298,297,0,443,464,408,10,178,834,836,0,268,465,350,10,297,760,319,0,408,212,444,10,324,311,298,0,451,466,464,10,556,182,209,0,75,55,467,10,334,337,338,0,468,469,470,10,355,357,3,0,471,472,473,10,358,769,544,0,474,475,476,10,502,774,246,0,477,18,478,10,57,844,60,0,80,277,78,10,838,371,495,0,479,95,94,10,749,352,351,0,480,481,482,10,125,490,489,0,483,484,485,10,340,346,347,0,486,487,488,10,340,342,338,0,486,489,470,10,338,342,339,0,470,489,490,10,345,816,346,0,491,4,487,10,336,344,346,0,492,493,487,10,835,836,21,0,494,362,8,10,345,344,601,0,491,493,495,10,714,313,490,0,496,497,484,10,833,339,829,0,498,490,499,10,0,813,812,0,31,34,445,10,816,349,347,0,4,3,488,10,355,356,358,0,471,500,474,10,365,363,362,0,501,16,502,10,360,362,363,0,503,502,16,10,846,494,818,0,504,71,70,10,369,367,366,0,505,83,17,10,769,358,356,0,475,474,500,10,355,360,361,0,471,503,15,10,748,735,822,0,97,506,507,10,838,748,822,0,479,97,507,10,215,217,561,0,309,308,74,10,735,733,820,0,506,508,509,10,368,366,363,0,510,17,16,10,733,734,821,0,508,125,293,10,556,773,182,0,75,53,55,10,844,57,819,0,277,80,59,10,845,373,818,0,93,249,70,10,374,375,377,0,92,511,512,10,379,378,375,0,513,96,511,10,384,385,383,0,514,515,516,10,380,382,383,0,517,84,516,10,358,830,20,0,474,518,519,10,379,372,498,0,513,69,520,10,84,85,723,0,141,186,184,10,380,381,498,0,517,521,520,10,370,54,176,0,522,523,524,10,50,343,176,0,65,79,524,10,538,542,810,0,525,526,19,10,389,387,383,0,146,99,516,10,82,84,828,0,140,141,527,10,381,840,495,0,521,98,94,10,841,366,367,0,528,17,83,10,364,390,391,0,529,530,531,10,392,393,369,0,532,533,505,10,365,391,392,0,501,531,532,10,394,395,385,0,534,535,515,10,815,816,345,0,5,4,491,10,5,814,813,0,356,536,34,10,395,396,389,0,535,147,146,10,672,359,373,0,325,537,249,10,369,384,382,0,505,514,84,10,847,841,839,0,538,528,82,10,57,343,348,0,80,79,85,10,393,394,384,0,533,534,514,10,341,3,342,0,539,473,489,10,364,362,349,0,529,502,3,10,347,349,362,0,488,3,502,10,341,347,360,0,539,488,503,10,354,390,364,0,360,530,529,10,402,404,403,0,540,541,542,10,401,405,406,0,543,544,545,10,408,410,409,0,546,547,548,10,411,412,408,0,549,550,546,10,413,822,820,0,551,507,509,10,415,821,729,0,552,293,553,10,397,413,414,0,554,551,555,10,415,416,400,0,552,556,557,10,398,406,405,0,558,545,544,10,400,412,411,0,557,550,549,10,407,409,404,0,559,548,541,10,402,406,411,0,540,545,549,10,414,820,821,0,555,509,293,10,399,411,406,0,560,549,545,10,398,414,415,0,558,555,552,10,424,425,427,0,561,174,562,10,428,429,425,0,563,564,174,10,728,727,435,0,565,566,204,10,725,730,439,0,567,568,569,10,420,434,435,0,570,571,204,10,429,421,706,0,564,572,206,10,421,429,428,0,572,564,563,10,708,706,423,0,172,206,573,10,431,430,708,0,574,173,172,10,430,432,427,0,173,575,562,10,727,725,438,0,566,567,205,10,735,748,388,0,506,97,576,10,419,732,734,0,577,578,125,10,453,451,450,0,579,580,581,10,457,455,454,0,582,152,583,10,451,448,447,0,580,584,585,10,122,114,707,0,586,223,166,10,456,454,451,0,587,583,580,10,451,454,449,0,580,583,154,10,447,448,437,0,585,584,588,10,448,449,440,0,584,154,589,10,473,704,455,0,590,153,152,10,408,424,426,0,546,561,591,10,412,428,424,0,550,563,561,10,416,729,728,0,556,553,565,10,420,428,412,0,570,563,550,10,416,434,420,0,556,571,570,10,446,452,450,0,592,593,581,10,444,450,447,0,594,581,585,10,417,441,447,0,124,123,585,10,458,460,461,0,595,596,597,10,459,461,488,0,598,597,599,10,726,468,469,0,600,180,601,10,467,486,488,0,602,603,599,10,476,475,474,0,604,605,606,10,466,467,461,0,607,602,597,10,763,683,717,0,190,608,609,10,688,677,699,0,610,611,612,10,724,720,126,0,613,192,191,10,678,681,476,0,614,615,604,10,475,471,469,0,605,616,601,10,139,875,880,0,198,617,618,10,488,486,463,0,599,603,619,10,713,485,523,0,620,621,622,10,472,482,481,0,623,375,624,10,486,471,472,0,603,616,623,10,716,472,471,0,373,623,616,10,131,464,143,0,625,219,626,10,423,460,458,0,573,596,595,10,730,726,466,0,568,600,607,10,439,466,460,0,569,607,596,10,706,438,423,0,206,205,573,10,463,481,480,0,619,624,627,10,238,556,11,0,628,75,629,10,236,239,11,0,339,337,629,10,58,43,809,0,630,58,9,10,386,60,61,0,81,78,77,10,842,843,44,0,86,57,47,10,492,491,831,0,631,632,633,10,339,833,831,0,490,498,634,10,547,548,571,0,635,636,637,10,181,752,781,0,638,639,253,10,508,507,505,0,264,279,640,10,514,515,513,0,641,642,643,10,784,515,514,0,644,642,641,10,799,517,516,0,645,646,278,10,520,521,519,0,647,648,649,10,806,204,225,0,650,319,349,10,180,872,871,0,651,652,653,10,493,500,499,0,654,655,656,10,496,497,506,0,657,317,658,10,833,496,493,0,315,657,654,10,573,571,548,0,343,637,636,10,515,520,518,0,642,647,659,10,517,520,515,0,646,647,642,10,493,496,505,0,654,657,640,10,560,504,246,0,251,660,478,10,527,528,526,0,661,662,663,10,532,530,529,0,664,665,666,10,533,534,528,0,667,668,662,10,535,536,532,0,669,670,664,10,528,531,529,0,662,671,666,10,534,535,531,0,668,669,671,10,389,747,388,0,146,672,576,10,582,796,793,0,673,674,675,10,534,533,512,0,668,667,676,10,536,535,518,0,670,669,659,10,535,534,513,0,669,668,643,10,80,489,260,0,117,485,677,10,848,679,717,0,678,679,609,10,523,852,848,0,680,432,678,10,315,856,854,0,681,682,683,10,849,671,758,0,433,684,685,10,683,850,851,0,608,209,686,10,474,469,473,0,606,601,590,10,710,474,473,0,687,606,590,10,726,469,467,0,600,601,602,10,466,726,467,0,607,600,602,10,537,538,540,0,688,525,689,10,830,544,542,0,518,476,690,10,564,810,542,0,20,19,526,10,239,237,551,0,337,691,692,10,548,547,545,0,636,635,693,10,164,225,210,0,694,349,695,10,738,746,824,0,696,697,698,10,509,571,767,0,262,637,345,10,794,799,511,0,699,645,263,10,558,557,573,0,346,344,343,10,539,540,546,0,700,689,701,10,211,772,605,0,54,272,128,10,829,3,357,0,499,473,472,10,164,780,559,0,694,292,702,10,6,5,750,0,30,356,33,10,565,230,543,0,297,252,51,10,774,546,540,0,18,701,689,10,566,567,569,0,703,704,705,10,209,584,583,0,467,127,706,10,782,788,210,0,334,321,695,10,584,209,182,0,127,467,55,10,246,774,564,0,478,18,20,10,789,786,802,0,707,335,708,10,583,232,795,0,706,238,709,10,566,568,563,0,703,710,2,10,568,570,565,0,710,298,297,10,244,240,800,0,338,711,712,10,586,212,572,0,306,713,274,10,798,247,233,0,347,714,715,10,580,796,798,0,341,674,347,10,229,802,200,0,716,708,289,10,590,588,587,0,717,718,719,10,593,594,592,0,720,355,721,10,596,590,589,0,722,717,723,10,598,594,593,0,724,355,720,10,590,593,591,0,717,720,725,10,597,593,590,0,726,720,717,10,223,600,599,0,352,727,728,10,603,804,600,0,729,296,727,10,201,202,806,0,730,731,650,10,595,553,224,0,732,733,246,10,224,233,597,0,246,715,726,10,799,794,555,0,645,699,244,10,604,603,578,0,294,729,734,10,361,841,847,0,15,528,538,10,575,790,572,0,305,275,274,10,598,247,582,0,724,714,673,10,504,573,502,0,660,343,477,10,580,558,504,0,341,346,660,10,592,594,554,0,721,355,353,10,779,582,207,0,354,673,735,10,242,62,778,0,736,276,737,10,339,342,3,0,490,489,473,10,547,508,506,0,635,264,658,10,517,799,521,0,646,645,648,10,521,555,553,0,648,244,733,10,204,806,202,0,319,650,731,10,539,545,506,0,700,693,658,10,194,201,559,0,284,730,702,10,589,587,530,0,723,719,665,10,536,595,589,0,670,732,723,10,595,536,519,0,732,670,649,10,606,607,609,0,738,739,740,10,611,610,608,0,741,742,743,10,613,615,614,0,744,745,746,10,615,617,616,0,745,747,748,10,625,624,622,0,749,425,750,10,627,629,628,0,751,752,753,10,631,630,618,0,754,755,756,10,633,632,620,0,757,758,759,10,610,611,619,0,742,741,760,10,631,623,622,0,754,761,750,10,617,621,620,0,747,762,759,10,632,633,627,0,758,757,751,10,612,614,609,0,763,746,740,10,614,616,611,0,746,748,741,10,626,628,625,0,764,753,749,10,611,616,620,0,741,748,759,10,632,626,623,0,758,764,761,10,632,631,619,0,758,754,760,10,634,635,637,0,765,766,767,10,639,638,636,0,768,769,770,10,642,640,865,0,216,771,772,10,651,650,648,0,773,774,775,10,649,753,652,0,776,777,778,10,654,653,644,0,779,780,781,10,765,753,649,0,782,777,776,10,638,639,645,0,769,768,783,10,654,649,648,0,779,776,775,10,312,308,866,0,301,415,414,10,852,757,679,0,432,434,679,10,298,766,756,0,464,420,406,10,635,640,642,0,766,771,216,10,861,647,761,0,784,785,786,10,28,702,203,0,329,787,788,10,661,659,658,0,789,790,791,10,665,663,662,0,792,793,794,10,664,662,659,0,795,794,790,10,668,669,667,0,796,797,798,10,669,671,670,0,797,684,799,10,661,660,624,0,789,800,425,10,629,665,664,0,752,792,795,10,664,661,625,0,795,789,749,10,669,668,650,0,797,796,774,10,457,485,710,0,582,621,687,10,671,669,651,0,684,797,773,10,613,634,636,0,744,765,770,10,636,638,617,0,770,769,747,10,650,629,627,0,774,752,751,10,638,644,621,0,769,781,762,10,633,653,648,0,757,780,775,10,653,633,621,0,780,757,762,10,665,668,666,0,792,796,801,10,668,665,629,0,796,792,752,10,673,675,674,0,802,803,804,10,676,868,870,0,805,806,449,10,485,457,522,0,621,582,807,10,682,681,851,0,808,809,686,10,685,687,686,0,810,811,812,10,675,685,684,0,803,810,813,10,692,694,680,0,814,189,188,10,490,853,857,0,815,816,213,10,677,675,673,0,611,803,802,10,678,848,851,0,817,678,686,10,677,688,685,0,611,610,810,10,793,581,791,0,675,340,342,10,793,796,580,0,675,674,341,10,676,700,699,0,805,448,612,10,850,695,682,0,209,208,808,10,694,696,683,0,189,207,608,10,692,699,700,0,814,612,448,10,859,674,647,0,818,804,785,10,522,849,852,0,819,433,432,10,684,686,657,0,813,812,820,10,758,652,657,0,685,778,820,10,674,684,656,0,804,813,821,10,873,874,122,0,822,823,586,10,124,883,882,0,824,825,826,10,123,882,873,0,170,826,822,10,122,874,879,0,586,823,827,10,138,876,875,0,197,828,617,10,465,462,691,0,829,830,831,10,465,480,478,0,829,627,832,10,832,829,20,0,833,499,519,10,878,877,147,0,834,835,836,10,879,876,138,0,827,828,197,10,306,308,884,0,416,415,837,10,308,312,869,0,838,839,840,10,207,578,807,0,735,734,351,10,328,327,697,0,455,454,463,10,868,676,673,0,806,805,802,10,332,333,698,0,462,841,842,10,173,835,16,0,843,494,13,10,777,811,42,0,844,72,48,10,381,383,387,0,521,516,99,10,2,149,148,0,845,846,847,10,50,54,51,0,65,523,90,10,2,812,152,0,845,445,848,10,176,386,59,0,524,81,849,10,834,214,826,0,850,851,26,10,216,214,834,0,314,310,465,10,720,128,129,0,192,202,210,10,127,720,129,0,193,192,210,10,494,846,839,0,71,504,82,10,22,23,190,0,852,101,853,10,25,194,193,0,106,854,855,10,24,193,190,0,102,855,853,10,826,827,42,0,26,25,48,10,40,42,811,0,49,48,72,10,827,215,218,0,25,24,60,10,26,27,202,0,103,104,331,10,803,555,794,0,245,244,699,10,171,172,792,0,856,243,242,10,242,243,63,0,736,857,76,10,25,26,201,0,106,103,858,10,22,189,153,0,852,859,446,10,825,826,41,0,361,26,860,10,140,141,147,0,221,861,836,10,469,471,486,0,601,616,603,10,464,140,146,0,219,221,862,10,376,768,845,0,863,247,93,10,539,497,832,0,700,317,316,10,672,544,769,0,325,476,475,10,335,831,491,0,864,634,865,10,525,526,353,0,866,867,261,10,351,353,817,0,482,261,260,10,174,175,835,0,868,267,869,10,129,137,689,0,210,199,201,10,746,370,81,0,697,522,89,10,672,550,542,0,325,324,690,10,58,574,778,0,630,870,737,10,588,391,390,0,871,531,530,10,591,592,393,0,872,873,533,10,588,591,392,0,871,872,532,10,377,567,566,0,512,874,875,10,566,562,768,0,875,322,247,10,600,395,394,0,876,535,534,10,18,17,19,0,22,21,7,10,600,804,396,0,876,877,147,10,599,394,393,0,878,534,533,10,20,830,538,0,519,518,879,10,530,587,390,0,880,881,530,10,65,66,249,0,175,108,882,10,68,69,253,0,110,109,883,10,66,68,252,0,108,110,884,10,276,277,97,0,885,886,130,10,283,103,102,0,887,135,134,10,282,102,97,0,888,134,130,10,76,257,256,0,114,889,890,10,316,855,856,0,891,456,682,10,79,260,257,0,122,677,889,10,302,120,119,0,892,155,185,10,305,306,124,0,893,894,824,10,305,123,120,0,893,170,155,10,69,75,256,0,109,182,890,10,301,119,103,0,895,185,135,10,135,316,315,0,196,896,897,10,132,133,134,0,437,194,898,10,487,689,140,0,211,201,221,10,479,108,724,0,119,181,613,10,470,440,449,0,179,589,154,10,145,329,316,0,220,899,896,10,404,607,606,0,541,900,901,10,409,410,613,0,548,547,902,10,404,409,612,0,541,548,903,10,659,443,442,0,904,905,906,10,663,446,445,0,907,592,908,10,662,445,443,0,909,908,905,10,426,427,635,0,591,562,910,10,433,641,640,0,911,912,913,10,427,432,640,0,562,575,913,10,666,667,453,0,914,915,579,10,670,522,457,0,916,807,582,10,667,670,456,0,915,916,587,10,410,426,634,0,547,591,917,10,666,452,446,0,914,593,592,10,681,682,477,0,615,918,919,10,713,474,710,0,620,606,687,10,141,693,880,0,861,200,618,10,86,87,742,0,920,921,107,10,682,695,484,0,918,922,923,10,718,317,764,0,453,458,461,10,746,51,54,0,697,90,523,10,63,96,94,0,76,129,132,10,61,94,92,0,77,132,144,10,59,92,88,0,849,144,88,10,203,248,250,0,924,363,925,10,785,578,207,0,926,734,735,10,278,276,243,0,388,386,327,10,171,752,776,0,856,639,927,10,751,775,507,0,928,929,279,10,250,262,226,0,925,429,332,10,401,403,377,0,543,542,512,10,375,378,405,0,511,96,544,10,530,354,817,0,880,360,260,10,397,405,378,0,554,544,96,10,371,838,413,0,95,479,551,10,747,701,442,0,672,148,906,10,752,181,165,0,639,638,930,10,567,606,608,0,704,738,743,10,223,807,578,0,352,351,734,10,197,198,577,0,357,288,307,10,776,165,162,0,927,930,237,10,660,658,602,0,800,791,295,10,660,604,579,0,800,294,426,10,248,203,702,0,931,788,787,10,243,276,96,0,857,885,129,10,403,606,567,0,542,901,874,10,81,82,837,0,89,140,932,10,124,306,881,0,824,894,933,10,344,336,524,0,493,492,934,10,13,14,12,0,935,14,27,10,808,13,12,0,29,935,27,10,658,442,701,0,936,906,148,10,602,701,396,0,937,148,147,10,53,745,702,0,91,67,787,10,52,745,53,0,68,67,91,10,237,778,574,0,938,737,870,10,359,769,847,0,537,475,538,10,72,703,78,0,121,120,116,10,80,78,709,0,117,116,438,10,125,709,714,0,483,438,496,10,331,764,317,0,459,461,458,10,469,468,473,0,601,180,590,10,313,854,853,0,939,683,816,10,711,717,679,0,940,609,679,10,712,764,318,0,440,461,460,10,134,315,313,0,898,897,497,10,130,131,715,0,218,625,195,10,484,483,716,0,923,374,373,10,477,716,475,0,919,373,605,10,688,711,687,0,610,940,811,10,854,856,718,0,683,682,453,10,856,855,317,0,682,456,458,10,142,144,715,0,941,942,195,10,106,107,719,0,943,161,151,10,85,106,722,0,186,943,150,10,109,110,724,0,163,162,613,10,719,107,109,0,151,161,163,10,724,110,128,0,613,162,202,10,729,417,436,0,553,124,944,10,725,440,730,0,567,589,568,10,437,440,725,0,588,589,567,10,730,470,468,0,568,179,180,10,436,437,727,0,944,588,566,10,87,731,744,0,921,945,111,10,736,83,64,0,946,187,947,10,419,740,739,0,577,948,949,10,418,419,733,0,950,577,508,10,740,419,418,0,948,577,950,10,388,747,741,0,576,672,951,10,444,441,732,0,594,123,578,10,738,824,837,0,696,698,932,10,737,837,828,0,952,932,527,10,828,723,83,0,527,184,187,10,446,444,739,0,592,594,949,10,445,739,740,0,908,949,948,10,443,740,741,0,905,948,951,10,503,501,775,0,953,954,929,10,87,737,736,0,921,952,946,10,86,738,737,0,920,696,952,10,52,746,738,0,68,697,696,10,67,744,731,0,183,111,945,10,761,645,639,0,786,783,768,10,687,679,757,0,811,679,434,10,686,757,758,0,812,434,685,10,329,330,855,0,955,457,456,10,680,763,711,0,188,190,940,10,670,671,849,0,799,684,433,10,642,754,639,0,216,215,768,10,766,762,310,0,420,956,418,10,311,762,766,0,466,956,420,10,294,261,760,0,407,377,212,10,647,656,765,0,785,821,782,10,765,654,645,0,782,779,783,10,568,569,797,0,710,705,957,10,797,610,618,0,957,742,756,10,656,657,753,0,821,820,777,10,270,286,228,0,958,395,959,10,274,278,245,0,399,388,326,10,783,235,795,0,333,960,709,10,336,338,337,0,492,470,469,10,228,800,240,0,959,712,711,10,791,585,787,0,342,961,427,10,796,582,247,0,674,673,714,10,507,775,500,0,279,929,655,10,795,232,788,0,709,238,321,10,208,206,577,0,359,358,307,10,780,164,210,0,292,694,695,10,772,211,220,0,272,54,177,10,502,548,546,0,477,636,701,10,570,797,234,0,298,957,962,10,235,228,241,0,960,959,963,10,800,228,286,0,712,959,395,10,262,264,783,0,429,380,333,10,646,869,872,0,217,964,652,10,785,787,579,0,926,427,426,10,767,557,771,0,345,344,348,10,585,630,622,0,961,755,750,10,802,576,199,0,708,336,291,10,510,503,751,0,965,953,928,10,229,210,788,0,716,695,321,10,752,171,185,0,639,856,266,10,213,212,586,0,271,713,306,10,775,501,499,0,929,954,656,10,630,585,234,0,755,961,962,10,172,776,163,0,243,927,236,10,230,246,564,0,252,478,20,10,516,517,784,0,278,646,644,10,610,797,569,0,742,957,705,10,227,234,585,0,299,962,961,10,264,270,235,0,380,958,960,10,771,233,224,0,348,715,246,10,247,598,597,0,714,724,726,10,236,583,241,0,339,706,963,10,814,9,10,0,536,28,23,10,58,819,43,0,630,59,58,10,574,58,809,0,870,630,9,10,541,672,373,0,248,325,249,10,359,818,373,0,537,70,249,10,746,52,51,0,697,68,90,10,370,746,54,0,522,697,523,10,748,838,840,0,97,479,98,10,388,748,387,0,576,97,99,10,0,2,1,0,31,845,32,10,5,0,750,0,356,31,33,10,749,351,345,0,480,482,491,10,352,353,351,0,481,261,482,10,853,854,314,0,816,683,452,10,489,857,261,0,966,213,377,10,126,127,858,0,191,193,222,10,127,132,858,0,193,437,222,10,78,703,858,0,116,120,222,10,754,860,639,0,215,967,768,10,180,673,859,0,651,802,818,10,180,859,861,0,651,818,784,10,861,860,754,0,784,967,215,10,863,862,762,0,302,424,956,10,762,862,300,0,956,424,412,10,324,864,863,0,451,304,302,10,326,864,324,0,303,304,451,10,321,324,298,0,443,451,464,10,647,674,656,0,785,804,821,10,657,686,758,0,820,812,685,10,849,758,757,0,433,685,434,10,485,713,710,0,621,620,687,10,709,132,714,0,438,437,496,10,298,311,766,0,464,466,420,10,761,647,765,0,786,785,782,10,765,656,753,0,782,821,777,10,652,753,657,0,778,777,820,10,297,298,756,0,408,464,406,10,319,321,297,0,444,443,408,10,760,759,319,0,212,214,444,10,294,760,297,0,407,212,408,10,322,325,321,0,442,450,443,10,656,684,657,0,821,813,820,10,674,675,684,0,804,803,813,10,646,180,861,0,217,651,784,10,646,861,754,0,217,784,215,10,755,312,307,0,422,301,423,10,642,865,646,0,216,772,217,10,862,863,755,0,424,302,422,10,864,166,863,0,304,300,302,10,671,652,758,0,684,778,685,10,261,857,760,0,377,213,212,10,857,853,759,0,213,816,214,10,860,861,761,0,967,784,786,10,311,863,762,0,466,302,956,10,861,859,647,0,784,818,785,10,859,673,674,0,818,802,804,10,325,326,324,0,450,303,451,10,865,643,646,0,772,968,217,10,641,643,865,0,969,968,772,10,307,866,305,0,423,414,428,10,307,312,866,0,423,301,414,10,479,126,703,0,119,191,120,10,704,473,468,0,153,590,180,10,440,470,730,0,589,179,568,10,438,439,423,0,205,569,573,10,109,705,113,0,163,167,164,10,108,721,724,0,181,169,613,10,166,326,871,0,300,303,970,10,333,867,870,0,841,971,972,10,328,698,870,0,455,842,972,10,868,871,326,0,973,970,303,10,872,869,312,0,974,975,301,10,873,430,431,0,976,173,574,10,879,422,458,0,977,978,595,10,879,874,431,0,977,979,574,10,878,880,691,0,980,981,831,10,458,459,875,0,595,598,982,10,878,462,478,0,980,830,832,10,880,875,459,0,981,982,598,10,873,882,432,0,976,983,575,10,883,881,641,0,984,985,912,10,883,433,432,0,984,911,575,10,884,643,641,0,986,968,969,10,869,646,643,0,987,988,989,10,543,549,563,0,51,0,2,10,350,349,815,0,990,3,5,10,825,823,21,0,361,6,8,10,574,809,551,0,870,9,11,10,13,15,14,0,935,12,14,10,841,361,366,0,528,15,17,10,9,17,10,0,28,21,23,10,214,215,826,0,851,24,26,10,12,14,17,0,27,14,21,10,19,14,21,0,7,14,8,10,6,12,9,0,30,27,28,10,812,813,4,0,445,34,36,10,814,7,813,0,536,37,34,10,31,29,32,0,100,38,40,10,29,33,30,0,38,41,39,10,37,35,38,0,56,43,45,10,35,55,36,0,43,46,44,10,41,42,39,0,860,48,50,10,33,39,34,0,41,50,42,10,549,543,550,0,0,51,52,10,32,30,37,0,40,39,56,10,30,34,35,0,39,42,43,10,348,843,819,0,85,57,59,10,777,218,809,0,844,60,9,10,45,46,47,0,105,61,63,10,45,49,46,0,105,64,61,10,86,743,52,0,920,66,68,10,498,372,494,0,520,69,71,10,777,809,811,0,844,9,72,10,238,218,556,0,628,73,75,10,62,63,60,0,276,76,78,10,176,343,386,0,524,79,81,10,380,839,382,0,517,82,84,10,50,49,343,0,65,64,79,10,811,43,842,0,72,58,86,10,40,842,34,0,49,86,42,10,370,56,81,0,522,87,89,10,48,46,53,0,62,61,91,10,49,44,348,0,64,47,85,10,379,374,372,0,513,92,69,10,379,495,378,0,513,94,96,10,22,31,23,0,852,100,101,10,25,24,38,0,106,102,45,10,23,32,24,0,101,40,102,10,27,26,48,0,104,103,62,10,28,27,53,0,329,104,91,10,36,45,38,0,44,105,45,10,36,44,45,0,44,47,105,10,26,25,47,0,103,106,63,10,8,7,31,0,35,37,100,10,7,10,29,0,37,23,38,10,41,39,823,0,860,50,6,10,10,18,33,0,23,22,41,10,22,4,31,0,852,36,100,10,65,743,66,0,175,66,108,10,67,69,744,0,183,109,111,10,66,742,68,0,108,107,110,10,75,73,76,0,182,112,114,10,79,77,80,0,122,115,117,10,70,71,73,0,178,118,112,10,108,479,72,0,181,119,121,10,76,74,79,0,114,113,122,10,71,72,74,0,118,121,113,10,732,441,734,0,578,123,125,10,213,231,605,0,271,126,128,10,94,96,95,0,132,129,131,10,92,94,93,0,144,132,133,10,100,102,101,0,138,134,136,10,99,98,101,0,145,137,136,10,81,88,82,0,89,88,140,10,85,84,91,0,186,141,143,10,88,92,89,0,88,144,139,10,90,98,91,0,142,137,143,10,95,97,100,0,131,130,138,10,93,95,98,0,133,131,137,10,747,389,701,0,672,146,148,10,89,93,90,0,139,133,142,10,82,89,84,0,140,139,141,10,105,104,719,0,168,149,151,10,454,455,449,0,583,152,154,10,119,120,117,0,185,155,157,10,116,115,118,0,165,158,156,10,106,111,107,0,943,159,161,10,111,115,112,0,159,158,160,10,112,116,705,0,160,165,167,10,108,105,721,0,181,168,169,10,118,120,121,0,156,155,171,10,429,708,425,0,564,172,174,10,109,107,705,0,163,161,167,10,702,745,65,0,787,67,175,10,773,222,211,0,53,176,54,10,71,70,105,0,118,178,168,10,72,71,108,0,121,118,181,10,67,73,69,0,183,112,109,10,64,70,67,0,947,178,183,10,83,723,104,0,187,184,149,10,103,119,101,0,135,185,136,10,115,99,117,0,158,145,157,10,91,99,111,0,143,145,159,10,106,85,111,0,943,186,159,10,64,83,70,0,947,187,178,10,134,133,135,0,898,194,196,10,136,138,137,0,203,197,199,10,137,139,689,0,199,198,201,10,129,128,137,0,210,202,199,10,421,435,706,0,572,204,206,10,683,696,850,0,608,207,209,10,130,127,487,0,218,193,211,10,132,127,133,0,437,193,194,10,116,118,707,0,165,156,166,10,131,130,464,0,625,218,219,10,144,145,715,0,942,220,195,10,141,140,693,0,861,221,200,10,136,113,138,0,203,164,197,10,128,110,136,0,202,162,203,10,114,113,707,0,223,164,166,10,148,149,150,0,991,224,226,10,154,152,155,0,234,227,229,10,150,151,156,0,226,225,231,10,154,155,158,0,234,229,233,10,149,152,151,0,224,227,225,10,151,154,157,0,225,234,230,10,160,161,162,0,280,235,237,10,583,584,232,0,706,127,238,10,167,168,169,0,270,239,241,10,169,170,172,0,241,240,243,10,553,555,224,0,733,244,246,10,845,768,373,0,93,247,249,10,565,552,230,0,297,250,252,10,179,781,183,0,992,253,255,10,185,186,187,0,266,256,258,10,526,529,353,0,867,259,261,10,547,509,508,0,635,262,264,10,171,770,185,0,856,265,266,10,174,183,175,0,868,255,267,10,187,188,177,0,258,257,269,10,161,167,163,0,235,270,236,10,212,213,772,0,713,271,272,10,208,805,790,0,359,273,275,10,778,62,844,0,737,276,277,10,781,185,184,0,253,266,254,10,184,187,175,0,254,258,267,10,508,511,507,0,264,263,279,10,156,157,160,0,231,230,280,10,158,159,167,0,233,232,270,10,157,158,161,0,230,233,235,10,191,189,192,0,287,281,283,10,193,194,195,0,290,284,286,10,197,191,198,0,357,287,288,10,199,195,200,0,291,286,289,10,190,193,192,0,282,290,283,10,198,192,199,0,288,283,291,10,559,780,196,0,702,292,285,10,729,821,417,0,553,293,124,10,603,604,804,0,729,294,296,10,552,565,227,0,250,297,299,10,792,790,770,0,242,275,265,10,576,586,577,0,336,306,307,10,216,217,214,0,314,308,310,10,219,220,221,0,312,177,311,10,220,219,655,0,177,312,313,10,221,222,216,0,311,176,314,10,496,833,497,0,657,315,317,10,212,772,572,0,713,272,274,10,222,773,217,0,176,53,308,10,203,205,801,0,924,318,320,10,789,788,231,0,707,321,126,10,768,562,541,0,247,322,248,10,541,549,672,0,248,323,325,10,244,245,242,0,338,326,328,10,27,28,202,0,104,329,331,10,225,226,782,0,349,332,334,10,802,786,576,0,708,335,336,10,237,239,242,0,691,337,328,10,240,244,236,0,711,338,339,10,552,581,560,0,250,340,251,10,581,552,791,0,340,250,342,10,571,573,767,0,637,343,345,10,557,558,771,0,344,346,348,10,576,577,199,0,336,307,291,10,204,205,225,0,319,318,349,10,835,175,836,0,869,267,350,10,779,807,554,0,354,351,353,10,598,779,594,0,724,354,355,10,814,5,9,0,536,356,28,10,789,231,786,0,707,126,335,10,155,153,191,0,229,228,287,10,155,191,159,0,229,287,232,10,168,206,170,0,239,358,240,10,170,208,792,0,240,359,242,10,350,815,354,0,990,5,360,10,834,825,836,0,850,361,362,10,186,219,188,0,256,312,257,10,178,188,216,0,268,257,314,10,770,575,186,0,265,305,256,10,159,197,168,0,232,357,239,10,250,248,251,0,925,363,365,10,254,252,255,0,369,366,368,10,251,249,254,0,365,364,369,10,256,257,258,0,435,370,372,10,472,716,482,0,623,373,375,10,257,260,259,0,370,376,371,10,262,263,264,0,429,378,380,10,267,269,266,0,430,381,383,10,278,279,276,0,388,384,386,10,274,275,278,0,399,387,388,10,282,284,283,0,402,389,391,10,281,285,280,0,401,390,392,10,270,271,286,0,958,393,395,10,272,273,288,0,400,396,398,10,270,264,271,0,958,380,393,10,286,287,274,0,395,394,399,10,268,269,272,0,382,381,400,10,280,288,281,0,392,398,401,10,266,268,263,0,383,382,378,10,277,279,282,0,385,384,402,10,280,284,275,0,392,389,387,10,271,265,272,0,393,379,400,10,287,288,275,0,394,398,387,10,271,272,287,0,393,400,394,10,290,291,292,0,431,403,405,10,303,304,301,0,413,409,411,10,299,300,303,0,421,412,413,10,305,866,306,0,428,414,416,10,295,296,309,0,436,417,419,10,296,293,766,0,417,404,420,10,295,292,296,0,436,405,417,10,309,310,299,0,419,418,421,10,756,293,294,0,406,404,407,10,300,755,304,0,412,422,409,10,622,624,787,0,750,425,427,10,304,307,302,0,409,423,410,10,250,251,262,0,925,365,429,10,255,267,254,0,368,430,369,10,251,254,263,0,365,369,378,10,258,259,290,0,372,371,431,10,259,261,291,0,371,377,403,10,253,256,255,0,367,435,368,10,267,290,269,0,430,431,381,10,285,303,283,0,390,413,391,10,299,303,281,0,421,413,401,10,269,292,273,0,381,405,396,10,281,289,299,0,401,397,421,10,273,295,289,0,396,436,397,10,255,258,267,0,368,372,430,10,322,320,323,0,442,439,441,10,320,322,319,0,439,442,444,10,152,812,153,0,848,445,446,10,867,690,870,0,993,447,449,10,314,320,759,0,452,439,214,10,320,314,712,0,439,452,440,10,325,327,326,0,450,454,303,10,323,327,322,0,441,454,442,10,331,332,318,0,459,462,460,10,327,323,697,0,454,441,463,10,177,178,836,0,269,268,350,10,11,556,209,0,629,75,467,10,335,334,338,0,864,468,470,10,341,355,3,0,539,471,473,10,830,358,544,0,518,474,476,10,386,57,60,0,81,80,78,10,840,838,495,0,98,479,94,10,80,125,489,0,117,483,485,10,341,340,347,0,539,486,488,10,336,340,338,0,492,486,470,10,335,338,339,0,864,470,490,10,344,345,346,0,493,491,487,10,340,336,346,0,486,492,487,10,16,835,21,0,13,494,8,10,749,345,601,0,480,491,495,10,125,714,490,0,483,496,484,10,832,833,829,0,833,498,499,10,2,0,812,0,845,31,445,10,346,816,347,0,487,4,488,10,357,355,358,0,472,471,474,10,364,365,362,0,529,501,502,10,361,360,363,0,15,503,16,10,359,846,818,0,537,504,70,10,368,369,366,0,510,505,17,10,847,769,356,0,538,475,500,10,356,355,361,0,500,471,15,10,413,838,822,0,551,479,507,10,218,215,561,0,73,309,74,10,822,735,820,0,507,506,509,10,365,368,363,0,501,510,16,10,820,733,821,0,509,508,293,10,58,844,819,0,630,277,59,10,372,845,818,0,69,93,70,10,376,374,377,0,863,92,512,10,374,379,375,0,92,513,511,10,382,384,383,0,84,514,516,10,381,380,383,0,521,517,516,10,357,358,20,0,472,474,519,10,495,379,498,0,94,513,520,10,828,84,723,0,527,141,184,10,494,380,498,0,71,517,520,10,56,370,176,0,87,522,524,10,54,50,176,0,523,65,524,10,540,538,810,0,689,525,19,10,385,389,383,0,515,146,516,10,837,82,828,0,932,140,527,10,498,381,495,0,520,521,94,10,839,841,367,0,82,528,83,10,365,364,391,0,501,529,531,10,368,392,369,0,510,532,505,10,368,365,392,0,510,501,532,10,384,394,385,0,514,534,515,10,351,815,345,0,482,5,491,10,0,5,813,0,31,356,34,10,385,395,389,0,515,535,146,10,367,369,382,0,83,505,84,10,846,847,839,0,504,538,82,10,819,57,348,0,59,80,85,10,369,393,384,0,505,533,514,10,340,341,342,0,486,539,489,10,350,364,349,0,990,529,3,10,360,347,362,0,503,488,502,10,355,341,360,0,471,539,503,10,350,354,364,0,990,360,529,10,401,402,403,0,543,540,542,10,402,401,406,0,540,543,545,10,407,408,409,0,559,546,548,10,407,411,408,0,559,549,546,10,414,413,820,0,555,551,509,10,416,415,729,0,556,552,553,10,398,397,414,0,558,554,555,10,399,415,400,0,560,552,557,10,397,398,405,0,554,558,544,10,399,400,411,0,560,557,549,10,402,407,404,0,540,559,541,10,407,402,411,0,559,540,549,10,415,414,821,0,552,555,293,10,398,399,406,0,558,560,545,10,399,398,415,0,560,558,552,10,426,424,427,0,591,561,562,10,424,428,425,0,561,563,174,10,434,728,435,0,571,565,204,10,438,725,439,0,205,567,569,10,421,420,435,0,572,570,204,10,708,429,706,0,172,564,206,10,420,421,428,0,570,572,563,10,422,708,423,0,978,172,573,10,422,431,708,0,978,574,172,10,425,430,427,0,174,173,562,10,435,727,438,0,204,566,205,10,418,735,388,0,950,506,576,10,733,419,734,0,508,577,125,10,452,453,450,0,593,579,581,10,456,457,454,0,587,582,583,10,450,451,447,0,581,580,585,10,121,122,707,0,171,586,166,10,453,456,451,0,579,587,580,10,448,451,449,0,584,580,154,10,436,447,437,0,944,585,588,10,437,448,440,0,588,584,589,10,710,473,455,0,687,590,152,10,410,408,426,0,547,546,591,10,408,412,424,0,546,550,561,10,434,416,728,0,571,556,565,10,400,420,412,0,557,570,550,10,400,416,420,0,557,556,570,10,444,446,450,0,594,592,581,10,441,444,447,0,123,594,585,10,436,417,447,0,944,124,585,10,459,458,461,0,598,595,597,10,691,459,488,0,831,598,599,10,461,467,488,0,597,602,599,10,713,476,474,0,620,604,606,10,460,466,461,0,596,607,597,10,711,763,717,0,940,190,609,10,680,688,699,0,188,610,612,10,479,724,126,0,119,613,191,10,713,678,476,0,620,614,604,10,474,475,469,0,606,605,601,10,693,139,880,0,200,198,618,10,465,488,463,0,829,599,619,10,678,713,523,0,614,620,622,10,463,472,481,0,619,623,624,10,463,486,472,0,619,603,623,10,475,716,471,0,605,373,616,10,142,131,143,0,941,625,626,10,422,423,458,0,978,573,595,10,439,730,466,0,569,568,607,10,423,439,460,0,573,569,596,10,465,463,480,0,829,619,627,10,551,238,11,0,692,628,629,10,209,236,11,0,467,339,629,10,59,386,61,0,849,81,77,10,55,842,44,0,46,86,47,10,493,492,831,0,654,631,633,10,335,339,831,0,864,490,634,10,509,547,571,0,262,635,637,10,179,181,781,0,992,638,253,10,506,508,505,0,658,264,640,10,512,514,513,0,676,641,643,10,510,784,514,0,965,644,641,10,511,799,516,0,263,645,278,10,518,520,519,0,659,647,649,10,164,806,225,0,694,650,349,10,673,180,871,0,802,651,653,10,492,493,499,0,631,654,656,10,505,496,506,0,640,657,658,10,831,833,493,0,633,315,654,10,502,573,548,0,477,343,636,10,513,515,518,0,643,642,659,10,784,517,515,0,644,646,642,10,500,493,505,0,655,654,640,10,230,560,246,0,252,251,478,10,525,527,526,0,994,661,663,10,531,532,529,0,671,664,666,10,527,533,528,0,661,667,662,10,531,535,532,0,671,669,664,10,526,528,529,0,663,662,666,10,528,534,531,0,662,668,671,10,387,389,388,0,99,146,576,10,207,582,793,0,735,673,675,10,513,534,512,0,643,668,676,10,519,536,518,0,649,670,659,10,518,535,513,0,659,669,643,10,79,80,260,0,122,117,677,10,851,848,717,0,686,678,609,10,678,523,848,0,817,680,678,10,313,315,854,0,939,681,683,10,717,683,851,0,609,608,686,10,539,537,540,0,700,688,689,10,538,830,542,0,879,518,690,10,550,564,542,0,52,20,526,10,11,239,551,0,629,337,692,10,546,548,545,0,701,636,693,10,794,509,767,0,699,262,345,10,509,794,511,0,262,699,263,10,504,558,573,0,660,346,343,10,545,539,546,0,693,700,701,10,182,211,605,0,55,54,128,10,20,829,357,0,519,499,472,10,806,164,559,0,650,694,702,10,808,6,750,0,29,30,33,10,563,565,543,0,2,297,51,10,810,774,540,0,19,18,689,10,568,566,569,0,710,703,705,10,236,209,583,0,339,467,706,10,225,782,210,0,349,334,695,10,605,584,182,0,128,127,55,10,229,789,802,0,716,707,708,10,241,583,795,0,963,706,709,10,562,566,563,0,1,703,2,10,563,568,565,0,2,710,297,10,245,244,800,0,326,338,712,10,805,586,572,0,273,306,274,10,771,798,233,0,348,347,715,10,558,580,798,0,346,341,347,10,780,229,200,0,292,716,289,10,589,590,587,0,723,717,719,10,591,593,592,0,725,720,721,10,595,596,589,0,732,722,723,10,597,598,593,0,726,724,720,10,588,590,591,0,718,717,725,10,596,597,590,0,722,726,717,10,554,223,599,0,353,352,728,10,223,603,600,0,352,729,727,10,559,201,806,0,702,730,650,10,596,595,224,0,722,732,246,10,596,224,597,0,722,246,726,10,521,799,555,0,648,645,244,10,579,604,578,0,426,294,734,10,356,361,847,0,500,15,538,10,655,575,572,0,313,305,274,10,779,598,582,0,354,724,673,10,246,504,502,0,478,660,477,10,560,580,504,0,251,341,660,10,599,592,554,0,728,721,353,10,807,779,207,0,351,354,735,10,237,242,778,0,938,736,737,10,829,339,3,0,499,490,473,10,545,547,506,0,693,635,658,10,520,517,521,0,647,646,648,10,519,521,553,0,649,648,733,10,801,204,202,0,320,319,731,10,497,539,506,0,317,700,658,10,196,194,559,0,285,284,702,10,532,589,530,0,664,723,665,10,532,536,589,0,664,670,723,10,553,595,519,0,733,732,649,10,608,606,609,0,743,738,740,10,609,611,608,0,740,741,743,10,612,613,614,0,763,744,746,10,614,615,616,0,746,745,748,10,623,625,622,0,761,749,750,10,626,627,628,0,764,751,753,10,619,631,618,0,760,754,756,10,621,633,620,0,762,757,759,10,618,610,619,0,756,742,760,10,630,631,622,0,755,754,750,10,616,617,620,0,748,747,759,10,626,632,627,0,764,758,751,10,607,612,609,0,739,763,740,10,609,614,611,0,740,746,741,10,623,626,625,0,761,764,749,10,619,611,620,0,760,741,759,10,631,632,623,0,754,758,761,10,620,632,619,0,759,758,760,10,636,634,637,0,770,765,767,10,637,639,636,0,767,768,770,10,649,651,648,0,776,773,775,10,651,649,652,0,773,776,778,10,645,654,644,0,783,779,781,10,654,765,649,0,779,782,776,10,644,638,645,0,781,769,783,10,653,654,648,0,780,779,775,10,848,852,679,0,678,432,679,10,637,635,642,0,767,766,216,10,801,28,203,0,330,329,788,10,660,661,658,0,800,789,791,10,664,665,662,0,795,792,794,10,661,664,659,0,789,795,790,10,666,668,667,0,801,796,798,10,667,669,670,0,798,797,799,10,625,661,624,0,749,789,425,10,628,629,664,0,753,752,795,10,628,664,625,0,753,795,749,10,651,669,650,0,773,797,774,10,455,457,710,0,152,582,687,10,652,671,651,0,778,684,773,10,615,613,636,0,745,744,770,10,615,636,617,0,745,770,747,10,648,650,627,0,775,774,751,10,617,638,621,0,747,769,762,10,627,633,648,0,751,757,775,10,644,653,621,0,781,780,762,10,663,665,666,0,793,792,801,10,650,668,629,0,774,796,752,10,700,676,870,0,448,805,449,10,523,485,522,0,622,621,807,10,850,682,851,0,209,808,686,10,684,685,686,0,813,810,812,10,699,692,680,0,612,814,188,10,489,490,857,0,966,815,213,10,676,677,673,0,805,611,802,10,681,678,851,0,809,817,686,10,675,677,685,0,803,611,810,10,785,793,791,0,926,675,342,10,581,793,580,0,340,675,341,10,677,676,699,0,611,805,612,10,763,694,683,0,190,189,608,10,690,692,700,0,447,814,448,10,523,522,852,0,680,819,432,10,121,873,122,0,171,822,586,10,123,124,882,0,170,824,826,10,121,123,873,0,171,170,822,10,114,122,879,0,223,586,827,10,139,138,875,0,198,197,617,10,488,465,691,0,599,829,831,10,462,465,478,0,830,829,832,10,537,832,20,0,995,833,519,10,141,878,147,0,861,834,836,10,114,879,138,0,223,827,197,10,881,306,884,0,996,416,837,10,884,308,869,0,997,838,840,10,698,328,697,0,842,455,463,10,871,868,673,0,653,806,802,10,697,332,698,0,463,462,842,10,15,173,16,0,12,843,13,10,827,777,42,0,25,844,48,10,840,381,387,0,98,521,99,10,1,2,148,0,32,845,847,10,46,50,51,0,61,65,90,10,149,2,152,0,846,845,848,10,56,176,59,0,87,524,849,10,825,834,826,0,361,850,26,10,178,216,834,0,268,314,465,10,380,494,839,0,517,71,82,10,189,22,190,0,859,852,853,10,24,25,193,0,102,106,855,10,23,24,190,0,101,102,853,10,41,826,42,0,860,26,48,10,842,40,811,0,86,49,72,10,777,827,218,0,844,25,60,10,201,26,202,0,858,103,331,10,767,803,794,0,345,245,699,10,770,171,792,0,265,856,242,10,62,242,63,0,276,736,76,10,194,25,201,0,854,106,858,10,4,22,153,0,36,852,446,10,823,825,41,0,6,361,860,10,146,140,147,0,862,221,836,10,467,469,486,0,602,601,603,10,143,464,146,0,626,219,862,10,374,376,845,0,92,863,93,10,537,539,832,0,688,700,316,10,359,672,769,0,537,325,475,10,334,335,491,0,468,864,865,10,352,525,353,0,481,866,261,10,815,351,817,0,5,482,260,10,173,174,835,0,998,868,869,10,487,129,689,0,211,210,201,10,824,746,81,0,698,697,89,10,544,672,542,0,476,325,690,10,844,58,778,0,277,630,737,10,587,588,390,0,881,871,530,10,392,591,393,0,532,872,533,10,391,588,392,0,531,871,532,10,376,377,566,0,863,512,875,10,376,566,768,0,863,875,247,10,599,600,394,0,878,876,534,10,823,18,19,0,6,22,7,10,395,600,396,0,535,876,147,10,592,599,393,0,873,878,533,10,537,20,538,0,995,519,879,10,354,530,390,0,360,880,530,10,248,65,249,0,931,175,882,10,252,68,253,0,884,110,883,10,249,66,252,0,882,108,884,10,96,276,97,0,129,885,130,10,282,283,102,0,888,887,134,10,277,282,97,0,886,888,130,10,75,76,256,0,182,114,890,10,315,316,856,0,681,891,682,10,76,79,257,0,114,122,889,10,301,302,119,0,895,892,185,10,123,305,124,0,170,893,824,10,302,305,120,0,892,893,155,10,253,69,256,0,883,109,890,10,283,301,103,0,887,895,135,10,134,135,315,0,898,196,897,10,714,132,134,0,496,437,898,10,464,487,140,0,219,211,221,10,704,470,449,0,153,179,154,10,135,145,316,0,196,220,896,10,403,404,606,0,542,541,901,10,612,409,613,0,903,548,902,10,607,404,612,0,900,541,903,10,658,659,442,0,936,904,906,10,662,663,445,0,909,907,908,10,659,662,443,0,904,909,905,10,634,426,635,0,917,591,910,10,432,433,640,0,575,911,913,10,635,427,640,0,910,562,913,10,452,666,453,0,593,914,579,10,456,670,457,0,587,916,582,10,453,667,456,0,579,915,587,10,613,410,634,0,902,547,917,10,663,666,446,0,907,914,592,10,476,681,477,0,604,615,919,10,878,141,880,0,834,861,618,10,743,86,742,0,66,920,107,10,477,682,484,0,919,918,923,10,712,718,764,0,440,453,461,10,61,63,94,0,77,76,132,10,59,61,92,0,849,77,144,10,56,59,88,0,87,849,88,10,205,203,250,0,318,924,925,10,793,785,207,0,675,926,735,10,245,278,243,0,326,388,327,10,172,171,776,0,243,856,927,10,516,751,507,0,278,928,279,10,205,250,226,0,318,925,332,10,375,401,377,0,511,543,512,10,401,375,405,0,543,511,544,10,529,530,817,0,259,880,260,10,371,397,378,0,95,554,96,10,397,371,413,0,554,95,551,10,741,747,442,0,951,672,906,10,776,752,165,0,927,639,930,10,569,567,608,0,705,704,743,10,603,223,578,0,729,352,734,10,206,197,577,0,358,357,307,10,163,776,162,0,236,927,237,10,604,660,602,0,294,800,295,10,624,660,579,0,425,800,426,10,65,248,702,0,175,931,787,10,63,243,96,0,76,857,129,10,377,403,567,0,512,542,874,10,824,81,837,0,698,89,932,10,883,124,881,0,825,824,933,10,601,344,524,0,495,493,934,10,602,658,701,0,937,936,148,10,804,602,396,0,877,937,147,10,28,53,702,0,329,91,787,10,51,52,53,0,90,68,91,10,551,237,574,0,11,938,870,10,846,359,847,0,504,537,538,10,77,72,78,0,115,121,116,10,125,80,709,0,483,117,438,10,330,331,317,0,457,459,458,10,490,313,853,0,815,939,816,10,687,711,679,0,811,940,679,10,323,712,318,0,441,440,460,10,714,134,313,0,496,898,497,10,133,130,715,0,194,218,195,10,477,484,716,0,919,923,373,10,476,477,475,0,604,919,605,10,685,688,687,0,810,610,811,10,314,854,718,0,452,683,453,10,718,856,317,0,453,682,458,10,131,142,715,0,625,941,195,10,722,106,719,0,150,943,151,10,723,85,722,0,184,186,150,10,721,109,724,0,169,163,613,10,721,719,109,0,169,151,163,10,720,724,128,0,192,613,202,10,728,729,436,0,565,553,944,10,727,437,725,0,566,588,567,10,726,730,468,0,600,568,180,10,728,436,727,0,565,944,566,10,742,87,744,0,107,921,111,10,731,736,64,0,945,946,947,10,732,419,739,0,578,577,949,10,735,418,733,0,506,950,508,10,741,740,418,0,951,948,950,10,418,388,741,0,950,576,951,10,739,444,732,0,949,594,578,10,737,738,837,0,952,696,932,10,736,737,828,0,946,952,527,10,736,828,83,0,946,527,187,10,445,446,739,0,908,592,949,10,443,445,740,0,905,908,948,10,442,443,741,0,906,905,951,10,751,503,775,0,928,953,929,10,731,87,736,0,945,921,946,10,87,86,737,0,921,920,952,10,86,52,738,0,920,68,696,10,64,67,731,0,947,183,945,10,860,761,639,0,967,786,768,10,686,687,757,0,812,811,434,10,316,329,855,0,891,955,456,10,688,680,711,0,610,188,940,10,522,670,849,0,819,799,433,10,637,642,639,0,767,216,768,10,296,766,310,0,417,420,418,10,761,765,645,0,786,782,783,10,570,568,797,0,298,710,957,10,234,797,618,0,962,957,756,10,235,270,228,0,960,958,959,10,800,274,245,0,712,399,326,10,782,783,795,0,334,333,709,10,524,336,337,0,934,492,469,10,241,228,240,0,963,959,711,10,785,791,787,0,926,342,427,10,798,796,247,0,347,674,714,10,505,507,500,0,640,279,655,10,782,795,788,0,334,709,321,10,805,208,577,0,273,359,307,10,229,780,210,0,716,292,695,10,655,772,220,0,313,272,177,10,774,502,546,0,18,477,701,10,227,570,234,0,299,298,962,10,795,235,241,0,709,960,963,10,274,800,286,0,399,712,395,10,226,262,783,0,332,429,333,10,180,646,872,0,651,217,652,10,578,785,579,0,734,926,426,10,803,767,771,0,245,345,348,10,787,585,622,0,427,961,750,10,200,802,199,0,289,708,291,10,784,510,751,0,644,965,928,10,789,229,788,0,707,716,321,10,781,752,185,0,253,639,266,10,786,213,586,0,335,271,306,10,500,775,499,0,655,929,656,10,618,630,234,0,756,755,962,10,169,172,163,0,241,243,236,10,543,230,564,0,51,252,20,10,751,516,784,0,928,278,644,10,608,610,569,0,743,742,705,10,791,227,585,0,342,299,961,10,783,264,235,0,333,380,960,10,803,771,224,0,245,348,246,10,233,247,597,0,715,714,726,10,240,236,241,0,711,339,963,10,7,814,10,0,37,536,23,10,759,853,314,0,214,816,452,10,260,489,261,0,376,966,377,10,709,78,858,0,438,116,222,10,310,762,300,0,418,956,412,10,311,324,863,0,466,451,302,10,640,641,865,0,771,969,772,10,872,166,871,0,974,300,970,10,698,333,870,0,842,841,972,10,868,328,870,0,973,455,972,10,328,868,326,0,455,973,303,10,166,872,312,0,300,974,301,10,874,873,431,0,979,976,574,10,876,879,458,0,999,977,595,10,422,879,431,0,978,977,574,10,462,878,691,0,830,980,831,10,876,458,875,0,999,595,982,10,877,878,478,0,1000,980,832,10,691,880,459,0,831,981,598,10,430,873,432,0,173,976,575,10,433,883,641,0,911,984,912,10,882,883,432,0,983,984,575,10,881,884,641,0,1001,986,969,10,884,869,643,0,1002,987,989,11,867,333,895,907,0,971,841,1003,1004,11,147,877,908,890,0,836,835,1005,1006,11,330,329,891,892,0,457,955,1007,1008,11,483,484,901,900,0,374,923,1009,1010,11,332,331,893,894,0,462,459,1011,1012,11,481,482,899,898,0,624,375,1013,1014,11,478,480,897,896,0,832,627,1015,1016,11,877,478,896,908,0,1000,832,1016,1017,11,694,692,903,904,0,189,814,1018,1019,11,696,694,904,906,0,207,189,1019,1020,11,484,695,905,901,0,923,922,1021,1009,11,142,143,886,885,0,941,626,1022,1023,11,333,332,894,895,0,841,462,1012,1003,11,331,330,892,893,0,459,457,1008,1011,11,480,481,898,897,0,627,624,1014,1015,11,145,144,887,888,0,220,942,1024,1025,11,482,483,900,899,0,375,374,1010,1013,11,329,145,888,891,0,899,220,1025,1026,11,692,690,902,903,0,814,447,1027,1018,11,143,146,889,886,0,626,862,1028,1022,11,146,147,890,889,0,862,836,1006,1028,11,144,142,885,887,0,942,941,1023,1024,11,695,696,906,905,0,208,207,1020,1029,11,690,867,907,902,0,447,993,1030,1027,11,334,491,926,923,0,468,865,1031,1032,11,601,524,934,938,0,495,934,1033,1034,11,148,150,913,912,0,991,226,1035,1036,11,165,181,921,917,0,930,638,1037,1038,11,503,510,931,930,0,953,965,1039,1040,11,352,749,939,925,0,481,480,1041,1042,11,15,13,910,911,0,12,935,1043,1044,11,808,750,940,941,0,29,33,1045,1046,11,162,165,917,916,0,237,930,1038,1047,11,183,174,919,922,0,255,868,1048,1049,11,750,1,909,940,0,33,32,1050,1045,11,181,179,920,921,0,638,992,1051,1037,11,179,183,922,920,0,992,255,1049,1051,11,501,503,930,929,0,954,953,1040,1052,11,512,533,937,932,0,676,667,1053,1054,11,173,15,911,918,0,843,12,1044,1055,11,337,334,923,924,0,469,468,1032,1056,11,499,501,929,928,0,656,954,1052,1057,11,1,148,912,909,0,32,847,1058,1050,11,13,808,941,910,0,935,29,1046,1043,11,156,160,915,914,0,231,280,1059,1060,11,527,525,935,936,0,661,994,1061,1062,11,174,173,918,919,0,868,998,1063,1048,11,514,512,932,933,0,641,676,1054,1064,11,524,337,924,934,0,934,469,1056,1033,11,491,492,927,926,0,632,631,1065,1066,11,749,601,938,939,0,480,495,1034,1041,11,510,514,933,931,0,965,641,1064,1039,11,525,352,925,935,0,866,481,1042,1067,11,150,156,914,913,0,226,231,1060,1035,11,533,527,936,937,0,667,661,1062,1053,11,160,162,916,915,0,280,237,1047,1059,11,492,499,928,927,0,631,656,1057,1065],\"metadata\":{\"uvs\":1,\"version\":3,\"faces\":1772,\"generator\":\"io_three\",\"vertices\":942,\"bones\":31,\"materials\":1,\"type\":\"Geometry\"},\"uvs\":[[0.960205,0.392938,0.969431,0.430682,0.943241,0.428683,0.651242,0.204277,0.652554,0.16888,0.675379,0.170816,0.44656,0.201341,0.44637,0.163765,0.467798,0.164211,0.475593,0.351487,0.502375,0.347663,0.507712,0.3802,0.475998,0.070248,0.469806,0.128769,0.447005,0.127855,0.611036,0.276198,0.642639,0.278097,0.639212,0.316408,0.933142,0.313298,0.950782,0.316325,0.947613,0.356142,0.419595,0.16335,0.419894,0.200047,0.392856,0.200513,0.496055,0.27461,0.473313,0.274801,0.472042,0.238177,0.419818,0.126911,0.391278,0.163684,0.390068,0.068059,0.389874,0.126756,0.328532,0.131312,0.292252,0.074628,0.348814,0.069742,0.33257,0.169181,0.335996,0.204079,0.313284,0.206548,0.356907,0.202573,0.361145,0.239458,0.364642,0.27702,0.343619,0.278033,0.394591,0.237709,0.396368,0.275634,0.367467,0.315446,0.369236,0.355233,0.346498,0.354653,0.398387,0.315474,0.399501,0.357503,0.445277,0.274972,0.420687,0.274755,0.420205,0.237159,0.946125,0.390245,0.963576,0.358973,0.067646,0.30754,0.088644,0.305881,0.087668,0.345769,0.345888,0.315834,0.421233,0.357325,0.443486,0.355666,0.441449,0.394419,0.494402,0.310374,0.363233,0.434138,0.336372,0.430935,0.342268,0.3934,0.398759,0.396831,0.397822,0.437553,0.329598,0.540923,0.329165,0.505959,0.355644,0.506702,0.566472,0.435828,0.563807,0.394004,0.582833,0.396134,0.44353,0.31408,0.023924,0.317844,0.049877,0.310552,0.053128,0.352412,0.491897,0.496764,0.464209,0.502025,0.460076,0.468056,0.421383,0.436355,0.437952,0.436138,0.438624,0.471152,0.606458,0.357886,0.636768,0.356157,0.638659,0.396414,0.422395,0.396177,0.419899,0.314777,0.421983,0.508093,0.426497,0.541453,0.40101,0.543537,0.360849,0.471242,0.330597,0.467505,0.543677,0.467364,0.547005,0.433248,0.582659,0.472769,0.581071,0.508232,0.561655,0.505389,0.623447,0.509244,0.605895,0.47456,0.643037,0.472469,0.340058,0.240863,0.318804,0.279536,0.320471,0.316496,0.318797,0.391518,0.316101,0.428595,0.366629,0.395414,0.320324,0.35392,0.327912,0.576135,0.301138,0.572616,0.291758,0.641007,0.295966,0.607085,0.326529,0.609594,0.322658,0.677099,0.321657,0.71055,0.287229,0.709149,0.321313,0.755889,0.322794,0.784704,0.286354,0.784704,0.345112,0.71162,0.363685,0.784704,0.338099,0.784704,0.342478,0.755889,0.286448,0.755889,0.651506,0.64836,0.627718,0.649115,0.62732,0.613876,0.127593,0.377377,0.110261,0.379385,0.109791,0.343426,0.499236,0.530724,0.506122,0.565033,0.474615,0.570111,0.469474,0.535845,0.451312,0.573289,0.512685,0.599599,0.518967,0.634472,0.484199,0.640001,0.456279,0.607825,0.479602,0.60474,0.431273,0.575545,0.403049,0.578187,0.404866,0.612903,0.435847,0.610025,0.439235,0.644819,0.446361,0.539158,0.460537,0.642879,0.673421,0.469292,0.692788,0.467111,0.693959,0.505675,0.372306,0.679865,0.387477,0.680463,0.386768,0.714571,0.675789,0.785408,0.660358,0.785408,0.656511,0.756747,0.533162,0.707566,0.491969,0.714963,0.488275,0.67635,0.464072,0.678943,0.441931,0.680249,0.444026,0.717085,0.40573,0.715675,0.397376,0.784704,0.402591,0.755889,0.437873,0.784704,0.467034,0.71687,0.467921,0.755889,0.442867,0.755889,0.369661,0.713297,0.38441,0.755889,0.548467,0.753613,0.495718,0.755889,0.530196,0.756747,0.502207,0.758032,0.506854,0.714406,0.306943,0.537715,0.065803,0.276626,0.088525,0.275009,0.347393,0.678538,0.635994,0.785408,0.639975,0.825095,0.365688,0.755889,0.289022,0.674843,0.325422,0.64431,0.386473,0.647533,0.525384,0.670208,0.406483,0.647209,0.372733,0.647701,0.83128,0.938831,0.826458,0.961431,0.825338,0.938831,0.363879,0.825095,0.380592,0.825095,0.364861,0.863399,0.336644,0.899822,0.343005,0.938235,0.286305,0.938235,0.469134,0.825095,0.467735,0.863399,0.437608,0.863399,0.467168,0.899822,0.437152,0.899822,0.397353,0.825095,0.437327,0.825095,0.593493,0.71671,0.595941,0.756747,0.555452,0.756747,0.802916,0.961431,0.750073,0.961431,0.754415,0.938831,0.395734,0.863399,0.392346,0.899822,0.193488,0.798389,0.219016,0.798389,0.195563,0.820486,0.92101,0.757616,0.945828,0.757616,0.936701,0.79746,0.364587,0.899822,0.392599,0.938235,0.286098,0.961431,0.438095,0.938235,0.330456,0.825095,0.469954,0.784704,0.263493,0.139356,0.22762,0.138712,0.228485,0.085814,0.262478,0.175067,0.26121,0.210791,0.225795,0.209285,0.195922,0.138341,0.196782,0.08552,0.193701,0.208229,0.195004,0.173522,0.226857,0.174111,0.167865,0.137861,0.148341,0.137601,0.149132,0.084906,0.127928,0.420553,0.165168,0.20738,0.14696,0.207019,0.147576,0.172563,0.125988,0.206852,0.12655,0.172371,0.854975,0.245598,0.856099,0.278565,0.837653,0.279047,0.523688,0.426945,0.526723,0.388097,0.546011,0.391717,0.888996,0.423354,0.890477,0.382668,0.91482,0.385387,0.084409,0.136921,0.058723,0.138498,0.057867,0.085446,0.086306,0.207879,0.061315,0.209138,0.059663,0.173978,0.736257,0.177199,0.700128,0.173456,0.70467,0.13713,0.892599,0.246143,0.892615,0.212044,0.914903,0.213031,0.108711,0.206962,0.085113,0.173059,0.038403,0.1391,0.041533,0.210302,0.039854,0.174807,0.166451,0.172884,0.126858,0.341799,0.108923,0.306267,0.145227,0.272918,0.125683,0.273335,0.125666,0.2413,0.483608,0.46314,0.457431,0.433952,0.89229,0.177598,0.916206,0.178392,0.169408,0.085142,0.259322,0.247063,0.255949,0.281408,0.221092,0.277489,0.244847,0.353759,0.210673,0.347016,0.216877,0.311438,0.224049,0.244517,0.190741,0.274764,0.185692,0.343207,0.251072,0.316773,0.188272,0.307913,0.183104,0.378164,0.615042,0.613683,0.798534,0.496788,0.779383,0.4971,0.777988,0.462985,0.911978,0.426467,0.908695,0.461966,0.887023,0.460903,0.067946,0.820486,0.053683,0.797799,0.078705,0.797264,0.07587,0.863392,0.074764,0.822036,0.108611,0.241675,0.145634,0.306312,0.163723,0.273465,0.047523,0.278807,0.020913,0.282347,0.019454,0.247995,0.063561,0.24417,0.087709,0.242649,0.108457,0.274064,0.043905,0.245757,0.985902,0.181613,0.983461,0.218361,0.959443,0.21559,0.202404,0.496128,0.203036,0.460506,0.223125,0.4622,0.150292,0.417328,0.496835,0.41827,0.498247,0.379749,0.50363,0.346142,0.528833,0.350164,0.062967,0.500122,0.032716,0.501268,0.032043,0.465435,0.311318,0.464969,0.28229,0.462944,0.286307,0.425634,0.176442,0.496073,0.153544,0.496546,0.15492,0.459646,0.146197,0.341867,0.162882,0.306634,0.057107,0.42748,0.061673,0.463587,0.088505,0.425196,0.872804,0.421759,0.873248,0.380616,0.8709,0.4604,0.892063,0.311873,0.874766,0.312049,0.875499,0.279045,0.8741,0.345225,0.854858,0.345228,0.855529,0.311784,0.176576,0.460348,0.014535,0.176153,0.821225,0.41934,0.797131,0.421958,0.794152,0.385842,0.818023,0.381239,0.790676,0.350168,0.352877,0.129058,0.192277,0.24272,0.16396,0.241552,0.146426,0.241256,0.694445,0.208397,0.470469,0.202368,0.502342,0.167813,0.222642,0.532502,0.22449,0.566196,0.203655,0.566947,0.226657,0.602191,0.229212,0.638307,0.206875,0.639784,0.205063,0.603259,0.235683,0.715768,0.212583,0.71554,0.209258,0.667374,0.645592,0.938127,0.642232,0.961431,0.625847,0.961431,0.239682,0.753827,0.216907,0.753827,0.178189,0.567774,0.150931,0.568682,0.149627,0.534473,0.153198,0.642388,0.152245,0.605277,0.17952,0.604327,0.062365,0.57076,0.032206,0.570887,0.032734,0.537199,0.089667,0.570424,0.062215,0.53668,0.063805,0.606955,0.064122,0.64325,0.030975,0.642108,0.090603,0.606929,0.132448,0.569298,0.110815,0.569996,0.111256,0.535744,0.134043,0.643068,0.111979,0.643558,0.111079,0.606586,0.090091,0.536133,0.13357,0.605947,0.091661,0.643676,0.03171,0.606641,0.185434,0.71554,0.156738,0.71554,0.153864,0.671169,0.165631,0.753827,0.186955,0.753827,0.173615,0.798389,0.058693,0.71554,0.024447,0.716605,0.028937,0.667899,0.088646,0.71554,0.062611,0.670808,0.047718,0.768548,0.032458,0.809781,0.000944,0.777252,0.136345,0.71554,0.111318,0.71554,0.112427,0.672342,0.140903,0.753827,0.091567,0.672174,0.079014,0.753827,0.053683,0.753827,0.08352,0.753827,0.823473,0.533934,0.824372,0.49679,0.847159,0.497309,0.009151,0.760517,0.177268,0.533397,0.181285,0.64117,0.183209,0.669327,0.769452,0.821041,0.775209,0.796983,0.802187,0.821041,0.232099,0.665332,0.134032,0.671945,0.328499,0.863399,0.322582,0.825095,0.174713,0.863392,0.174085,0.897121,0.157727,0.897121,0.151335,0.863392,0.147115,0.820486,0.174105,0.820486,0.307752,0.171832,0.276534,0.210958,0.913114,0.961431,0.916251,0.938831,0.933897,0.938831,0.113354,0.863392,0.112868,0.820486,0.197366,0.863392,0.197372,0.897121,0.11572,0.897121,0.079108,0.897121,0.200452,0.938938,0.195849,0.961431,0.195608,0.938938,0.173979,0.961431,0.16801,0.938938,0.174768,0.938938,0.121285,0.961431,0.119592,0.938938,0.145969,0.798389,0.017079,0.212577,0.11112,0.798389,0.085757,0.38204,0.543142,0.069858,0.565714,0.068674,0.565235,0.128992,0.588056,0.237466,0.561511,0.237292,0.562816,0.201783,0.562274,0.274584,0.563272,0.313681,0.531613,0.310526,0.912246,0.311561,0.913081,0.349325,0.60407,0.507238,0.661006,0.070973,0.711275,0.077021,0.678913,0.134519,0.286577,0.825095,0.249106,0.825891,0.250968,0.784704,0.5905,0.164737,0.618073,0.165819,0.615847,0.201807,0.564268,0.164181,0.543069,0.16375,0.655353,0.132708,0.591617,0.129468,0.620172,0.130442,0.501376,0.131389,0.624547,0.068108,0.286864,0.863399,0.251269,0.863399,0.50799,0.165783,0.539037,0.202184,0.586816,0.274863,0.6636,0.279406,0.646646,0.240763,0.613469,0.238523,0.584735,0.357303,0.659532,0.355969,0.62545,0.545498,0.62077,0.545243,0.626356,0.58044,0.617809,0.579946,0.660776,0.317141,0.538865,0.501328,0.511212,0.495508,0.565111,0.47089,0.663088,0.394836,0.668312,0.432541,0.641345,0.435254,0.60647,0.397239,0.534306,0.273771,0.536491,0.237196,0.583061,0.436369,0.606635,0.438023,0.399064,0.506661,0.397865,0.47403,0.421081,0.472686,0.979721,0.28835,0.976629,0.323651,0.384172,0.61258,0.608324,0.315905,0.667599,0.242394,0.691411,0.244651,0.688381,0.281222,0.686203,0.318191,0.685754,0.355673,0.686635,0.393366,0.688667,0.430568,0.355779,0.166986,0.562528,0.355222,0.586854,0.314821,0.589209,0.200743,0.527098,0.569388,0.4956,0.563675,0.503183,0.529408,0.532924,0.535129,0.556032,0.538902,0.550406,0.573029,0.516118,0.639309,0.48134,0.633074,0.488334,0.598214,0.544754,0.607572,0.539804,0.642657,0.601415,0.544165,0.596228,0.613653,0.611644,0.648666,0.575903,0.541586,0.598713,0.578867,0.593937,0.648046,0.561139,0.645015,0.570458,0.575678,0.521419,0.604022,0.565207,0.610174,0.511318,0.675707,0.465632,0.706157,0.535565,0.678777,0.53187,0.7168,0.610664,0.681711,0.611365,0.71603,0.613908,0.756747,0.618361,0.785408,0.600582,0.785408,0.557765,0.680507,0.59316,0.68175,0.554979,0.717444,0.55881,0.785408,0.503384,0.768511,0.449408,0.752066,0.647584,0.508104,0.651432,0.580652,0.651269,0.614062,0.712551,0.712214,0.677965,0.713021,0.677519,0.679417,0.712305,0.785408,0.677745,0.756747,0.654371,0.713693,0.652637,0.68051,0.489378,0.76969,0.712765,0.756747,0.629678,0.714983,0.633171,0.756747,0.665485,0.825095,0.474189,0.668809,0.709211,0.643853,0.711356,0.677774,0.675334,0.646606,0.527696,0.825095,0.559229,0.825095,0.558855,0.863399,0.528834,0.863399,0.559208,0.899822,0.616186,0.825095,0.630305,0.863399,0.602022,0.863399,0.605296,0.899822,0.709995,0.899822,0.655944,0.899822,0.668169,0.863399,0.598592,0.825095,0.802875,0.938831,0.800687,0.898388,0.841441,0.898388,0.88479,0.898388,0.881169,0.938831,0.380038,0.784704,0.746048,0.863558,0.746279,0.899105,0.628024,0.899822,0.485302,0.863399,0.484755,0.899822,0.604106,0.938127,0.710617,0.863399,0.711504,0.825095,0.748785,0.825393,0.625656,0.938127,0.603121,0.961431,0.364361,0.938235,0.390752,0.961431,0.558125,0.961431,0.037028,0.355359,0.054566,0.386317,0.459282,0.392492,0.965227,0.085983,1.00117,0.087103,0.992416,0.145819,0.510916,0.129386,0.913392,0.247182,0.912468,0.280836,0.892637,0.279829,0.107519,0.08486,0.108121,0.136703,0.941524,0.179392,0.852842,0.084689,0.853424,0.142899,0.833999,0.143089,0.875543,0.141866,0.875426,0.211876,0.874984,0.177567,0.854064,0.177685,0.854558,0.21197,0.836441,0.212267,0.20399,0.420942,0.932079,0.821041,0.943681,0.821041,0.941102,0.863717,0.96279,0.144766,0.942577,0.144098,0.94363,0.085542,0.961229,0.180282,0.939764,0.214368,0.835284,0.17794,0.891075,0.346906,0.773895,0.085308,0.774545,0.143724,0.73885,0.144234,0.776107,0.213951,0.740858,0.21532,0.739729,0.179768,0.805435,0.08513,0.806082,0.143468,0.806872,0.178475,0.808048,0.213013,0.775176,0.178947,0.674135,0.507873,0.835782,0.3805,0.852955,0.380791,0.850566,0.418498,0.83267,0.084852,0.25091,0.755889,0.762549,0.863717,0.800575,0.863717,0.750424,0.820743,0.248568,0.898472,0.206749,0.897121,0.211529,0.863392,0.782731,0.757616,0.804135,0.796983,0.75816,0.898388,0.675346,0.8229,0.981286,0.252726,0.953257,0.284747,0.512361,0.308977,0.030796,0.429392,0.041433,0.38845,0.937415,0.248774,0.180018,0.418277,0.170743,0.417228,0.377023,0.544413,0.379716,0.508169,0.381038,0.54427,0.875631,0.245712,0.956967,0.250418,0.935075,0.28252,0.207079,0.38285,0.968127,0.466545,0.967414,0.502208,0.937305,0.501026,0.11164,0.422118,0.147996,0.377614,0.163046,0.341873,0.129758,0.459401,0.938652,0.464659,0.091768,0.460912,0.091247,0.498921,0.126303,0.306507,0.83809,0.345183,0.838357,0.312036,0.165258,0.377371,0.78054,0.282862,0.745826,0.286638,0.742603,0.250984,0.784605,0.316684,0.756636,0.356774,0.810773,0.280254,0.777721,0.248578,0.815546,0.346449,0.75055,0.321872,0.813071,0.313283,0.772082,0.426233,0.764389,0.391457,0.797984,0.46134,0.236964,0.388573,0.229147,0.425296,0.809349,0.246899,0.837529,0.245833,0.824316,0.461242,0.830219,0.418348,0.517492,0.454441,0.480241,0.428327,0.967349,0.537979,0.967827,0.573786,0.937789,0.573616,0.9106,0.573234,0.910244,0.53683,0.937997,0.53742,0.968961,0.644753,0.935912,0.645829,0.936293,0.609666,0.90846,0.6462,0.909594,0.60959,0.822478,0.570407,0.850984,0.535063,0.847149,0.644743,0.819197,0.643432,0.821065,0.60678,0.868005,0.572026,0.869351,0.535583,0.889175,0.536404,0.866224,0.645483,0.866801,0.608513,0.8892,0.609203,0.889542,0.572767,0.849606,0.571371,0.888209,0.646034,0.968275,0.609403,0.848208,0.607797,0.970942,0.679749,0.975321,0.713107,0.941298,0.712428,0.911256,0.712428,0.908466,0.683887,0.937354,0.682567,0.990313,0.765365,0.955836,0.793819,0.814627,0.712428,0.817121,0.680689,0.846328,0.682672,0.843228,0.712428,0.834044,0.757616,0.812648,0.757616,0.863593,0.712428,0.866093,0.683531,0.887644,0.684003,0.858814,0.757616,0.888607,0.712428,0.917285,0.796983,0.888252,0.796983,0.890837,0.757616,0.308835,0.503284,0.277727,0.496803,0.79714,0.569527,0.776411,0.568737,0.77832,0.53295,0.793757,0.64197,0.77157,0.640448,0.774184,0.604543,0.795657,0.605653,0.791252,0.678609,0.787688,0.712428,0.764952,0.711212,0.755403,0.756681,0.798146,0.533379,0.768625,0.676497,0.924057,0.863717,0.886616,0.863717,0.886346,0.821041,0.920296,0.898388,0.937737,0.898388,0.75118,0.785921,0.748738,0.938479,0.747918,0.899105,0.847713,0.863717,0.823825,0.863717,0.824487,0.821041,0.851848,0.821041,0.879779,0.961431,0.246731,0.81969,0.215571,0.820486,0.747686,0.863558,0.92357,0.821041,0.752819,0.79647,0.825009,0.796983,0.852969,0.796983,0.510475,0.768988,0.497283,0.768244,0.569142,0.758245,0.569175,0.758636,0.5495,0.758016,0.4901,0.77689,0.486634,0.825095,0.558466,0.938127,0.529187,0.938127,0.529119,0.899822,0.529725,0.961431,0.508996,0.202514,0.484248,0.938235,0.483785,0.961431,0.466147,0.961431,0.030214,0.811835,0.063681,0.809781,0.093557,0.782179,0.08263,0.786527,0.084898,0.961431,0.08217,0.938938,0.500249,0.071662,0.472654,0.311776,0.302187,0.134641,0.265277,0.140308,0.255534,0.082038,0.271273,0.175661,0.441402,0.505632,0.50023,0.203887,0.498906,0.238816,0.316149,0.242926,0.28455,0.281977,0.28781,0.353471,0.286759,0.317645,0.109155,0.172342,0.525946,0.488944,0.288008,0.389598,0.280932,0.24638,0.446898,0.23762,0.46692,0.938235,0.438103,0.961431,0.52019,0.461967,0.542829,0.128591,0.516588,0.069723,0.748423,0.082831,0.74139,0.141549,0.036156,0.085814,0.008242,0.14007,0.477436,0.388744,0.722675,0.284068,0.71997,0.319836,0.718346,0.355756,0.477234,0.48699,0.486398,0.45257,0.718585,0.428144,0.721919,0.465625,0.717529,0.391982,0.511479,0.273051,0.73125,0.212765,0.726668,0.248357,0.266331,0.566743,0.256195,0.636919,0.260864,0.601734,0.533517,0.523516,0.540576,0.558154,0.554051,0.627708,0.547388,0.592871,0.25148,0.708279,0.252931,0.672541,0.247613,0.938938,0.568937,0.697113,0.578635,0.738338,0.586151,0.75411,0.560905,0.662615,0.249988,0.938235,0.250943,0.898472,0.286908,0.899822,0.248546,0.961431,0.461185,0.556091,0.468954,0.5215,0.446275,0.625585,0.453659,0.590773,0.735978,0.56993,0.700995,0.575181,0.695819,0.540094,0.744888,0.640376,0.705564,0.609821,0.74082,0.605074,0.429926,0.694934,0.428535,0.756291,0.411552,0.751786,0.419422,0.736109,0.747551,0.676094,0.748415,0.71193,0.753764,0.757682,0.438691,0.660471,0.747099,0.938479,0.710021,0.938127,0.35167,0.543496,0.350458,0.57897,0.748435,0.961431,0.709836,0.961431,0.221648,0.496479,0.202719,0.532893,0.845866,0.460592,0.126112,0.136482,0.893441,0.14216,0.91703,0.142446,0.12567,0.084823,0.272116,0.53181,0.382691,0.578951,0.586391,0.755288,0.592832,0.067665,0.443783,0.068059,0.730831,0.534821,0.725861,0.499638,0.507778,0.420037,0.248894,0.863392,0.824646,0.898388,0.363003,0.961431,0.344185,0.961431,0.406658,0.68085,0.627596,0.681426,0.349997,0.612247,0.37387,0.612509,0.349043,0.646486,0.67409,0.578224,0.674883,0.611817,0.650881,0.545058,0.673052,0.54289,0.375461,0.579233,0.89424,0.084788,0.917496,0.085102,0.246171,0.961431,0.109248,0.753827,0.909155,0.499787,0.131173,0.534958,0.112276,0.498177,0.130902,0.497577,0.869692,0.498378,0.888227,0.499011,0.113551,0.459878,0.948382,0.783874,0.876182,0.084688,0.242873,0.798389,0.915367,0.757616,0.967189,0.814515,0.998526,0.781956,0.058981,0.863392,0.067996,0.961431,0.065033,0.938938,0.062036,0.897121,0.057286,0.820486,0.051408,0.786527,0.486762,0.769123,0.506521,0.777593,0.527146,0.785408,0.495658,0.771959,0.511813,0.938127,0.511544,0.899822,0.511153,0.863399,0.44826,0.756553,0.428497,0.756654,0.411327,0.752783,0.969616,0.816712,0.943635,0.783874,0.931954,0.779527,0.962442,0.814515,0.671894,0.205883,0.264729,0.086295,0.084139,0.085095,0.930642,0.961431,0.737835,0.085656,0.509543,0.237095,0.000019,0.778071,0.061437,0.811835,0.000019,0.086816,0.509831,0.825095,0.512131,0.961431,0.999309,0.782645,0.964869,0.816712,0.084898,0.96726,0.067996,0.96726,0.483785,0.96726,0.466147,0.96726,0.246171,0.96726,0.195849,0.96726,0.709836,0.96726,0.642232,0.96726,0.173979,0.96726,0.121285,0.96726,0.625847,0.96726,0.603121,0.96726,0.558125,0.96726,0.529725,0.96726,0.512131,0.96726,0.879779,0.96726,0.826458,0.96726,0.802916,0.96726,0.748435,0.96726,0.390752,0.96726,0.363003,0.96726,0.344185,0.96726,0.286098,0.96726,0.248546,0.96726,0.913114,0.96726,0.438103,0.96726,0.750073,0.96726,0.930642,0.96726,0.516588,0.056672,0.543142,0.056672,0.592832,0.056672,0.624547,0.056672,0.228485,0.056672,0.264729,0.056672,0.107519,0.056672,0.12567,0.056672,0.876182,0.056672,0.89424,0.056672,0.661006,0.056672,0.711275,0.056672,0.443783,0.056672,0.475998,0.056672,0.348814,0.056672,0.390068,0.056672,0.149132,0.056672,0.036156,0.056672,0.057867,0.056672,0.292252,0.056672,0.084139,0.056672,0.917496,0.056672,0.805435,0.056672,0.83267,0.056672,0.500249,0.056672,0.565714,0.056672,0.94363,0.056672,0.255534,0.056672,0.169408,0.056672,0.196782,0.056672,0.737835,0.056672,0.773895,0.056672,0.000019,0.056672,0.852842,0.056672,0.965227,0.056672,1.00117,0.056672,0.748423,0.056672]],\"influencesPerVertex\":4,\"vertices\":[-2.7151,2.71759,0.70663,-3.09545,1.60631,0.308106,-2.98505,2.7175,0.2871,0.883129,4.05622,0.347117,-2.87384,4.02861,0.268491,-2.3059,2.71853,0.911467,-1.6379,2.71905,1.02224,-2.28239,4.02907,0.791008,-2.62019,4.02906,0.605109,-1.63785,3.37334,0.960375,-1.63803,4.02918,0.908926,-0.702706,7.27551,-0.829943,-1.12311,2.71735,0.817973,-0.806388,1.62672,0.577471,-0.78907,2.71638,0.442121,-0.501646,1.63226,0.056075,-0.524131,2.7168,0.106113,-1.14576,3.37318,0.781167,-1.16735,4.02966,0.743413,-0.810834,3.37402,0.41593,0.768545,4.68462,-0.125624,-0.586429,3.37461,0.079872,-2.85366,4.6846,0.239102,-2.83272,5.34048,0.220338,-2.81028,5.99671,0.201445,-2.78389,6.65282,0.173527,-2.75861,7.30856,0.163754,-2.73535,7.96475,0.168298,-2.71409,8.61986,0.150475,-2.23461,4.68536,0.759701,-2.19445,5.34109,0.723911,-2.57244,4.68502,0.575517,-2.53281,5.34075,0.556792,-1.63799,4.68558,0.840127,-1.63789,5.3415,0.766686,-2.16314,5.99646,0.708004,-2.1338,6.65004,0.701985,-2.50211,5.99674,0.537655,-2.4727,6.65164,0.509572,-1.18909,4.68559,0.705805,-1.2118,5.34151,0.668925,-0.943572,4.68541,0.288862,-0.987455,5.34023,0.289847,-1.04148,6.69127,0.355973,-1.63781,6.68741,0.698596,-2.17662,7.30268,0.753737,-2.23978,7.95898,0.860262,-2.51411,7.30578,0.499796,-2.57597,7.96208,0.504696,-1.63898,7.30017,0.847727,-1.64099,7.9559,1.09266,-2.26141,8.61491,0.929893,-2.34101,9.25948,0.96822,-2.59668,8.61793,0.487285,-1.64257,8.61241,1.24083,-1.63758,6.01059,0.703486,-1.18487,9.27117,1.32611,-0.939839,7.97747,0.824013,-0.790452,7.30258,0.297941,-0.847995,9.2719,1.12019,-0.575836,8.61429,0.713933,-0.535404,9.27286,0.785355,-0.383959,8.61529,0.282006,-0.315144,9.27331,0.281577,-2.74841,11.8936,1.41112,-2.8033,9.9283,0.277882,-2.89001,10.5848,0.276813,-2.9729,11.8932,0.955604,-2.96622,11.2409,0.274988,-3.02266,11.8987,0.273308,-2.73375,12.5576,1.40247,-2.7117,13.2144,1.3719,-2.68031,13.8719,1.33077,-2.93516,12.5577,0.938932,-2.89156,13.2145,0.938873,-3.02685,12.5572,0.27324,-2.987,13.2143,0.274067,-2.82903,13.8716,0.938721,-2.7385,14.4883,0.957985,-2.93305,13.8714,0.274729,-2.85557,14.5285,0.275229,-1.63935,9.92851,1.44658,-1.63802,10.5847,1.5313,-2.32253,11.8917,1.69418,-1.63584,11.2399,1.61884,-1.6331,11.8968,1.70854,-2.48575,9.92584,1.06891,-2.58529,10.5826,1.1867,-1.14937,9.92958,1.35254,-1.11358,10.5858,1.37082,-1.07799,11.2418,1.39735,-1.05362,11.8982,1.43862,-0.813058,9.93003,1.14777,-0.778725,10.5862,1.17031,-0.503812,9.92993,0.813083,-0.47251,10.5862,0.835734,-0.263665,9.92986,0.281388,-0.215058,10.5862,0.281207,-0.744149,11.2424,1.18975,-0.720361,11.8986,1.21022,-0.444274,11.2426,0.855418,-0.423967,11.899,0.876053,-0.169533,11.2427,0.280866,-0.143709,11.8994,0.280482,-2.30977,12.557,1.69214,-2.31079,13.2141,1.65258,-1.63216,12.5554,1.75143,-1.63298,13.2124,1.75047,-2.31167,13.8715,1.60124,-1.63461,13.8691,1.75053,-1.6375,14.5265,1.71594,-1.0301,12.555,1.46659,-0.995799,13.2115,1.47474,-0.977349,14.5215,1.52851,-0.378177,14.5004,1.38504,-0.696687,12.5548,1.23489,-0.662083,13.2105,1.26248,-0.410968,12.5553,0.900501,-0.408527,13.2101,0.927483,-0.133853,12.5559,0.280164,-0.129655,13.2102,0.279951,-0.338375,13.8679,0.991787,-0.160998,14.1828,1.28385,-0.046583,13.9042,0.254641,0.008382,14.1842,0.018369,-2.76542,15.185,0.275641,-2.21283,15.1857,1.45164,-2.12234,15.842,1.38027,-1.6403,15.1821,1.63403,-1.64838,15.8384,1.56831,-2.04783,16.4962,1.32378,-2.00354,17.1626,1.28958,-2.47661,15.8349,0.92585,-2.29348,16.4982,0.943766,-2.52071,16.4992,0.277879,-2.38767,17.1546,0.277298,-0.983677,15.177,1.6031,-0.989223,15.8334,1.71062,-0.328228,15.1726,1.63253,-0.33023,15.8306,1.81706,-1.04377,17.1481,1.8437,-0.331296,17.1482,2.0093,-1.99666,17.5442,1.28366,-1.71315,17.542,1.50721,-2.15255,17.5641,0.96866,-2.29628,17.6044,0.284493,-1.03938,17.5672,1.84648,-0.331244,17.5614,1.9868,-3.22533,1.63242,-0.380016,-3.18019,2.71643,-0.379122,-3.10004,1.63123,-1.04692,-3.08979,2.71508,-1.04622,-3.13968,3.37236,-0.377555,-3.1067,4.02799,-0.37666,-3.08157,3.37118,-1.04491,-3.0779,4.02719,-1.04378,-2.80588,1.63062,-1.56349,-2.82126,2.7143,-1.58121,-2.83342,3.37031,-1.59881,-2.84268,4.02649,-1.61649,-2.41643,1.63067,-1.89761,-2.40843,2.71434,-1.91578,-2.07886,1.63098,-2.08025,-2.07095,2.71467,-2.07711,-2.45292,7.97133,-1.19302,-1.63904,1.63113,-2.08358,-0.202394,15.1365,-1.84541,-2.4,3.37031,-1.9342,-2.39722,4.02654,-1.9525,-2.06262,3.37073,-2.07628,-2.05971,4.02702,-2.07545,-1.31934,3.37163,-2.04042,-1.65708,3.37125,-2.07678,-0.378603,1.63298,-0.380598,-0.475235,1.63261,-1.0427,-0.548974,2.71623,-1.04144,-1.20718,8.61232,1.13648,-0.571149,3.37129,-1.03944,-0.548043,4.02656,-1.03871,-0.959518,1.63126,-1.76802,0.207775,15.1359,-1.84931,-1.29596,1.6312,-2.05167,-0.968071,6.66211,-1.50623,-0.599883,1.6317,-1.43268,-0.605471,2.7153,-1.42174,-0.96463,3.37129,-1.74455,-0.965603,4.02752,-1.73931,-0.606136,3.37088,-1.41609,-0.604095,4.02673,-1.41791,-3.07595,4.68417,-0.376155,-3.04437,5.34025,-0.375902,-3.07635,4.68365,-1.04293,-3.05585,5.3403,-1.0427,-3.02936,5.99679,-0.3761,-2.99208,6.65433,-0.37722,-3.02683,5.99748,-1.0433,-2.94902,6.65594,-1.04451,-2.85175,4.68353,-1.62463,-2.84173,5.34077,-1.60834,-2.80524,5.99821,-1.57713,-2.73826,6.65691,-1.50601,-2.9095,7.31123,-0.379372,-2.80763,7.967,-0.381558,-2.73131,9.27455,-0.384403,-2.66335,8.65345,-0.751433,-2.6566,9.2757,-0.734547,-2.39418,4.68391,-1.96082,2.33939,7.97231,-1.32159,-2.05669,4.68404,-2.07135,-0.970181,7.29488,-1.3284,-2.33941,7.97232,-1.3216,-0.969694,5.94284,-1.62903,-1.63426,5.99843,-1.97474,-1.636,6.65689,-1.89272,-0.568278,4.68347,-0.575628,-0.57459,5.33919,-0.527809,-0.539806,4.6832,-1.0388,-0.558771,5.34019,-1.03923,-0.585163,5.99719,-0.481688,-0.966859,4.68419,-1.73057,-0.967625,5.34128,-1.69442,-0.602118,4.6835,-1.42039,-0.614942,5.34087,-1.40127,2.7275,7.96933,-0.852365,2.38045,5.34149,-1.8999,-2.33763,8.67346,-1.08094,-2.31471,9.27601,-1.05348,1.3366,8.63437,-1.31989,-1.27308,9.27536,-1.34714,-2.33998,7.32267,-1.57458,0.970311,7.29485,-1.32855,-1.63735,7.31523,-1.72239,-1.61505,8.01392,-1.496,2.36622,5.99874,-1.85348,1.27307,9.27535,-1.34715,-1.59844,9.27773,-1.40041,-0.976927,8.00768,-1.23217,-0.434535,7.95742,-0.383376,-0.68457,6.68028,-0.598589,-0.554458,7.96027,-0.86157,-0.969852,8.61964,-1.23413,-1.33661,8.63436,-1.31989,-0.341929,8.6166,-0.385249,-0.293695,9.27393,-0.386723,-0.534458,8.61814,-0.903701,-0.515236,9.27488,-0.904894,0.968109,6.66203,-1.50631,2.35222,6.65734,-1.76234,-2.77624,9.92984,-0.386432,-2.81401,10.5863,-0.388616,-2.6609,9.93119,-0.740887,-2.66532,10.5874,-0.748384,-2.83951,11.2428,-0.390355,-2.85687,11.8995,-0.391308,-2.66808,11.2438,-0.752998,-2.67111,11.8998,-0.757918,-2.86154,12.5563,-0.39108,-2.85534,13.2132,-0.389929,-2.67977,12.5557,-0.769092,-2.69259,13.2119,-0.783391,-2.82616,13.8708,-0.388896,-2.68741,13.8692,-0.785267,-2.31546,9.93133,-1.05222,-2.31567,10.5879,-1.05891,-1.92295,9.93075,-1.36923,-1.92578,10.5879,-1.36973,-2.31539,11.2442,-1.05748,-2.31488,11.9003,-1.05133,-1.92589,11.2443,-1.36407,-1.91494,11.9006,-1.35305,-1.58516,9.93065,-1.41021,-1.58794,10.5877,-1.41945,-1.58822,11.244,-1.42671,-1.57761,11.9004,-1.4274,-0.88119,9.93068,-1.21443,-0.851674,10.5868,-1.22068,-0.25498,9.93028,-0.387695,-0.219082,10.5866,-0.388385,-0.496366,9.93093,-0.879883,-0.477501,10.5868,-0.886548,-0.83816,11.2431,-1.25599,-0.843347,11.8998,-1.27893,-0.198725,11.2431,-0.388859,-0.188117,11.8996,-0.389072,-0.47428,11.2431,-0.921551,-0.469203,11.8996,-0.943999,-1.21824,9.93046,-1.40925,-1.18954,10.5872,-1.41852,-1.1762,11.2436,-1.42599,-1.18142,11.9001,-1.42691,-2.31437,12.5557,-1.0564,-2.31488,13.2106,-1.08669,-1.89505,12.5561,-1.34674,-1.90877,13.2092,-1.36179,-2.30493,13.8256,-1.16711,-1.55813,12.5563,-1.42215,-1.57198,13.2084,-1.4217,-2.15532,14.5174,-1.55865,-1.66859,14.5067,-1.85163,-0.848119,12.5561,-1.2858,-0.826198,13.2068,-1.2771,-0.179164,12.556,-0.389109,-0.177505,13.2102,-0.388825,-0.45736,12.5561,-0.950601,-0.456671,13.2086,-0.941044,-0.074284,13.9271,-0.331716,-0.002416,14.2363,-0.333623,-0.364791,13.8333,-1.06745,-0.04107,14.5296,-1.10425,-1.18617,12.5563,-1.42174,-1.16515,13.2073,-1.42132,-0.977248,14.4986,-1.9541,-0.182032,14.5203,-1.6421,-2.57316,15.8827,-0.372849,-2.27847,15.8413,-1.05125,-2.46362,16.499,-0.389124,-2.29277,17.1555,-0.389486,-2.07758,17.1568,-0.853969,-1.66215,17.1519,-1.1914,-2.09253,15.1841,-1.51649,-2.04124,15.8418,-1.44723,-1.67733,15.1843,-1.89679,-1.67931,15.8548,-1.77872,-1.68603,16.4904,-1.57094,-0.982299,15.179,-2.07478,-0.986805,15.8542,-2.00082,-0.317676,15.849,-1.82727,-0.992463,16.5228,-1.77165,-0.323936,16.5168,-1.70613,-2.18393,17.6484,-0.407373,-2.00674,17.6407,-0.757279,-1.66114,17.6293,-1.00199,-0.959663,17.5851,-1.24044,-0.325258,17.5872,-1.28225,0.537591,1.62732,0.088687,0.524308,2.71644,0.106668,1.12346,2.71586,0.81835,0.784315,1.59795,0.430856,0.789249,2.71566,0.442419,0.58641,3.37459,0.079871,1.14575,3.37318,0.781166,1.16735,4.02966,0.743417,0.810824,3.37401,0.41594,-1.228,7.96836,0.935842,1.63736,2.71639,1.02247,2.30555,2.71677,0.911758,1.63784,3.37333,0.960378,1.63802,4.02918,0.908926,-1.24906,7.29939,0.745566,2.28238,4.02908,0.791008,2.62019,4.02906,0.605093,2.715,2.71657,0.706811,3.03487,1.59604,0.29581,2.98495,2.71688,0.287408,2.87383,4.02861,0.268476,1.18908,4.68558,0.705803,1.21179,5.34151,0.668925,0.94355,4.6854,0.288859,0.987445,5.34021,0.289869,1.04147,6.69129,0.355983,1.63799,4.68558,0.840121,1.63789,5.3415,0.766682,2.2346,4.68536,0.759695,2.19444,5.34109,0.723908,2.57243,4.68502,0.575511,2.5328,5.34075,0.556785,2.16313,5.99646,0.708005,2.13379,6.65004,0.701984,2.5021,5.99674,0.537647,2.47269,6.65164,0.509561,-1.63975,9.22634,1.34113,1.18486,9.27117,1.32611,0.939834,7.97746,0.82402,0.790463,7.3026,0.298013,0.575815,8.61427,0.71393,0.535395,9.27285,0.78537,0.383939,8.61527,0.282002,0.315124,9.27331,0.281578,0.847984,9.2719,1.1202,0.89554,8.61292,0.9968,1.63898,7.30017,0.847728,1.64099,7.9559,1.09266,2.17661,7.30268,0.753733,2.23977,7.95898,0.860252,2.5141,7.30578,0.49978,2.57596,7.96208,0.504679,-0.895548,8.61292,0.99679,2.2614,8.61491,0.929884,2.34101,9.25951,0.96821,2.59665,8.61791,0.487284,2.85365,4.6846,0.239095,2.8327,5.34048,0.220332,2.81027,5.99671,0.201437,2.78388,6.65282,0.173516,2.7586,7.30856,0.163737,2.73534,7.96475,0.168281,2.71407,8.61985,0.150456,1.14936,9.92958,1.35254,1.11357,10.5858,1.37082,1.07798,11.2418,1.39736,1.05361,11.8982,1.43862,0.503802,9.92993,0.813093,0.472499,10.5862,0.835741,0.263645,9.92985,0.281388,0.215037,10.5862,0.281207,0.813048,9.93002,1.14778,0.778715,10.5862,1.17032,0.444263,11.2426,0.855426,0.423956,11.899,0.876058,0.169513,11.2427,0.280866,0.143689,11.8994,0.280483,0.74414,11.2424,1.18976,0.720351,11.8986,1.21022,1.63935,9.9285,1.44657,1.63802,10.5847,1.5313,1.63575,11.2399,1.61883,1.63284,11.8968,1.70849,2.32104,11.8917,1.69483,2.48574,9.92584,1.06889,2.58528,10.5826,1.18668,1.03009,12.555,1.4666,0.995789,13.2115,1.47475,0.378173,14.5004,1.38505,0.977348,14.5215,1.52852,0.410959,12.5553,0.900507,0.408517,13.2101,0.927491,0.133833,12.5558,0.280164,0.129634,13.2102,0.279951,0.696677,12.5548,1.2349,0.662074,13.2105,1.26249,0.338367,13.8678,0.991789,0.160987,14.1828,1.28385,0.046571,13.9042,0.254641,-0.008389,14.1842,0.018369,1.63185,12.5554,1.75134,1.63279,13.2124,1.75042,2.30939,12.557,1.69232,2.31058,13.214,1.65269,1.63455,13.8691,1.75053,1.63759,14.5265,1.71595,2.31159,13.8715,1.60129,2.75237,11.8926,1.41703,2.80328,9.92831,0.277886,2.88999,10.5848,0.276813,2.99325,11.8909,0.961906,2.96619,11.2408,0.274852,3.02261,11.8986,0.27295,2.73344,12.5578,1.4028,2.71159,13.2145,1.37201,2.6803,13.8719,1.33078,2.954,12.5586,0.944314,2.89151,13.2147,0.938912,3.0268,12.5573,0.272905,2.98697,13.2144,0.273955,2.82902,13.8716,0.938721,2.73867,14.4881,0.957477,2.93303,13.8714,0.274729,2.85555,14.5285,0.275229,0.328228,15.1726,1.63253,0.33023,15.8306,1.81705,0.983677,15.177,1.6031,0.989222,15.8334,1.71061,0.331296,17.1482,2.0093,1.66569,17.16,1.5078,-1.68469,17.1604,1.49753,1.04375,17.1481,1.8437,1.64052,15.1821,1.63403,1.64837,15.8384,1.5683,2.21217,15.1853,1.45225,2.12209,15.8423,1.38038,2.25688,14.4938,1.51492,2.04782,16.4962,1.32378,2.00351,17.1626,1.2896,2.54618,15.1868,1.11119,2.47665,15.8353,0.925511,2.29346,16.4982,0.943765,2.52069,16.4992,0.277879,2.38765,17.1546,0.277298,0.331245,17.5614,1.9868,-2.26354,14.4934,1.51278,1.03917,17.5675,1.84644,1.71307,17.5419,1.50725,1.99662,17.5441,1.28369,2.15254,17.564,0.968659,2.29627,17.6044,0.284495,2.7654,15.185,0.275642,1.68335,16.4935,1.52113,-1.68395,16.4935,1.52082,1.01833,16.5162,1.79463,-2.75091,14.5315,-0.38471,-2.66588,15.1848,-0.3794,0.378584,1.63279,-0.380154,0.475214,1.63261,-1.0427,0.548955,2.71622,-1.04144,1.24905,7.29939,0.745569,1.20717,8.61232,1.13648,0.571128,3.37128,-1.03945,0.548023,4.02655,-1.03871,1.22799,7.96835,0.935842,0.599873,1.6317,-1.4327,0.60546,2.7153,-1.42176,0.959508,1.63125,-1.76804,0.969693,5.94286,-1.62904,1.29595,1.6312,-2.05167,1.32516,6.65605,-1.7466,0.606124,3.37088,-1.4161,0.604085,4.02673,-1.41793,0.964631,3.37129,-1.74457,0.965603,4.02752,-1.73933,1.32184,4.68478,-1.93576,1.63904,1.63112,-2.08359,1.32049,4.02824,-1.9879,2.41642,1.63067,-1.8976,2.40842,2.71434,-1.91577,2.07885,1.63098,-2.08025,2.07093,2.71466,-2.07711,1.31933,3.37163,-2.04043,1.65707,3.37125,-2.07678,2.39999,3.37031,-1.93418,2.39721,4.02653,-1.95249,2.06261,3.37073,-2.07628,2.0597,4.02701,-2.07545,2.75116,14.5315,-0.383349,2.66604,15.1849,-0.378496,1.10113,1.56795,0.823914,3.22529,1.63199,-0.379316,3.18015,2.71621,-0.378784,3.10002,1.63123,-1.04692,3.08977,2.71507,-1.04622,3.13966,3.37236,-0.377559,3.10668,4.02799,-0.376665,3.08154,3.37117,-1.04491,3.07788,4.02719,-1.04378,2.80587,1.63062,-1.56347,2.82125,2.7143,-1.58119,2.83341,3.3703,-1.59879,2.84267,4.02649,-1.61648,0.56827,4.68347,-0.575603,0.574561,5.33914,-0.527874,0.539785,4.6832,-1.0388,0.558752,5.34019,-1.03923,0.662168,7.31112,-0.027383,0.585095,5.99709,-0.481948,0.684025,7.28354,-0.831513,0.71096,5.99596,-0.146329,0.602107,4.6835,-1.4204,0.614933,5.34087,-1.40128,0.966859,4.68419,-1.73059,0.967624,5.34127,-1.69443,0.630408,7.29756,-0.570333,0.675298,6.67955,-0.59835,-0.65756,7.28252,-0.588054,1.33213,8.0117,-1.43087,2.39417,4.68391,-1.96081,2.81289,7.31915,-0.947125,2.05668,4.68404,-2.07136,-0.68415,6.68262,-0.908746,1.63426,5.99842,-1.97474,1.636,6.65689,-1.89273,-2.81291,7.31916,-0.947119,1.32767,7.31379,-1.60455,-0.591474,5.94652,-0.994277,0.43445,7.95773,-0.383303,0.554491,7.96057,-0.861708,0.684116,6.68229,-0.906295,0.977003,8.00777,-1.23222,0.34191,8.6166,-0.385253,0.293674,9.27393,-0.386723,0.534449,8.61813,-0.903706,0.515226,9.27488,-0.9049,0.969853,8.61964,-1.23413,1.32302,5.34131,-1.86535,-1.63484,5.34131,-2.01424,1.32383,5.97227,-1.81411,-0.674284,7.29949,-0.012238,-1.32186,4.68479,-1.93575,-2.36623,5.99874,-1.85348,-2.38047,5.34149,-1.8999,2.33762,8.67353,-1.08092,2.31471,9.27601,-1.05346,1.63735,7.31522,-1.7224,1.61505,8.01392,-1.496,2.33997,7.32266,-1.57458,-1.33213,8.0117,-1.43087,-1.32768,7.31379,-1.60455,1.59843,9.27771,-1.40041,-2.02702,5.99905,-1.94174,3.07593,4.68417,-0.376156,3.04435,5.34024,-0.375903,3.07633,4.68365,-1.04293,3.05583,5.3403,-1.0427,3.02934,5.99679,-0.3761,2.99206,6.65433,-0.37722,3.02681,5.99748,-1.0433,2.949,6.65594,-1.04451,2.85174,4.68352,-1.62462,2.84172,5.34077,-1.60833,2.80523,5.99821,-1.57713,2.73825,6.65691,-1.50599,2.90947,7.31123,-0.379372,2.80761,7.96699,-0.381558,1.65667,1.55124,1.0389,2.73129,9.27455,-0.384401,2.66334,8.65354,-0.751416,2.65659,9.2757,-0.734534,-1.32517,6.65605,-1.74659,0.254959,9.93028,-0.387695,0.219062,10.5866,-0.388385,0.496354,9.93093,-0.879887,0.477491,10.5868,-0.88656,0.881178,9.93068,-1.21444,0.851664,10.5868,-1.2207,0.198704,11.2431,-0.388858,0.188097,11.8996,-0.389072,0.47427,11.2431,-0.921564,0.469192,11.8996,-0.944008,0.83815,11.2431,-1.256,0.843337,11.8998,-1.27894,1.21823,9.93046,-1.40925,1.18953,10.5872,-1.41853,1.17619,11.2436,-1.42599,1.18141,11.9001,-1.42691,1.92294,9.93075,-1.36923,1.92577,10.5879,-1.36972,2.31546,9.93133,-1.05221,2.31567,10.5879,-1.05889,1.92588,11.2443,-1.36407,1.91493,11.9006,-1.35304,2.31539,11.2442,-1.05746,2.31488,11.9003,-1.05131,1.58515,9.93065,-1.41021,1.58793,10.5877,-1.41945,1.58821,11.244,-1.42671,1.5776,11.9004,-1.4274,0.179143,12.556,-0.389109,0.177485,13.2102,-0.388825,0.457349,12.5561,-0.950607,0.456645,13.2086,-0.941023,0.848108,12.5561,-1.28581,0.826178,13.2067,-1.27709,0.074265,13.9271,-0.331702,0.00233,14.2364,-0.333559,0.364648,13.8335,-1.0674,0.040962,14.5297,-1.10427,1.18617,12.5563,-1.42174,1.16516,13.2073,-1.42132,0.184161,14.5207,-1.6439,0.977846,14.4986,-1.95416,1.89504,12.5561,-1.34674,1.90876,13.2092,-1.36179,2.31437,12.5557,-1.05638,2.31487,13.2106,-1.08668,2.30493,13.8256,-1.16708,1.55812,12.5563,-1.42215,1.57197,13.2084,-1.4217,-1.32303,5.34131,-1.86534,1.66859,14.5067,-1.85162,2.15528,14.5174,-1.55868,2.77622,9.92983,-0.38643,2.81399,10.5863,-0.388616,2.66089,9.93119,-0.740872,2.66531,10.5874,-0.74837,2.83949,11.2428,-0.390355,2.85685,11.8995,-0.391308,2.66807,11.2438,-0.752984,2.6711,11.8998,-0.757904,2.86152,12.5563,-0.39108,2.85532,13.2132,-0.389929,2.67976,12.5558,-0.769078,2.69258,13.2119,-0.783379,2.82618,13.8708,-0.388762,2.68741,13.8691,-0.785228,0.769892,6.68131,-0.152285,0.317578,15.8491,-1.82724,0.982744,15.1793,-2.0748,0.986891,15.8543,-2.0008,0.323936,16.5168,-1.70613,0.992465,16.5228,-1.77164,2.57316,15.8827,-0.372801,2.27845,15.8413,-1.05125,1.66219,17.1519,-1.19133,2.4636,16.4989,-0.389124,2.2928,17.1554,-0.389385,2.07746,17.1568,-0.854106,1.67733,15.1843,-1.89678,1.67931,15.8548,-1.7787,2.09252,15.1841,-1.51648,2.04123,15.8418,-1.44721,1.686,16.4904,-1.57095,-1.01859,16.5162,1.79453,0.325259,17.5872,-1.28225,0.331129,16.5324,1.94912,0.959665,17.5851,-1.24044,-0.331129,16.5324,1.94912,1.64325,17.6282,-1.00807,2.18393,17.6484,-0.407339,2.00663,17.6408,-0.757345,-0.988901,17.1558,-1.42338,-0.328406,17.1555,-1.47044,0.988903,17.1558,-1.42337,0.328407,17.1555,-1.47043,2.71717,9.30679,0.214712,-2.71746,9.30615,0.20336,-2.63044,14.4978,1.2388,2.63042,14.4998,1.23807,-0.985537,13.8334,1.485,0.985533,13.8334,1.48501,-0.631627,13.8513,1.29137,0.631619,13.8513,1.29137,-2.62671,15.1862,0.94153,2.62748,15.1861,0.93946,1.94292,16.4692,-1.3489,-1.94293,16.4692,-1.34891,2.66072,15.859,0.277094,-2.66073,15.859,0.277094,-2.16996,17.1636,0.954472,2.16994,17.1636,0.954471,2.20062,16.4729,-0.956133,-2.20065,16.4729,-0.956112,-1.99799,13.2162,1.77981,-1.94468,15.194,1.62147,-1.98156,13.8759,1.75699,-2.01614,12.5553,1.79936,-2.03957,11.8863,1.76183,-1.9658,14.5192,1.69407,1.97411,13.8759,1.75865,1.96562,15.194,1.61484,1.97641,13.2161,1.78295,1.98045,12.5551,1.80247,1.99007,11.8863,1.7651,1.97223,14.5189,1.69198,-2.65966,11.211,1.29772,2.65949,11.2108,1.29781,2.17132,10.5834,1.45533,2.23633,11.2152,1.516,2.10499,9.92688,1.38386,-2.23649,11.2152,1.51595,-2.17132,10.5834,1.45534,-2.10499,9.92688,1.38386,2.82427,11.2167,0.856035,2.762,10.5836,0.779261,2.69823,9.92677,0.699908,-2.76201,10.5836,0.77927,-2.69825,9.92676,0.699904,-2.82432,11.2169,0.856071,-2.63896,9.29764,0.576521,-2.0234,9.24124,1.30883,2.63896,9.298,0.576648,2.02381,9.24363,1.30905,2.33358,1.55917,0.925032,-2.3293,1.63912,1.04153,1.30305,2.70017,-2.04806,-1.30305,2.69987,-2.04806,2.02019,13.8253,-1.42297,0.584723,13.8147,-1.45444,-0.590987,13.8049,-1.45047,-2.02095,13.8279,-1.42342,2.32107,15.1842,-1.13522,2.34668,14.5278,-1.19549,-2.31583,15.1841,-1.144,-2.3383,14.5277,-1.20725,1.06743,13.8119,-1.6135,-1.07106,13.8119,-1.61336,1.75247,17.1517,-1.11929,-1.76697,17.1518,-1.10756,1.61883,13.8067,-1.5931,-1.61882,13.8067,-1.59311,1.63483,5.34131,-2.01424,0.502819,7.9741,0.144329,1.02987,6.01026,0.309527,-1.3205,4.02824,-1.98789,2.02701,5.99905,-1.94174,-1.32384,5.97226,-1.81411,-0.645787,5.94649,-1.35225,0.645803,5.94684,-1.35222,0.961825,2.69665,-1.75224,-1.64812,2.69604,-2.07416,-0.737649,5.99721,-0.108206,-0.504346,7.97437,0.155767,2.63411,7.32239,-1.38363,-2.63413,7.32241,-1.38364,-0.96183,2.69658,-1.75223,-2.01089,8.66183,-1.25486,-1.96935,9.27511,-1.25589,1.64811,2.69611,-2.07416,2.01088,8.66188,-1.25483,-2.0219,6.65751,-1.83573,1.96934,9.27511,-1.25589,-2.01337,7.9819,-1.48416,-2.01711,7.31927,-1.64359,-1.64165,4.68441,-2.04737,1.60706,8.64572,-1.38132,-1.64952,4.02784,-2.0668,2.01336,7.9819,-1.48416,1.64165,4.68441,-2.04738,-1.60706,8.64568,-1.38133,2.0171,7.31926,-1.64359,0.92619,9.27469,-1.21222,2.02189,6.6575,-1.83572,1.64951,4.02784,-2.0668,-0.926196,9.27469,-1.21222,-2.71456,8.64858,-0.383034,-2.35222,6.65734,-1.76235,2.03191,5.34167,-2.04348,2.71454,8.64867,-0.383033,-2.03287,5.34168,-2.04352,-2.72751,7.96933,-0.852361,2.45016,7.97134,-1.19617,-1.57074,1.6803,1.2337,-0.783505,6.682,-0.126822,0.591476,5.94643,-0.995075,-1.02981,6.01025,0.309413,-2.90504,3.39514,0.258232,-2.66536,3.4049,0.652153,-2.27046,3.39541,0.822139,2.66625,3.39261,0.653242,2.26989,3.3868,0.823491,2.90764,3.3864,0.25428,0.993921,7.30054,0.53644,-0.993931,7.30054,0.536431,2.00376,10.5843,1.47999,1.99746,11.2248,1.55776,2.0091,9.92807,1.39793,-0.882071,4.0471,0.347684,-2.02144,9.92808,1.3963,-0.706054,4.05115,-0.049937,-0.768078,4.68463,-0.126773,-0.762068,5.33893,-0.152518,-2.03418,11.2234,1.55143,0.707484,4.06265,-0.050574,0.762448,5.33887,-0.15174,0.482865,2.71707,-0.49483,0.574018,4.05088,-0.587279,0.563276,3.37545,-0.58118,-0.574415,4.04269,-0.582171,-0.482063,2.71716,-0.488168,-0.563291,3.37668,-0.571721,-2.02834,10.5843,1.4765,1.63975,9.22635,1.34112,1.63781,6.68741,0.698596,1.64257,8.61241,1.24082,1.63758,6.01059,0.703486,-1.27455,6.01233,0.63463,-1.28511,6.69163,0.633298,-0.656001,7.97779,0.579824,0.655978,7.97779,0.579818,1.2851,6.69163,0.633302,1.27455,6.01233,0.634633,2.47006,15.8679,-0.610845,2.63983,14.5315,-0.737793,2.25847,17.1553,-0.464575,2.38891,16.4911,-0.55116,2.53983,15.185,-0.666043,-2.48391,15.1849,-0.784744,-2.39122,15.8568,-0.792208,-2.11959,17.1554,-0.765213,-2.27931,16.4799,-0.787426,-2.60459,14.5313,-0.792664,-2.53098,15.1869,1.06088,0.34645,15.1575,-1.89695,0.678181,13.8169,-1.49039,0.462355,14.5285,-1.81233,-0.666276,13.8087,-1.48106,-0.41391,14.535,-1.78907,-0.313453,15.1567,-1.87994,0.160035,14.1338,-1.09657,-0.180002,14.0916,-1.09438,-0.001001,17.5872,-1.28226,0.000947,16.5157,-1.7065,-0.005101,14.5133,-1.63939,0.000029,17.155,-1.47065,0.001747,15.848,-1.82761,-0.005034,15.1353,-1.84758,-0.003563,13.8563,0.984171,-0.003561,14.1826,1.28401,-0.000743,15.83,1.817,-0.001871,15.1715,1.63218,0.00222,17.5619,1.98695,0.001513,17.1484,2.00948,-0.003025,14.4997,1.38515,0.00046,16.5321,1.94924,0.001729,14.2299,-0.33417,-0.000657,13.8975,0.245704,0.000276,14.1807,0.015476,-0.002258,14.525,-1.10284,-1.79468,17.5486,1.18359,-1.53986,17.5466,1.38452,-1.9348,17.5664,0.900466,-2.06398,17.6027,0.285533,-0.934272,17.5693,1.68946,-0.297796,17.564,1.81557,-1.963,17.6422,-0.336319,-1.80374,17.6353,-0.650816,-1.49311,17.625,-0.87076,-0.862622,17.5853,-1.08509,-0.292416,17.5872,-1.12267,0.297653,17.564,1.81557,0.933937,17.5695,1.68942,1.53964,17.5465,1.38455,1.7945,17.5485,1.18362,1.93464,17.5664,0.900465,2.06383,17.6027,0.285535,0.292272,17.5872,-1.12267,0.862479,17.5853,-1.08508,1.47689,17.6241,-0.876226,1.96285,17.6422,-0.336289,1.8035,17.6354,-0.650876,-0.000972,17.5872,-1.12267,0.001923,17.5644,1.81571,-2.84442,2.58887,0.11133,-0.96859,2.6056,0.332069,-0.718861,2.61014,-0.095203,-2.95085,2.61027,-0.452569,-2.84818,2.60929,-0.999077,-2.60712,2.60879,-1.42239,-2.28798,2.60883,-1.6962,-2.01135,2.60909,-1.84587,-1.65093,2.60921,-1.8486,-0.61803,2.61073,-0.453046,-0.697218,2.61043,-0.995625,-1.09408,2.60931,-1.59001,-1.36978,2.60926,-1.82245,-0.799365,2.60967,-1.3152,0.742367,2.6027,-0.05606,0.94455,2.57863,0.224339,2.78882,2.57707,0.113671,0.612064,2.60718,-0.440264,0.69125,2.60704,-0.983209,0.793405,2.60629,-1.3028,1.08812,2.60593,-1.5776,1.36382,2.60588,-1.81003,1.64498,2.60582,-1.83619,2.28202,2.60544,-1.68377,2.00539,2.6057,-1.83345,1.20417,2.55405,0.54644,2.94487,2.60652,-0.439578,2.84221,2.60591,-0.98666,2.60116,2.60541,-1.40997,1.65942,2.54035,0.722614,2.21414,2.54686,0.629303,-2.21658,2.61576,0.71235,-1.59496,2.6495,0.869834],\"bones\":[{\"rotq\":[0,0,0,1],\"parent\":-1,\"pos\":[-0.000027,18.2131,0.000197],\"name\":\"Hips\"},{\"rotq\":[0,0,0,1],\"parent\":0,\"pos\":[0.000027,0.055037,0.000009],\"name\":\"LHipJoint\"},{\"rotq\":[0,0,0,1],\"parent\":1,\"pos\":[1.54938,-2.41556,0.041129],\"name\":\"LeftUpLeg\"},{\"rotq\":[0,0,0,1],\"parent\":2,\"pos\":[-0.02,-7.21533,-0.20864],\"name\":\"LeftLeg\"},{\"rotq\":[0,0,0,1],\"parent\":3,\"pos\":[0.32,-7.29466,-0.47136],\"name\":\"LeftFoot\"},{\"rotq\":[0,0,0,1],\"parent\":4,\"pos\":[0.19847,-0.54529,2.28466],\"name\":\"LeftToeBase\"},{\"rotq\":[0,0,0,1],\"parent\":0,\"pos\":[0.000027,0.055037,0.000009],\"name\":\"RHipJoint\"},{\"rotq\":[0,0,0,1],\"parent\":6,\"pos\":[-1.43938,-2.41556,0.041129],\"name\":\"RightUpLeg\"},{\"rotq\":[0,0,0,1],\"parent\":7,\"pos\":[-0.09,-7.21533,-0.20864],\"name\":\"RightLeg\"},{\"rotq\":[0,0,0,1],\"parent\":8,\"pos\":[-0.32,-7.29466,-0.47136],\"name\":\"RightFoot\"},{\"rotq\":[0,0,0,1],\"parent\":9,\"pos\":[-0.30536,-0.83898,2.28801],\"name\":\"RightToeBase\"},{\"rotq\":[0,0,0,1],\"parent\":0,\"pos\":[0.000027,0.055037,0.000009],\"name\":\"LowerBack\"},{\"rotq\":[0,0,0,1],\"parent\":11,\"pos\":[-0.04381,1.99522,-0.197985],\"name\":\"Spine\"},{\"rotq\":[0,0,0,1],\"parent\":12,\"pos\":[-0.01959,2.01295,-0.04372],\"name\":\"Spine1\"},{\"rotq\":[0,0,0,1],\"parent\":13,\"pos\":[0,0,0],\"name\":\"Neck\"},{\"rotq\":[0,0,0,1],\"parent\":14,\"pos\":[0.063054,2.1058,-0.51192],\"name\":\"Neck1\"},{\"rotq\":[0,0,0,1],\"parent\":15,\"pos\":[-0.023034,1.43701,0.49728],\"name\":\"Head\"},{\"rotq\":[0,0,0,1],\"parent\":14,\"pos\":[0,0,0],\"name\":\"LeftShoulder\"},{\"rotq\":[0,0,0,1],\"parent\":17,\"pos\":[2.59289,1.2264,-0.487197],\"name\":\"LeftArm\"},{\"rotq\":[0,0,0,1],\"parent\":18,\"pos\":[4.14553,-0.064466,0.257385],\"name\":\"LeftForeArm\"},{\"rotq\":[0,0,0,1],\"parent\":19,\"pos\":[3.69801,0.065802,1.73268],\"name\":\"LeftHand\"},{\"rotq\":[0,0,0,1],\"parent\":20,\"pos\":[-0.000253,0,-0.000043],\"name\":\"LeftFingerBase\"},{\"rotq\":[0,0,0,1],\"parent\":21,\"pos\":[0.559672,0,0.260979],\"name\":\"LeftHandIndex1\"},{\"rotq\":[0,0,0,1],\"parent\":20,\"pos\":[-0.000253,0,-0.000043],\"name\":\"LThumb\"},{\"rotq\":[0,0,0,1],\"parent\":14,\"pos\":[0,0,0],\"name\":\"RightShoulder\"},{\"rotq\":[0,0,0,1],\"parent\":24,\"pos\":[-2.46562,1.22638,-0.487064],\"name\":\"RightArm\"},{\"rotq\":[0,0,0,1],\"parent\":25,\"pos\":[-4.14558,-0.064367,0.259233],\"name\":\"RightForeArm\"},{\"rotq\":[0,0,0,1],\"parent\":26,\"pos\":[-3.69873,0.066645,1.72989],\"name\":\"RightHand\"},{\"rotq\":[0,0,0,1],\"parent\":27,\"pos\":[-0.000062,0,0.000158],\"name\":\"RightFingerBase\"},{\"rotq\":[0,0,0,1],\"parent\":28,\"pos\":[-0.529147,0,0.246746],\"name\":\"RightHandIndex1\"},{\"rotq\":[0,0,0,1],\"parent\":27,\"pos\":[-0.000062,0,0.000158],\"name\":\"RThumb\"}],\"materials\":[{\"DbgIndex\":0,\"opacity\":1,\"specularCoef\":50,\"depthTest\":true,\"depthWrite\":true,\"colorSpecular\":[0.5,0.5,0.5],\"colorEmissive\":[0,0,0],\"colorDiffuse\":[1,1,1],\"DbgColor\":15658734,\"wireframe\":false,\"transparent\":false,\"blending\":\"NormalBlending\",\"shading\":\"standard\",\"DbgName\":\"HM_JeansMaterial\",\"visible\":true}],\"name\":\"trousers\"};\nvar shoes = {\"_id\":\"shoes\",\"vertices\":[1.82582,0.033048,-1.36856,1.82348,0.334862,-1.4064,1.86695,0.806446,-1.37682,2.03368,1.24994,-1.31935,2.04549,1.42163,-1.26875,2.14486,1.52453,-1.10139,2.24881,1.53616,-0.957345,2.38942,1.35891,-0.809436,2.46082,1.21654,-0.700926,2.5135,1.18167,-0.56557,2.56444,1.22816,-0.394521,2.52187,1.37635,-0.204067,2.51277,1.45666,-0.128988,2.59819,1.08659,0.54791,2.6647,0.943283,0.868309,2.77867,0.721347,1.64855,2.8082,0.621057,2.02994,2.75808,0.578206,2.51075,2.72101,0.483723,2.66624,2.62561,0.275391,2.76354,2.70418,0.151003,2.69571,2.80091,0.057001,2.59471,3.00081,-0.134466,2.1184,3.06697,-0.159415,1.64705,2.9934,-0.106554,1.19711,2.91084,-0.121082,0.795623,2.73931,-0.077497,0.406845,2.70597,-0.028101,0.30057,2.64128,-0.039724,-0.040079,2.62616,-0.100743,-0.192832,2.5037,-0.100743,-0.584512,2.36375,-0.103648,-0.946537,2.1283,-0.048441,-1.25667,2.24092,-0.072677,-1.12552,2.44604,-0.102073,-0.751389,2.18282,0.276972,-1.23206,2.25701,0.270342,-1.08319,2.3799,0.260798,-0.910468,2.45131,0.263762,-0.736155,2.50577,0.257667,-0.578529,2.61545,0.266717,-0.256027,2.64035,0.271944,-0.077361,2.70002,0.237555,0.281626,2.84802,0.151543,0.75795,2.97818,0.131505,1.13028,3.10903,0.114101,1.63214,2.99793,0.08762,2.07706,2.81894,0.159568,2.56701,2.21809,0.751514,-1.18404,2.29087,0.729097,-1.03658,2.38826,0.699043,-0.870941,2.44598,0.678888,-0.71916,2.49762,0.658597,-0.570908,2.59483,0.652078,-0.312312,2.62766,0.661656,-0.11551,2.68088,0.662127,0.258191,2.79951,0.634124,0.621081,2.93718,0.613073,1.00275,3.00183,0.512464,1.61971,2.9836,0.429304,2.02029,2.84704,0.437411,2.51775,2.16669,1.41153,-1.12196,2.29018,1.40212,-0.965492,2.19835,1.17857,-1.16497,2.31237,1.11508,-0.996148,2.40926,1.0849,-0.838509,2.4667,1.06298,-0.707891,2.51776,1.04219,-0.568468,2.58152,1.03954,-0.369275,2.60233,1.0597,-0.154319,2.67779,0.936165,0.21511,2.74126,0.865615,0.50669,2.80331,0.792047,0.877719,2.56968,1.3087,0.231534,1.33869,-0.048441,-1.11065,1.30586,0.276972,-1.06528,1.22458,0.270342,-0.903624,1.23661,-0.072677,-0.946617,1.5555,0.033519,-1.32628,1.54502,0.336869,-1.36521,1.4725,-0.121082,1.06049,1.44631,0.151543,1.00151,1.46345,0.131505,1.40843,1.47734,-0.106554,1.47549,1.1607,0.260798,-0.707594,1.16137,-0.103648,-0.746585,1.16886,0.263762,-0.516394,1.16592,-0.102073,-0.533902,1.29622,-0.100743,0.038263,1.29224,0.266717,-0.023678,1.33249,0.271943,0.147386,1.34603,-0.039724,0.182967,1.19817,-0.100743,-0.3421,1.19933,0.257667,-0.335224,1.43039,0.237555,0.502233,1.43183,-0.028102,0.52196,1.45427,-0.077498,0.63013,1.5804,-0.07767,1.90481,1.57597,0.115268,1.89396,1.70852,0.088852,2.2906,1.74541,-0.086635,2.3026,1.90525,0.160209,2.74798,1.96113,0.057001,2.74063,2.16148,0.279905,2.84309,2.05883,0.151002,2.80785,1.51174,0.809196,-1.3221,1.28472,0.751514,-1.01163,1.20413,0.729097,-0.852482,1.17091,0.699043,-0.668387,1.18375,0.678888,-0.501048,1.21171,0.658597,-0.33045,1.2874,0.652078,-0.080478,1.33116,0.661656,0.106889,1.44139,0.662127,0.473559,1.44429,0.63449,0.856683,1.46659,0.613073,1.27323,1.57892,0.512463,1.88191,1.72176,0.429304,2.23656,1.9099,0.437137,2.6806,2.04324,0.486597,2.78401,1.40859,1.25207,-1.21039,1.26869,1.17857,-0.990362,1.13974,1.11508,-0.801253,1.13389,1.0849,-0.625872,1.14965,1.06298,-0.47853,1.17682,1.04219,-0.317762,1.23589,1.03954,-0.128259,1.28691,1.0597,0.072975,1.40702,0.936165,0.435914,1.49501,0.877685,0.730398,1.64858,0.813802,1.1002,1.85844,0.721076,1.83238,1.91827,0.621057,2.18159,1.9859,0.579,2.64496,1.41759,1.42387,-1.15623,1.29175,1.41153,-0.964889,1.32306,1.52453,-0.955603,1.19868,1.40212,-0.781719,1.23189,1.53616,-0.776298,1.20338,1.35891,-0.612324,1.18384,1.21654,-0.477837,1.2028,1.18167,-0.319898,1.26709,1.22816,-0.16044,1.32403,1.37635,0.021373,1.45768,1.3087,0.415846,1.68868,1.14704,0.715485,1.78056,0.969512,1.04943,1.3461,1.45666,0.107843,1.98974,1.53859,-0.987916,2.05424,1.57126,-0.863303,1.48961,1.57126,-0.770691,1.53893,1.54134,-0.912528,2.15704,1.52828,-0.743934,1.43569,1.52828,-0.622267,2.25042,1.41064,-0.652229,1.36903,1.41064,-0.534874,2.3229,1.31614,-0.584565,1.38211,1.31614,-0.414046,2.35908,1.29299,-0.494935,1.4001,1.29299,-0.314227,2.3667,1.32385,-0.376853,1.42866,1.32385,-0.205935,2.31228,1.41766,-0.266853,1.43029,1.42221,-0.111579,2.29201,1.47524,-0.205956,1.48597,1.47921,-0.044235,1.74615,1.57112,-1.05955,1.69984,1.46636,-1.36345,1.68903,1.29493,-1.38687,1.67771,0.830025,-1.37565,1.67571,0.350593,-1.40304,1.68496,0.037268,-1.34917,1.71815,-0.048441,-1.18082,1.71925,-0.072677,-1.03259,1.7392,-0.103648,-0.842677,1.78111,-0.102073,-0.638421,1.82557,-0.100743,-0.458596,1.93535,-0.100743,-0.072795,1.96849,-0.039724,0.075777,2.04414,-0.028101,0.415566,2.07182,-0.077498,0.522826,2.20657,-0.121082,0.925758,2.27192,-0.106554,1.33024,2.30792,-0.07767,1.77122,2.29791,-0.119139,2.20982,2.31999,0.000449,2.71258,2.32713,0.141004,2.78143,2.35557,0.289082,2.81078,2.31948,0.52577,2.73745,2.30198,0.623827,2.59145,2.31247,0.667487,2.11453,2.34813,0.767777,1.73112,2.21539,1.01946,0.968257,2.12447,1.2547,0.647427,2.51333,1.4747,0.2992,2.37852,1.28773,0.343316,1.6783,1.31056,0.496505,1.48207,1.44314,0.416004,2.42871,1.51339,0.340796,1.5729,1.52406,0.389439,2.40716,1.56888,0.172318,2.04725,1.70718,0.294034,1.54737,1.55442,0.301793,2.2766,1.21682,0.275175,2.25792,1.45842,-0.018565,2.00922,1.61692,0.12959,1.76488,1.21447,0.331252,1.60758,1.48538,0.132069,2.33529,1.65217,0.209286,2.19858,1.53095,0.013067,1.6345,1.62673,0.305234,1.65106,1.54295,0.133274,2.3103,1.2715,-0.026222,1.63192,1.2653,0.06044,2.55085,1.33534,0.05999,2.51301,1.52357,0.055156,2.39354,1.55754,0.058916,2.333,1.2715,0.104413,1.40568,1.33502,0.262378,1.41012,1.50945,0.252931,1.49795,1.56648,0.199463,1.65872,1.2653,0.21471,-1.7942,0.033048,-1.36909,-1.79112,0.334861,-1.40688,-1.83516,0.806445,-1.37816,-2.00299,1.24994,-1.32399,-2.0158,1.42163,-1.27364,-2.11845,1.52453,-1.10826,-2.22522,1.53616,-0.966295,-2.36871,1.35891,-0.821186,-2.44224,1.21654,-0.714104,-2.49758,1.18167,-0.579813,-2.55187,1.22816,-0.409801,-2.51307,1.37635,-0.218545,-2.50545,1.45666,-0.143301,-2.60419,1.08659,0.531782,-2.677,0.943283,0.850808,-2.80633,0.721347,1.62865,-2.84337,0.621057,2.00939,-2.79975,0.578206,2.49115,-2.76575,0.483723,2.64735,-2.67229,0.27539,2.74651,-2.7495,0.151002,2.67714,-2.84422,0.057001,2.57426,-3.01085,-0.096968,2.08047,-3.06753,-0.119559,1.61956,-3.01213,-0.106554,1.17307,-2.92166,-0.121082,0.773284,-2.74251,-0.077498,0.387962,-2.70708,-0.028102,0.282366,-2.63569,-0.039724,-0.056943,-2.61756,-0.100743,-0.209368,-2.48741,-0.100743,-0.598558,-2.34035,-0.103649,-0.957755,-2.09883,-0.048441,-1.26319,-2.21401,-0.072677,-1.13428,-2.42647,-0.102073,-0.764266,-2.15382,0.276972,-1.23966,-2.23093,0.270342,-1.09228,-2.3572,0.260798,-0.92201,-2.43203,0.263762,-0.749139,-2.48959,0.257666,-0.592617,-2.60561,0.266717,-0.272339,-2.63402,0.271943,-0.094199,-2.70076,0.237555,0.263542,-2.85812,0.151543,0.736856,-2.99559,0.131504,1.10655,-3.09074,0.115365,1.606,-3.05015,0.088659,2.05427,-2.8617,0.159568,2.5462,-2.19003,0.751513,-1.19234,-2.26571,0.729097,-1.04634,-2.36634,0.699043,-0.882656,-2.42705,0.678887,-0.732043,-2.4816,0.658597,-0.584836,-2.58388,0.652078,-0.328207,-2.62058,0.661656,-0.13209,-2.68116,0.662127,0.240489,-2.80692,0.634124,0.600971,-2.95209,0.613073,0.979854,-3.02888,0.512463,1.59542,-3.01856,0.429304,1.99628,-2.88883,0.437411,2.4964,-2.13987,1.41153,-1.12926,-2.26641,1.40212,-0.975255,-2.17068,1.17857,-1.17289,-2.288,1.11508,-1.00634,-2.38798,1.0849,-0.850644,-2.44798,1.06298,-0.721184,-2.50177,1.04219,-0.582794,-2.56945,1.03954,-0.384896,-2.5945,1.0597,-0.170392,-2.67722,0.936165,0.197477,-2.74642,0.865615,0.48775,-2.81578,0.792046,0.857484,-2.56946,1.3087,0.216029,-1.31225,-0.048441,-1.10163,-1.28032,0.276972,-1.05562,-1.20224,0.270342,-0.892397,-1.21342,-0.072677,-0.935619,-1.52476,0.033518,-1.32149,-1.51352,0.336869,-1.36021,-1.48883,-0.121082,1.06645,-1.46148,0.151543,1.00799,-1.48664,0.131505,1.4145,-1.50185,-0.106554,1.48127,-1.14224,0.260798,-0.695146,-1.14214,-0.103648,-0.734143,-1.15417,0.263762,-0.504144,-1.15088,-0.102073,-0.521591,-1.29244,-0.100743,0.047895,-1.28723,0.266717,-0.013955,-1.33085,0.271943,0.156283,-1.34508,-0.039724,0.191589,-1.18691,-0.100743,-0.330462,-1.1882,0.257666,-0.323609,-1.43572,0.237555,0.509131,-1.43755,-0.028102,0.528825,-1.46212,-0.077498,0.636532,-1.61335,-0.07767,1.90848,-1.6087,0.115268,1.89772,-1.67664,0.085832,2.32529,-1.78796,-0.097604,2.30266,-1.89039,0.161282,2.79627,-2.00295,0.041407,2.74998,-2.20981,0.279905,2.83519,-2.10648,0.151002,2.80198,-1.4811,0.809196,-1.31645,-1.26024,0.751513,-1.00157,-1.18281,0.729097,-0.840862,-1.15322,0.699043,-0.656147,-1.16935,0.678887,-0.489094,-1.20067,0.658597,-0.31908,-1.28127,0.652078,-0.070649,-1.32871,0.661656,0.115819,-1.44616,0.662127,0.480246,-1.45661,0.63449,0.863238,-1.48711,0.613073,1.27926,-1.61142,0.512463,1.88562,-1.76122,0.429304,2.23737,-1.95508,0.437137,2.67768,-2.09043,0.486597,2.77845,-1.38017,1.25207,-1.20273,-1.24464,1.17857,-0.979987,-1.11944,1.11508,-0.788374,-1.11704,1.0849,-0.612911,-1.1357,1.06298,-0.465909,-1.16604,1.04219,-0.305707,-1.22884,1.03954,-0.117406,-1.28381,1.0597,0.082784,-1.41105,0.936165,0.443285,-1.53266,0.865615,0.723384,-1.62107,0.846524,1.1186,-1.88991,0.721076,1.83058,-1.95661,0.621057,2.17854,-2.03036,0.579,2.64055,-1.39023,1.42387,-1.14875,-1.26819,1.41153,-0.954974,-1.29968,1.52453,-0.946307,-1.17875,1.40212,-0.770005,-1.21207,1.53616,-0.765239,-1.18679,1.35891,-0.600735,-1.1699,1.21654,-0.46589,-1.19197,1.18167,-0.308355,-1.2594,1.22816,-0.150195,-1.3199,1.37635,0.030461,-1.4613,1.3087,0.422223,-1.69686,1.15746,0.714359,-1.77877,1.01319,1.06453,-1.34367,1.45666,0.116479,-1.96559,1.53859,-0.991754,-2.03254,1.57126,-0.868436,-1.46984,1.57126,-0.764713,-1.51636,1.54134,-0.907495,-2.13767,1.52828,-0.751117,-1.41886,1.52828,-0.615255,-2.23284,1.41064,-0.66127,-1.35394,1.41064,-0.526566,-2.30663,1.31614,-0.595048,-1.36939,1.31614,-0.406019,-2.34458,1.29299,-0.506148,-1.38934,1.29299,-0.306574,-2.35453,1.32385,-0.388239,-1.42003,1.32385,-0.198866,-2.30228,1.41766,-0.277188,-1.42353,1.42221,-0.10456,-2.28322,1.47524,-0.215903,-1.48052,1.47921,-0.038326,-1.72064,1.57112,-1.05857,-1.66835,1.46636,-1.3615,-1.65708,1.29493,-1.3847,-1.64598,0.830025,-1.37327,-1.64344,0.350593,-1.4006,-1.65375,0.037267,-1.34693,-1.70226,-0.048441,-1.18082,-1.70336,-0.072677,-1.03259,-1.72331,-0.103649,-0.842677,-1.76522,-0.102073,-0.63842,-1.80968,-0.100743,-0.458596,-1.91946,-0.100743,-0.072795,-1.9526,-0.039724,0.075777,-2.02825,-0.028102,0.415566,-2.05593,-0.077498,0.522826,-2.19068,-0.121082,0.925758,-2.25603,-0.106554,1.33024,-2.29202,-0.07767,1.77122,-2.28347,-0.096259,2.20586,-2.3057,-0.009301,2.71702,-2.31659,0.12504,2.8068,-2.40323,0.289082,2.79906,-2.3657,0.52577,2.72645,-2.34532,0.623827,2.58083,-2.34941,0.667487,2.10372,-2.3775,0.767777,1.71969,-2.22634,0.989713,0.946089,-2.13411,1.24158,0.625833,-2.51445,1.4747,0.284792,-2.38054,1.28773,0.331557,-1.68292,1.32895,0.503259,-1.4857,1.44314,0.421899,-2.43067,1.51339,0.328049,-1.57598,1.52406,0.39355,-2.4058,1.56888,0.160028,-2.04836,1.70718,0.288814,-1.54873,1.55442,0.306424,-2.2773,1.21682,0.265438,-2.25283,1.45842,-0.027876,-2.0071,1.61692,0.125151,-1.76678,1.21447,0.33159,-1.60558,1.48538,0.135546,-2.33468,1.65217,0.198405,-2.19412,1.53095,0.004919,-1.63591,1.62673,0.308147,-1.64908,1.54295,0.135894,-2.30505,1.2715,-0.036565,-1.6285,1.2653,0.063452,-2.54725,1.33534,0.044889,-2.50932,1.52357,0.040803,-2.38995,1.55754,0.046917,-2.33032,1.2715,0.093598,-1.40629,1.33502,0.26981,-1.41054,1.50945,0.260276,-1.4973,1.56648,0.205088,-1.65834,1.2653,0.217163],\"metadata\":{\"vertices\":444,\"type\":\"Geometry\",\"faces\":820,\"bones\":31,\"uvs\":1,\"materials\":1,\"generator\":\"io_three\",\"version\":3},\"name\":\"shoes\",\"faces\":[10,77,76,75,0,0,1,2,10,78,74,75,0,3,4,2,10,80,83,82,0,5,6,7,10,87,86,84,0,8,9,10,10,91,90,89,0,11,12,13,10,92,88,89,0,14,15,13,10,91,95,94,0,11,16,17,10,96,80,81,0,18,5,19,10,97,100,99,0,20,21,22,10,83,97,98,0,6,20,23,10,102,101,99,0,24,25,22,10,104,103,101,0,26,27,25,10,85,84,76,0,28,10,1,10,92,93,86,0,14,29,9,10,106,105,79,0,30,31,32,10,76,107,106,0,1,33,30,10,108,107,76,0,34,33,1,10,86,109,108,0,9,35,34,10,110,109,86,0,36,35,9,10,111,110,93,0,37,36,29,10,112,111,89,0,38,37,13,10,113,112,90,0,39,38,12,10,114,113,94,0,40,39,17,10,115,114,81,0,41,40,19,10,116,115,82,0,42,41,7,10,117,116,98,0,43,42,23,10,118,117,99,0,44,43,22,10,119,118,101,0,45,44,25,10,121,120,105,0,46,47,31,10,122,121,106,0,48,46,30,10,123,122,107,0,49,48,33,10,124,123,108,0,50,49,34,10,125,124,109,0,51,50,35,10,126,125,110,0,52,51,36,10,127,126,111,0,53,52,37,10,128,127,112,0,54,53,38,10,129,128,113,0,55,54,39,10,130,129,114,0,56,55,40,10,131,130,115,0,57,56,41,10,132,131,116,0,58,57,42,10,133,132,117,0,59,58,43,10,119,133,118,0,45,59,44,10,135,136,134,0,60,61,62,10,138,136,135,0,63,61,60,10,139,138,137,0,64,63,65,10,135,134,120,0,60,62,47,10,137,135,121,0,65,60,46,10,139,137,122,0,64,65,48,10,140,139,123,0,66,64,49,10,141,140,124,0,67,66,50,10,126,142,141,0,52,68,67,10,127,143,142,0,53,69,68,10,128,144,218,0,54,70,71,10,128,129,144,0,54,55,70,10,129,130,145,0,55,56,72,10,131,146,130,0,57,73,56,10,35,36,33,0,74,75,76,10,0,1,35,0,77,78,74,10,25,43,44,0,79,80,81,10,37,38,34,0,82,83,84,10,40,41,28,0,85,86,87,10,30,39,40,0,88,89,85,10,28,41,42,0,87,86,90,10,42,43,26,0,90,80,91,10,23,45,46,0,92,93,94,10,24,44,45,0,95,81,93,10,46,47,21,0,94,96,97,10,47,19,20,0,96,98,99,10,36,37,31,0,75,82,100,10,38,39,30,0,83,89,88,10,1,2,48,0,78,101,102,10,36,35,48,0,75,74,102,10,37,36,49,0,82,75,103,10,38,37,50,0,83,82,104,10,38,51,52,0,83,105,106,10,39,52,53,0,89,106,107,10,40,53,54,0,85,107,108,10,41,54,55,0,86,108,109,10,42,55,56,0,90,109,110,10,43,56,57,0,80,110,111,10,44,57,58,0,81,111,112,10,45,58,59,0,93,112,113,10,46,59,60,0,94,113,114,10,19,47,18,0,98,96,115,10,2,3,63,0,101,116,117,10,48,63,64,0,102,117,118,10,49,64,65,0,103,118,119,10,50,65,66,0,104,119,120,10,51,66,67,0,105,120,121,10,52,67,68,0,106,121,122,10,53,68,69,0,107,122,123,10,54,69,70,0,108,123,124,10,55,70,71,0,109,124,125,10,56,71,72,0,110,125,126,10,57,72,15,0,111,126,127,10,58,15,16,0,112,127,128,10,60,59,16,0,114,113,128,10,18,60,17,0,115,114,129,10,61,4,5,0,130,131,132,10,61,5,6,0,130,132,133,10,7,62,6,0,134,135,133,10,3,4,61,0,116,131,130,10,63,61,62,0,117,130,135,10,64,62,7,0,118,135,134,10,65,7,8,0,119,134,136,10,66,8,9,0,120,136,137,10,68,67,9,0,122,121,137,10,69,68,10,0,123,122,138,10,69,11,214,0,123,139,140,10,70,73,13,0,124,141,142,10,71,13,14,0,125,142,143,10,15,72,14,0,127,126,143,10,173,172,32,0,144,145,146,10,171,170,1,0,147,148,78,10,172,171,0,0,145,149,150,10,24,182,181,0,151,152,153,10,175,174,31,0,154,155,156,10,28,178,177,0,157,158,159,10,177,176,30,0,159,160,161,10,179,178,28,0,162,158,157,10,181,180,26,0,153,163,164,10,180,179,27,0,163,162,165,10,22,184,183,0,166,167,168,10,23,183,182,0,169,168,152,10,185,184,22,0,170,167,166,10,20,19,186,0,171,172,173,10,21,20,185,0,174,171,170,10,174,173,33,0,155,144,175,10,176,175,34,0,160,154,176,10,2,1,170,0,101,78,148,10,188,187,19,0,177,178,98,10,2,169,168,0,101,179,180,10,16,15,190,0,128,127,181,10,190,189,17,0,181,182,129,10,189,188,18,0,182,177,115,10,168,167,4,0,180,183,131,10,193,192,14,0,184,185,143,10,192,191,15,0,185,186,127,10,148,149,5,0,187,188,132,10,136,150,151,0,61,189,190,10,166,148,4,0,191,187,131,10,149,152,6,0,188,192,133,10,138,153,150,0,63,193,189,10,152,154,7,0,192,194,134,10,155,153,138,0,195,193,63,10,7,154,156,0,134,194,196,10,140,157,155,0,66,197,195,10,156,158,9,0,196,198,137,10,141,159,157,0,67,199,197,10,158,160,10,0,198,200,138,10,142,161,159,0,68,201,199,10,160,162,11,0,200,202,139,10,163,161,142,0,203,201,68,10,162,164,12,0,202,204,205,10,165,163,143,0,206,203,69,10,134,151,166,0,62,190,207,10,168,120,134,0,208,47,62,10,105,120,168,0,31,47,208,10,105,169,170,0,31,209,210,10,171,78,79,0,211,3,32,10,172,74,78,0,145,212,213,10,173,77,74,0,144,214,212,10,174,85,77,0,155,215,214,10,175,87,85,0,154,216,215,10,92,87,175,0,217,216,154,10,88,92,176,0,218,217,160,10,91,88,177,0,219,218,159,10,95,91,178,0,220,219,158,10,96,95,179,0,221,220,162,10,80,96,180,0,222,221,163,10,182,83,80,0,152,223,222,10,183,97,83,0,168,224,223,10,100,97,183,0,225,224,168,10,185,102,100,0,170,226,225,10,104,102,185,0,227,226,170,10,103,104,186,0,228,227,173,10,188,119,103,0,177,45,27,10,133,119,188,0,59,45,177,10,189,190,133,0,182,181,59,10,131,132,190,0,57,58,181,10,146,131,191,0,73,57,186,10,193,145,146,0,184,72,73,10,214,11,12,0,140,139,205,10,73,194,195,0,141,229,230,10,193,13,195,0,184,142,230,10,196,145,193,0,231,72,184,10,196,197,144,0,231,232,70,10,197,219,218,0,232,233,71,10,12,164,216,0,205,204,234,10,194,198,195,0,229,235,230,10,196,199,197,0,231,236,232,10,199,220,219,0,236,237,233,10,13,73,195,0,142,141,230,10,145,196,144,0,72,231,70,10,195,200,208,0,230,238,239,10,193,201,210,0,184,240,241,10,203,204,200,0,242,243,238,10,200,204,209,0,238,243,244,10,202,207,206,0,245,246,247,10,205,211,210,0,248,249,241,10,208,201,193,0,239,240,184,10,205,201,208,0,248,240,239,10,210,202,196,0,241,245,231,10,211,207,202,0,249,246,245,10,43,25,26,0,80,79,91,10,96,81,94,0,18,19,17,10,216,164,212,0,234,204,250,10,221,220,199,0,251,237,236,10,70,214,73,0,124,140,141,10,214,215,194,0,140,252,229,10,216,198,194,0,234,235,229,10,198,216,217,0,235,234,253,10,218,143,127,0,71,69,53,10,147,143,218,0,254,69,71,10,220,165,147,0,237,206,254,10,213,165,220,0,255,206,237,10,297,298,299,0,256,257,258,10,300,301,297,0,259,260,256,10,302,303,304,0,261,262,263,10,306,308,309,0,264,265,266,10,311,312,313,0,267,268,269,10,314,315,311,0,270,271,267,10,313,312,316,0,269,268,272,10,318,303,302,0,273,262,261,10,319,320,321,0,274,275,276,10,305,304,320,0,277,263,275,10,321,323,324,0,276,278,279,10,323,325,326,0,278,280,281,10,298,306,307,0,257,264,282,10,308,315,314,0,265,271,270,10,301,327,328,0,260,283,284,10,298,297,328,0,257,256,284,10,298,329,330,0,257,285,286,10,308,306,330,0,265,264,286,10,308,331,332,0,265,287,288,10,315,332,333,0,271,288,289,10,311,333,334,0,267,289,290,10,312,334,335,0,268,290,291,10,316,335,336,0,272,291,292,10,303,336,337,0,262,292,293,10,304,337,338,0,263,293,294,10,320,338,339,0,275,294,295,10,321,339,340,0,276,295,296,10,325,323,340,0,280,278,296,10,327,342,343,0,283,297,298,10,328,343,344,0,284,298,299,10,329,344,345,0,285,299,300,10,330,345,346,0,286,300,301,10,331,346,347,0,287,301,302,10,332,347,348,0,288,302,303,10,333,348,349,0,289,303,304,10,334,349,350,0,290,304,305,10,335,350,351,0,291,305,306,10,336,351,352,0,292,306,307,10,337,352,353,0,293,307,308,10,338,353,354,0,294,308,309,10,339,354,355,0,295,309,310,10,341,340,355,0,311,296,310,10,357,356,358,0,312,313,314,10,357,358,360,0,312,314,315,10,361,359,360,0,316,317,315,10,342,356,357,0,297,313,312,10,343,357,359,0,298,312,317,10,344,359,361,0,299,317,316,10,345,361,362,0,300,316,318,10,346,362,363,0,301,318,319,10,348,347,363,0,303,302,319,10,349,348,364,0,304,303,320,10,350,440,366,0,305,321,322,10,367,351,366,0,323,306,322,10,368,352,367,0,324,307,323,10,353,352,368,0,308,307,324,10,255,258,257,0,325,326,327,10,222,254,257,0,328,329,327,10,247,246,266,0,330,331,332,10,256,260,259,0,333,334,335,10,250,263,262,0,336,337,338,10,252,251,262,0,339,340,338,10,250,249,264,0,336,341,342,10,248,265,264,0,343,344,342,10,245,244,268,0,345,346,347,10,246,245,267,0,331,345,348,10,244,243,269,0,346,349,350,10,242,241,269,0,351,352,350,10,253,259,258,0,353,335,326,10,252,261,260,0,339,354,334,10,270,224,223,0,355,356,357,10,258,271,270,0,326,358,355,10,259,272,271,0,335,359,358,10,260,273,272,0,334,360,359,10,274,273,260,0,361,360,334,10,275,274,261,0,362,361,354,10,276,275,262,0,363,362,338,10,277,276,263,0,364,363,337,10,278,277,264,0,365,364,342,10,279,278,265,0,366,365,344,10,280,279,266,0,367,366,332,10,281,280,267,0,368,367,348,10,282,281,268,0,369,368,347,10,240,282,269,0,370,369,350,10,285,225,224,0,371,372,356,10,286,285,270,0,373,371,355,10,287,286,271,0,374,373,358,10,288,287,272,0,375,374,359,10,289,288,273,0,376,375,360,10,290,289,274,0,377,376,361,10,291,290,275,0,378,377,362,10,292,291,276,0,379,378,363,10,293,292,277,0,380,379,364,10,294,293,278,0,381,380,365,10,237,294,279,0,382,381,366,10,238,237,280,0,383,382,367,10,282,239,238,0,369,384,383,10,240,239,282,0,370,384,369,10,283,227,226,0,385,386,387,10,228,227,283,0,388,386,385,10,229,228,284,0,389,388,390,10,283,226,225,0,385,387,372,10,284,283,285,0,390,385,371,10,229,284,286,0,389,390,373,10,230,229,287,0,391,389,374,10,231,230,288,0,392,391,375,10,290,232,231,0,377,393,392,10,291,233,232,0,378,394,393,10,436,233,291,0,395,394,378,10,235,295,292,0,396,397,379,10,236,235,293,0,398,396,380,10,237,236,294,0,382,398,381,10,254,394,395,0,399,400,401,10,223,392,393,0,357,402,403,10,222,393,394,0,404,405,400,10,246,247,404,0,406,407,408,10,253,396,397,0,409,410,411,10,250,251,400,0,412,413,414,10,399,251,398,0,415,413,416,10,401,249,400,0,417,418,414,10,247,248,402,0,407,419,420,10,249,401,402,0,418,417,420,10,244,245,406,0,421,422,423,10,245,246,404,0,422,406,408,10,243,244,407,0,424,421,425,10,241,242,409,0,426,427,428,10,242,243,407,0,427,424,425,10,255,395,396,0,429,401,410,10,256,397,398,0,430,411,416,10,392,223,224,0,402,357,356,10,241,409,410,0,352,431,432,10,224,225,390,0,356,372,433,10,237,238,412,0,382,383,434,10,239,411,412,0,384,435,434,10,240,410,411,0,370,432,435,10,226,389,390,0,387,436,433,10,235,236,415,0,396,398,437,10,414,236,237,0,438,398,382,10,227,371,370,0,386,439,440,10,358,356,373,0,314,313,441,10,226,370,388,0,387,440,442,10,228,374,371,0,388,443,439,10,360,358,372,0,315,314,444,10,229,376,374,0,389,445,443,10,360,375,377,0,315,446,447,10,229,230,378,0,389,391,448,10,362,361,377,0,318,316,447,10,231,380,378,0,392,449,448,10,363,362,379,0,319,318,450,10,232,382,380,0,393,451,449,10,364,363,381,0,320,319,452,10,233,384,382,0,394,453,451,10,364,383,385,0,320,454,455,10,234,386,384,0,456,457,453,10,365,385,387,0,458,455,459,10,356,389,388,0,313,460,461,10,390,389,356,0,462,460,313,10,390,342,327,0,462,297,283,10,327,301,392,0,283,260,463,10,393,392,301,0,464,463,260,10,394,393,300,0,400,405,465,10,395,394,296,0,401,400,466,10,396,395,299,0,410,401,467,10,397,396,307,0,411,410,468,10,397,309,314,0,411,469,470,10,310,399,314,0,471,415,470,10,400,399,310,0,414,415,471,10,317,401,313,0,472,417,473,10,401,317,318,0,417,472,474,10,402,318,302,0,420,474,475,10,404,403,302,0,408,476,475,10,405,404,305,0,477,408,478,10,406,405,322,0,423,477,479,10,407,406,322,0,425,423,479,10,407,324,326,0,425,480,481,10,409,408,325,0,428,482,483,10,410,409,325,0,432,431,280,10,410,341,355,0,432,311,310,10,412,411,355,0,434,435,310,10,412,354,353,0,434,309,308,10,368,414,413,0,324,438,484,10,415,414,368,0,437,438,324,10,436,437,234,0,395,485,456,10,295,417,416,0,397,486,487,10,415,417,235,0,437,486,396,10,418,415,367,0,488,437,323,10,418,366,419,0,488,322,489,10,440,441,419,0,321,490,489,10,234,437,438,0,456,485,491,10,416,417,420,0,487,486,492,10,418,419,421,0,488,489,493,10,441,442,421,0,490,494,493,10,235,417,295,0,396,486,397,10,367,366,418,0,323,322,488,10,417,415,430,0,486,437,495,10,415,432,423,0,437,496,497,10,422,426,425,0,498,499,500,10,422,430,431,0,498,495,501,10,424,418,428,0,502,488,503,10,432,433,427,0,496,504,505,10,430,415,423,0,495,437,497,10,430,423,427,0,495,497,505,10,418,424,432,0,488,502,496,10,433,432,424,0,504,496,502,10,265,248,247,0,344,343,330,10,316,303,318,0,272,262,273,10,438,439,434,0,491,506,507,10,421,442,443,0,493,494,508,10,292,295,436,0,379,397,395,10,416,437,436,0,487,485,395,10,438,437,416,0,491,485,487,10,420,417,439,0,492,486,506,10,440,350,365,0,321,305,458,10,440,365,369,0,321,458,509,10,442,441,369,0,494,490,509,10,442,387,435,0,494,459,510,10,244,406,407,0,421,423,425,10,324,407,322,0,480,425,479,10,242,408,409,0,427,482,428,10,408,326,325,0,482,481,483,10,21,185,22,0,174,170,166,10,184,185,100,0,167,170,225,10,186,104,185,0,173,227,170,10,20,186,185,0,171,173,170,10,187,103,186,0,511,228,173,10,19,187,186,0,172,511,173,10,47,60,18,0,96,114,115,10,103,119,101,0,27,45,25,10,408,242,407,0,482,427,425,10,408,407,326,0,482,425,481,10,245,405,406,0,422,477,423,10,405,319,322,0,477,512,479,10,403,247,402,0,476,407,420,10,405,245,404,0,477,422,408,10,305,404,302,0,478,408,475,10,247,403,404,0,407,476,408,10,319,405,305,0,512,477,478,10,403,402,302,0,476,420,475,10,401,400,313,0,417,414,473,10,249,250,400,0,418,412,414,10,313,400,310,0,473,414,471,10,251,399,400,0,413,415,414,10,399,398,314,0,415,416,470,10,251,252,398,0,413,513,416,10,367,415,368,0,323,437,324,10,352,351,367,0,307,306,323,10,192,193,146,0,185,184,73,10,130,146,145,0,56,73,72,10,129,145,144,0,55,72,70,10,350,349,365,0,305,304,458,10,351,350,366,0,306,305,322,10,236,414,415,0,398,438,437,10,13,193,14,0,142,184,143,10,413,237,412,0,484,382,434,10,413,412,353,0,484,434,308,10,191,131,190,0,186,57,181,10,15,191,190,0,127,186,181,10,190,132,133,0,181,58,59,10,16,190,17,0,128,181,129,10,238,239,412,0,383,384,434,10,354,412,355,0,309,434,310,10,74,77,75,0,4,0,2,10,79,78,75,0,32,3,2,10,81,80,82,0,19,5,7,10,85,87,84,0,28,8,10,10,88,91,89,0,15,11,13,10,93,92,89,0,29,14,13,10,90,91,94,0,12,11,17,10,98,97,99,0,23,20,22,10,82,83,98,0,7,6,23,10,100,102,99,0,21,24,22,10,102,104,101,0,24,26,25,10,77,85,76,0,0,28,1,10,87,92,86,0,8,14,9,10,75,106,79,0,2,30,32,10,75,76,106,0,2,1,30,10,84,108,76,0,10,34,1,10,84,86,108,0,10,9,34,10,93,110,86,0,29,36,9,10,89,111,93,0,13,37,29,10,90,112,89,0,12,38,13,10,94,113,90,0,17,39,12,10,81,114,94,0,19,40,17,10,82,115,81,0,7,41,19,10,98,116,82,0,23,42,7,10,99,117,98,0,22,43,23,10,101,118,99,0,25,44,22,10,106,121,105,0,30,46,31,10,107,122,106,0,33,48,30,10,108,123,107,0,34,49,33,10,109,124,108,0,35,50,34,10,110,125,109,0,36,51,35,10,111,126,110,0,37,52,36,10,112,127,111,0,38,53,37,10,113,128,112,0,39,54,38,10,114,129,113,0,40,55,39,10,115,130,114,0,41,56,40,10,116,131,115,0,42,57,41,10,117,132,116,0,43,58,42,10,118,133,117,0,44,59,43,10,137,138,135,0,65,63,60,10,121,135,120,0,46,60,47,10,122,137,121,0,48,65,46,10,123,139,122,0,49,64,48,10,124,140,123,0,50,66,49,10,125,141,124,0,51,67,50,10,125,126,141,0,51,52,67,10,126,127,142,0,52,53,68,10,32,35,33,0,514,74,76,10,32,0,35,0,514,77,74,10,24,25,44,0,95,79,81,10,31,37,34,0,100,82,84,10,29,40,28,0,515,85,87,10,29,30,40,0,515,88,85,10,27,28,42,0,516,87,90,10,27,42,26,0,516,90,91,10,22,23,46,0,517,92,94,10,23,24,45,0,92,95,93,10,22,46,21,0,517,94,97,10,21,47,20,0,97,96,99,10,33,36,31,0,76,75,100,10,34,38,30,0,84,83,88,10,35,1,48,0,74,78,102,10,49,36,48,0,103,75,102,10,50,37,49,0,104,82,103,10,51,38,50,0,105,83,104,10,39,38,52,0,89,83,106,10,40,39,53,0,85,89,107,10,41,40,54,0,86,85,108,10,42,41,55,0,90,86,109,10,43,42,56,0,80,90,110,10,44,43,57,0,81,80,111,10,45,44,58,0,93,81,112,10,46,45,59,0,94,93,113,10,47,46,60,0,96,94,114,10,48,2,63,0,102,101,117,10,49,48,64,0,103,102,118,10,50,49,65,0,104,103,119,10,51,50,66,0,105,104,120,10,52,51,67,0,106,105,121,10,53,52,68,0,107,106,122,10,54,53,69,0,108,107,123,10,55,54,70,0,109,108,124,10,56,55,71,0,110,109,125,10,57,56,72,0,111,110,126,10,58,57,15,0,112,111,127,10,59,58,16,0,113,112,128,10,17,60,16,0,129,114,128,10,62,61,6,0,135,130,133,10,63,3,61,0,117,116,130,10,64,63,62,0,118,117,135,10,65,64,7,0,119,118,134,10,66,65,8,0,120,119,136,10,67,66,9,0,121,120,137,10,10,68,9,0,138,122,137,10,11,69,10,0,139,123,138,10,70,69,214,0,124,123,140,10,71,70,13,0,125,124,142,10,72,71,14,0,126,125,143,10,33,173,32,0,175,144,146,10,0,171,1,0,77,147,78,10,32,172,0,0,146,145,150,10,25,24,181,0,518,151,153,10,34,175,31,0,176,154,156,10,29,28,177,0,519,157,159,10,29,177,30,0,519,159,161,10,27,179,28,0,165,162,157,10,25,181,26,0,518,153,164,10,26,180,27,0,164,163,165,10,23,22,183,0,169,166,168,10,24,23,182,0,151,169,152,10,31,174,33,0,156,155,175,10,30,176,34,0,161,160,176,10,169,2,170,0,179,101,148,10,18,188,19,0,115,177,98,10,3,2,168,0,116,101,180,10,17,189,18,0,129,182,115,10,3,168,4,0,116,180,131,10,14,192,15,0,143,185,127,10,4,148,5,0,131,187,132,10,134,136,151,0,62,61,190,10,167,166,4,0,183,191,131,10,5,149,6,0,132,188,133,10,136,138,150,0,61,63,189,10,6,152,7,0,133,192,134,10,139,155,138,0,64,195,63,10,8,7,156,0,136,134,196,10,139,140,155,0,64,66,195,10,8,156,9,0,136,196,137,10,140,141,157,0,66,67,197,10,9,158,10,0,137,198,138,10,141,142,159,0,67,68,199,10,10,160,11,0,138,200,139,10,143,163,142,0,69,203,68,10,11,162,12,0,139,202,205,10,147,165,143,0,254,206,69,10,167,134,166,0,520,62,207,10,167,168,134,0,520,208,62,10,169,105,168,0,209,31,208,10,79,105,170,0,32,31,210,10,170,171,79,0,210,211,32,10,171,172,78,0,149,145,213,10,172,173,74,0,145,144,212,10,173,174,77,0,144,155,214,10,174,175,85,0,155,154,215,10,176,92,175,0,160,217,154,10,177,88,176,0,159,218,160,10,178,91,177,0,158,219,159,10,179,95,178,0,162,220,158,10,180,96,179,0,163,221,162,10,181,80,180,0,153,222,163,10,181,182,80,0,153,152,222,10,182,183,83,0,152,168,223,10,184,100,183,0,167,225,168,10,187,188,103,0,178,177,27,10,189,133,188,0,182,59,177,10,192,146,191,0,185,73,186,10,215,214,12,0,252,140,205,10,144,197,218,0,70,232,71,10,215,12,216,0,252,205,234,10,197,199,219,0,232,236,233,10,193,195,208,0,184,230,239,10,195,203,200,0,230,242,238,10,208,200,209,0,239,238,244,10,196,202,206,0,231,245,247,10,201,205,210,0,240,248,241,10,209,205,208,0,244,248,239,10,193,210,196,0,184,241,231,10,210,211,202,0,241,249,245,10,95,96,94,0,16,18,17,10,217,216,212,0,253,234,250,10,196,221,199,0,231,251,236,10,73,214,194,0,141,140,229,10,215,216,194,0,252,234,229,10,195,198,217,0,230,235,253,10,128,218,127,0,54,71,53,10,219,147,218,0,233,254,71,10,219,220,147,0,233,237,254,10,221,213,220,0,251,255,237,10,296,297,299,0,521,256,258,10,296,300,297,0,521,259,256,10,305,302,304,0,277,261,263,10,307,306,309,0,282,264,266,10,310,311,313,0,522,267,269,10,310,314,311,0,522,270,267,10,317,313,316,0,523,269,272,10,322,319,321,0,524,274,276,10,319,305,320,0,274,277,275,10,322,321,324,0,524,276,279,10,324,323,326,0,279,278,281,10,299,298,307,0,258,257,282,10,309,308,314,0,266,265,270,10,297,301,328,0,256,260,284,10,329,298,328,0,285,257,284,10,306,298,330,0,264,257,286,10,331,308,330,0,287,265,286,10,315,308,332,0,271,265,288,10,311,315,333,0,267,271,289,10,312,311,334,0,268,267,290,10,316,312,335,0,272,268,291,10,303,316,336,0,262,272,292,10,304,303,337,0,263,262,293,10,320,304,338,0,275,263,294,10,321,320,339,0,276,275,295,10,323,321,340,0,278,276,296,10,341,325,340,0,311,280,296,10,328,327,343,0,284,283,298,10,329,328,344,0,285,284,299,10,330,329,345,0,286,285,300,10,331,330,346,0,287,286,301,10,332,331,347,0,288,287,302,10,333,332,348,0,289,288,303,10,334,333,349,0,290,289,304,10,335,334,350,0,291,290,305,10,336,335,351,0,292,291,306,10,337,336,352,0,293,292,307,10,338,337,353,0,294,293,308,10,339,338,354,0,295,294,309,10,340,339,355,0,296,295,310,10,359,357,360,0,317,312,315,10,343,342,357,0,298,297,312,10,344,343,359,0,299,298,317,10,345,344,361,0,300,299,316,10,346,345,362,0,301,300,318,10,347,346,363,0,302,301,319,10,364,348,363,0,320,303,319,10,365,349,364,0,458,304,320,10,254,255,257,0,329,325,327,10,223,222,257,0,357,328,327,10,265,247,266,0,344,330,332,10,253,256,259,0,353,333,335,10,251,250,262,0,340,336,338,10,261,252,262,0,354,339,338,10,263,250,264,0,337,336,342,10,249,248,264,0,341,343,342,10,267,245,268,0,348,345,347,10,266,246,267,0,332,331,348,10,268,244,269,0,347,346,350,10,243,242,269,0,349,351,350,10,255,253,258,0,325,353,326,10,256,252,260,0,333,339,334,10,257,270,223,0,327,355,357,10,257,258,270,0,327,326,355,10,258,259,271,0,326,335,358,10,259,260,272,0,335,334,359,10,261,274,260,0,354,361,334,10,262,275,261,0,338,362,354,10,263,276,262,0,337,363,338,10,264,277,263,0,342,364,337,10,265,278,264,0,344,365,342,10,266,279,265,0,332,366,344,10,267,280,266,0,348,367,332,10,268,281,267,0,347,368,348,10,269,282,268,0,350,369,347,10,241,240,269,0,352,370,350,10,270,285,224,0,355,371,356,10,271,286,270,0,358,373,355,10,272,287,271,0,359,374,358,10,273,288,272,0,360,375,359,10,274,289,273,0,361,376,360,10,275,290,274,0,362,377,361,10,276,291,275,0,363,378,362,10,277,292,276,0,364,379,363,10,278,293,277,0,365,380,364,10,279,294,278,0,366,381,365,10,280,237,279,0,367,382,366,10,281,238,280,0,368,383,367,10,281,282,238,0,368,369,383,10,284,228,283,0,390,388,385,10,285,283,225,0,371,385,372,10,286,284,285,0,373,390,371,10,287,229,286,0,374,389,373,10,288,230,287,0,375,391,374,10,289,231,288,0,376,392,375,10,289,290,231,0,376,377,392,10,290,291,232,0,377,378,393,10,292,436,291,0,379,395,378,10,293,235,292,0,380,396,379,10,294,236,293,0,381,398,380,10,255,254,395,0,429,399,401,10,222,223,393,0,328,357,403,10,254,222,394,0,399,404,400,10,256,253,397,0,430,409,411,10,248,249,402,0,419,418,420,10,253,255,396,0,409,429,410,10,252,256,398,0,513,430,416,10,391,392,224,0,525,402,356,10,240,241,410,0,370,352,432,10,391,224,390,0,525,356,433,10,239,240,411,0,384,370,435,10,225,226,390,0,372,387,433,10,413,414,237,0,484,438,382,10,226,227,370,0,387,386,440,10,372,358,373,0,444,314,441,10,389,226,388,0,436,387,442,10,227,228,371,0,386,388,439,10,375,360,372,0,446,315,444,10,228,229,374,0,388,389,443,10,361,360,377,0,316,315,447,10,376,229,378,0,445,389,448,10,379,362,377,0,450,318,447,10,230,231,378,0,391,392,448,10,381,363,379,0,452,319,450,10,231,232,380,0,392,393,449,10,383,364,381,0,454,320,452,10,232,233,382,0,393,394,451,10,365,364,385,0,458,320,455,10,233,234,384,0,394,456,453,10,369,365,387,0,509,458,459,10,373,356,388,0,441,313,461,10,342,390,356,0,297,462,313,10,391,390,327,0,526,462,283,10,391,327,392,0,526,283,463,10,300,393,301,0,259,464,260,10,296,394,300,0,466,400,465,10,299,395,296,0,467,401,466,10,307,396,299,0,468,410,467,10,309,397,307,0,469,411,468,10,398,397,314,0,416,411,470,10,402,401,318,0,420,417,474,10,341,410,325,0,311,432,280,10,411,410,355,0,435,432,310,10,353,368,413,0,308,324,484,10,233,436,234,0,394,395,456,10,366,440,419,0,322,321,489,10,386,234,438,0,457,456,491,10,419,441,421,0,489,490,493,10,422,417,430,0,498,486,495,10,417,422,425,0,486,498,500,10,426,422,431,0,499,498,501,10,429,424,428,0,527,502,503,10,423,432,427,0,497,496,505,10,431,430,427,0,501,495,505,10,415,418,432,0,437,488,496,10,429,433,424,0,527,504,502,10,317,316,318,0,523,272,273,10,386,438,434,0,457,491,507,10,418,421,443,0,488,493,508,10,295,416,436,0,397,487,395,10,420,438,416,0,492,491,487,10,438,420,439,0,491,492,506,10,441,440,369,0,490,321,509,10,387,442,369,0,459,494,509,10,443,442,435,0,508,494,510],\"skinIndices\":[4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0],\"influencesPerVertex\":4,\"skinWeights\":[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],\"bones\":[{\"parent\":-1,\"name\":\"Hips\",\"pos\":[-0.000027,18.2131,0.000197],\"rotq\":[0,0,0,1]},{\"parent\":0,\"name\":\"LHipJoint\",\"pos\":[0.000027,0.055037,0.000009],\"rotq\":[0,0,0,1]},{\"parent\":1,\"name\":\"LeftUpLeg\",\"pos\":[1.54938,-2.41556,0.041129],\"rotq\":[0,0,0,1]},{\"parent\":2,\"name\":\"LeftLeg\",\"pos\":[-0.02,-7.21533,-0.20864],\"rotq\":[0,0,0,1]},{\"parent\":3,\"name\":\"LeftFoot\",\"pos\":[0.32,-7.29466,-0.47136],\"rotq\":[0,0,0,1]},{\"parent\":4,\"name\":\"LeftToeBase\",\"pos\":[0.19847,-0.54529,2.28466],\"rotq\":[0,0,0,1]},{\"parent\":0,\"name\":\"RHipJoint\",\"pos\":[0.000027,0.055037,0.000009],\"rotq\":[0,0,0,1]},{\"parent\":6,\"name\":\"RightUpLeg\",\"pos\":[-1.43938,-2.41556,0.041129],\"rotq\":[0,0,0,1]},{\"parent\":7,\"name\":\"RightLeg\",\"pos\":[-0.09,-7.21533,-0.20864],\"rotq\":[0,0,0,1]},{\"parent\":8,\"name\":\"RightFoot\",\"pos\":[-0.32,-7.29466,-0.47136],\"rotq\":[0,0,0,1]},{\"parent\":9,\"name\":\"RightToeBase\",\"pos\":[-0.30536,-0.83898,2.28801],\"rotq\":[0,0,0,1]},{\"parent\":0,\"name\":\"LowerBack\",\"pos\":[0.000027,0.055037,0.000009],\"rotq\":[0,0,0,1]},{\"parent\":11,\"name\":\"Spine\",\"pos\":[-0.04381,1.99522,-0.197985],\"rotq\":[0,0,0,1]},{\"parent\":12,\"name\":\"Spine1\",\"pos\":[-0.01959,2.01295,-0.04372],\"rotq\":[0,0,0,1]},{\"parent\":13,\"name\":\"Neck\",\"pos\":[0,0,0],\"rotq\":[0,0,0,1]},{\"parent\":14,\"name\":\"Neck1\",\"pos\":[0.063054,2.1058,-0.51192],\"rotq\":[0,0,0,1]},{\"parent\":15,\"name\":\"Head\",\"pos\":[-0.023034,1.43701,0.49728],\"rotq\":[0,0,0,1]},{\"parent\":14,\"name\":\"LeftShoulder\",\"pos\":[0,0,0],\"rotq\":[0,0,0,1]},{\"parent\":17,\"name\":\"LeftArm\",\"pos\":[2.59289,1.2264,-0.487197],\"rotq\":[0,0,0,1]},{\"parent\":18,\"name\":\"LeftForeArm\",\"pos\":[4.14553,-0.064466,0.257385],\"rotq\":[0,0,0,1]},{\"parent\":19,\"name\":\"LeftHand\",\"pos\":[3.69801,0.065802,1.73268],\"rotq\":[0,0,0,1]},{\"parent\":20,\"name\":\"LeftFingerBase\",\"pos\":[-0.000253,0,-0.000043],\"rotq\":[0,0,0,1]},{\"parent\":21,\"name\":\"LeftHandIndex1\",\"pos\":[0.559672,0,0.260979],\"rotq\":[0,0,0,1]},{\"parent\":20,\"name\":\"LThumb\",\"pos\":[-0.000253,0,-0.000043],\"rotq\":[0,0,0,1]},{\"parent\":14,\"name\":\"RightShoulder\",\"pos\":[0,0,0],\"rotq\":[0,0,0,1]},{\"parent\":24,\"name\":\"RightArm\",\"pos\":[-2.46562,1.22638,-0.487064],\"rotq\":[0,0,0,1]},{\"parent\":25,\"name\":\"RightForeArm\",\"pos\":[-4.14558,-0.064367,0.259233],\"rotq\":[0,0,0,1]},{\"parent\":26,\"name\":\"RightHand\",\"pos\":[-3.69873,0.066645,1.72989],\"rotq\":[0,0,0,1]},{\"parent\":27,\"name\":\"RightFingerBase\",\"pos\":[-0.000062,0,0.000158],\"rotq\":[0,0,0,1]},{\"parent\":28,\"name\":\"RightHandIndex1\",\"pos\":[-0.529147,0,0.246746],\"rotq\":[0,0,0,1]},{\"parent\":27,\"name\":\"RThumb\",\"pos\":[-0.000062,0,0.000158],\"rotq\":[0,0,0,1]}],\"uvs\":[[0.022816,0.769819,0.093625,0.785964,0.082043,0.821854,0.008872,0.877276,0.013738,0.81002,0.175438,0.361038,0.213471,0.280269,0.253149,0.314138,0.049178,0.683435,0.122005,0.708233,0.106857,0.745087,0.120407,0.543505,0.178234,0.576163,0.162888,0.609833,0.064669,0.645343,0.096092,0.568424,0.150778,0.475858,0.201965,0.50106,0.149788,0.450033,0.22473,0.395139,0.261462,0.199184,0.314915,0.127144,0.335384,0.148809,0.294708,0.221107,0.379927,0.086636,0.390586,0.105454,0.411666,0.084258,0.446088,0.091061,0.032516,0.725239,0.135164,0.672196,0.177722,0.843982,0.164408,0.922642,0.06842,0.901281,0.186287,0.808323,0.194369,0.770505,0.203366,0.737017,0.213034,0.702351,0.232412,0.651897,0.250042,0.616105,0.28468,0.541998,0.311638,0.461875,0.334142,0.376872,0.36015,0.259471,0.38202,0.192939,0.417823,0.14649,0.44389,0.13617,0.257641,0.866256,0.25723,0.917829,0.26053,0.823359,0.268385,0.791345,0.276643,0.763517,0.286133,0.731711,0.30146,0.693927,0.319499,0.656929,0.332727,0.576834,0.351399,0.511004,0.38233,0.425418,0.422223,0.277601,0.427868,0.211867,0.440217,0.161133,0.298344,0.876387,0.318043,0.882105,0.292468,0.918478,0.325645,0.852545,0.317121,0.813446,0.306964,0.843209,0.306083,0.776448,0.31371,0.742901,0.337712,0.71306,0.373779,0.681585,0.389707,0.617561,0.377022,0.640683,0.415751,0.538189,0.420449,0.445527,0.916926,0.830748,0.908003,0.796592,0.981375,0.784289,0.990691,0.894928,0.928191,0.915857,0.839546,0.361856,0.789273,0.39612,0.760399,0.317488,0.896387,0.752995,0.883179,0.715077,0.959069,0.693367,0.846887,0.612979,0.832474,0.577298,0.892526,0.546406,0.946455,0.657096,0.872895,0.680963,0.811422,0.501977,0.864369,0.451014,0.74825,0.200704,0.715237,0.224097,0.668912,0.148971,0.799661,0.282106,0.607559,0.104582,0.616404,0.084422,0.546992,0.09005,0.580459,0.081706,0.973765,0.737116,0.828226,0.932299,0.818349,0.847807,0.812499,0.813971,0.805847,0.773971,0.798912,0.740381,0.792289,0.707753,0.774564,0.652468,0.758382,0.614023,0.729218,0.540155,0.704364,0.46284,0.680261,0.382196,0.649504,0.264996,0.625182,0.196034,0.583177,0.150129,0.553434,0.136432,0.732279,0.918091,0.736105,0.871992,0.735168,0.829898,0.727737,0.792499,0.721423,0.763245,0.71517,0.732099,0.70273,0.690343,0.685452,0.650179,0.679534,0.56979,0.668367,0.506536,0.65131,0.426254,0.595507,0.283781,0.583864,0.214203,0.560613,0.164705,0.691832,0.88199,0.697704,0.917489,0.671185,0.887075,0.660978,0.858427,0.675351,0.811296,0.682626,0.846854,0.69002,0.774253,0.686173,0.741286,0.667483,0.706649,0.628081,0.678613,0.625089,0.631667,0.612331,0.605018,0.613559,0.525212,0.612814,0.4466,0.249748,0.921433,0.242989,0.955949,0.145343,0.95397,0.999869,0.924963,0.933786,0.947482,0.24255,0.99984,0.209335,0.99984,0.062883,0.343512,0.234631,0.347009,0.230541,0.442917,0.254177,0.827525,0.254153,0.876349,0.106013,0.870706,0.085209,0.646977,0.244977,0.652126,0.245484,0.690523,0.252462,0.784184,0.090995,0.781072,0.243648,0.570583,0.242432,0.54221,0.083875,0.537339,0.086436,0.565754,0.116517,0.140908,0.269407,0.145992,0.247178,0.243957,0.081205,0.240632,0.281238,0.065482,0.193198,0.033643,0.214993,0.002597,0.28356,0.035971,0.165948,0.062181,0.12572,0.918115,0.096347,0.822066,0.486947,0.135775,0.489295,0.088585,0.83232,0.973218,0.731727,0.990982,0.497077,0.218679,0.48818,0.165048,0.693969,0.990776,0.506218,0.542318,0.512751,0.451749,0.513866,0.287568,0.637276,0.904161,0.62042,0.8767,0.367261,0.87611,0.352732,0.907272,0.629565,0.959435,0.618649,0.83781,0.370288,0.83809,0.631554,0.800359,0.354498,0.807362,0.644144,0.772464,0.355292,0.774577,0.641673,0.750676,0.361321,0.753029,0.625539,0.728499,0.375071,0.732538,0.595084,0.712072,0.393164,0.710605,0.580059,0.699904,0.612091,0.666489,0.411252,0.697543,0.355678,0.962777,0.253895,0.986155,0.158623,0.958845,0.061597,0.929135,-0.001084,0.903674,0.333331,0.957774,0.273342,0.99984,0.364497,0.924497,0.391211,0.881567,0.400199,0.832572,0.40185,0.787061,0.397305,0.695201,0.392794,0.656889,0.389098,0.57505,0.389128,0.546715,0.405252,0.446633,0.423713,0.351166,0.420324,0.247619,0.395549,0.150186,0.365376,0.06835,0.346461,0.038381,0.325233,0.005118,0.591279,0.618913,0.570948,0.590513,0.429797,0.60093,0.401326,0.631716,0.397799,0.650629,0.584633,0.647171,0.582056,0.621239,0.411518,0.637578,0.409549,0.656085,0.560386,0.640976,0.545824,0.64567,0.508281,0.653515,0.452688,0.651943,0.600633,0.593459,0.589502,0.677499,0.567584,0.685939,0.43945,0.647772,0.415639,0.673234,0.405242,0.600584,0.511543,0.693043,0.432795,0.681793,0.527918,0.660474,0.458918,0.637896,0.599128,0.642746,0.531446,0.630004,0.38813,0.668008,0.464006,0.669715,0.920542,0.826899,0.90915,0.79088,0.980175,0.775121,0.993516,0.882844,0.933725,0.906544,0.829675,0.364742,0.780098,0.398615,0.752103,0.317308,0.896134,0.749855,0.881174,0.712849,0.954272,0.688433,0.840795,0.61404,0.825619,0.580222,0.883736,0.547846,0.938976,0.650185,0.868203,0.676673,0.802285,0.504852,0.854849,0.454041,0.744446,0.202107,0.711015,0.223874,0.67069,0.151214,0.792047,0.283612,0.615646,0.107463,0.626433,0.088674,0.560133,0.092721,0.594653,0.086106,0.970719,0.730406,0.837447,0.927381,0.824569,0.848507,0.816198,0.812737,0.808322,0.774807,0.799505,0.741209,0.790022,0.706426,0.770905,0.655771,0.753454,0.619815,0.719188,0.545378,0.692652,0.46496,0.670604,0.379679,0.645236,0.261923,0.623716,0.195148,0.588123,0.14841,0.744493,0.922018,0.744381,0.870354,0.741738,0.827366,0.734056,0.795251,0.725946,0.767327,0.716626,0.73541,0.701492,0.697471,0.683638,0.660304,0.670855,0.579994,0.652535,0.513941,0.62205,0.428027,0.582951,0.279722,0.577678,0.213841,0.565605,0.162948,0.562071,0.13792,0.70355,0.880264,0.70919,0.922463,0.683783,0.885878,0.67634,0.856222,0.685108,0.817105,0.695108,0.846979,0.696381,0.780108,0.688936,0.746459,0.665067,0.716426,0.626111,0.643694,0.613539,0.620459,0.587913,0.540797,0.583748,0.447948,0.019877,0.784023,0.093304,0.796775,0.084166,0.830937,0.0099,0.894798,0.013651,0.82168,0.164416,0.361688,0.204835,0.282033,0.243958,0.317705,0.042752,0.693073,0.118646,0.715264,0.105195,0.753171,0.110267,0.546247,0.170243,0.577543,0.155596,0.613202,0.055599,0.656813,0.086185,0.572781,0.140035,0.477148,0.19177,0.502215,0.139029,0.450855,0.214575,0.396304,0.256809,0.20079,0.317119,0.125691,0.336586,0.149431,0.289743,0.224416,0.389561,0.085077,0.398304,0.105323,0.425584,0.082566,0.45906,0.091119,0.027775,0.736812,0.129147,0.681151,0.182813,0.848601,0.172426,0.933181,0.072385,0.916128,0.188871,0.814741,0.195768,0.774711,0.202911,0.741103,0.209736,0.708458,0.227814,0.65318,0.244248,0.614764,0.273893,0.540938,0.299242,0.463635,0.323857,0.382992,0.35535,0.265769,0.380116,0.19683,0.422462,0.151091,0.452336,0.137544,0.265059,0.873308,0.268622,0.919509,0.266243,0.831146,0.273905,0.793726,0.2804,0.764458,0.286846,0.733295,0.299551,0.69154,0.317094,0.651408,0.323491,0.570914,0.335046,0.507617,0.352601,0.427295,0.409331,0.284902,0.4214,0.215272,0.444979,0.165824,0.309349,0.883582,0.330002,0.888796,0.30326,0.919107,0.340394,0.860158,0.326272,0.812861,0.318776,0.848439,0.311793,0.775669,0.315839,0.742667,0.334763,0.70808,0.374397,0.680225,0.377668,0.633216,0.38984,0.526644,0.390604,0.606595,0.391044,0.447901,0.850337,0.955833,0.752672,0.956378,0.746421,0.921766,0.066596,0.947775,0.00053,0.924832,0.7857,0.99984,0.752452,0.99984,0.941746,0.34665,0.940338,0.442675,0.769965,0.347627,0.890884,0.873154,0.742678,0.876623,0.74337,0.827804,0.91497,0.649755,0.918226,0.688295,0.755143,0.652559,0.754073,0.690944,0.745721,0.784493,0.757669,0.571044,0.914935,0.568522,0.917912,0.540148,0.759301,0.542692,0.891092,0.143281,0.924936,0.243512,0.738143,0.146121,0.84282,0.063837,0.727494,0.065446,0.794655,0.00354,0.815993,0.034902,0.730421,0.001551,0.870484,0.92027,0.901263,0.824662,0.516865,0.089988,0.518942,0.137273,0.26875,0.992529,0.508311,0.220261,0.517536,0.16659,0.306574,0.992543,0.497266,0.544406,0.49125,0.453642,0.380915,0.878699,0.36387,0.906109,0.648887,0.910886,0.371272,0.961524,0.382917,0.839752,0.634515,0.879585,0.370208,0.802161,0.631705,0.841482,0.647702,0.810793,0.357759,0.774145,0.360361,0.752333,0.647097,0.777946,0.376653,0.730212,0.641184,0.756326,0.407256,0.713935,0.627529,0.73572,0.609533,0.713643,0.390486,0.668173,0.422378,0.701833,0.629121,0.684686,0.59149,0.700453,0.710647,0.995122,0.645613,0.96647,0.747435,0.990482,0.940398,0.934485,1.00334,0.909346,0.721657,0.99984,0.662313,0.956877,0.631639,0.923146,0.605558,0.879829,0.59729,0.830708,0.596307,0.785177,0.602199,0.693394,0.612169,0.573377,0.607273,0.655153,0.612555,0.545044,0.597901,0.444736,0.772647,0.443584,0.758932,0.244402,0.580843,0.349008,0.611953,0.148464,0.643324,0.067079,0.662677,0.037391,0.725606,0.035904,0.68439,0.004443,0.491091,0.289172,0.40361,0.644466,0.432143,0.592306,0.411612,0.620637,0.573477,0.603565,0.601817,0.63457,0.60524,0.653537,0.418104,0.648982,0.420836,0.623021,0.591574,0.640383,0.593438,0.658934,0.456988,0.647705,0.550249,0.654533,0.49455,0.655783,0.442429,0.642919,0.413049,0.679335,0.402389,0.595084,0.434956,0.687917,0.563534,0.650432,0.598076,0.603361,0.570002,0.68455,0.491053,0.695361,0.471483,0.632096,0.474839,0.662639,0.54409,0.640425,0.614824,0.671002,0.538807,0.672269,0.279249,0.001551,0.585751,0.245523,0.907217,0.783751,0.987371,0.821917,0.916411,0.573034,0.863212,0.477255,0.688483,0.125386,0.062882,0.439548,0.081388,0.685465,0.290591,0.991002,0.989034,0.815444,0.907948,0.57295,0.853707,0.479905,0.691321,0.129631,0.168087,0.974147,0.843031,0.96368,0.587237,0.676076]],\"materials\":[{\"colorEmissive\":[0,0,0],\"DbgColor\":15658734,\"DbgIndex\":0,\"shading\":\"standard\",\"colorSpecular\":[0.5,0.5,0.5],\"depthTest\":true,\"opacity\":1,\"blending\":\"NormalBlending\",\"transparent\":false,\"depthWrite\":true,\"visible\":true,\"colorDiffuse\":[1,1,1],\"specularCoef\":50,\"wireframe\":false,\"DbgName\":\"HM_SneakersMaterial\"}]};\n\n//  Replace json geometries with data.\n\njson.body.geometry = body;\njson.eyes.geometry = eyes;\njson.hairs.geometry = hairs;\njson.underwears.geometry = underwears;\njson.costume.geometry = costume;\njson.tshirt.geometry = tshirt;\njson.trousers.geometry = trousers;\njson.shoes.geometry = shoes; // TODO\n\ndebugMode && console.log( json );\n\n\n//\tLoad male.\n\nmale = fromJSON( json );\n\nlocalPlayer.outfit.AnimationsHandler.refresh();\n\ndebugMode && console.log(\"male:\", male);\n\nlocalPlayer.outfit.removeAll();\n\n\n\n//  fromJSON (v2.1).\n\nfunction fromJSON( json ){\n\n//  Set gender first.\n\n\tlocalPlayer.outfit.removeAll(); // important!\n\tlocalPlayer.outfit.setGender( \"male\" );  // important!\n\n\tdelete json.gender;\n\n//  ORDER DOES MATTER for transparency:\n\t//  Order in localPlayer.outfit.direction.children array DOES MATTER.\n\t//  So we must deliver the outfit.direction.children array with the following order:\n\t//  [skeleton, body, eyes, hairs, stockings, underwears, tshirt, trousers, costume, dress, shoes, coat]\n\n\tvar orderMap = [];\n\n\tif (json.skeleton) orderMap.push(\"skeleton\");\n\tif (json.body) orderMap.push(\"body\");\n\tif (json.eyes) orderMap.push(\"eyes\");\n\tif (json.glasses) orderMap.push(\"glasses\");\n\tif (json.hairs) orderMap.push(\"hairs\");\n\tif (json.hat) orderMap.push(\"hat\");\n\tif (json.stockings) orderMap.push(\"stockings\");\n\tif (json.underwears) orderMap.push(\"underwears\");\n\tif (json.costume) orderMap.push(\"costume\");\n\tif (json.tshirt) orderMap.push(\"tshirt\");\n\tif (json.trousers) orderMap.push(\"trousers\");\n\tif (json.skirt) orderMap.push(\"skirt\");\n\tif (json.dress) orderMap.push(\"dress\");\n\tif (json.shoes) orderMap.push(\"shoes\");\n\tif (json.coat) orderMap.push(\"coat\");\n\n\tdebugMode && console.log({\"orderMap\": orderMap});\n\n\tvar outfit = {};\n\n\tfor ( var i = 0; i < orderMap.length; i++){\n\n\t\tvar object = {};\n\t\tvar sortIndex = i;\n\t\tvar key = orderMap[i];\n\n\t\tobject.name      = json[ key ].name;\n\t\tobject.visible   = json[ key ].visible;\n\t\tobject.material  = json[ key ].material;\n\t\tobject.geometry  = json[ key ].geometry;\n\n\t//  Scale.\n\n\t\tvar vector = new THREE.Vector3();\n\t\tobject.scale = vector.fromArray( json[ key ].scale );\n\n\t//  Material.\n\n\t\tvar material = materialfromJSON( object.material );\n\n\t//  Geometry.\n\n\t\tvar loader = new THREE.JSONLoader();\n\t\tvar data = object.geometry;\n\t\tvar geometry = loader.parse( data ).geometry;\n\n\t\tgeometry.name = data.name;\n\t\tgeometry.computeFaceNormals();\n\t\tgeometry.computeVertexNormals();\n\t\tgeometry.computeBoundingBox();\n\t\tgeometry.computeBoundingSphere();\n\n\t\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\t\tskinned.renderDepth = 1;\n\t\tskinned.frustumCulled = false;\n\t\tskinned.position.set( 0, 0, 0 );\n\t\tskinned.rotation.set( 0, 0, 0 );\n\t\tskinned.scale.copy( object.scale );\n\t\tskinned.castShadow = true;\n\t\tskinned.name = object.name;\n\t\tskinned.sortIndex = sortIndex;\n\n\t\toutfit[ key ] = skinned;\n\n\t\tvar item = {};\n\t\titem[ key ] = skinned;\n\t\tlocalPlayer.outfit.add( item );\n\n\t}\n\n\treturn outfit;\n\n};\n\n\n\n\n\n/*\n\nfunction toJSON(){\n\n\tvar data = {};\n\n\tif ( arguments.length == 0 ) {\n\n\t\tfor (var i = 0; i < this.slots.length; i++) {\n\n\t\t\tvar name = this.slots[i];\n\n\t\t\tif ( !name ) continue;\n\t\t\tif ( !this[ name ] ) continue;\n\t\t\tif ( !this.slots.includes( name ) ) continue;\n\n\t\t\tdata[ name ] = {};\n\t\t\tdata[ name ].name      = name;\n\t\t\tdata[ name ].visible   = this[ name ].visible;\n\t\t\tdata[ name ].scale     = this[ name ].scale.toArray();\n\t\t\tdata[ name ].geometry  = this[ name ].geometry.sourceFile;\n\t\t\tdata[ name ].material  = materialtoJSON( this[ name ].material );\n\n\t\t}\n\n\t} else {\n\n\t\tfor (var i = 0; i < arguments.length; i++){\n\n\t\t\tvar name = arguments[i];\n\n\t\t\tif ( !name ) continue;\n\t\t\tif ( !this[ name ] ) continue;\n\t\t\tif ( !this.slots.includes( name ) ) continue;\n\n\t\t\tdata[ name ] = {};\n\t\t\tdata[ name ].name      = name;\n\t\t\tdata[ name ].visible   = this[ name ].visible;\n\t\t\tdata[ name ].scale     = this[ name ].scale.toArray();\n\t\t\tdata[ name ].geometry  = this[ name ].geometry.sourceFile;\n\t\t\tdata[ name ].material = materialtoJSON( this[ name ].material );\n\n\t\t}\n\n\t}\n\n\tif ( this.getGender() ) \n\t\tdata.gender = this.getGender();\n\n\tvar data = JSON.stringify( data );\n\n\tif ( data === \"{}\" ) \n\t\treturn null;\n\telse \n\t\treturn JSON.parse( data );\n\n};\n*/\n\n//  MATERIAL FROM JSON.\n//  materialfromJson.js (v1.6)\n//  Return a promise with the material resolved.\n\nfunction materialfromJSON( json ){\n\n\t//  MULTIMATERIAL.\n\n\tif ( json.type == \"MultiMaterial\" ) {\n\n\n\t\tvar materials = [];\n\n\t\tfor ( var i = 0; i < json.materials.length; i++ ){\n\n\t\t\tmaterials.push( materialfromJSON( json.materials[i] ) );\n\n\t\t}\n\n\n\t\t//  Create multimaterial.\n\n\t\tvar multimaterial = new THREE.MeshFaceMaterial(materials);\n\n\t\tmultimaterial.uuid = json.uuid || THREE.Math.generateUUID();\n\n\t\treturn multimaterial;\n\n\t}\n\n\n\t//  MATERIAL.\n\n\tvar options = {};\n\n\tfor (var name in json){\n\n\t\tif ( json[ name ] == undefined ) continue; // important!\n\n\n\t\tswitch (name){\n\n\t\t\tcase \"_id\":\n\t\t\tcase \"meta\":\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  uuid.\n\n\t\t\tcase \"uuid\":\n\t\t\t\toptions.uuid = json.uuid || THREE.Math.generateUUID();\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  texture from json.\n\n\t\t\tcase \"alphaMap\":\n\t\t\tcase \"aoMap\":\n\t\t\tcase \"bumpMap\":\n\t\t\tcase \"displacementMap\":\n\t\t\tcase \"emissiveMap\":\n\t\t\tcase \"lightMap\":\n\t\t\tcase \"map\":\n\t\t\tcase \"metalnessMap\":\n\t\t\tcase \"normalMap\":\n\t\t\tcase \"roughnessMap\":\n\t\t\tcase \"specularMap\":\n\n\t\t\t\toptions[ name ] = texturefromJSON( json[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  three color to hex.\n\n\t\t\tcase \"color\":\n\t\t\tcase \"emissive\":\n\t\t\tcase \"specular\":\n\n\t\t\t\toptions[ name ] = new THREE.Color();\n\t\t\t\toptions[ name ].setHex( json[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  vector2 from array.\n\n\t\t\tcase \"normalScale\":\n\n\t\t\t\toptions[ name ] = new THREE.Vector2();\n\t\t\t\toptions[ name ].fromArray( json[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\tcase \"envMap\":\n\t\t\t\t//  TODO: cube texture.\n\t\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\toptions[ name ] = json[ name ];\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn new THREE[ options.type ](options);\n}\n\n\n//  TEXTURE FROM JSON (v1.6)\n//  Return a promise with the texture resolved.\n\nfunction texturefromJSON( json ){\n\n\tvar texture = new THREE.Texture();\n\n\tfor ( var name in json ){\n\n\t\tswitch (name){\n\n\t\t\tcase \"meta\":\n\t\t\tcase \"image\":\n\t\t\t\tbreak;\n\n\t\t\t\t//  array to vector2.\n\n\t\t\tcase \"offset\":\n\t\t\tcase \"repeat\":\n\n\t\t\t\tif ( json[ name ].length != 2) break;\n\n\t\t\t\ttexture[ name ] = new THREE.Vector2();\n\t\t\t\ttexture[ name ].fromArray( json[ name ] );\n\n\t\t\t\tbreak;\n\n\n\t\t\t\t//  wrapS & wrapT.\n\n\t\t\tcase \"wrap\":\n\n\t\t\t\tif ( json[ name ].length != 2) break;\n\t\t\t\tif ( !( json[ name ] instanceof Array ) ) break;\n\n\t\t\t\ttexture.wrapS = json[ name ][0];\n\t\t\t\ttexture.wrapT = json[ name ][1];\n\n\t\t\t\tbreak;\n\n\t\t\t\t//  image from texture json with\"FileReader.readAsDataURL(blob)\".\n\n\t\t\t\t//  Check whether a match for the request is found in   \n\t\t\t\t//  the CacheStorage using CacheStorage.match(). If so, serve that.\n\n\t\t\t\t//  If not, open the \"textures\" cache using open(), \n\t\t\t\t//  put the default network request in the cache using Cache.put() \n\t\t\t\t//  and return a clone of the default network request using return response.clone().\n\n\t\t\t\t//  Clone is needed because put() consumes the response body.\n\t\t\t\t//  If this fails (e.g., because the network is down), return a fallback response.\n\n\t\t\t\t//  Pros:\n\n\t\t\t\t//  Easy to use.\n\t\t\t\t//  Small, compact, safe code.\n\t\t\t\t//  Texture.image.src is string.\n\t\t\t\t//  Texture.image.src is dataURL.\n\t\t\t\t//  Texture.image.src can reused.\n\t\t\t\t//  Texture.image.src is always valid.\n\t\t\t\t//  Texture.image.src can be send everywhere.\n\t\t\t\t//  Texture.image.src can converted to canvas.\n\t\t\t\t//  Texture.image (canvas) size always power of 2.\n\t\t\t\t//  Texture.image.src can saved in storage objects.\n\t\t\t\t//  Texture.image.src can converted vice versa to blob.\n\n\t\t\t\t//  Cons:\n\n\t\t\t\t//  Larger size (~33%)\n\t\t\t\t//  Take more time than URL.createObjectURL(blob);\n\n\t\t\t\t//  sourceFile.\n\t\t\t\t//  case \"sourceFile\":\n\t\t\t\t//      texture.sourceFile = json[ name ]; // important!\n\t\t\t\t//  break;\n\n\t\t\t//  case \"image\": (N/A).\n\n\t\t\tcase \"sourceFile\":\n\n\t\t\t\ttexture.sourceFile = json.sourceFile;\n\n\t\t\t\t//  SourceFile first.\n\t\t\t\tvar url = json.sourceFile || json.image.src || json.image || \"//i.imgur.com/ODeftia.jpg\";\n\n\t\t\t\t//  URL.\n\n\t\t\t\tif ( validator && validator.isURL( url ) ) {\n\n\t\t\t\t\t//  Cache first.\n\t\t\t\t\tcaches.match( url ).then(function(response){\n\n\t\t\t\t\t\tif ( !response ) \n\t\t\t\t\t\t\tthrow \"Texture not found!\";\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}).catch(function(err){\n\n\t\t\t\t\t\t//  We use cors origin mode to avoid\n\t\t\t\t\t\t//  texture tainted canvases, images.\n\n\t\t\t\t\t\treturn fetch( url, {\n\t\t\t\t\t\t\tmode: \"cors\",  // important!\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}).then(function(response){\n\n\t\t\t\t\t\treturn caches.open(\"textures\").then(function(cache){\n\n\t\t\t\t\t\t\t//  Clone is needed because put() consumes the response body.\n\t\t\t\t\t\t\t//  See: \"https://developer.mozilla.org/en-US/docs/Web/API/Cache/put\"\n\n\t\t\t\t\t\t\tvar clone = response.clone();\n\t\t\t\t\t\t\treturn cache.put( url, clone ).then(function(){\n\t\t\t\t\t\t\t\treturn response.blob();  //  important!\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}).then(function(blob){\n\n\t\t\t\t\t\tvar img = new Image();\n\t\t\t\t\t\timg.crossOrigin = \"anonymous\";  //  important!\n\n\t\t\t\t\t\timg.onload = function(){\n\t\t\t\t\t\t\tvar canvas = makePowerOfTwo( img, true );\n\t\t\t\t\t\t\ttexture.image = canvas;\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\t\timg.onload = null; // optional!\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t//  Get dataURL from blob.\n\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onload = function() {\n\t\t\t\t\t\t\timg.src = reader.result;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\n\t\t\t\t//  DataURL.\n\n\t\t\t\tif ( validator && validator.isDataURI( url ) ) {\n\t\t\t\t\tvar img = new Image();\n\t\t\t\t\timg.crossOrigin = \"anonymous\";\n\t\t\t\t\timg.onload = function(){\n\t\t\t\t\t\tvar canvas = makePowerOfTwo( img, true );\n\t\t\t\t\t\ttexture.image = canvas;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\timg.onload = null; // optional!\n\t\t\t\t\t}; \n\t\t\t\t\timg.src = url;  break;\n\t\t\t\t} \n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\ttexture[ name ] = json[ name ];\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn texture;\n}\n\n\n//  IMAGE FROM JSON (v1.6)\n//  Return a promise with the image resolved.\n\nfunction imagefromJSON( json, onLoadEnd ){\n\n\tvar url = json.src;\n\n\t//  Cache first.\n\tcaches.match( url ).then(function(response){\n\n\t\tif ( !response ) \n\t\t\tthrow response;\n\t\telse\n\t\t\treturn response;\n\n\t}).catch(function(err){\n\n\t\t//  We use cors origin mode to avoid\n\t\t//  texture tainted canvases, images.\n\n\t\treturn fetch( url, {\n\t\t\tmode: \"cors\",  // important!\n\t\t\tmethod: \"GET\",\n\t\t});\n\n\t\t//  TODO: REPLACE async/await FOR BACKWARD COMPETALITY.\n\t}).then(function(response){\n\n\t\treturn caches.open(\"textures\").then(function(cache){\n\n\t\t\t//  Clone is needed because put() consumes the response body.\n\t\t\t//  See: \"https://developer.mozilla.org/en-US/docs/Web/API/Cache/put\"\n\n\t\t\tvar clone = response.clone();\n\t\t\treturn cache.put( url, clone ).then(function(){\n\t\t\t\treturn response.blob(); //  important!\n\t\t\t});\n\n\t\t});\n\n\t}).then(function(blob){\n\n\t\tvar img = new Image();\n\t\timg.crossOrigin = \"anonymous\";  //  important!\n\t\timg.onload = onLoadEnd;\n\n\t\t//  Get dataURL from blob.\n\n\t\treturn new Promise(function(resolve, reject){\n\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = function() {\n\t\t\t\timg.src = reader.result;\n\t\t\t\tresolve( img );\n\t\t\t};\n\n\t\t\treader.readAsDataURL(blob);\n\n\t\t});\n\n\t});\n\n}\n\n//  makePowerOfTwo.js\n\nfunction makePowerOfTwo( image, natural ) {\n\n\tvar canvas = document.createElement( \"canvas\" );\n\n\tif ( natural ){\n\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.naturalWidth );\n\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.naturalHeight );\n\t} else {\n\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\n\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\n\t}\n\n\tvar context = canvas.getContext( \"2d\" );\n\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t//  debugMode && console.warn( \"outfitLoader:makePowerOfTwo(img):\", \n\t//  \"Image resized to:\", canvas.width, \"x\", canvas.height );\n\n\treturn canvas;\n}\n\n"
			}],
		"3D2F0785-3773-4199-8450-B10230F2242E": [
			{
				"name": "female-loader.js",
				"source": "var collection = [\n\t{\"name\":\"body\",\"gender\":\"female\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/female/body.json\",\"material\":{\"type\":\"MeshStandardMaterial\",\"map\":{\"sourceFile\":\"https://i.imgur.com/jc8chBX.jpg\",\"image\":\"https://i.imgur.com/jc8chBX.jpg\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":0},\"emissiveMap\":{\"sourceFile\":\"https://i.imgur.com/pRYCYkb.jpg\",\"image\":\"https://i.imgur.com/pRYCYkb.jpg\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":0},\"name\":\"HF_SkinMaterial\",\"color\":16777215,\"side\":0,\"opacity\":1,\"shading\":2,\"emissive\":9276813,\"skinning\":true,\"transparent\":false,\"roughness\":0.5,\"metalness\":0,\"emissiveIntensity\":1},\"_id\":\"body\"}, \n\t{\"name\":\"costume\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/female/costume.json\",\"material\":{\"uuid\":\"E948086D-B292-43E1-98F8-E0416C1F6FCD\",\"_id\":\"HF_CostumeMaterial\",\"name\":\"HF_CostumeMaterial\",\"type\":\"MeshStandardMaterial\",\"fog\":true,\"lights\":true,\"blending\":1,\"side\":0,\"shading\":2,\"vertexColors\":0,\"opacity\":1,\"transparent\":true,\"blendSrc\":204,\"blendDst\":205,\"blendEquation\":100,\"depthFunc\":3,\"depthTest\":true,\"depthWrite\":true,\"clipShadows\":false,\"colorWrite\":true,\"polygonOffset\":false,\"polygonOffsetFactor\":0,\"polygonOffsetUnits\":0,\"alphaTest\":0.5,\"premultipliedAlpha\":false,\"overdraw\":0,\"visible\":true,\"color\":16777215,\"roughness\":0.5,\"metalness\":0.5,\"map\":{\"uuid\":\"6AE42FDD-0E8A-4D7C-BCA9-E141E5D2BD5C\",\"name\":\"\",\"sourceFile\":\"https://st2.depositphotos.com/3743699/6552/i/950/depositphotos_65521657-stock-photo-purple-violet-seamless-wire-mesh.jpg\",\"image\":\"https://st2.depositphotos.com/3743699/6552/i/950/depositphotos_65521657-stock-photo-purple-violet-seamless-wire-mesh.jpg\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":15},\"lightMapIntensity\":1,\"aoMapIntensity\":1,\"emissive\":0,\"emissiveIntensity\":1,\"bumpMap\":{\"uuid\":\"32FBA8B0-CD0F-4F3D-B292-F52C594C2661\",\"name\":\"\",\"sourceFile\":\"https://st2.depositphotos.com/3743699/6552/i/950/depositphotos_65521657-stock-photo-purple-violet-seamless-wire-mesh.jpg\",\"image\":\"https://st2.depositphotos.com/3743699/6552/i/950/depositphotos_65521657-stock-photo-purple-violet-seamless-wire-mesh.jpg\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":1},\"bumpScale\":-0.1,\"normalScale\":[1,1],\"displacementScale\":1,\"displacementBias\":0,\"envMapIntensity\":1,\"refractionRatio\":0.98,\"wireframe\":false,\"wireframeLinewidth\":1,\"wireframeLinecap\":\"round\",\"wireframeLinejoin\":\"round\",\"skinning\":true,\"morphTargets\":false,\"morphNormals\":false},\"gender\":\"female\",\"_id\":\"costume\"}, \n\t{\"name\":\"dress\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/female/frillydress.json\",\"material\":{\"uuid\":\"E948086D-B292-43E1-98F8-E0416C1F6FCD\",\"_id\":\"HF_DressMaterial\",\"name\":\"HF_DressMaterial\",\"type\":\"MeshStandardMaterial\",\"fog\":true,\"lights\":true,\"blending\":1,\"side\":0,\"shading\":2,\"vertexColors\":0,\"opacity\":1,\"transparent\":true,\"blendSrc\":204,\"blendDst\":205,\"blendEquation\":100,\"depthFunc\":3,\"depthTest\":true,\"depthWrite\":true,\"clipShadows\":false,\"colorWrite\":true,\"polygonOffset\":false,\"polygonOffsetFactor\":0,\"polygonOffsetUnits\":0,\"alphaTest\":0.5,\"premultipliedAlpha\":false,\"overdraw\":0,\"visible\":true,\"color\":16777215,\"roughness\":0.5,\"metalness\":0.5,\"lightMapIntensity\":1,\"aoMapIntensity\":1,\"emissive\":3355443,\"emissiveIntensity\":1,\"bumpScale\":0.5,\"normalScale\":[1,1],\"displacementScale\":1,\"displacementBias\":0,\"envMapIntensity\":1,\"refractionRatio\":0.98,\"wireframe\":false,\"wireframeLinewidth\":1,\"wireframeLinecap\":\"round\",\"wireframeLinejoin\":\"round\",\"skinning\":true,\"morphTargets\":false,\"morphNormals\":false},\"gender\":\"female\",\"_id\":\"dress\"}, \n\t{\"name\":\"eyes\",\"gender\":\"female\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/female/eyes.json\",\"material\":{\"type\":\"MeshStandardMaterial\",\"map\":{\"sourceFile\":\"https://i.imgur.com/Si5QWl0.png\",\"image\":\"https://i.imgur.com/Si5QWl0.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":0},\"emissiveMap\":{\"sourceFile\":\"https://i.imgur.com/Si5QWl0.png\",\"image\":\"https://i.imgur.com/Si5QWl0.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":0},\"name\":\"HF_EyesMaterial\",\"color\":16777215,\"side\":0,\"alphaTest\":0.5,\"opacity\":1,\"shading\":2,\"emissive\":6710886,\"skinning\":true,\"transparent\":false,\"roughness\":0.5,\"metalness\":0.5,\"emissiveIntensity\":1},\"_id\":\"eyes\"}, \n\t{\"name\":\"hairs\",\"gender\":\"female\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/female/hairs.json\",\"material\":{\"type\":\"MeshStandardMaterial\",\"map\":{\"sourceFile\":\"https://i.imgur.com/NWw7sOL.png\",\"image\":\"https://i.imgur.com/NWw7sOL.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":0},\"name\":\"HF_HairsMaterial\",\"color\":16777215,\"side\":2,\"opacity\":1,\"shading\":2,\"emissive\":0,\"skinning\":true,\"alphaTest\":0.5,\"transparent\":false,\"roughness\":0.5,\"metalness\":0.5},\"_id\":\"hairs\"}, \n\t{\"name\":\"shoes\",\"gender\":\"female\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/female/shoes.json\",\"material\":{\"type\":\"MeshStandardMaterial\",\"name\":\"HF_SandalsMaterial\",\"color\":16777215,\"side\":0,\"opacity\":1,\"shading\":2,\"emissive\":0,\"skinning\":true,\"alphaTest\":0.5,\"transparent\":false,\"roughness\":0.5,\"metalness\":0.5},\"_id\":\"shoes\"},{\"name\":\"stockings\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/female/stockings.json\",\"material\":{\"uuid\":\"935041A1-D9FD-43B7-B32D-09524A9FF144\",\"_id\":\"HF_WhiteFisnetStockings\",\"name\":\"HF_WhiteFisnetStockings\",\"type\":\"MeshStandardMaterial\",\"fog\":true,\"lights\":true,\"blending\":1,\"side\":0,\"shading\":2,\"vertexColors\":0,\"opacity\":1,\"transparent\":true,\"blendSrc\":204,\"blendDst\":205,\"blendEquation\":100,\"depthFunc\":3,\"depthTest\":true,\"depthWrite\":true,\"clipShadows\":false,\"colorWrite\":true,\"polygonOffset\":false,\"polygonOffsetFactor\":0,\"polygonOffsetUnits\":0,\"alphaTest\":0.5,\"premultipliedAlpha\":false,\"overdraw\":0,\"visible\":true,\"color\":16777215,\"roughness\":0.5,\"metalness\":0.5,\"map\":{\"uuid\":\"4B3F4B49-3C46-4162-9AE4-4DE8878A3F4D\",\"name\":\"\",\"sourceFile\":\"https://i.imgur.com/deEz9zN.png\",\"image\":\"https://i.imgur.com/deEz9zN.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":2},\"lightMapIntensity\":1,\"aoMapIntensity\":1,\"emissive\":16777215,\"emissiveIntensity\":1,\"emissiveMap\":{\"uuid\":\"4B3F4B49-3C46-4162-9AE4-4DE8878A3F4D\",\"name\":\"\",\"sourceFile\":\"https://i.imgur.com/deEz9zN.png\",\"image\":\"https://i.imgur.com/deEz9zN.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":2},\"bumpScale\":1,\"normalScale\":[1,1],\"displacementScale\":1,\"displacementBias\":0,\"envMapIntensity\":1,\"refractionRatio\":0.98,\"wireframe\":false,\"wireframeLinewidth\":1,\"wireframeLinecap\":\"round\",\"wireframeLinejoin\":\"round\",\"skinning\":true,\"morphTargets\":false,\"morphNormals\":false},\"_id\":\"stockings\",\"gender\":\"female\"}, \n\t{\"name\":\"trousers\",\"gender\":\"female\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/female/jeans_rlc.json\",\"material\":{\"type\":\"MeshStandardMaterial\",\"name\":\"\",\"color\":16777215,\"side\":0,\"opacity\":1,\"shading\":2,\"emissive\":0,\"skinning\":true,\"alphaTest\":0.5,\"transparent\":false,\"roughness\":0.5,\"metalness\":0.5},\"_id\":\"trousers\"}, \n\t{\"name\":\"tshirt\",\"gender\":\"female\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/female/tshirt_rlc.json\",\"material\":{\"type\":\"MeshStandardMaterial\",\"name\":\"\",\"color\":16777215,\"side\":0,\"opacity\":1,\"shading\":2,\"emissive\":0,\"skinning\":true,\"alphaTest\":0.5,\"transparent\":false,\"roughness\":0.5,\"metalness\":0.5},\"_id\":\"tshirt\"}, \n\t{\"name\":\"underwears\",\"gender\":\"female\",\"visible\":true,\"scale\":[1,1,1],\"geometry\":\"/skinned/female/underwears.json\",\"material\":{\"type\":\"MeshStandardMaterial\",\"map\":{\"sourceFile\":\"https://i.imgur.com/mrs3kiS.png\",\"image\":\"https://i.imgur.com/mrs3kiS.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":0},\"emissiveMap\":{\"sourceFile\":\"https://i.imgur.com/mrs3kiS.png\",\"image\":\"https://i.imgur.com/mrs3kiS.png\",\"mipmaps\":[],\"mapping\":300,\"wrapS\":1001,\"wrapT\":1001,\"magFilter\":1006,\"minFilter\":1008,\"anisotropy\":1,\"format\":1021,\"type\":1009,\"offset\":[0,0],\"repeat\":[1,1],\"generateMipmaps\":true,\"premultiplyAlpha\":false,\"flipY\":true,\"unpackAlignment\":4,\"encoding\":3000,\"version\":0},\"name\":\"HF_UnderwearsMaterial\",\"color\":16777215,\"side\":0,\"opacity\":1,\"shading\":2,\"emissive\":6711039,\"skinning\":true,\"alphaTest\":0.5,\"transparent\":true,\"roughness\":0.5,\"metalness\":0.5},\"_id\":\"underwears\"}\n];\n\nvar json = {};\n\ncollection.forEach(function( item ){ \n\n\tjson[ item._id ] = item; // important!\n\n});\n\nlocalPlayer.outfit.fromJSON( json ).then(function( outfit ){\n\n\tfemale = outfit;\n\n}).then(function(){\n\n\tlocalPlayer.outfit.AnimationsHandler.refresh();\n\n}).then(function(){\n\n\tdebugMode && console.log(\"female:\", female);\n\n}).then(function(){\n\n\tlocalPlayer.outfit.removeAll();\n\n}).catch(function(err){\n\tconsole.error(err);\n});\n"
			}],
		"14E81EFF-CDEF-42C1-A2A2-A36BCF7D5ACD": [
			{
				"name": "ground.js",
				"source": "groundHelper.visible = !this.visible;"
			}],
		"359671E7-8ACE-4366-8488-28F13C5A6A8C": [
			{
				"name": "localPlayerHandler.js",
				"source": "//\tlocalPlayerHandler.js (v3.5)\n//\thot \"add/remove\" from AW3D v0.3.7 and later.\n//\tMaking of global function.\n\nlocalPlayerHandler = function(){\n\n\tfor (var arg in arguments){\n\n\t\tvar data = arguments[arg];\n\n\t\tswitch (data) {\n\n\t\t//  ACTIONS.\n\n\t\t\tcase \"/action/idle\":\n\n\t\t\t\tif ( localPlayer.controller.isIdling ) break;\n\t\t\t\tif ( localPlayer.controller.isJumping ) break;\n\t\t\t\tif ( localPlayer.controller.isOnSlope ) break;\n\t\t\t\tif ( !localPlayer.controller.isGrounded ) break;\n\n\t\t\t\tstartIdling();\n\n\t\t\tbreak;\n\n\n\t\t\tcase \"/action/walk\":\n\n\t\t\t\tif ( localPlayer.controller.isJumping ) break;\n\t\t\t\tif ( localPlayer.controller.isOnSlope ) break;\n\t\t\t\tif ( !localPlayer.controller.isGrounded ) break;\n\n\t\t\t\tstartWalking();\n\n\t\t\tbreak;\n\n\n\t\t\tcase \"/action/run\":\n\n\t\t\t\tif ( localPlayer.controller.isJumping ) break;\n\t\t\t\tif ( localPlayer.controller.isOnSlope ) break;\n\t\t\t\tif ( !localPlayer.controller.isGrounded ) break;\n\n\t\t\t\tstartRunning();\n\n\t\t\tbreak;\n\n\n\t\t\tcase \"/action/jump\":\n\n\t\t\t\tif ( localPlayer.controller.isJumping ) break;\n\t\t\t\tif ( localPlayer.controller.isOnSlope ) break;\n\t\t\t\tif ( !localPlayer.controller.isGrounded ) break;\n\n\t\t\t\tlocalPlayer.controller.jump();\n\t\t\t\tlocalPlayer.outfit.AnimationsHandler.jump();\n\n\t\t\tbreak;\n\n\n\t\t//  CONTROLS.\n\n\t\t\tcase \"/turn/front\":\n\t\t\t\tvar frontAngle = Math.PI - cameraControls.getFrontAngle();\n\t\t\t\tturnTo( frontAngle + Math.PI )();\n\t\t\tbreak;\n\t\t\tcase \"/turn/back\":\n\t\t\t\tvar frontAngle = Math.PI - cameraControls.getFrontAngle();\n\t\t\t\tturnTo( frontAngle )();\n\t\t\tbreak;\n\t\t\tcase \"/turn/left\":\n\t\t\t\tvar frontAngle = Math.PI - cameraControls.getFrontAngle();\n\t\t\t\tturnTo( frontAngle - Math.PI/2 )();\n\t\t\tbreak;\n\t\t\tcase \"/turn/right\":\n\t\t\t\tvar frontAngle = Math.PI - cameraControls.getFrontAngle();\n\t\t\t\tturnTo( frontAngle + Math.PI/2 )();\n\t\t\tbreak;\n\n\t\t\t\t//  GENDER.\n\n\t\t\tcase \"/gender\":\n\t\t\tcase \"/gender/\":\n\t\t\tcase \"/gender/NaN\":\n\t\t\tcase \"/gender/null\":\n\t\t\tcase \"/gender/none\":\n\t\t\tcase \"/gender/false\":\n\t\t\tcase \"/gender/undefined\":\n\n\t\t\tcase \"/gender/male\":\n\t\t\tcase \"/gender/trans\":\n\t\t\tcase \"/gender/female\":\n\t\t\tcase \"/gender/shemale\":\n\t\t\tcase \"/gender/skeleton\":\n\n\t\t\t\t(function(){\n\n\t\t\t\t\tvar gender = data.split(\"/\").pop();\n\t\t\t\t\tdebugMode && console.log(\"gender match:\", localPlayer.outfit.getGender(gender));\n\n\t\t\t\t\tif ( localPlayer.outfit.getGender(gender) ) return;\n\n\t\t\t\t\t/*\n                        localPlayer.outfit.direction.visible = false;\n                        $(localPlayer.outfit).one(\"change\", function(){\n                            setTimeout(function(){\n                                localPlayer.outfit.direction.visible = true;\n                            }, 250);\n                        });\n                    */\n\n\t\t\t\t\t//  Remove.\n\t\t\t\t\tlocalPlayer.outfit.removeAll();\n\n\t\t\t\t\t//  Set gender.\n\t\t\t\t\tlocalPlayer.outfit.setGender(gender);\n\n\t\t\t\t\t//  Add outfits.\n\t\t\t\t\tif ( !localPlayer.outfit.getGender() ) {\n\n\t\t\t\t\t\tlocalPlayer.outfit.add(\n\t\t\t\t\t\t\t{\"skeleton\": skeleton}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( localPlayer.outfit.getGender(\"male\") ) {\n\n\t\t\t\t\t\tlocalPlayer.outfit.add(\n\t\t\t\t\t\t\t{\"body\": male.body},\n\t\t\t\t\t\t\t{\"eyes\": male.eyes},\n\t\t\t\t\t\t\t{\"hairs\":male.hairs},\n\t\t\t\t\t\t\t{\"tshirt\":male.tshirt},\n\t\t\t\t\t\t\t{\"trousers\":male.trousers},\n\t\t\t\t\t\t\t{\"shoes\":male.shoes}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t} \n\n\t\t\t\t\tif ( localPlayer.outfit.getGender(\"female\") ) {\n\n\t\t\t\t\t\tlocalPlayer.outfit.add(\n\t\t\t\t\t\t\t{\"body\": female.body},\n\t\t\t\t\t\t\t{\"eyes\": female.eyes},\n\t\t\t\t\t\t\t{\"hairs\":female.hairs},\n\t\t\t\t\t\t\t//  {\"underwears\":female.underwears},\n\t\t\t\t\t\t\t{\"dress\":female.dress},\n\t\t\t\t\t\t\t{\"tshirt\":female.tshirt},\n\t\t\t\t\t\t\t{\"shoes\":female.shoes}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t//  Update controller.\n\t\t\t\t\tupdatetoIdling();\n\n\t\t\t\t\t//  Update materials.\n\t\t\t\t\tvar gender = localPlayer.outfit.getGender();\n\t\t\t\t\tif ( !gender ) return;\n\t\t\t\t\tfor (var key in window[gender]) {\n\t\t\t\t\t\tif ( key == undefined ) return;\n\t\t\t\t\t\t//  if ( window[gender][ key ] == undefined ) return;\n\t\t\t\t\t\twindow[gender][ key ].material.needsUpdate = true;\n\t\t\t\t\t}\n\n\t\t\t\t})();\n\n\t\t\t\tbreak;\n\n\t\t\t\t//  OUTFIT.\n\n\t\t\tcase \"/outfit/body\":\n\n\t\t\t\tif ( localPlayer.outfit.body ) {\n\n\t\t\t\t\t(function(){\n\n\t\t\t\t\t\tlocalPlayer.outfit.removeAll();\n\n\t\t\t\t\t\tlocalPlayer.outfit.add( {\"skeleton\": skeleton} );\n\n\t\t\t\t\t\tupdatetoIdling();  // important!\n\n\t\t\t\t\t\tskeleton.material.needsUpdate = true;\n\n\t\t\t\t\t})();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t(function(){\n\n\t\t\t\t\t\tvar gender = localPlayer.outfit.getGender();\n\n\t\t\t\t\t\tlocalPlayer.outfit.removeAll();\n\n\t\t\t\t\t\tlocalPlayer.outfit.add(\n\t\t\t\t\t\t\t{\"body\": window[gender].body},\n\t\t\t\t\t\t\t{\"eyes\": window[gender].eyes},\n\t\t\t\t\t\t\t{\"hairs\":window[gender].hairs},\n\t\t\t\t\t\t\t{\"underwears\":window[gender].underwears},\n\t\t\t\t\t\t\t{\"shoes\":window[gender].shoes}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tupdatetoIdling();\n\n\t\t\t\t\t\tfor (var key in window[gender]) {\n\t\t\t\t\t\t\tif ( key == undefined ) return;\n\t\t\t\t\t\t\t//  if ( window[gender][ key ] == undefined ) return;\n\t\t\t\t\t\t\twindow[gender][ key ].material.needsUpdate = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t})();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"/outfit/hairs\":\n\n\t\t\t\tif ( !localPlayer.outfit.hairs ) {\n\n\t\t\t\t\tadd(\"hairs\");\n\n\t\t\t\t} else {\n\n\t\t\t\t\tremove(\"hairs\");\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"/outfit/stockings\":\n\n\t\t\t\tif ( !localPlayer.outfit.getGender(\"female\") ) break;\n\n\t\t\t\tif ( !localPlayer.outfit.stockings ) {\n\n\t\t\t\t\tadd(\"stockings\");\n\n\t\t\t\t} else {\n\n\t\t\t\t\tremove(\"stockings\");\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"/outfit/underwears\":\n\n\t\t\t\tif ( !localPlayer.outfit.underwears ) {\n\n\t\t\t\t\tadd(\"underwears\");\n\n\t\t\t\t} else {\n\n\t\t\t\t\tremove(\"underwears\");\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"/outfit/costume\":\n\n\t\t\t\tif ( localPlayer.outfit.getGender(\"female\") ) {\n\t\t\t\t\tlocalPlayer.outfit.remove(\"dress\");\n\t\t\t\t}\n\n\t\t\t\tif ( !localPlayer.outfit.costume ) {\n\n\t\t\t\t\tadd(\"costume\");\n\n\t\t\t\t} else {\n\n\t\t\t\t\tremove(\"costume\");\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"/outfit/tshirt\":\n\n\t\t\t\tif ( !localPlayer.outfit.tshirt ) {\n\n\t\t\t\t\tadd(\"tshirt\");\n\n\t\t\t\t} else {\n\n\t\t\t\t\tremove(\"tshirt\");\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"/outfit/trousers\":\n\n\t\t\t\tif ( localPlayer.outfit.getGender(\"female\") ) {\n\t\t\t\t\tlocalPlayer.outfit.remove(\"dress\");\n\t\t\t\t}\n\n\t\t\t\tif ( !localPlayer.outfit.trousers ) {\n\n\t\t\t\t\tadd(\"trousers\");\n\n\t\t\t\t} else {\n\n\t\t\t\t\tremove(\"trousers\");\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"/outfit/dress\":\n\n\t\t\t\tif ( !localPlayer.outfit.getGender(\"female\") ) break;\n\n\t\t\t\tlocalPlayer.outfit.remove(\"costume\");\n\t\t\t\tlocalPlayer.outfit.remove(\"trousers\");\n\n\t\t\t\tif ( !localPlayer.outfit.dress ) {\n\n\t\t\t\t\tadd(\"dress\");\n\n\t\t\t\t} else {\n\n\t\t\t\t\tremove(\"dress\");\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"/outfit/shoes\":\n\n\t\t\t\tif ( !localPlayer.outfit.shoes ) {\n\n\t\t\t\t\tadd(\"shoes\");\n\n\t\t\t\t} else {\n\n\t\t\t\t\tremove(\"shoes\");\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t\t//  outfitSelectHandler.js\n\n\t\t\tcase \"/select/\":\n\t\t\tcase \"/select/NaN\":\n\t\t\tcase \"/select/null\":\n\t\t\tcase \"/select/false\":\n\t\t\tcase \"/select/undefined\":\n\n\t\t\t\tif ( !localPlayer.outfit.getGender() ) {\n\t\t\t\t\tlocalPlayer.outfit.removeAll();\n\t\t\t\t\tlocalPlayer.outfit.add({skeleton:skeleton});\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"/select/body\":\n\t\t\t\tif ( !localPlayer.outfit.getGender() ) break;\n\t\t\t\tremove(\"skeleton\");\n\t\t\t\tif ( !localPlayer.outfit.body ) add(\"body\");\n\t\t\t\tif ( !localPlayer.outfit.eyes ) add(\"eyes\");\n\t\t\t\tif ( !localPlayer.outfit.hairs ) add(\"hairs\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"/select/eyes\":\n\t\t\t\tif ( !localPlayer.outfit.getGender() ) break;\n\t\t\t\tremove(\"skeleton\");\n\t\t\t\tif ( !localPlayer.outfit.body ) add(\"body\");\n\t\t\t\tif ( !localPlayer.outfit.eyes ) add(\"eyes\");\n\t\t\t\tif ( !localPlayer.outfit.hairs ) add(\"hairs\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"/select/hairs\":\n\t\t\t\tif ( !localPlayer.outfit.getGender() ) break;\n\t\t\t\tremove(\"skeleton\");\n\t\t\t\tif ( !localPlayer.outfit.body ) add(\"body\");\n\t\t\t\tif ( !localPlayer.outfit.eyes ) add(\"eyes\");\n\t\t\t\tif ( !localPlayer.outfit.hairs ) add(\"hairs\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"/select/stockings\":\n\t\t\t\tif ( !localPlayer.outfit.getGender() ) break;\n\t\t\t\tremove(\"skeleton\");\n\t\t\t\tif ( !localPlayer.outfit.body ) add(\"body\");\n\t\t\t\tif ( !localPlayer.outfit.eyes ) add(\"eyes\");\n\t\t\t\tif ( !localPlayer.outfit.hairs ) add(\"hairs\");\n\t\t\t\tif ( !localPlayer.outfit.stockings ) add(\"stockings\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"/select/underwears\":\n\t\t\t\tif ( !localPlayer.outfit.getGender() ) break;\n\t\t\t\tremove(\"skeleton\");\n\t\t\t\tif ( !localPlayer.outfit.body ) add(\"body\");\n\t\t\t\tif ( !localPlayer.outfit.eyes ) add(\"eyes\");\n\t\t\t\tif ( !localPlayer.outfit.hairs ) add(\"hairs\");\n\t\t\t\tif ( !localPlayer.outfit.underwears ) add(\"underwears\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"/select/costume\":\n\t\t\t\tif ( !localPlayer.outfit.getGender() ) break;\n\t\t\t\tremove(\"skeleton\", \"dress\");\n\t\t\t\tif ( !localPlayer.outfit.body ) add(\"body\");\n\t\t\t\tif ( !localPlayer.outfit.eyes ) add(\"eyes\");\n\t\t\t\tif ( !localPlayer.outfit.hairs ) add(\"hairs\");\n\t\t\t\tif ( !localPlayer.outfit.costume ) add(\"costume\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"/select/tshirt\":\n\t\t\t\tif ( !localPlayer.outfit.getGender() ) break;\n\t\t\t\tremove(\"skeleton\");\n\t\t\t\tif ( !localPlayer.outfit.body ) add(\"body\");\n\t\t\t\tif ( !localPlayer.outfit.eyes ) add(\"eyes\");\n\t\t\t\tif ( !localPlayer.outfit.hairs ) add(\"hairs\");\n\t\t\t\tif ( !localPlayer.outfit.tshirt ) add(\"tshirt\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"/select/trousers\":\n\t\t\t\tif ( !localPlayer.outfit.getGender() ) break;\n\t\t\t\tremove(\"skeleton\");\n\t\t\t\tif ( !localPlayer.outfit.body ) add(\"body\");\n\t\t\t\tif ( !localPlayer.outfit.eyes ) add(\"eyes\");\n\t\t\t\tif ( !localPlayer.outfit.hairs ) add(\"hairs\");\n\t\t\t\tif ( !localPlayer.outfit.trousers ) add(\"trousers\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"/select/dress\":\n\t\t\t\tif ( !localPlayer.outfit.getGender() ) break;\n\t\t\t\tremove(\"skeleton\", \"costume\");\n\t\t\t\tif ( !localPlayer.outfit.body ) add(\"body\");\n\t\t\t\tif ( !localPlayer.outfit.eyes ) add(\"eyes\");\n\t\t\t\tif ( !localPlayer.outfit.hairs ) add(\"hairs\");\n\t\t\t\tif ( !localPlayer.outfit.dress ) add(\"dress\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"/select/shoes\":\n\t\t\t\tif ( !localPlayer.outfit.getGender() ) break;\n\t\t\t\tremove(\"skeleton\");\n\t\t\t\tif ( !localPlayer.outfit.body ) add(\"body\");\n\t\t\t\tif ( !localPlayer.outfit.eyes ) add(\"eyes\");\n\t\t\t\tif ( !localPlayer.outfit.hairs ) add(\"hairs\");\n\t\t\t\tif ( !localPlayer.outfit.shoes ) add(\"shoes\");\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif ( !localPlayer.outfit.getGender() ) break;\n\t\t\t\tremove(\"skeleton\");\n\t\t\t\tif ( !localPlayer.outfit.body ) add(\"body\");\n\t\t\t\tif ( !localPlayer.outfit.eyes ) add(\"eyes\");\n\t\t\t\tif ( !localPlayer.outfit.hairs ) add(\"hairs\");\n\t\t\t\tif ( !localPlayer.outfit.shoes ) add(\"shoes\");\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn localPlayer.outfit.toJSON();\n\n};\n\nfunction updatetoIdling(){\n\tlocalPlayer.controller.isIdling  = true;\n\tlocalPlayer.controller.isRunning = false;\n\tlocalPlayer.controller.isWalking = false;\n\tlocalPlayer.controller.movementSpeed = 0;\n}\n\nfunction startIdling(){\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isIdling  = true;\n\tlocalPlayer.controller.isRunning = false;\n\tlocalPlayer.controller.isWalking = false;\n\tlocalPlayer.controller.movementSpeed = 0;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"idle\");\n\tlocalPlayer.controller.dispatchEvent({type:\"startIdling\"});\n}\n\nfunction startWalking(){\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isIdling  = false;\n\tlocalPlayer.controller.isRunning = true;\n\tlocalPlayer.controller.isWalking = true;\n\tlocalPlayer.controller.movementSpeed = 28;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"walk\");\n}\n\nfunction startRunning(){\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isIdling  = false;\n\tlocalPlayer.controller.isRunning = true;\n\tlocalPlayer.controller.isWalking = false;\n\tlocalPlayer.controller.movementSpeed = 45;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"run\");\n}\n\nfunction add(){\n\n\tvar gender = localPlayer.outfit.getGender();\n\n\tif (!gender) return;\n\n\tfor (var arg in arguments) {\n\t\tvar name = arguments[arg];\n\n\t//\tlocalPlayer.outfit.add({[name]:window[gender][name]});\n\n\t\tvar object = {}; // important!\n\t\tobject[ name ] = window[ gender ][ name ];\n\t\tlocalPlayer.outfit.add( object );\n\t}\n\n\tfor (var key in window[gender]) {\n\t\tif ( !key ) return;\n\t\twindow[gender][ key ].material.needsUpdate = true;\n\t}\n\n}\n\nfunction remove(){\n\tfor (var arg in arguments) {\n\t\tvar name = arguments[arg];\n\t\tlocalPlayer.outfit.remove(name);\n\t}\n}\n\n\n//  action-helpers.js\n\n\nfunction mod( a, n ) { return ( a % n + n ) % n;  } // important!\n\nfunction degIntDirection(){\n\treturn parseInt( THREE.Math.radToDeg( localPlayer.controller.direction ) ) % 360;\n}\n\nfunction getDeltaAngle( current, target ) {\n\tvar a = mod( ( current - target ), 2 * Math.PI );\n\tvar b = mod( ( target - current ), 2 * Math.PI );\n\treturn a < b ? -a : b;\n}\n\nfunction updateDirectionControls(deg){\n\n\ttry {\n\n\t\t//  Update control tab direction controls.\n\t\t//  \"directionOutput\" and \"directionSlider\" \n\t\t//  has been parsed by control-tab.\n\n\t\tdirectionOutput.value = mod(deg, 360);\n\t\tdirectionSlider.value = mod(deg, 360);\n\n\t} \n\n\tcatch(err){;}\n\n}\n\nfunction turnTo( rad, immediate ){\n\n\tvar deltaAngle = getDeltaAngle( localPlayer.controller.direction, rad );\n\n\treturn function turn(){\n\t\twindowAnimationFrameRequestID = requestAnimationFrame( turn );\n\n\t\tif ( isNaN( deltaAngle ) ) {\n\t\t\tcancelAnimationFrame( windowAnimationFrameRequestID );\n\t\t\tlocalPlayer.outfit.update(); return;\n\t\t}\n\n\t\tif ( immediate ) {\n\t\t\tlocalPlayer.controller.direction += deltaAngle;\n\t\t\tcancelAnimationFrame( windowAnimationFrameRequestID );\n\t\t\tlocalPlayer.outfit.update(); return;\n\t\t}\n\n\t\tif ( Math.abs( deltaAngle ) < 0.000017453292519943296  ) {\n\t\t\tcancelAnimationFrame( windowAnimationFrameRequestID );\n\t\t\tupdateDirectionControls( round( THREE.Math.radToDeg(localPlayer.controller.direction), 0 ) ); // deg.\n\t\t\tlocalPlayer.outfit.update(); return;\n\t\t}\n\n\t\tlocalPlayer.controller.direction = mod( localPlayer.controller.direction += ( deltaAngle *= 0.5 ), 2 * Math.PI );\n\t\tupdateDirectionControls( round( THREE.Math.radToDeg(localPlayer.controller.direction), 0 ) ); // deg.\n\n\t}\n\n\t//  round.js  source: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"\n\n\tfunction round(number, precision) {\n\t\tvar shift = function (number, precision, reverseShift) {\n\t\t\tif (reverseShift) {\n\t\t\t\tprecision = -precision;\n\t\t\t}  \n\t\t\tnumArray = (\"\" + number).split(\"e\");\n\t\t\treturn +(numArray[0] + \"e\" + (numArray[1] ? (+numArray[1] + precision) : precision));\n\t\t};\n\t\treturn shift(Math.round(shift(number, precision, false)), precision, true);\n\t}\n\n}\n\n"
			},
			{
				"name": "localPlayerMaterialHandler.js",
				"source": "//  localPlayerMaterialHandler.js (v1.3.1)\n//  localPlayerApplyMaterial.js (v1.0) --> localPlayerMaterialHandler.js\n\nlocalPlayerMaterialHandler = function (){\n\n\tfor (var arg in arguments) {\n\n\t\tvar data = arguments[arg];\n\n\t//  Create and apply new material.\n\n\t\tif ( data.material ) {\n\n\t\t\tlocalPlayerApplyMaterial( data );\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t//  Apply material property value.\n\n\t\t//  var key = data.key;\n\t\t//  var slot = data.slot;\n\t\t//  var value = data.value;\n\t\t//  var gender = data.gender;\n\n\t\tvar material = window[ data.gender ][ data.slot ].material;\n\n\t\tswitch (data.key) {\n\n\t\t//  Colors.\n\n\t\t\tcase \"color\":\n\t\t\tcase \"emissive\":\n\t\t\t\tmaterial[data.key].setHex(data.value);\n\t\t\t\tbreak;\n\n\t\t//  Shading.\n\n\t\t\tcase \"shading\":\n\t\t\tcase \"skinning\":\n\t\t\t\tmaterial[data.key] = data.value;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t//  Normal scale.\n\n\t\t\tcase \"normalScale\":\n\t\t\t\tmaterial.normalScale.set( data.value, data.value );\n\t\t\t\tbreak;\n\n\n\t\t//  Textures.\n\n\t\t\tcase \"map\":\n\t\t\tcase \"aoMap\":\n\t\t\tcase \"envMap\":\n\t\t\tcase \"bumpMap\":\n\t\t\tcase \"alphaMap\":\n\t\t\tcase \"lightMap\":\n\t\t\tcase \"normalMap\":\n\t\t\tcase \"emissiveMap\":\n\t\t\tcase \"metalnessMap\":\n\t\t\tcase \"roughnessMap\":\n\t\t\tcase \"displacementMap\":\n\n\t\t\t//  costumized version of texturefromJSON(data.value);\n\n\t\t\t\tif (data.value == null) {\n\n\t\t\t\t\tif ( material[ data.key ] ) {\n\t\t\t\t\t\tvar oldTexture = material[ data.key ];\n\t\t\t\t\t\tmaterial[ data.key ] = null;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\t\toldTexture.dispose();\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar oldTexture;\n\t\t\t\t\tif (material[ data.key ] != null) oldTexture = material[data.key];\n\n\t\t\t\t\tvar newTexture = new THREE.Texture();\n\n\t\t\t\t\tfor ( var name in data.value ){\n\n\t\t\t\t\t\tswitch (name){\n\n\t\t\t\t\t\t//  case \"image\": // no image case.\n\n\t\t\t\t\t\t//  sourceFile.\n\n\t\t\t\t\t\t\tcase \"sourceFile\":\n\n\t\t\t\t\t\t\t\tnewTexture.sourceFile = data.value[ name ];\n\t\t\t\t\t\t\t\tvar url = data.value.sourceFile || data.value.image.src || data.value.image;\n\t\t\t\t\t\t\t\tvar img = new Image();\n\t\t\t\t\t\t\t\timg.crossOrigin = \"anonymous\";\n\t\t\t\t\t\t\t\t$(img).one(\"load\", function(){\n\t\t\t\t\t\t\t\t\tvar canvas = makePowerOfTwo( img, true );\n\t\t\t\t\t\t\t\t\tnewTexture.image = canvas;\n\t\t\t\t\t\t\t\t\tmaterial[data.key] = newTexture;\n\t\t\t\t\t\t\t\t\tmaterial[data.key].needsUpdate = true;\n\t\t\t\t\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\t\t\t\t\tif (canvas) $(img).remove();\n\t\t\t\t\t\t\t\t\tif (oldTexture) oldTexture.dispose();\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\timg.src = url;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t//  array to vector2.\n\n\t\t\t\t\t\t\tcase \"offset\":\n\t\t\t\t\t\t\tcase \"repeat\":\n\t\t\t\t\t\t\t\tif ( typeof(data.value[ name ]) != \"array\" ) break;\n\t\t\t\t\t\t\t\tif ( data.value[ name ].length != 2) break;\n\t\t\t\t\t\t\t\tnewTexture[ name ] = new THREE.Vector2();\n\t\t\t\t\t\t\t\tnewTexture[ name ].fromArray( data.value[ name ] );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t//  wrapS & wrapT.\n\t\t\t\t\t\t\tcase \"wrap\":\n\t\t\t\t\t\t\t\tif ( typeof(data.value[ name ]) != \"array\" ) break;\n\t\t\t\t\t\t\t\tif ( data.value[ name ].length != 2) break;\n\t\t\t\t\t\t\t\tnewTexture.wrapS = data.value[ name ][0];\n\t\t\t\t\t\t\t\tnewTexture.wrapT = data.value[ name ][1];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tnewTexture[ name ] = data.value[ name ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmaterial[data.key] = data.value;\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n"
			},
			{
				"name": "localPlayerTextureHandler.js",
				"source": "//  localPlayerTextureHandler.js (v1.0)\n\nlocalPlayerTextureHandler = function () {\n\n\tfor (var arg in arguments) {\n\n\t\tvar data = arguments[arg];\n\n\t\t//  var slot = data.slot;\n\t\t//  var maps = data.maps;     // array.\n\t\t//  var json = data.texture;  // json.\n\t\t//  var gender = data.gender;\n\n\t\t//  if (!window[ data.gender ][ data.slot ]) return;\n\t\t//  var material = window[ data.gender ][ data.slot ].material;\n\n\t\t/*\n            if ( data.maps.findIndex(function(item){ \n                return item == \"alphaMap\"; }) > -1) {\n                material.transparent = true;\n            }\n        */\n\n\t\tcaches.open(\"textures\").then(function(cache){\n\n\t\t\tif ( !data.slot ) throw \"null data slot.\";\n\t\t\tif ( !data.gender ) throw \"null data gender.\";\n\t\t\tif ( !data.texture.sourceFile ) throw \"null data sourceFile.\";\n\t\t\tif ( !window[data.gender][data.slot] ) throw \"outfit not found.\";\n\n\t\t\tvar material = window[ data.gender ][ data.slot ].material;\n\n\t\t\tcache.keys().then(function(requests){\n\n\t\t\t\tfunction findRequest(request){\n\t\t\t\t\treturn request.url = data.texture.sourceFile;\n\t\t\t\t}\n\n\t\t\t\tif ( requests.find( findRequest ) == undefined ) throw \"cache request not found.\";\n\n\t\t\t}).catch(function(err){\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\n\t\t\tcache.match(data.texture.sourceFile).then(function(response){\n\n\t\t\t\tif (!response) throw \"null response returned from cache.\";\n\t\t\t\treturn response.blob();\n\n\t\t\t}).then(function(blob){\n\n\t\t\t\tif (!blob) throw \"null blob returned from response.\";\n\n\t\t\t\tvar img = new Image();\n\t\t\t\timg.crossOrigin = \"anonymous\";  // important!\n\t\t\t\timg.addEventListener(\"load\", function(){\n\n\t\t\t\t\tvar texture = new THREE.Texture(img);\n\t\t\t\t\ttexture.sourceFile = data.texture.sourceFile; // important!\n\n\t\t\t\t\tdata.maps.forEach(function(map){\n\t\t\t\t\t\tvar oldTexture = material[map];\n\t\t\t\t\t\tmaterial[map] = null; // important!\n\t\t\t\t\t\tmaterial[map] = texture;\n\t\t\t\t\t\tmaterial[map].needsUpdate = true;\n\t\t\t\t\t\tif (oldTexture) oldTexture.dispose(); // important!\n\t\t\t\t\t});\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\twindow.URL.revokeObjectURL(img.src);\n\n\t\t\t\t\timg.remove();\n\n\t\t\t\t});\n\n\t\t\t\timg.src = window.URL.createObjectURL(blob);\n\n\t\t\t}).catch(function(err){\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\n\t\t}).catch(function(err){\n\t\t\tconsole.error(err);\n\t\t});\n\n\t}\n\n};\n\n//  localPlayerTextureRemoveHandler.js (v1.0)\n\nlocalPlayerTextureRemoveHandler = function (){\n\n\tfor (var arg in arguments) {\n\n\t\tvar data = arguments[arg];\n\n\t\t//  var map = data.map;\n\t\t//  var slot = data.slot;\n\t\t//  var gender = data.gender;\n\n\t\tvar material = window[ data.gender ][ data.slot ].material;\n\n\t\tif (material[ data.map ] == null) continue;  // important! (DO NOT USE \"return\")\n\n\t\tmaterial[ data.map ].dispose();\n\t\tmaterial[ data.map ] = null; // important!\n\t\tmaterial.needsUpdate = true; // important!\n\n\t\t//  Notify removal.\n\n\t\tif ( window.parent !== window && material[ data.map ] == null) {\n\n\t\t\tvar msg = [data.gender, data.slot, data.map, \"removed.\"].join(\" \");\n\n\t\t\tdebugMode && console.log( msg );\n\n\t\t\tvar element = document.createElement(\"h4\");\n\t\t\tvar content = new UI.Element( element );\n\t\t\tcontent.setTextAlign(\"center\");\n\t\t\tcontent.setTextContent( msg );\n\t\t\tmodal.show( content );\n\n\t\t}\n\n\t}\n\n};\n"
			},
			{
				"name": "localPlayerHandlerSignal.js",
				"source": "var Signal = signals.Signal;\n\noutfitToggled = new Signal();\nactionSelected = new Signal();\ngenderSelected = new Signal();\nturningSelected = new Signal();\n\nactionSelected.add(function( name ){\n\tvar command = \"/action/\" + name;\n\tlocalPlayerHandler( command );\n});\n\nturningSelected.add(function( name ){\n\tvar command = \"/turn/\" + name;\n\tlocalPlayerHandler( command );\n});\n\ngenderSelected.add(function( name ){\n\tvar command = \"/gender/\" + name;\n\tlocalPlayerHandler( command );\n});\n\noutfitToggled.add(function( name ){\n\tvar command = \"/outfit/\" + name;\n\tlocalPlayerHandler( command );\n});\n"
			}],
		"1652D4F6-C21D-4225-8FCF-7E500CA0F75C": [
			{
				"name": "side-panel.js",
				"source": "//\tside-panel.js\n\nSidePanel = function(){\n\n\tvar container = new UI.Panel();\n\tcontainer.setId(\"right-side\");\n\tcontainer.setClass(\"side-panel\");\n\n//\tcss.\n\n\tcontainer.setTop(\"0\");\n\tcontainer.setRight(\"0\");\n\tcontainer.setBottom(\"0\");\n\tcontainer.setWidth(\"380px\");\n\tcontainer.setColor(\"#eee\");\n\tcontainer.setPosition(\"absolute\");\n\tcontainer.setBackgroundColor(\"rgba(0,0,0,0.4)\");\n\tcontainer.dom.style[\"-webkit-transform\"] = \"translateX( 340px )\";\n\tcontainer.dom.style[\"-webkit-transition\"] = \"-webkit-transform 500ms ease-out\";\n\n\treturn container;\n\n};\n\ndebugMode && console.log( \"player:\", player );\n\nvar rightSide = new SidePanel();\nplayer.dom.appendChild( rightSide.dom );\n\nrightSide.dom.addEventListener(\"mouseenter\", function(){\n\tthis.classList.toggle( \"pinned\", true );\n\tthis.style[\"-webkit-transform\"] = \"translateX( 0 )\";\n});\n\nrightSide.dom.addEventListener(\"mouseleave\", function(){\n\tthis.classList.toggle( \"pinned\", false );\n\tthis.style[\"-webkit-transform\"] = \"translateX( 340px )\";\n});\n\nfunction toggleSidePanel(button){\n\tbutton.pinned = !button.pinned;\n\tbutton.classList.toggle( \"pinned\", button.pinned );\n\tbutton.parentElement.classList.toggle( \"pinned\", button.pinned );\n};\n\nfunction stop(){\n\n\trightSide.dom.remove();\n\n}\n"
			}],
		"3107380F-0EAF-426C-A024-7F9FC6587E21": [
			{
				"name": "modal.js",
				"source": "//  modal.js\n/*\n\tmodal = new UI.Modal();\n\tdocument.body.appendChild( modal.dom );\n\n\n\tfunction stop(){\n\n\t\tmodal.remove();\n\n\t}\n*/"
			}]
	},
	"camera": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "929DC4D8-E361-442F-9EF0-D84A2AF7EE67",
			"type": "PerspectiveCamera",
			"name": "Camera",
			"matrix": [-0.19873428344726562,-7.196927498398509e-10,0.9800532460212708,0,0.18584676086902618,0.9818557500839233,0.037685833871364594,0,-0.9622710943222046,0.1896292120218277,-0.1951284408569336,0,-88.7037353515625,17.480331420898438,-17.98725700378418,1],
			"fov": 50,
			"zoom": 1,
			"near": 0.1,
			"far": 10000,
			"focus": 10,
			"aspect": 1.848623853211009,
			"filmGauge": 35,
			"filmOffset": 0
		}
	},
	"scene": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"geometries": [
			{
				"uuid": "A73A1BE0-7810-43B8-8EF3-46EDD1675DF7",
				"type": "PlaneBufferGeometry",
				"width": 10000,
				"height": 10000,
				"widthSegments": 1,
				"heightSegments": 1
			}],
		"materials": [
			{
				"uuid": "0F85C1AE-EE0E-4B8A-A2E3-FEBE42145A3B",
				"type": "MeshLambertMaterial",
				"color": 16777215,
				"emissive": 3684408,
				"alphaTest": 0.5
			}],
		"object": {
			"uuid": "51901104-FADB-43D1-B2A3-15BDFA72A48D",
			"type": "Scene",
			"name": "Scene",
			"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],
			"children": [
				{
					"uuid": "D010E9DD-C8BD-47D5-90A4-D6BDBD67C286",
					"type": "Object3D",
					"name": "Animations",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "98A18925-6779-4954-A17C-FB56DCADA3FA",
					"type": "Object3D",
					"name": "Male",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "46DBECB9-D7F9-4B08-96FA-809A02D567F5",
					"type": "DirectionalLight",
					"name": "Camera Light",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,-13.484701156616211,1.535832166671753,-4.711942195892334,1],
					"color": 16777215,
					"intensity": 1
				},
				{
					"uuid": "3D2F0785-3773-4199-8450-B10230F2242E",
					"type": "Object3D",
					"name": "Female",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "7CEDA1F4-6645-4350-9266-79A7415FE7EB",
					"type": "Object3D",
					"name": "Skeleton",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "14E81EFF-CDEF-42C1-A2A2-A36BCF7D5ACD",
					"type": "Mesh",
					"name": "Ground",
					"receiveShadow": true,
					"visible": false,
					"matrix": [1,0,0,0,0,0.0007957991911098361,-0.9999997019767761,0,0,0.9999997019767761,0.0007957991911098361,0,0,0,0,1],
					"geometry": "A73A1BE0-7810-43B8-8EF3-46EDD1675DF7",
					"material": "0F85C1AE-EE0E-4B8A-A2E3-FEBE42145A3B"
				},
				{
					"uuid": "5067E960-2CBE-4F57-A90B-CA980CDFEDBA",
					"type": "Group",
					"name": "App UI",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],
					"children": [
						{
							"uuid": "3107380F-0EAF-426C-A024-7F9FC6587E21",
							"type": "Object3D",
							"name": "Modal UI",
							"visible": false,
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
						},
						{
							"uuid": "1652D4F6-C21D-4225-8FCF-7E500CA0F75C",
							"type": "Object3D",
							"name": "Side Panel UI",
							"visible": false,
							"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
						}]
				},
				{
					"uuid": "359671E7-8ACE-4366-8488-28F13C5A6A8C",
					"type": "Object3D",
					"name": "LocalPlayerHandler",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				}]
		}
	}
}